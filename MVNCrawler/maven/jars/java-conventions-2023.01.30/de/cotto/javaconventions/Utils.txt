Compiled from "Utils.java"
public class de.cotto.javaconventions.Utils {
  public de.cotto.javaconventions.Utils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.gradle.api.artifacts.MinimalExternalModuleDependency getFromCatalog(org.gradle.api.Project, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method getLibs:(Lorg/gradle/api/Project;)Lorg/gradle/api/artifacts/VersionCatalog;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #13,  2           // InterfaceMethod org/gradle/api/artifacts/VersionCatalog.findLibrary:(Ljava/lang/String;)Ljava/util/Optional;
      12: invokevirtual #19                 // Method java/util/Optional.orElseThrow:()Ljava/lang/Object;
      15: checkcast     #25                 // class org/gradle/api/provider/Provider
      18: invokeinterface #27,  1           // InterfaceMethod org/gradle/api/provider/Provider.get:()Ljava/lang/Object;
      23: checkcast     #30                 // class org/gradle/api/artifacts/MinimalExternalModuleDependency
      26: areturn

  public static java.lang.String getVersionFromCatalog(org.gradle.api.Project, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method getLibs:(Lorg/gradle/api/Project;)Lorg/gradle/api/artifacts/VersionCatalog;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #32,  2           // InterfaceMethod org/gradle/api/artifacts/VersionCatalog.findVersion:(Ljava/lang/String;)Ljava/util/Optional;
      12: invokevirtual #19                 // Method java/util/Optional.orElseThrow:()Ljava/lang/Object;
      15: checkcast     #35                 // class org/gradle/api/artifacts/VersionConstraint
      18: invokeinterface #37,  1           // InterfaceMethod org/gradle/api/artifacts/VersionConstraint.getRequiredVersion:()Ljava/lang/String;
      23: areturn

  public static <T extends org.gradle.api.Task> void shouldRunBeforeTests(org.gradle.api.Project, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod org/gradle/api/Project.getTasks:()Lorg/gradle/api/tasks/TaskContainer;
       6: aload_1
       7: invokeinterface #47,  2           // InterfaceMethod org/gradle/api/tasks/TaskContainer.withType:(Ljava/lang/Class;)Lorg/gradle/api/tasks/TaskCollection;
      12: astore_2
      13: aload_0
      14: invokestatic  #53                 // Method testTasks:(Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskCollection;
      17: aload_2
      18: invokedynamic #57,  0             // InvokeDynamic #0:accept:(Lorg/gradle/api/tasks/TaskCollection;)Ljava/util/function/Consumer;
      23: invokeinterface #61,  2           // InterfaceMethod org/gradle/api/tasks/TaskCollection.forEach:(Ljava/util/function/Consumer;)V
      28: return

  public static <T extends org.gradle.api.Task> void mustRunAfterTests(org.gradle.api.Project, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method testTasks:(Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskCollection;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokestatic  #67                 // Method tasksWithType:(Lorg/gradle/api/Project;Ljava/lang/Class;)Lorg/gradle/api/tasks/TaskCollection;
      10: aload_2
      11: invokedynamic #71,  0             // InvokeDynamic #1:accept:(Lorg/gradle/api/tasks/TaskCollection;)Ljava/util/function/Consumer;
      16: invokeinterface #61,  2           // InterfaceMethod org/gradle/api/tasks/TaskCollection.forEach:(Ljava/util/function/Consumer;)V
      21: return

  private static org.gradle.api.artifacts.VersionCatalog getLibs(org.gradle.api.Project);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod org/gradle/api/Project.getExtensions:()Lorg/gradle/api/plugins/ExtensionContainer;
       6: ldc           #76                 // class org/gradle/api/artifacts/VersionCatalogsExtension
       8: invokeinterface #78,  2           // InterfaceMethod org/gradle/api/plugins/ExtensionContainer.getByType:(Ljava/lang/Class;)Ljava/lang/Object;
      13: checkcast     #76                 // class org/gradle/api/artifacts/VersionCatalogsExtension
      16: ldc           #84                 // String libs
      18: invokeinterface #86,  2           // InterfaceMethod org/gradle/api/artifacts/VersionCatalogsExtension.named:(Ljava/lang/String;)Lorg/gradle/api/artifacts/VersionCatalog;
      23: areturn

  private static org.gradle.api.tasks.TaskCollection<org.gradle.api.tasks.testing.Test> testTasks(org.gradle.api.Project);
    Code:
       0: aload_0
       1: ldc           #90                 // class org/gradle/api/tasks/testing/Test
       3: invokestatic  #67                 // Method tasksWithType:(Lorg/gradle/api/Project;Ljava/lang/Class;)Lorg/gradle/api/tasks/TaskCollection;
       6: areturn

  private static <T extends org.gradle.api.Task> org.gradle.api.tasks.TaskCollection<T> tasksWithType(org.gradle.api.Project, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod org/gradle/api/Project.getTasks:()Lorg/gradle/api/tasks/TaskContainer;
       6: aload_1
       7: invokeinterface #47,  2           // InterfaceMethod org/gradle/api/tasks/TaskContainer.withType:(Ljava/lang/Class;)Lorg/gradle/api/tasks/TaskCollection;
      12: areturn

  public static java.io.File getResourceFile(org.gradle.api.Project, java.lang.String);
    Code:
       0: ldc           #8                  // class de/cotto/javaconventions/Utils
       2: aload_1
       3: invokevirtual #92                 // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
       6: invokestatic  #98                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #104                // class java/net/URL
      12: astore_2
      13: aload_0
      14: invokeinterface #106,  1          // InterfaceMethod org/gradle/api/Project.getResources:()Lorg/gradle/api/resources/ResourceHandler;
      19: invokeinterface #110,  1          // InterfaceMethod org/gradle/api/resources/ResourceHandler.getText:()Lorg/gradle/api/resources/TextResourceFactory;
      24: aload_2
      25: invokeinterface #116,  2          // InterfaceMethod org/gradle/api/resources/TextResourceFactory.fromUri:(Ljava/lang/Object;)Lorg/gradle/api/resources/TextResource;
      30: invokeinterface #122,  1          // InterfaceMethod org/gradle/api/resources/TextResource.asFile:()Ljava/io/File;
      35: areturn

  private static void lambda$mustRunAfterTests$1(org.gradle.api.tasks.TaskCollection, org.gradle.api.Task);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #2                  // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: aastore
       9: invokeinterface #128,  2          // InterfaceMethod org/gradle/api/Task.mustRunAfter:([Ljava/lang/Object;)Lorg/gradle/api/Task;
      14: pop
      15: return

  private static void lambda$shouldRunBeforeTests$0(org.gradle.api.tasks.TaskCollection, org.gradle.api.tasks.testing.Test);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #2                  // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: aastore
       9: invokevirtual #134                // Method org/gradle/api/tasks/testing/Test.shouldRunAfter:([Ljava/lang/Object;)Lorg/gradle/api/tasks/TaskDependency;
      12: pop
      13: return
}
