Compiled from "IJsonBindingsTranslator.java"
public interface manifold.json.rt.api.IJsonBindingsTranslator {
  public static final manifold.util.concurrent.LocklessLazyVar<java.util.Set<manifold.json.rt.api.IJsonBindingsTranslator>> CODECS;

  public static manifold.json.rt.api.IJsonBindingsTranslator get(java.lang.String);
    Code:
       0: getstatic     #1                  // Field CODECS:Lmanifold/util/concurrent/LocklessLazyVar;
       3: invokevirtual #2                  // Method manifold/util/concurrent/LocklessLazyVar.get:()Ljava/lang/Object;
       6: checkcast     #3                  // class java/util/Set
       9: invokeinterface #4,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: aload_0
      15: invokedynamic #5,  0              // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      20: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: invokeinterface #7,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      30: aload_0
      31: invokedynamic #8,  0              // InvokeDynamic #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      36: invokevirtual #9                  // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      39: checkcast     #10                 // class manifold/json/rt/api/IJsonBindingsTranslator
      42: areturn

  public abstract java.lang.String getName();

  public abstract java.lang.String fromBindings(java.lang.Object);

  public abstract void fromBindings(java.lang.Object, java.lang.StringBuilder);

  public abstract void fromBindings(java.lang.Object, java.lang.String, java.lang.StringBuilder, int);

  public abstract java.lang.Object toBindings(java.lang.String);

  public abstract java.lang.Object toBindings(java.lang.String, boolean);

  public abstract java.lang.Object toBindings(java.lang.String, boolean, boolean);

  private static java.lang.RuntimeException lambda$get$2(java.lang.String);
    Code:
       0: new           #11                 // class java/lang/RuntimeException
       3: dup
       4: new           #12                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #14                 // String Missing JSON bindings encoder for :
      13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #17                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: areturn

  private static boolean lambda$get$1(java.lang.String, manifold.json.rt.api.IJsonBindingsTranslator);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod getName:()Ljava/lang/String;
       6: aload_0
       7: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ireturn

  private static java.util.Set lambda$static$0();
    Code:
       0: new           #20                 // class java/util/HashSet
       3: dup
       4: invokespecial #21                 // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #10                 // class manifold/json/rt/api/IJsonBindingsTranslator
      11: ldc           #10                 // class manifold/json/rt/api/IJsonBindingsTranslator
      13: invokevirtual #22                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      16: invokestatic  #23                 // Method manifold/rt/api/util/ServiceUtil.loadRegisteredServices:(Ljava/util/Set;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;
      19: pop
      20: aload_0
      21: areturn

  static {};
    Code:
       0: invokedynamic #24,  0             // InvokeDynamic #2:init:()Lmanifold/util/concurrent/LocklessLazyVar$LazyVarInit;
       5: invokestatic  #25                 // Method manifold/util/concurrent/LocklessLazyVar.make:(Lmanifold/util/concurrent/LocklessLazyVar$LazyVarInit;)Lmanifold/util/concurrent/LocklessLazyVar;
       8: putstatic     #1                  // Field CODECS:Lmanifold/util/concurrent/LocklessLazyVar;
      11: return
}
