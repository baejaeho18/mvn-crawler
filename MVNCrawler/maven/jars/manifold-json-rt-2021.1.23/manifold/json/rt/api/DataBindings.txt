Compiled from "DataBindings.java"
public class manifold.json.rt.api.DataBindings implements manifold.rt.api.Bindings {
  private java.util.Map<java.lang.String, java.lang.Object> _map;

  public manifold.json.rt.api.DataBindings(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #4                  // Field _map:Ljava/util/Map;
      21: return

  public manifold.json.rt.api.DataBindings();
    Code:
       0: aload_0
       1: new           #5                  // class java/util/LinkedHashMap
       4: dup
       5: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
       8: invokespecial #7                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public manifold.json.rt.api.DataBindings(int);
    Code:
       0: aload_0
       1: new           #5                  // class java/util/LinkedHashMap
       4: dup
       5: iload_1
       6: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":(I)V
       9: invokespecial #7                  // Method "<init>":(Ljava/util/Map;)V
      12: return

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #9                  // class manifold/ext/rt/api/IBindingsBacked
       4: ifeq          34
       7: new           #10                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #11                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #13                 // String Non-raw bindings:
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: invokespecial #18                 // Method checkKey:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #4                  // Field _map:Ljava/util/Map;
      43: aload_1
      44: aload_2
      45: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #20                 // String toMerge map is null
      10: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          78
      35: aload_2
      36: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #26                 // class java/util/Map$Entry
      44: astore_3
      45: aload_3
      46: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #28                 // class java/lang/String
      54: astore        4
      56: aload_0
      57: aload         4
      59: invokespecial #18                 // Method checkKey:(Ljava/lang/Object;)V
      62: aload_0
      63: aload         4
      65: aload_3
      66: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: invokevirtual #30                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: goto          26
      78: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkKey:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #4                  // Field _map:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #32,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkKey:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #4                  // Field _map:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method checkKey:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #4                  // Field _map:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #37,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<java.lang.Object> values();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/Map;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  private void checkKey(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #40                 // String key can not be null
      10: invokespecial #21                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: instanceof    #28                 // class java/lang/String
      18: ifne          31
      21: new           #41                 // class java/lang/ClassCastException
      24: dup
      25: ldc           #42                 // String key should be a String
      27: invokespecial #43                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: ldc           #44                 // String
      34: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          50
      40: new           #10                 // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #46                 // String key can not be empty
      46: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class manifold/ext/rt/api/IBindingsBacked
       4: ifeq          17
       7: aload_1
       8: checkcast     #9                  // class manifold/ext/rt/api/IBindingsBacked
      11: invokeinterface #47,  1           // InterfaceMethod manifold/ext/rt/api/IBindingsBacked.getBindings:()Lmanifold/rt/api/Bindings;
      16: astore_1
      17: aload_0
      18: aload_1
      19: if_acmpne     24
      22: iconst_1
      23: ireturn
      24: aload_1
      25: ifnull        39
      28: aload_0
      29: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: aload_1
      33: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: if_acmpeq     41
      39: iconst_0
      40: ireturn
      41: aload_1
      42: checkcast     #49                 // class manifold/json/rt/api/DataBindings
      45: astore_2
      46: aload_0
      47: getfield      #4                  // Field _map:Ljava/util/Map;
      50: aload_2
      51: getfield      #4                  // Field _map:Ljava/util/Map;
      54: invokestatic  #50                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      57: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #51                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field _map:Ljava/util/Map;
      10: aastore
      11: invokestatic  #52                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class java/lang/String
       5: aload_2
       6: invokevirtual #30                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
