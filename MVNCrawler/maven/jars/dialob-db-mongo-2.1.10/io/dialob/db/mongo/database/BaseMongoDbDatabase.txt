Compiled from "BaseMongoDbDatabase.java"
public abstract class io.dialob.db.mongo.database.BaseMongoDbDatabase<T, M extends T, R extends org.springframework.data.mongodb.repository.MongoRepository<M, java.lang.String>> {
  private static final org.slf4j.Logger LOGGER;

  protected final R repository;

  io.dialob.db.mongo.database.BaseMongoDbDatabase(R);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field repository:Lorg/springframework/data/mongodb/repository/MongoRepository;
       9: return

  <A> A doMongo(com.mongodb.Function<R, A>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field repository:Lorg/springframework/data/mongodb/repository/MongoRepository;
       5: invokeinterface #3,  2            // InterfaceMethod com/mongodb/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn
      11: astore_2
      12: new           #5                  // class io/dialob/db/spi/exceptions/DatabaseUnauthorizedException
      15: dup
      16: aload_2
      17: invokevirtual #6                  // Method org/springframework/dao/PermissionDeniedDataAccessException.getMessage:()Ljava/lang/String;
      20: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      25: invokespecial #8                  // Method io/dialob/db/spi/exceptions/DatabaseUnauthorizedException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: astore_2
      30: new           #10                 // class io/dialob/db/spi/exceptions/DocumentConflictException
      33: dup
      34: aload_2
      35: invokevirtual #11                 // Method org/springframework/dao/ConcurrencyFailureException.getMessage:()Ljava/lang/String;
      38: invokespecial #12                 // Method io/dialob/db/spi/exceptions/DocumentConflictException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: astore_2
      43: getstatic     #14                 // Field LOGGER:Lorg/slf4j/Logger;
      46: ldc           #15                 // String Database access failure.
      48: aload_2
      49: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: new           #17                 // class io/dialob/db/spi/exceptions/DatabaseServiceDownException
      57: dup
      58: aload_2
      59: invokevirtual #18                 // Method org/springframework/dao/NonTransientDataAccessException.getMessage:()Ljava/lang/String;
      62: invokedynamic #19,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      67: invokespecial #20                 // Method io/dialob/db/spi/exceptions/DatabaseServiceDownException."<init>":(Ljava/lang/String;)V
      70: athrow
    Exception table:
       from    to  target type
           0    10    11   Class org/springframework/dao/PermissionDeniedDataAccessException
           0    10    29   Class org/springframework/dao/ConcurrencyFailureException
           0    10    42   Class org/springframework/dao/NonTransientDataAccessException

  protected java.lang.String toMongoId(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected java.lang.String toPublicId(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected T toPublic(T);
    Code:
       0: aload_1
       1: areturn

  protected abstract M toMongo(T);

  public T findOne(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #21,  0             // InvokeDynamic #2:apply:(Lio/dialob/db/mongo/database/BaseMongoDbDatabase;Ljava/lang/String;)Lcom/mongodb/Function;
       8: invokevirtual #22                 // Method doMongo:(Lcom/mongodb/Function;)Ljava/lang/Object;
      11: areturn

  public T findOne(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #23                 // Method findOne:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public boolean exists(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #24,  0             // InvokeDynamic #3:apply:(Lio/dialob/db/mongo/database/BaseMongoDbDatabase;Ljava/lang/String;)Lcom/mongodb/Function;
       8: invokevirtual #22                 // Method doMongo:(Lcom/mongodb/Function;)Ljava/lang/Object;
      11: checkcast     #25                 // class java/lang/Boolean
      14: invokevirtual #26                 // Method java/lang/Boolean.booleanValue:()Z
      17: ireturn

  public boolean delete(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #27,  0             // InvokeDynamic #4:apply:(Lio/dialob/db/mongo/database/BaseMongoDbDatabase;Ljava/lang/String;)Lcom/mongodb/Function;
       8: invokevirtual #22                 // Method doMongo:(Lcom/mongodb/Function;)Ljava/lang/Object;
      11: checkcast     #25                 // class java/lang/Boolean
      14: invokevirtual #26                 // Method java/lang/Boolean.booleanValue:()Z
      17: ireturn

  public T save(java.lang.String, T);
    Code:
       0: aload_0
       1: aload_0
       2: aload_2
       3: invokedynamic #28,  0             // InvokeDynamic #5:apply:(Lio/dialob/db/mongo/database/BaseMongoDbDatabase;Ljava/lang/Object;)Lcom/mongodb/Function;
       8: invokevirtual #22                 // Method doMongo:(Lcom/mongodb/Function;)Ljava/lang/Object;
      11: areturn

  private java.lang.Object lambda$save$3(java.lang.Object, org.springframework.data.mongodb.repository.MongoRepository);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method toMongo:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     20
      10: new           #30                 // class io/dialob/db/spi/exceptions/DocumentCorruptedException
      13: dup
      14: ldc           #31                 // String invalid_id
      16: invokespecial #32                 // Method io/dialob/db/spi/exceptions/DocumentCorruptedException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: aload_2
      22: aload_3
      23: invokeinterface #33,  2           // InterfaceMethod org/springframework/data/mongodb/repository/MongoRepository.save:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokevirtual #34                 // Method toPublic:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn

  private java.lang.Boolean lambda$delete$2(java.lang.String, org.springframework.data.mongodb.repository.MongoRepository);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method toMongoId:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     20
      10: new           #36                 // class io/dialob/db/spi/exceptions/DocumentNotFoundException
      13: dup
      14: ldc           #37                 // String not_found
      16: invokespecial #38                 // Method io/dialob/db/spi/exceptions/DocumentNotFoundException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_2
      21: aload_3
      22: invokeinterface #39,  2           // InterfaceMethod org/springframework/data/mongodb/repository/MongoRepository.deleteById:(Ljava/lang/Object;)V
      27: iconst_1
      28: invokestatic  #40                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: areturn

  private java.lang.Boolean lambda$exists$1(java.lang.String, org.springframework.data.mongodb.repository.MongoRepository);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method toMongoId:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     15
      10: iconst_0
      11: invokestatic  #40                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_2
      16: aload_3
      17: invokeinterface #41,  2           // InterfaceMethod org/springframework/data/mongodb/repository/MongoRepository.existsById:(Ljava/lang/Object;)Z
      22: invokestatic  #40                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn

  private java.lang.Object lambda$findOne$0(java.lang.String, org.springframework.data.mongodb.repository.MongoRepository);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method toMongoId:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: invokestatic  #42                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       9: astore        4
      11: aload_3
      12: ifnull        24
      15: aload_2
      16: aload_3
      17: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/mongodb/repository/MongoRepository.findById:(Ljava/lang/Object;)Ljava/util/Optional;
      22: astore        4
      24: aload         4
      26: invokevirtual #44                 // Method java/util/Optional.isPresent:()Z
      29: ifne          42
      32: new           #36                 // class io/dialob/db/spi/exceptions/DocumentNotFoundException
      35: dup
      36: ldc           #37                 // String not_found
      38: invokespecial #38                 // Method io/dialob/db/spi/exceptions/DocumentNotFoundException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload         4
      44: invokevirtual #45                 // Method java/util/Optional.get:()Ljava/lang/Object;
      47: areturn

  static {};
    Code:
       0: ldc           #46                 // class io/dialob/db/mongo/database/BaseMongoDbDatabase
       2: invokestatic  #47                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #14                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
