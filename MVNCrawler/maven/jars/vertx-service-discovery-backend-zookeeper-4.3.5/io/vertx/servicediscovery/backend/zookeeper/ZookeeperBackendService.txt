Compiled from "ZookeeperBackendService.java"
public class io.vertx.servicediscovery.backend.zookeeper.ZookeeperBackendService implements io.vertx.servicediscovery.spi.ServiceDiscoveryBackend,org.apache.curator.framework.state.ConnectionStateListener {
  private static final java.nio.charset.Charset CHARSET;

  private org.apache.curator.framework.CuratorFramework client;

  private java.lang.String basePath;

  private boolean ephemeral;

  private boolean guaranteed;

  private io.vertx.core.Vertx vertx;

  private org.apache.curator.framework.state.ConnectionState connectionState;

  private boolean canBeReadOnly;

  private int connectionTimeoutMs;

  public io.vertx.servicediscovery.backend.zookeeper.ZookeeperBackendService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/curator/framework/state/ConnectionState.LOST:Lorg/apache/curator/framework/state/ConnectionState;
       8: putfield      #3                  // Field connectionState:Lorg/apache/curator/framework/state/ConnectionState;
      11: return

  public void init(io.vertx.core.Vertx, io.vertx.core.json.JsonObject);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field vertx:Lio/vertx/core/Vertx;
       5: aload_2
       6: ldc           #5                  // String connection
       8: invokevirtual #6                  // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      11: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #8                  // class java/lang/String
      17: astore_3
      18: aload_2
      19: ldc           #9                  // String maxRetries
      21: iconst_3
      22: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: invokevirtual #11                 // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      28: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      31: istore        4
      33: aload_2
      34: ldc           #13                 // String baseSleepTimeBetweenRetries
      36: sipush        1000
      39: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokevirtual #11                 // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      45: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      48: istore        5
      50: aload_0
      51: aload_2
      52: ldc           #14                 // String canBeReadOnly
      54: iconst_0
      55: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      58: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.getBoolean:(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
      61: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
      64: putfield      #18                 // Field canBeReadOnly:Z
      67: aload_0
      68: aload_2
      69: ldc           #19                 // String connectionTimeoutMs
      71: sipush        1000
      74: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: invokevirtual #11                 // Method io/vertx/core/json/JsonObject.getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      80: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      83: putfield      #20                 // Field connectionTimeoutMs:I
      86: aload_0
      87: aload_2
      88: ldc           #21                 // String basePath
      90: ldc           #22                 // String /services
      92: invokevirtual #23                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      95: putfield      #24                 // Field basePath:Ljava/lang/String;
      98: aload_0
      99: aload_2
     100: ldc           #25                 // String ephemeral
     102: iconst_0
     103: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     106: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.getBoolean:(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
     109: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
     112: putfield      #26                 // Field ephemeral:Z
     115: aload_0
     116: aload_2
     117: ldc           #27                 // String guaranteed
     119: iconst_0
     120: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: invokevirtual #16                 // Method io/vertx/core/json/JsonObject.getBoolean:(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;
     126: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
     129: putfield      #28                 // Field guaranteed:Z
     132: aload_0
     133: invokestatic  #29                 // Method org/apache/curator/framework/CuratorFrameworkFactory.builder:()Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
     136: aload_0
     137: getfield      #18                 // Field canBeReadOnly:Z
     140: invokevirtual #30                 // Method org/apache/curator/framework/CuratorFrameworkFactory$Builder.canBeReadOnly:(Z)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
     143: aload_3
     144: invokevirtual #31                 // Method org/apache/curator/framework/CuratorFrameworkFactory$Builder.connectString:(Ljava/lang/String;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
     147: aload_0
     148: getfield      #20                 // Field connectionTimeoutMs:I
     151: invokevirtual #32                 // Method org/apache/curator/framework/CuratorFrameworkFactory$Builder.connectionTimeoutMs:(I)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
     154: new           #33                 // class org/apache/curator/retry/ExponentialBackoffRetry
     157: dup
     158: iload         5
     160: iload         4
     162: invokespecial #34                 // Method org/apache/curator/retry/ExponentialBackoffRetry."<init>":(II)V
     165: invokevirtual #35                 // Method org/apache/curator/framework/CuratorFrameworkFactory$Builder.retryPolicy:(Lorg/apache/curator/RetryPolicy;)Lorg/apache/curator/framework/CuratorFrameworkFactory$Builder;
     168: invokevirtual #36                 // Method org/apache/curator/framework/CuratorFrameworkFactory$Builder.build:()Lorg/apache/curator/framework/CuratorFramework;
     171: putfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
     174: aload_0
     175: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
     178: invokeinterface #38,  1           // InterfaceMethod org/apache/curator/framework/CuratorFramework.getConnectionStateListenable:()Lorg/apache/curator/framework/listen/Listenable;
     183: aload_0
     184: invokeinterface #39,  2           // InterfaceMethod org/apache/curator/framework/listen/Listenable.addListener:(Ljava/lang/Object;)V
     189: aload_0
     190: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
     193: invokeinterface #40,  1           // InterfaceMethod org/apache/curator/framework/CuratorFramework.start:()V
     198: return

  public void store(io.vertx.servicediscovery.Record, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.servicediscovery.Record>>);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
       4: ifnull        19
       7: aload_2
       8: ldc           #42                 // String The record has already been registered
      10: invokestatic  #43                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/String;)Lio/vertx/core/Future;
      13: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      18: return
      19: invokestatic  #45                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      22: invokevirtual #46                 // Method java/util/UUID.toString:()Ljava/lang/String;
      25: astore_3
      26: aload_1
      27: aload_3
      28: invokevirtual #47                 // Method io/vertx/servicediscovery/Record.setRegistration:(Ljava/lang/String;)Lio/vertx/servicediscovery/Record;
      31: pop
      32: aload_1
      33: invokevirtual #48                 // Method io/vertx/servicediscovery/Record.toJson:()Lio/vertx/core/json/JsonObject;
      36: invokevirtual #49                 // Method io/vertx/core/json/JsonObject.encode:()Ljava/lang/String;
      39: astore        4
      41: invokestatic  #50                 // InterfaceMethod io/vertx/core/Vertx.currentContext:()Lio/vertx/core/Context;
      44: astore        5
      46: aload_0
      47: aload_0
      48: aload_2
      49: aload         5
      51: aload_1
      52: aload         4
      54: invokedynamic #51,  0             // InvokeDynamic #0:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;Ljava/lang/String;)Lio/vertx/core/Handler;
      59: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      62: return

  private java.lang.String getPath(java.lang.String);
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #24                 // Field basePath:Ljava/lang/String;
      11: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #56                 // String /
      16: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private void callback(io.vertx.core.Context, io.vertx.servicediscovery.Record, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.servicediscovery.Record>>, org.apache.curator.framework.api.CuratorEvent);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_3
       5: aload_2
       6: invokedynamic #58,  0             // InvokeDynamic #1:run:(Lorg/apache/curator/framework/api/CuratorEvent;Lio/vertx/core/Handler;Lio/vertx/servicediscovery/Record;)Ljava/lang/Runnable;
      11: invokespecial #59                 // Method runOnContextIfPossible:(Lio/vertx/core/Context;Ljava/lang/Runnable;)V
      14: return

  public void remove(io.vertx.servicediscovery.Record, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.servicediscovery.Record>>);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
       4: ldc           #60                 // String No registration id in the record
       6: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #62                 // Method remove:(Ljava/lang/String;Lio/vertx/core/Handler;)V
      19: return

  public void remove(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.servicediscovery.Record>>);
    Code:
       0: aload_1
       1: ldc           #60                 // String No registration id in the record
       3: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #50                 // InterfaceMethod io/vertx/core/Vertx.currentContext:()Lio/vertx/core/Context;
      10: astore_3
      11: aload_0
      12: aload_0
      13: aload_2
      14: aload_3
      15: aload_1
      16: invokedynamic #63,  0             // InvokeDynamic #2:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;Ljava/lang/String;)Lio/vertx/core/Handler;
      21: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      24: return

  private void getRecordById(io.vertx.core.Context, java.lang.String, io.vertx.core.Handler<io.vertx.servicediscovery.Record>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_3
       3: aload_1
       4: aload_2
       5: invokedynamic #64,  0             // InvokeDynamic #3:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;Ljava/lang/String;)Lio/vertx/core/Handler;
      10: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      13: return

  private void runOnContextIfPossible(io.vertx.core.Context, java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: aload_2
       6: invokedynamic #65,  0             // InvokeDynamic #4:handle:(Ljava/lang/Runnable;)Lio/vertx/core/Handler;
      11: invokeinterface #66,  2           // InterfaceMethod io/vertx/core/Context.runOnContext:(Lio/vertx/core/Handler;)V
      16: goto          25
      19: aload_2
      20: invokeinterface #67,  1           // InterfaceMethod java/lang/Runnable.run:()V
      25: return

  public void update(io.vertx.servicediscovery.Record, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
       4: ldc           #60                 // String No registration id in the record
       6: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: pop
      10: invokestatic  #50                 // InterfaceMethod io/vertx/core/Vertx.currentContext:()Lio/vertx/core/Context;
      13: astore_3
      14: aload_0
      15: aload_0
      16: aload_2
      17: aload_3
      18: aload_1
      19: invokedynamic #68,  0             // InvokeDynamic #5:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;)Lio/vertx/core/Handler;
      24: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      27: return

  public void getRecords(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.servicediscovery.Record>>>);
    Code:
       0: invokestatic  #50                 // InterfaceMethod io/vertx/core/Vertx.currentContext:()Lio/vertx/core/Context;
       3: astore_2
       4: aload_0
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokedynamic #69,  0             // InvokeDynamic #6:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;)Lio/vertx/core/Handler;
      13: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      16: return

  public void getRecord(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.servicediscovery.Record>>);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #50                 // InterfaceMethod io/vertx/core/Vertx.currentContext:()Lio/vertx/core/Context;
       8: astore_3
       9: aload_0
      10: aload_0
      11: aload_2
      12: aload_3
      13: aload_1
      14: invokedynamic #70,  0             // InvokeDynamic #7:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Lio/vertx/core/Context;Ljava/lang/String;)Lio/vertx/core/Handler;
      19: invokespecial #52                 // Method ensureConnected:(Lio/vertx/core/Handler;)V
      22: return

  public synchronized void stateChanged(org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.state.ConnectionState);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #3                  // Field connectionState:Lorg/apache/curator/framework/state/ConnectionState;
       5: return

  private synchronized void ensureConnected(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: getstatic     #71                 // Field io/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService$1.$SwitchMap$org$apache$curator$framework$state$ConnectionState:[I
       3: aload_0
       4: getfield      #3                  // Field connectionState:Lorg/apache/curator/framework/state/ConnectionState;
       7: invokevirtual #72                 // Method org/apache/curator/framework/state/ConnectionState.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 5
                     1: 44
                     2: 44
                     3: 56
                     4: 75
                     5: 75
               default: 96
          }
      44: aload_1
      45: invokestatic  #73                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      48: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      53: goto          96
      56: aload_0
      57: getfield      #18                 // Field canBeReadOnly:Z
      60: ifeq          75
      63: aload_1
      64: invokestatic  #73                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      67: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      72: goto          96
      75: aload_0
      76: getfield      #4                  // Field vertx:Lio/vertx/core/Vertx;
      79: aload_0
      80: invokedynamic #74,  0             // InvokeDynamic #8:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;)Lio/vertx/core/Handler;
      85: aload_1
      86: invokedynamic #75,  0             // InvokeDynamic #9:handle:(Lio/vertx/core/Handler;)Lio/vertx/core/Handler;
      91: invokeinterface #76,  3           // InterfaceMethod io/vertx/core/Vertx.executeBlocking:(Lio/vertx/core/Handler;Lio/vertx/core/Handler;)V
      96: return

  private static void lambda$ensureConnected$26(io.vertx.core.Handler, io.vertx.core.AsyncResult);
    Code:
       0: aload_1
       1: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       6: ifeq          27
       9: aload_0
      10: getstatic     #78                 // Field org/apache/zookeeper/KeeperException$Code.CONNECTIONLOSS:Lorg/apache/zookeeper/KeeperException$Code;
      13: invokestatic  #79                 // Method org/apache/zookeeper/KeeperException.create:(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
      16: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      19: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      24: goto          36
      27: aload_0
      28: invokestatic  #73                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      31: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      36: return

  private void lambda$ensureConnected$25(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
       4: aload_0
       5: getfield      #20                 // Field connectionTimeoutMs:I
       8: getstatic     #81                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokeinterface #82,  3           // InterfaceMethod org/apache/curator/framework/CuratorFramework.blockUntilConnected:(ILjava/util/concurrent/TimeUnit;)Z
      16: ifeq          28
      19: aload_1
      20: invokeinterface #83,  1           // InterfaceMethod io/vertx/core/Promise.complete:()V
      25: goto          41
      28: aload_1
      29: new           #84                 // class java/util/concurrent/TimeoutException
      32: dup
      33: invokespecial #85                 // Method java/util/concurrent/TimeoutException."<init>":()V
      36: invokeinterface #86,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/Throwable;)V
      41: goto          52
      44: astore_2
      45: aload_1
      46: aload_2
      47: invokeinterface #86,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/Throwable;)V
      52: return
    Exception table:
       from    to  target type
           0    41    44   Class java/lang/Exception

  private void lambda$getRecord$24(io.vertx.core.Handler, io.vertx.core.Context, java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload         4
       2: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       7: ifeq          29
      10: aload_1
      11: aload         4
      13: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      18: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      21: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      26: goto          92
      29: aload_0
      30: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      33: invokeinterface #89,  1           // InterfaceMethod org/apache/curator/framework/CuratorFramework.getData:()Lorg/apache/curator/framework/api/GetDataBuilder;
      38: aload_0
      39: aload_2
      40: aload_1
      41: invokedynamic #90,  0             // InvokeDynamic #10:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      46: invokeinterface #91,  2           // InterfaceMethod org/apache/curator/framework/api/GetDataBuilder.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      51: checkcast     #92                 // class org/apache/curator/framework/api/ErrorListenerPathable
      54: aload_1
      55: invokedynamic #93,  0             // InvokeDynamic #11:unhandledError:(Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/UnhandledErrorListener;
      60: invokeinterface #94,  2           // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathable.withUnhandledErrorListener:(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
      65: aload_0
      66: aload_3
      67: invokespecial #95                 // Method getPath:(Ljava/lang/String;)Ljava/lang/String;
      70: invokeinterface #96,  2           // InterfaceMethod org/apache/curator/framework/api/Pathable.forPath:(Ljava/lang/String;)Ljava/lang/Object;
      75: pop
      76: goto          92
      79: astore        5
      81: aload_1
      82: aload         5
      84: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      87: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      92: return
    Exception table:
       from    to  target type
          29    76    79   Class java/lang/Exception

  private static void lambda$null$23(io.vertx.core.Handler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       5: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      10: return

  private void lambda$null$22(io.vertx.core.Context, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokedynamic #97,  0             // InvokeDynamic #12:run:(Lorg/apache/curator/framework/api/CuratorEvent;Lio/vertx/core/Handler;)Ljava/lang/Runnable;
      10: invokespecial #59                 // Method runOnContextIfPossible:(Lio/vertx/core/Context;Ljava/lang/Runnable;)V
      13: return

  private static void lambda$null$21(org.apache.curator.framework.api.CuratorEvent, io.vertx.core.Handler);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
       6: getstatic     #99                 // Field org/apache/zookeeper/KeeperException$Code.OK:Lorg/apache/zookeeper/KeeperException$Code;
       9: invokevirtual #100                // Method org/apache/zookeeper/KeeperException$Code.intValue:()I
      12: if_icmpne     59
      15: new           #101                // class io/vertx/core/json/JsonObject
      18: dup
      19: new           #8                  // class java/lang/String
      22: dup
      23: aload_0
      24: invokeinterface #102,  1          // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getData:()[B
      29: getstatic     #103                // Field CHARSET:Ljava/nio/charset/Charset;
      32: invokespecial #104                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      35: invokespecial #105                // Method io/vertx/core/json/JsonObject."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: aload_1
      40: new           #106                // class io/vertx/servicediscovery/Record
      43: dup
      44: aload_2
      45: invokespecial #107                // Method io/vertx/servicediscovery/Record."<init>":(Lio/vertx/core/json/JsonObject;)V
      48: invokestatic  #108                // InterfaceMethod io/vertx/core/Future.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      51: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      56: goto          110
      59: aload_0
      60: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
      65: getstatic     #109                // Field org/apache/zookeeper/KeeperException$Code.NONODE:Lorg/apache/zookeeper/KeeperException$Code;
      68: invokevirtual #100                // Method org/apache/zookeeper/KeeperException$Code.intValue:()I
      71: if_icmpne     87
      74: aload_1
      75: aconst_null
      76: invokestatic  #108                // InterfaceMethod io/vertx/core/Future.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      79: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      84: goto          110
      87: aload_0
      88: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
      93: invokestatic  #110                // Method org/apache/zookeeper/KeeperException$Code.get:(I)Lorg/apache/zookeeper/KeeperException$Code;
      96: astore_2
      97: aload_1
      98: aload_2
      99: invokestatic  #79                 // Method org/apache/zookeeper/KeeperException.create:(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
     102: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
     105: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     110: return

  private void lambda$getRecords$20(io.vertx.core.Handler, io.vertx.core.Context, io.vertx.core.AsyncResult);
    Code:
       0: aload_3
       1: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       6: ifeq          27
       9: aload_1
      10: aload_3
      11: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      16: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      19: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      24: goto          89
      27: aload_0
      28: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      31: invokeinterface #111,  1          // InterfaceMethod org/apache/curator/framework/CuratorFramework.getChildren:()Lorg/apache/curator/framework/api/GetChildrenBuilder;
      36: aload_0
      37: aload_2
      38: aload_1
      39: invokedynamic #112,  0            // InvokeDynamic #13:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      44: invokeinterface #113,  2          // InterfaceMethod org/apache/curator/framework/api/GetChildrenBuilder.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      49: checkcast     #92                 // class org/apache/curator/framework/api/ErrorListenerPathable
      52: aload_1
      53: invokedynamic #114,  0            // InvokeDynamic #14:unhandledError:(Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/UnhandledErrorListener;
      58: invokeinterface #94,  2           // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathable.withUnhandledErrorListener:(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
      63: aload_0
      64: getfield      #24                 // Field basePath:Ljava/lang/String;
      67: invokeinterface #96,  2           // InterfaceMethod org/apache/curator/framework/api/Pathable.forPath:(Ljava/lang/String;)Ljava/lang/Object;
      72: pop
      73: goto          89
      76: astore        4
      78: aload_1
      79: aload         4
      81: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      84: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      89: return
    Exception table:
       from    to  target type
          27    73    76   Class java/lang/Exception

  private static void lambda$null$19(io.vertx.core.Handler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       5: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      10: return

  private void lambda$null$18(io.vertx.core.Context, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload         4
       2: invokeinterface #115,  1          // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getChildren:()Ljava/util/List;
       7: astore        5
       9: new           #116                // class java/util/ArrayList
      12: dup
      13: invokespecial #117                // Method java/util/ArrayList."<init>":()V
      16: astore        6
      18: aload         5
      20: invokeinterface #118,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        7
      27: aload         7
      29: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          80
      37: aload         7
      39: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #8                  // class java/lang/String
      47: astore        8
      49: invokestatic  #121                // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
      52: astore        9
      54: aload_0
      55: aload         8
      57: aload         9
      59: invokevirtual #122                // Method getRecord:(Ljava/lang/String;Lio/vertx/core/Handler;)V
      62: aload         6
      64: aload         9
      66: invokeinterface #123,  1          // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
      71: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: goto          27
      80: aload         6
      82: invokestatic  #125                // InterfaceMethod io/vertx/core/CompositeFuture.all:(Ljava/util/List;)Lio/vertx/core/CompositeFuture;
      85: aload_0
      86: aload_1
      87: aload_2
      88: aload         6
      90: invokedynamic #126,  0            // InvokeDynamic #15:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/core/Handler;Ljava/util/List;)Lio/vertx/core/Handler;
      95: invokeinterface #127,  2          // InterfaceMethod io/vertx/core/CompositeFuture.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/CompositeFuture;
     100: pop
     101: return

  private void lambda$null$17(io.vertx.core.Context, io.vertx.core.Handler, java.util.List, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: aload_3
       6: invokedynamic #128,  0            // InvokeDynamic #16:run:(Lio/vertx/core/AsyncResult;Lio/vertx/core/Handler;Ljava/util/List;)Ljava/lang/Runnable;
      11: invokespecial #59                 // Method runOnContextIfPossible:(Lio/vertx/core/Context;Ljava/lang/Runnable;)V
      14: return

  private static void lambda$null$16(io.vertx.core.AsyncResult, io.vertx.core.Handler, java.util.List);
    Code:
       0: aload_0
       1: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       6: ifeq          27
       9: aload_1
      10: aload_0
      11: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      16: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      19: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      24: goto          95
      27: new           #116                // class java/util/ArrayList
      30: dup
      31: invokespecial #117                // Method java/util/ArrayList."<init>":()V
      34: astore_3
      35: aload_2
      36: invokeinterface #118,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore        4
      43: aload         4
      45: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          85
      53: aload         4
      55: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #129                // class io/vertx/core/Future
      63: astore        5
      65: aload_3
      66: aload         5
      68: invokeinterface #130,  1          // InterfaceMethod io/vertx/core/Future.result:()Ljava/lang/Object;
      73: checkcast     #106                // class io/vertx/servicediscovery/Record
      76: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          43
      85: aload_1
      86: aload_3
      87: invokestatic  #108                // InterfaceMethod io/vertx/core/Future.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      90: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      95: return

  private void lambda$update$15(io.vertx.core.Handler, io.vertx.core.Context, io.vertx.servicediscovery.Record, io.vertx.core.AsyncResult);
    Code:
       0: aload         4
       2: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       7: ifeq          29
      10: aload_1
      11: aload         4
      13: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      18: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      21: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      26: goto          108
      29: aload_0
      30: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      33: invokeinterface #131,  1          // InterfaceMethod org/apache/curator/framework/CuratorFramework.setData:()Lorg/apache/curator/framework/api/SetDataBuilder;
      38: aload_0
      39: aload_2
      40: aload_1
      41: invokedynamic #132,  0            // InvokeDynamic #17:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      46: invokeinterface #133,  2          // InterfaceMethod org/apache/curator/framework/api/SetDataBuilder.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      51: checkcast     #134                // class org/apache/curator/framework/api/ErrorListenerPathAndBytesable
      54: aload_1
      55: invokedynamic #135,  0            // InvokeDynamic #18:unhandledError:(Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/UnhandledErrorListener;
      60: invokeinterface #136,  2          // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathAndBytesable.withUnhandledErrorListener:(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/PathAndBytesable;
      65: aload_0
      66: aload_3
      67: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
      70: invokespecial #95                 // Method getPath:(Ljava/lang/String;)Ljava/lang/String;
      73: aload_3
      74: invokevirtual #48                 // Method io/vertx/servicediscovery/Record.toJson:()Lio/vertx/core/json/JsonObject;
      77: invokevirtual #49                 // Method io/vertx/core/json/JsonObject.encode:()Ljava/lang/String;
      80: getstatic     #103                // Field CHARSET:Ljava/nio/charset/Charset;
      83: invokevirtual #137                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      86: invokeinterface #138,  3          // InterfaceMethod org/apache/curator/framework/api/PathAndBytesable.forPath:(Ljava/lang/String;[B)Ljava/lang/Object;
      91: pop
      92: goto          108
      95: astore        5
      97: aload_1
      98: aload         5
     100: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
     103: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     108: return
    Exception table:
       from    to  target type
          29    92    95   Class java/lang/Exception

  private static void lambda$null$14(io.vertx.core.Handler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       5: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      10: return

  private void lambda$null$13(io.vertx.core.Context, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokedynamic #139,  0            // InvokeDynamic #19:run:(Lorg/apache/curator/framework/api/CuratorEvent;Lio/vertx/core/Handler;)Ljava/lang/Runnable;
      10: invokespecial #59                 // Method runOnContextIfPossible:(Lio/vertx/core/Context;Ljava/lang/Runnable;)V
      13: return

  private static void lambda$null$12(org.apache.curator.framework.api.CuratorEvent, io.vertx.core.Handler);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
       6: getstatic     #99                 // Field org/apache/zookeeper/KeeperException$Code.OK:Lorg/apache/zookeeper/KeeperException$Code;
       9: invokevirtual #100                // Method org/apache/zookeeper/KeeperException$Code.intValue:()I
      12: if_icmpne     27
      15: aload_1
      16: invokestatic  #73                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      19: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      24: goto          50
      27: aload_0
      28: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
      33: invokestatic  #110                // Method org/apache/zookeeper/KeeperException$Code.get:(I)Lorg/apache/zookeeper/KeeperException$Code;
      36: astore_2
      37: aload_1
      38: aload_2
      39: invokestatic  #79                 // Method org/apache/zookeeper/KeeperException.create:(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
      42: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      45: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      50: return

  private static void lambda$runOnContextIfPossible$11(java.lang.Runnable, java.lang.Void);
    Code:
       0: aload_0
       1: invokeinterface #67,  1           // InterfaceMethod java/lang/Runnable.run:()V
       6: return

  private void lambda$getRecordById$10(io.vertx.core.Handler, io.vertx.core.Context, java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload         4
       2: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       7: ifeq          20
      10: aload_1
      11: aconst_null
      12: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      17: goto          68
      20: aload_0
      21: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      24: invokeinterface #89,  1           // InterfaceMethod org/apache/curator/framework/CuratorFramework.getData:()Lorg/apache/curator/framework/api/GetDataBuilder;
      29: aload_0
      30: aload_2
      31: aload_1
      32: invokedynamic #140,  0            // InvokeDynamic #20:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      37: invokeinterface #91,  2           // InterfaceMethod org/apache/curator/framework/api/GetDataBuilder.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      42: checkcast     #92                 // class org/apache/curator/framework/api/ErrorListenerPathable
      45: aload_0
      46: aload_3
      47: invokespecial #95                 // Method getPath:(Ljava/lang/String;)Ljava/lang/String;
      50: invokeinterface #141,  2          // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathable.forPath:(Ljava/lang/String;)Ljava/lang/Object;
      55: pop
      56: goto          68
      59: astore        5
      61: aload_1
      62: aconst_null
      63: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      68: return
    Exception table:
       from    to  target type
          20    56    59   Class java/lang/Exception

  private void lambda$null$9(io.vertx.core.Context, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokedynamic #142,  0            // InvokeDynamic #21:run:(Lorg/apache/curator/framework/api/CuratorEvent;Lio/vertx/core/Handler;)Ljava/lang/Runnable;
      10: invokespecial #59                 // Method runOnContextIfPossible:(Lio/vertx/core/Context;Ljava/lang/Runnable;)V
      13: return

  private static void lambda$null$8(org.apache.curator.framework.api.CuratorEvent, io.vertx.core.Handler);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
       6: getstatic     #99                 // Field org/apache/zookeeper/KeeperException$Code.OK:Lorg/apache/zookeeper/KeeperException$Code;
       9: invokevirtual #100                // Method org/apache/zookeeper/KeeperException$Code.intValue:()I
      12: if_icmpne     56
      15: new           #101                // class io/vertx/core/json/JsonObject
      18: dup
      19: new           #8                  // class java/lang/String
      22: dup
      23: aload_0
      24: invokeinterface #102,  1          // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getData:()[B
      29: getstatic     #103                // Field CHARSET:Ljava/nio/charset/Charset;
      32: invokespecial #104                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      35: invokespecial #105                // Method io/vertx/core/json/JsonObject."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: aload_1
      40: new           #106                // class io/vertx/servicediscovery/Record
      43: dup
      44: aload_2
      45: invokespecial #107                // Method io/vertx/servicediscovery/Record."<init>":(Lio/vertx/core/json/JsonObject;)V
      48: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      53: goto          63
      56: aload_1
      57: aconst_null
      58: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      63: return

  private void lambda$remove$7(io.vertx.core.Handler, io.vertx.core.Context, java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload         4
       2: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       7: ifeq          29
      10: aload_1
      11: aload         4
      13: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      18: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      21: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      26: goto          44
      29: aload_0
      30: aload_2
      31: aload_3
      32: aload_0
      33: aload_1
      34: aload_3
      35: aload_2
      36: invokedynamic #143,  0            // InvokeDynamic #22:handle:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Handler;Ljava/lang/String;Lio/vertx/core/Context;)Lio/vertx/core/Handler;
      41: invokespecial #144                // Method getRecordById:(Lio/vertx/core/Context;Ljava/lang/String;Lio/vertx/core/Handler;)V
      44: return

  private void lambda$null$6(io.vertx.core.Handler, java.lang.String, io.vertx.core.Context, io.vertx.servicediscovery.Record);
    Code:
       0: aload         4
       2: ifnonnull     36
       5: aload_1
       6: new           #53                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #145                // String Unknown registration
      15: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_2
      19: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokestatic  #43                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/String;)Lio/vertx/core/Future;
      28: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      33: goto          125
      36: aload_0
      37: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      40: invokeinterface #146,  1          // InterfaceMethod org/apache/curator/framework/CuratorFramework.delete:()Lorg/apache/curator/framework/api/DeleteBuilder;
      45: astore        5
      47: aload_0
      48: getfield      #28                 // Field guaranteed:Z
      51: ifeq          62
      54: aload         5
      56: invokeinterface #147,  1          // InterfaceMethod org/apache/curator/framework/api/DeleteBuilder.guaranteed:()Lorg/apache/curator/framework/api/ChildrenDeletable;
      61: pop
      62: aload         5
      64: invokeinterface #148,  1          // InterfaceMethod org/apache/curator/framework/api/DeleteBuilder.deletingChildrenIfNeeded:()Lorg/apache/curator/framework/api/BackgroundVersionable;
      69: aload_0
      70: aload_3
      71: aload         4
      73: aload_1
      74: invokedynamic #149,  0            // InvokeDynamic #23:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      79: invokeinterface #150,  2          // InterfaceMethod org/apache/curator/framework/api/BackgroundVersionable.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      84: checkcast     #92                 // class org/apache/curator/framework/api/ErrorListenerPathable
      87: aload_1
      88: invokedynamic #151,  0            // InvokeDynamic #24:unhandledError:(Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/UnhandledErrorListener;
      93: invokeinterface #94,  2           // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathable.withUnhandledErrorListener:(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/Pathable;
      98: aload_0
      99: aload_2
     100: invokespecial #95                 // Method getPath:(Ljava/lang/String;)Ljava/lang/String;
     103: invokeinterface #96,  2           // InterfaceMethod org/apache/curator/framework/api/Pathable.forPath:(Ljava/lang/String;)Ljava/lang/Object;
     108: pop
     109: goto          125
     112: astore        5
     114: aload_1
     115: aload         5
     117: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
     120: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     125: return
    Exception table:
       from    to  target type
          36   109   112   Class java/lang/Exception

  private static void lambda$null$5(io.vertx.core.Handler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       5: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      10: return

  private void lambda$null$4(io.vertx.core.Context, io.vertx.servicediscovery.Record, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: invokespecial #152                // Method callback:(Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;Lorg/apache/curator/framework/api/CuratorEvent;)V
       9: return

  private static void lambda$callback$3(org.apache.curator.framework.api.CuratorEvent, io.vertx.core.Handler, io.vertx.servicediscovery.Record);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
       6: getstatic     #99                 // Field org/apache/zookeeper/KeeperException$Code.OK:Lorg/apache/zookeeper/KeeperException$Code;
       9: invokevirtual #100                // Method org/apache/zookeeper/KeeperException$Code.intValue:()I
      12: if_icmpne     28
      15: aload_1
      16: aload_2
      17: invokestatic  #108                // InterfaceMethod io/vertx/core/Future.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      20: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      25: goto          51
      28: aload_0
      29: invokeinterface #98,  1           // InterfaceMethod org/apache/curator/framework/api/CuratorEvent.getResultCode:()I
      34: invokestatic  #110                // Method org/apache/zookeeper/KeeperException$Code.get:(I)Lorg/apache/zookeeper/KeeperException$Code;
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokestatic  #79                 // Method org/apache/zookeeper/KeeperException.create:(Lorg/apache/zookeeper/KeeperException$Code;)Lorg/apache/zookeeper/KeeperException;
      43: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      46: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      51: return

  private void lambda$store$2(io.vertx.core.Handler, io.vertx.core.Context, io.vertx.servicediscovery.Record, java.lang.String, io.vertx.core.AsyncResult);
    Code:
       0: aload         5
       2: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       7: ifeq          29
      10: aload_1
      11: aload         5
      13: invokeinterface #88,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      18: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      21: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      26: goto          133
      29: aload_0
      30: getfield      #37                 // Field client:Lorg/apache/curator/framework/CuratorFramework;
      33: invokeinterface #153,  1          // InterfaceMethod org/apache/curator/framework/CuratorFramework.create:()Lorg/apache/curator/framework/api/CreateBuilder;
      38: invokeinterface #154,  1          // InterfaceMethod org/apache/curator/framework/api/CreateBuilder.creatingParentsIfNeeded:()Lorg/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable;
      43: aload_0
      44: getfield      #26                 // Field ephemeral:Z
      47: ifeq          56
      50: getstatic     #155                // Field org/apache/zookeeper/CreateMode.EPHEMERAL:Lorg/apache/zookeeper/CreateMode;
      53: goto          59
      56: getstatic     #156                // Field org/apache/zookeeper/CreateMode.PERSISTENT:Lorg/apache/zookeeper/CreateMode;
      59: invokeinterface #157,  2          // InterfaceMethod org/apache/curator/framework/api/ProtectACLCreateModePathAndBytesable.withMode:(Lorg/apache/zookeeper/CreateMode;)Ljava/lang/Object;
      64: checkcast     #158                // class org/apache/curator/framework/api/ACLBackgroundPathAndBytesable
      67: aload_0
      68: aload_2
      69: aload_3
      70: aload_1
      71: invokedynamic #159,  0            // InvokeDynamic #25:processResult:(Lio/vertx/servicediscovery/backend/zookeeper/ZookeeperBackendService;Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/BackgroundCallback;
      76: invokeinterface #160,  2          // InterfaceMethod org/apache/curator/framework/api/ACLBackgroundPathAndBytesable.inBackground:(Lorg/apache/curator/framework/api/BackgroundCallback;)Ljava/lang/Object;
      81: checkcast     #134                // class org/apache/curator/framework/api/ErrorListenerPathAndBytesable
      84: aload_1
      85: invokedynamic #161,  0            // InvokeDynamic #26:unhandledError:(Lio/vertx/core/Handler;)Lorg/apache/curator/framework/api/UnhandledErrorListener;
      90: invokeinterface #136,  2          // InterfaceMethod org/apache/curator/framework/api/ErrorListenerPathAndBytesable.withUnhandledErrorListener:(Lorg/apache/curator/framework/api/UnhandledErrorListener;)Lorg/apache/curator/framework/api/PathAndBytesable;
      95: aload_0
      96: aload_3
      97: invokevirtual #41                 // Method io/vertx/servicediscovery/Record.getRegistration:()Ljava/lang/String;
     100: invokespecial #95                 // Method getPath:(Ljava/lang/String;)Ljava/lang/String;
     103: aload         4
     105: getstatic     #103                // Field CHARSET:Ljava/nio/charset/Charset;
     108: invokevirtual #137                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     111: invokeinterface #138,  3          // InterfaceMethod org/apache/curator/framework/api/PathAndBytesable.forPath:(Ljava/lang/String;[B)Ljava/lang/Object;
     116: pop
     117: goto          133
     120: astore        6
     122: aload_1
     123: aload         6
     125: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
     128: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     133: return
    Exception table:
       from    to  target type
          29   117   120   Class java/lang/Exception

  private static void lambda$null$1(io.vertx.core.Handler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #80                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       5: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      10: return

  private void lambda$null$0(io.vertx.core.Context, io.vertx.servicediscovery.Record, io.vertx.core.Handler, org.apache.curator.framework.CuratorFramework, org.apache.curator.framework.api.CuratorEvent) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: invokespecial #152                // Method callback:(Lio/vertx/core/Context;Lio/vertx/servicediscovery/Record;Lio/vertx/core/Handler;Lorg/apache/curator/framework/api/CuratorEvent;)V
       9: return

  static {};
    Code:
       0: ldc           #162                // String UTF-8
       2: invokestatic  #163                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #103                // Field CHARSET:Ljava/nio/charset/Charset;
       8: return
}
