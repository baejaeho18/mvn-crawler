Compiled from "AbstractOptimizer.java"
public abstract class org.primefaces.extensions.optimizerplugin.optimizer.AbstractOptimizer {
  protected static final java.lang.String OUTPUT_FILE_SUFFIX;

  private long sizeTotalOriginal;

  private long sizeTotalOptimized;

  public org.primefaces.extensions.optimizerplugin.optimizer.AbstractOptimizer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #7                  // Field sizeTotalOriginal:J
       9: aload_0
      10: lconst_0
      11: putfield      #13                 // Field sizeTotalOptimized:J
      14: return

  public abstract void optimize(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, org.apache.maven.plugin.logging.Log) throws org.apache.maven.plugin.MojoExecutionException;

  public long getTotalOriginalSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sizeTotalOriginal:J
       4: lreturn

  public long getTotalOptimizedSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sizeTotalOptimized:J
       4: lreturn

  protected java.io.File getFileWithSuffix(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method org/codehaus/plexus/util/FileUtils.extension:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: invokestatic  #22                 // Method org/codehaus/plexus/util/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       9: ifeq          19
      12: aload_3
      13: invokedynamic #28,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_3
      19: aload_1
      20: invokestatic  #31                 // Method org/codehaus/plexus/util/FileUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;
      23: aload_2
      24: aload_3
      25: invokedynamic #34,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore        4
      32: new           #37                 // class java/io/File
      35: dup
      36: aload         4
      38: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      41: astore        5
      43: aload         5
      45: invokestatic  #42                 // Method com/google/common/io/Files.touch:(Ljava/io/File;)V
      48: aload         5
      50: areturn

  protected java.io.File aggregateFiles(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method getOutputFile:(Lorg/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter;)Ljava/io/File;
       5: astore        4
       7: aload_1
       8: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
      11: invokevirtual #58                 // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.getPrependedFile:()Ljava/io/File;
      14: ifnull        32
      17: aload_0
      18: aload_1
      19: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
      22: invokevirtual #58                 // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.getPrependedFile:()Ljava/io/File;
      25: aload         4
      27: aload_2
      28: aload_1
      29: invokevirtual #64                 // Method prependFile:(Ljava/io/File;Ljava/io/File;Ljava/nio/charset/Charset;Lorg/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter;)V
      32: aload_1
      33: invokevirtual #68                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getFiles:()Ljava/util/Set;
      36: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      41: astore        5
      43: aload         5
      45: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          192
      53: aload         5
      55: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #37                 // class java/io/File
      63: astore        6
      65: aload_0
      66: aload_1
      67: aload         6
      69: invokevirtual #88                 // Method getReader:(Lorg/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter;Ljava/io/File;)Ljava/io/Reader;
      72: astore        7
      74: new           #92                 // class java/io/StringWriter
      77: dup
      78: invokespecial #94                 // Method java/io/StringWriter."<init>":()V
      81: astore        8
      83: aload         7
      85: aload         8
      87: invokestatic  #95                 // Method org/codehaus/plexus/util/IOUtil.copy:(Ljava/io/Reader;Ljava/io/Writer;)V
      90: iload_3
      91: ifeq          125
      94: aload         4
      96: invokevirtual #101                // Method java/io/File.length:()J
      99: lconst_0
     100: lcmp
     101: ifle          125
     104: aload         4
     106: aload_2
     107: iconst_1
     108: anewarray     #105                // class com/google/common/io/FileWriteMode
     111: dup
     112: iconst_0
     113: getstatic     #107                // Field com/google/common/io/FileWriteMode.APPEND:Lcom/google/common/io/FileWriteMode;
     116: aastore
     117: invokestatic  #111                // Method com/google/common/io/Files.asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
     120: ldc           #115                // String ;
     122: invokevirtual #117                // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
     125: aload         4
     127: aload_2
     128: iconst_1
     129: anewarray     #105                // class com/google/common/io/FileWriteMode
     132: dup
     133: iconst_0
     134: getstatic     #107                // Field com/google/common/io/FileWriteMode.APPEND:Lcom/google/common/io/FileWriteMode;
     137: aastore
     138: invokestatic  #111                // Method com/google/common/io/Files.asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
     141: aload         8
     143: invokevirtual #123                // Method java/io/StringWriter.toString:()Ljava/lang/String;
     146: invokevirtual #117                // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
     149: aload         7
     151: ifnull        189
     154: aload         7
     156: invokevirtual #127                // Method java/io/Reader.close:()V
     159: goto          189
     162: astore        8
     164: aload         7
     166: ifnull        186
     169: aload         7
     171: invokevirtual #127                // Method java/io/Reader.close:()V
     174: goto          186
     177: astore        9
     179: aload         8
     181: aload         9
     183: invokevirtual #134                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     186: aload         8
     188: athrow
     189: goto          43
     192: aload         4
     194: areturn
    Exception table:
       from    to  target type
          74   149   162   Class java/lang/Throwable
         169   174   177   Class java/lang/Throwable

  protected void deleteFilesIfNecessary(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, org.apache.maven.plugin.logging.Log);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
       4: invokevirtual #138                // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.isRemoveIncluded:()Z
       7: ifeq          87
      10: aload_1
      11: invokevirtual #68                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getFiles:()Ljava/util/Set;
      14: invokeinterface #141,  1          // InterfaceMethod java/util/Set.size:()I
      19: ifle          87
      22: aload_1
      23: invokevirtual #68                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getFiles:()Ljava/util/Set;
      26: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          87
      41: aload_3
      42: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #37                 // class java/io/File
      50: astore        4
      52: aload         4
      54: invokevirtual #145                // Method java/io/File.exists:()Z
      57: ifeq          84
      60: aload         4
      62: invokevirtual #148                // Method java/io/File.delete:()Z
      65: ifne          84
      68: aload_2
      69: aload         4
      71: invokevirtual #151                // Method java/io/File.getName:()Ljava/lang/String;
      74: invokedynamic #154,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      79: invokeinterface #155,  2          // InterfaceMethod org/apache/maven/plugin/logging/Log.warn:(Ljava/lang/CharSequence;)V
      84: goto          32
      87: return

  protected void deleteDirectoryIfNecessary(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, org.apache.maven.plugin.logging.Log);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
       4: invokevirtual #160                // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.isRemoveEmptyDirectories:()Z
       7: ifeq          137
      10: aload_1
      11: invokevirtual #68                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getFiles:()Ljava/util/Set;
      14: invokeinterface #141,  1          // InterfaceMethod java/util/Set.size:()I
      19: ifle          137
      22: aload_1
      23: invokevirtual #68                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getFiles:()Ljava/util/Set;
      26: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          137
      41: aload_3
      42: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #37                 // class java/io/File
      50: astore        4
      52: aload         4
      54: invokevirtual #163                // Method java/io/File.isDirectory:()Z
      57: ifeq          65
      60: aload         4
      62: goto          70
      65: aload         4
      67: invokevirtual #166                // Method java/io/File.getParentFile:()Ljava/io/File;
      70: astore        5
      72: aload         5
      74: ifnull        134
      77: aload         5
      79: invokevirtual #163                // Method java/io/File.isDirectory:()Z
      82: ifeq          134
      85: aload         5
      87: invokevirtual #169                // Method java/io/File.listFiles:()[Ljava/io/File;
      90: invokestatic  #173                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      93: checkcast     #179                // class "[Ljava/io/File;"
      96: arraylength
      97: ifne          134
     100: aload         5
     102: invokevirtual #148                // Method java/io/File.delete:()Z
     105: ifne          124
     108: aload_2
     109: aload         4
     111: invokevirtual #151                // Method java/io/File.getName:()Ljava/lang/String;
     114: invokedynamic #154,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     119: invokeinterface #155,  2          // InterfaceMethod org/apache/maven/plugin/logging/Log.warn:(Ljava/lang/CharSequence;)V
     124: aload         5
     126: invokevirtual #166                // Method java/io/File.getParentFile:()Ljava/io/File;
     129: astore        5
     131: goto          72
     134: goto          32
     137: return

  protected void renameOutputFileIfNecessary(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, java.io.File) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        22
       4: aload_2
       5: invokevirtual #145                // Method java/io/File.exists:()Z
       8: ifeq          22
      11: aload_2
      12: aload_1
      13: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
      16: invokevirtual #181                // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.getOutputFile:()Ljava/io/File;
      19: invokestatic  #183                // Method org/codehaus/plexus/util/FileUtils.rename:(Ljava/io/File;Ljava/io/File;)V
      22: return

  protected void prependFile(java.io.File, java.io.File, java.nio.charset.Charset, org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: invokevirtual #88                 // Method getReader:(Lorg/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter;Ljava/io/File;)Ljava/io/Reader;
       7: astore        5
       9: new           #92                 // class java/io/StringWriter
      12: dup
      13: invokespecial #94                 // Method java/io/StringWriter."<init>":()V
      16: astore        6
      18: aload         5
      20: aload         6
      22: invokestatic  #95                 // Method org/codehaus/plexus/util/IOUtil.copy:(Ljava/io/Reader;Ljava/io/Writer;)V
      25: aload         6
      27: ldc           #187                // String line.separator
      29: invokestatic  #189                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      32: invokevirtual #194                // Method java/io/StringWriter.write:(Ljava/lang/String;)V
      35: aload_2
      36: aload_3
      37: iconst_1
      38: anewarray     #105                // class com/google/common/io/FileWriteMode
      41: dup
      42: iconst_0
      43: getstatic     #107                // Field com/google/common/io/FileWriteMode.APPEND:Lcom/google/common/io/FileWriteMode;
      46: aastore
      47: invokestatic  #111                // Method com/google/common/io/Files.asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
      50: aload         6
      52: invokevirtual #123                // Method java/io/StringWriter.toString:()Ljava/lang/String;
      55: invokevirtual #117                // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
      58: aload         5
      60: ifnull        98
      63: aload         5
      65: invokevirtual #127                // Method java/io/Reader.close:()V
      68: goto          98
      71: astore        6
      73: aload         5
      75: ifnull        95
      78: aload         5
      80: invokevirtual #127                // Method java/io/Reader.close:()V
      83: goto          95
      86: astore        7
      88: aload         6
      90: aload         7
      92: invokevirtual #134                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: aload         6
      97: athrow
      98: return
    Exception table:
       from    to  target type
           9    58    71   Class java/lang/Throwable
          78    83    86   Class java/lang/Throwable

  protected java.io.File getOutputFile(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getAggregation:()Lorg/primefaces/extensions/optimizerplugin/model/Aggregation;
       4: invokevirtual #181                // Method org/primefaces/extensions/optimizerplugin/model/Aggregation.getOutputFile:()Ljava/io/File;
       7: astore_2
       8: aload_2
       9: invokevirtual #151                // Method java/io/File.getName:()Ljava/lang/String;
      12: invokestatic  #16                 // Method org/codehaus/plexus/util/FileUtils.extension:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_3
      16: aload_3
      17: invokestatic  #22                 // Method org/codehaus/plexus/util/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      20: ifeq          30
      23: aload_3
      24: invokedynamic #28,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      29: astore_3
      30: aload_2
      31: invokevirtual #196                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      34: invokestatic  #31                 // Method org/codehaus/plexus/util/FileUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;
      37: aload_3
      38: invokedynamic #199,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      43: astore        4
      45: new           #37                 // class java/io/File
      48: dup
      49: aload         4
      51: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      54: astore        5
      56: aload         5
      58: invokestatic  #202                // Method com/google/common/io/Files.createParentDirs:(Ljava/io/File;)V
      61: aload         5
      63: invokestatic  #42                 // Method com/google/common/io/Files.touch:(Ljava/io/File;)V
      66: aload         5
      68: areturn

  protected java.io.Reader getReader(org.primefaces.extensions.optimizerplugin.util.ResourcesSetAdapter, java.io.File) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException;
    Code:
       0: new           #205                // class java/io/InputStreamReader
       3: dup
       4: new           #207                // class java/io/FileInputStream
       7: dup
       8: aload_2
       9: invokespecial #209                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      12: aload_1
      13: invokevirtual #211                // Method org/primefaces/extensions/optimizerplugin/util/ResourcesSetAdapter.getEncoding:()Ljava/lang/String;
      16: invokespecial #214                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      19: areturn

  protected long addToOriginalSize(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #101                // Method java/io/File.length:()J
       4: lstore_2
       5: aload_0
       6: aload_0
       7: getfield      #7                  // Field sizeTotalOriginal:J
      10: lload_2
      11: ladd
      12: putfield      #7                  // Field sizeTotalOriginal:J
      15: lload_2
      16: lreturn

  protected void addToOptimizedSize(java.io.File);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field sizeTotalOptimized:J
       5: aload_1
       6: invokevirtual #101                // Method java/io/File.length:()J
       9: ladd
      10: putfield      #13                 // Field sizeTotalOptimized:J
      13: return

  protected void addToOptimizedSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field sizeTotalOptimized:J
       5: lload_1
       6: ladd
       7: putfield      #13                 // Field sizeTotalOptimized:J
      10: return
}
