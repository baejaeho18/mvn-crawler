Compiled from "RedisMasterReplica.scala"
public class dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied<F> {
  private volatile dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied<F>.Concurrent$F$ Concurrent$F$module;

  public final cats.effect.Concurrent<F> dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4;

  public final cats.effect.ContextShift<F> dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$5;

  public final dev.profunktor.redis4cats.effect.Log<F> dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$6;

  private final dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied$E$F$MasterReplicaPartiallyApplied F;

  private volatile byte bitmap$init$0;

  private dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$ Concurrent$F();
    Code:
       0: aload_0
       1: getfield      #54                 // Field Concurrent$F$module:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #58                 // Method Concurrent$F$lzycompute$2:()V
      11: aload_0
      12: getfield      #54                 // Field Concurrent$F$module:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$;
      15: areturn

  public <K, V> cats.effect.Resource<F, dev.profunktor.redis4cats.connection.RedisMasterReplica<K, V>> make(io.lettuce.core.codec.RedisCodec<K, V>, scala.collection.immutable.Seq<dev.profunktor.redis4cats.connection.RedisURI>, scala.Option<io.lettuce.core.ReadFrom>);
    Code:
       0: getstatic     #72                 // Field cats/effect/Resource$.MODULE$:Lcats/effect/Resource$;
       3: aload_0
       4: invokespecial #74                 // Method Concurrent$F:()Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$;
       7: aload_0
       8: getfield      #76                 // Field F:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$E$F$MasterReplicaPartiallyApplied;
      11: invokevirtual #80                 // Method dev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$.E$F$MasterReplicaPartiallyApplied$Concurrent:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$E$F$MasterReplicaPartiallyApplied;)Lcats/effect/Concurrent;
      14: invokedynamic #101,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      19: invokeinterface #107,  2          // InterfaceMethod cats/effect/Concurrent.delay:(Lscala/Function0;)Ljava/lang/Object;
      24: aload_0
      25: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
      28: invokevirtual #113                // Method cats/effect/Resource$.liftF:(Ljava/lang/Object;Lcats/Applicative;)Lcats/effect/Resource;
      31: aload_0
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokedynamic #125,  0            // InvokeDynamic #1:apply:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;Lio/lettuce/core/codec/RedisCodec;Lscala/collection/immutable/Seq;Lscala/Option;)Lscala/Function1;
      40: invokevirtual #131                // Method cats/effect/Resource.flatMap:(Lscala/Function1;)Lcats/effect/Resource;
      43: areturn

  public <K, V> scala.Option<io.lettuce.core.ReadFrom> make$default$3(io.lettuce.core.codec.RedisCodec<K, V>, scala.collection.immutable.Seq<dev.profunktor.redis4cats.connection.RedisURI>);
    Code:
       0: getstatic     #142                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public <K, V> cats.effect.Resource<F, dev.profunktor.redis4cats.connection.RedisMasterReplica<K, V>> withOptions(io.lettuce.core.codec.RedisCodec<K, V>, io.lettuce.core.ClientOptions, dev.profunktor.redis4cats.config$Redis4CatsConfig, scala.collection.immutable.Seq<dev.profunktor.redis4cats.connection.RedisURI>, scala.Option<io.lettuce.core.ReadFrom>);
    Code:
       0: getstatic     #152                // Field dev/profunktor/redis4cats/effect/JRFuture$.MODULE$:Ldev/profunktor/redis4cats/effect/JRFuture$;
       3: aload_0
       4: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
       7: invokevirtual #156                // Method dev/profunktor/redis4cats/effect/JRFuture$.mkBlocker:(Lcats/effect/Sync;)Lcats/effect/Resource;
      10: aload_0
      11: aload_2
      12: aload_3
      13: aload_1
      14: aload         5
      16: aload         4
      18: invokedynamic #166,  0            // InvokeDynamic #2:apply:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;Lio/lettuce/core/ClientOptions;Ldev/profunktor/redis4cats/config$Redis4CatsConfig;Lio/lettuce/core/codec/RedisCodec;Lscala/Option;Lscala/collection/immutable/Seq;)Lscala/Function1;
      23: invokevirtual #131                // Method cats/effect/Resource.flatMap:(Lscala/Function1;)Lcats/effect/Resource;
      26: areturn

  public <K, V> scala.Option<io.lettuce.core.ReadFrom> withOptions$default$5(io.lettuce.core.codec.RedisCodec<K, V>, io.lettuce.core.ClientOptions, dev.profunktor.redis4cats.config$Redis4CatsConfig, scala.collection.immutable.Seq<dev.profunktor.redis4cats.connection.RedisURI>);
    Code:
       0: getstatic     #142                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  private final void Concurrent$F$lzycompute$2();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #54                 // Field Concurrent$F$module:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$;
       8: ifnonnull     23
      11: aload_0
      12: new           #19                 // class dev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$
      15: dup
      16: aload_0
      17: invokespecial #175                // Method dev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$."<init>":(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;)V
      20: putfield      #54                 // Field Concurrent$F$module:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$Concurrent$F$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final io.lettuce.core.ClientOptions $anonfun$make$1();
    Code:
       0: invokestatic  #182                // Method io/lettuce/core/ClientOptions.create:()Lio/lettuce/core/ClientOptions;
       3: areturn

  public static final cats.effect.Resource $anonfun$make$2(dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied, io.lettuce.core.codec.RedisCodec, scala.collection.immutable.Seq, scala.Option, io.lettuce.core.ClientOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: getstatic     #190                // Field dev/profunktor/redis4cats/config$Redis4CatsConfig$.MODULE$:Ldev/profunktor/redis4cats/config$Redis4CatsConfig$;
       7: invokevirtual #193                // Method dev/profunktor/redis4cats/config$Redis4CatsConfig$.apply:()Ldev/profunktor/redis4cats/config$Redis4CatsConfig;
      10: aload_2
      11: aload_3
      12: invokevirtual #195                // Method withOptions:(Lio/lettuce/core/codec/RedisCodec;Lio/lettuce/core/ClientOptions;Ldev/profunktor/redis4cats/config$Redis4CatsConfig;Lscala/collection/immutable/Seq;Lscala/Option;)Lcats/effect/Resource;
      15: areturn

  public static final cats.effect.Resource $anonfun$withOptions$3(dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied, io.lettuce.core.codec.RedisCodec, scala.Option, scala.concurrent.ExecutionContext, scala.collection.immutable.Seq, dev.profunktor.redis4cats.connection.RedisClient);
    Code:
       0: getstatic     #207                // Field dev/profunktor/redis4cats/connection/RedisMasterReplica$.MODULE$:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$;
       3: aload         5
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload_0
      11: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
      14: aload_0
      15: getfield      #209                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$5:Lcats/effect/ContextShift;
      18: aload_0
      19: getfield      #211                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$6:Ldev/profunktor/redis4cats/effect/Log;
      22: invokevirtual #215                // Method dev/profunktor/redis4cats/connection/RedisMasterReplica$.acquireAndRelease:(Ldev/profunktor/redis4cats/connection/RedisClient;Lio/lettuce/core/codec/RedisCodec;Lscala/Option;Lscala/concurrent/ExecutionContext;Lscala/collection/immutable/Seq;Lcats/effect/Concurrent;Lcats/effect/ContextShift;Ldev/profunktor/redis4cats/effect/Log;)Lscala/Tuple2;
      25: astore        8
      27: aload         8
      29: ifnull        65
      32: aload         8
      34: invokevirtual #220                // Method scala/Tuple2._1:()Ljava/lang/Object;
      37: astore        9
      39: aload         8
      41: invokevirtual #223                // Method scala/Tuple2._2:()Ljava/lang/Object;
      44: checkcast     #225                // class scala/Function1
      47: astore        10
      49: new           #217                // class scala/Tuple2
      52: dup
      53: aload         9
      55: aload         10
      57: invokespecial #228                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: astore        6
      62: goto          78
      65: goto          68
      68: new           #230                // class scala/MatchError
      71: dup
      72: aload         8
      74: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      77: athrow
      78: aload         6
      80: astore        7
      82: aload         7
      84: invokevirtual #220                // Method scala/Tuple2._1:()Ljava/lang/Object;
      87: astore        11
      89: aload         7
      91: invokevirtual #223                // Method scala/Tuple2._2:()Ljava/lang/Object;
      94: checkcast     #225                // class scala/Function1
      97: astore        12
      99: getstatic     #72                 // Field cats/effect/Resource$.MODULE$:Lcats/effect/Resource$;
     102: aload         11
     104: aload         12
     106: aload_0
     107: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
     110: invokevirtual #236                // Method cats/effect/Resource$.make:(Ljava/lang/Object;Lscala/Function1;Lcats/Functor;)Lcats/effect/Resource;
     113: areturn

  public static final cats.effect.Resource $anonfun$withOptions$2(dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied, io.lettuce.core.codec.RedisCodec, scala.Option, scala.concurrent.ExecutionContext, scala.collection.immutable.Seq, scala.Tuple2);
    Code:
       0: aload         5
       2: astore        7
       4: aload         7
       6: ifnull        59
       9: aload         7
      11: invokevirtual #220                // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: astore        8
      16: aload         7
      18: invokevirtual #223                // Method scala/Tuple2._2:()Ljava/lang/Object;
      21: checkcast     #225                // class scala/Function1
      24: astore        9
      26: getstatic     #72                 // Field cats/effect/Resource$.MODULE$:Lcats/effect/Resource$;
      29: aload         8
      31: aload         9
      33: aload_0
      34: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
      37: invokevirtual #236                // Method cats/effect/Resource$.make:(Ljava/lang/Object;Lscala/Function1;Lcats/Functor;)Lcats/effect/Resource;
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: aload         4
      46: invokedynamic #263,  0            // InvokeDynamic #3:apply:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;Lio/lettuce/core/codec/RedisCodec;Lscala/Option;Lscala/concurrent/ExecutionContext;Lscala/collection/immutable/Seq;)Lscala/Function1;
      51: invokevirtual #131                // Method cats/effect/Resource.flatMap:(Lscala/Function1;)Lcats/effect/Resource;
      54: astore        6
      56: goto          72
      59: goto          62
      62: new           #230                // class scala/MatchError
      65: dup
      66: aload         7
      68: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      71: athrow
      72: aload         6
      74: areturn

  public static final cats.effect.Resource $anonfun$withOptions$1(dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied, io.lettuce.core.ClientOptions, dev.profunktor.redis4cats.config$Redis4CatsConfig, io.lettuce.core.codec.RedisCodec, scala.Option, scala.collection.immutable.Seq, scala.concurrent.ExecutionContext);
    Code:
       0: getstatic     #72                 // Field cats/effect/Resource$.MODULE$:Lcats/effect/Resource$;
       3: getstatic     #276                // Field dev/profunktor/redis4cats/connection/RedisClient$.MODULE$:Ldev/profunktor/redis4cats/connection/RedisClient$;
       6: aload_1
       7: aload_2
       8: aload         6
      10: aload_0
      11: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
      14: aload_0
      15: getfield      #209                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$5:Lcats/effect/ContextShift;
      18: aload_0
      19: getfield      #211                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$6:Ldev/profunktor/redis4cats/effect/Log;
      22: invokevirtual #280                // Method dev/profunktor/redis4cats/connection/RedisClient$.acquireAndReleaseWithoutUri:(Lio/lettuce/core/ClientOptions;Ldev/profunktor/redis4cats/config$Redis4CatsConfig;Lscala/concurrent/ExecutionContext;Lcats/effect/Concurrent;Lcats/effect/ContextShift;Ldev/profunktor/redis4cats/effect/Log;)Ljava/lang/Object;
      25: aload_0
      26: getfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
      29: invokevirtual #113                // Method cats/effect/Resource$.liftF:(Ljava/lang/Object;Lcats/Applicative;)Lcats/effect/Resource;
      32: aload_0
      33: aload_3
      34: aload         4
      36: aload         6
      38: aload         5
      40: invokedynamic #286,  0            // InvokeDynamic #4:apply:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;Lio/lettuce/core/codec/RedisCodec;Lscala/Option;Lscala/concurrent/ExecutionContext;Lscala/collection/immutable/Seq;)Lscala/Function1;
      45: invokevirtual #131                // Method cats/effect/Resource.flatMap:(Lscala/Function1;)Lcats/effect/Resource;
      48: areturn

  public dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied(cats.effect.Concurrent<F>, cats.effect.ContextShift<F>, dev.profunktor.redis4cats.effect.Log<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #109                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$4:Lcats/effect/Concurrent;
       5: aload_0
       6: aload_2
       7: putfield      #209                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$5:Lcats/effect/ContextShift;
      10: aload_0
      11: aload_3
      12: putfield      #211                // Field dev$profunktor$redis4cats$connection$RedisMasterReplica$MasterReplicaPartiallyApplied$$evidence$6:Ldev/profunktor/redis4cats/effect/Log;
      15: aload_0
      16: invokespecial #293                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: aconst_null
      21: putfield      #76                 // Field F:Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied$E$F$MasterReplicaPartiallyApplied;
      24: aload_0
      25: aload_0
      26: getfield      #295                // Field bitmap$init$0:B
      29: iconst_2
      30: ior
      31: i2b
      32: putfield      #295                // Field bitmap$init$0:B
      35: return

  public static final cats.effect.Resource $anonfun$withOptions$1$adapted(dev.profunktor.redis4cats.connection.RedisMasterReplica$MasterReplicaPartiallyApplied, io.lettuce.core.ClientOptions, dev.profunktor.redis4cats.config$Redis4CatsConfig, io.lettuce.core.codec.RedisCodec, scala.Option, scala.collection.immutable.Seq, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: checkcast     #297                // class cats/effect/Blocker
      13: invokevirtual #301                // Method cats/effect/Blocker.blockingContext:()Lscala/concurrent/ExecutionContext;
      16: invokestatic  #303                // Method $anonfun$withOptions$1:(Ldev/profunktor/redis4cats/connection/RedisMasterReplica$MasterReplicaPartiallyApplied;Lio/lettuce/core/ClientOptions;Ldev/profunktor/redis4cats/config$Redis4CatsConfig;Lio/lettuce/core/codec/RedisCodec;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/concurrent/ExecutionContext;)Lcats/effect/Resource;
      19: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #315,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
