Compiled from "OAuth2FormLoginAuthenticationFailureHandler.java"
public class cn.herodotus.engine.oauth2.authentication.response.OAuth2FormLoginAuthenticationFailureHandler extends org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler {
  private static final org.slf4j.Logger log;

  private java.lang.String defaultFailureUrl;

  private boolean forwardToDestination;

  private boolean allowSessionCreation;

  private org.springframework.security.web.RedirectStrategy redirectStrategy;

  public cn.herodotus.engine.oauth2.authentication.response.OAuth2FormLoginAuthenticationFailureHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/web/authentication/SimpleUrlAuthenticationFailureHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field forwardToDestination:Z
       9: aload_0
      10: iconst_1
      11: putfield      #13                 // Field allowSessionCreation:Z
      14: aload_0
      15: new           #16                 // class org/springframework/security/web/DefaultRedirectStrategy
      18: dup
      19: invokespecial #18                 // Method org/springframework/security/web/DefaultRedirectStrategy."<init>":()V
      22: putfield      #19                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
      25: return

  public cn.herodotus.engine.oauth2.authentication.response.OAuth2FormLoginAuthenticationFailureHandler(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/security/web/authentication/SimpleUrlAuthenticationFailureHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field forwardToDestination:Z
       9: aload_0
      10: iconst_1
      11: putfield      #13                 // Field allowSessionCreation:Z
      14: aload_0
      15: new           #16                 // class org/springframework/security/web/DefaultRedirectStrategy
      18: dup
      19: invokespecial #18                 // Method org/springframework/security/web/DefaultRedirectStrategy."<init>":()V
      22: putfield      #19                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
      25: aload_0
      26: aload_1
      27: invokevirtual #23                 // Method setDefaultFailureUrl:(Ljava/lang/String;)V
      30: return

  public void onAuthenticationFailure(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException) throws java.io.IOException, jakarta.servlet.ServletException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field defaultFailureUrl:Ljava/lang/String;
       4: ifnonnull     63
       7: aload_0
       8: getfield      #31                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      16: ifeq          33
      19: aload_0
      20: getfield      #31                 // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #41                 // String Sending 401 Unauthorized error since no failure URL is set
      25: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      30: goto          44
      33: aload_0
      34: getfield      #31                 // Field logger:Lorg/apache/commons/logging/Log;
      37: ldc           #47                 // String Sending 401 Unauthorized error
      39: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      44: aload_2
      45: getstatic     #52                 // Field org/springframework/http/HttpStatus.UNAUTHORIZED:Lorg/springframework/http/HttpStatus;
      48: invokevirtual #58                 // Method org/springframework/http/HttpStatus.value:()I
      51: getstatic     #52                 // Field org/springframework/http/HttpStatus.UNAUTHORIZED:Lorg/springframework/http/HttpStatus;
      54: invokevirtual #62                 // Method org/springframework/http/HttpStatus.getReasonPhrase:()Ljava/lang/String;
      57: invokeinterface #66,  3           // InterfaceMethod jakarta/servlet/http/HttpServletResponse.sendError:(ILjava/lang/String;)V
      62: return
      63: ldc           #72                 // String 请刷新重试！
      65: astore        4
      67: aload_3
      68: aload_1
      69: invokeinterface #74,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      74: invokestatic  #79                 // Method cn/herodotus/engine/oauth2/core/exception/SecurityGlobalExceptionHandler.resolveSecurityException:(Ljava/lang/Exception;Ljava/lang/String;)Lcn/herodotus/engine/assistant/core/domain/Result;
      77: astore        5
      79: aload         5
      81: invokestatic  #85                 // Method org/apache/commons/lang3/ObjectUtils.isNotEmpty:(Ljava/lang/Object;)Z
      84: ifeq          108
      87: aload         5
      89: invokevirtual #91                 // Method cn/herodotus/engine/assistant/core/domain/Result.getMessage:()Ljava/lang/String;
      92: invokestatic  #96                 // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
      95: ifeq          108
      98: aload         5
     100: invokevirtual #91                 // Method cn/herodotus/engine/assistant/core/domain/Result.getMessage:()Ljava/lang/String;
     103: astore        4
     105: goto          129
     108: aload_3
     109: invokevirtual #102                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     112: invokevirtual #108                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     115: astore        4
     117: getstatic     #113                // Field log:Lorg/slf4j/Logger;
     120: ldc           #117                // String [Herodotus] |- Form Login Authentication Failure Handler,  Can not find the exception name [{}] in dictionary, please do optimize
     122: aload         4
     124: invokeinterface #119,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     129: aload_0
     130: aload_1
     131: aload         4
     133: invokevirtual #125                // Method saveException:(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     136: aload_0
     137: invokevirtual #129                // Method isUseForward:()Z
     140: ifeq          180
     143: getstatic     #113                // Field log:Lorg/slf4j/Logger;
     146: aload_0
     147: getfield      #27                 // Field defaultFailureUrl:Ljava/lang/String;
     150: invokedynamic #132,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     155: invokeinterface #136,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     160: aload_1
     161: aload_0
     162: getfield      #27                 // Field defaultFailureUrl:Ljava/lang/String;
     165: invokeinterface #138,  2          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestDispatcher:(Ljava/lang/String;)Ljakarta/servlet/RequestDispatcher;
     170: aload_1
     171: aload_2
     172: invokeinterface #142,  3          // InterfaceMethod jakarta/servlet/RequestDispatcher.forward:(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
     177: goto          195
     180: aload_0
     181: getfield      #19                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
     184: aload_1
     185: aload_2
     186: aload_0
     187: getfield      #27                 // Field defaultFailureUrl:Ljava/lang/String;
     190: invokeinterface #148,  4          // InterfaceMethod org/springframework/security/web/RedirectStrategy.sendRedirect:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
     195: return

  protected final void saveException(jakarta.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #129                // Method isUseForward:()Z
       4: ifeq          17
       7: aload_1
       8: ldc           #156                // String SPRING_SECURITY_LAST_EXCEPTION
      10: aload_2
      11: invokeinterface #158,  3          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      16: return
      17: aload_1
      18: invokestatic  #161                // Method cn/herodotus/engine/rest/core/utils/WebUtils.getSession:(Ljakarta/servlet/http/HttpServletRequest;)Ljakarta/servlet/http/HttpSession;
      21: astore_3
      22: aload_3
      23: ifnonnull     33
      26: aload_0
      27: invokevirtual #167                // Method isAllowSessionCreation:()Z
      30: ifeq          47
      33: aload_1
      34: invokeinterface #170,  1          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getSession:()Ljakarta/servlet/http/HttpSession;
      39: ldc           #156                // String SPRING_SECURITY_LAST_EXCEPTION
      41: aload_2
      42: invokeinterface #173,  3          // InterfaceMethod jakarta/servlet/http/HttpSession.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      47: return

  public void setDefaultFailureUrl(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #176                // Method org/springframework/security/web/util/UrlUtils.isValidRedirectUrl:(Ljava/lang/String;)Z
       4: aload_1
       5: invokedynamic #182,  0            // InvokeDynamic #1:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokestatic  #186                // Method org/springframework/util/Assert.isTrue:(ZLjava/util/function/Supplier;)V
      13: aload_0
      14: aload_1
      15: putfield      #27                 // Field defaultFailureUrl:Ljava/lang/String;
      18: return

  protected boolean isUseForward();
    Code:
       0: aload_0
       1: getfield      #7                  // Field forwardToDestination:Z
       4: ireturn

  public void setUseForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field forwardToDestination:Z
       5: return

  public void setRedirectStrategy(org.springframework.security.web.RedirectStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
       5: return

  protected org.springframework.security.web.RedirectStrategy getRedirectStrategy();
    Code:
       0: aload_0
       1: getfield      #19                 // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
       4: areturn

  protected boolean isAllowSessionCreation();
    Code:
       0: aload_0
       1: getfield      #13                 // Field allowSessionCreation:Z
       4: ireturn

  public void setAllowSessionCreation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field allowSessionCreation:Z
       5: return

  private static java.lang.String lambda$setDefaultFailureUrl$0(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #192,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: ldc           #8                  // class cn/herodotus/engine/oauth2/authentication/response/OAuth2FormLoginAuthenticationFailureHandler
       2: invokestatic  #193                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #113                // Field log:Lorg/slf4j/Logger;
       8: return
}
