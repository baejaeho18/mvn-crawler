Compiled from "LoggingInterceptorIntegrationTestServer.java"
public class no.nav.common.cxf.LoggingInterceptorIntegrationTestServer extends no.nav.common.cxf.jetty.JettyTestServer {
  final java.lang.StringBuilder builder;

  ch.qos.logback.core.AppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> appender;

  public no.nav.common.cxf.LoggingInterceptorIntegrationTestServer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method no/nav/common/cxf/jetty/JettyTestServer."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field builder:Ljava/lang/StringBuilder;
      15: return

  public void setUp() throws java.lang.Exception;
    Code:
       0: invokestatic  #5                  // Method org/slf4j/LoggerFactory.getILoggerFactory:()Lorg/slf4j/ILoggerFactory;
       3: checkcast     #6                  // class ch/qos/logback/classic/LoggerContext
       6: astore_1
       7: aload_1
       8: ldc           #7                  // String ROOT
      10: invokevirtual #8                  // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
      13: astore_2
      14: aload_0
      15: new           #9                  // class no/nav/common/cxf/LoggingInterceptorIntegrationTestServer$1
      18: dup
      19: aload_0
      20: invokespecial #10                 // Method no/nav/common/cxf/LoggingInterceptorIntegrationTestServer$1."<init>":(Lno/nav/common/cxf/LoggingInterceptorIntegrationTestServer;)V
      23: putfield      #11                 // Field appender:Lch/qos/logback/core/AppenderBase;
      26: aload_0
      27: getfield      #11                 // Field appender:Lch/qos/logback/core/AppenderBase;
      30: invokevirtual #12                 // Method ch/qos/logback/core/AppenderBase.start:()V
      33: aload_2
      34: aload_0
      35: getfield      #11                 // Field appender:Lch/qos/logback/core/AppenderBase;
      38: invokevirtual #13                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
      41: return

  public void tearDown() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field appender:Lch/qos/logback/core/AppenderBase;
       4: invokevirtual #14                 // Method ch/qos/logback/core/AppenderBase.stop:()V
       7: return

  public void skal_fjerne_cookie_i_header() throws java.lang.Exception;
    Code:
       0: ldc           #15                 // String no.nav.common.cxf.cxfendpoint.logging.logg-tokeninheader
       2: ldc           #16                 // String false
       4: invokestatic  #17                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: pop
       8: aload_0
       9: ldc           #18                 // class org/apache/servicemix/examples/cxf/HelloWorld
      11: invokevirtual #19                 // Method startCxfServer:(Ljava/lang/Class;)Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #20                 // Method sendRequest:(Ljava/lang/String;)V
      20: aload_0
      21: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
      24: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: invokestatic  #22                 // Method org/assertj/core/api/AssertionsForClassTypes.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      32: iconst_1
      33: anewarray     #23                 // class java/lang/CharSequence
      36: dup
      37: iconst_0
      38: ldc           #24                 // String Cookie
      40: aastore
      41: invokevirtual #25                 // Method org/assertj/core/api/AbstractCharSequenceAssert.doesNotContain:([Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      44: pop
      45: aload_2
      46: invokestatic  #22                 // Method org/assertj/core/api/AssertionsForClassTypes.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      49: iconst_1
      50: anewarray     #23                 // class java/lang/CharSequence
      53: dup
      54: iconst_0
      55: ldc           #26                 // String LoggeTest
      57: aastore
      58: invokevirtual #27                 // Method org/assertj/core/api/AbstractCharSequenceAssert.contains:([Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      61: pop
      62: return

  public void skal_logge_cookie_i_header() throws java.lang.Exception;
    Code:
       0: ldc           #15                 // String no.nav.common.cxf.cxfendpoint.logging.logg-tokeninheader
       2: ldc           #28                 // String true
       4: invokestatic  #17                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: pop
       8: aload_0
       9: ldc           #18                 // class org/apache/servicemix/examples/cxf/HelloWorld
      11: invokevirtual #19                 // Method startCxfServer:(Ljava/lang/Class;)Ljava/lang/String;
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #20                 // Method sendRequest:(Ljava/lang/String;)V
      20: aload_0
      21: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
      24: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: invokestatic  #22                 // Method org/assertj/core/api/AssertionsForClassTypes.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      32: iconst_1
      33: anewarray     #23                 // class java/lang/CharSequence
      36: dup
      37: iconst_0
      38: ldc           #24                 // String Cookie
      40: aastore
      41: invokevirtual #27                 // Method org/assertj/core/api/AbstractCharSequenceAssert.contains:([Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      44: pop
      45: aload_2
      46: invokestatic  #22                 // Method org/assertj/core/api/AssertionsForClassTypes.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      49: iconst_1
      50: anewarray     #23                 // class java/lang/CharSequence
      53: dup
      54: iconst_0
      55: ldc           #26                 // String LoggeTest
      57: aastore
      58: invokevirtual #27                 // Method org/assertj/core/api/AbstractCharSequenceAssert.contains:([Ljava/lang/CharSequence;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      61: pop
      62: return

  private void sendRequest(java.lang.String);
    Code:
       0: invokestatic  #29                 // Method no/nav/common/rest/client/RestClient.baseClientBuilder:()Lokhttp3/OkHttpClient$Builder;
       3: new           #30                 // class no/nav/common/cxf/LoggingInterceptorIntegrationTestServer$2
       6: dup
       7: aload_0
       8: invokespecial #31                 // Method no/nav/common/cxf/LoggingInterceptorIntegrationTestServer$2."<init>":(Lno/nav/common/cxf/LoggingInterceptorIntegrationTestServer;)V
      11: invokevirtual #32                 // Method okhttp3/OkHttpClient$Builder.cookieJar:(Lokhttp3/CookieJar;)Lokhttp3/OkHttpClient$Builder;
      14: invokevirtual #33                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      17: astore_2
      18: new           #34                 // class okhttp3/Request$Builder
      21: dup
      22: invokespecial #35                 // Method okhttp3/Request$Builder."<init>":()V
      25: aload_1
      26: invokedynamic #36,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      31: invokevirtual #37                 // Method okhttp3/Request$Builder.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      34: ldc           #26                 // String LoggeTest
      36: ldc           #38                 // String LOGGETESTER
      38: invokevirtual #39                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      41: invokevirtual #40                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      44: astore_3
      45: aload_2
      46: aload_3
      47: invokevirtual #41                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
      50: invokeinterface #42,  1           // InterfaceMethod okhttp3/Call.execute:()Lokhttp3/Response;
      55: astore        4
      57: aload         4
      59: ifnull        67
      62: aload         4
      64: invokevirtual #43                 // Method okhttp3/Response.close:()V
      67: goto          77
      70: astore        4
      72: aload         4
      74: invokevirtual #45                 // Method java/lang/Exception.printStackTrace:()V
      77: return
    Exception table:
       from    to  target type
          45    67    70   Class java/lang/Exception
}
