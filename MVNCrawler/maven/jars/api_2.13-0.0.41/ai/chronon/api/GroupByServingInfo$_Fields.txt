Compiled from "GroupByServingInfo.java"
public final class ai.chronon.api.GroupByServingInfo$_Fields extends java.lang.Enum<ai.chronon.api.GroupByServingInfo$_Fields> implements org.apache.thrift.TFieldIdEnum {
  public static final ai.chronon.api.GroupByServingInfo$_Fields GROUP_BY;

  public static final ai.chronon.api.GroupByServingInfo$_Fields INPUT_AVRO_SCHEMA;

  public static final ai.chronon.api.GroupByServingInfo$_Fields SELECTED_AVRO_SCHEMA;

  public static final ai.chronon.api.GroupByServingInfo$_Fields KEY_AVRO_SCHEMA;

  public static final ai.chronon.api.GroupByServingInfo$_Fields BATCH_END_DATE;

  public static final ai.chronon.api.GroupByServingInfo$_Fields DATE_FORMAT;

  private static final java.util.Map<java.lang.String, ai.chronon.api.GroupByServingInfo$_Fields> byName;

  private final short _thriftId;

  private final java.lang.String _fieldName;

  private static final ai.chronon.api.GroupByServingInfo$_Fields[] $VALUES;

  public static ai.chronon.api.GroupByServingInfo$_Fields[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lai/chronon/api/GroupByServingInfo$_Fields;
       3: invokevirtual #2                  // Method "[Lai/chronon/api/GroupByServingInfo$_Fields;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lai/chronon/api/GroupByServingInfo$_Fields;"
       9: areturn

  public static ai.chronon.api.GroupByServingInfo$_Fields valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
       9: areturn

  public static ai.chronon.api.GroupByServingInfo$_Fields findByThriftId(int);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 6
                     1: 40
                     2: 44
                     3: 48
                     4: 52
                     5: 56
                     6: 60
               default: 64
          }
      40: getstatic     #6                  // Field GROUP_BY:Lai/chronon/api/GroupByServingInfo$_Fields;
      43: areturn
      44: getstatic     #7                  // Field INPUT_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      47: areturn
      48: getstatic     #8                  // Field SELECTED_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      51: areturn
      52: getstatic     #9                  // Field KEY_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      55: areturn
      56: getstatic     #10                 // Field BATCH_END_DATE:Lai/chronon/api/GroupByServingInfo$_Fields;
      59: areturn
      60: getstatic     #11                 // Field DATE_FORMAT:Lai/chronon/api/GroupByServingInfo$_Fields;
      63: areturn
      64: aconst_null
      65: areturn

  public static ai.chronon.api.GroupByServingInfo$_Fields findByThriftIdOrThrow(int);
    Code:
       0: iload_0
       1: invokestatic  #12                 // Method findByThriftId:(I)Lai/chronon/api/GroupByServingInfo$_Fields;
       4: astore_1
       5: aload_1
       6: ifnonnull     41
       9: new           #13                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #14                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #16                 // String Field
      22: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_0
      26: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #19                 // String  doesn\'t exist!
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: areturn

  public static ai.chronon.api.GroupByServingInfo$_Fields findByName(java.lang.String);
    Code:
       0: getstatic     #22                 // Field byName:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #23,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      12: areturn

  private ai.chronon.api.GroupByServingInfo$_Fields(short, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #24                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #25                 // Field _thriftId:S
      11: aload_0
      12: aload         4
      14: putfield      #26                 // Field _fieldName:Ljava/lang/String;
      17: return

  public short getThriftFieldId();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _thriftId:S
       4: ireturn

  public java.lang.String getFieldName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field _fieldName:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
       3: dup
       4: ldc           #27                 // String GROUP_BY
       6: iconst_0
       7: iconst_1
       8: ldc           #28                 // String groupBy
      10: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      13: putstatic     #6                  // Field GROUP_BY:Lai/chronon/api/GroupByServingInfo$_Fields;
      16: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      19: dup
      20: ldc           #30                 // String INPUT_AVRO_SCHEMA
      22: iconst_1
      23: iconst_2
      24: ldc           #31                 // String inputAvroSchema
      26: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      29: putstatic     #7                  // Field INPUT_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      32: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      35: dup
      36: ldc           #32                 // String SELECTED_AVRO_SCHEMA
      38: iconst_2
      39: iconst_3
      40: ldc           #33                 // String selectedAvroSchema
      42: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      45: putstatic     #8                  // Field SELECTED_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      48: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      51: dup
      52: ldc           #34                 // String KEY_AVRO_SCHEMA
      54: iconst_3
      55: iconst_4
      56: ldc           #35                 // String keyAvroSchema
      58: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      61: putstatic     #9                  // Field KEY_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
      64: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      67: dup
      68: ldc           #36                 // String BATCH_END_DATE
      70: iconst_4
      71: iconst_5
      72: ldc           #37                 // String batchEndDate
      74: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      77: putstatic     #10                 // Field BATCH_END_DATE:Lai/chronon/api/GroupByServingInfo$_Fields;
      80: new           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
      83: dup
      84: ldc           #38                 // String DATE_FORMAT
      86: iconst_5
      87: bipush        6
      89: ldc           #39                 // String dateFormat
      91: invokespecial #29                 // Method "<init>":(Ljava/lang/String;ISLjava/lang/String;)V
      94: putstatic     #11                 // Field DATE_FORMAT:Lai/chronon/api/GroupByServingInfo$_Fields;
      97: bipush        6
      99: anewarray     #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
     102: dup
     103: iconst_0
     104: getstatic     #6                  // Field GROUP_BY:Lai/chronon/api/GroupByServingInfo$_Fields;
     107: aastore
     108: dup
     109: iconst_1
     110: getstatic     #7                  // Field INPUT_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
     113: aastore
     114: dup
     115: iconst_2
     116: getstatic     #8                  // Field SELECTED_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
     119: aastore
     120: dup
     121: iconst_3
     122: getstatic     #9                  // Field KEY_AVRO_SCHEMA:Lai/chronon/api/GroupByServingInfo$_Fields;
     125: aastore
     126: dup
     127: iconst_4
     128: getstatic     #10                 // Field BATCH_END_DATE:Lai/chronon/api/GroupByServingInfo$_Fields;
     131: aastore
     132: dup
     133: iconst_5
     134: getstatic     #11                 // Field DATE_FORMAT:Lai/chronon/api/GroupByServingInfo$_Fields;
     137: aastore
     138: putstatic     #1                  // Field $VALUES:[Lai/chronon/api/GroupByServingInfo$_Fields;
     141: new           #40                 // class java/util/HashMap
     144: dup
     145: invokespecial #41                 // Method java/util/HashMap."<init>":()V
     148: putstatic     #22                 // Field byName:Ljava/util/Map;
     151: ldc           #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
     153: invokestatic  #42                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
     156: invokevirtual #43                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
     159: astore_0
     160: aload_0
     161: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     166: ifeq          196
     169: aload_0
     170: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     175: checkcast     #4                  // class ai/chronon/api/GroupByServingInfo$_Fields
     178: astore_1
     179: getstatic     #22                 // Field byName:Ljava/util/Map;
     182: aload_1
     183: invokevirtual #46                 // Method getFieldName:()Ljava/lang/String;
     186: aload_1
     187: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: goto          160
     196: return
}
