Compiled from "Extensions.scala"
public class ai.chronon.api.Extensions$SourceOps {
  private java.lang.String rawTable;

  private final ai.chronon.api.Source source;

  private volatile boolean bitmap$0;

  public scala.Enumeration$Value dataModel();
    Code:
       0: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #47                 // Field source:Lai/chronon/api/Source;
       7: invokevirtual #53                 // Method ai/chronon/api/Source.isSetEntities:()Z
      10: ifne          23
      13: aload_0
      14: getfield      #47                 // Field source:Lai/chronon/api/Source;
      17: invokevirtual #56                 // Method ai/chronon/api/Source.isSetEvents:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: invokedynamic #77,  0             // InvokeDynamic #0:apply:()Lscala/Function0;
      33: invokevirtual #81                 // Method scala/Predef$.assert:(ZLscala/Function0;)V
      36: aload_0
      37: getfield      #47                 // Field source:Lai/chronon/api/Source;
      40: invokevirtual #53                 // Method ai/chronon/api/Source.isSetEntities:()Z
      43: ifeq          55
      46: getstatic     #86                 // Field ai/chronon/api/DataModel$.MODULE$:Lai/chronon/api/DataModel$;
      49: invokevirtual #89                 // Method ai/chronon/api/DataModel$.Entities:()Lscala/Enumeration$Value;
      52: goto          61
      55: getstatic     #86                 // Field ai/chronon/api/DataModel$.MODULE$:Lai/chronon/api/DataModel$;
      58: invokevirtual #92                 // Method ai/chronon/api/DataModel$.Events:()Lscala/Enumeration$Value;
      61: areturn

  public ai.chronon.api.Query query();
    Code:
       0: aload_0
       1: getfield      #47                 // Field source:Lai/chronon/api/Source;
       4: invokevirtual #53                 // Method ai/chronon/api/Source.isSetEntities:()Z
       7: ifeq          23
      10: aload_0
      11: getfield      #47                 // Field source:Lai/chronon/api/Source;
      14: invokevirtual #100                // Method ai/chronon/api/Source.getEntities:()Lai/chronon/api/EntitySource;
      17: getfield      #105                // Field ai/chronon/api/EntitySource.query:Lai/chronon/api/Query;
      20: goto          33
      23: aload_0
      24: getfield      #47                 // Field source:Lai/chronon/api/Source;
      27: invokevirtual #109                // Method ai/chronon/api/Source.getEvents:()Lai/chronon/api/EventSource;
      30: getfield      #112                // Field ai/chronon/api/EventSource.query:Lai/chronon/api/Query;
      33: areturn

  private java.lang.String rawTable$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #117                // Field bitmap$0:Z
       8: ifne          53
      11: aload_0
      12: aload_0
      13: getfield      #47                 // Field source:Lai/chronon/api/Source;
      16: invokevirtual #53                 // Method ai/chronon/api/Source.isSetEntities:()Z
      19: ifeq          35
      22: aload_0
      23: getfield      #47                 // Field source:Lai/chronon/api/Source;
      26: invokevirtual #100                // Method ai/chronon/api/Source.getEntities:()Lai/chronon/api/EntitySource;
      29: invokevirtual #120                // Method ai/chronon/api/EntitySource.getSnapshotTable:()Ljava/lang/String;
      32: goto          45
      35: aload_0
      36: getfield      #47                 // Field source:Lai/chronon/api/Source;
      39: invokevirtual #109                // Method ai/chronon/api/Source.getEvents:()Lai/chronon/api/EventSource;
      42: invokevirtual #123                // Method ai/chronon/api/EventSource.getTable:()Ljava/lang/String;
      45: putfield      #125                // Field rawTable:Ljava/lang/String;
      48: aload_0
      49: iconst_1
      50: putfield      #117                // Field bitmap$0:Z
      53: aload_1
      54: monitorexit
      55: goto          61
      58: aload_1
      59: monitorexit
      60: athrow
      61: aload_0
      62: getfield      #125                // Field rawTable:Ljava/lang/String;
      65: areturn
    Exception table:
       from    to  target type
           4    53    58   any

  public java.lang.String rawTable();
    Code:
       0: aload_0
       1: getfield      #117                // Field bitmap$0:Z
       4: ifne          14
       7: aload_0
       8: invokespecial #131                // Method rawTable$lzycompute:()Ljava/lang/String;
      11: goto          18
      14: aload_0
      15: getfield      #125                // Field rawTable:Ljava/lang/String;
      18: areturn

  public java.lang.String table();
    Code:
       0: getstatic     #137                // Field ai/chronon/api/Extensions$.MODULE$:Lai/chronon/api/Extensions$;
       3: aload_0
       4: invokevirtual #139                // Method rawTable:()Ljava/lang/String;
       7: invokevirtual #142                // Method ai/chronon/api/Extensions$.StringOps:(Ljava/lang/String;)Lai/chronon/api/Extensions$StringOps;
      10: invokevirtual #145                // Method ai/chronon/api/Extensions$StringOps.cleanSpec:()Ljava/lang/String;
      13: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> subPartitionFilters();
    Code:
       0: getstatic     #153                // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
       3: aload_0
       4: invokedynamic #162,  0            // InvokeDynamic #1:apply:(Lai/chronon/api/Extensions$SourceOps;)Lscala/Function0;
       9: invokevirtual #165                // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
      12: astore_2
      13: aload_2
      14: astore_3
      15: aload_3
      16: instanceof    #167                // class scala/util/Success
      19: ifeq          44
      22: aload_3
      23: checkcast     #167                // class scala/util/Success
      26: astore        4
      28: aload         4
      30: invokevirtual #170                // Method scala/util/Success.value:()Ljava/lang/Object;
      33: checkcast     #172                // class scala/collection/immutable/Map
      36: astore        5
      38: aload         5
      40: astore_1
      41: goto          118
      44: goto          47
      47: aload_3
      48: instanceof    #174                // class scala/util/Failure
      51: ifeq          106
      54: aload_3
      55: checkcast     #174                // class scala/util/Failure
      58: astore        6
      60: aload         6
      62: invokevirtual #178                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      65: astore        7
      67: new           #180                // class java/lang/Exception
      70: dup
      71: new           #182                // class java/lang/StringBuilder
      74: dup
      75: ldc           #183                // int 39
      77: invokespecial #187                // Method java/lang/StringBuilder."<init>":(I)V
      80: ldc           #189                // String Table
      82: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #139                // Method rawTable:()Ljava/lang/String;
      89: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #195                // String  has mal-formatted sub-partitions
      94: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #198                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: aload         7
     102: invokespecial #201                // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
     106: goto          109
     109: new           #203                // class scala/MatchError
     112: dup
     113: aload_3
     114: invokespecial #206                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow
     118: aload_1
     119: areturn

  public java.lang.String topic();
    Code:
       0: aload_0
       1: getfield      #47                 // Field source:Lai/chronon/api/Source;
       4: invokevirtual #53                 // Method ai/chronon/api/Source.isSetEntities:()Z
       7: ifeq          23
      10: aload_0
      11: getfield      #47                 // Field source:Lai/chronon/api/Source;
      14: invokevirtual #100                // Method ai/chronon/api/Source.getEntities:()Lai/chronon/api/EntitySource;
      17: invokevirtual #216                // Method ai/chronon/api/EntitySource.getMutationTopic:()Ljava/lang/String;
      20: goto          33
      23: aload_0
      24: getfield      #47                 // Field source:Lai/chronon/api/Source;
      27: invokevirtual #109                // Method ai/chronon/api/Source.getEvents:()Lai/chronon/api/EventSource;
      30: invokevirtual #219                // Method ai/chronon/api/EventSource.getTopic:()Ljava/lang/String;
      33: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> topicTokens();
    Code:
       0: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #225                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       6: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: getstatic     #225                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      12: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: getstatic     #137                // Field ai/chronon/api/Extensions$.MODULE$:Lai/chronon/api/Extensions$;
      18: aload_0
      19: getfield      #47                 // Field source:Lai/chronon/api/Source;
      22: invokevirtual #228                // Method ai/chronon/api/Extensions$.SourceOps:(Lai/chronon/api/Source;)Lai/chronon/api/Extensions$SourceOps;
      25: invokevirtual #230                // Method topic:()Ljava/lang/String;
      28: ldc           #232                // String /
      30: invokevirtual #236                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      33: checkcast     #238                // class "[Ljava/lang/Object;"
      36: invokevirtual #242                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      39: iconst_1
      40: invokevirtual #246                // Method scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
      43: checkcast     #238                // class "[Ljava/lang/Object;"
      46: invokevirtual #242                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      49: invokedynamic #257,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      54: getstatic     #262                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      57: ldc_w         #264                // class scala/Tuple2
      60: invokevirtual #267                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      63: invokevirtual #271                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      66: checkcast     #238                // class "[Ljava/lang/Object;"
      69: invokevirtual #275                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
      72: getstatic     #280                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      75: invokevirtual #284                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      78: invokevirtual #288                // Method scala/collection/mutable/ArraySeq$ofRef.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
      81: areturn

  public java.lang.String cleanTopic();
    Code:
       0: getstatic     #137                // Field ai/chronon/api/Extensions$.MODULE$:Lai/chronon/api/Extensions$;
       3: getstatic     #137                // Field ai/chronon/api/Extensions$.MODULE$:Lai/chronon/api/Extensions$;
       6: aload_0
       7: getfield      #47                 // Field source:Lai/chronon/api/Source;
      10: invokevirtual #228                // Method ai/chronon/api/Extensions$.SourceOps:(Lai/chronon/api/Source;)Lai/chronon/api/Extensions$SourceOps;
      13: invokevirtual #230                // Method topic:()Ljava/lang/String;
      16: invokevirtual #142                // Method ai/chronon/api/Extensions$.StringOps:(Ljava/lang/String;)Lai/chronon/api/Extensions$StringOps;
      19: invokevirtual #145                // Method ai/chronon/api/Extensions$StringOps.cleanSpec:()Ljava/lang/String;
      22: areturn

  public ai.chronon.api.Source copyForVersioningComparison();
    Code:
       0: aload_0
       1: getfield      #47                 // Field source:Lai/chronon/api/Source;
       4: invokevirtual #294                // Method ai/chronon/api/Source.deepCopy:()Lai/chronon/api/Source;
       7: astore_1
       8: getstatic     #137                // Field ai/chronon/api/Extensions$.MODULE$:Lai/chronon/api/Extensions$;
      11: aload_1
      12: invokevirtual #228                // Method ai/chronon/api/Extensions$.SourceOps:(Lai/chronon/api/Source;)Lai/chronon/api/Extensions$SourceOps;
      15: invokevirtual #296                // Method query:()Lai/chronon/api/Query;
      18: astore_2
      19: aload_2
      20: invokevirtual #300                // Method ai/chronon/api/Query.unsetEndPartition:()V
      23: aload_2
      24: invokevirtual #303                // Method ai/chronon/api/Query.unsetStartPartition:()V
      27: aload_1
      28: areturn

  public static final java.lang.String $anonfun$dataModel$1();
    Code:
       0: ldc_w         #306                // String Source type is not specified
       3: areturn

  public static final scala.Tuple2 $anonfun$subPartitionFilters$2(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #310                // String =
       4: invokevirtual #236                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: astore_1
       8: new           #264                // class scala/Tuple2
      11: dup
      12: getstatic     #225                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      15: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: aload_1
      19: checkcast     #238                // class "[Ljava/lang/Object;"
      22: invokevirtual #242                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      25: invokevirtual #313                // Method scala/collection/ArrayOps$.head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_1
      29: iconst_1
      30: aaload
      31: invokespecial #316                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      34: areturn

  public static final scala.collection.immutable.Map $anonfun$subPartitionFilters$1(ai.chronon.api.Extensions$SourceOps);
    Code:
       0: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #225                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       6: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: getstatic     #225                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
      12: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: aload_0
      16: invokevirtual #139                // Method rawTable:()Ljava/lang/String;
      19: ldc           #232                // String /
      21: invokevirtual #236                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      24: checkcast     #238                // class "[Ljava/lang/Object;"
      27: invokevirtual #242                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      30: invokevirtual #322                // Method scala/collection/ArrayOps$.tail$extension:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #238                // class "[Ljava/lang/Object;"
      36: invokevirtual #242                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
      39: invokedynamic #326,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      44: getstatic     #262                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      47: ldc_w         #264                // class scala/Tuple2
      50: invokevirtual #267                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      53: invokevirtual #271                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      56: checkcast     #238                // class "[Ljava/lang/Object;"
      59: invokevirtual #275                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
      62: getstatic     #280                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      65: invokevirtual #284                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      68: invokevirtual #288                // Method scala/collection/mutable/ArraySeq$ofRef.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
      71: areturn

  public static final scala.Tuple2 $anonfun$topicTokens$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #310                // String =
       4: iconst_2
       5: invokevirtual #330                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
       8: astore_1
       9: getstatic     #333                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      12: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: aload_1
      16: iconst_0
      17: aaload
      18: invokevirtual #336                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      21: aload_1
      22: iconst_1
      23: aaload
      24: invokevirtual #340                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      27: areturn

  public ai.chronon.api.Extensions$SourceOps(ai.chronon.api.Source);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field source:Lai/chronon/api/Source;
       5: aload_0
       6: invokespecial #344                // Method java/lang/Object."<init>":()V
       9: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #356,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
