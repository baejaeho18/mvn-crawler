Compiled from "OperationService.java"
public class uk.gov.gchq.gaffer.rest.service.v1.OperationService implements uk.gov.gchq.gaffer.rest.service.v1.IOperationService {
  private static final org.slf4j.Logger LOGGER;

  public final com.fasterxml.jackson.databind.ObjectMapper mapper;

  private uk.gov.gchq.gaffer.rest.factory.GraphFactory graphFactory;

  private uk.gov.gchq.gaffer.rest.factory.UserFactory userFactory;

  public uk.gov.gchq.gaffer.rest.service.v1.OperationService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method uk/gov/gchq/gaffer/jsonserialisation/JSONSerialiser.createDefaultMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       8: putfield      #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      11: return

  public java.lang.Object execute(uk.gov.gchq.gaffer.operation.OperationChainDAO);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method _execute:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object execute(uk.gov.gchq.gaffer.operation.Operation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: areturn

  public org.glassfish.jersey.server.ChunkedOutput<java.lang.String> executeChunkedChain(uk.gov.gchq.gaffer.operation.OperationChainDAO);
    Code:
       0: new           #6                  // class org/glassfish/jersey/server/ChunkedOutput
       3: dup
       4: ldc           #7                  // class java/lang/String
       6: ldc           #8                  // String \r\n
       8: invokespecial #9                  // Method org/glassfish/jersey/server/ChunkedOutput."<init>":(Ljava/lang/reflect/Type;Ljava/lang/String;)V
      11: astore_2
      12: new           #10                 // class java/lang/Thread
      15: dup
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokedynamic #11,  0             // InvokeDynamic #0:run:(Luk/gov/gchq/gaffer/rest/service/v1/OperationService;Luk/gov/gchq/gaffer/operation/OperationChainDAO;Lorg/glassfish/jersey/server/ChunkedOutput;)Ljava/lang/Runnable;
      24: invokespecial #12                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      27: invokevirtual #13                 // Method java/lang/Thread.start:()V
      30: aload_2
      31: areturn

  public org.glassfish.jersey.server.ChunkedOutput<java.lang.String> executeChunked(uk.gov.gchq.gaffer.operation.Operation);
    Code:
       0: aload_1
       1: instanceof    #14                 // class uk/gov/gchq/gaffer/operation/OperationChainDAO
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #14                 // class uk/gov/gchq/gaffer/operation/OperationChainDAO
      12: invokevirtual #15                 // Method executeChunkedChain:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Lorg/glassfish/jersey/server/ChunkedOutput;
      15: areturn
      16: aload_1
      17: instanceof    #16                 // class uk/gov/gchq/gaffer/operation/OperationChain
      20: ifeq          42
      23: aload_0
      24: new           #14                 // class uk/gov/gchq/gaffer/operation/OperationChainDAO
      27: dup
      28: aload_1
      29: checkcast     #16                 // class uk/gov/gchq/gaffer/operation/OperationChain
      32: invokevirtual #17                 // Method uk/gov/gchq/gaffer/operation/OperationChain.getOperations:()Ljava/util/List;
      35: invokespecial #18                 // Method uk/gov/gchq/gaffer/operation/OperationChainDAO."<init>":(Ljava/util/List;)V
      38: invokevirtual #15                 // Method executeChunkedChain:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Lorg/glassfish/jersey/server/ChunkedOutput;
      41: areturn
      42: aload_0
      43: new           #14                 // class uk/gov/gchq/gaffer/operation/OperationChainDAO
      46: dup
      47: aload_1
      48: invokespecial #19                 // Method uk/gov/gchq/gaffer/operation/OperationChainDAO."<init>":(Luk/gov/gchq/gaffer/operation/Operation;)V
      51: invokevirtual #15                 // Method executeChunkedChain:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Lorg/glassfish/jersey/server/ChunkedOutput;
      54: areturn

  public uk.gov.gchq.gaffer.commonutil.iterable.CloseableIterable<java.lang.Object> generateObjects(uk.gov.gchq.gaffer.operation.impl.generate.GenerateObjects<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: checkcast     #20                 // class uk/gov/gchq/gaffer/commonutil/iterable/CloseableIterable
       8: areturn

  public uk.gov.gchq.gaffer.commonutil.iterable.CloseableIterable<uk.gov.gchq.gaffer.data.element.Element> generateElements(uk.gov.gchq.gaffer.operation.impl.generate.GenerateElements<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: checkcast     #20                 // class uk/gov/gchq/gaffer/commonutil/iterable/CloseableIterable
       8: areturn

  public uk.gov.gchq.gaffer.commonutil.iterable.CloseableIterable<uk.gov.gchq.gaffer.data.element.id.EntityId> getAdjacentIds(uk.gov.gchq.gaffer.operation.impl.get.GetAdjacentIds);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: checkcast     #20                 // class uk/gov/gchq/gaffer/commonutil/iterable/CloseableIterable
       8: areturn

  public uk.gov.gchq.gaffer.commonutil.iterable.CloseableIterable<uk.gov.gchq.gaffer.data.element.Element> getAllElements(uk.gov.gchq.gaffer.operation.impl.get.GetAllElements);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: checkcast     #20                 // class uk/gov/gchq/gaffer/commonutil/iterable/CloseableIterable
       8: areturn

  public uk.gov.gchq.gaffer.commonutil.iterable.CloseableIterable<uk.gov.gchq.gaffer.data.element.Element> getElements(uk.gov.gchq.gaffer.operation.impl.get.GetElements);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: checkcast     #20                 // class uk/gov/gchq/gaffer/commonutil/iterable/CloseableIterable
       8: areturn

  public void addElements(uk.gov.gchq.gaffer.operation.impl.add.AddElements);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method _execute:(Luk/gov/gchq/gaffer/operation/Operation;)Ljava/lang/Object;
       5: pop
       6: return

  protected void preOperationHook(uk.gov.gchq.gaffer.operation.OperationChain<?>, uk.gov.gchq.gaffer.store.Context);
    Code:
       0: return

  protected void postOperationHook(uk.gov.gchq.gaffer.operation.OperationChain<?>, uk.gov.gchq.gaffer.store.Context);
    Code:
       0: return

  protected <O> O _execute(uk.gov.gchq.gaffer.operation.Operation);
    Code:
       0: aload_0
       1: new           #14                 // class uk/gov/gchq/gaffer/operation/OperationChainDAO
       4: dup
       5: aload_1
       6: invokespecial #19                 // Method uk/gov/gchq/gaffer/operation/OperationChainDAO."<init>":(Luk/gov/gchq/gaffer/operation/Operation;)V
       9: invokevirtual #4                  // Method _execute:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Ljava/lang/Object;
      12: areturn

  protected <O> O _execute(uk.gov.gchq.gaffer.operation.OperationChainDAO<O>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field userFactory:Luk/gov/gchq/gaffer/rest/factory/UserFactory;
       4: invokeinterface #22,  1           // InterfaceMethod uk/gov/gchq/gaffer/rest/factory/UserFactory.createContext:()Luk/gov/gchq/gaffer/store/Context;
       9: astore_2
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #23                 // Method preOperationHook:(Luk/gov/gchq/gaffer/operation/OperationChain;Luk/gov/gchq/gaffer/store/Context;)V
      16: aload_0
      17: getfield      #24                 // Field graphFactory:Luk/gov/gchq/gaffer/rest/factory/GraphFactory;
      20: invokeinterface #25,  1           // InterfaceMethod uk/gov/gchq/gaffer/rest/factory/GraphFactory.getGraph:()Luk/gov/gchq/gaffer/graph/Graph;
      25: aload_1
      26: aload_2
      27: invokevirtual #26                 // Method uk/gov/gchq/gaffer/graph/Graph.execute:(Luk/gov/gchq/gaffer/operation/io/Output;Luk/gov/gchq/gaffer/store/Context;)Ljava/lang/Object;
      30: astore_3
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #27                 // Method postOperationHook:(Luk/gov/gchq/gaffer/operation/OperationChain;Luk/gov/gchq/gaffer/store/Context;)V
      37: goto          111
      40: astore        4
      42: aload_1
      43: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      46: aload         4
      48: athrow
      49: astore        4
      51: aload_1
      52: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      55: new           #31                 // class java/lang/RuntimeException
      58: dup
      59: new           #32                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #34                 // String Error executing operation chain:
      68: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload         4
      73: invokevirtual #36                 // Method uk/gov/gchq/gaffer/operation/OperationException.getMessage:()Ljava/lang/String;
      76: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: aload         4
      84: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: athrow
      88: astore        5
      90: aload_0
      91: aload_1
      92: aload_2
      93: invokevirtual #27                 // Method postOperationHook:(Luk/gov/gchq/gaffer/operation/OperationChain;Luk/gov/gchq/gaffer/store/Context;)V
      96: goto          108
      99: astore        6
     101: aload_1
     102: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
     105: aload         6
     107: athrow
     108: aload         5
     110: athrow
     111: aload_3
     112: areturn
    Exception table:
       from    to  target type
          31    37    40   Class java/lang/Exception
          16    31    49   Class uk/gov/gchq/gaffer/operation/OperationException
          16    31    88   any
          90    96    99   Class java/lang/Exception
          49    90    88   any

  protected void chunkResult(java.lang.Object, org.glassfish.jersey.server.ChunkedOutput<java.lang.String>);
    Code:
       0: aload_1
       1: instanceof    #39                 // class java/lang/Iterable
       4: ifeq          95
       7: aload_1
       8: checkcast     #39                 // class java/lang/Iterable
      11: astore_3
      12: aload_3
      13: invokeinterface #40,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          55
      30: aload         4
      32: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: astore        5
      39: aload_2
      40: aload_0
      41: getfield      #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      44: aload         5
      46: invokevirtual #43                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      49: invokevirtual #44                 // Method org/glassfish/jersey/server/ChunkedOutput.write:(Ljava/lang/Object;)V
      52: goto          20
      55: aload_3
      56: invokestatic  #45                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/Object;)V
      59: goto          92
      62: astore        4
      64: getstatic     #47                 // Field LOGGER:Lorg/slf4j/Logger;
      67: ldc           #48                 // String IOException (chunks)
      69: aload         4
      71: invokeinterface #49,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: aload_3
      77: invokestatic  #45                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/Object;)V
      80: goto          92
      83: astore        6
      85: aload_3
      86: invokestatic  #45                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/Object;)V
      89: aload         6
      91: athrow
      92: goto          122
      95: aload_2
      96: aload_0
      97: getfield      #3                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     100: aload_1
     101: invokevirtual #43                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
     104: invokevirtual #44                 // Method org/glassfish/jersey/server/ChunkedOutput.write:(Ljava/lang/Object;)V
     107: goto          122
     110: astore_3
     111: getstatic     #47                 // Field LOGGER:Lorg/slf4j/Logger;
     114: ldc           #48                 // String IOException (chunks)
     116: aload_3
     117: invokeinterface #49,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: return
    Exception table:
       from    to  target type
          12    55    62   Class java/io/IOException
          12    55    83   any
          62    76    83   any
          83    85    83   any
          95   107   110   Class java/io/IOException

  private void lambda$executeChunkedChain$0(uk.gov.gchq.gaffer.operation.OperationChainDAO, org.glassfish.jersey.server.ChunkedOutput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method _execute:(Luk/gov/gchq/gaffer/operation/OperationChainDAO;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_2
       9: invokevirtual #50                 // Method chunkResult:(Ljava/lang/Object;Lorg/glassfish/jersey/server/ChunkedOutput;)V
      12: aload_2
      13: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      16: aload_1
      17: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      20: goto          36
      23: astore        4
      25: aload_2
      26: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      29: aload_1
      30: invokestatic  #29                 // Method uk/gov/gchq/gaffer/commonutil/CloseableUtil.close:(Ljava/lang/AutoCloseable;)V
      33: aload         4
      35: athrow
      36: return
    Exception table:
       from    to  target type
           0    12    23   any
          23    25    23   any

  static {};
    Code:
       0: ldc           #51                 // class uk/gov/gchq/gaffer/rest/service/v1/OperationService
       2: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #47                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
