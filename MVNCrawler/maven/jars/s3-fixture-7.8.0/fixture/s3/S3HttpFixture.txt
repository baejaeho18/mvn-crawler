Compiled from "S3HttpFixture.java"
public class fixture.s3.S3HttpFixture {
  private final com.sun.net.httpserver.HttpServer server;

  fixture.s3.S3HttpFixture(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/net/InetSocketAddress
       8: dup
       9: aload_1
      10: iconst_0
      11: aaload
      12: invokestatic  #9                  // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      15: aload_1
      16: iconst_1
      17: aaload
      18: invokestatic  #15                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: invokespecial #21                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      24: iconst_0
      25: invokestatic  #24                 // Method com/sun/net/httpserver/HttpServer.create:(Ljava/net/InetSocketAddress;I)Lcom/sun/net/httpserver/HttpServer;
      28: putfield      #30                 // Field server:Lcom/sun/net/httpserver/HttpServer;
      31: aload_0
      32: getfield      #30                 // Field server:Lcom/sun/net/httpserver/HttpServer;
      35: ldc           #36                 // String /
      37: aload_0
      38: aload_1
      39: invokevirtual #38                 // Method createHandler:([Ljava/lang/String;)Lcom/sun/net/httpserver/HttpHandler;
      42: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #48                 // class com/sun/net/httpserver/HttpHandler
      48: invokevirtual #50                 // Method com/sun/net/httpserver/HttpServer.createContext:(Ljava/lang/String;Lcom/sun/net/httpserver/HttpHandler;)Lcom/sun/net/httpserver/HttpContext;
      51: pop
      52: return

  final void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #30                 // Field server:Lcom/sun/net/httpserver/HttpServer;
       4: invokevirtual #54                 // Method com/sun/net/httpserver/HttpServer.start:()V
       7: ldc2_w        #59                 // long 9223372036854775807l
      10: invokestatic  #61                 // Method java/lang/Thread.sleep:(J)V
      13: aload_0
      14: getfield      #30                 // Field server:Lcom/sun/net/httpserver/HttpServer;
      17: iconst_0
      18: invokevirtual #67                 // Method com/sun/net/httpserver/HttpServer.stop:(I)V
      21: goto          35
      24: astore_1
      25: aload_0
      26: getfield      #30                 // Field server:Lcom/sun/net/httpserver/HttpServer;
      29: iconst_0
      30: invokevirtual #67                 // Method com/sun/net/httpserver/HttpServer.stop:(I)V
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    13    24   any

  protected com.sun.net.httpserver.HttpHandler createHandler(java.lang.String[]);
    Code:
       0: aload_1
       1: iconst_2
       2: aaload
       3: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #71                 // class java/lang/String
       9: astore_2
      10: aload_1
      11: iconst_3
      12: aaload
      13: astore_3
      14: aload_1
      15: iconst_4
      16: aaload
      17: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #71                 // class java/lang/String
      23: astore        4
      25: new           #73                 // class fixture/s3/S3HttpFixture$1
      28: dup
      29: aload_0
      30: aload_2
      31: aload_3
      32: aload         4
      34: invokespecial #75                 // Method fixture/s3/S3HttpFixture$1."<init>":(Lfixture/s3/S3HttpFixture;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      37: areturn

  public static void main(java.lang.String[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: arraylength
       6: iconst_5
       7: if_icmpge     20
      10: new           #78                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #80                 // String S3HttpFixture expects 5 arguments [address, port, bucket, base path, access key]
      16: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: new           #31                 // class fixture/s3/S3HttpFixture
      23: dup
      24: aload_0
      25: invokespecial #85                 // Method "<init>":([Ljava/lang/String;)V
      28: astore_1
      29: aload_1
      30: invokevirtual #88                 // Method start:()V
      33: return
}
