Compiled from "ProviderVerifier.kt"
public interface au.com.dius.pact.provider.IProviderVerifier {
  public abstract java.util.List<au.com.dius.pact.provider.reporters.VerifierReporter> getReporters();

  public abstract void setReporters(java.util.List<? extends au.com.dius.pact.provider.reporters.VerifierReporter>);

  public abstract java.util.function.Function<java.lang.Object, java.lang.Boolean> getCheckBuildSpecificTask();

  public abstract void setCheckBuildSpecificTask(java.util.function.Function<java.lang.Object, java.lang.Boolean>);

  public abstract java.util.function.BiConsumer<java.lang.Object, au.com.dius.pact.core.model.ProviderState> getExecuteBuildSpecificTask();

  public abstract void setExecuteBuildSpecificTask(java.util.function.BiConsumer<java.lang.Object, au.com.dius.pact.core.model.ProviderState>);

  public abstract java.util.function.Function<java.lang.String, java.lang.Boolean> getProjectHasProperty();

  public abstract void setProjectHasProperty(java.util.function.Function<java.lang.String, java.lang.Boolean>);

  public abstract java.util.function.Function<java.lang.String, java.lang.String> getProjectGetProperty();

  public abstract void setProjectGetProperty(java.util.function.Function<java.lang.String, java.lang.String>);

  public abstract java.util.function.Function<java.lang.reflect.Method, java.lang.Object> getProviderMethodInstance();

  public abstract void setProviderMethodInstance(java.util.function.Function<java.lang.reflect.Method, java.lang.Object>);

  public abstract java.util.function.Supplier<java.lang.ClassLoader> getProjectClassLoader();

  public abstract void setProjectClassLoader(java.util.function.Supplier<java.lang.ClassLoader>);

  public abstract java.util.function.Supplier<java.util.List<java.net.URL>> getProjectClasspath();

  public abstract void setProjectClasspath(java.util.function.Supplier<java.util.List<java.net.URL>>);

  public abstract java.lang.Object getPactLoadFailureMessage();

  public abstract void setPactLoadFailureMessage(java.lang.Object);

  public abstract java.util.function.Supplier<java.lang.String> getProviderVersion();

  public abstract void setProviderVersion(java.util.function.Supplier<java.lang.String>);

  public abstract java.util.function.Supplier<java.lang.String> getProviderTag();

  public abstract void setProviderTag(java.util.function.Supplier<java.lang.String>);

  public abstract java.util.function.Supplier<java.lang.String> getProviderBranch();

  public abstract void setProviderBranch(java.util.function.Supplier<java.lang.String>);

  public abstract java.util.function.Supplier<java.util.List<java.lang.String>> getProviderTags();

  public abstract void setProviderTags(java.util.function.Supplier<java.util.List<java.lang.String>>);

  public abstract java.util.function.Function<java.lang.String, java.lang.Object> getResponseFactory();

  public abstract void setResponseFactory(java.util.function.Function<java.lang.String, java.lang.Object>);

  public abstract java.util.List<au.com.dius.pact.provider.VerificationResult> verifyProvider(au.com.dius.pact.provider.ProviderInfo);

  public abstract void reportStateForInteraction(java.lang.String, au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.provider.IConsumerInfo, boolean);

  public abstract void finaliseReports();

  public abstract void displayFailures(java.util.List<au.com.dius.pact.provider.VerificationResult$Failed>);

  public abstract au.com.dius.pact.provider.VerificationResult verifyResponseFromProvider(au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.core.model.SynchronousRequestResponse, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, au.com.dius.pact.provider.ProviderClient);

  public abstract au.com.dius.pact.provider.VerificationResult verifyResponseFromProvider(au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.core.model.SynchronousRequestResponse, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, au.com.dius.pact.provider.ProviderClient, java.util.Map<java.lang.String, java.lang.Object>, boolean);

  public abstract au.com.dius.pact.provider.VerificationResult verifyResponseByInvokingProviderMethods(au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.provider.IConsumerInfo, au.com.dius.pact.core.model.Interaction, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, boolean);

  public abstract au.com.dius.pact.provider.VerificationResult verifyResponseByFactory(au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.provider.IConsumerInfo, au.com.dius.pact.core.model.Interaction, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, boolean);

  public abstract au.com.dius.pact.provider.VerificationResult verifyRequestResponsePact(au.com.dius.pact.core.model.IResponse, au.com.dius.pact.provider.ProviderResponse, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, boolean);

  public abstract boolean publishingResultsDisabled();

  public abstract void reportInteractionDescription(au.com.dius.pact.core.model.Interaction);

  public abstract java.lang.String generateErrorStringFromVerificationResult(java.util.List<au.com.dius.pact.provider.VerificationResult$Failed>);

  public abstract void reportStateChangeFailed(au.com.dius.pact.core.model.ProviderState, java.lang.Exception, boolean);

  public abstract void initialiseReporters(au.com.dius.pact.provider.IProviderInfo);

  public abstract void reportVerificationForConsumer(au.com.dius.pact.provider.IConsumerInfo, au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.core.model.PactSource);

  public abstract au.com.dius.pact.provider.VerificationResult verifyInteractionViaPlugin(au.com.dius.pact.provider.IProviderInfo, au.com.dius.pact.provider.IConsumerInfo, au.com.dius.pact.core.model.V4Pact, au.com.dius.pact.core.model.V4Interaction, java.lang.Object, java.lang.Object, java.util.Map<java.lang.String, ? extends java.lang.Object>);

  public abstract java.lang.String getVerificationSource();

  public abstract void setVerificationSource(java.lang.String);
}
