Compiled from "AbstractTestHiveFileSystemS3.java"
public abstract class io.trino.plugin.hive.AbstractTestHiveFileSystemS3 extends io.trino.plugin.hive.AbstractTestHiveFileSystem {
  private java.lang.String awsAccessKey;

  private java.lang.String awsSecretKey;

  private java.lang.String writableBucket;

  private java.lang.String testDirectory;

  public io.trino.plugin.hive.AbstractTestHiveFileSystemS3();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/trino/plugin/hive/AbstractTestHiveFileSystem."<init>":()V
       4: return

  protected void setup(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String Expected non empty host
      14: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_3
      18: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #21                 // String Expected non empty databaseName
      31: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      34: aload         4
      36: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc           #23                 // String Expected non empty awsAccessKey
      49: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      52: aload         5
      54: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #25                 // String Expected non empty awsSecretKey
      67: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      70: aload         6
      72: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      75: ifne          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ldc           #27                 // String Expected non empty writableBucket
      85: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      88: aload         7
      90: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      93: ifne          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ldc           #29                 // String Expected non empty testDirectory
     103: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     106: aload_0
     107: aload         4
     109: putfield      #31                 // Field awsAccessKey:Ljava/lang/String;
     112: aload_0
     113: aload         5
     115: putfield      #37                 // Field awsSecretKey:Ljava/lang/String;
     118: aload_0
     119: aload         6
     121: putfield      #40                 // Field writableBucket:Ljava/lang/String;
     124: aload_0
     125: aload         7
     127: putfield      #43                 // Field testDirectory:Ljava/lang/String;
     130: aload_0
     131: aload_1
     132: iload_2
     133: aload_3
     134: iload         8
     136: aload_0
     137: invokevirtual #46                 // Method createHdfsConfiguration:()Lio/trino/hdfs/HdfsConfiguration;
     140: invokevirtual #50                 // Method setup:(Ljava/lang/String;ILjava/lang/String;ZLio/trino/hdfs/HdfsConfiguration;)V
     143: return

  private io.trino.hdfs.HdfsConfiguration createHdfsConfiguration();
    Code:
       0: new           #54                 // class io/trino/hdfs/s3/TrinoS3ConfigurationInitializer
       3: dup
       4: new           #56                 // class io/trino/hdfs/s3/HiveS3Config
       7: dup
       8: invokespecial #58                 // Method io/trino/hdfs/s3/HiveS3Config."<init>":()V
      11: aload_0
      12: getfield      #31                 // Field awsAccessKey:Ljava/lang/String;
      15: invokevirtual #59                 // Method io/trino/hdfs/s3/HiveS3Config.setS3AwsAccessKey:(Ljava/lang/String;)Lio/trino/hdfs/s3/HiveS3Config;
      18: aload_0
      19: getfield      #37                 // Field awsSecretKey:Ljava/lang/String;
      22: invokevirtual #63                 // Method io/trino/hdfs/s3/HiveS3Config.setS3AwsSecretKey:(Ljava/lang/String;)Lio/trino/hdfs/s3/HiveS3Config;
      25: invokespecial #66                 // Method io/trino/hdfs/s3/TrinoS3ConfigurationInitializer."<init>":(Lio/trino/hdfs/s3/HiveS3Config;)V
      28: astore_1
      29: new           #69                 // class io/trino/hdfs/HdfsConfigurationInitializer
      32: dup
      33: new           #71                 // class io/trino/hdfs/HdfsConfig
      36: dup
      37: invokespecial #73                 // Method io/trino/hdfs/HdfsConfig."<init>":()V
      40: aload_1
      41: invokestatic  #74                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      44: invokespecial #80                 // Method io/trino/hdfs/HdfsConfigurationInitializer."<init>":(Lio/trino/hdfs/HdfsConfig;Ljava/util/Set;)V
      47: astore_2
      48: new           #83                 // class io/trino/hdfs/DynamicHdfsConfiguration
      51: dup
      52: aload_2
      53: invokestatic  #85                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      56: invokespecial #88                 // Method io/trino/hdfs/DynamicHdfsConfiguration."<init>":(Lio/trino/hdfs/HdfsConfigurationInitializer;Ljava/util/Set;)V
      59: areturn

  protected org.apache.hadoop.fs.Path getBasePath();
    Code:
       0: new           #91                 // class org/apache/hadoop/fs/Path
       3: dup
       4: ldc           #93                 // String s3a://%s/%s/
       6: iconst_2
       7: anewarray     #95                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: getfield      #40                 // Field writableBucket:Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #43                 // Field testDirectory:Ljava/lang/String;
      23: aastore
      24: invokestatic  #97                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #103                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      30: areturn

  public void testIgnoreHadoopFolderMarker() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method getBasePath:()Lorg/apache/hadoop/fs/Path;
       4: astore_1
       5: aload_0
       6: getfield      #110                // Field hdfsEnvironment:Lio/trino/hdfs/HdfsEnvironment;
       9: getstatic     #114                // Field TESTING_CONTEXT:Lio/trino/hdfs/HdfsContext;
      12: aload_1
      13: invokevirtual #118                // Method io/trino/hdfs/HdfsEnvironment.getFileSystem:(Lio/trino/hdfs/HdfsContext;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileSystem;
      16: astore_2
      17: ldc           #124                // String test_table_$folder$
      19: astore_3
      20: new           #91                 // class org/apache/hadoop/fs/Path
      23: dup
      24: aload_1
      25: aload_3
      26: invokespecial #126                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      29: astore        4
      31: aload_2
      32: aload         4
      34: invokevirtual #129                // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      37: invokevirtual #135                // Method org/apache/hadoop/fs/FSDataOutputStream.close:()V
      40: aload_2
      41: aload_1
      42: invokevirtual #140                // Method org/apache/hadoop/fs/FileSystem.listStatus:(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
      45: invokestatic  #144                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      48: aload_3
      49: invokedynamic #150,  0            // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      54: invokeinterface #154,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      59: invokestatic  #160                // Method org/testng/Assert.assertFalse:(Z)V
      62: return

  private static boolean lambda$testIgnoreHadoopFolderMarker$0(java.lang.String, org.apache.hadoop.fs.FileStatus);
    Code:
       0: aload_1
       1: invokevirtual #166                // Method org/apache/hadoop/fs/FileStatus.getPath:()Lorg/apache/hadoop/fs/Path;
       4: invokevirtual #171                // Method org/apache/hadoop/fs/Path.getName:()Ljava/lang/String;
       7: aload_0
       8: invokevirtual #175                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ireturn
}
