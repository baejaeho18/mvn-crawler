Compiled from "TestHiveFileSystemS3SelectCsvPushdownWithSplits.java"
public class io.trino.plugin.hive.s3select.TestHiveFileSystemS3SelectCsvPushdownWithSplits {
  private java.lang.String host;

  private int port;

  private java.lang.String databaseName;

  private java.lang.String awsAccessKey;

  private java.lang.String awsSecretKey;

  private java.lang.String writableBucket;

  private java.lang.String testDirectory;

  private io.trino.spi.connector.SchemaTableName tableCsvWithSplits;

  public io.trino.plugin.hive.s3select.TestHiveFileSystemS3SelectCsvPushdownWithSplits();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setup(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field host:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #13                 // Field port:I
      10: aload_0
      11: aload_3
      12: putfield      #17                 // Field databaseName:Ljava/lang/String;
      15: aload_0
      16: aload         4
      18: putfield      #20                 // Field awsAccessKey:Ljava/lang/String;
      21: aload_0
      22: aload         5
      24: putfield      #23                 // Field awsSecretKey:Ljava/lang/String;
      27: aload_0
      28: aload         6
      30: putfield      #26                 // Field writableBucket:Ljava/lang/String;
      33: aload_0
      34: aload         7
      36: putfield      #29                 // Field testDirectory:Ljava/lang/String;
      39: aload_0
      40: new           #32                 // class io/trino/spi/connector/SchemaTableName
      43: dup
      44: aload_3
      45: ldc           #34                 // String trino_s3select_test_csv_scan_range_pushdown
      47: invokespecial #36                 // Method io/trino/spi/connector/SchemaTableName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      50: putfield      #39                 // Field tableCsvWithSplits:Lio/trino/spi/connector/SchemaTableName;
      53: return

  public static java.lang.Object[][] splitSizeParametersProvider();
    Code:
       0: iconst_2
       1: anewarray     #43                 // class "[Ljava/lang/Object;"
       4: dup
       5: iconst_0
       6: iconst_4
       7: anewarray     #2                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: iconst_3
      13: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: aastore
      17: dup
      18: iconst_1
      19: iconst_2
      20: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aastore
      24: dup
      25: iconst_2
      26: bipush        15
      28: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_3
      34: bipush        30
      36: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: aastore
      41: dup
      42: iconst_1
      43: iconst_4
      44: anewarray     #2                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: bipush        50
      51: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: aastore
      55: dup
      56: iconst_1
      57: bipush        30
      59: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: aastore
      63: dup
      64: iconst_2
      65: iconst_2
      66: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aastore
      70: dup
      71: iconst_3
      72: iconst_4
      73: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: aastore
      77: aastore
      78: areturn

  public void testQueryPushdownWithSplitSizeForCsv(int, int, int, int);
    Code:
       0: aconst_null
       1: astore        5
       3: new           #51                 // class io/trino/plugin/hive/HiveConfig
       6: dup
       7: invokespecial #53                 // Method io/trino/plugin/hive/HiveConfig."<init>":()V
      10: iconst_1
      11: invokevirtual #54                 // Method io/trino/plugin/hive/HiveConfig.setS3SelectPushdownEnabled:(Z)Lio/trino/plugin/hive/HiveConfig;
      14: iload_1
      15: i2l
      16: getstatic     #58                 // Field io/airlift/units/DataSize$Unit.KILOBYTE:Lio/airlift/units/DataSize$Unit;
      19: invokestatic  #64                 // Method io/airlift/units/DataSize.of:(JLio/airlift/units/DataSize$Unit;)Lio/airlift/units/DataSize;
      22: invokevirtual #70                 // Method io/trino/plugin/hive/HiveConfig.setMaxSplitSize:(Lio/airlift/units/DataSize;)Lio/trino/plugin/hive/HiveConfig;
      25: iload_2
      26: i2l
      27: getstatic     #58                 // Field io/airlift/units/DataSize$Unit.KILOBYTE:Lio/airlift/units/DataSize$Unit;
      30: invokestatic  #64                 // Method io/airlift/units/DataSize.of:(JLio/airlift/units/DataSize$Unit;)Lio/airlift/units/DataSize;
      33: invokevirtual #74                 // Method io/trino/plugin/hive/HiveConfig.setMaxInitialSplitSize:(Lio/airlift/units/DataSize;)Lio/trino/plugin/hive/HiveConfig;
      36: astore        6
      38: new           #77                 // class io/trino/plugin/hive/s3select/S3SelectTestHelper
      41: dup
      42: aload_0
      43: getfield      #7                  // Field host:Ljava/lang/String;
      46: aload_0
      47: getfield      #13                 // Field port:I
      50: aload_0
      51: getfield      #17                 // Field databaseName:Ljava/lang/String;
      54: aload_0
      55: getfield      #20                 // Field awsAccessKey:Ljava/lang/String;
      58: aload_0
      59: getfield      #23                 // Field awsSecretKey:Ljava/lang/String;
      62: aload_0
      63: getfield      #26                 // Field writableBucket:Ljava/lang/String;
      66: aload_0
      67: getfield      #29                 // Field testDirectory:Ljava/lang/String;
      70: aload         6
      72: invokespecial #79                 // Method io/trino/plugin/hive/s3select/S3SelectTestHelper."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/trino/plugin/hive/HiveConfig;)V
      75: astore        5
      77: aload         5
      79: aload_0
      80: getfield      #39                 // Field tableCsvWithSplits:Lio/trino/spi/connector/SchemaTableName;
      83: invokevirtual #82                 // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.getTableSplitsCount:(Lio/trino/spi/connector/SchemaTableName;)I
      86: istore        7
      88: iload         7
      90: iload_3
      91: iload         4
      93: invokestatic  #86                 // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.isSplitCountInOpenInterval:(III)Z
      96: invokestatic  #90                 // Method org/testng/Assert.assertTrue:(Z)V
      99: ldc           #96                 // String index
     101: iconst_0
     102: getstatic     #98                 // Field io/trino/plugin/hive/HiveType.HIVE_INT:Lio/trino/plugin/hive/HiveType;
     105: getstatic     #104                // Field io/trino/spi/type/BigintType.BIGINT:Lio/trino/spi/type/BigintType;
     108: getstatic     #110                // Field io/trino/plugin/hive/HiveColumnHandle$ColumnType.REGULAR:Lio/trino/plugin/hive/HiveColumnHandle$ColumnType;
     111: invokestatic  #116                // Method java/util/Optional.empty:()Ljava/util/Optional;
     114: invokestatic  #122                // Method io/trino/plugin/hive/HiveColumnHandle.createBaseColumn:(Ljava/lang/String;ILio/trino/plugin/hive/HiveType;Lio/trino/spi/type/Type;Lio/trino/plugin/hive/HiveColumnHandle$ColumnType;Ljava/util/Optional;)Lio/trino/plugin/hive/HiveColumnHandle;
     117: astore        8
     119: aload         5
     121: aload_0
     122: getfield      #39                 // Field tableCsvWithSplits:Lio/trino/spi/connector/SchemaTableName;
     125: aload         8
     127: invokevirtual #128                // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.getFilteredTableResult:(Lio/trino/spi/connector/SchemaTableName;Lio/trino/spi/connector/ColumnHandle;)Lio/trino/testing/MaterializedResult;
     130: astore        9
     132: aload         9
     134: aload         5
     136: invokevirtual #132                // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.getHiveConfig:()Lio/trino/plugin/hive/HiveConfig;
     139: invokestatic  #136                // Method io/trino/plugin/hive/HiveFileSystemTestUtils.newSession:(Lio/trino/plugin/hive/HiveConfig;)Lio/trino/spi/connector/ConnectorSession;
     142: iconst_1
     143: sipush        300
     146: invokestatic  #142                // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.expectedResult:(Lio/trino/spi/connector/ConnectorSession;II)Lio/trino/testing/MaterializedResult;
     149: invokestatic  #146                // Method io/trino/testing/QueryAssertions.assertEqualsIgnoreOrder:(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
     152: aload         5
     154: ifnull        180
     157: aload         5
     159: invokevirtual #152                // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.tearDown:()V
     162: goto          180
     165: astore        10
     167: aload         5
     169: ifnull        177
     172: aload         5
     174: invokevirtual #152                // Method io/trino/plugin/hive/s3select/S3SelectTestHelper.tearDown:()V
     177: aload         10
     179: athrow
     180: return
    Exception table:
       from    to  target type
           3   152   165   any
         165   167   165   any
}
