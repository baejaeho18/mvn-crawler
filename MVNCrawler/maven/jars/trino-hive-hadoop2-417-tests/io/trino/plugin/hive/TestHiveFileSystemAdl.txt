Compiled from "TestHiveFileSystemAdl.java"
public class io.trino.plugin.hive.TestHiveFileSystemAdl extends io.trino.plugin.hive.AbstractTestHiveFileSystem {
  private java.lang.String dataLakeName;

  private java.lang.String clientId;

  private java.lang.String credential;

  private java.lang.String refreshUrl;

  private java.lang.String testDirectory;

  public io.trino.plugin.hive.TestHiveFileSystemAdl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/trino/plugin/hive/AbstractTestHiveFileSystem."<init>":()V
       4: return

  public void setup(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String expected non empty host
      14: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_3
      18: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #21                 // String expected non empty databaseName
      31: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      34: aload         4
      36: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc           #23                 // String expected non empty dataLakeName
      49: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      52: aload         5
      54: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #25                 // String expected non empty clientId
      67: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      70: aload         6
      72: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      75: ifne          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ldc           #27                 // String expected non empty credential
      85: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      88: aload         7
      90: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      93: ifne          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ldc           #29                 // String expected non empty refreshUrl
     103: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     106: aload         8
     108: invokestatic  #7                  // Method org/testng/util/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
     111: ifne          118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: ldc           #31                 // String expected non empty testDirectory
     121: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
     124: aload_0
     125: aload         4
     127: putfield      #33                 // Field dataLakeName:Ljava/lang/String;
     130: aload_0
     131: aload         5
     133: putfield      #39                 // Field clientId:Ljava/lang/String;
     136: aload_0
     137: aload         6
     139: putfield      #42                 // Field credential:Ljava/lang/String;
     142: aload_0
     143: aload         7
     145: putfield      #45                 // Field refreshUrl:Ljava/lang/String;
     148: aload_0
     149: aload         8
     151: putfield      #48                 // Field testDirectory:Ljava/lang/String;
     154: aload_0
     155: aload_1
     156: iload_2
     157: aload_3
     158: iconst_0
     159: aload_0
     160: invokevirtual #51                 // Method createHdfsConfiguration:()Lio/trino/hdfs/HdfsConfiguration;
     163: invokespecial #55                 // Method io/trino/plugin/hive/AbstractTestHiveFileSystem.setup:(Ljava/lang/String;ILjava/lang/String;ZLio/trino/hdfs/HdfsConfiguration;)V
     166: return

  private io.trino.hdfs.HdfsConfiguration createHdfsConfiguration();
    Code:
       0: new           #59                 // class io/trino/hdfs/azure/TrinoAzureConfigurationInitializer
       3: dup
       4: new           #61                 // class io/trino/hdfs/azure/HiveAzureConfig
       7: dup
       8: invokespecial #63                 // Method io/trino/hdfs/azure/HiveAzureConfig."<init>":()V
      11: aload_0
      12: getfield      #39                 // Field clientId:Ljava/lang/String;
      15: invokevirtual #64                 // Method io/trino/hdfs/azure/HiveAzureConfig.setAdlClientId:(Ljava/lang/String;)Lio/trino/hdfs/azure/HiveAzureConfig;
      18: aload_0
      19: getfield      #42                 // Field credential:Ljava/lang/String;
      22: invokevirtual #68                 // Method io/trino/hdfs/azure/HiveAzureConfig.setAdlCredential:(Ljava/lang/String;)Lio/trino/hdfs/azure/HiveAzureConfig;
      25: aload_0
      26: getfield      #45                 // Field refreshUrl:Ljava/lang/String;
      29: invokevirtual #71                 // Method io/trino/hdfs/azure/HiveAzureConfig.setAdlRefreshUrl:(Ljava/lang/String;)Lio/trino/hdfs/azure/HiveAzureConfig;
      32: invokespecial #74                 // Method io/trino/hdfs/azure/TrinoAzureConfigurationInitializer."<init>":(Lio/trino/hdfs/azure/HiveAzureConfig;)V
      35: astore_1
      36: new           #77                 // class io/trino/hdfs/DynamicHdfsConfiguration
      39: dup
      40: new           #79                 // class io/trino/hdfs/HdfsConfigurationInitializer
      43: dup
      44: new           #81                 // class io/trino/hdfs/HdfsConfig
      47: dup
      48: invokespecial #83                 // Method io/trino/hdfs/HdfsConfig."<init>":()V
      51: aload_1
      52: invokestatic  #84                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      55: invokespecial #90                 // Method io/trino/hdfs/HdfsConfigurationInitializer."<init>":(Lio/trino/hdfs/HdfsConfig;Ljava/util/Set;)V
      58: invokestatic  #93                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      61: invokespecial #96                 // Method io/trino/hdfs/DynamicHdfsConfiguration."<init>":(Lio/trino/hdfs/HdfsConfigurationInitializer;Ljava/util/Set;)V
      64: areturn

  protected org.apache.hadoop.fs.Path getBasePath();
    Code:
       0: new           #99                 // class org/apache/hadoop/fs/Path
       3: dup
       4: ldc           #101                // String adl://%s.azuredatalakestore.net/%s/
       6: iconst_2
       7: anewarray     #103                // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: getfield      #33                 // Field dataLakeName:Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #48                 // Field testDirectory:Ljava/lang/String;
      23: aastore
      24: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #111                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      30: areturn

  public void testRename() throws java.lang.Exception;
    Code:
       0: new           #99                 // class org/apache/hadoop/fs/Path
       3: dup
       4: aload_0
       5: invokevirtual #114                // Method getBasePath:()Lorg/apache/hadoop/fs/Path;
       8: invokestatic  #118                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      11: invokevirtual #124                // Method java/util/UUID.toString:()Ljava/lang/String;
      14: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      17: astore_1
      18: aload_0
      19: getfield      #131                // Field hdfsEnvironment:Lio/trino/hdfs/HdfsEnvironment;
      22: getstatic     #135                // Field TESTING_CONTEXT:Lio/trino/hdfs/HdfsContext;
      25: aload_1
      26: invokevirtual #139                // Method io/trino/hdfs/HdfsEnvironment.getFileSystem:(Lio/trino/hdfs/HdfsContext;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileSystem;
      29: astore_2
      30: aload_2
      31: aload_1
      32: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      35: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
      38: new           #99                 // class org/apache/hadoop/fs/Path
      41: dup
      42: aload_1
      43: ldc           #157                // String foo.txt
      45: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      48: astore_3
      49: aload_2
      50: aload_3
      51: invokevirtual #159                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
      54: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
      57: aload_2
      58: aload_3
      59: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      62: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
      65: new           #99                 // class org/apache/hadoop/fs/Path
      68: dup
      69: aload_1
      70: ldc           #165                // String bar.txt
      72: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
      75: astore        4
      77: aload_2
      78: aload         4
      80: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
      83: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
      86: aload_2
      87: aload_3
      88: aload         4
      90: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
      93: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
      96: aload_2
      97: aload_3
      98: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     101: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     104: aload_2
     105: aload         4
     107: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     110: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     113: aload_2
     114: aload_3
     115: invokedynamic #171,  0            // InvokeDynamic #0:call:(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;
     120: invokestatic  #175                // Method org/assertj/core/api/Assertions.assertThatThrownBy:(Lorg/assertj/core/api/ThrowableAssert$ThrowingCallable;)Lorg/assertj/core/api/AbstractThrowableAssert;
     123: ldc           #181                // class java/io/FileNotFoundException
     125: invokevirtual #183                // Method org/assertj/core/api/AbstractThrowableAssert.isInstanceOf:(Ljava/lang/Class;)Lorg/assertj/core/api/AbstractAssert;
     128: pop
     129: aload_2
     130: aload_3
     131: invokevirtual #159                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
     134: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     137: aload_2
     138: aload_3
     139: aload         4
     141: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     144: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     147: aload_2
     148: aload_3
     149: aload_3
     150: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     153: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     156: aload_2
     157: aload_3
     158: iconst_0
     159: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     162: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     165: aload_2
     166: aload_3
     167: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     170: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     173: new           #99                 // class org/apache/hadoop/fs/Path
     176: dup
     177: aload_1
     178: ldc           #193                // String source
     180: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     183: astore        5
     185: aload_2
     186: new           #99                 // class org/apache/hadoop/fs/Path
     189: dup
     190: aload         5
     192: ldc           #195                // String test.txt
     194: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     197: invokevirtual #159                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
     200: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     203: new           #99                 // class org/apache/hadoop/fs/Path
     206: dup
     207: aload_1
     208: ldc           #197                // String target
     210: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     213: astore        6
     215: aload_2
     216: aload         6
     218: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     221: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     224: aload_2
     225: aload         5
     227: aload         6
     229: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     232: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     235: aload_2
     236: aload         5
     238: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     241: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     244: aload_2
     245: aload         6
     247: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     250: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     253: aload_2
     254: new           #99                 // class org/apache/hadoop/fs/Path
     257: dup
     258: aload         5
     260: ldc           #195                // String test.txt
     262: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     265: invokevirtual #159                // Method org/apache/hadoop/fs/FileSystem.createNewFile:(Lorg/apache/hadoop/fs/Path;)Z
     268: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     271: aload_2
     272: aload         5
     274: aload         6
     276: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
     279: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     282: aload_2
     283: aload         5
     285: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     288: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     291: new           #99                 // class org/apache/hadoop/fs/Path
     294: dup
     295: aload         6
     297: ldc           #193                // String source
     299: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     302: astore        6
     304: aload_2
     305: aload         6
     307: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     310: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     313: aload_2
     314: new           #99                 // class org/apache/hadoop/fs/Path
     317: dup
     318: aload         6
     320: ldc           #195                // String test.txt
     322: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     325: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     328: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     331: new           #99                 // class org/apache/hadoop/fs/Path
     334: dup
     335: aload_1
     336: ldc           #197                // String target
     338: invokespecial #128                // Method org/apache/hadoop/fs/Path."<init>":(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
     341: astore        6
     343: aload_2
     344: aload         6
     346: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     349: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     352: aload_2
     353: aload         6
     355: iconst_1
     356: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     359: invokestatic  #162                // Method org/testng/Assert.assertTrue:(Z)V
     362: aload_2
     363: aload         6
     365: invokevirtual #145                // Method org/apache/hadoop/fs/FileSystem.exists:(Lorg/apache/hadoop/fs/Path;)Z
     368: invokestatic  #151                // Method org/testng/Assert.assertFalse:(Z)V
     371: aload_2
     372: aload_1
     373: iconst_1
     374: invokevirtual #189                // Method org/apache/hadoop/fs/FileSystem.delete:(Lorg/apache/hadoop/fs/Path;Z)Z
     377: pop
     378: return

  private static void lambda$testRename$0(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #167                // Method org/apache/hadoop/fs/FileSystem.rename:(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
       6: pop
       7: return
}
