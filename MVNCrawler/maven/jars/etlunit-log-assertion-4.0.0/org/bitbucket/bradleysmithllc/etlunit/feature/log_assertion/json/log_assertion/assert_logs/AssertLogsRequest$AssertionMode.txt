Compiled from "AssertLogsRequest.java"
public final class org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode extends java.lang.Enum<org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode> {
  public static final org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode MATCH_ALL;

  public static final org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode MATCH_ANY;

  private final java.lang.String value;

  private static final java.util.Map<java.lang.String, org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode> CONSTANTS;

  private static final org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode[] $VALUES;

  public static org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
       3: invokevirtual #2                  // Method "[Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;"
       9: areturn

  public static org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
       9: areturn

  private org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field value:Ljava/lang/String;
      11: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:Ljava/lang/String;
       4: areturn

  public java.lang.String value();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:Ljava/lang/String;
       4: areturn

  public static org.bitbucket.bradleysmithllc.etlunit.feature.log_assertion.json.log_assertion.assert_logs.AssertLogsRequest$AssertionMode fromValue(java.lang.String);
    Code:
       0: getstatic     #8                  // Field CONSTANTS:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
      12: astore_1
      13: aload_1
      14: ifnonnull     26
      17: new           #10                 // class java/lang/IllegalArgumentException
      20: dup
      21: aload_0
      22: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_1
      27: areturn

  static {};
    Code:
       0: new           #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
       3: dup
       4: ldc           #12                 // String MATCH_ALL
       6: iconst_0
       7: ldc           #13                 // String match-all
       9: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #15                 // Field MATCH_ALL:Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      15: new           #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
      18: dup
      19: ldc           #16                 // String MATCH_ANY
      21: iconst_1
      22: ldc           #17                 // String match-any
      24: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #18                 // Field MATCH_ANY:Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      30: iconst_2
      31: anewarray     #4                  // class org/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode
      34: dup
      35: iconst_0
      36: getstatic     #15                 // Field MATCH_ALL:Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #18                 // Field MATCH_ANY:Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      45: aastore
      46: putstatic     #1                  // Field $VALUES:[Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      49: new           #19                 // class java/util/HashMap
      52: dup
      53: invokespecial #20                 // Method java/util/HashMap."<init>":()V
      56: putstatic     #8                  // Field CONSTANTS:Ljava/util/Map;
      59: invokestatic  #21                 // Method values:()[Lorg/bitbucket/bradleysmithllc/etlunit/feature/log_assertion/json/log_assertion/assert_logs/AssertLogsRequest$AssertionMode;
      62: astore_0
      63: aload_0
      64: arraylength
      65: istore_1
      66: iconst_0
      67: istore_2
      68: iload_2
      69: iload_1
      70: if_icmpge     97
      73: aload_0
      74: iload_2
      75: aaload
      76: astore_3
      77: getstatic     #8                  // Field CONSTANTS:Ljava/util/Map;
      80: aload_3
      81: getfield      #7                  // Field value:Ljava/lang/String;
      84: aload_3
      85: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: iinc          2, 1
      94: goto          68
      97: return
}
