Compiled from "Apply.scala"
public final class scalaz.Apply$$anon$6 implements scalaz.Apply<F>.ApplyLaw {
  private final scalaz.Apply $outer;

  public <A, B, C> boolean composition(F, F, F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #37                 // InterfaceMethod scalaz/Apply$ApplyLaw.composition$:(Lscalaz/Apply$ApplyLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean identity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // InterfaceMethod scalaz/Functor$FunctorLaw.identity$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean composite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, C>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #58                 // InterfaceMethod scalaz/Functor$FunctorLaw.composite$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean invariantIdentity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantIdentity$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean invariantComposite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, A>, scala.Function1<B, C>, scala.Function1<C, B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #73                 // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantComposite$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
      13: ireturn

  public scalaz.Apply scalaz$Apply$ApplyLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #77                 // Field $outer:Lscalaz/Apply;
       4: areturn

  public scalaz.Functor scalaz$Functor$FunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #77                 // Field $outer:Lscalaz/Apply;
       4: areturn

  public scalaz.InvariantFunctor scalaz$InvariantFunctor$InvariantFunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #77                 // Field $outer:Lscalaz/Apply;
       4: areturn

  public scalaz.Apply$$anon$6(scalaz.Apply<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #77                 // Field $outer:Lscalaz/Apply;
      11: aload_0
      12: invokespecial #87                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #91                 // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.$init$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;)V
      19: aload_0
      20: invokestatic  #94                 // InterfaceMethod scalaz/Functor$FunctorLaw.$init$:(Lscalaz/Functor$FunctorLaw;)V
      23: aload_0
      24: invokestatic  #97                 // InterfaceMethod scalaz/Apply$ApplyLaw.$init$:(Lscalaz/Apply$ApplyLaw;)V
      27: return
}
