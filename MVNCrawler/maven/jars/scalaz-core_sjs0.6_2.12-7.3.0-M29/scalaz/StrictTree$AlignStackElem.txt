Compiled from "StrictTree.scala"
public class scalaz.StrictTree$AlignStackElem<A, B, C> implements scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.Product, scala.Serializable {
  private final scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> parent;

  private final scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> trees;

  private final scalaz.$bslash$amp$div<scala.collection.immutable.VectorIterator<scalaz.StrictTree<A>>, scala.collection.immutable.VectorIterator<scalaz.StrictTree<B>>> iterators;

  private final scala.collection.mutable.Buffer<scalaz.StrictTree<C>> mappedSubForest;

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> seq();
    Code:
       0: aload_0
       1: invokestatic  #57                 // InterfaceMethod scala/collection/Iterator.seq$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #65                 // InterfaceMethod scala/collection/Iterator.isEmpty$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod scala/collection/Iterator.isTraversableAgain$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scala/collection/Iterator.hasDefiniteSize$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #81                 // InterfaceMethod scala/collection/Iterator.take$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #86                 // InterfaceMethod scala/collection/Iterator.drop$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #95                 // InterfaceMethod scala/collection/Iterator.slice$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> sliceIterator(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #99                 // InterfaceMethod scala/collection/Iterator.sliceIterator$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scala/collection/Iterator.map$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // InterfaceMethod scala/collection/Iterator.$plus$plus$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // InterfaceMethod scala/collection/Iterator.flatMap$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filter(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod scala/collection/Iterator.filter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scala/collection/Iterator.corresponds$:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> withFilter(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod scala/collection/Iterator.withFilter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> filterNot(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // InterfaceMethod scala/collection/Iterator.filterNot$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // InterfaceMethod scala/collection/Iterator.collect$:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // InterfaceMethod scala/collection/Iterator.scanLeft$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #169                // InterfaceMethod scala/collection/Iterator.scanRight$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> takeWhile(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod scala/collection/Iterator.takeWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> partition(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // InterfaceMethod scala/collection/Iterator.partition$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> span(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod scala/collection/Iterator.span$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> dropWhile(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod scala/collection/Iterator.dropWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scala/collection/Iterator.zip$:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #204                // InterfaceMethod scala/collection/Iterator.padTo$:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #209                // InterfaceMethod scala/collection/Iterator.zipWithIndex$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #218                // InterfaceMethod scala/collection/Iterator.zipAll$:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // InterfaceMethod scala/collection/Iterator.foreach$:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scala/collection/Iterator.forall$:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #236                // InterfaceMethod scala/collection/Iterator.exists$:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #242                // InterfaceMethod scala/collection/Iterator.contains$:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> find(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #249                // InterfaceMethod scala/collection/Iterator.find$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #261                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;I)I
       6: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #268                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #273                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;I)I
       6: ireturn

  public scala.collection.BufferedIterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #280                // InterfaceMethod scala/collection/Iterator.buffered$:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #288                // InterfaceMethod scala/collection/Iterator.grouped$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #296                // InterfaceMethod scala/collection/Iterator.sliding$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #303                // InterfaceMethod scala/collection/Iterator.sliding$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #307                // InterfaceMethod scala/collection/Iterator.length$:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>, scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #314                // InterfaceMethod scala/collection/Iterator.duplicate$:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #323                // InterfaceMethod scala/collection/Iterator.patch$:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #332                // InterfaceMethod scala/collection/Iterator.copyToArray$:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #338                // InterfaceMethod scala/collection/Iterator.sameElements$:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #345                // InterfaceMethod scala/collection/Iterator.toTraversable$:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #349                // InterfaceMethod scala/collection/Iterator.toIterator$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #356                // InterfaceMethod scala/collection/Iterator.toStream$:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #362                // InterfaceMethod scala/collection/Iterator.toString$:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.List<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #371                // InterfaceMethod scala/collection/TraversableOnce.reversed$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #375                // InterfaceMethod scala/collection/TraversableOnce.size$:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #380                // InterfaceMethod scala/collection/TraversableOnce.nonEmpty$:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #385                // InterfaceMethod scala/collection/TraversableOnce.count$:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // InterfaceMethod scala/collection/TraversableOnce.collectFirst$:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #399                // InterfaceMethod scala/collection/TraversableOnce.$div$colon$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #404                // InterfaceMethod scala/collection/TraversableOnce.$colon$bslash$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #408                // InterfaceMethod scala/collection/TraversableOnce.foldLeft$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #412                // InterfaceMethod scala/collection/TraversableOnce.foldRight$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #419                // InterfaceMethod scala/collection/TraversableOnce.reduceLeft$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #424                // InterfaceMethod scala/collection/TraversableOnce.reduceRight$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod scala/collection/TraversableOnce.reduceLeftOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // InterfaceMethod scala/collection/TraversableOnce.reduceRightOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #441                // InterfaceMethod scala/collection/TraversableOnce.reduce$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #446                // InterfaceMethod scala/collection/TraversableOnce.reduceOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #451                // InterfaceMethod scala/collection/TraversableOnce.fold$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #460                // InterfaceMethod scala/collection/TraversableOnce.aggregate$:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #468                // InterfaceMethod scala/collection/TraversableOnce.sum$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // InterfaceMethod scala/collection/TraversableOnce.product$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #480                // InterfaceMethod scala/collection/TraversableOnce.min$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // InterfaceMethod scala/collection/TraversableOnce.max$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // InterfaceMethod scala/collection/TraversableOnce.maxBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #495                // InterfaceMethod scala/collection/TraversableOnce.minBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #503                // InterfaceMethod scala/collection/TraversableOnce.copyToBuffer$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #508                // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #513                // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #521                // InterfaceMethod scala/collection/TraversableOnce.toArray$:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toList();
    Code:
       0: aload_0
       1: invokestatic  #526                // InterfaceMethod scala/collection/TraversableOnce.toList$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #533                // InterfaceMethod scala/collection/TraversableOnce.toIterable$:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #540                // InterfaceMethod scala/collection/TraversableOnce.toSeq$:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #547                // InterfaceMethod scala/collection/TraversableOnce.toIndexedSeq$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #554                // InterfaceMethod scala/collection/TraversableOnce.toBuffer$:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #561                // InterfaceMethod scala/collection/TraversableOnce.toSet$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #568                // InterfaceMethod scala/collection/TraversableOnce.toVector$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #576                // InterfaceMethod scala/collection/TraversableOnce.to$:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #585                // InterfaceMethod scala/collection/TraversableOnce.toMap$:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #594                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #599                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #602                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #609                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #614                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #618                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public int sizeHintIfCheap();
    Code:
       0: aload_0
       1: invokestatic  #625                // InterfaceMethod scala/collection/GenTraversableOnce.sizeHintIfCheap$:(Lscala/collection/GenTraversableOnce;)I
       4: ireturn

  public scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> parent();
    Code:
       0: aload_0
       1: getfield      #629                // Field parent:Lscala/Option;
       4: areturn

  public scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> trees();
    Code:
       0: aload_0
       1: getfield      #633                // Field trees:Lscalaz/$bslash$amp$div;
       4: areturn

  public scala.collection.mutable.Buffer<scalaz.StrictTree<C>> mappedSubForest();
    Code:
       0: aload_0
       1: getfield      #636                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
       4: areturn

  public scalaz.$bslash$amp$div<java.lang.Object, java.lang.Object> whichHasNext();
    Code:
       0: aload_0
       1: getfield      #640                // Field iterators:Lscalaz/$bslash$amp$div;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_1
      11: aload_1
      12: instanceof    #35                 // class scalaz/$bslash$amp$div$This
      15: ifeq          47
      18: aload_1
      19: checkcast     #35                 // class scalaz/$bslash$amp$div$This
      22: invokevirtual #644                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      25: astore_3
      26: new           #35                 // class scalaz/$bslash$amp$div$This
      29: dup
      30: aload_3
      31: checkcast     #646                // class scala/collection/immutable/VectorIterator
      34: invokestatic  #650                // Method $anonfun$whichHasNext$1:(Lscala/collection/immutable/VectorIterator;)Z
      37: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      40: invokespecial #659                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      43: astore_2
      44: goto          154
      47: aload_1
      48: instanceof    #32                 // class scalaz/$bslash$amp$div$That
      51: ifeq          85
      54: aload_1
      55: checkcast     #32                 // class scalaz/$bslash$amp$div$That
      58: invokevirtual #662                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      61: astore        4
      63: new           #32                 // class scalaz/$bslash$amp$div$That
      66: dup
      67: aload         4
      69: checkcast     #646                // class scala/collection/immutable/VectorIterator
      72: invokestatic  #665                // Method $anonfun$whichHasNext$2:(Lscala/collection/immutable/VectorIterator;)Z
      75: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      78: invokespecial #666                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      81: astore_2
      82: goto          154
      85: aload_1
      86: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
      89: ifeq          145
      92: aload_1
      93: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
      96: astore        5
      98: aload         5
     100: invokevirtual #667                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     103: astore        6
     105: aload         5
     107: invokevirtual #668                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     110: astore        7
     112: new           #27                 // class scalaz/$bslash$amp$div$Both
     115: dup
     116: aload         6
     118: checkcast     #646                // class scala/collection/immutable/VectorIterator
     121: invokestatic  #650                // Method $anonfun$whichHasNext$1:(Lscala/collection/immutable/VectorIterator;)Z
     124: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     127: aload         7
     129: checkcast     #646                // class scala/collection/immutable/VectorIterator
     132: invokestatic  #665                // Method $anonfun$whichHasNext$2:(Lscala/collection/immutable/VectorIterator;)Z
     135: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     138: invokespecial #671                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     141: astore_2
     142: goto          154
     145: new           #673                // class scala/MatchError
     148: dup
     149: aload_1
     150: invokespecial #674                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     153: athrow
     154: aload_2
     155: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #680                // Method whichHasNext:()Lscalaz/$bslash$amp$div;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_1
      11: aload_1
      12: instanceof    #35                 // class scalaz/$bslash$amp$div$This
      15: ifeq          35
      18: aload_1
      19: checkcast     #35                 // class scalaz/$bslash$amp$div$This
      22: invokevirtual #644                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      25: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      28: invokestatic  #687                // Method $anonfun$hasNext$1:(Z)Z
      31: istore_2
      32: goto          109
      35: aload_1
      36: instanceof    #32                 // class scalaz/$bslash$amp$div$That
      39: ifeq          59
      42: aload_1
      43: checkcast     #32                 // class scalaz/$bslash$amp$div$That
      46: invokevirtual #662                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      49: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      52: invokestatic  #690                // Method $anonfun$hasNext$2:(Z)Z
      55: istore_2
      56: goto          109
      59: aload_1
      60: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
      63: ifeq          100
      66: aload_1
      67: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
      70: astore_3
      71: aload_3
      72: invokevirtual #667                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      75: astore        4
      77: aload_3
      78: invokevirtual #668                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
      81: astore        5
      83: aload         4
      85: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      88: aload         5
      90: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      93: invokestatic  #694                // Method $anonfun$hasNext$3:(ZZ)Z
      96: istore_2
      97: goto          109
     100: new           #673                // class scala/MatchError
     103: dup
     104: aload_1
     105: invokespecial #674                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: iload_2
     110: ireturn

  public scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> next();
    Code:
       0: aload_0
       1: invokevirtual #680                // Method whichHasNext:()Lscalaz/$bslash$amp$div;
       4: astore        4
       6: aload         4
       8: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
      11: ifeq          244
      14: aload         4
      16: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
      19: astore        5
      21: getstatic     #704                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
      24: aload         5
      26: invokevirtual #708                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
      29: astore        6
      31: aload         6
      33: invokevirtual #712                // Method scala/Some.isEmpty:()Z
      36: ifne          244
      39: aload         6
      41: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
      44: checkcast     #717                // class scala/Tuple2
      47: invokevirtual #720                // Method scala/Tuple2._1:()Ljava/lang/Object;
      50: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      53: istore        7
      55: aload         6
      57: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
      60: checkcast     #717                // class scala/Tuple2
      63: invokevirtual #723                // Method scala/Tuple2._2:()Ljava/lang/Object;
      66: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      69: istore        8
      71: iconst_1
      72: iload         7
      74: if_icmpne     244
      77: iconst_1
      78: iload         8
      80: if_icmpne     244
      83: aload_0
      84: getfield      #640                // Field iterators:Lscalaz/$bslash$amp$div;
      87: dup
      88: ifnonnull     93
      91: aconst_null
      92: athrow
      93: astore        19
      95: aload         19
      97: instanceof    #35                 // class scalaz/$bslash$amp$div$This
     100: ifeq          133
     103: aload         19
     105: checkcast     #35                 // class scalaz/$bslash$amp$div$This
     108: invokevirtual #644                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     111: astore        21
     113: new           #35                 // class scalaz/$bslash$amp$div$This
     116: dup
     117: aload         21
     119: checkcast     #646                // class scala/collection/immutable/VectorIterator
     122: invokestatic  #727                // Method $anonfun$next$1:(Lscala/collection/immutable/VectorIterator;)Lscalaz/StrictTree;
     125: invokespecial #659                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     128: astore        20
     130: goto          238
     133: aload         19
     135: instanceof    #32                 // class scalaz/$bslash$amp$div$That
     138: ifeq          171
     141: aload         19
     143: checkcast     #32                 // class scalaz/$bslash$amp$div$That
     146: invokevirtual #662                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     149: astore        22
     151: new           #32                 // class scalaz/$bslash$amp$div$That
     154: dup
     155: aload         22
     157: checkcast     #646                // class scala/collection/immutable/VectorIterator
     160: invokestatic  #730                // Method $anonfun$next$2:(Lscala/collection/immutable/VectorIterator;)Lscalaz/StrictTree;
     163: invokespecial #666                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     166: astore        20
     168: goto          238
     171: aload         19
     173: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
     176: ifeq          228
     179: aload         19
     181: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
     184: astore        23
     186: aload         23
     188: invokevirtual #667                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     191: astore        24
     193: aload         23
     195: invokevirtual #668                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     198: astore        25
     200: new           #27                 // class scalaz/$bslash$amp$div$Both
     203: dup
     204: aload         24
     206: checkcast     #646                // class scala/collection/immutable/VectorIterator
     209: invokestatic  #727                // Method $anonfun$next$1:(Lscala/collection/immutable/VectorIterator;)Lscalaz/StrictTree;
     212: aload         25
     214: checkcast     #646                // class scala/collection/immutable/VectorIterator
     217: invokestatic  #730                // Method $anonfun$next$2:(Lscala/collection/immutable/VectorIterator;)Lscalaz/StrictTree;
     220: invokespecial #671                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     223: astore        20
     225: goto          238
     228: new           #673                // class scala/MatchError
     231: dup
     232: aload         19
     234: invokespecial #674                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     237: athrow
     238: aload         20
     240: astore_1
     241: goto          549
     244: aload         4
     246: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
     249: ifeq          326
     252: aload         4
     254: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
     257: astore        9
     259: getstatic     #704                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
     262: aload         9
     264: invokevirtual #708                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
     267: astore        10
     269: aload         10
     271: invokevirtual #712                // Method scala/Some.isEmpty:()Z
     274: ifne          326
     277: aload         10
     279: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
     282: checkcast     #717                // class scala/Tuple2
     285: invokevirtual #720                // Method scala/Tuple2._1:()Ljava/lang/Object;
     288: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     291: istore        11
     293: aload         10
     295: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
     298: checkcast     #717                // class scala/Tuple2
     301: invokevirtual #723                // Method scala/Tuple2._2:()Ljava/lang/Object;
     304: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     307: istore        12
     309: iconst_1
     310: iload         11
     312: if_icmpne     326
     315: iconst_0
     316: iload         12
     318: if_icmpne     326
     321: iconst_1
     322: istore_3
     323: goto          360
     326: aload         4
     328: instanceof    #35                 // class scalaz/$bslash$amp$div$This
     331: ifeq          358
     334: aload         4
     336: checkcast     #35                 // class scalaz/$bslash$amp$div$This
     339: invokevirtual #644                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     342: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     345: istore        13
     347: iconst_1
     348: iload         13
     350: if_icmpne     358
     353: iconst_1
     354: istore_3
     355: goto          360
     358: iconst_0
     359: istore_3
     360: iload_3
     361: ifeq          391
     364: new           #35                 // class scalaz/$bslash$amp$div$This
     367: dup
     368: aload_0
     369: getfield      #640                // Field iterators:Lscalaz/$bslash$amp$div;
     372: invokevirtual #733                // Method scalaz/$bslash$amp$div.onlyThis:()Lscala/Option;
     375: invokevirtual #736                // Method scala/Option.get:()Ljava/lang/Object;
     378: checkcast     #646                // class scala/collection/immutable/VectorIterator
     381: invokevirtual #738                // Method scala/collection/immutable/VectorIterator.next:()Ljava/lang/Object;
     384: invokespecial #659                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     387: astore_1
     388: goto          549
     391: aload         4
     393: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
     396: ifeq          473
     399: aload         4
     401: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
     404: astore        14
     406: getstatic     #704                // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
     409: aload         14
     411: invokevirtual #708                // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
     414: astore        15
     416: aload         15
     418: invokevirtual #712                // Method scala/Some.isEmpty:()Z
     421: ifne          473
     424: aload         15
     426: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
     429: checkcast     #717                // class scala/Tuple2
     432: invokevirtual #720                // Method scala/Tuple2._1:()Ljava/lang/Object;
     435: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     438: istore        16
     440: aload         15
     442: invokevirtual #715                // Method scala/Some.get:()Ljava/lang/Object;
     445: checkcast     #717                // class scala/Tuple2
     448: invokevirtual #723                // Method scala/Tuple2._2:()Ljava/lang/Object;
     451: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     454: istore        17
     456: iconst_0
     457: iload         16
     459: if_icmpne     473
     462: iconst_1
     463: iload         17
     465: if_icmpne     473
     468: iconst_1
     469: istore_2
     470: goto          507
     473: aload         4
     475: instanceof    #32                 // class scalaz/$bslash$amp$div$That
     478: ifeq          505
     481: aload         4
     483: checkcast     #32                 // class scalaz/$bslash$amp$div$That
     486: invokevirtual #662                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     489: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     492: istore        18
     494: iconst_1
     495: iload         18
     497: if_icmpne     505
     500: iconst_1
     501: istore_2
     502: goto          507
     505: iconst_0
     506: istore_2
     507: iload_2
     508: ifeq          538
     511: new           #32                 // class scalaz/$bslash$amp$div$That
     514: dup
     515: aload_0
     516: getfield      #640                // Field iterators:Lscalaz/$bslash$amp$div;
     519: invokevirtual #741                // Method scalaz/$bslash$amp$div.onlyThat:()Lscala/Option;
     522: invokevirtual #736                // Method scala/Option.get:()Ljava/lang/Object;
     525: checkcast     #646                // class scala/collection/immutable/VectorIterator
     528: invokevirtual #738                // Method scala/collection/immutable/VectorIterator.next:()Ljava/lang/Object;
     531: invokespecial #666                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     534: astore_1
     535: goto          549
     538: new           #743                // class java/util/NoSuchElementException
     541: dup
     542: ldc_w         #745                // String reached iterator end
     545: invokespecial #748                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
     548: athrow
     549: aload_1
     550: areturn

  public <A, B, C> scalaz.StrictTree$AlignStackElem<A, B, C> copy(scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>>, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>);
    Code:
       0: new           #2                  // class scalaz/StrictTree$AlignStackElem
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #754                // Method "<init>":(Lscala/Option;Lscalaz/$bslash$amp$div;)V
       9: areturn

  public <A, B, C> scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #758                // Method parent:()Lscala/Option;
       4: areturn

  public <A, B, C> scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #762                // Method trees:()Lscalaz/$bslash$amp$div;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #764                // String AlignStackElem
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 29
               default: 34
          }
      24: aload_0
      25: invokevirtual #758                // Method parent:()Lscala/Option;
      28: areturn
      29: aload_0
      30: invokevirtual #762                // Method trees:()Lscalaz/$bslash$amp$div;
      33: areturn
      34: new           #770                // class java/lang/IndexOutOfBoundsException
      37: dup
      38: iload_1
      39: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: invokevirtual #776                // Method java/lang/Object.toString:()Ljava/lang/String;
      45: invokespecial #777                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      48: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #784                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #788                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree$AlignStackElem
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #784                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #794                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     106
       5: aload_1
       6: instanceof    #2                  // class scalaz/StrictTree$AlignStackElem
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          108
      23: aload_1
      24: checkcast     #2                  // class scalaz/StrictTree$AlignStackElem
      27: astore_3
      28: aload_0
      29: invokevirtual #758                // Method parent:()Lscala/Option;
      32: aload_3
      33: invokevirtual #758                // Method parent:()Lscala/Option;
      36: astore        4
      38: dup
      39: ifnonnull     51
      42: pop
      43: aload         4
      45: ifnull        59
      48: goto          102
      51: aload         4
      53: invokevirtual #797                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          102
      59: aload_0
      60: invokevirtual #762                // Method trees:()Lscalaz/$bslash$amp$div;
      63: aload_3
      64: invokevirtual #762                // Method trees:()Lscalaz/$bslash$amp$div;
      67: astore        5
      69: dup
      70: ifnonnull     82
      73: pop
      74: aload         5
      76: ifnull        90
      79: goto          102
      82: aload         5
      84: invokevirtual #797                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          102
      90: aload_3
      91: aload_0
      92: invokevirtual #799                // Method canEqual:(Ljava/lang/Object;)Z
      95: ifeq          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: ifeq          108
     106: iconst_1
     107: ireturn
     108: iconst_0
     109: ireturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #802                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #805                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #808                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #811                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #814                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #817                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #819                // Method next:()Lscalaz/$bslash$amp$div;
       4: areturn

  public static final scala.collection.immutable.VectorIterator $anonfun$iterators$1(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #825                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
       4: invokevirtual #831                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/immutable/VectorIterator;
       7: areturn

  public static final scala.collection.immutable.VectorIterator $anonfun$iterators$2(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #825                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
       4: invokevirtual #831                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/immutable/VectorIterator;
       7: areturn

  public static final boolean $anonfun$whichHasNext$1(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokevirtual #837                // Method scala/collection/immutable/VectorIterator.hasNext:()Z
       4: ireturn

  public static final boolean $anonfun$whichHasNext$2(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokevirtual #837                // Method scala/collection/immutable/VectorIterator.hasNext:()Z
       4: ireturn

  public static final boolean $anonfun$hasNext$1(boolean);
    Code:
       0: getstatic     #845                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_0
       4: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: invokevirtual #849                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ireturn

  public static final boolean $anonfun$hasNext$2(boolean);
    Code:
       0: getstatic     #845                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_0
       4: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: invokevirtual #849                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ireturn

  public static final boolean $anonfun$hasNext$3(boolean, boolean);
    Code:
       0: iload_0
       1: ifne          8
       4: iload_1
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: iconst_0
      11: ireturn

  public static final scalaz.StrictTree $anonfun$next$1(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokevirtual #738                // Method scala/collection/immutable/VectorIterator.next:()Ljava/lang/Object;
       4: checkcast     #38                 // class scalaz/StrictTree
       7: areturn

  public static final scalaz.StrictTree $anonfun$next$2(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokevirtual #738                // Method scala/collection/immutable/VectorIterator.next:()Ljava/lang/Object;
       4: checkcast     #38                 // class scalaz/StrictTree
       7: areturn

  public scalaz.StrictTree$AlignStackElem(scala.Option<scalaz.StrictTree$AlignStackElem<A, B, C>>, scalaz.$bslash$amp$div<scalaz.StrictTree<A>, scalaz.StrictTree<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #629                // Field parent:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #633                // Field trees:Lscalaz/$bslash$amp$div;
      10: aload_0
      11: invokespecial #858                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #862                // InterfaceMethod scala/collection/GenTraversableOnce.$init$:(Lscala/collection/GenTraversableOnce;)V
      18: aload_0
      19: invokestatic  #865                // InterfaceMethod scala/collection/TraversableOnce.$init$:(Lscala/collection/TraversableOnce;)V
      22: aload_0
      23: invokestatic  #868                // InterfaceMethod scala/collection/Iterator.$init$:(Lscala/collection/Iterator;)V
      26: aload_0
      27: invokestatic  #871                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      30: aload_0
      31: aload_2
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: aload_2
      38: instanceof    #35                 // class scalaz/$bslash$amp$div$This
      41: ifeq          72
      44: aload_2
      45: checkcast     #35                 // class scalaz/$bslash$amp$div$This
      48: invokevirtual #644                // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      51: astore        4
      53: new           #35                 // class scalaz/$bslash$amp$div$This
      56: dup
      57: aload         4
      59: checkcast     #38                 // class scalaz/StrictTree
      62: invokestatic  #873                // Method $anonfun$iterators$1:(Lscalaz/StrictTree;)Lscala/collection/immutable/VectorIterator;
      65: invokespecial #659                // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      68: astore_3
      69: goto          170
      72: aload_2
      73: instanceof    #32                 // class scalaz/$bslash$amp$div$That
      76: ifeq          107
      79: aload_2
      80: checkcast     #32                 // class scalaz/$bslash$amp$div$That
      83: invokevirtual #662                // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      86: astore        5
      88: new           #32                 // class scalaz/$bslash$amp$div$That
      91: dup
      92: aload         5
      94: checkcast     #38                 // class scalaz/StrictTree
      97: invokestatic  #875                // Method $anonfun$iterators$2:(Lscalaz/StrictTree;)Lscala/collection/immutable/VectorIterator;
     100: invokespecial #666                // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     103: astore_3
     104: goto          170
     107: aload_2
     108: instanceof    #27                 // class scalaz/$bslash$amp$div$Both
     111: ifeq          161
     114: aload_2
     115: checkcast     #27                 // class scalaz/$bslash$amp$div$Both
     118: astore        6
     120: aload         6
     122: invokevirtual #667                // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     125: astore        7
     127: aload         6
     129: invokevirtual #668                // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     132: astore        8
     134: new           #27                 // class scalaz/$bslash$amp$div$Both
     137: dup
     138: aload         7
     140: checkcast     #38                 // class scalaz/StrictTree
     143: invokestatic  #873                // Method $anonfun$iterators$1:(Lscalaz/StrictTree;)Lscala/collection/immutable/VectorIterator;
     146: aload         8
     148: checkcast     #38                 // class scalaz/StrictTree
     151: invokestatic  #875                // Method $anonfun$iterators$2:(Lscalaz/StrictTree;)Lscala/collection/immutable/VectorIterator;
     154: invokespecial #671                // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     157: astore_3
     158: goto          170
     161: new           #673                // class scala/MatchError
     164: dup
     165: aload_2
     166: invokespecial #674                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     169: athrow
     170: aload_3
     171: putfield      #640                // Field iterators:Lscalaz/$bslash$amp$div;
     174: aload_0
     175: getstatic     #880                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
     178: invokevirtual #883                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/GenTraversable;
     181: checkcast     #885                // class scala/collection/mutable/Buffer
     184: putfield      #636                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
     187: return

  public static final java.lang.Object $anonfun$whichHasNext$1$adapted(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokestatic  #650                // Method $anonfun$whichHasNext$1:(Lscala/collection/immutable/VectorIterator;)Z
       4: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$whichHasNext$2$adapted(scala.collection.immutable.VectorIterator);
    Code:
       0: aload_0
       1: invokestatic  #665                // Method $anonfun$whichHasNext$2:(Lscala/collection/immutable/VectorIterator;)Z
       4: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$hasNext$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #687                // Method $anonfun$hasNext$1:(Z)Z
       7: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static final java.lang.Object $anonfun$hasNext$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #690                // Method $anonfun$hasNext$2:(Z)Z
       7: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static final java.lang.Object $anonfun$hasNext$3$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: aload_1
       5: invokestatic  #683                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       8: invokestatic  #694                // Method $anonfun$hasNext$3:(ZZ)Z
      11: invokestatic  #656                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      14: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #923,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
