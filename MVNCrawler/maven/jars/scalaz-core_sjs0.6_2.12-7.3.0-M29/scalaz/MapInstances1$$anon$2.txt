Compiled from "Map.scala"
public final class scalaz.MapInstances1$$anon$2 implements scalaz.SemiLattice<scalaz.$eq$eq$greater$greater<A, B>> {
  private final scalaz.syntax.SemiLatticeSyntax<scalaz.$eq$eq$greater$greater<A, B>> semiLatticeSyntax;

  private final scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>> bandSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>> semigroupSyntax;

  private final scalaz.SemiLattice B$2;

  private final scalaz.Order A$2;

  public scalaz.SemiLattice<scalaz.$eq$eq$greater$greater<A, B>>.SemiLatticeLaw semiLatticeLaw();
    Code:
       0: aload_0
       1: invokestatic  #51                 // InterfaceMethod scalaz/SemiLattice.semiLatticeLaw$:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice$SemiLatticeLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scalaz.$eq$eq$greater$greater<A, B>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public <S> scalaz.Maybe<scalaz.$eq$eq$greater$greater<A, B>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.$eq$eq$greater$greater<A, B>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$eq$eq$greater$greater<A, B>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.$eq$eq$greater$greater<A, B>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.$eq$eq$greater$greater<A, B>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemiLatticeSyntax<scalaz.$eq$eq$greater$greater<A, B>> semiLatticeSyntax();
    Code:
       0: aload_0
       1: getfield      #110                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       4: areturn

  public void scalaz$SemiLattice$_setter_$semiLatticeSyntax_$eq(scalaz.syntax.SemiLatticeSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       5: return

  public scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #118                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #125                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.$eq$eq$greater$greater<A, B> append(scalaz.$eq$eq$greater$greater<A, B>, scala.Function0<scalaz.$eq$eq$greater$greater<A, B>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #138,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #140                // class scalaz/$eq$eq$greater$greater
      10: aload_0
      11: invokedynamic #161,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances1$$anon$2;)Lscala/Function2;
      16: aload_0
      17: getfield      #163                // Field A$2:Lscalaz/Order;
      20: invokevirtual #167                // Method scalaz/$eq$eq$greater$greater.unionWith:(Lscalaz/$eq$eq$greater$greater;Lscala/Function2;Lscalaz/Order;)Lscalaz/$eq$eq$greater$greater;
      23: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #140                // class scalaz/$eq$eq$greater$greater
       4: aload_2
       5: invokeinterface #138,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #140                // class scalaz/$eq$eq$greater$greater
      13: aload_0
      14: invokedynamic #161,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances1$$anon$2;)Lscala/Function2;
      19: aload_0
      20: getfield      #163                // Field A$2:Lscalaz/Order;
      23: invokevirtual #167                // Method scalaz/$eq$eq$greater$greater.unionWith:(Lscalaz/$eq$eq$greater$greater;Lscala/Function2;Lscalaz/Order;)Lscalaz/$eq$eq$greater$greater;
      26: areturn

  public static final java.lang.Object $anonfun$append$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$append$3(scalaz.MapInstances1$$anon$2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #180                // Field B$2:Lscalaz/SemiLattice;
       4: aload_1
       5: aload_2
       6: invokedynamic #187,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #189,  3          // InterfaceMethod scalaz/SemiLattice.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      16: areturn

  public scalaz.MapInstances1$$anon$2(scalaz.MapInstances1, scalaz.SemiLattice, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #180                // Field B$2:Lscalaz/SemiLattice;
       5: aload_0
       6: aload_3
       7: putfield      #163                // Field A$2:Lscalaz/Order;
      10: aload_0
      11: invokespecial #195                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #199                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #202                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      22: aload_0
      23: invokestatic  #205                // InterfaceMethod scalaz/SemiLattice.$init$:(Lscalaz/SemiLattice;)V
      26: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #218,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
