Compiled from "CaseInsensitive.scala"
public final class scalaz.CaseInsensitiveInstances$$anon$2 implements scalaz.Monoid<scalaz.CaseInsensitive<A>> {
  private final scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>> semigroupSyntax;

  private final scalaz.Monoid evidence$3$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #44                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #65                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #74                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #78                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #97                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.CaseInsensitive<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.CaseInsensitive<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.CaseInsensitive<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.CaseInsensitive<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.CaseInsensitive<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.CaseInsensitive<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #161                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.CaseInsensitive<A> zero();
    Code:
       0: getstatic     #173                // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: getstatic     #178                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       6: aload_0
       7: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
      10: astore_1
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_1
      17: invokeinterface #183,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      22: aload_0
      23: invokedynamic #203,  0            // InvokeDynamic #0:apply:(Lscalaz/CaseInsensitiveInstances$$anon$2;)Lscala/Function0;
      28: astore_3
      29: astore_2
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: new           #20                 // class scalaz/CaseInsensitive$$anon$1
      38: dup
      39: aload_2
      40: aload_3
      41: invokespecial #207                // Method scalaz/CaseInsensitive$$anon$1."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      44: areturn

  public scalaz.CaseInsensitive<A> append(scalaz.CaseInsensitive<A>, scala.Function0<scalaz.CaseInsensitive<A>>);
    Code:
       0: getstatic     #173                // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: getstatic     #220                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       6: aload_0
       7: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
      10: astore_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: aload_1
      18: invokevirtual #225                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
      21: aload_2
      22: invokedynamic #233,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      27: invokeinterface #236,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokedynamic #244,  0            // InvokeDynamic #2:apply:(Lscalaz/CaseInsensitiveInstances$$anon$2;Lscalaz/CaseInsensitive;Lscala/Function0;)Lscala/Function0;
      40: astore        5
      42: astore        4
      44: ifnonnull     49
      47: aconst_null
      48: athrow
      49: new           #20                 // class scalaz/CaseInsensitive$$anon$1
      52: dup
      53: aload         4
      55: aload         5
      57: invokespecial #207                // Method scalaz/CaseInsensitive$$anon$1."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      60: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #222                // class scalaz/CaseInsensitive
       4: astore_3
       5: getstatic     #173                // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       8: getstatic     #220                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
      11: aload_0
      12: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
      15: astore        4
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: aload_3
      25: invokevirtual #225                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
      28: aload_2
      29: invokedynamic #233,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      34: invokeinterface #236,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      39: aload_0
      40: aload_3
      41: aload_2
      42: invokedynamic #244,  0            // InvokeDynamic #2:apply:(Lscalaz/CaseInsensitiveInstances$$anon$2;Lscalaz/CaseInsensitive;Lscala/Function0;)Lscala/Function0;
      47: astore        6
      49: astore        5
      51: ifnonnull     56
      54: aconst_null
      55: athrow
      56: new           #20                 // class scalaz/CaseInsensitive$$anon$1
      59: dup
      60: aload         5
      62: aload         6
      64: invokespecial #207                // Method scalaz/CaseInsensitive$$anon$1."<init>":(Ljava/lang/Object;Lscala/Function0;)V
      67: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #252                // Method zero:()Lscalaz/CaseInsensitive;
       4: areturn

  public static final java.lang.Object $anonfun$zero$1(scalaz.CaseInsensitiveInstances$$anon$2);
    Code:
       0: getstatic     #178                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
       3: aload_0
       4: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       7: astore_1
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_1
      14: invokeinterface #183,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      19: areturn

  public static final java.lang.Object $anonfun$append$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #256,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #222                // class scalaz/CaseInsensitive
       9: invokevirtual #225                // Method scalaz/CaseInsensitive.original:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$append$3(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #256,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #222                // class scalaz/CaseInsensitive
       9: invokevirtual #260                // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$append$2(scalaz.CaseInsensitiveInstances$$anon$2, scalaz.CaseInsensitive, scala.Function0);
    Code:
       0: getstatic     #220                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       3: aload_0
       4: getfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_3
      14: aload_1
      15: invokevirtual #260                // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      18: aload_2
      19: invokedynamic #265,  0            // InvokeDynamic #3:apply:(Lscala/Function0;)Lscala/Function0;
      24: invokeinterface #236,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      29: areturn

  public scalaz.CaseInsensitiveInstances$$anon$2(scalaz.CaseInsensitiveInstances, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #180                // Field evidence$3$1:Lscalaz/Monoid;
       5: aload_0
       6: invokespecial #270                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #274                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #277                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #290,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
