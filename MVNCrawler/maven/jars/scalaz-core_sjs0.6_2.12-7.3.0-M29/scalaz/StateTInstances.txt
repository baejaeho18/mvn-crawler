Compiled from "StateT.scala"
public abstract class scalaz.StateTInstances extends scalaz.StateTInstances0 {
  public <S> scalaz.MonadState<?, S> stateMonad();
    Code:
       0: getstatic     #20                 // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
       3: getstatic     #25                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
       6: invokevirtual #29                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
       9: checkcast     #31                 // class scalaz/Applicative
      12: invokevirtual #35                 // Method scalaz/package$StateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      15: areturn

  public <S2, F, A> scalaz.IsContravariant<?> contravariantS1();
    Code:
       0: getstatic     #45                 // Field scalaz/IsContravariant$.MODULE$:Lscalaz/IsContravariant$;
       3: invokevirtual #48                 // Method scalaz/IsContravariant$.force:()Lscalaz/IsContravariant;
       6: areturn

  public scalaz.StateTInstances();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method scalaz/StateTInstances0."<init>":()V
       4: return
}
