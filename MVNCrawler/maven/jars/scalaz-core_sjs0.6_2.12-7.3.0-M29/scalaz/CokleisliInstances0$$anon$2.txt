Compiled from "Cokleisli.scala"
public final class scalaz.CokleisliInstances0$$anon$2 implements scalaz.CokleisliProfunctor<F> {
  private final scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax;

  private final scalaz.Functor evidence$1$1;

  public <A, B, C, D> scalaz.Cokleisli<F, C, D> dimap(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #38                 // InterfaceMethod scalaz/CokleisliProfunctor.dimap$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;Lscala/Function1;)Lscalaz/Cokleisli;
       7: areturn

  public final <A, B, C> scalaz.Cokleisli<F, C, B> mapfst(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/CokleisliProfunctor.mapfst$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public final <A, B, C> scalaz.Cokleisli<F, A, C> mapsnd(scalaz.Cokleisli<F, A, B>, scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/CokleisliProfunctor.mapsnd$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #62                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<?>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #83                 // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #87                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public scalaz.Functor<F> F();
    Code:
       0: getstatic     #99                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #101                // Field evidence$1$1:Lscalaz/Functor;
       7: invokevirtual #105                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #107                // class scalaz/Functor
      13: areturn

  public final java.lang.Object mapsnd(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #110                // class scalaz/Cokleisli
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: new           #110                // class scalaz/Cokleisli
      14: dup
      15: aload_2
      16: aload_3
      17: invokevirtual #114                // Method scalaz/Cokleisli.run:()Lscala/Function1;
      20: invokeinterface #120,  2          // InterfaceMethod scala/Function1.compose:(Lscala/Function1;)Lscala/Function1;
      25: invokespecial #124                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      28: areturn

  public final java.lang.Object mapfst(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #110                // class scalaz/Cokleisli
       4: astore_3
       5: new           #110                // class scalaz/Cokleisli
       8: dup
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokedynamic #147,  0            // InvokeDynamic #0:apply:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscala/Function1;
      17: invokespecial #124                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      20: areturn

  public java.lang.Object dimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #110                // class scalaz/Cokleisli
       4: astore        4
       6: aload         4
       8: aload_0
       9: invokeinterface #151,  1          // InterfaceMethod scalaz/CokleisliProfunctor.F:()Lscalaz/Functor;
      14: astore        5
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: new           #110                // class scalaz/Cokleisli
      24: dup
      25: aload         4
      27: aload_3
      28: aload         5
      30: aload_2
      31: invokedynamic #159,  0            // InvokeDynamic #1:apply:(Lscalaz/Cokleisli;Lscala/Function1;Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
      36: invokespecial #124                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      39: areturn

  public scalaz.CokleisliInstances0$$anon$2(scalaz.CokleisliInstances0, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #101                // Field evidence$1$1:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #166                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #170                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      13: aload_0
      14: invokestatic  #173                // InterfaceMethod scalaz/CokleisliProfunctor.$init$:(Lscalaz/CokleisliProfunctor;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #186,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
