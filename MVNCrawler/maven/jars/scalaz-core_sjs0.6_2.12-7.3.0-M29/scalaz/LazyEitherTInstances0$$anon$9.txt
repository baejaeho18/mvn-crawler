Compiled from "LazyEitherT.scala"
public final class scalaz.LazyEitherTInstances0$$anon$9 implements scalaz.LazyEitherTBifunctor<F> {
  private final scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.Functor F0$7;

  public final <A, B, C, D> scalaz.LazyEitherT<F, C, D> bimap(scalaz.LazyEitherT<F, A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #38                 // InterfaceMethod scalaz/LazyEitherTBifunctor.bimap$:(Lscalaz/LazyEitherTBifunctor;Lscalaz/LazyEitherT;Lscala/Function1;Lscala/Function1;)Lscalaz/LazyEitherT;
       7: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #64                 // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #118                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Functor<F> F();
    Code:
       0: aload_0
       1: getfield      #126                // Field F0$7:Lscalaz/Functor;
       4: areturn

  public final java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #22                 // class scalaz/LazyEitherT
       4: astore        4
       6: aload         4
       8: aload_3
       9: invokedynamic #150,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload_0
      15: invokeinterface #152,  1          // InterfaceMethod scalaz/LazyEitherTBifunctor.F:()Lscalaz/Functor;
      20: astore        6
      22: astore        5
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: getstatic     #158                // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
      32: aload         6
      34: aload         4
      36: invokevirtual #162                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      39: aload         5
      41: invokedynamic #170,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      46: invokeinterface #175,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      51: invokevirtual #179                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      54: invokevirtual #183                // Method scalaz/LazyEitherT.left:()Lscalaz/LazyEitherT$LeftProjectionT;
      57: aload_2
      58: invokedynamic #188,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
      63: aload_0
      64: invokeinterface #152,  1          // InterfaceMethod scalaz/LazyEitherTBifunctor.F:()Lscalaz/Functor;
      69: astore        9
      71: astore        8
      73: dup
      74: ifnonnull     79
      77: aconst_null
      78: athrow
      79: astore        7
      81: new           #22                 // class scalaz/LazyEitherT
      84: dup
      85: aload         9
      87: aload         7
      89: invokevirtual #191                // Method scalaz/LazyEitherT$LeftProjectionT.lazyEitherT:()Lscalaz/LazyEitherT;
      92: invokevirtual #162                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      95: aload         8
      97: invokedynamic #196,  0            // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function1;
     102: invokeinterface #175,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     107: invokespecial #200                // Method scalaz/LazyEitherT."<init>":(Ljava/lang/Object;)V
     110: areturn

  public scalaz.LazyEitherTInstances0$$anon$9(scalaz.LazyEitherTInstances0, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #126                // Field F0$7:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #212                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #216                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      13: aload_0
      14: invokestatic  #219                // InterfaceMethod scalaz/LazyEitherTBifunctor.$init$:(Lscalaz/LazyEitherTBifunctor;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #232,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
