Compiled from "MonadPlus.scala"
public final class scalaz.MonadPlus$$anon$4 implements scalaz.syntax.MonadPlusSyntax<F> {
  private final scalaz.MonadPlus $outer;

  public <A> scalaz.syntax.MonadPlusOps<F, A> ToMonadPlusOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // InterfaceMethod scalaz/syntax/MonadPlusSyntax.ToMonadPlusOps$:(Lscalaz/syntax/MonadPlusSyntax;Ljava/lang/Object;)Lscalaz/syntax/MonadPlusOps;
       5: areturn

  public <A> scalaz.syntax.ApplicativePlusOps<F, A> ToApplicativePlusOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // InterfaceMethod scalaz/syntax/ApplicativePlusSyntax.ToApplicativePlusOps$:(Lscalaz/syntax/ApplicativePlusSyntax;Ljava/lang/Object;)Lscalaz/syntax/ApplicativePlusOps;
       5: areturn

  public <A> scalaz.syntax.PlusEmptyOps<F, A> ToPlusEmptyOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // InterfaceMethod scalaz/syntax/PlusEmptySyntax.ToPlusEmptyOps$:(Lscalaz/syntax/PlusEmptySyntax;Ljava/lang/Object;)Lscalaz/syntax/PlusEmptyOps;
       5: areturn

  public <A> scalaz.syntax.PlusOps<F, A> ToPlusOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // InterfaceMethod scalaz/syntax/PlusSyntax.ToPlusOps$:(Lscalaz/syntax/PlusSyntax;Ljava/lang/Object;)Lscalaz/syntax/PlusOps;
       5: areturn

  public <A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/syntax/MonadSyntax.ToMonadOps$:(Lscalaz/syntax/MonadSyntax;Ljava/lang/Object;)Lscalaz/syntax/MonadOps;
       5: areturn

  public <A> scalaz.syntax.BindOps<F, A> ToBindOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // InterfaceMethod scalaz/syntax/BindSyntax.ToBindOps$:(Lscalaz/syntax/BindSyntax;Ljava/lang/Object;)Lscalaz/syntax/BindOps;
       5: areturn

  public <A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.ToApplicativeOps$:(Lscalaz/syntax/ApplicativeSyntax;Ljava/lang/Object;)Lscalaz/syntax/ApplicativeOps;
       5: areturn

  public <A> F point(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.point$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> F pure(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // InterfaceMethod scalaz/syntax/ApplicativeSyntax.pure$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> F η(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scalaz/syntax/ApplicativeSyntax.η$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> scalaz.syntax.ApplicativeSyntax<F>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/syntax/ApplicativeSyntax.ApplicativeIdV$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;)Lscalaz/syntax/ApplicativeSyntax$ApplicativeIdV;
       5: areturn

  public <A> scalaz.syntax.InvariantApplicativeOps<F, A> ToInvariantApplicativeOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // InterfaceMethod scalaz/syntax/InvariantApplicativeSyntax.ToInvariantApplicativeOps$:(Lscalaz/syntax/InvariantApplicativeSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantApplicativeOps;
       5: areturn

  public <A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod scalaz/syntax/ApplySyntax.ToApplyOps$:(Lscalaz/syntax/ApplySyntax;Ljava/lang/Object;)Lscalaz/syntax/ApplyOps;
       5: areturn

  public <A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #138                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #147                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public <A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #156                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public <A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #165                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public <A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #174                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public <A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #183                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public <A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod scalaz/syntax/FunctorSyntax.ToFunctorOps$:(Lscalaz/syntax/FunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/FunctorOps;
       5: areturn

  public <A, B> scalaz.syntax.FunctorSyntax<F>.LiftV<A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #198                // InterfaceMethod scalaz/syntax/FunctorSyntax.ToLiftV$:(Lscalaz/syntax/FunctorSyntax;Lscala/Function1;)Lscalaz/syntax/FunctorSyntax$LiftV;
       5: areturn

  public <A> scalaz.syntax.InvariantFunctorOps<F, A> ToInvariantFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.ToInvariantFunctorOps$:(Lscalaz/syntax/InvariantFunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantFunctorOps;
       5: areturn

  public scalaz.MonadPlus<F> F();
    Code:
       0: aload_0
       1: getfield      #212                // Field $outer:Lscalaz/MonadPlus;
       4: areturn

  public scalaz.InvariantFunctor F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Apply F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.InvariantApplicative F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Applicative F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Bind F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Monad F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.Plus F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.PlusEmpty F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.ApplicativePlus F();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method F:()Lscalaz/MonadPlus;
       4: areturn

  public scalaz.MonadPlus$$anon$4(scalaz.MonadPlus<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #212                // Field $outer:Lscalaz/MonadPlus;
      11: aload_0
      12: invokespecial #230                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #234                // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.$init$:(Lscalaz/syntax/InvariantFunctorSyntax;)V
      19: aload_0
      20: invokestatic  #237                // InterfaceMethod scalaz/syntax/FunctorSyntax.$init$:(Lscalaz/syntax/FunctorSyntax;)V
      23: aload_0
      24: invokestatic  #240                // InterfaceMethod scalaz/syntax/ApplySyntax.$init$:(Lscalaz/syntax/ApplySyntax;)V
      27: aload_0
      28: invokestatic  #243                // InterfaceMethod scalaz/syntax/InvariantApplicativeSyntax.$init$:(Lscalaz/syntax/InvariantApplicativeSyntax;)V
      31: aload_0
      32: invokestatic  #246                // InterfaceMethod scalaz/syntax/ApplicativeSyntax.$init$:(Lscalaz/syntax/ApplicativeSyntax;)V
      35: aload_0
      36: invokestatic  #249                // InterfaceMethod scalaz/syntax/BindSyntax.$init$:(Lscalaz/syntax/BindSyntax;)V
      39: aload_0
      40: invokestatic  #252                // InterfaceMethod scalaz/syntax/MonadSyntax.$init$:(Lscalaz/syntax/MonadSyntax;)V
      43: aload_0
      44: invokestatic  #255                // InterfaceMethod scalaz/syntax/PlusSyntax.$init$:(Lscalaz/syntax/PlusSyntax;)V
      47: aload_0
      48: invokestatic  #258                // InterfaceMethod scalaz/syntax/PlusEmptySyntax.$init$:(Lscalaz/syntax/PlusEmptySyntax;)V
      51: aload_0
      52: invokestatic  #261                // InterfaceMethod scalaz/syntax/ApplicativePlusSyntax.$init$:(Lscalaz/syntax/ApplicativePlusSyntax;)V
      55: aload_0
      56: invokestatic  #264                // InterfaceMethod scalaz/syntax/MonadPlusSyntax.$init$:(Lscalaz/syntax/MonadPlusSyntax;)V
      59: return
}
