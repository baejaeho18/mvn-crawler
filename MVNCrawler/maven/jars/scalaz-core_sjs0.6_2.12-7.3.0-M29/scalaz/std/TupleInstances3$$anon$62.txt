Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances3$$anon$62 implements scalaz.std.Tuple5Order<A1, A2, A3, A4, A5> {
  private final boolean equalIsNatural;

  private final scalaz.syntax.OrderSyntax<scala.Tuple5<A1, A2, A3, A4, A5>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.Tuple5<A1, A2, A3, A4, A5>> equalSyntax;

  private final scalaz.Order A1$45;

  private final scalaz.Order A2$39;

  private final scalaz.Order A3$33;

  private final scalaz.Order A4$27;

  private final scalaz.Order A5$21;

  public scalaz.Ordering order(scala.Tuple5<A1, A2, A3, A4, A5>, scala.Tuple5<A1, A2, A3, A4, A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/std/Tuple5Order.order$:(Lscalaz/std/Tuple5Order;Lscala/Tuple5;Lscala/Tuple5;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scala.Tuple5<A1, A2, A3, A4, A5>, scala.Tuple5<A1, A2, A3, A4, A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/std/Tuple5Equal.equal$:(Lscalaz/std/Tuple5Equal;Lscala/Tuple5;Lscala/Tuple5;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.Tuple5<A1, A2, A3, A4, A5>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.Tuple5<A1, A2, A3, A4, A5>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.Tuple5<A1, A2, A3, A4, A5>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.Tuple5<A1, A2, A3, A4, A5>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.Tuple5<A1, A2, A3, A4, A5>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #143                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple5Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #143                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.Tuple5<A1, A2, A3, A4, A5>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #150                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.Tuple5<A1, A2, A3, A4, A5>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple5<A1, A2, A3, A4, A5>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple5<A1, A2, A3, A4, A5>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #164                // Field A1$45:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #168                // Field A2$39:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #172                // Field A3$33:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A4> _4();
    Code:
       0: aload_0
       1: getfield      #176                // Field A4$27:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A5> _5();
    Code:
       0: aload_0
       1: getfield      #180                // Field A5$21:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #185                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #187                // class scala/Tuple5
       5: aload_2
       6: checkcast     #187                // class scala/Tuple5
       9: invokevirtual #189                // Method equal:(Lscala/Tuple5;Lscala/Tuple5;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #187                // class scala/Tuple5
       5: aload_2
       6: checkcast     #187                // class scala/Tuple5
       9: invokevirtual #191                // Method order:(Lscala/Tuple5;Lscala/Tuple5;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _5();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method _5:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _4();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method _4:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.std.TupleInstances3$$anon$62(scalaz.std.TupleInstances3, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #164                // Field A1$45:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #168                // Field A2$39:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #172                // Field A3$33:Lscalaz/Order;
      16: aload_0
      17: aload         5
      19: putfield      #176                // Field A4$27:Lscalaz/Order;
      22: aload_0
      23: aload         6
      25: putfield      #180                // Field A5$21:Lscalaz/Order;
      28: aload_0
      29: invokespecial #207                // Method java/lang/Object."<init>":()V
      32: aload_0
      33: invokestatic  #211                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      36: aload_0
      37: invokestatic  #214                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      40: aload_0
      41: invokestatic  #217                // InterfaceMethod scalaz/std/Tuple5Equal.$init$:(Lscalaz/std/Tuple5Equal;)V
      44: aload_0
      45: invokestatic  #220                // InterfaceMethod scalaz/std/Tuple5Order.$init$:(Lscalaz/std/Tuple5Order;)V
      48: return
}
