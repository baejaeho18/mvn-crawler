Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$11 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object> {
  private final scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private final scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private final scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private final scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #83                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #101                // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #107                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #127                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #131                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #156                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #165                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #172                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #179                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #186                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #193                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #201                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #207                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #215                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #219                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #223                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #229                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #233                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #247                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #254                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #268                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #274                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #288                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #305                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #315                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #320                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #333                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #340                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #347                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #354                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #359                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #366                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #371                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #378                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #382                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #382                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #390                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #390                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #397                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #397                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #404                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #404                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #411                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #411                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      18: aload_1
      19: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      22: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: aload_2
      26: invokeinterface #448,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: astore_3
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_3
      42: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      45: imul
      46: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      49: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: iconst_1
       7: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_2
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_2
      28: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      40: aload_1
      41: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      44: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      47: invokeinterface #474,  2          // InterfaceMethod scalaz/Enum.succ:(Ljava/lang/Object;)Ljava/lang/Object;
      52: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_2
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_2
      28: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      40: aload_1
      41: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      44: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      47: invokeinterface #477,  2          // InterfaceMethod scalaz/Enum.pred:(Ljava/lang/Object;)Ljava/lang/Object;
      52: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: iload_1
      29: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_2
      42: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      45: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokeinterface #481,  3          // InterfaceMethod scalaz/Enum.succn:(ILjava/lang/Object;)Ljava/lang/Object;
      53: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: iload_1
      29: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_2
      42: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      45: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokeinterface #484,  3          // InterfaceMethod scalaz/Enum.predn:(ILjava/lang/Object;)Ljava/lang/Object;
      53: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_1
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_1
      28: invokeinterface #488,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      33: invokevirtual #491                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #493                // class scala/Option
      39: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #466                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_1
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_1
      28: invokeinterface #495,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      33: invokevirtual #491                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #493                // class scala/Option
      39: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #503                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
       7: invokeinterface #472,  1          // InterfaceMethod scalaz/std/AnyValInstances.intInstance:()Lscalaz/Monoid;
      12: checkcast     #42                 // class scalaz/Order
      15: astore_3
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_3
      22: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      34: aload_1
      35: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      38: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      41: getstatic     #434                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: invokevirtual #437                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_2
      54: invokevirtual #443                // Method scalaz/TagKind.unwrap$mIc$sp:(Ljava/lang/Object;)I
      57: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: invokeinterface #505,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      65: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: aload_2
       7: invokevirtual #514                // Method scalaz/Tag$TagOf.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #516                // class scala/Function1
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #29                 // class scalaz/Maybe
      24: aload_0
      25: aload_3
      26: invokedynamic #539,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$11;Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: dup
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: astore        4
      41: aload         5
      43: invokedynamic #548,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      48: invokeinterface #552,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      53: astore        6
      55: aload         4
      57: instanceof    #32                 // class scalaz/Maybe$Just
      60: ifeq          87
      63: aload         4
      65: checkcast     #32                 // class scalaz/Maybe$Just
      68: invokevirtual #555                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      71: astore        8
      73: aload         6
      75: aload         8
      77: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: astore        7
      84: goto          113
      87: aload         4
      89: instanceof    #27                 // class scalaz/Maybe$Empty
      92: ifeq          103
      95: invokestatic  #559                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      98: astore        7
     100: goto          113
     103: new           #561                // class scala/MatchError
     106: dup
     107: aload         4
     109: invokespecial #565                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload         7
     115: checkcast     #29                 // class scalaz/Maybe
     118: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_2
       1: invokedynamic #580,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      10: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
      13: aload_3
      14: invokevirtual #514                // Method scalaz/Tag$TagOf.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #516                // class scala/Function1
      20: astore        4
      22: aload         4
      24: aload_1
      25: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #29                 // class scalaz/Maybe
      33: aload_0
      34: aload         4
      36: invokedynamic #539,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$11;Lscala/Function1;)Lscala/Function1;
      41: astore        6
      43: dup
      44: ifnonnull     49
      47: aconst_null
      48: athrow
      49: astore        5
      51: aload         6
      53: invokedynamic #548,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      58: invokeinterface #552,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      63: astore        7
      65: aload         5
      67: instanceof    #32                 // class scalaz/Maybe$Just
      70: ifeq          97
      73: aload         5
      75: checkcast     #32                 // class scalaz/Maybe$Just
      78: invokevirtual #555                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      81: astore        9
      83: aload         7
      85: aload         9
      87: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      92: astore        8
      94: goto          123
      97: aload         5
      99: instanceof    #27                 // class scalaz/Maybe$Empty
     102: ifeq          113
     105: invokestatic  #559                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     108: astore        8
     110: goto          123
     113: new           #561                // class scala/MatchError
     116: dup
     117: aload         5
     119: invokespecial #565                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     122: athrow
     123: aload         8
     125: checkcast     #29                 // class scalaz/Maybe
     128: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #38                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #590                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  private final int go$5(java.lang.Object, int, scala.Function1);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpne     7
       5: iconst_0
       6: ireturn
       7: aload_3
       8: aload_1
       9: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #29                 // class scalaz/Maybe
      17: astore        4
      19: aload         4
      21: instanceof    #32                 // class scalaz/Maybe$Just
      24: ifeq          70
      27: aload         4
      29: checkcast     #32                 // class scalaz/Maybe$Just
      32: invokevirtual #555                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      35: checkcast     #596                // class scala/Tuple2
      38: astore        5
      40: aload         5
      42: ifnull        70
      45: aload         5
      47: invokevirtual #599                // Method scala/Tuple2._1:()Ljava/lang/Object;
      50: astore        6
      52: aload         5
      54: invokevirtual #603                // Method scala/Tuple2._2$mcI$sp:()I
      57: istore        7
      59: aload         6
      61: iload         7
      63: iload_2
      64: imul
      65: istore_2
      66: astore_1
      67: goto          0
      70: iload_2
      71: ireturn

  public static final java.lang.Object $anonfun$unfoldlSumOpt$3(scalaz.std.AnyValInstances$$anon$11, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        119
       4: aload_2
       5: invokevirtual #599                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #603                // Method scala/Tuple2._2$mcI$sp:()I
      14: istore        5
      16: getstatic     #425                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      19: invokevirtual #429                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
      22: aload         4
      24: iload         5
      26: istore        7
      28: astore        6
      30: iload         7
      32: iconst_0
      33: if_icmpne     40
      36: iconst_0
      37: goto          109
      40: aload_1
      41: aload         6
      43: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #29                 // class scalaz/Maybe
      51: astore        8
      53: aload         8
      55: instanceof    #32                 // class scalaz/Maybe$Just
      58: ifeq          107
      61: aload         8
      63: checkcast     #32                 // class scalaz/Maybe$Just
      66: invokevirtual #555                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      69: checkcast     #596                // class scala/Tuple2
      72: astore        9
      74: aload         9
      76: ifnull        107
      79: aload         9
      81: invokevirtual #599                // Method scala/Tuple2._1:()Ljava/lang/Object;
      84: astore        10
      86: aload         9
      88: invokevirtual #603                // Method scala/Tuple2._2$mcI$sp:()I
      91: istore        11
      93: aload         10
      95: iload         11
      97: iload         7
      99: imul
     100: istore        7
     102: astore        6
     104: goto          30
     107: iload         7
     109: invokestatic  #454                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     112: invokevirtual #457                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     115: astore_3
     116: goto          128
     119: new           #561                // class scala/MatchError
     122: dup
     123: aload_2
     124: invokespecial #565                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     127: athrow
     128: aload_3
     129: areturn

  public static final scala.Tuple2 $anonfun$unfoldrSumOpt$4(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #617                // Method scala/Tuple2.swap:()Lscala/Tuple2;
       4: areturn

  public static final scalaz.Maybe $anonfun$unfoldrSumOpt$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #29                 // class scalaz/Maybe
      10: invokedynamic #623,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      15: astore_3
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore_2
      23: aload_3
      24: invokedynamic #548,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      29: invokeinterface #552,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      34: astore        4
      36: aload_2
      37: instanceof    #32                 // class scalaz/Maybe$Just
      40: ifeq          66
      43: aload_2
      44: checkcast     #32                 // class scalaz/Maybe$Just
      47: invokevirtual #555                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      50: astore        6
      52: aload         4
      54: aload         6
      56: invokeinterface #517,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      61: astore        5
      63: goto          90
      66: aload_2
      67: instanceof    #27                 // class scalaz/Maybe$Empty
      70: ifeq          81
      73: invokestatic  #559                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      76: astore        5
      78: goto          90
      81: new           #561                // class scala/MatchError
      84: dup
      85: aload_2
      86: invokespecial #565                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload         5
      92: checkcast     #29                 // class scalaz/Maybe
      95: areturn

  public scalaz.std.AnyValInstances$$anon$11(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #468                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #627                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #631                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #634                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #637                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #640                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #643                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #656,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
