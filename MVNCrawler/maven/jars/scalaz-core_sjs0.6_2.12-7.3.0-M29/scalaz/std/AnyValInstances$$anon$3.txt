Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$3 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object>, scalaz.Band<java.lang.Object> {
  private final scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax;

  private final scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private final scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private final scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private final scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<java.lang.Object>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #100                // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #129                // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #135                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #142                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #147                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #155                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #159                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #167                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #190                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #197                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #204                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #211                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #218                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #226                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #232                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #236                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #244                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #248                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #254                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #258                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #265                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #279                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #286                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #299                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #306                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #311                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #328                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #338                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #343                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #351                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #356                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #363                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #370                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #377                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #384                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #389                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #396                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #400                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #400                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #408                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #408                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #415                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #415                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #422                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #422                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #429                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #429                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #436                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #436                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      18: aload_1
      19: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      22: ifeq          55
      25: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      28: aload_2
      29: invokeinterface #473,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: astore_3
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      44: aload_3
      45: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      59: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: iconst_1
       7: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #492                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
       7: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      12: astore_3
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: aload_3
      19: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      22: dup
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      31: aload_1
      32: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      35: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      38: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      41: dup
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      50: aload_2
      51: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      54: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      57: invokeinterface #500,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      62: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_2
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_2
      25: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      28: dup
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      37: aload_1
      38: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      41: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      44: invokeinterface #511,  2          // InterfaceMethod scalaz/Enum.succ:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_2
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_2
      25: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      28: dup
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      37: aload_1
      38: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      41: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      44: invokeinterface #514,  2          // InterfaceMethod scalaz/Enum.pred:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_3
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_3
      25: iload_1
      26: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      38: aload_2
      39: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      42: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: invokeinterface #518,  3          // InterfaceMethod scalaz/Enum.succn:(ILjava/lang/Object;)Ljava/lang/Object;
      50: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      53: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_3
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_3
      25: iload_1
      26: getstatic     #459                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: invokevirtual #462                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      38: aload_2
      39: invokevirtual #468                // Method scalaz/TagKind.unwrap$mZc$sp:(Ljava/lang/Object;)Z
      42: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: invokeinterface #521,  3          // InterfaceMethod scalaz/Enum.predn:(ILjava/lang/Object;)Ljava/lang/Object;
      50: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      53: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_1
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: invokeinterface #525,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      30: invokevirtual #528                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #530                // class scala/Option
      36: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: getstatic     #509                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #498,  1          // InterfaceMethod scalaz/std/AnyValInstances.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
      18: astore_1
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: invokeinterface #532,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      30: invokevirtual #528                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #530                // class scala/Option
      36: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: aload_2
       7: invokevirtual #539                // Method scalaz/Tag$TagOf.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #541                // class scala/Function1
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #34                 // class scalaz/Maybe
      24: aload_0
      25: aload_3
      26: invokedynamic #564,  0            // InvokeDynamic #0:apply:(Lscalaz/std/AnyValInstances$$anon$3;Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: dup
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: astore        4
      41: aload         5
      43: invokedynamic #573,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      48: invokeinterface #577,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      53: astore        6
      55: aload         4
      57: instanceof    #37                 // class scalaz/Maybe$Just
      60: ifeq          87
      63: aload         4
      65: checkcast     #37                 // class scalaz/Maybe$Just
      68: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      71: astore        8
      73: aload         6
      75: aload         8
      77: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: astore        7
      84: goto          113
      87: aload         4
      89: instanceof    #32                 // class scalaz/Maybe$Empty
      92: ifeq          103
      95: invokestatic  #584                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      98: astore        7
     100: goto          113
     103: new           #586                // class scala/MatchError
     106: dup
     107: aload         4
     109: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload         7
     115: checkcast     #34                 // class scalaz/Maybe
     118: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
       6: aload_2
       7: invokevirtual #539                // Method scalaz/Tag$TagOf.unsubst:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #541                // class scala/Function1
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #34                 // class scalaz/Maybe
      24: aload_0
      25: aload_3
      26: invokedynamic #603,  0            // InvokeDynamic #2:apply:(Lscalaz/std/AnyValInstances$$anon$3;Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: dup
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: astore        4
      41: aload         5
      43: invokedynamic #573,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      48: invokeinterface #577,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      53: astore        6
      55: aload         4
      57: instanceof    #37                 // class scalaz/Maybe$Just
      60: ifeq          87
      63: aload         4
      65: checkcast     #37                 // class scalaz/Maybe$Just
      68: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      71: astore        8
      73: aload         6
      75: aload         8
      77: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: astore        7
      84: goto          113
      87: aload         4
      89: instanceof    #32                 // class scalaz/Maybe$Empty
      92: ifeq          103
      95: invokestatic  #584                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      98: astore        7
     100: goto          113
     103: new           #586                // class scala/MatchError
     106: dup
     107: aload         4
     109: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload         7
     115: checkcast     #34                 // class scalaz/Maybe
     118: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #43                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #607                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  private final boolean go$3(java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #34                 // class scalaz/Maybe
      10: astore        4
      12: aload         4
      14: instanceof    #37                 // class scalaz/Maybe$Just
      17: ifeq          68
      20: aload         4
      22: checkcast     #37                 // class scalaz/Maybe$Just
      25: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      28: checkcast     #612                // class scala/Tuple2
      31: astore        5
      33: aload         5
      35: ifnull        68
      38: aload         5
      40: invokevirtual #615                // Method scala/Tuple2._1$mcZ$sp:()Z
      43: istore        6
      45: aload         5
      47: invokevirtual #618                // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: astore        7
      52: iload         6
      54: ifeq          63
      57: aload         7
      59: astore_1
      60: goto          0
      63: iconst_0
      64: istore_3
      65: goto          70
      68: iconst_1
      69: istore_3
      70: iload_3
      71: ireturn

  public static final java.lang.Object $anonfun$unfoldrSumOpt$2(scalaz.std.AnyValInstances$$anon$3, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        125
       4: aload_2
       5: invokevirtual #615                // Method scala/Tuple2._1$mcZ$sp:()Z
       8: istore        4
      10: aload_2
      11: invokevirtual #618                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      19: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
      22: iload         4
      24: ifeq          114
      27: aload         5
      29: astore        6
      31: aload_1
      32: aload         6
      34: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #34                 // class scalaz/Maybe
      42: astore        8
      44: aload         8
      46: instanceof    #37                 // class scalaz/Maybe$Just
      49: ifeq          102
      52: aload         8
      54: checkcast     #37                 // class scalaz/Maybe$Just
      57: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      60: checkcast     #612                // class scala/Tuple2
      63: astore        9
      65: aload         9
      67: ifnull        102
      70: aload         9
      72: invokevirtual #615                // Method scala/Tuple2._1$mcZ$sp:()Z
      75: istore        10
      77: aload         9
      79: invokevirtual #618                // Method scala/Tuple2._2:()Ljava/lang/Object;
      82: astore        11
      84: iload         10
      86: ifeq          96
      89: aload         11
      91: astore        6
      93: goto          31
      96: iconst_0
      97: istore        7
      99: goto          105
     102: iconst_1
     103: istore        7
     105: iload         7
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     118: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     121: astore_3
     122: goto          134
     125: new           #586                // class scala/MatchError
     128: dup
     129: aload_2
     130: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     133: athrow
     134: aload_3
     135: areturn

  private final boolean go$4(java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #34                 // class scalaz/Maybe
      10: astore        4
      12: aload         4
      14: instanceof    #37                 // class scalaz/Maybe$Just
      17: ifeq          64
      20: aload         4
      22: checkcast     #37                 // class scalaz/Maybe$Just
      25: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      28: checkcast     #612                // class scala/Tuple2
      31: astore        5
      33: aload         5
      35: ifnull        64
      38: aload         5
      40: invokevirtual #629                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: astore        6
      45: aload         5
      47: invokevirtual #632                // Method scala/Tuple2._2$mcZ$sp:()Z
      50: ifeq          59
      53: aload         6
      55: astore_1
      56: goto          0
      59: iconst_0
      60: istore_3
      61: goto          66
      64: iconst_1
      65: istore_3
      66: iload_3
      67: ireturn

  public static final java.lang.Object $anonfun$unfoldlSumOpt$2(scalaz.std.AnyValInstances$$anon$3, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        121
       4: aload_2
       5: invokevirtual #629                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #632                // Method scala/Tuple2._2$mcZ$sp:()Z
      14: istore        5
      16: getstatic     #450                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
      19: invokevirtual #454                // Method scalaz/Tags$.Conjunction:()Lscalaz/Tag$TagOf;
      22: iload         5
      24: ifeq          110
      27: aload         4
      29: astore        6
      31: aload_1
      32: aload         6
      34: invokeinterface #542,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #34                 // class scalaz/Maybe
      42: astore        8
      44: aload         8
      46: instanceof    #37                 // class scalaz/Maybe$Just
      49: ifeq          98
      52: aload         8
      54: checkcast     #37                 // class scalaz/Maybe$Just
      57: invokevirtual #580                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      60: checkcast     #612                // class scala/Tuple2
      63: astore        9
      65: aload         9
      67: ifnull        98
      70: aload         9
      72: invokevirtual #629                // Method scala/Tuple2._1:()Ljava/lang/Object;
      75: astore        10
      77: aload         9
      79: invokevirtual #632                // Method scala/Tuple2._2$mcZ$sp:()Z
      82: ifeq          92
      85: aload         10
      87: astore        6
      89: goto          31
      92: iconst_0
      93: istore        7
      95: goto          101
      98: iconst_1
      99: istore        7
     101: iload         7
     103: ifeq          110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: invokestatic  #479                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     114: invokevirtual #482                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     117: astore_3
     118: goto          130
     121: new           #586                // class scala/MatchError
     124: dup
     125: aload_2
     126: invokespecial #590                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     129: athrow
     130: aload_3
     131: areturn

  public scalaz.std.AnyValInstances$$anon$3(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #494                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #637                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #641                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #644                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #647                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #650                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #653                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: aload_0
      36: invokestatic  #656                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      39: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #669,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
