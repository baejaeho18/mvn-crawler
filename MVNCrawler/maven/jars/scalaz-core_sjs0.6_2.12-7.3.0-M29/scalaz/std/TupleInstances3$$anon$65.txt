Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances3$$anon$65 implements scalaz.std.Tuple8Order<A1, A2, A3, A4, A5, A6, A7, A8> {
  private final boolean equalIsNatural;

  private final scalaz.syntax.OrderSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> equalSyntax;

  private final scalaz.Order A1$48;

  private final scalaz.Order A2$42;

  private final scalaz.Order A3$36;

  private final scalaz.Order A4$30;

  private final scalaz.Order A5$24;

  private final scalaz.Order A6$18;

  private final scalaz.Order A7$12;

  private final scalaz.Order A8$6;

  public scalaz.Ordering order(scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/std/Tuple8Order.order$:(Lscalaz/std/Tuple8Order;Lscala/Tuple8;Lscala/Tuple8;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/std/Tuple8Equal.equal$:(Lscalaz/std/Tuple8Equal;Lscala/Tuple8;Lscala/Tuple8;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #86                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #146                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple8Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #146                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #160                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #167                // Field A1$48:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #171                // Field A2$42:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A3> _3();
    Code:
       0: aload_0
       1: getfield      #175                // Field A3$36:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A4> _4();
    Code:
       0: aload_0
       1: getfield      #179                // Field A4$30:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A5> _5();
    Code:
       0: aload_0
       1: getfield      #183                // Field A5$24:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A6> _6();
    Code:
       0: aload_0
       1: getfield      #187                // Field A6$18:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A7> _7();
    Code:
       0: aload_0
       1: getfield      #191                // Field A7$12:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A8> _8();
    Code:
       0: aload_0
       1: getfield      #195                // Field A8$6:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #200                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #202                // class scala/Tuple8
       5: aload_2
       6: checkcast     #202                // class scala/Tuple8
       9: invokevirtual #204                // Method equal:(Lscala/Tuple8;Lscala/Tuple8;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #202                // class scala/Tuple8
       5: aload_2
       6: checkcast     #202                // class scala/Tuple8
       9: invokevirtual #206                // Method order:(Lscala/Tuple8;Lscala/Tuple8;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _8();
    Code:
       0: aload_0
       1: invokevirtual #209                // Method _8:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _7();
    Code:
       0: aload_0
       1: invokevirtual #211                // Method _7:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _6();
    Code:
       0: aload_0
       1: invokevirtual #213                // Method _6:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _5();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method _5:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _4();
    Code:
       0: aload_0
       1: invokevirtual #217                // Method _4:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _3();
    Code:
       0: aload_0
       1: invokevirtual #219                // Method _3:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #221                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #223                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.std.TupleInstances3$$anon$65(scalaz.std.TupleInstances3, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #167                // Field A1$48:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #171                // Field A2$42:Lscalaz/Order;
      10: aload_0
      11: aload         4
      13: putfield      #175                // Field A3$36:Lscalaz/Order;
      16: aload_0
      17: aload         5
      19: putfield      #179                // Field A4$30:Lscalaz/Order;
      22: aload_0
      23: aload         6
      25: putfield      #183                // Field A5$24:Lscalaz/Order;
      28: aload_0
      29: aload         7
      31: putfield      #187                // Field A6$18:Lscalaz/Order;
      34: aload_0
      35: aload         8
      37: putfield      #191                // Field A7$12:Lscalaz/Order;
      40: aload_0
      41: aload         9
      43: putfield      #195                // Field A8$6:Lscalaz/Order;
      46: aload_0
      47: invokespecial #228                // Method java/lang/Object."<init>":()V
      50: aload_0
      51: invokestatic  #232                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      54: aload_0
      55: invokestatic  #235                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      58: aload_0
      59: invokestatic  #238                // InterfaceMethod scalaz/std/Tuple8Equal.$init$:(Lscalaz/std/Tuple8Equal;)V
      62: aload_0
      63: invokestatic  #241                // InterfaceMethod scalaz/std/Tuple8Order.$init$:(Lscalaz/std/Tuple8Order;)V
      66: return
}
