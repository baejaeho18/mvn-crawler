Compiled from "Vector.scala"
public final class scalaz.std.VectorInstances$$anon$2 implements scalaz.Traverse<scala.collection.immutable.Vector>, scalaz.MonadPlus<scala.collection.immutable.Vector>, scalaz.Alt<scala.collection.immutable.Vector>, scalaz.std.IterableBindRec<scala.collection.immutable.Vector>, scalaz.Zip<scala.collection.immutable.Vector>, scalaz.Unzip<scala.collection.immutable.Vector>, scalaz.IsEmpty<scala.collection.immutable.Vector>, scalaz.Align<scala.collection.immutable.Vector>, scalaz.std.IterableSubtypeFoldable<scala.collection.immutable.Vector>, scalaz.Functor$OverrideWiden<scala.collection.immutable.Vector> {
  private final scalaz.syntax.AlignSyntax<scala.collection.immutable.Vector> alignSyntax;

  private final scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Vector> isEmptySyntax;

  private final scalaz.syntax.UnzipSyntax<scala.collection.immutable.Vector> unzipSyntax;

  private final scalaz.syntax.ZipSyntax<scala.collection.immutable.Vector> zipSyntax;

  private final scalaz.syntax.BindRecSyntax<scala.collection.immutable.Vector> bindRecSyntax;

  private final scalaz.syntax.AltSyntax<scala.collection.immutable.Vector> altSyntax;

  private final scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Vector> invariantAltSyntax;

  private final scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Vector> monadPlusSyntax;

  private final scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Vector> applicativePlusSyntax;

  private final scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Vector> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scala.collection.immutable.Vector> plusSyntax;

  private final scalaz.syntax.MonadSyntax<scala.collection.immutable.Vector> monadSyntax;

  private final scalaz.syntax.BindSyntax<scala.collection.immutable.Vector> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Vector> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Vector> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scala.collection.immutable.Vector> applySyntax;

  private final scalaz.syntax.TraverseSyntax<scala.collection.immutable.Vector> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scala.collection.immutable.Vector> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scala.collection.immutable.Vector> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Vector> invariantFunctorSyntax;

  public final java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #202                // InterfaceMethod scalaz/Functor$OverrideWiden.widen$:(Lscalaz/Functor$OverrideWiden;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldMap(scala.collection.Iterable, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #214                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldMap$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft(scala.collection.Iterable, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #224                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public int length(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.length$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)I
       5: ireturn

  public final scala.collection.immutable.List toList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       5: areturn

  public final scala.collection.immutable.Vector toVector(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toVector$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       5: areturn

  public final scala.collection.immutable.Set toSet(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toSet$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       5: areturn

  public final scala.collection.immutable.Stream toStream(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #256                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toStream$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       5: areturn

  public final boolean empty(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #262                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.empty$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Z
       5: ireturn

  public final boolean any(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.any$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final boolean all(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #273                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.all$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #288                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #302                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #311                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #316                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #320                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #332                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #336                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scala.collection.immutable.Vector>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public scalaz.IsEmpty<scala.collection.immutable.Vector>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #350                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scala.collection.immutable.Vector>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #368                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #382                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #388                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #394                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #406                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scala.collection.immutable.Vector>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #424                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #431                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #438                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scala.collection.immutable.Vector> ap(scalaz.Functor<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scala.collection.immutable.Vector>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #452                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public final scala.collection.immutable.Seq tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #458                // InterfaceMethod scalaz/std/IterableBindRec.tailrecM$:(Lscalaz/std/IterableBindRec;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Seq;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #468                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scala.collection.immutable.Vector>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #476                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #481                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #487                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #493                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #500                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #507                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #512                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #518                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #524                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #530                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #536                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #543                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #549                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #555                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #561                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scala.collection.immutable.Vector>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #568                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #576                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #582                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #588                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #594                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #600                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #608                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #616                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #621                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #627                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #633                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #639                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scala.collection.immutable.Vector>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #647                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scala.collection.immutable.Vector>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #654                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #661                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #667                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #674                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #678                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #683                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #687                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Vector<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #695                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scala.collection.immutable.Vector>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #702                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.Vector<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.collection.immutable.Vector<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #709                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.Vector<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.Vector<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #714                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #719                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.Vector<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #727                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scala.collection.immutable.Vector>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #734                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #739                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #746                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #752                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #757                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #765                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #769                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #774                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.collection.immutable.Vector>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #782                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #785                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #791                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #797                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #805                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #810                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #815                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.collection.immutable.Vector>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #823                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #829                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #835                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #844                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #851                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #856                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #861                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #867                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #873                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #880                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #888                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #893                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #900                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #905                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #912                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #917                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #921                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.collection.immutable.Vector> flip();
    Code:
       0: aload_0
       1: invokestatic  #926                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #934                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.collection.immutable.Vector>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #941                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #948                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #953                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #959                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #965                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #971                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #977                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #984                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S, A, B> scalaz.Maybe<scala.collection.immutable.Vector<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.Vector<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #992                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #998                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1001               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>> apF(scala.Function0<scala.collection.immutable.Vector<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1008               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1014               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1021               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1028               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1035               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1042               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1049               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1056               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1062               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1068               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1074               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1081               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1088               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1095               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1103               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1111               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1119               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1127               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1133               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1139               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1145               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1151               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1156               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1162               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1168               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1174               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1180               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1187               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1194               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1201               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1208               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1215               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<H>, scala.collection.immutable.Vector<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1222               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<H>, scala.collection.immutable.Vector<I>, scala.collection.immutable.Vector<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1229               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<H>, scala.collection.immutable.Vector<I>, scala.collection.immutable.Vector<J>, scala.collection.immutable.Vector<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1236               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<H>, scala.collection.immutable.Vector<I>, scala.collection.immutable.Vector<J>, scala.collection.immutable.Vector<K>, scala.collection.immutable.Vector<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1243               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>, scala.collection.immutable.Vector<D>, scala.collection.immutable.Vector<E>, scala.collection.immutable.Vector<FF>, scala.collection.immutable.Vector<G>, scala.collection.immutable.Vector<H>, scala.collection.immutable.Vector<I>, scala.collection.immutable.Vector<J>, scala.collection.immutable.Vector<K>, scala.collection.immutable.Vector<L>, scala.collection.immutable.Vector<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1250               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1254               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1258               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1263               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1271               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.collection.immutable.Vector>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1278               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1283               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1291               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1294               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1301               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scala.collection.immutable.Vector>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1309               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scala.collection.immutable.Vector>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1316               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1321               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1327               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1333               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1339               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1346               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1353               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1360               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1366               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1372               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1378               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1385               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1391               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1396               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1398               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1404               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1408               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1412               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1417               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1421               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1425               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1429               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scala.collection.immutable.Vector>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1436               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1442               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1447               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1452               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1454               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1466               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1472               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1479               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1486               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1492               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1497               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1502               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1507               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1512               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1517               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1523               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1529               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1535               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1541               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1547               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1553               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1557               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1561               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1565               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1571               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1575               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1581               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1585               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1589               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1595               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1602               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1609               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1615               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1621               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1625               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1629               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1635               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1641               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1648               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1652               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1657               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1662               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1667               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1672               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1677               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1682               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1687               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1691               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1695               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1699               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1705               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1711               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1715               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1719               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1724               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1731               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1739               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1746               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1752               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1759               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1765               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1769               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1775               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1781               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1786               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1792               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.collection.immutable.Vector>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1799               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1805               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1810               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1817               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1822               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1826               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1830               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1835               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1839               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1843               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1849               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1855               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1862               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1868               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1871               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public scalaz.Functor<scala.collection.immutable.Vector>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1878               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1885               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1893               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.collection.immutable.Vector>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1901               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.AlignSyntax<scala.collection.immutable.Vector> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1905               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1905               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Vector> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1913               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1913               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scala.collection.immutable.Vector> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1920               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1920               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scala.collection.immutable.Vector> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1927               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1927               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scala.collection.immutable.Vector> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1934               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1934               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scala.collection.immutable.Vector> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1941               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1941               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Vector> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1948               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1948               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Vector> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1955               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1955               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Vector> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1962               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1962               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Vector> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1969               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1969               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scala.collection.immutable.Vector> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1976               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1976               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.collection.immutable.Vector> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1983               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1983               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.collection.immutable.Vector> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1990               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1990               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Vector> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1997               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1997               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Vector> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2004               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2004               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.collection.immutable.Vector> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2011               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2011               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scala.collection.immutable.Vector> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2018               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2018               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.collection.immutable.Vector> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2025               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2025               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.collection.immutable.Vector> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2032               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2032               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Vector> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2039               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2039               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.collection.immutable.Vector<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: aastore
      22: invokevirtual #2069               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      25: invokevirtual #2074               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      28: checkcast     #2076               // class scala/collection/immutable/Vector
      31: areturn

  public <A, B> scala.collection.immutable.Vector<B> bind(scala.collection.immutable.Vector<A>, scala.Function1<A, scala.collection.immutable.Vector<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #2090               // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #2076               // class scala/collection/immutable/Vector
      14: areturn

  public <A> scala.collection.mutable.Builder<A, scala.collection.immutable.Vector<A>> createNewBuilder();
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: invokevirtual #2097               // Method scala/collection/immutable/Vector$.newBuilder:()Lscala/collection/mutable/Builder;
       9: areturn

  public <A> boolean isEmpty(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #2103               // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ireturn

  public <A> scala.collection.immutable.Vector<A> plus(scala.collection.immutable.Vector<A>, scala.Function0<scala.collection.immutable.Vector<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #2108               // class scala/collection/GenTraversableOnce
      10: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      13: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      19: checkcast     #2076               // class scala/collection/immutable/Vector
      22: areturn

  public <A> scala.collection.immutable.Vector<A> alt(scala.Function0<scala.collection.immutable.Vector<A>>, scala.Function0<scala.collection.immutable.Vector<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2076               // class scala/collection/immutable/Vector
       9: aload_2
      10: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #2108               // class scala/collection/GenTraversableOnce
      18: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      21: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #2076               // class scala/collection/immutable/Vector
      30: areturn

  public <A> scala.collection.immutable.Vector<A> empty();
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: invokevirtual #2119               // Method scala/collection/immutable/Vector$.empty:()Lscala/collection/immutable/Vector;
       9: areturn

  public <A, B> scala.Tuple2<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>> unzip(scala.collection.immutable.Vector<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2126               // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
       7: invokevirtual #2129               // Method scala/collection/immutable/Vector.unzip:(Lscala/Function1;)Lscala/Tuple2;
      10: areturn

  public <A, B> scala.collection.immutable.Vector<scala.Tuple2<A, B>> zip(scala.Function0<scala.collection.immutable.Vector<A>>, scala.Function0<scala.collection.immutable.Vector<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2076               // class scala/collection/immutable/Vector
       9: astore_3
      10: aload_3
      11: invokevirtual #2103               // Method scala/collection/immutable/Vector.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #2132               // Method empty:()Lscala/collection/immutable/Vector;
      21: areturn
      22: aload_3
      23: aload_2
      24: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #2134               // class scala/collection/GenIterable
      32: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      35: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #2137               // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #2076               // class scala/collection/immutable/Vector
      44: areturn

  public <F, A, B> F traverseImpl(scala.collection.immutable.Vector<A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: iconst_0
       1: aload_1
       2: invokevirtual #2146               // Method scala/collection/immutable/Vector.size:()I
       5: istore        5
       7: istore        4
       9: iload         5
      11: iload         4
      13: isub
      14: istore        6
      16: iload         6
      18: tableswitch   { // 0 to 2
                     0: 44
                     1: 56
                     2: 80
               default: 110
          }
      44: aload_3
      45: invokedynamic #2166,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      50: invokeinterface #2168,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      55: areturn
      56: aload_3
      57: aload_2
      58: aload_1
      59: iload         4
      61: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      64: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: invokedynamic #2185,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      74: invokeinterface #2187,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      79: areturn
      80: aload_3
      81: aload_2
      82: aload_1
      83: iload         4
      85: invokedynamic #2196,  0           // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      90: aload_2
      91: aload_1
      92: iload         4
      94: invokedynamic #2201,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      99: invokedynamic #2210,  0           // InvokeDynamic #4:apply:()Lscala/Function2;
     104: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     109: areturn
     110: iload         4
     112: iload         6
     114: iconst_2
     115: idiv
     116: iadd
     117: istore        7
     119: aload_3
     120: iload         4
     122: iload         7
     124: aload_3
     125: aload_2
     126: aload_1
     127: invokedynamic #2220,  0           // InvokeDynamic #5:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     132: iload         7
     134: iload         5
     136: aload_3
     137: aload_2
     138: aload_1
     139: invokedynamic #2225,  0           // InvokeDynamic #6:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     144: invokedynamic #2232,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
     149: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     154: areturn

  public <A, B> B foldRight(scala.collection.immutable.Vector<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2240               // Method scala/collection/immutable/Vector.length:()I
       4: istore        4
       6: aload_2
       7: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      12: astore        5
      14: iload         4
      16: iconst_0
      17: if_icmple     50
      20: iload         4
      22: iconst_1
      23: isub
      24: istore        4
      26: aload_3
      27: aload_1
      28: iload         4
      30: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      33: aload         5
      35: invokedynamic #2247,  0           // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
      40: invokeinterface #2251,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: astore        5
      47: goto          14
      50: aload         5
      52: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.Vector<A>, scala.collection.immutable.Vector<B>, scala.collection.immutable.Vector<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2261,  0           // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2264               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2267               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2269               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public final java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: invokeinterface #2271,  1         // InterfaceMethod scalaz/std/IterableBindRec.createNewBuilder:()Lscala/collection/mutable/Builder;
       6: astore_3
       7: new           #2273               // class scala/collection/immutable/$colon$colon
      10: dup
      11: aload_2
      12: aload_1
      13: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #2275               // class scala/collection/immutable/Seq
      21: getstatic     #2280               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      24: invokespecial #2284               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      27: astore        4
      29: iconst_0
      30: istore        5
      32: aconst_null
      33: astore        6
      35: aload         4
      37: instanceof    #2273               // class scala/collection/immutable/$colon$colon
      40: ifeq          162
      43: iconst_1
      44: istore        5
      46: aload         4
      48: checkcast     #2273               // class scala/collection/immutable/$colon$colon
      51: astore        6
      53: aload         6
      55: invokevirtual #2287               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      58: checkcast     #2275               // class scala/collection/immutable/Seq
      61: astore        7
      63: aload         6
      65: invokevirtual #2291               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      68: astore        8
      70: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
      73: invokevirtual #2295               // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
      76: aload         7
      78: invokevirtual #2301               // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
      81: astore        9
      83: aload         9
      85: invokevirtual #2304               // Method scala/Option.isEmpty:()Z
      88: ifne          162
      91: aload         9
      93: invokevirtual #2307               // Method scala/Option.get:()Ljava/lang/Object;
      96: checkcast     #2309               // class scala/Tuple2
      99: invokevirtual #2312               // Method scala/Tuple2._1:()Ljava/lang/Object;
     102: checkcast     #2314               // class scalaz/$bslash$div
     105: astore        10
     107: aload         9
     109: invokevirtual #2307               // Method scala/Option.get:()Ljava/lang/Object;
     112: checkcast     #2309               // class scala/Tuple2
     115: invokevirtual #2317               // Method scala/Tuple2._2:()Ljava/lang/Object;
     118: checkcast     #2275               // class scala/collection/immutable/Seq
     121: astore        11
     123: aload         10
     125: instanceof    #2319               // class scalaz/$bslash$div$minus
     128: ifeq          162
     131: aload         10
     133: checkcast     #2319               // class scalaz/$bslash$div$minus
     136: invokevirtual #2321               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     139: astore        12
     141: aload_3
     142: aload         12
     144: invokeinterface #2327,  2         // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
     149: pop
     150: aload         8
     152: aload         11
     154: invokevirtual #2333               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     157: astore        4
     159: goto          29
     162: iload         5
     164: ifeq          285
     167: aload         6
     169: invokevirtual #2287               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     172: checkcast     #2275               // class scala/collection/immutable/Seq
     175: astore        13
     177: aload         6
     179: invokevirtual #2291               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     182: astore        14
     184: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
     187: invokevirtual #2295               // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
     190: aload         13
     192: invokevirtual #2301               // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
     195: astore        15
     197: aload         15
     199: invokevirtual #2304               // Method scala/Option.isEmpty:()Z
     202: ifne          285
     205: aload         15
     207: invokevirtual #2307               // Method scala/Option.get:()Ljava/lang/Object;
     210: checkcast     #2309               // class scala/Tuple2
     213: invokevirtual #2312               // Method scala/Tuple2._1:()Ljava/lang/Object;
     216: checkcast     #2314               // class scalaz/$bslash$div
     219: astore        16
     221: aload         15
     223: invokevirtual #2307               // Method scala/Option.get:()Ljava/lang/Object;
     226: checkcast     #2309               // class scala/Tuple2
     229: invokevirtual #2317               // Method scala/Tuple2._2:()Ljava/lang/Object;
     232: checkcast     #2275               // class scala/collection/immutable/Seq
     235: astore        17
     237: aload         16
     239: instanceof    #2335               // class scalaz/$minus$bslash$div
     242: ifeq          285
     245: aload         16
     247: checkcast     #2335               // class scalaz/$minus$bslash$div
     250: invokevirtual #2337               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     253: astore        18
     255: aload_2
     256: aload         18
     258: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #2275               // class scala/collection/immutable/Seq
     266: astore        19
     268: aload         14
     270: aload         17
     272: invokevirtual #2333               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     275: aload         19
     277: invokevirtual #2333               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     280: astore        4
     282: goto          29
     285: iload         5
     287: ifeq          300
     290: aload         6
     292: invokevirtual #2291               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     295: astore        4
     297: goto          29
     300: getstatic     #2280               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     303: aload         4
     305: invokevirtual #2341               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     308: ifne          321
     311: new           #2343               // class scala/MatchError
     314: dup
     315: aload         4
     317: invokespecial #2346               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     320: athrow
     321: aload_3
     322: invokeinterface #2349,  1         // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
     327: checkcast     #2275               // class scala/collection/immutable/Seq
     330: areturn

  public final boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2360               // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #2364,  2         // InterfaceMethod scala/collection/Iterable.forall:(Lscala/Function1;)Z
      10: ireturn

  public final boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2360               // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #2367,  2         // InterfaceMethod scala/collection/Iterable.exists:(Lscala/Function1;)Z
      10: ireturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2369               // Method empty:(Lscala/collection/Iterable;)Z
       8: ireturn

  public final scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2372               // Method toStream:(Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       8: areturn

  public final scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2375               // Method toSet:(Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       8: areturn

  public final scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2377               // Method toVector:(Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       8: areturn

  public final scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2379               // Method toList:(Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2360               // class scala/collection/Iterable
       5: invokevirtual #2381               // Method length:(Lscala/collection/Iterable;)I
       8: ireturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2360               // class scala/collection/Iterable
       4: aload_2
       5: aload_3
       6: invokeinterface #2384,  3         // InterfaceMethod scala/collection/Iterable.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #2360               // class scala/collection/Iterable
       4: astore        4
       6: aload_0
       7: aload         4
       9: aload_3
      10: invokeinterface #2390,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      15: aload_3
      16: aload_2
      17: invokedynamic #2398,  0           // InvokeDynamic #10:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      22: invokeinterface #2400,  4         // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft:(Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2076               // class scala/collection/immutable/Vector
       4: astore        4
       6: aload         4
       8: invokevirtual #2240               // Method scala/collection/immutable/Vector.length:()I
      11: istore        5
      13: aload_2
      14: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: astore        6
      21: iload         5
      23: iconst_0
      24: if_icmple     58
      27: iload         5
      29: iconst_1
      30: isub
      31: istore        5
      33: aload_3
      34: aload         4
      36: iload         5
      38: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      41: aload         6
      43: invokedynamic #2247,  0           // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
      48: invokeinterface #2251,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: astore        6
      55: goto          21
      58: aload         6
      60: areturn

  public java.lang.Object foldRight(scala.collection.Iterable, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2076               // class scala/collection/immutable/Vector
       4: astore        4
       6: aload         4
       8: invokevirtual #2240               // Method scala/collection/immutable/Vector.length:()I
      11: istore        5
      13: aload_2
      14: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: astore        6
      21: iload         5
      23: iconst_0
      24: if_icmple     58
      27: iload         5
      29: iconst_1
      30: isub
      31: istore        5
      33: aload_3
      34: aload         4
      36: iload         5
      38: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      41: aload         6
      43: invokedynamic #2247,  0           // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
      48: invokeinterface #2251,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: astore        6
      55: goto          21
      58: aload         6
      60: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #2076               // class scala/collection/immutable/Vector
       4: astore        4
       6: iconst_0
       7: aload         4
       9: invokevirtual #2146               // Method scala/collection/immutable/Vector.size:()I
      12: istore        6
      14: istore        5
      16: iload         6
      18: iload         5
      20: isub
      21: istore        7
      23: iload         7
      25: tableswitch   { // 0 to 2
                     0: 52
                     1: 64
                     2: 89
               default: 121
          }
      52: aload_3
      53: invokedynamic #2166,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      58: invokeinterface #2168,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      63: areturn
      64: aload_3
      65: aload_2
      66: aload         4
      68: iload         5
      70: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      73: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      78: invokedynamic #2185,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      83: invokeinterface #2187,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      88: areturn
      89: aload_3
      90: aload_2
      91: aload         4
      93: iload         5
      95: invokedynamic #2196,  0           // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
     100: aload_2
     101: aload         4
     103: iload         5
     105: invokedynamic #2201,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
     110: invokedynamic #2210,  0           // InvokeDynamic #4:apply:()Lscala/Function2;
     115: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     120: areturn
     121: iload         5
     123: iload         7
     125: iconst_2
     126: idiv
     127: iadd
     128: istore        8
     130: aload_3
     131: iload         5
     133: iload         8
     135: aload_3
     136: aload_2
     137: aload         4
     139: invokedynamic #2220,  0           // InvokeDynamic #5:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     144: iload         8
     146: iload         6
     148: aload_3
     149: aload_2
     150: aload         4
     152: invokedynamic #2225,  0           // InvokeDynamic #6:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     157: invokedynamic #2232,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
     162: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     167: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2076               // class scala/collection/immutable/Vector
       9: astore_3
      10: aload_3
      11: invokevirtual #2103               // Method scala/collection/immutable/Vector.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #2132               // Method empty:()Lscala/collection/immutable/Vector;
      21: areturn
      22: aload_3
      23: aload_2
      24: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #2134               // class scala/collection/GenIterable
      32: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      35: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #2137               // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #2076               // class scala/collection/immutable/Vector
      44: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2076               // class scala/collection/immutable/Vector
       5: invokevirtual #2414               // Method unzip:(Lscala/collection/immutable/Vector;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2132               // Method empty:()Lscala/collection/immutable/Vector;
       4: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2076               // class scala/collection/immutable/Vector
       9: aload_2
      10: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #2108               // class scala/collection/GenTraversableOnce
      18: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      21: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #2076               // class scala/collection/immutable/Vector
      30: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #2076               // class scala/collection/immutable/Vector
       4: aload_2
       5: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #2108               // class scala/collection/GenTraversableOnce
      13: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      16: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      19: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      22: checkcast     #2076               // class scala/collection/immutable/Vector
      25: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2076               // class scala/collection/immutable/Vector
       5: invokevirtual #2416               // Method isEmpty:(Lscala/collection/immutable/Vector;)Z
       8: ireturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2076               // class scala/collection/immutable/Vector
       4: aload_2
       5: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       8: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      11: invokevirtual #2090               // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      14: checkcast     #2076               // class scala/collection/immutable/Vector
      17: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokeinterface #2065,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: aastore
      22: invokevirtual #2069               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      25: invokevirtual #2074               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      28: checkcast     #2076               // class scala/collection/immutable/Vector
      31: areturn

  public static final scala.collection.immutable.Vector $anonfun$traverseImpl$1();
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: getstatic     #2280               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #2074               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      12: checkcast     #2076               // class scala/collection/immutable/Vector
      15: areturn

  public static final scala.collection.immutable.Vector $anonfun$traverseImpl$2(java.lang.Object);
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_0
      16: aastore
      17: invokevirtual #2069               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      20: invokevirtual #2074               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      23: checkcast     #2076               // class scala/collection/immutable/Vector
      26: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scala.Function1, scala.collection.immutable.Vector, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
       6: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(scala.Function1, scala.collection.immutable.Vector, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: iadd
       5: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
       8: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final scala.collection.immutable.Vector $anonfun$traverseImpl$5(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #2051               // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #2055               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_2
      10: anewarray     #5                  // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_0
      16: aastore
      17: dup
      18: iconst_1
      19: aload_1
      20: aastore
      21: invokevirtual #2069               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      24: invokevirtual #2074               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      27: checkcast     #2076               // class scala/collection/immutable/Vector
      30: areturn

  public static final java.lang.Object $anonfun$traverseImpl$6(int, int, scalaz.Applicative, scala.Function1, scala.collection.immutable.Vector);
    Code:
       0: iload_1
       1: iload_0
       2: isub
       3: istore        5
       5: iload         5
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 44
                     2: 68
               default: 98
          }
      32: aload_2
      33: invokedynamic #2166,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      38: invokeinterface #2168,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      43: areturn
      44: aload_2
      45: aload_3
      46: aload         4
      48: iload_0
      49: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      52: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokedynamic #2185,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      62: invokeinterface #2187,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      67: areturn
      68: aload_2
      69: aload_3
      70: aload         4
      72: iload_0
      73: invokedynamic #2196,  0           // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      78: aload_3
      79: aload         4
      81: iload_0
      82: invokedynamic #2201,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      87: invokedynamic #2210,  0           // InvokeDynamic #4:apply:()Lscala/Function2;
      92: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      97: areturn
      98: iload_0
      99: iload         5
     101: iconst_2
     102: idiv
     103: iadd
     104: istore        6
     106: aload_2
     107: iload_0
     108: iload         6
     110: aload_2
     111: aload_3
     112: aload         4
     114: invokedynamic #2220,  0           // InvokeDynamic #5:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     119: iload         6
     121: iload_1
     122: aload_2
     123: aload_3
     124: aload         4
     126: invokedynamic #2225,  0           // InvokeDynamic #6:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     131: invokedynamic #2232,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
     136: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     141: areturn

  public static final java.lang.Object $anonfun$traverseImpl$7(int, int, scalaz.Applicative, scala.Function1, scala.collection.immutable.Vector);
    Code:
       0: iload_1
       1: iload_0
       2: isub
       3: istore        5
       5: iload         5
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 44
                     2: 68
               default: 98
          }
      32: aload_2
      33: invokedynamic #2166,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      38: invokeinterface #2168,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      43: areturn
      44: aload_2
      45: aload_3
      46: aload         4
      48: iload_0
      49: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      52: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokedynamic #2185,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      62: invokeinterface #2187,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      67: areturn
      68: aload_2
      69: aload_3
      70: aload         4
      72: iload_0
      73: invokedynamic #2196,  0           // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      78: aload_3
      79: aload         4
      81: iload_0
      82: invokedynamic #2201,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      87: invokedynamic #2210,  0           // InvokeDynamic #4:apply:()Lscala/Function2;
      92: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      97: areturn
      98: iload_0
      99: iload         5
     101: iconst_2
     102: idiv
     103: iadd
     104: istore        6
     106: aload_2
     107: iload_0
     108: iload         6
     110: aload_2
     111: aload_3
     112: aload         4
     114: invokedynamic #2220,  0           // InvokeDynamic #5:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     119: iload         6
     121: iload_1
     122: aload_2
     123: aload_3
     124: aload         4
     126: invokedynamic #2225,  0           // InvokeDynamic #6:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     131: invokedynamic #2232,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
     136: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     141: areturn

  public static final scala.collection.immutable.Vector $anonfun$traverseImpl$8(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #2076               // class scala/collection/immutable/Vector
      14: areturn

  private static final java.lang.Object rec$1(int, int, scalaz.Applicative, scala.Function1, scala.collection.immutable.Vector);
    Code:
       0: iload_1
       1: iload_0
       2: isub
       3: istore        5
       5: iload         5
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 44
                     2: 68
               default: 98
          }
      32: aload_2
      33: invokedynamic #2166,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      38: invokeinterface #2168,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      43: areturn
      44: aload_2
      45: aload_3
      46: aload         4
      48: iload_0
      49: invokevirtual #2171               // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      52: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokedynamic #2185,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      62: invokeinterface #2187,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      67: areturn
      68: aload_2
      69: aload_3
      70: aload         4
      72: iload_0
      73: invokedynamic #2196,  0           // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      78: aload_3
      79: aload         4
      81: iload_0
      82: invokedynamic #2201,  0           // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/collection/immutable/Vector;I)Lscala/Function0;
      87: invokedynamic #2210,  0           // InvokeDynamic #4:apply:()Lscala/Function2;
      92: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      97: areturn
      98: iload_0
      99: iload         5
     101: iconst_2
     102: idiv
     103: iadd
     104: istore        6
     106: aload_2
     107: iload_0
     108: iload         6
     110: aload_2
     111: aload_3
     112: aload         4
     114: invokedynamic #2220,  0           // InvokeDynamic #5:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     119: iload         6
     121: iload_1
     122: aload_2
     123: aload_3
     124: aload         4
     126: invokedynamic #2225,  0           // InvokeDynamic #6:apply:(IILscalaz/Applicative;Lscala/Function1;Lscala/collection/immutable/Vector;)Lscala/Function0;
     131: invokedynamic #2232,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
     136: invokeinterface #2212,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     141: areturn

  public static final java.lang.Object $anonfun$foldRight$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$alignWith$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: new           #45                 // class scalaz/$bslash$amp$div$Both
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #2435               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      10: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public static final java.lang.Object $anonfun$alignWith$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #53                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #2437               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$4(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #50                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #2439               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2175,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final scala.collection.immutable.Vector $anonfun$alignWith$1(scala.Function1, scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_1
       1: invokevirtual #2146               // Method scala/collection/immutable/Vector.size:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #2146               // Method scala/collection/immutable/Vector.size:()I
       9: istore        4
      11: getstatic     #2445               // Field scala/runtime/Tuple2Zipped$.MODULE$:Lscala/runtime/Tuple2Zipped$;
      14: getstatic     #2448               // Field scala/runtime/Tuple2Zipped$Ops$.MODULE$:Lscala/runtime/Tuple2Zipped$Ops$;
      17: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: new           #2309               // class scala/Tuple2
      23: dup
      24: aload_1
      25: aload_2
      26: invokespecial #2449               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: invokevirtual #2453               // Method scala/Predef$.tuple2ToZippedOps:(Lscala/Tuple2;)Lscala/Tuple2;
      32: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      35: invokevirtual #2126               // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      38: getstatic     #2060               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      41: invokevirtual #2126               // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      44: invokevirtual #2457               // Method scala/runtime/Tuple2Zipped$Ops$.zipped$extension:(Lscala/Tuple2;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
      47: aload_0
      48: invokedynamic #2461,  0           // InvokeDynamic #11:apply:(Lscala/Function1;)Lscala/Function2;
      53: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      56: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      59: invokevirtual #2465               // Method scala/runtime/Tuple2Zipped$.map$extension:(Lscala/Tuple2;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      62: checkcast     #2076               // class scala/collection/immutable/Vector
      65: iload_3
      66: iload         4
      68: if_icmple     98
      71: aload_1
      72: iload         4
      74: invokevirtual #2469               // Method scala/collection/immutable/Vector.drop:(I)Lscala/collection/immutable/Vector;
      77: aload_0
      78: invokedynamic #2474,  0           // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      83: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      86: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      89: invokevirtual #2476               // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      92: checkcast     #2108               // class scala/collection/GenTraversableOnce
      95: goto          121
      98: aload_2
      99: iload_3
     100: invokevirtual #2469               // Method scala/collection/immutable/Vector.drop:(I)Lscala/collection/immutable/Vector;
     103: aload_0
     104: invokedynamic #2480,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
     109: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     112: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     115: invokevirtual #2476               // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     118: checkcast     #2108               // class scala/collection/GenTraversableOnce
     121: getstatic     #2082               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     124: invokevirtual #2086               // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     127: invokevirtual #2112               // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     130: checkcast     #2076               // class scala/collection/immutable/Vector
     133: areturn

  public scalaz.std.VectorInstances$$anon$2(scalaz.std.VectorInstances);
    Code:
       0: aload_0
       1: invokespecial #2487               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2491               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2494               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2497               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2500               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2503               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2506               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2509               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2512               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2515               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2518               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2521               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2524               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2527               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2530               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2533               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2536               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2539               // InterfaceMethod scalaz/std/IterableBindRec.$init$:(Lscalaz/std/IterableBindRec;)V
      72: aload_0
      73: invokestatic  #2542               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2545               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2548               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      84: aload_0
      85: invokestatic  #2551               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      88: aload_0
      89: invokestatic  #2554               // InterfaceMethod scalaz/std/IterableSubtypeFoldable.$init$:(Lscalaz/std/IterableSubtypeFoldable;)V
      92: aload_0
      93: invokestatic  #2557               // InterfaceMethod scalaz/Functor$OverrideWiden.$init$:(Lscalaz/Functor$OverrideWiden;)V
      96: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2570,  0           // InvokeDynamic #14:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
