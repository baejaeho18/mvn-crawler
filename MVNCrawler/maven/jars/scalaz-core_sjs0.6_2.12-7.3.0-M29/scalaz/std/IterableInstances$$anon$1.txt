Compiled from "Iterable.scala"
public final class scalaz.std.IterableInstances$$anon$1 implements scalaz.Order<scala.collection.Iterable<A>> {
  private final scalaz.syntax.OrderSyntax<scala.collection.Iterable<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.collection.Iterable<A>> equalSyntax;

  private final scalaz.Order A$1;

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.collection.Iterable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.collection.Iterable<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.collection.Iterable<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.collection.Iterable<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scala.collection.Iterable<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scala.collection.Iterable<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #136                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.collection.Iterable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #136                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.collection.Iterable<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #144                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.collection.Iterable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #144                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(scala.collection.Iterable<A>, scala.collection.Iterable<A>);
    Code:
       0: aload_1
       1: invokeinterface #158,  1          // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
       6: astore_3
       7: aload_2
       8: invokeinterface #158,  1          // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
      13: astore        4
      15: aload_3
      16: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      21: ifeq          97
      24: aload         4
      26: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
      31: ifeq          97
      34: aload_3
      35: invokeinterface #167,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      40: astore        5
      42: aload         4
      44: invokeinterface #167,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
      49: astore        6
      51: aload_0
      52: getfield      #169                // Field A$1:Lscalaz/Order;
      55: aload         5
      57: aload         6
      59: invokeinterface #171,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      64: astore        7
      66: aload         7
      68: getstatic     #175                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      71: astore        8
      73: dup
      74: ifnonnull     86
      77: pop
      78: aload         8
      80: ifnull        15
      83: goto          94
      86: aload         8
      88: invokevirtual #179                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifne          15
      94: aload         7
      96: areturn
      97: getstatic     #184                // Field scalaz/std/anyVal$.MODULE$:Lscalaz/std/anyVal$;
     100: invokevirtual #188                // Method scalaz/std/anyVal$.booleanInstance:()Lscalaz/std/AnyValInstances$booleanInstance$;
     103: aload_3
     104: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
     109: aload         4
     111: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
     116: invokevirtual #191                // Method scalaz/std/AnyValInstances$booleanInstance$.order:(ZZ)Lscalaz/Ordering;
     119: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #202                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #154                // class scala/collection/Iterable
       5: aload_2
       6: checkcast     #154                // class scala/collection/Iterable
       9: invokevirtual #204                // Method order:(Lscala/collection/Iterable;Lscala/collection/Iterable;)Lscalaz/Ordering;
      12: areturn

  public scalaz.std.IterableInstances$$anon$1(scalaz.std.IterableInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #169                // Field A$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #209                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #213                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #216                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: return
}
