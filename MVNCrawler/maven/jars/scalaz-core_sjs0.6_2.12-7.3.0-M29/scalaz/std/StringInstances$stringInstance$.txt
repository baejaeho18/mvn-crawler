Compiled from "String.scala"
public class scalaz.std.StringInstances$stringInstance$ implements scalaz.Monoid<java.lang.String>, scalaz.Show<java.lang.String>, scalaz.Order<java.lang.String>, scalaz.IsEmpty<?> {
  private final scalaz.syntax.IsEmptySyntax<?> isEmptySyntax;

  private final scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.syntax.OrderSyntax<java.lang.String> orderSyntax;

  private final scalaz.syntax.EqualSyntax<java.lang.String> equalSyntax;

  private final scalaz.syntax.ShowSyntax<java.lang.String> showSyntax;

  private final scalaz.syntax.MonoidSyntax<java.lang.String> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<java.lang.String> semigroupSyntax;

  public scalaz.IsEmpty<?>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<java.lang.String> monoid();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<java.lang.String> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.String>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<java.lang.String> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.String, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #136                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<java.lang.String> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #156                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #170                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #174                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #178                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #192                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.String> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #212                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.String> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.String>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #226                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<java.lang.String>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #233                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #241                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #250                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #258                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #267                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #272                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #277                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #288                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #295                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.String>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #302                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #307                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<java.lang.String> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.String>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #313                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.String> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.String, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #318                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #328                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.String>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #335                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.IsEmptySyntax<?> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #339                // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #339                // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #347                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #347                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #354                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #354                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.String> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #361                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #361                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.String> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #368                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #368                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.ShowSyntax<java.lang.String> showSyntax();
    Code:
       0: aload_0
       1: getfield      #375                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       4: areturn

  public void scalaz$Show$_setter_$showSyntax_$eq(scalaz.syntax.ShowSyntax<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #375                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.String> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #382                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #382                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.String> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #389                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #389                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.String append(java.lang.String, scala.Function0<java.lang.String>);
    Code:
       0: new           #399                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #400                // int 0
       7: invokespecial #404                // Method java/lang/StringBuilder."<init>":(I)V
      10: aload_1
      11: invokevirtual #407                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokeinterface #412,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  public java.lang.String zero();
    Code:
       0: ldc_w         #423                // String
       3: areturn

  public scalaz.Cord show(java.lang.String);
    Code:
       0: getstatic     #431                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
       3: ldc_w         #433                // String \"
       6: invokevirtual #435                // Method scalaz/Cord$.apply:(Ljava/lang/String;)Lscalaz/Cord;
       9: astore_2
      10: getstatic     #431                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
      13: aload_1
      14: invokevirtual #435                // Method scalaz/Cord$.apply:(Ljava/lang/String;)Lscalaz/Cord;
      17: astore_3
      18: getstatic     #431                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
      21: ldc_w         #433                // String \"
      24: invokevirtual #435                // Method scalaz/Cord$.apply:(Ljava/lang/String;)Lscalaz/Cord;
      27: aload_3
      28: invokevirtual #441                // Method scalaz/Cord.$colon$colon:(Lscalaz/Cord;)Lscalaz/Cord;
      31: aload_2
      32: invokevirtual #441                // Method scalaz/Cord.$colon$colon:(Lscalaz/Cord;)Lscalaz/Cord;
      35: areturn

  public java.lang.String shows(java.lang.String);
    Code:
       0: new           #399                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #444                // int 11
       7: invokespecial #404                // Method java/lang/StringBuilder."<init>":(I)V
      10: bipush        34
      12: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #407                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        34
      21: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public scalaz.Ordering order(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #454                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
       3: aload_1
       4: aload_2
       5: invokevirtual #460                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
       8: invokevirtual #464                // Method scalaz/Ordering$.fromInt:(I)Lscalaz/Ordering;
      11: areturn

  public boolean equal(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: dup
       2: ifnonnull     13
       5: pop
       6: aload_2
       7: ifnull        20
      10: goto          22
      13: aload_2
      14: invokevirtual #470                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn

  public boolean equalIsNatural();
    Code:
       0: iconst_1
       1: ireturn

  public <A> java.lang.String empty();
    Code:
       0: aload_0
       1: invokevirtual #476                // Method zero:()Ljava/lang/String;
       4: areturn

  public <A> java.lang.String plus(java.lang.String, scala.Function0<java.lang.String>);
    Code:
       0: new           #399                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #400                // int 0
       7: invokespecial #404                // Method java/lang/StringBuilder."<init>":(I)V
      10: aload_1
      11: invokevirtual #407                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokeinterface #412,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  public <A> boolean isEmpty(java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #423                // String
       4: astore_2
       5: dup
       6: ifnonnull     13
       9: pop
      10: goto          22
      13: aload_2
      14: invokevirtual #470                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #27                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #486                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #489                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #456                // class java/lang/String
       5: invokevirtual #492                // Method isEmpty:(Ljava/lang/String;)Z
       8: ireturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #456                // class java/lang/String
       4: astore_3
       5: new           #399                // class java/lang/StringBuilder
       8: dup
       9: ldc_w         #400                // int 0
      12: invokespecial #404                // Method java/lang/StringBuilder."<init>":(I)V
      15: aload_3
      16: invokevirtual #407                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_2
      20: invokeinterface #412,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #497                // Method empty:()Ljava/lang/String;
       4: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #456                // class java/lang/String
       5: aload_2
       6: checkcast     #456                // class java/lang/String
       9: invokevirtual #499                // Method equal:(Ljava/lang/String;Ljava/lang/String;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #456                // class java/lang/String
       5: aload_2
       6: checkcast     #456                // class java/lang/String
       9: invokevirtual #501                // Method order:(Ljava/lang/String;Ljava/lang/String;)Lscalaz/Ordering;
      12: areturn

  public java.lang.String shows(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #456                // class java/lang/String
       5: invokevirtual #504                // Method shows:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public scalaz.Cord show(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #456                // class java/lang/String
       5: invokevirtual #507                // Method show:(Ljava/lang/String;)Lscalaz/Cord;
       8: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #476                // Method zero:()Ljava/lang/String;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #456                // class java/lang/String
       4: astore_3
       5: new           #399                // class java/lang/StringBuilder
       8: dup
       9: ldc_w         #400                // int 0
      12: invokespecial #404                // Method java/lang/StringBuilder."<init>":(I)V
      15: aload_3
      16: invokevirtual #407                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_2
      20: invokeinterface #412,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #419                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public scalaz.std.StringInstances$stringInstance$(scalaz.std.StringInstances);
    Code:
       0: aload_0
       1: invokespecial #513                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #517                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #520                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      12: aload_0
      13: invokestatic  #523                // InterfaceMethod scalaz/Show.$init$:(Lscalaz/Show;)V
      16: aload_0
      17: invokestatic  #526                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      20: aload_0
      21: invokestatic  #529                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      24: aload_0
      25: invokestatic  #532                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      28: aload_0
      29: invokestatic  #535                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      32: aload_0
      33: invokestatic  #538                // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      36: return
}
