Compiled from "Callable.scala"
public final class scalaz.std.java.util.concurrent.CallableInstances$$anon$1 implements scalaz.Order<java.util.concurrent.Callable<A>> {
  private final scalaz.syntax.OrderSyntax<java.util.concurrent.Callable<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<java.util.concurrent.Callable<A>> equalSyntax;

  private final scalaz.Order evidence$1$1;

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.util.concurrent.Callable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.util.concurrent.Callable<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.util.concurrent.Callable<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.util.concurrent.Callable<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #109                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.util.concurrent.Callable<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<java.util.concurrent.Callable<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #126                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.util.concurrent.Callable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #126                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.util.concurrent.Callable<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #134                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.util.concurrent.Callable<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(java.util.concurrent.Callable<A>, java.util.concurrent.Callable<A>);
    Code:
       0: getstatic     #148                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #150                // Field evidence$1$1:Lscalaz/Order;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_3
      14: aload_1
      15: invokeinterface #156,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      20: aload_2
      21: invokeinterface #156,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      26: invokeinterface #158,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      31: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #164                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #152                // class java/util/concurrent/Callable
       4: aload_2
       5: checkcast     #152                // class java/util/concurrent/Callable
       8: astore        4
      10: astore_3
      11: getstatic     #148                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      14: aload_0
      15: getfield      #150                // Field evidence$1$1:Lscalaz/Order;
      18: astore        5
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: aload         5
      27: aload_3
      28: invokeinterface #156,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      33: aload         4
      35: invokeinterface #156,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      40: invokeinterface #158,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      45: areturn

  public scalaz.std.java.util.concurrent.CallableInstances$$anon$1(scalaz.std.java.util.concurrent.CallableInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #150                // Field evidence$1$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #171                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #175                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #178                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: return
}
