Compiled from "List.scala"
public final class scalaz.std.ListInstances$$anon$2 implements scalaz.Traverse<scala.collection.immutable.List>, scalaz.MonadPlus<scala.collection.immutable.List>, scalaz.Alt<scala.collection.immutable.List>, scalaz.std.IterableBindRec<scala.collection.immutable.List>, scalaz.Zip<scala.collection.immutable.List>, scalaz.Unzip<scala.collection.immutable.List>, scalaz.Align<scala.collection.immutable.List>, scalaz.IsEmpty<scala.collection.immutable.List>, scalaz.Cobind<scala.collection.immutable.List>, scalaz.std.IterableSubtypeFoldable<scala.collection.immutable.List>, scalaz.Functor$OverrideWiden<scala.collection.immutable.List> {
  private final scalaz.syntax.CobindSyntax<scala.collection.immutable.List> cobindSyntax;

  private final scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List> isEmptySyntax;

  private final scalaz.syntax.AlignSyntax<scala.collection.immutable.List> alignSyntax;

  private final scalaz.syntax.UnzipSyntax<scala.collection.immutable.List> unzipSyntax;

  private final scalaz.syntax.ZipSyntax<scala.collection.immutable.List> zipSyntax;

  private final scalaz.syntax.BindRecSyntax<scala.collection.immutable.List> bindRecSyntax;

  private final scalaz.syntax.AltSyntax<scala.collection.immutable.List> altSyntax;

  private final scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List> invariantAltSyntax;

  private final scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List> monadPlusSyntax;

  private final scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List> applicativePlusSyntax;

  private final scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scala.collection.immutable.List> plusSyntax;

  private final scalaz.syntax.MonadSyntax<scala.collection.immutable.List> monadSyntax;

  private final scalaz.syntax.BindSyntax<scala.collection.immutable.List> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scala.collection.immutable.List> applySyntax;

  private final scalaz.syntax.TraverseSyntax<scala.collection.immutable.List> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scala.collection.immutable.List> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scala.collection.immutable.List> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List> invariantFunctorSyntax;

  public final java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #213                // InterfaceMethod scalaz/Functor$OverrideWiden.widen$:(Lscalaz/Functor$OverrideWiden;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft(scala.collection.Iterable, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #225                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public int length(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.length$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)I
       5: ireturn

  public final scala.collection.immutable.List toList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #240                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       5: areturn

  public final scala.collection.immutable.Vector toVector(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toVector$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       5: areturn

  public final scala.collection.immutable.Set toSet(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #252                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toSet$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       5: areturn

  public final scala.collection.immutable.Stream toStream(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toStream$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       5: areturn

  public final boolean empty(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #264                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.empty$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Z
       5: ireturn

  public final boolean any(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #271                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.any$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final boolean all(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #276                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.all$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #282                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scala.collection.immutable.List>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public scalaz.IsEmpty<scala.collection.immutable.List>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #296                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #311                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #334                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #339                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #343                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #347                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #351                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #355                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #359                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scala.collection.immutable.List>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #366                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #372                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scala.collection.immutable.List>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #384                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #391                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #398                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #410                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scala.collection.immutable.List>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #427                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #433                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #441                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #448                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #455                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scala.collection.immutable.List> ap(scalaz.Functor<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scala.collection.immutable.List>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #470                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public final scala.collection.immutable.Seq tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #476                // InterfaceMethod scalaz/std/IterableBindRec.tailrecM$:(Lscalaz/std/IterableBindRec;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Seq;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #481                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #486                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scala.collection.immutable.List>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #494                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #505                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #511                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #518                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #525                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #536                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #542                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #548                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #554                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #561                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #567                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #573                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #579                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scala.collection.immutable.List>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #586                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #594                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #600                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #606                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #612                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #617                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #625                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #633                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #644                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #650                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #656                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scala.collection.immutable.List>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #664                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scala.collection.immutable.List>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #671                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #678                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #684                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #691                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #695                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #700                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #704                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.List<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #712                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scala.collection.immutable.List>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #719                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.List<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.collection.immutable.List<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #726                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.List<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.List<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #731                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #736                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.List<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #744                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scala.collection.immutable.List>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #751                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #756                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #763                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #769                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #774                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #778                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #782                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #786                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #791                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.collection.immutable.List>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #799                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #802                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #808                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #814                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #822                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #827                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #832                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.collection.immutable.List>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #840                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #846                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #852                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #861                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #868                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #873                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #878                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #884                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #890                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #897                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #905                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #910                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #917                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #922                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #929                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #934                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #938                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.collection.immutable.List> flip();
    Code:
       0: aload_0
       1: invokestatic  #943                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #951                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.collection.immutable.List>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #958                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #965                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #970                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #976                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #982                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #988                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #994                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1001               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S, A, B> scalaz.Maybe<scala.collection.immutable.List<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.List<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1009               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1015               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1018               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> apF(scala.Function0<scala.collection.immutable.List<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1025               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1031               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1038               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1045               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1052               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1059               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1066               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1073               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1079               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1085               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1091               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1098               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1105               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1112               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1120               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1128               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1136               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1144               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1150               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1156               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1162               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1168               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1173               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1179               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1185               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1191               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1197               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1204               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1211               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1218               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1225               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1232               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<H>, scala.collection.immutable.List<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1239               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1246               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1253               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<K>, scala.collection.immutable.List<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1260               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>, scala.collection.immutable.List<D>, scala.collection.immutable.List<E>, scala.collection.immutable.List<FF>, scala.collection.immutable.List<G>, scala.collection.immutable.List<H>, scala.collection.immutable.List<I>, scala.collection.immutable.List<J>, scala.collection.immutable.List<K>, scala.collection.immutable.List<L>, scala.collection.immutable.List<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1267               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1271               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1275               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1280               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1288               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.collection.immutable.List>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1295               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1300               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1308               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1311               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1318               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scala.collection.immutable.List>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1326               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scala.collection.immutable.List>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1333               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1338               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1344               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1350               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1356               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1363               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1370               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1377               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1383               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1389               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1395               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1402               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1408               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1413               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1415               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1421               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1425               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1429               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1434               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1438               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1442               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1446               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scala.collection.immutable.List>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1453               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1459               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1464               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1469               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1471               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1476               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1483               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1489               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1496               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1503               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1509               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1514               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1519               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1524               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1529               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1534               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1540               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1546               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1552               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1558               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1564               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1570               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1574               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1578               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1582               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1588               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1592               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1598               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1604               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1611               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1618               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1624               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1630               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1634               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1638               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1644               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1650               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1657               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1661               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1666               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1671               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1676               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1681               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1686               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1691               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1696               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1700               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1704               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1708               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1714               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1720               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1724               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1728               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1733               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1740               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1748               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1755               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1761               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1768               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1774               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1778               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1784               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1790               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1795               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1801               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.collection.immutable.List>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1808               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1814               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1819               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1826               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1831               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1835               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1839               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1844               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1848               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1852               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1858               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1864               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1871               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1877               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1880               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public scalaz.Functor<scala.collection.immutable.List>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1887               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1894               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1902               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.collection.immutable.List>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1910               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.CobindSyntax<scala.collection.immutable.List> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1914               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1914               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1922               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1922               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scala.collection.immutable.List> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1929               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1929               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scala.collection.immutable.List> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1936               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1936               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scala.collection.immutable.List> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1943               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1943               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scala.collection.immutable.List> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1950               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1950               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scala.collection.immutable.List> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1957               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1957               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1964               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1964               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1971               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1971               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1978               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1978               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1985               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1985               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scala.collection.immutable.List> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1992               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1992               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.collection.immutable.List> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1999               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1999               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.collection.immutable.List> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2006               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2006               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2013               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2013               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2020               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2020               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.collection.immutable.List> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2027               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2027               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scala.collection.immutable.List> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2034               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2034               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.collection.immutable.List> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2041               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2041               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.collection.immutable.List> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2048               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2048               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2055               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2055               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.collection.immutable.List<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       3: getstatic     #2072               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: aastore
      19: invokevirtual #2081               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      22: invokevirtual #2084               // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      25: areturn

  public <A, B> scala.collection.immutable.List<B> bind(scala.collection.immutable.List<A>, scala.Function1<A, scala.collection.immutable.List<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       5: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #2097               // Method scala/collection/immutable/List.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #2093               // class scala/collection/immutable/List
      14: areturn

  public <A> scala.collection.mutable.Builder<A, scala.collection.immutable.List<A>> createNewBuilder();
    Code:
       0: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       3: invokevirtual #2103               // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
       6: areturn

  public <A> boolean isEmpty(scala.collection.immutable.List<A>);
    Code:
       0: aload_1
       1: invokevirtual #2109               // Method scala/collection/immutable/List.isEmpty:()Z
       4: ireturn

  public <A> scala.collection.immutable.List<A> plus(scala.collection.immutable.List<A>, scala.Function0<scala.collection.immutable.List<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #2114               // class scala/collection/GenTraversableOnce
      10: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      13: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokevirtual #2118               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      19: checkcast     #2093               // class scala/collection/immutable/List
      22: areturn

  public <A> scala.collection.immutable.List<A> alt(scala.Function0<scala.collection.immutable.List<A>>, scala.Function0<scala.collection.immutable.List<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: aload_2
      10: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #2114               // class scala/collection/GenTraversableOnce
      18: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      21: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokevirtual #2118               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #2093               // class scala/collection/immutable/List
      30: areturn

  public <A> scala.collection.immutable.List<A> empty();
    Code:
       0: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public <A, B> scala.Tuple2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>> unzip(scala.collection.immutable.List<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2072               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2135               // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
       7: invokevirtual #2138               // Method scala/collection/immutable/List.unzip:(Lscala/Function1;)Lscala/Tuple2;
      10: areturn

  public <A, B> scala.collection.immutable.List<scala.Tuple2<A, B>> zip(scala.Function0<scala.collection.immutable.List<A>>, scala.Function0<scala.collection.immutable.List<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: astore_3
      10: aload_3
      11: invokevirtual #2109               // Method scala/collection/immutable/List.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #2142               // Method empty:()Lscala/collection/immutable/List;
      21: areturn
      22: aload_3
      23: aload_2
      24: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #2144               // class scala/collection/GenIterable
      32: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      35: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #2147               // Method scala/collection/immutable/List.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #2093               // class scala/collection/immutable/List
      44: areturn

  public <A> scala.Option<A> findLeft(scala.collection.immutable.List<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2155               // Method scala/collection/immutable/List.find:(Lscala/Function1;)Lscala/Option;
       5: areturn

  public <A> scala.Option<A> findRight(scala.collection.immutable.List<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: getstatic     #2161               // Field scala/None$.MODULE$:Lscala/None$;
       4: astore        4
       6: astore_3
       7: aload_3
       8: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      11: ifeq          66
      14: aload_3
      15: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      18: astore        5
      20: aload         5
      22: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      25: astore        6
      27: aload         5
      29: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      32: aload_2
      33: aload         6
      35: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokestatic  #2179               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      43: ifeq          58
      46: new           #2181               // class scala/Some
      49: dup
      50: aload         6
      52: invokespecial #2185               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      55: goto          60
      58: aload         4
      60: astore        4
      62: astore_3
      63: goto          7
      66: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      69: aload_3
      70: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifne          85
      76: new           #2190               // class scala/MatchError
      79: dup
      80: aload_3
      81: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow
      85: aload         4
      87: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>, scala.collection.immutable.List<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2222,  0           // InvokeDynamic #0:apply:(Lscalaz/std/ListInstances$$anon$2;Lscala/Function1;)Lscala/Function2;
       7: areturn

  public <F, A, B> F traverseImpl(scala.collection.immutable.List<A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2235,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #2240               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      11: invokevirtual #2244               // Method scalaz/Reducer$.ReverseListReducer:()Lscalaz/Reducer;
      14: invokeinterface #2246,  4         // InterfaceMethod scalaz/Applicative.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      19: astore        4
      21: aload         4
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload         4
      30: instanceof    #111                // class scalaz/Maybe$Just
      33: ifeq          52
      36: aload         4
      38: checkcast     #111                // class scalaz/Maybe$Just
      41: invokevirtual #2249               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: invokestatic  #2252               // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      47: astore        5
      49: goto          79
      52: aload         4
      54: instanceof    #106                // class scalaz/Maybe$Empty
      57: ifeq          69
      60: aload_3
      61: invokestatic  #2256               // Method $anonfun$traverseImpl$2:(Lscalaz/Applicative;)Ljava/lang/Object;
      64: astore        5
      66: goto          79
      69: new           #2190               // class scala/MatchError
      72: dup
      73: aload         4
      75: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow
      79: aload_3
      80: aload         5
      82: invokedynamic #2265,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      87: invokeinterface #2267,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      92: areturn

  public <A, B> B foldRight(scala.collection.immutable.List<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: new           #2274               // class scala/collection/mutable/ArrayStack
       3: dup
       4: invokespecial #2277               // Method scala/collection/mutable/ArrayStack."<init>":()V
       7: astore        4
       9: aload_1
      10: aload         4
      12: invokedynamic #2286,  0           // InvokeDynamic #3:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      17: invokevirtual #2290               // Method scala/collection/immutable/List.foreach:(Lscala/Function1;)V
      20: aload_2
      21: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: astore        5
      28: aload         4
      30: invokevirtual #2291               // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      33: ifne          59
      36: aload_3
      37: aload         4
      39: invokevirtual #2294               // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      42: aload         5
      44: invokedynamic #2302,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      49: invokeinterface #2306,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: astore        5
      56: goto          28
      59: aload         5
      61: areturn

  public <A, B> B foldMap(scala.collection.immutable.List<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
       8: invokeinterface #2320,  3         // InterfaceMethod scalaz/Monoid.unfoldrSum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public <A, B> scala.collection.immutable.List<B> cobind(scala.collection.immutable.List<A>, scala.Function1<scala.collection.immutable.List<A>, B>);
    Code:
       0: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: astore_3
      14: goto          67
      17: aload_1
      18: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      21: ifeq          58
      24: aload_1
      25: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      28: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      31: astore        4
      33: aload_2
      34: aload_1
      35: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: astore        5
      42: aload_0
      43: aload         4
      45: aload_2
      46: invokevirtual #2324               // Method cobind:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
      49: aload         5
      51: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      54: astore_3
      55: goto          67
      58: new           #2190               // class scala/MatchError
      61: dup
      62: aload_1
      63: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload_3
      68: areturn

  public <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> cojoin(scala.collection.immutable.List<A>);
    Code:
       0: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      13: astore_2
      14: goto          54
      17: aload_1
      18: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      21: ifeq          45
      24: aload_1
      25: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      28: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      31: astore_3
      32: aload_0
      33: aload_3
      34: invokevirtual #2332               // Method cojoin:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      37: aload_1
      38: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      41: astore_2
      42: goto          54
      45: new           #2190               // class scala/MatchError
      48: dup
      49: aload_1
      50: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow
      54: aload_2
      55: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2335               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2338               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2340               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public final java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: invokeinterface #2342,  1         // InterfaceMethod scalaz/std/IterableBindRec.createNewBuilder:()Lscala/collection/mutable/Builder;
       6: astore_3
       7: new           #2163               // class scala/collection/immutable/$colon$colon
      10: dup
      11: aload_2
      12: aload_1
      13: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #2344               // class scala/collection/immutable/Seq
      21: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      24: invokespecial #2347               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      27: astore        4
      29: iconst_0
      30: istore        5
      32: aconst_null
      33: astore        6
      35: aload         4
      37: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      40: ifeq          162
      43: iconst_1
      44: istore        5
      46: aload         4
      48: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      51: astore        6
      53: aload         6
      55: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      58: checkcast     #2344               // class scala/collection/immutable/Seq
      61: astore        7
      63: aload         6
      65: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      68: astore        8
      70: getstatic     #2352               // Field scala/package$.MODULE$:Lscala/package$;
      73: invokevirtual #2356               // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
      76: aload         7
      78: invokevirtual #2362               // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
      81: astore        9
      83: aload         9
      85: invokevirtual #2363               // Method scala/Option.isEmpty:()Z
      88: ifne          162
      91: aload         9
      93: invokevirtual #2364               // Method scala/Option.get:()Ljava/lang/Object;
      96: checkcast     #2366               // class scala/Tuple2
      99: invokevirtual #2369               // Method scala/Tuple2._1:()Ljava/lang/Object;
     102: checkcast     #2371               // class scalaz/$bslash$div
     105: astore        10
     107: aload         9
     109: invokevirtual #2364               // Method scala/Option.get:()Ljava/lang/Object;
     112: checkcast     #2366               // class scala/Tuple2
     115: invokevirtual #2374               // Method scala/Tuple2._2:()Ljava/lang/Object;
     118: checkcast     #2344               // class scala/collection/immutable/Seq
     121: astore        11
     123: aload         10
     125: instanceof    #2376               // class scalaz/$bslash$div$minus
     128: ifeq          162
     131: aload         10
     133: checkcast     #2376               // class scalaz/$bslash$div$minus
     136: invokevirtual #2378               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     139: astore        12
     141: aload_3
     142: aload         12
     144: invokeinterface #2384,  2         // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
     149: pop
     150: aload         8
     152: aload         11
     154: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     157: astore        4
     159: goto          29
     162: iload         5
     164: ifeq          285
     167: aload         6
     169: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     172: checkcast     #2344               // class scala/collection/immutable/Seq
     175: astore        13
     177: aload         6
     179: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     182: astore        14
     184: getstatic     #2352               // Field scala/package$.MODULE$:Lscala/package$;
     187: invokevirtual #2356               // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
     190: aload         13
     192: invokevirtual #2362               // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
     195: astore        15
     197: aload         15
     199: invokevirtual #2363               // Method scala/Option.isEmpty:()Z
     202: ifne          285
     205: aload         15
     207: invokevirtual #2364               // Method scala/Option.get:()Ljava/lang/Object;
     210: checkcast     #2366               // class scala/Tuple2
     213: invokevirtual #2369               // Method scala/Tuple2._1:()Ljava/lang/Object;
     216: checkcast     #2371               // class scalaz/$bslash$div
     219: astore        16
     221: aload         15
     223: invokevirtual #2364               // Method scala/Option.get:()Ljava/lang/Object;
     226: checkcast     #2366               // class scala/Tuple2
     229: invokevirtual #2374               // Method scala/Tuple2._2:()Ljava/lang/Object;
     232: checkcast     #2344               // class scala/collection/immutable/Seq
     235: astore        17
     237: aload         16
     239: instanceof    #2386               // class scalaz/$minus$bslash$div
     242: ifeq          285
     245: aload         16
     247: checkcast     #2386               // class scalaz/$minus$bslash$div
     250: invokevirtual #2388               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     253: astore        18
     255: aload_2
     256: aload         18
     258: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #2344               // class scala/collection/immutable/Seq
     266: astore        19
     268: aload         14
     270: aload         17
     272: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     275: aload         19
     277: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     280: astore        4
     282: goto          29
     285: iload         5
     287: ifeq          300
     290: aload         6
     292: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     295: astore        4
     297: goto          29
     300: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     303: aload         4
     305: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     308: ifne          321
     311: new           #2190               // class scala/MatchError
     314: dup
     315: aload         4
     317: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     320: athrow
     321: aload_3
     322: invokeinterface #2391,  1         // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
     327: checkcast     #2344               // class scala/collection/immutable/Seq
     330: areturn

  public final boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2402               // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #2406,  2         // InterfaceMethod scala/collection/Iterable.forall:(Lscala/Function1;)Z
      10: ireturn

  public final boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2402               // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #2409,  2         // InterfaceMethod scala/collection/Iterable.exists:(Lscala/Function1;)Z
      10: ireturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2411               // Method empty:(Lscala/collection/Iterable;)Z
       8: ireturn

  public final scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2414               // Method toStream:(Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       8: areturn

  public final scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2417               // Method toSet:(Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       8: areturn

  public final scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2420               // Method toVector:(Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       8: areturn

  public final scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2422               // Method toList:(Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2402               // class scala/collection/Iterable
       5: invokevirtual #2424               // Method length:(Lscala/collection/Iterable;)I
       8: ireturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2402               // class scala/collection/Iterable
       4: aload_2
       5: aload_3
       6: invokeinterface #2427,  3         // InterfaceMethod scala/collection/Iterable.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2332               // Method cojoin:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore_3
       5: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       8: aload_3
       9: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          23
      15: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      18: astore        4
      20: goto          74
      23: aload_3
      24: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      27: ifeq          65
      30: aload_3
      31: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      34: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      37: astore        5
      39: aload_2
      40: aload_3
      41: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore        6
      48: aload_0
      49: aload         5
      51: aload_2
      52: invokevirtual #2324               // Method cobind:(Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/List;
      55: aload         6
      57: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      60: astore        4
      62: goto          74
      65: new           #2190               // class scala/MatchError
      68: dup
      69: aload_3
      70: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      73: athrow
      74: aload         4
      76: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore        4
       6: aload_3
       7: aload         4
       9: aload_2
      10: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #2320,  3         // InterfaceMethod scalaz/Monoid.unfoldrSum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: areturn

  public java.lang.Object foldMap(scala.collection.Iterable, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore        4
       6: aload_3
       7: aload         4
       9: aload_2
      10: invokedynamic #2315,  0           // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #2320,  3         // InterfaceMethod scalaz/Monoid.unfoldrSum:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore        4
       6: new           #2274               // class scala/collection/mutable/ArrayStack
       9: dup
      10: invokespecial #2277               // Method scala/collection/mutable/ArrayStack."<init>":()V
      13: astore        5
      15: aload         4
      17: aload         5
      19: invokedynamic #2286,  0           // InvokeDynamic #3:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      24: invokevirtual #2290               // Method scala/collection/immutable/List.foreach:(Lscala/Function1;)V
      27: aload_2
      28: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      33: astore        6
      35: aload         5
      37: invokevirtual #2291               // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      40: ifne          66
      43: aload_3
      44: aload         5
      46: invokevirtual #2294               // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      49: aload         6
      51: invokedynamic #2302,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      56: invokeinterface #2306,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: astore        6
      63: goto          35
      66: aload         6
      68: areturn

  public java.lang.Object foldRight(scala.collection.Iterable, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore        4
       6: new           #2274               // class scala/collection/mutable/ArrayStack
       9: dup
      10: invokespecial #2277               // Method scala/collection/mutable/ArrayStack."<init>":()V
      13: astore        5
      15: aload         4
      17: aload         5
      19: invokedynamic #2286,  0           // InvokeDynamic #3:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      24: invokevirtual #2290               // Method scala/collection/immutable/List.foreach:(Lscala/Function1;)V
      27: aload_2
      28: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      33: astore        6
      35: aload         5
      37: invokevirtual #2291               // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      40: ifne          66
      43: aload_3
      44: aload         5
      46: invokevirtual #2294               // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      49: aload         6
      51: invokedynamic #2302,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      56: invokeinterface #2306,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: astore        6
      63: goto          35
      66: aload         6
      68: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: astore        4
       6: aload_3
       7: aload         4
       9: aload_2
      10: invokedynamic #2235,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      15: getstatic     #2240               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      18: invokevirtual #2244               // Method scalaz/Reducer$.ReverseListReducer:()Lscalaz/Reducer;
      21: invokeinterface #2246,  4         // InterfaceMethod scalaz/Applicative.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      26: astore        5
      28: aload         5
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: aload         5
      37: instanceof    #111                // class scalaz/Maybe$Just
      40: ifeq          59
      43: aload         5
      45: checkcast     #111                // class scalaz/Maybe$Just
      48: invokevirtual #2249               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      51: invokestatic  #2252               // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      54: astore        6
      56: goto          86
      59: aload         5
      61: instanceof    #106                // class scalaz/Maybe$Empty
      64: ifeq          76
      67: aload_3
      68: invokestatic  #2256               // Method $anonfun$traverseImpl$2:(Lscalaz/Applicative;)Ljava/lang/Object;
      71: astore        6
      73: goto          86
      76: new           #2190               // class scala/MatchError
      79: dup
      80: aload         5
      82: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      85: athrow
      86: aload_3
      87: aload         6
      89: invokedynamic #2265,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      94: invokeinterface #2267,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      99: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: getstatic     #2161               // Field scala/None$.MODULE$:Lscala/None$;
       7: astore        4
       9: astore_3
      10: aload_3
      11: instanceof    #2163               // class scala/collection/immutable/$colon$colon
      14: ifeq          69
      17: aload_3
      18: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      21: astore        5
      23: aload         5
      25: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      28: astore        6
      30: aload         5
      32: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      35: aload_2
      36: aload         6
      38: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      43: invokestatic  #2179               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      46: ifeq          61
      49: new           #2181               // class scala/Some
      52: dup
      53: aload         6
      55: invokespecial #2185               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      58: goto          63
      61: aload         4
      63: astore        4
      65: astore_3
      66: goto          10
      69: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      72: aload_3
      73: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      76: ifne          88
      79: new           #2190               // class scala/MatchError
      82: dup
      83: aload_3
      84: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow
      88: aload         4
      90: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: aload_2
       5: invokevirtual #2155               // Method scala/collection/immutable/List.find:(Lscala/Function1;)Lscala/Option;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: astore_3
      10: aload_3
      11: invokevirtual #2109               // Method scala/collection/immutable/List.isEmpty:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #2142               // Method empty:()Lscala/collection/immutable/List;
      21: areturn
      22: aload_3
      23: aload_2
      24: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      29: checkcast     #2144               // class scala/collection/GenIterable
      32: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      35: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #2147               // Method scala/collection/immutable/List.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #2093               // class scala/collection/immutable/List
      44: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2446               // Method unzip:(Lscala/collection/immutable/List;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2142               // Method empty:()Lscala/collection/immutable/List;
       4: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scala/collection/immutable/List
       9: aload_2
      10: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #2114               // class scala/collection/GenTraversableOnce
      18: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      21: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokevirtual #2118               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #2093               // class scala/collection/immutable/List
      30: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: aload_2
       5: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #2114               // class scala/collection/GenTraversableOnce
      13: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      16: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      19: invokevirtual #2118               // Method scala/collection/immutable/List.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      22: checkcast     #2093               // class scala/collection/immutable/List
      25: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scala/collection/immutable/List
       5: invokevirtual #2448               // Method isEmpty:(Lscala/collection/immutable/List;)Z
       8: ireturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scala/collection/immutable/List
       4: aload_2
       5: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       8: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      11: invokevirtual #2097               // Method scala/collection/immutable/List.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      14: checkcast     #2093               // class scala/collection/immutable/List
      17: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       3: getstatic     #2072               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokeinterface #2077,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      18: aastore
      19: invokevirtual #2081               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      22: invokevirtual #2084               // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      25: areturn

  private final scala.Option loop$1(scala.collection.immutable.List, scala.Option, scala.Function1);
    Code:
       0: aload_1
       1: instanceof    #2163               // class scala/collection/immutable/$colon$colon
       4: ifeq          57
       7: aload_1
       8: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      11: astore        4
      13: aload         4
      15: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      18: astore        5
      20: aload         4
      22: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      25: aload_3
      26: aload         5
      28: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokestatic  #2179               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      36: ifeq          51
      39: new           #2181               // class scala/Some
      42: dup
      43: aload         5
      45: invokespecial #2185               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      48: goto          52
      51: aload_2
      52: astore_2
      53: astore_1
      54: goto          0
      57: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      60: aload_1
      61: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifne          76
      67: new           #2190               // class scala/MatchError
      70: dup
      71: aload_1
      72: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: aload_2
      77: areturn

  public static final java.lang.Object $anonfun$alignWith$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #47                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #2455               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #50                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #2457               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  private final scala.collection.immutable.List loop$2(scala.collection.immutable.List, scala.collection.immutable.List, scala.collection.immutable.List, scala.Function1);
    Code:
       0: new           #2366               // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #2465               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        6
      11: aload_1
      12: astore        7
      14: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      17: aload         7
      19: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          54
      25: aload_2
      26: aload         4
      28: invokedynamic #2469,  0           // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function1;
      33: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      36: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #2471               // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #2093               // class scala/collection/immutable/List
      45: aload_3
      46: invokevirtual #2474               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      49: astore        5
      51: goto          207
      54: aload_2
      55: astore        8
      57: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      60: aload         8
      62: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifeq          97
      68: aload_1
      69: aload         4
      71: invokedynamic #2478,  0           // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
      76: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      79: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      82: invokevirtual #2471               // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      85: checkcast     #2093               // class scala/collection/immutable/List
      88: aload_3
      89: invokevirtual #2474               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      92: astore        5
      94: goto          207
      97: aload_1
      98: astore        9
     100: aload_2
     101: astore        10
     103: aload         9
     105: instanceof    #2163               // class scala/collection/immutable/$colon$colon
     108: ifeq          197
     111: aload         9
     113: checkcast     #2163               // class scala/collection/immutable/$colon$colon
     116: astore        11
     118: aload         11
     120: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     123: astore        12
     125: aload         11
     127: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     130: astore        13
     132: aload         10
     134: instanceof    #2163               // class scala/collection/immutable/$colon$colon
     137: ifeq          197
     140: aload         10
     142: checkcast     #2163               // class scala/collection/immutable/$colon$colon
     145: astore        14
     147: aload         14
     149: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     152: astore        15
     154: aload         14
     156: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     159: astore        16
     161: aload         13
     163: aload         16
     165: aload         4
     167: new           #42                 // class scalaz/$bslash$amp$div$Both
     170: dup
     171: aload         12
     173: aload         15
     175: invokespecial #2479               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     178: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     183: astore        17
     185: aload_3
     186: aload         17
     188: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     191: astore_3
     192: astore_2
     193: astore_1
     194: goto          0
     197: new           #2190               // class scala/MatchError
     200: dup
     201: aload         6
     203: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     206: athrow
     207: aload         5
     209: areturn

  public static final scala.collection.immutable.List $anonfun$alignWith$3(scalaz.std.ListInstances$$anon$2, scala.Function1, scala.collection.immutable.List, scala.collection.immutable.List);
    Code:
       0: aload_2
       1: aload_3
       2: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       5: astore        6
       7: astore        5
       9: astore        4
      11: new           #2366               // class scala/Tuple2
      14: dup
      15: aload         4
      17: aload         5
      19: invokespecial #2465               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      22: astore        8
      24: aload         4
      26: astore        9
      28: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      31: aload         9
      33: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          69
      39: aload         5
      41: aload_1
      42: invokedynamic #2469,  0           // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function1;
      47: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      50: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      53: invokevirtual #2471               // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      56: checkcast     #2093               // class scala/collection/immutable/List
      59: aload         6
      61: invokevirtual #2474               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      64: astore        7
      66: goto          229
      69: aload         5
      71: astore        10
      73: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      76: aload         10
      78: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          114
      84: aload         4
      86: aload_1
      87: invokedynamic #2478,  0           // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
      92: getstatic     #2067               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      95: invokevirtual #2091               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      98: invokevirtual #2471               // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     101: checkcast     #2093               // class scala/collection/immutable/List
     104: aload         6
     106: invokevirtual #2474               // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
     109: astore        7
     111: goto          229
     114: aload         4
     116: astore        11
     118: aload         5
     120: astore        12
     122: aload         11
     124: instanceof    #2163               // class scala/collection/immutable/$colon$colon
     127: ifeq          219
     130: aload         11
     132: checkcast     #2163               // class scala/collection/immutable/$colon$colon
     135: astore        13
     137: aload         13
     139: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     142: astore        14
     144: aload         13
     146: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     149: astore        15
     151: aload         12
     153: instanceof    #2163               // class scala/collection/immutable/$colon$colon
     156: ifeq          219
     159: aload         12
     161: checkcast     #2163               // class scala/collection/immutable/$colon$colon
     164: astore        16
     166: aload         16
     168: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     171: astore        17
     173: aload         16
     175: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
     178: astore        18
     180: aload         15
     182: aload         18
     184: aload_1
     185: new           #42                 // class scalaz/$bslash$amp$div$Both
     188: dup
     189: aload         14
     191: aload         17
     193: invokespecial #2479               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     196: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     201: astore        19
     203: aload         6
     205: aload         19
     207: invokevirtual #2328               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     210: astore        6
     212: astore        5
     214: astore        4
     216: goto          11
     219: new           #2190               // class scala/MatchError
     222: dup
     223: aload         8
     225: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     228: athrow
     229: aload         7
     231: areturn

  public static final scalaz.Maybe $anonfun$traverseImpl$1(scala.Function1, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: instanceof    #2163               // class scala/collection/immutable/$colon$colon
       4: ifeq          51
       7: aload_1
       8: checkcast     #2163               // class scala/collection/immutable/$colon$colon
      11: astore_3
      12: aload_3
      13: invokevirtual #2166               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      16: astore        4
      18: aload_3
      19: invokevirtual #2169               // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      22: astore        5
      24: getstatic     #2498               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      27: new           #2366               // class scala/Tuple2
      30: dup
      31: aload_0
      32: aload         4
      34: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: aload         5
      41: invokespecial #2465               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      44: invokevirtual #2502               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      47: astore_2
      48: goto          80
      51: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      54: aload_1
      55: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          71
      61: getstatic     #2498               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      64: invokevirtual #2505               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      67: astore_2
      68: goto          80
      71: new           #2190               // class scala/MatchError
      74: dup
      75: aload_1
      76: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow
      80: aload_2
      81: areturn

  public static final scala.collection.immutable.Nil$ $anonfun$traverseImpl$3();
    Code:
       0: getstatic     #2128               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokedynamic #2515,  0           // InvokeDynamic #8:apply:()Lscala/Function0;
       6: invokeinterface #2517,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final scala.collection.immutable.List $anonfun$traverseImpl$4(scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokevirtual #2520               // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
       4: areturn

  public static final void $anonfun$foldRight$1(scala.collection.mutable.ArrayStack, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2526               // Method scala/collection/mutable/ArrayStack.push:(Ljava/lang/Object;)V
       5: return

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$foldMap$1(scala.Function1, scala.collection.immutable.List);
    Code:
       0: aload_1
       1: invokevirtual #2532               // Method scala/collection/immutable/List.headOption:()Lscala/Option;
       4: astore_3
       5: aload_3
       6: instanceof    #2181               // class scala/Some
       9: ifeq          50
      12: aload_3
      13: checkcast     #2181               // class scala/Some
      16: invokevirtual #2534               // Method scala/Some.value:()Ljava/lang/Object;
      19: astore        4
      21: getstatic     #2498               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      24: new           #2366               // class scala/Tuple2
      27: dup
      28: aload_0
      29: aload         4
      31: invokeinterface #2173,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aload_1
      37: invokevirtual #2537               // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
      40: invokespecial #2465               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: invokevirtual #2502               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      46: astore_2
      47: goto          79
      50: getstatic     #2161               // Field scala/None$.MODULE$:Lscala/None$;
      53: aload_3
      54: invokevirtual #2188               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifeq          70
      60: getstatic     #2498               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      63: invokevirtual #2505               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      66: astore_2
      67: goto          79
      70: new           #2190               // class scala/MatchError
      73: dup
      74: aload_3
      75: invokespecial #2191               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow
      79: aload_2
      80: areturn

  public scalaz.std.ListInstances$$anon$2(scalaz.std.ListInstances);
    Code:
       0: aload_0
       1: invokespecial #2540               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2544               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2547               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2550               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2553               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2556               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2559               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2562               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2565               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2568               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2571               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2574               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2577               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2580               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2583               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2586               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2589               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2592               // InterfaceMethod scalaz/std/IterableBindRec.$init$:(Lscalaz/std/IterableBindRec;)V
      72: aload_0
      73: invokestatic  #2595               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2598               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2601               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      84: aload_0
      85: invokestatic  #2604               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      88: aload_0
      89: invokestatic  #2607               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      92: aload_0
      93: invokestatic  #2610               // InterfaceMethod scalaz/std/IterableSubtypeFoldable.$init$:(Lscalaz/std/IterableSubtypeFoldable;)V
      96: aload_0
      97: invokestatic  #2613               // InterfaceMethod scalaz/Functor$OverrideWiden.$init$:(Lscalaz/Functor$OverrideWiden;)V
     100: return

  public static final java.lang.Object $anonfun$foldRight$1$adapted(scala.collection.mutable.ArrayStack, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2616               // Method $anonfun$foldRight$1:(Lscala/collection/mutable/ArrayStack;Ljava/lang/Object;)V
       5: getstatic     #2622               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2636,  0           // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
