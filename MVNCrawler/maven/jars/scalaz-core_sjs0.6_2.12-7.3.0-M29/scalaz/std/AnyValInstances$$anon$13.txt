Compiled from "AnyVal.scala"
public final class scalaz.std.AnyValInstances$$anon$13 implements scalaz.Monoid<java.lang.Object>, scalaz.Enum<java.lang.Object> {
  private final scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax;

  private final scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax;

  private final scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax;

  private final scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.std.AnyValInstances $outer;

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> succx();
    Code:
       0: aload_0
       1: invokestatic  #64                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, java.lang.Object, java.lang.Object> predx();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> succState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #88                 // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #94                 // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, X> predState(scala.Function1<java.lang.Object, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #114                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>, scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #118                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<java.lang.Object, X>, scala.Function1<X, scalaz.IndexedStateT<java.lang.Object, java.lang.Object, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<java.lang.Object, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #126                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #143                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #152                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList<java.lang.Object> fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #159                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream<java.lang.Object> fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #166                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList<java.lang.Object> fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #173                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<java.lang.Object>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #194                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #202                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #206                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #210                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #216                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #220                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<java.lang.Object, java.lang.Object> sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #227                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<java.lang.Object> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #241                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<java.lang.Object> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #248                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #255                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<java.lang.Object>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #268                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #275                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #292                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #302                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #307                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #315                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #320                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #327                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #334                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #346                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #353                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #358                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #365                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #370                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #377                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.EnumSyntax<java.lang.Object> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #381                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #381                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<java.lang.Object> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #389                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #389                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<java.lang.Object> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #396                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #396                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #403                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #403                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #410                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #410                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      18: aload_1
      19: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      22: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: aload_2
      26: invokeinterface #447,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: astore_3
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_3
      42: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      45: lmul
      46: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      49: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn

  public java.lang.Object zero();
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: lconst_1
       7: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      10: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_2
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_2
      28: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      40: aload_1
      41: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      44: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      47: invokeinterface #473,  2          // InterfaceMethod scalaz/Enum.succ:(Ljava/lang/Object;)Ljava/lang/Object;
      52: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_2
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_2
      28: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      40: aload_1
      41: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      44: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      47: invokeinterface #476,  2          // InterfaceMethod scalaz/Enum.pred:(Ljava/lang/Object;)Ljava/lang/Object;
      52: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: iload_1
      29: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_2
      42: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      45: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      48: invokeinterface #480,  3          // InterfaceMethod scalaz/Enum.succn:(ILjava/lang/Object;)Ljava/lang/Object;
      53: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: iload_1
      29: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      32: dup
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      41: aload_2
      42: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      45: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      48: invokeinterface #483,  3          // InterfaceMethod scalaz/Enum.predn:(ILjava/lang/Object;)Ljava/lang/Object;
      53: invokevirtual #456                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: areturn

  public scala.Option<java.lang.Object> min();
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_1
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_1
      28: invokeinterface #487,  1          // InterfaceMethod scalaz/Enum.min:()Lscala/Option;
      33: invokevirtual #490                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #492                // class scala/Option
      39: areturn

  public scala.Option<java.lang.Object> max();
    Code:
       0: getstatic     #424                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #428                // Method scalaz/Tags$.Multiplication:()Lscalaz/Tag$TagOf;
       6: getstatic     #465                // Field scalaz/Enum$.MODULE$:Lscalaz/Enum$;
       9: aload_0
      10: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      13: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      18: checkcast     #9                  // class scalaz/Enum
      21: astore_1
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_1
      28: invokeinterface #494,  1          // InterfaceMethod scalaz/Enum.max:()Lscala/Option;
      33: invokevirtual #490                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #492                // class scala/Option
      39: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #502                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
       7: invokeinterface #471,  1          // InterfaceMethod scalaz/std/AnyValInstances.longInstance:()Lscalaz/Monoid;
      12: checkcast     #29                 // class scalaz/Order
      15: astore_3
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_3
      22: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      34: aload_1
      35: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      38: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      41: getstatic     #433                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: invokevirtual #436                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload_2
      54: invokevirtual #442                // Method scalaz/TagKind.unwrap$mJc$sp:(Ljava/lang/Object;)J
      57: invokestatic  #453                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      60: invokeinterface #504,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      65: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #25                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #511                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.std.AnyValInstances$$anon$13(scalaz.std.AnyValInstances);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #467                // Field $outer:Lscalaz/std/AnyValInstances;
      11: aload_0
      12: invokespecial #515                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #519                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #522                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      23: aload_0
      24: invokestatic  #525                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      27: aload_0
      28: invokestatic  #528                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      31: aload_0
      32: invokestatic  #531                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      35: return
}
