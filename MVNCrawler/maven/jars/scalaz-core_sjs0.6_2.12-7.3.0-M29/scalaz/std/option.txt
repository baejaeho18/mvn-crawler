Compiled from "Option.scala"
public final class scalaz.std.option {
  public static <A, B> B foldLiftOpt(scala.Option<A>, scala.Function0<B>, scala.Function1<scala.Option<A>, B>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #25                 // Method scalaz/std/option$.foldLiftOpt:(Lscala/Option;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public static <F, A, B> B foldLift(scala.Option<A>, scala.Function0<B>, scala.Function1<F, B>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #31                 // Method scalaz/std/option$.foldLift:(Lscala/Option;Lscala/Function0;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      10: areturn

  public static <A, F> F getOrElseF(scala.Option<A>, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #38                 // Method scalaz/std/option$.getOrElseF:(Lscala/Option;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static <A, M> M orEmpty(scala.Option<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #45                 // Method scalaz/std/option$.orEmpty:(Lscala/Option;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public static <A> scalaz.Maybe<A> toMaybe(scala.Option<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #50                 // Method scalaz/std/option$.toMaybe:(Lscala/Option;)Lscalaz/Maybe;
       7: areturn

  public static <A, B> scalaz.$bslash$div<A, B> toLeft(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method scalaz/std/option$.toLeft:(Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       8: areturn

  public static <A, E> scalaz.$bslash$div<E, A> toRight(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #60                 // Method scalaz/std/option$.toRight:(Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       8: areturn

  public static <A, B> scalaz.Validation<scalaz.NonEmptyList<A>, B> toFailureNel(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #65                 // Method scalaz/std/option$.toFailureNel:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, E> scalaz.Validation<scalaz.NonEmptyList<E>, A> toSuccessNel(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #69                 // Method scalaz/std/option$.toSuccessNel:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, B> scalaz.Validation<A, B> toFailure(scala.Option<A>, scala.Function0<B>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #73                 // Method scalaz/std/option$.toFailure:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, E> scalaz.Validation<E, A> toSuccess(scala.Option<A>, scala.Function0<E>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokevirtual #77                 // Method scalaz/std/option$.toSuccess:(Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       8: areturn

  public static <A, X> X fold(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #84                 // Method scalaz/std/option$.fold:(Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <A, X> X cata(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #87                 // Method scalaz/std/option$.cata:(Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public static <A> scala.Option<A> none();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #91                 // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  public static <A> scala.Option<A> some(A);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #96                 // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
       7: areturn

  public static scalaz.Monad<java.lang.Object> optionMaxMonad();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #101                // Method scalaz/std/option$.optionMaxMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionMaxOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #107                // Method scalaz/std/option$.optionMaxOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionMaxShow(scalaz.Show<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #113                // Method scalaz/std/option$.optionMaxShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionMax(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #119                // Method scalaz/std/option$.optionMax:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> optionMinMonad();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #122                // Method scalaz/std/option$.optionMinMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionMinOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #126                // Method scalaz/std/option$.optionMinOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionMinShow(scalaz.Show<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #130                // Method scalaz/std/option$.optionMinShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionMin(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #133                // Method scalaz/std/option$.optionMin:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> optionLastMonad();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #136                // Method scalaz/std/option$.optionLastMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionLastOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #140                // Method scalaz/std/option$.optionLastOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionLastShow(scalaz.Show<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #144                // Method scalaz/std/option$.optionLastShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionLast();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #149                // Method scalaz/std/option$.optionLast:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monad<java.lang.Object> optionFirstMonad();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #152                // Method scalaz/std/option$.optionFirstMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> optionFirstOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #156                // Method scalaz/std/option$.optionFirstOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> optionFirstShow(scalaz.Show<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #160                // Method scalaz/std/option$.optionFirstShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> optionFirst();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #163                // Method scalaz/std/option$.optionFirst:()Lscalaz/Monoid;
       6: areturn

  public static <A> scalaz.Show<scala.Option<A>> optionShow(scalaz.Show<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #168                // Method scalaz/std/option$.optionShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scala.Option<A>> optionOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #173                // Method scalaz/std/option$.optionOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Monoid<scala.Option<A>> optionMonoid(scalaz.Semigroup<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #179                // Method scalaz/std/option$.optionMonoid:(Lscalaz/Semigroup;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Traverse<scala.Option> optionInstance();
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #184                // Method scalaz/std/option$.optionInstance:()Lscalaz/Traverse;
       6: areturn

  public static <A> scalaz.SemiLattice<scala.Option<A>> optionSemiLattice(scalaz.SemiLattice<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #190                // Method scalaz/std/option$.optionSemiLattice:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       7: areturn

  public static <A> scalaz.Equal<scala.Option<A>> optionEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #195                // Method scalaz/std/option$.optionEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Band<scala.Option<A>> optionBand(scalaz.Band<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #201                // Method scalaz/std/option$.optionBand:(Lscalaz/Band;)Lscalaz/Band;
       7: areturn
}
