Compiled from "Future.scala"
public class scalaz.std.FutureInstance implements scalaz.Nondeterminism<scala.concurrent.Future>, scalaz.Cobind<scala.concurrent.Future>, scalaz.MonadError<scala.concurrent.Future, java.lang.Throwable>, scalaz.Catchable<scala.concurrent.Future> {
  private final scala.concurrent.ExecutionContext ec;

  private final scalaz.syntax.CatchableSyntax<scala.concurrent.Future> catchableSyntax;

  private final scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable> monadErrorSyntax;

  private final scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable> applicativeErrorSyntax;

  private final scalaz.syntax.CobindSyntax<scala.concurrent.Future> cobindSyntax;

  private final scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future> nondeterminismSyntax;

  private final scalaz.syntax.MonadSyntax<scala.concurrent.Future> monadSyntax;

  private final scalaz.syntax.BindSyntax<scala.concurrent.Future> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scala.concurrent.Future> applySyntax;

  private final scalaz.syntax.FunctorSyntax<scala.concurrent.Future> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future> invariantFunctorSyntax;

  public java.lang.Object emap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/MonadError.emap$:(Lscalaz/MonadError;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.MonadError<scala.concurrent.Future, java.lang.Throwable>.MonadErrorLaw monadErrorLaw();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod scalaz/MonadError.monadErrorLaw$:(Lscalaz/MonadError;)Lscalaz/MonadError$MonadErrorLaw;
       4: areturn

  public scalaz.ApplicativeError<scala.concurrent.Future, java.lang.Throwable>.ApplicativeErrorLaws applicativeErrorLaws();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/ApplicativeError.applicativeErrorLaws$:(Lscalaz/ApplicativeError;)Lscalaz/ApplicativeError$ApplicativeErrorLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scala.concurrent.Future>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object choose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #163                // InterfaceMethod scalaz/Nondeterminism.choose$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A> scala.Option<scala.concurrent.Future<scala.Tuple2<A, scalaz.IList<scala.concurrent.Future<A>>>>> chooseAny(scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod scalaz/Nondeterminism.chooseAny$:(Lscalaz/Nondeterminism;Lscalaz/IList;)Lscala/Option;
       5: areturn

  public java.lang.Object nmap2(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #177                // InterfaceMethod scalaz/Nondeterminism.nmap2$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object nmap3(java.lang.Object, java.lang.Object, java.lang.Object, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #185                // InterfaceMethod scalaz/Nondeterminism.nmap3$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object nmap4(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #193                // InterfaceMethod scalaz/Nondeterminism.nmap4$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object nmap5(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #201                // InterfaceMethod scalaz/Nondeterminism.nmap5$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object nmap6(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #209                // InterfaceMethod scalaz/Nondeterminism.nmap6$:(Lscalaz/Nondeterminism;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object gatherUnordered(scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // InterfaceMethod scalaz/Nondeterminism.gatherUnordered$:(Lscalaz/Nondeterminism;Lscalaz/IList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object gatherUnordered1(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #223                // InterfaceMethod scalaz/Nondeterminism.gatherUnordered1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object reduceUnordered(scalaz.IList, scalaz.Reducer, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #232                // InterfaceMethod scalaz/Nondeterminism.reduceUnordered$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Reducer;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object gather1(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/Nondeterminism.gather1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object aggregate(scalaz.IList, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Nondeterminism.aggregate$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregate1(scalaz.NonEmptyList, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod scalaz/Nondeterminism.aggregate1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregateCommutative(scalaz.IList, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #258                // InterfaceMethod scalaz/Nondeterminism.aggregateCommutative$:(Lscalaz/Nondeterminism;Lscalaz/IList;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object aggregateCommutative1(scalaz.NonEmptyList, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #263                // InterfaceMethod scalaz/Nondeterminism.aggregateCommutative1$:(Lscalaz/Nondeterminism;Lscalaz/NonEmptyList;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> parallel();
    Code:
       0: aload_0
       1: invokestatic  #270                // InterfaceMethod scalaz/Nondeterminism.parallel$:(Lscalaz/Nondeterminism;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #279                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #287                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #292                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #301                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #305                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scala.concurrent.Future>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #321                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #328                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #335                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #344                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #349                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #354                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scala.concurrent.Future>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #362                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #368                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #374                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #387                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #400                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #407                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #414                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #421                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #428                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #433                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #440                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #445                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #451                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #456                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #462                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #465                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scala.concurrent.Future> flip();
    Code:
       0: aload_0
       1: invokestatic  #470                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #479                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scala.concurrent.Future>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #486                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #493                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #499                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #505                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #511                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #517                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #523                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #535                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scala.concurrent.Future<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.concurrent.Future<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #543                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #548                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scala.concurrent.Future<A>, scala.concurrent.Future<B>> apF(scala.Function0<scala.concurrent.Future<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #558                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #564                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #571                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #578                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #585                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #591                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #598                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #605                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #611                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #617                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #623                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #629                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #635                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #642                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #650                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #658                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #666                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #674                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #681                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #687                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #693                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #699                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #705                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #711                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #717                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #723                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #730                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #737                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #744                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #751                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #758                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #765                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<H>, scala.concurrent.Future<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #772                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #779                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #786                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<K>, scala.concurrent.Future<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #793                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.concurrent.Future<C>, scala.concurrent.Future<D>, scala.concurrent.Future<E>, scala.concurrent.Future<FF>, scala.concurrent.Future<G>, scala.concurrent.Future<H>, scala.concurrent.Future<I>, scala.concurrent.Future<J>, scala.concurrent.Future<K>, scala.concurrent.Future<L>, scala.concurrent.Future<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #800                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #804                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #808                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #813                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.concurrent.Future<A>, scala.concurrent.Future<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #821                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scala.concurrent.Future>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #828                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #834                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #839                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.concurrent.Future<A>, scala.concurrent.Future<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #846                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #851                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #855                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #859                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #864                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #868                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #872                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #878                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #884                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #892                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #900                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #903                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #910                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scala.concurrent.Future>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #918                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #925                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #933                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scala.concurrent.Future>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #941                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.CatchableSyntax<scala.concurrent.Future> catchableSyntax();
    Code:
       0: aload_0
       1: getfield      #945                // Field catchableSyntax:Lscalaz/syntax/CatchableSyntax;
       4: areturn

  public void scalaz$Catchable$_setter_$catchableSyntax_$eq(scalaz.syntax.CatchableSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #945                // Field catchableSyntax:Lscalaz/syntax/CatchableSyntax;
       5: return

  public scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable> monadErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #953                // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       4: areturn

  public void scalaz$MonadError$_setter_$monadErrorSyntax_$eq(scalaz.syntax.MonadErrorSyntax<scala.concurrent.Future, java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #953                // Field monadErrorSyntax:Lscalaz/syntax/MonadErrorSyntax;
       5: return

  public scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable> applicativeErrorSyntax();
    Code:
       0: aload_0
       1: getfield      #960                // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       4: areturn

  public void scalaz$ApplicativeError$_setter_$applicativeErrorSyntax_$eq(scalaz.syntax.ApplicativeErrorSyntax<scala.concurrent.Future, java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #960                // Field applicativeErrorSyntax:Lscalaz/syntax/ApplicativeErrorSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scala.concurrent.Future> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #967                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #967                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future> nondeterminismSyntax();
    Code:
       0: aload_0
       1: getfield      #974                // Field nondeterminismSyntax:Lscalaz/syntax/NondeterminismSyntax;
       4: areturn

  public void scalaz$Nondeterminism$_setter_$nondeterminismSyntax_$eq(scalaz.syntax.NondeterminismSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #974                // Field nondeterminismSyntax:Lscalaz/syntax/NondeterminismSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scala.concurrent.Future> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #981                // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #981                // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scala.concurrent.Future> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #988                // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #988                // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #995                // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #995                // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1002               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1002               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scala.concurrent.Future> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1009               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1009               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scala.concurrent.Future> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1016               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1016               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1023               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scala.concurrent.Future>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1023               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.concurrent.Future<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1035               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: aload_0
       5: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
       8: invokevirtual #1040               // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> bind(scala.concurrent.Future<A>, scala.Function1<A, scala.concurrent.Future<B>>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
       6: invokeinterface #1049,  3         // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> map(scala.concurrent.Future<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
       6: invokeinterface #1054,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      11: areturn

  public <A, B> scala.concurrent.Future<B> cobind(scala.concurrent.Future<A>, scala.Function1<scala.concurrent.Future<A>, B>);
    Code:
       0: getstatic     #1035               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_2
       4: aload_1
       5: invokedynamic #1077,  0           // InvokeDynamic #0:apply:(Lscala/Function1;Lscala/concurrent/Future;)Lscala/Function0;
      10: aload_0
      11: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      14: invokevirtual #1040               // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      17: areturn

  public <A> scala.concurrent.Future<scala.concurrent.Future<A>> cojoin(scala.concurrent.Future<A>);
    Code:
       0: getstatic     #1035               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: invokevirtual #1084               // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<scala.Tuple2<A, scalaz.IList<scala.concurrent.Future<A>>>> chooseAny(scala.concurrent.Future<A>, scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #1094               // Method scalaz/IList.$plus$colon:(Ljava/lang/Object;)Lscalaz/IList;
       5: invokevirtual #1098               // Method scalaz/IList.zipWithIndex:()Lscalaz/IList;
       8: astore_3
       9: new           #1100               // class java/util/concurrent/atomic/AtomicInteger
      12: dup
      13: aload_3
      14: invokevirtual #1104               // Method scalaz/IList.length:()I
      17: invokespecial #1108               // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      20: astore        4
      22: getstatic     #1113               // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
      25: invokevirtual #1116               // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
      28: astore        5
      30: aload_3
      31: aload_0
      32: aload         4
      34: aload         5
      36: invokedynamic #1128,  0           // InvokeDynamic #1:apply:(Lscalaz/std/FutureInstance;Ljava/util/concurrent/atomic/AtomicInteger;Lscala/concurrent/Promise;)Lscala/Function1;
      41: invokevirtual #1131               // Method scalaz/IList.map:(Lscala/Function1;)Lscalaz/IList;
      44: pop
      45: aload         5
      47: invokeinterface #1137,  1         // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      52: aload_3
      53: invokedynamic #1147,  0           // InvokeDynamic #2:apply:(Lscalaz/IList;)Lscala/Function1;
      58: aload_0
      59: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      62: invokeinterface #1054,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      67: areturn

  public <A, B, C> scala.concurrent.Future<C> mapBoth(scala.concurrent.Future<A>, scala.concurrent.Future<B>, scala.Function2<A, B, C>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1157,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       7: aload_3
       8: invokeinterface #1163,  1         // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
      13: aload_0
      14: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      17: invokeinterface #1054,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      22: areturn

  public <A, B> scala.concurrent.Future<scala.Tuple2<A, B>> both(scala.concurrent.Future<A>, scala.concurrent.Future<B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1157,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<scalaz.IList<A>> gather(scalaz.IList<scala.concurrent.Future<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1174               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       5: invokevirtual #1178               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       8: invokevirtual #1180               // Method sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
      11: checkcast     #1045               // class scala/concurrent/Future
      14: areturn

  public <A, B> scala.concurrent.Future<B> ap(scala.Function0<scala.concurrent.Future<A>>, scala.Function0<scala.concurrent.Future<scala.Function1<A, B>>>);
    Code:
       0: aload_2
       1: invokeinterface #1188,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1045               // class scala/concurrent/Future
       9: aload_1
      10: invokeinterface #1188,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      15: checkcast     #1045               // class scala/concurrent/Future
      18: invokeinterface #1157,  2         // InterfaceMethod scala/concurrent/Future.zip:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
      23: invokedynamic #1194,  0           // InvokeDynamic #3:apply:()Lscala/Function1;
      28: aload_0
      29: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      32: invokeinterface #1054,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      37: areturn

  public <A> scala.concurrent.Future<scalaz.$bslash$div<java.lang.Throwable, A>> attempt(scala.concurrent.Future<A>);
    Code:
       0: aload_1
       1: getstatic     #1201               // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       4: invokevirtual #1204               // Method scalaz/$bslash$div$.right:()Lscala/Function1;
       7: aload_0
       8: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      11: invokeinterface #1054,  3         // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      16: new           #77                 // class scalaz/std/FutureInstance$$anonfun$attempt$1
      19: dup
      20: aconst_null
      21: invokespecial #1207               // Method scalaz/std/FutureInstance$$anonfun$attempt$1."<init>":(Lscalaz/std/FutureInstance;)V
      24: aload_0
      25: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      28: invokeinterface #1211,  3         // InterfaceMethod scala/concurrent/Future.recover:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      33: areturn

  public <A> scala.concurrent.Future<A> fail(java.lang.Throwable);
    Code:
       0: getstatic     #1035               // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_1
       4: invokevirtual #1217               // Method scala/concurrent/Future$.failed:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       7: areturn

  public <A> scala.concurrent.Future<A> raiseError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1221               // Method fail:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       5: areturn

  public <A> scala.concurrent.Future<A> handleError(scala.concurrent.Future<A>, scala.Function1<java.lang.Throwable, scala.concurrent.Future<A>>);
    Code:
       0: aload_1
       1: new           #79                 // class scalaz/std/FutureInstance$$anonfun$handleError$1
       4: dup
       5: aconst_null
       6: aload_2
       7: invokespecial #1226               // Method scalaz/std/FutureInstance$$anonfun$handleError$1."<init>":(Lscalaz/std/FutureInstance;Lscala/Function1;)V
      10: aload_0
      11: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      14: invokeinterface #1229,  3         // InterfaceMethod scala/concurrent/Future.recoverWith:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      19: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #1232               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object handleError(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1234               // Method handleError:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object raiseError(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1236               // class java/lang/Throwable
       5: invokevirtual #1238               // Method raiseError:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       8: areturn

  public java.lang.Object fail(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1221               // Method fail:(Ljava/lang/Throwable;)Lscala/concurrent/Future;
       5: areturn

  public java.lang.Object attempt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: invokevirtual #1242               // Method attempt:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       8: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #1244               // Method ap:(Lscala/Function0;Lscala/Function0;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.Object gather(scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1246               // Method gather:(Lscalaz/IList;)Lscala/concurrent/Future;
       5: areturn

  public java.lang.Object both(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: checkcast     #1045               // class scala/concurrent/Future
       9: invokevirtual #1248               // Method both:(Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      12: areturn

  public java.lang.Object mapBoth(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: checkcast     #1045               // class scala/concurrent/Future
       9: aload_3
      10: invokevirtual #1250               // Method mapBoth:(Lscala/concurrent/Future;Lscala/concurrent/Future;Lscala/Function2;)Lscala/concurrent/Future;
      13: areturn

  public java.lang.Object chooseAny(java.lang.Object, scalaz.IList);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1253               // Method chooseAny:(Lscala/concurrent/Future;Lscalaz/IList;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: invokevirtual #1255               // Method cojoin:(Lscala/concurrent/Future;)Lscala/concurrent/Future;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1257               // Method cobind:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1259               // Method map:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1045               // class scala/concurrent/Future
       5: aload_2
       6: invokevirtual #1261               // Method bind:(Lscala/concurrent/Future;Lscala/Function1;)Lscala/concurrent/Future;
       9: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1263               // Method point:(Lscala/Function0;)Lscala/concurrent/Future;
       5: areturn

  public static final java.lang.Object $anonfun$cobind$1(scala.Function1, scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1269,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static final void attemptComplete$1(scala.util.Try, java.util.concurrent.atomic.AtomicInteger, scala.concurrent.Promise);
    Code:
       0: aload_1
       1: invokevirtual #1277               // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       4: istore_3
       5: aload_0
       6: instanceof    #1279               // class scala/util/Success
       9: ifeq          21
      12: aload_2
      13: aload_0
      14: invokeinterface #1283,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      19: pop
      20: return
      21: iload_3
      22: iconst_0
      23: if_icmpne     35
      26: aload_2
      27: aload_0
      28: invokeinterface #1283,  2         // InterfaceMethod scala/concurrent/Promise.tryComplete:(Lscala/util/Try;)Z
      33: pop
      34: return
      35: return

  public static final scala.Tuple2 $anonfun$chooseAny$3(int, java.lang.Object);
    Code:
       0: getstatic     #1292               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       3: getstatic     #1297               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_1
       7: invokevirtual #1300               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      10: iload_0
      11: invokestatic  #1306               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      14: invokevirtual #1310               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      17: areturn

  public static final void $anonfun$chooseAny$2(int, java.util.concurrent.atomic.AtomicInteger, scala.concurrent.Promise, scala.util.Try);
    Code:
       0: aload_3
       1: iload_0
       2: invokedynamic #1320,  0           // InvokeDynamic #4:apply:(I)Lscala/Function1;
       7: invokevirtual #1325               // Method scala/util/Try.map:(Lscala/Function1;)Lscala/util/Try;
      10: aload_1
      11: aload_2
      12: invokestatic  #1327               // Method attemptComplete$1:(Lscala/util/Try;Ljava/util/concurrent/atomic/AtomicInteger;Lscala/concurrent/Promise;)V
      15: return

  public static final void $anonfun$chooseAny$1(scalaz.std.FutureInstance, java.util.concurrent.atomic.AtomicInteger, scala.concurrent.Promise, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        40
       4: aload_3
       5: invokevirtual #1336               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #1045               // class scala/concurrent/Future
      11: astore        4
      13: aload_3
      14: invokevirtual #1339               // Method scala/Tuple2._2$mcI$sp:()I
      17: istore        5
      19: aload         4
      21: iload         5
      23: aload_1
      24: aload_2
      25: invokedynamic #1349,  0           // InvokeDynamic #5:apply:(ILjava/util/concurrent/atomic/AtomicInteger;Lscala/concurrent/Promise;)Lscala/Function1;
      30: aload_0
      31: getfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
      34: invokeinterface #1353,  3         // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      39: return
      40: new           #1355               // class scala/MatchError
      43: dup
      44: aload_3
      45: invokespecial #1358               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow

  public static final scala.Tuple2 $anonfun$chooseAny$4(scalaz.IList, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_1
       5: invokevirtual #1336               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #1339               // Method scala/Tuple2._2$mcI$sp:()I
      13: istore        4
      15: new           #1333               // class scala/Tuple2
      18: dup
      19: aload_3
      20: aload_0
      21: new           #75                 // class scalaz/std/FutureInstance$$anonfun$$nestedInanonfun$chooseAny$4$1
      24: dup
      25: aconst_null
      26: iload         4
      28: invokespecial #1365               // Method scalaz/std/FutureInstance$$anonfun$$nestedInanonfun$chooseAny$4$1."<init>":(Lscalaz/std/FutureInstance;I)V
      31: invokevirtual #1369               // Method scalaz/IList.collect:(Lscala/PartialFunction;)Lscalaz/IList;
      34: invokespecial #1372               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      37: astore_2
      38: goto          50
      41: new           #1355               // class scala/MatchError
      44: dup
      45: aload_1
      46: invokespecial #1358               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_2
      51: areturn

  public static final java.lang.Object $anonfun$ap$1(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        28
       4: aload_0
       5: invokevirtual #1336               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #1267               // class scala/Function1
      11: astore_2
      12: aload_0
      13: invokevirtual #1375               // Method scala/Tuple2._2:()Ljava/lang/Object;
      16: astore_3
      17: aload_2
      18: aload_3
      19: invokeinterface #1269,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_1
      25: goto          37
      28: new           #1355               // class scala/MatchError
      31: dup
      32: aload_0
      33: invokespecial #1358               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      36: athrow
      37: aload_1
      38: areturn

  public scalaz.std.FutureInstance(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1037               // Field ec:Lscala/concurrent/ExecutionContext;
       5: aload_0
       6: invokespecial #1379               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1383               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #1386               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #1389               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      21: aload_0
      22: invokestatic  #1392               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      25: aload_0
      26: invokestatic  #1395               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      29: aload_0
      30: invokestatic  #1398               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      33: aload_0
      34: invokestatic  #1401               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      37: aload_0
      38: invokestatic  #1404               // InterfaceMethod scalaz/Nondeterminism.$init$:(Lscalaz/Nondeterminism;)V
      41: aload_0
      42: invokestatic  #1407               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      45: aload_0
      46: invokestatic  #1410               // InterfaceMethod scalaz/ApplicativeError.$init$:(Lscalaz/ApplicativeError;)V
      49: aload_0
      50: invokestatic  #1413               // InterfaceMethod scalaz/MonadError.$init$:(Lscalaz/MonadError;)V
      53: aload_0
      54: invokestatic  #1416               // InterfaceMethod scalaz/Catchable.$init$:(Lscalaz/Catchable;)V
      57: return

  public static final java.lang.Object $anonfun$chooseAny$1$adapted(scalaz.std.FutureInstance, java.util.concurrent.atomic.AtomicInteger, scala.concurrent.Promise, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1418               // Method $anonfun$chooseAny$1:(Lscalaz/std/FutureInstance;Ljava/util/concurrent/atomic/AtomicInteger;Lscala/concurrent/Promise;Lscala/Tuple2;)V
       7: getstatic     #1424               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      10: areturn

  public static final java.lang.Object $anonfun$chooseAny$2$adapted(int, java.util.concurrent.atomic.AtomicInteger, scala.concurrent.Promise, scala.util.Try);
    Code:
       0: iload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1426               // Method $anonfun$chooseAny$2:(ILjava/util/concurrent/atomic/AtomicInteger;Lscala/concurrent/Promise;Lscala/util/Try;)V
       7: getstatic     #1424               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1438,  0           // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
