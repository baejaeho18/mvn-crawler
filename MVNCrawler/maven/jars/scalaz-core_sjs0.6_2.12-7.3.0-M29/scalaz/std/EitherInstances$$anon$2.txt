Compiled from "Either.scala"
public final class scalaz.std.EitherInstances$$anon$2 implements scalaz.Bitraverse<scala.util.Either> {
  private final scalaz.syntax.BitraverseSyntax<scala.util.Either> bitraverseSyntax;

  private final scalaz.syntax.BifoldableSyntax<scala.util.Either> bifoldableSyntax;

  private final scalaz.syntax.BifunctorSyntax<scala.util.Either> bifunctorSyntax;

  public <G> scalaz.Bitraverse<?> compose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // InterfaceMethod scalaz/Bitraverse.compose$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> product(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod scalaz/Bitraverse.product$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G, A, B, C, D> scala.Function1<scala.util.Either<A, B>, G> bitraverseF(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #57                 // InterfaceMethod scalaz/Bitraverse.bitraverseF$:(Lscalaz/Bitraverse;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       7: areturn

  public <X> scalaz.Traverse<?> leftTraverse();
    Code:
       0: aload_0
       1: invokestatic  #66                 // InterfaceMethod scalaz/Bitraverse.leftTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <X> scalaz.Traverse<?> rightTraverse();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/Bitraverse.rightTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public scalaz.Traverse<?> uTraverse();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Bitraverse.uTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <G> scalaz.Bitraverse<scala.util.Either>.Bitraversal<G> bitraversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // InterfaceMethod scalaz/Bitraverse.bitraversal$:(Lscalaz/Bitraverse;Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       5: areturn

  public <S> scalaz.Bitraverse<scala.util.Either>.Bitraversal<?> bitraversalS();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod scalaz/Bitraverse.bitraversalS$:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse$Bitraversal;
       4: areturn

  public java.lang.Object bitraverse(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #98                 // InterfaceMethod scalaz/Bitraverse.bitraverse$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT bitraverseS(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #105                // InterfaceMethod scalaz/Bitraverse.bitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public scala.Tuple2 runBitraverseS(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #112                // InterfaceMethod scalaz/Bitraverse.runBitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
       9: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #119                // InterfaceMethod scalaz/Bitraverse.traverseSTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public scalaz.Kleisli bitraverseKTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #126                // InterfaceMethod scalaz/Bitraverse.bitraverseKTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       9: areturn

  public scala.Tuple2 bifoldLShape(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #133                // InterfaceMethod scalaz/Bitraverse.bifoldLShape$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public java.lang.Object bisequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #142                // InterfaceMethod scalaz/Bitraverse.bisequence$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object bifoldLeft(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #148                // InterfaceMethod scalaz/Bitraverse.bifoldLeft$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object bifoldMap(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #155                // InterfaceMethod scalaz/Bitraverse.bifoldMap$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object bifoldRight(java.lang.Object, scala.Function0, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #162                // InterfaceMethod scalaz/Bitraverse.bifoldRight$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <G, H> scalaz.Bitraverse<?> embed(scalaz.Traverse<G>, scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #171                // InterfaceMethod scalaz/Bitraverse.embed$:(Lscalaz/Bitraverse;Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       6: areturn

  public <G> scalaz.Bitraverse<?> embedLeft(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // InterfaceMethod scalaz/Bitraverse.embedLeft$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <H> scalaz.Bitraverse<?> embedRight(scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod scalaz/Bitraverse.embedRight$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bifoldable<?> compose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // InterfaceMethod scalaz/Bifoldable.compose$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> product(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // InterfaceMethod scalaz/Bifoldable.product$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public scala.Option bifoldMap1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #198                // InterfaceMethod scalaz/Bifoldable.bifoldMap1$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       9: areturn

  public final java.lang.Object bifoldR(java.lang.Object, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #205                // InterfaceMethod scalaz/Bifoldable.bifoldR$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object bifoldL(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #211                // InterfaceMethod scalaz/Bifoldable.bifoldL$:(Lscalaz/Bifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <X> scalaz.Foldable<?> leftFoldable();
    Code:
       0: aload_0
       1: invokestatic  #218                // InterfaceMethod scalaz/Bifoldable.leftFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <X> scalaz.Foldable<?> rightFoldable();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod scalaz/Bifoldable.rightFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public scalaz.Foldable<?> uFoldable();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod scalaz/Bifoldable.uFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <G, H> scalaz.Bifoldable<?> embed(scalaz.Foldable<G>, scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #232                // InterfaceMethod scalaz/Bifoldable.embed$:(Lscalaz/Bifoldable;Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       6: areturn

  public <G> scalaz.Bifoldable<?> embedLeft(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/Bifoldable.embedLeft$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public <H> scalaz.Bifoldable<?> embedRight(scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // InterfaceMethod scalaz/Bifoldable.embedRight$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public scalaz.Bifoldable<scala.util.Either>.BifoldableLaw bifoldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #248                // InterfaceMethod scalaz/Bifoldable.bifoldableLaw$:(Lscalaz/Bifoldable;)Lscalaz/Bifoldable$BifoldableLaw;
       4: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #255                // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #265                // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #272                // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #276                // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #285                // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #290                // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BitraverseSyntax<scala.util.Either> bitraverseSyntax();
    Code:
       0: aload_0
       1: getfield      #314                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       4: areturn

  public void scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq(scalaz.syntax.BitraverseSyntax<scala.util.Either>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #314                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       5: return

  public scalaz.syntax.BifoldableSyntax<scala.util.Either> bifoldableSyntax();
    Code:
       0: aload_0
       1: getfield      #322                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       4: areturn

  public void scalaz$Bifoldable$_setter_$bifoldableSyntax_$eq(scalaz.syntax.BifoldableSyntax<scala.util.Either>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #322                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       5: return

  public scalaz.syntax.BifunctorSyntax<scala.util.Either> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #329                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<scala.util.Either>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #329                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public <A, B, C, D> scala.util.Either<C, D> bimap(scala.util.Either<A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_1
       1: instanceof    #337                // class scala/util/Left
       4: ifeq          38
       7: aload_1
       8: checkcast     #337                // class scala/util/Left
      11: invokevirtual #341                // Method scala/util/Left.value:()Ljava/lang/Object;
      14: astore        5
      16: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
      19: invokevirtual #351                // Method scala/package$.Left:()Lscala/util/Left$;
      22: aload_2
      23: aload         5
      25: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: invokevirtual #361                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      33: astore        4
      35: goto          85
      38: aload_1
      39: instanceof    #363                // class scala/util/Right
      42: ifeq          76
      45: aload_1
      46: checkcast     #363                // class scala/util/Right
      49: invokevirtual #364                // Method scala/util/Right.value:()Ljava/lang/Object;
      52: astore        6
      54: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
      57: invokevirtual #368                // Method scala/package$.Right:()Lscala/util/Right$;
      60: aload_3
      61: aload         6
      63: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      68: invokevirtual #373                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      71: astore        4
      73: goto          85
      76: new           #375                // class scala/MatchError
      79: dup
      80: aload_1
      81: invokespecial #379                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow
      85: aload         4
      87: areturn

  public <G, A, B, C, D> G bitraverseImpl(scala.util.Either<A, B>, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: instanceof    #337                // class scala/util/Left
       4: ifeq          49
       7: aload_1
       8: checkcast     #337                // class scala/util/Left
      11: invokevirtual #341                // Method scala/util/Left.value:()Ljava/lang/Object;
      14: astore        6
      16: getstatic     #393                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload         4
      26: aload_2
      27: aload         6
      29: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokedynamic #413,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      39: invokeinterface #418,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      44: astore        5
      46: goto          107
      49: aload_1
      50: instanceof    #363                // class scala/util/Right
      53: ifeq          98
      56: aload_1
      57: checkcast     #363                // class scala/util/Right
      60: invokevirtual #364                // Method scala/util/Right.value:()Ljava/lang/Object;
      63: astore        7
      65: getstatic     #393                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      68: ifnonnull     73
      71: aconst_null
      72: athrow
      73: aload         4
      75: aload_3
      76: aload         7
      78: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      83: invokedynamic #424,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      88: invokeinterface #418,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      93: astore        5
      95: goto          107
      98: new           #375                // class scala/MatchError
     101: dup
     102: aload_1
     103: invokespecial #379                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     106: athrow
     107: aload         5
     109: areturn

  public java.lang.Object bitraverseImpl(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #384                // class scala/util/Either
       4: astore        5
       6: aload         5
       8: instanceof    #337                // class scala/util/Left
      11: ifeq          57
      14: aload         5
      16: checkcast     #337                // class scala/util/Left
      19: invokevirtual #341                // Method scala/util/Left.value:()Ljava/lang/Object;
      22: astore        7
      24: getstatic     #393                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      27: ifnonnull     32
      30: aconst_null
      31: athrow
      32: aload         4
      34: aload_2
      35: aload         7
      37: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokedynamic #413,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      47: invokeinterface #418,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: astore        6
      54: goto          118
      57: aload         5
      59: instanceof    #363                // class scala/util/Right
      62: ifeq          108
      65: aload         5
      67: checkcast     #363                // class scala/util/Right
      70: invokevirtual #364                // Method scala/util/Right.value:()Ljava/lang/Object;
      73: astore        8
      75: getstatic     #393                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      78: ifnonnull     83
      81: aconst_null
      82: athrow
      83: aload         4
      85: aload_3
      86: aload         8
      88: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      93: invokedynamic #424,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      98: invokeinterface #418,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     103: astore        6
     105: goto          118
     108: new           #375                // class scala/MatchError
     111: dup
     112: aload         5
     114: invokespecial #379                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow
     118: aload         6
     120: areturn

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #384                // class scala/util/Either
       4: astore        4
       6: aload         4
       8: instanceof    #337                // class scala/util/Left
      11: ifeq          46
      14: aload         4
      16: checkcast     #337                // class scala/util/Left
      19: invokevirtual #341                // Method scala/util/Left.value:()Ljava/lang/Object;
      22: astore        6
      24: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
      27: invokevirtual #351                // Method scala/package$.Left:()Lscala/util/Left$;
      30: aload_2
      31: aload         6
      33: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: invokevirtual #361                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      41: astore        5
      43: goto          96
      46: aload         4
      48: instanceof    #363                // class scala/util/Right
      51: ifeq          86
      54: aload         4
      56: checkcast     #363                // class scala/util/Right
      59: invokevirtual #364                // Method scala/util/Right.value:()Ljava/lang/Object;
      62: astore        7
      64: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
      67: invokevirtual #368                // Method scala/package$.Right:()Lscala/util/Right$;
      70: aload_3
      71: aload         7
      73: invokeinterface #356,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      78: invokevirtual #373                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      81: astore        5
      83: goto          96
      86: new           #375                // class scala/MatchError
      89: dup
      90: aload         4
      92: invokespecial #379                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      95: athrow
      96: aload         5
      98: areturn

  public static final scala.util.Left $anonfun$bitraverseImpl$1(java.lang.Object);
    Code:
       0: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #351                // Method scala/package$.Left:()Lscala/util/Left$;
       6: aload_0
       7: invokevirtual #361                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      10: areturn

  public static final scala.util.Right $anonfun$bitraverseImpl$2(java.lang.Object);
    Code:
       0: getstatic     #347                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #368                // Method scala/package$.Right:()Lscala/util/Right$;
       6: aload_0
       7: invokevirtual #373                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      10: areturn

  public scalaz.std.EitherInstances$$anon$2(scalaz.std.EitherInstances);
    Code:
       0: aload_0
       1: invokespecial #437                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #441                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
       8: aload_0
       9: invokestatic  #444                // InterfaceMethod scalaz/Bifoldable.$init$:(Lscalaz/Bifoldable;)V
      12: aload_0
      13: invokestatic  #447                // InterfaceMethod scalaz/Bitraverse.$init$:(Lscalaz/Bitraverse;)V
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #460,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
