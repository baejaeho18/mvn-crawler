Compiled from "SortedMap.scala"
public final class scalaz.std.SortedMapInstances$$anon$4 implements scalaz.Traverse<?>, scalaz.IsEmpty<?>, scalaz.Bind<?>, scalaz.std.SortedMapInstances0$SortedMapFoldable<K>, scalaz.Align<?> {
  private final scalaz.syntax.AlignSyntax<?> alignSyntax;

  private final scalaz.syntax.BindSyntax<?> bindSyntax;

  private final scalaz.syntax.ApplySyntax<?> applySyntax;

  private final scalaz.syntax.IsEmptySyntax<?> isEmptySyntax;

  private final scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.syntax.TraverseSyntax<?> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.std.SortedMapInstances $outer;

  private final scala.math.Ordering evidence$3$1;

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #173                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #183                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #187                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #195                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #199                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #203                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<?>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #210                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public <A, B> B foldLeft(scala.collection.immutable.SortedMap<K, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #219                // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapFoldable.foldLeft$:(Lscalaz/std/SortedMapInstances0$SortedMapFoldable;Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A, B> B foldRight(scala.collection.immutable.SortedMap<K, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #227                // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapFoldable.foldRight$:(Lscalaz/std/SortedMapInstances0$SortedMapFoldable;Lscala/collection/immutable/SortedMap;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public final <A> boolean all(scala.collection.immutable.SortedMap<K, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #235                // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapFoldable.all$:(Lscalaz/std/SortedMapInstances0$SortedMapFoldable;Lscala/collection/immutable/SortedMap;Lscala/Function1;)Z
       6: ireturn

  public final <A> boolean any(scala.collection.immutable.SortedMap<K, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapFoldable.any$:(Lscalaz/std/SortedMapInstances0$SortedMapFoldable;Lscala/collection/immutable/SortedMap;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #247                // InterfaceMethod scalaz/Foldable$FromFoldr.foldMap$:(Lscalaz/Foldable$FromFoldr;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #254                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #261                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #268                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #277                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<?>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #296                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #303                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #312                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #317                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scala.collection.immutable.SortedMap<K, B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.SortedMap<K, A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #326                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #334                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #337                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public scalaz.Apply<?> flip();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod scalaz/Apply.flip$:(Lscalaz/Apply;)Lscalaz/Apply;
       4: areturn

  public <A, B> scala.Function1<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>> apF(scala.Function0<scala.collection.immutable.SortedMap<K, scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #356                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #363                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #370                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #377                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #384                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #391                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #398                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #404                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #411                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #418                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #425                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #432                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #439                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #447                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #455                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #463                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #471                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #478                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #484                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #491                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #498                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #509                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #515                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #521                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #527                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #534                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #541                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #548                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #555                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #562                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, H>, scala.collection.immutable.SortedMap<K, R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #569                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, H>, scala.collection.immutable.SortedMap<K, I>, scala.collection.immutable.SortedMap<K, R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #576                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, H>, scala.collection.immutable.SortedMap<K, I>, scala.collection.immutable.SortedMap<K, J>, scala.collection.immutable.SortedMap<K, R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #583                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, H>, scala.collection.immutable.SortedMap<K, I>, scala.collection.immutable.SortedMap<K, J>, scala.collection.immutable.SortedMap<K, K>, scala.collection.immutable.SortedMap<K, R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>, scala.collection.immutable.SortedMap<K, D>, scala.collection.immutable.SortedMap<K, E>, scala.collection.immutable.SortedMap<K, FF>, scala.collection.immutable.SortedMap<K, G>, scala.collection.immutable.SortedMap<K, H>, scala.collection.immutable.SortedMap<K, I>, scala.collection.immutable.SortedMap<K, J>, scala.collection.immutable.SortedMap<K, K>, scala.collection.immutable.SortedMap<K, L>, scala.collection.immutable.SortedMap<K, R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #597                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #601                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #612                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #620                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<?>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #627                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public scalaz.IsEmpty<?>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #634                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #639                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #643                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #648                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #652                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.SortedMap<K, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #660                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #667                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.SortedMap<K, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.collection.immutable.SortedMap<K, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #674                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.SortedMap<K, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.SortedMap<K, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #679                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #684                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.SortedMap<K, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #692                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #699                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #704                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #713                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #716                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #723                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<?>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<?>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #739                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #746                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #752                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #759                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #765                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #772                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #779                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #786                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #794                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #800                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #807                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #814                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #820                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #825                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #829                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #835                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #839                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #843                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #848                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #852                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #856                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #860                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<?>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #867                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #873                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #878                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #884                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #887                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #892                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #900                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #907                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #914                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #921                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #927                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #932                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #937                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #942                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #952                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #958                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #964                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #970                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #976                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #982                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #988                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #992                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #996                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1000               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1006               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1010               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1016               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1020               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1024               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1030               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1034               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1041               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1049               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1055               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1061               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1067               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1073               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1079               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1085               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1090               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1094               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1100               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1106               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1113               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1117               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1122               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1127               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1132               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1137               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1142               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1147               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1152               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1156               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1160               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1164               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1170               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1176               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1180               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1184               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1189               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1196               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1203               // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1210               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1217               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1223               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1230               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1236               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1240               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1246               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1252               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1257               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1264               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1272               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1279               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1284               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1291               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1296               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1300               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1304               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1309               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1313               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1317               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1323               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1329               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1337               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1343               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1346               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1353               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1360               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1368               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1376               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.AlignSyntax<?> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1380               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1380               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.BindSyntax<?> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1388               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1388               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<?> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1395               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1395               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<?> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1402               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1402               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1409               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1409               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1416               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1416               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<?> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1423               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1423               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1430               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1430               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1437               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1437               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1444               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1444               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <V> scala.collection.immutable.SortedMap<K, V> empty();
    Code:
       0: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
       3: aload_0
       4: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
       7: invokevirtual #1460               // Method scala/collection/immutable/SortedMap$.empty:(Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
      10: areturn

  public <V> scala.collection.immutable.SortedMap<K, V> plus(scala.collection.immutable.SortedMap<K, V>, scala.Function0<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1468,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #1470               // class scala/collection/GenTraversableOnce
      10: invokeinterface #1476,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/SortedMap;
      15: areturn

  public <V> boolean isEmpty(scala.collection.immutable.SortedMap<K, V>);
    Code:
       0: aload_1
       1: invokeinterface #1482,  1         // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
       6: ireturn

  public <A, B> scala.collection.immutable.SortedMap<K, B> bind(scala.collection.immutable.SortedMap<K, A>, scala.Function1<A, scala.collection.immutable.SortedMap<K, B>>);
    Code:
       0: aload_1
       1: new           #100                // class scalaz/std/SortedMapInstances$$anon$4$$anonfun$bind$1
       4: dup
       5: aconst_null
       6: aload_2
       7: invokespecial #1489               // Method scalaz/std/SortedMapInstances$$anon$4$$anonfun$bind$1."<init>":(Lscalaz/std/SortedMapInstances$$anon$4;Lscala/Function1;)V
      10: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      13: aload_0
      14: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      17: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      20: invokeinterface #1497,  3         // InterfaceMethod scala/collection/immutable/SortedMap.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      25: checkcast     #1472               // class scala/collection/immutable/SortedMap
      28: areturn

  public <A, B> scala.collection.immutable.SortedMap<K, B> map(scala.collection.immutable.SortedMap<K, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
       7: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      10: aload_0
      11: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      14: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      17: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      22: checkcast     #1472               // class scala/collection/immutable/SortedMap
      25: areturn

  public <A, B> scala.collection.immutable.SortedMap<K, B> widen(scala.collection.immutable.SortedMap<K, A>, scalaz.Liskov<A, B>);
    Code:
       0: getstatic     #1532               // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
       3: aload_2
       4: invokevirtual #1536               // Method scalaz/Liskov$.co:(Lscalaz/Liskov;)Lscalaz/Liskov;
       7: aload_1
       8: invokevirtual #1540               // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #1472               // class scala/collection/immutable/SortedMap
      14: areturn

  public <G, A, B> G traverseImpl(scala.collection.immutable.SortedMap<K, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: getstatic     #1550               // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
       4: invokevirtual #1554               // Method scalaz/std/list$.listInstance:()Lscalaz/Traverse;
       7: aload_1
       8: invokeinterface #1557,  1         // InterfaceMethod scala/collection/immutable/SortedMap.toList:()Lscala/collection/immutable/List;
      13: aload_3
      14: aload_2
      15: invokedynamic #1567,  0           // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      20: aload_3
      21: invokeinterface #1569,  4         // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      26: aload_0
      27: invokedynamic #1579,  0           // InvokeDynamic #2:apply:(Lscalaz/std/SortedMapInstances$$anon$4;)Lscala/Function1;
      32: invokeinterface #1583,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      37: areturn

  public <A, B, C> scala.Function2<scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.collection.immutable.SortedMap<K, C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1597,  0           // InvokeDynamic #3:apply:(Lscalaz/std/SortedMapInstances$$anon$4;Lscala/Function1;)Lscala/Function2;
       7: areturn

  public <A, B> scala.collection.immutable.SortedMap<K, scalaz.$bslash$amp$div<A, B>> align(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>);
    Code:
       0: aload_1
       1: astore        4
       3: aload_2
       4: invokeinterface #1482,  1         // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
       9: ifeq          50
      12: invokedynamic #1608,  0           // InvokeDynamic #4:apply:()Lscala/Function1;
      17: astore        9
      19: aload         4
      21: aload         9
      23: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      28: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      31: aload_0
      32: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      35: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      38: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      43: checkcast     #1472               // class scala/collection/immutable/SortedMap
      46: astore_3
      47: goto          267
      50: aload_1
      51: astore        5
      53: aload_2
      54: astore        6
      56: aload         5
      58: invokeinterface #1482,  1         // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
      63: ifeq          104
      66: invokedynamic #1615,  0           // InvokeDynamic #5:apply:()Lscala/Function1;
      71: astore        10
      73: aload         6
      75: aload         10
      77: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      82: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      85: aload_0
      86: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      89: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      92: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      97: checkcast     #1472               // class scala/collection/immutable/SortedMap
     100: astore_3
     101: goto          267
     104: aload_1
     105: astore        7
     107: aload_2
     108: astore        8
     110: aload_0
     111: getfield      #1617               // Field $outer:Lscalaz/std/SortedMapInstances;
     114: invokedynamic #1624,  0           // InvokeDynamic #6:apply:()Lscala/Function1;
     119: astore        11
     121: aload         7
     123: aload         11
     125: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
     130: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     133: aload_0
     134: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     137: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     140: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     145: checkcast     #1472               // class scala/collection/immutable/SortedMap
     148: astore        12
     150: invokedynamic #1629,  0           // InvokeDynamic #7:apply:()Lscala/Function1;
     155: astore        13
     157: aload         8
     159: aload         13
     161: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
     166: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     169: aload_0
     170: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     173: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     176: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     181: checkcast     #1472               // class scala/collection/immutable/SortedMap
     184: astore        14
     186: invokedynamic #1637,  0           // InvokeDynamic #8:apply:()Lscala/Function2;
     191: aload_0
     192: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     195: astore        16
     197: astore        15
     199: ifnonnull     204
     202: aconst_null
     203: athrow
     204: aload         15
     206: invokedynamic #1650,  0           // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function3;
     211: astore        17
     213: aload         14
     215: aload         12
     217: invokeinterface #1654,  1         // InterfaceMethod scala/collection/immutable/SortedMap.keySet:()Lscala/collection/immutable/SortedSet;
     222: invokeinterface #1658,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
     227: checkcast     #1472               // class scala/collection/immutable/SortedMap
     230: astore        18
     232: aload         12
     234: aload         14
     236: aload         17
     238: invokedynamic #1666,  0           // InvokeDynamic #10:apply:(Lscala/collection/immutable/SortedMap;Lscala/Function3;)Lscala/Function1;
     243: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     246: aload         16
     248: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     251: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     256: checkcast     #1472               // class scala/collection/immutable/SortedMap
     259: aload         18
     261: invokeinterface #1476,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/SortedMap;
     266: astore_3
     267: aload_3
     268: areturn

  public scalaz.std.SortedMapInstances0 scalaz$std$SortedMapInstances0$SortedMapFoldable$$$outer();
    Code:
       0: aload_0
       1: getfield      #1617               // Field $outer:Lscalaz/std/SortedMapInstances;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #1682               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public final boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: invokeinterface #1687,  1         // InterfaceMethod scala/collection/immutable/SortedMap.valuesIterator:()Lscala/collection/Iterator;
       9: aload_2
      10: invokeinterface #1693,  2         // InterfaceMethod scala/collection/Iterator.exists:(Lscala/Function1;)Z
      15: ireturn

  public final boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: invokeinterface #1687,  1         // InterfaceMethod scala/collection/immutable/SortedMap.valuesIterator:()Lscala/collection/Iterator;
       9: aload_2
      10: invokeinterface #1696,  2         // InterfaceMethod scala/collection/Iterator.forall:(Lscala/Function1;)Z
      15: ireturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: aload_2
       5: invokeinterface #1468,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: aload_3
      11: invokedynamic #1706,  0           // InvokeDynamic #11:apply:(Lscala/Function2;)Lscala/Function2;
      16: invokeinterface #1709,  3         // InterfaceMethod scala/collection/immutable/SortedMap.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: invokeinterface #1687,  1         // InterfaceMethod scala/collection/immutable/SortedMap.valuesIterator:()Lscala/collection/Iterator;
       9: aload_2
      10: aload_3
      11: invokeinterface #1711,  3         // InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      16: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1472               // class scala/collection/immutable/SortedMap
       5: aload_2
       6: checkcast     #1472               // class scala/collection/immutable/SortedMap
       9: invokevirtual #1713               // Method align:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;)Lscala/collection/immutable/SortedMap;
      12: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: astore        4
       6: aload_3
       7: getstatic     #1550               // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
      10: invokevirtual #1554               // Method scalaz/std/list$.listInstance:()Lscalaz/Traverse;
      13: aload         4
      15: invokeinterface #1557,  1         // InterfaceMethod scala/collection/immutable/SortedMap.toList:()Lscala/collection/immutable/List;
      20: aload_3
      21: aload_2
      22: invokedynamic #1567,  0           // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      27: aload_3
      28: invokeinterface #1569,  4         // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      33: aload_0
      34: invokedynamic #1579,  0           // InvokeDynamic #2:apply:(Lscalaz/std/SortedMapInstances$$anon$4;)Lscala/Function1;
      39: invokeinterface #1583,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      44: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1472               // class scala/collection/immutable/SortedMap
       5: aload_2
       6: invokevirtual #1717               // Method widen:(Lscala/collection/immutable/SortedMap;Lscalaz/Liskov;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: aload_2
       5: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      10: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      13: aload_0
      14: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      17: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      20: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      25: checkcast     #1472               // class scala/collection/immutable/SortedMap
      28: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: new           #100                // class scalaz/std/SortedMapInstances$$anon$4$$anonfun$bind$1
       7: dup
       8: aconst_null
       9: aload_2
      10: invokespecial #1489               // Method scalaz/std/SortedMapInstances$$anon$4$$anonfun$bind$1."<init>":(Lscalaz/std/SortedMapInstances$$anon$4;Lscala/Function1;)V
      13: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      16: aload_0
      17: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      20: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      23: invokeinterface #1497,  3         // InterfaceMethod scala/collection/immutable/SortedMap.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      28: checkcast     #1472               // class scala/collection/immutable/SortedMap
      31: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1472               // class scala/collection/immutable/SortedMap
       5: invokevirtual #1719               // Method isEmpty:(Lscala/collection/immutable/SortedMap;)Z
       8: ireturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #1472               // class scala/collection/immutable/SortedMap
       4: aload_2
       5: invokeinterface #1468,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #1470               // class scala/collection/GenTraversableOnce
      13: invokeinterface #1476,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/SortedMap;
      18: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #1722               // Method empty:()Lscala/collection/immutable/SortedMap;
       4: areturn

  public static final scala.Tuple2 $anonfun$map$1(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: invokevirtual #1729               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #1732               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1726               // class scala/Tuple2
      18: dup
      19: aload_3
      20: aload_0
      21: aload         4
      23: invokeinterface #1733,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokespecial #1736               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore_2
      32: goto          44
      35: new           #1738               // class scala/MatchError
      38: dup
      39: aload_1
      40: invokespecial #1741               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: aload_2
      45: areturn

  public static final scala.Tuple2 $anonfun$traverseImpl$2(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #1751               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       3: getstatic     #1756               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokevirtual #1759               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      10: aload_1
      11: invokevirtual #1762               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      14: areturn

  public static final java.lang.Object $anonfun$traverseImpl$1(scalaz.Applicative, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        41
       4: aload_2
       5: invokevirtual #1729               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #1732               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: aload_0
      17: aload_1
      18: aload         5
      20: invokeinterface #1733,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload         4
      27: invokedynamic #1772,  0           // InvokeDynamic #12:apply:(Ljava/lang/Object;)Lscala/Function1;
      32: invokeinterface #1583,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      37: astore_3
      38: goto          50
      41: new           #1738               // class scala/MatchError
      44: dup
      45: aload_2
      46: invokespecial #1741               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_3
      51: areturn

  public static final scala.collection.immutable.SortedMap $anonfun$traverseImpl$3(scalaz.std.SortedMapInstances$$anon$4, scala.collection.immutable.List);
    Code:
       0: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
       3: aload_1
       4: aload_0
       5: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
       8: invokevirtual #1777               // Method scala/collection/immutable/SortedMap$.apply:(Lscala/collection/Seq;Lscala/math/Ordering;)Lscala/collection/SortedMap;
      11: checkcast     #1472               // class scala/collection/immutable/SortedMap
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #44                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #1781               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #1733,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #41                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #1783               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #1733,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final scalaz.$bslash$amp$div $anonfun$alignWith$4(java.lang.Object);
    Code:
       0: new           #44                 // class scalaz/$bslash$amp$div$This
       3: dup
       4: aload_0
       5: invokespecial #1781               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div $anonfun$alignWith$5(java.lang.Object);
    Code:
       0: new           #41                 // class scalaz/$bslash$amp$div$That
       3: dup
       4: aload_0
       5: invokespecial #1783               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div $anonfun$alignWith$6(scalaz.$bslash$amp$div, scalaz.$bslash$amp$div);
    Code:
       0: aload_0
       1: astore_3
       2: aload_1
       3: astore        4
       5: aload_3
       6: instanceof    #44                 // class scalaz/$bslash$amp$div$This
       9: ifeq          54
      12: aload_3
      13: checkcast     #44                 // class scalaz/$bslash$amp$div$This
      16: invokevirtual #1793               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      19: astore        5
      21: aload         4
      23: instanceof    #41                 // class scalaz/$bslash$amp$div$That
      26: ifeq          54
      29: aload         4
      31: checkcast     #41                 // class scalaz/$bslash$amp$div$That
      34: invokevirtual #1796               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      37: astore        6
      39: new           #36                 // class scalaz/$bslash$amp$div$Both
      42: dup
      43: aload         5
      45: aload         6
      47: invokespecial #1797               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore_2
      51: goto          64
      54: getstatic     #1802               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
      57: ldc_w         #1804               // String SortedMap alignWith
      60: invokevirtual #1808               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
      63: athrow
      64: aload_2
      65: areturn

  public static final scala.collection.immutable.SortedMap $anonfun$alignWith$1(scalaz.std.SortedMapInstances$$anon$4, scala.Function1, scala.collection.immutable.SortedMap, scala.collection.immutable.SortedMap);
    Code:
       0: aload_2
       1: astore        5
       3: aload_3
       4: invokeinterface #1482,  1         // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
       9: ifeq          52
      12: aload_1
      13: invokedynamic #1814,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
      18: astore        10
      20: aload         5
      22: aload         10
      24: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      29: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      32: aload_0
      33: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      36: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      39: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      44: checkcast     #1472               // class scala/collection/immutable/SortedMap
      47: astore        4
      49: goto          296
      52: aload_2
      53: astore        6
      55: aload_3
      56: astore        7
      58: aload         6
      60: invokeinterface #1482,  1         // InterfaceMethod scala/collection/immutable/SortedMap.isEmpty:()Z
      65: ifeq          108
      68: aload_1
      69: invokedynamic #1818,  0           // InvokeDynamic #14:apply:(Lscala/Function1;)Lscala/Function1;
      74: astore        11
      76: aload         7
      78: aload         11
      80: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      85: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
      88: aload_0
      89: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      92: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
      95: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     100: checkcast     #1472               // class scala/collection/immutable/SortedMap
     103: astore        4
     105: goto          296
     108: aload_2
     109: astore        8
     111: aload_3
     112: astore        9
     114: aload_0
     115: getfield      #1617               // Field $outer:Lscalaz/std/SortedMapInstances;
     118: invokedynamic #1822,  0           // InvokeDynamic #15:apply:()Lscala/Function1;
     123: astore        12
     125: aload         8
     127: aload         12
     129: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
     134: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     137: aload_0
     138: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     141: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     144: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     149: checkcast     #1472               // class scala/collection/immutable/SortedMap
     152: astore        13
     154: invokedynamic #1826,  0           // InvokeDynamic #16:apply:()Lscala/Function1;
     159: astore        14
     161: aload         9
     163: aload         14
     165: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
     170: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     173: aload_0
     174: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     177: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     180: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     185: checkcast     #1472               // class scala/collection/immutable/SortedMap
     188: astore        15
     190: invokedynamic #1830,  0           // InvokeDynamic #17:apply:()Lscala/Function2;
     195: aload_0
     196: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     199: astore        17
     201: astore        16
     203: ifnonnull     208
     206: aconst_null
     207: athrow
     208: aload         16
     210: invokedynamic #1650,  0           // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function3;
     215: astore        18
     217: aload         15
     219: aload         13
     221: invokeinterface #1654,  1         // InterfaceMethod scala/collection/immutable/SortedMap.keySet:()Lscala/collection/immutable/SortedSet;
     226: invokeinterface #1658,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$minus$minus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;
     231: checkcast     #1472               // class scala/collection/immutable/SortedMap
     234: astore        19
     236: aload         13
     238: aload         15
     240: aload         18
     242: invokedynamic #1666,  0           // InvokeDynamic #10:apply:(Lscala/collection/immutable/SortedMap;Lscala/Function3;)Lscala/Function1;
     247: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     250: aload         17
     252: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     255: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     260: checkcast     #1472               // class scala/collection/immutable/SortedMap
     263: aload         19
     265: invokeinterface #1476,  2         // InterfaceMethod scala/collection/immutable/SortedMap.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/SortedMap;
     270: aload_1
     271: invokedynamic #1520,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
     276: getstatic     #1455               // Field scala/collection/immutable/SortedMap$.MODULE$:Lscala/collection/immutable/SortedMap$;
     279: aload_0
     280: getfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
     283: invokevirtual #1493               // Method scala/collection/immutable/SortedMap$.canBuildFrom:(Lscala/math/Ordering;)Lscala/collection/generic/CanBuildFrom;
     286: invokeinterface #1523,  3         // InterfaceMethod scala/collection/immutable/SortedMap.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     291: checkcast     #1472               // class scala/collection/immutable/SortedMap
     294: astore        4
     296: aload         4
     298: areturn

  public static final scalaz.$bslash$amp$div$This $anonfun$align$1(java.lang.Object);
    Code:
       0: new           #44                 // class scalaz/$bslash$amp$div$This
       3: dup
       4: aload_0
       5: invokespecial #1781               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div$That $anonfun$align$2(java.lang.Object);
    Code:
       0: new           #41                 // class scalaz/$bslash$amp$div$That
       3: dup
       4: aload_0
       5: invokespecial #1783               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div $anonfun$align$3(java.lang.Object);
    Code:
       0: new           #44                 // class scalaz/$bslash$amp$div$This
       3: dup
       4: aload_0
       5: invokespecial #1781               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div $anonfun$align$4(java.lang.Object);
    Code:
       0: new           #41                 // class scalaz/$bslash$amp$div$That
       3: dup
       4: aload_0
       5: invokespecial #1783               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.$bslash$amp$div $anonfun$align$5(scalaz.$bslash$amp$div, scalaz.$bslash$amp$div);
    Code:
       0: aload_0
       1: astore_3
       2: aload_1
       3: astore        4
       5: aload_3
       6: instanceof    #44                 // class scalaz/$bslash$amp$div$This
       9: ifeq          54
      12: aload_3
      13: checkcast     #44                 // class scalaz/$bslash$amp$div$This
      16: invokevirtual #1793               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      19: astore        5
      21: aload         4
      23: instanceof    #41                 // class scalaz/$bslash$amp$div$That
      26: ifeq          54
      29: aload         4
      31: checkcast     #41                 // class scalaz/$bslash$amp$div$That
      34: invokevirtual #1796               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      37: astore        6
      39: new           #36                 // class scalaz/$bslash$amp$div$Both
      42: dup
      43: aload         5
      45: aload         6
      47: invokespecial #1797               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore_2
      51: goto          64
      54: getstatic     #1802               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
      57: ldc_w         #1836               // String SortedMap align
      60: invokevirtual #1808               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
      63: athrow
      64: aload_2
      65: areturn

  public scalaz.std.SortedMapInstances$$anon$4(scalaz.std.SortedMapInstances, scala.math.Ordering);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #1617               // Field $outer:Lscalaz/std/SortedMapInstances;
      11: aload_0
      12: aload_2
      13: putfield      #1457               // Field evidence$3$1:Lscala/math/Ordering;
      16: aload_0
      17: invokespecial #1840               // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #1844               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      24: aload_0
      25: invokestatic  #1847               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      28: aload_0
      29: invokestatic  #1850               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      32: aload_0
      33: invokestatic  #1853               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      36: aload_0
      37: invokestatic  #1856               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      40: aload_0
      41: invokestatic  #1859               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      44: aload_0
      45: invokestatic  #1862               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      48: aload_0
      49: invokestatic  #1865               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      52: aload_0
      53: invokestatic  #1868               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      56: aload_0
      57: invokestatic  #1871               // InterfaceMethod scalaz/Foldable$FromFoldr.$init$:(Lscalaz/Foldable$FromFoldr;)V
      60: aload_0
      61: invokestatic  #1874               // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapFoldable.$init$:(Lscalaz/std/SortedMapInstances0$SortedMapFoldable;)V
      64: aload_0
      65: invokestatic  #1877               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      68: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1889,  0           // InvokeDynamic #18:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
