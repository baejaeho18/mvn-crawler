Compiled from "Set.scala"
public final class scalaz.std.SetInstances$$anon$1 implements scalaz.IsEmpty<scala.collection.immutable.Set>, scalaz.Foldable$FromFoldr<scala.collection.immutable.Set>, scalaz.std.IterableSubtypeFoldable<scala.collection.immutable.Set> {
  private final scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Set> isEmptySyntax;

  private final scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Set> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scala.collection.immutable.Set> plusSyntax;

  private final scalaz.syntax.FoldableSyntax<scala.collection.immutable.Set> foldableSyntax;

  public java.lang.Object foldMap(scala.collection.Iterable, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #64                 // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldMap$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft(scala.collection.Iterable, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #76                 // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public final scala.collection.immutable.List toList(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toList$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       5: areturn

  public final scala.collection.immutable.Vector toVector(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toVector$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       5: areturn

  public final scala.collection.immutable.Set toSet(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toSet$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       5: areturn

  public final scala.collection.immutable.Stream toStream(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.toStream$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       5: areturn

  public final boolean empty(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.empty$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;)Z
       5: ireturn

  public final boolean any(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.any$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public final boolean all(scala.collection.Iterable, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.all$:(Lscalaz/std/IterableSubtypeFoldable;Lscala/collection/Iterable;Lscala/Function1;)Z
       6: ireturn

  public scalaz.IsEmpty<scala.collection.immutable.Set>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #133                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Set<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scala.collection.immutable.Set>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.Set<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.collection.immutable.Set<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #173                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scala.collection.immutable.Set<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.collection.immutable.Set<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #178                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.collection.immutable.Set<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scala.collection.immutable.Set>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #198                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #204                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #219                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #238                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #246                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #254                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #262                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #269                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #276                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #283                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #290                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #316                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #322                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #334                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #340                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #344                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #348                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #358                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #362                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #369                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #373                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #383                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #390                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #398                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #410                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #414                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #418                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #424                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #431                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #439                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #444                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #449                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #454                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #459                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #464                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #469                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #474                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #479                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #483                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #487                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #497                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #507                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #511                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #517                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #524                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #532                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #539                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #545                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #552                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #559                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #563                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #569                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #575                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #580                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #587                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scala.collection.immutable.Set>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #595                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Set> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #599                // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scala.collection.immutable.Set>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #599                // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Set> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #607                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scala.collection.immutable.Set>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #607                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scala.collection.immutable.Set> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #614                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scala.collection.immutable.Set>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #614                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scala.collection.immutable.Set> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #621                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scala.collection.immutable.Set>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #621                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public <A> int length(scala.collection.immutable.Set<A>);
    Code:
       0: aload_1
       1: invokeinterface #633,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
       6: ireturn

  public <A> scala.collection.immutable.Set<A> empty();
    Code:
       0: getstatic     #642                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #646                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       6: getstatic     #651                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #657                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      12: checkcast     #629                // class scala/collection/immutable/Set
      15: areturn

  public <A> scala.collection.immutable.Set<A> plus(scala.collection.immutable.Set<A>, scala.Function0<scala.collection.immutable.Set<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #665,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #667                // class scala/collection/GenTraversableOnce
      10: invokeinterface #671,  2          // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/Set;
      15: checkcast     #629                // class scala/collection/immutable/Set
      18: areturn

  public <A> boolean isEmpty(scala.collection.immutable.Set<A>);
    Code:
       0: aload_1
       1: invokeinterface #677,  1          // InterfaceMethod scala/collection/immutable/Set.isEmpty:()Z
       6: ireturn

  public <A, B> B foldRight(scala.collection.immutable.Set<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: new           #682                // class scala/collection/mutable/ArrayStack
       3: dup
       4: invokespecial #686                // Method scala/collection/mutable/ArrayStack."<init>":()V
       7: astore        4
       9: aload_1
      10: aload         4
      12: invokedynamic #707,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      17: invokeinterface #711,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      22: aload_2
      23: invokeinterface #665,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: astore        5
      30: aload         4
      32: invokevirtual #712                // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      35: ifne          61
      38: aload_3
      39: aload         4
      41: invokevirtual #715                // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      44: aload         5
      46: invokedynamic #723,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      51: invokeinterface #728,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: astore        5
      58: goto          30
      61: aload         5
      63: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #733                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public final boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #736                // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #740,  2          // InterfaceMethod scala/collection/Iterable.forall:(Lscala/Function1;)Z
      10: ireturn

  public final boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #736                // class scala/collection/Iterable
       4: aload_2
       5: invokeinterface #743,  2          // InterfaceMethod scala/collection/Iterable.exists:(Lscala/Function1;)Z
      10: ireturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #736                // class scala/collection/Iterable
       5: invokevirtual #746                // Method empty:(Lscala/collection/Iterable;)Z
       8: ireturn

  public final scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #736                // class scala/collection/Iterable
       5: invokevirtual #749                // Method toStream:(Lscala/collection/Iterable;)Lscala/collection/immutable/Stream;
       8: areturn

  public final scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #736                // class scala/collection/Iterable
       5: invokevirtual #752                // Method toSet:(Lscala/collection/Iterable;)Lscala/collection/immutable/Set;
       8: areturn

  public final scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #736                // class scala/collection/Iterable
       5: invokevirtual #755                // Method toVector:(Lscala/collection/Iterable;)Lscala/collection/immutable/Vector;
       8: areturn

  public final scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #736                // class scala/collection/Iterable
       5: invokevirtual #758                // Method toList:(Lscala/collection/Iterable;)Lscala/collection/immutable/List;
       8: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #736                // class scala/collection/Iterable
       4: aload_2
       5: aload_3
       6: invokeinterface #762,  3          // InterfaceMethod scala/collection/Iterable.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #736                // class scala/collection/Iterable
       4: astore        4
       6: aload_0
       7: aload         4
       9: aload_3
      10: invokeinterface #768,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      15: aload_3
      16: aload_2
      17: invokedynamic #777,  0            // InvokeDynamic #2:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      22: invokeinterface #779,  4          // InterfaceMethod scalaz/std/IterableSubtypeFoldable.foldLeft:(Lscala/collection/Iterable;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #629                // class scala/collection/immutable/Set
       4: astore        4
       6: new           #682                // class scala/collection/mutable/ArrayStack
       9: dup
      10: invokespecial #686                // Method scala/collection/mutable/ArrayStack."<init>":()V
      13: astore        5
      15: aload         4
      17: aload         5
      19: invokedynamic #707,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      24: invokeinterface #711,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      29: aload_2
      30: invokeinterface #665,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      35: astore        6
      37: aload         5
      39: invokevirtual #712                // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      42: ifne          68
      45: aload_3
      46: aload         5
      48: invokevirtual #715                // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      51: aload         6
      53: invokedynamic #723,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      58: invokeinterface #728,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore        6
      65: goto          37
      68: aload         6
      70: areturn

  public java.lang.Object foldRight(scala.collection.Iterable, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #629                // class scala/collection/immutable/Set
       4: astore        4
       6: new           #682                // class scala/collection/mutable/ArrayStack
       9: dup
      10: invokespecial #686                // Method scala/collection/mutable/ArrayStack."<init>":()V
      13: astore        5
      15: aload         4
      17: aload         5
      19: invokedynamic #707,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/ArrayStack;)Lscala/Function1;
      24: invokeinterface #711,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
      29: aload_2
      30: invokeinterface #665,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      35: astore        6
      37: aload         5
      39: invokevirtual #712                // Method scala/collection/mutable/ArrayStack.isEmpty:()Z
      42: ifne          68
      45: aload_3
      46: aload         5
      48: invokevirtual #715                // Method scala/collection/mutable/ArrayStack.pop:()Ljava/lang/Object;
      51: aload         6
      53: invokedynamic #723,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
      58: invokeinterface #728,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore        6
      65: goto          37
      68: aload         6
      70: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #629                // class scala/collection/immutable/Set
       5: invokevirtual #787                // Method isEmpty:(Lscala/collection/immutable/Set;)Z
       8: ireturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #629                // class scala/collection/immutable/Set
       4: aload_2
       5: invokeinterface #665,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #667                // class scala/collection/GenTraversableOnce
      13: invokeinterface #671,  2          // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/Set;
      18: checkcast     #629                // class scala/collection/immutable/Set
      21: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #790                // Method empty:()Lscala/collection/immutable/Set;
       4: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #629                // class scala/collection/immutable/Set
       5: invokevirtual #792                // Method length:(Lscala/collection/immutable/Set;)I
       8: ireturn

  public int length(scala.collection.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #629                // class scala/collection/immutable/Set
       5: invokevirtual #792                // Method length:(Lscala/collection/immutable/Set;)I
       8: ireturn

  public static final void $anonfun$foldRight$1(scala.collection.mutable.ArrayStack, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #800                // Method scala/collection/mutable/ArrayStack.push:(Ljava/lang/Object;)V
       5: return

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public scalaz.std.SetInstances$$anon$1(scalaz.std.SetInstances);
    Code:
       0: aload_0
       1: invokespecial #804                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #808                // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
       8: aload_0
       9: invokestatic  #811                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      12: aload_0
      13: invokestatic  #814                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      16: aload_0
      17: invokestatic  #817                // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      20: aload_0
      21: invokestatic  #820                // InterfaceMethod scalaz/Foldable$FromFoldr.$init$:(Lscalaz/Foldable$FromFoldr;)V
      24: aload_0
      25: invokestatic  #823                // InterfaceMethod scalaz/std/IterableSubtypeFoldable.$init$:(Lscalaz/std/IterableSubtypeFoldable;)V
      28: return

  public static final java.lang.Object $anonfun$foldRight$1$adapted(scala.collection.mutable.ArrayStack, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #826                // Method $anonfun$foldRight$1:(Lscala/collection/mutable/ArrayStack;Ljava/lang/Object;)V
       5: getstatic     #832                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #844,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
