Compiled from "OrderingInstances.scala"
public final class scalaz.std.math.OrderingInstances$$anon$1$$anon$3 implements scala.math.Ordering<A> {
  public scala.Some<java.lang.Object> tryCompare(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #25                 // InterfaceMethod scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // InterfaceMethod scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // InterfaceMethod scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // InterfaceMethod scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public A max(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public A min(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<A> reverse();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // InterfaceMethod scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering<A>.Ops mkOrderingOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public int compare(A, A);
    Code:
       0: iconst_0
       1: ireturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #94                 // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public scalaz.std.math.OrderingInstances$$anon$1$$anon$3(scalaz.std.math.OrderingInstances$$anon$1);
    Code:
       0: aload_0
       1: invokespecial #100                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #106                // InterfaceMethod scala/math/PartialOrdering.$init$:(Lscala/math/PartialOrdering;)V
       8: aload_0
       9: invokestatic  #109                // InterfaceMethod scala/math/Ordering.$init$:(Lscala/math/Ordering;)V
      12: return
}
