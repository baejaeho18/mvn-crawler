Compiled from "BigDecimal.scala"
public final class scalaz.std.math.BigDecimalInstances$$anon$1 implements scalaz.Monoid<scala.math.BigDecimal>, scalaz.Enum<scala.math.BigDecimal>, scalaz.Show<scala.math.BigDecimal> {
  private final scalaz.syntax.ShowSyntax<scala.math.BigDecimal> showSyntax;

  private final scalaz.syntax.EnumSyntax<scala.math.BigDecimal> enumSyntax;

  private final scalaz.syntax.OrderSyntax<scala.math.BigDecimal> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.math.BigDecimal> equalSyntax;

  private final scalaz.syntax.MonoidSyntax<scala.math.BigDecimal> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scala.math.BigDecimal> semigroupSyntax;

  public scalaz.Kleisli<scala.Option, scala.math.BigDecimal, scala.math.BigDecimal> succx();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/Enum.succx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public scalaz.Kleisli<scala.Option, scala.math.BigDecimal, scala.math.BigDecimal> predx();
    Code:
       0: aload_0
       1: invokestatic  #79                 // InterfaceMethod scalaz/Enum.predx$:(Lscalaz/Enum;)Lscalaz/Kleisli;
       4: areturn

  public <X> scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, X> succState(scala.Function1<scala.math.BigDecimal, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // InterfaceMethod scalaz/Enum.succState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y succStateZeroM(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, Y>>, scalaz.Monoid<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #97                 // InterfaceMethod scalaz/Enum.succStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y succStateZero(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, Y>, scalaz.Monoid<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #103                // InterfaceMethod scalaz/Enum.succStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> succStateMinM(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/Enum.succStateMinM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> succStateMin(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // InterfaceMethod scalaz/Enum.succStateMin$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X> scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, X> predState(scala.Function1<scala.math.BigDecimal, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // InterfaceMethod scalaz/Enum.predState$:(Lscalaz/Enum;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <X, Y> Y predStateZeroM(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, Y>>, scalaz.Monoid<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #123                // InterfaceMethod scalaz/Enum.predStateZeroM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> Y predStateZero(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, Y>, scalaz.Monoid<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #127                // InterfaceMethod scalaz/Enum.predStateZero$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <X, Y> scala.Option<Y> predStateMaxM(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, scalaz.IndexedStateT<scala.math.BigDecimal, scala.math.BigDecimal, java.lang.Object, Y>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scalaz/Enum.predStateMaxM$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <X, Y> scala.Option<Y> predStateMax(scala.Function1<scala.math.BigDecimal, X>, scala.Function1<X, Y>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Enum.predStateMax$:(Lscalaz/Enum;Lscala/Function1;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scalaz.EphemeralStream from(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod scalaz/Enum.from$:(Lscalaz/Enum;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public scalaz.EphemeralStream fromStep(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #150                // InterfaceMethod scalaz/Enum.fromStep$:(Lscalaz/Enum;ILjava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.EphemeralStream fromTo(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #158                // InterfaceMethod scalaz/Enum.fromTo$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       6: areturn

  public scalaz.IList fromToL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // InterfaceMethod scalaz/Enum.fromToL$:(Lscalaz/Enum;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       6: areturn

  public scalaz.EphemeralStream fromStepTo(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #170                // InterfaceMethod scalaz/Enum.fromStepTo$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       7: areturn

  public scalaz.IList fromStepToL(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #176                // InterfaceMethod scalaz/Enum.fromStepToL$:(Lscalaz/Enum;ILjava/lang/Object;Ljava/lang/Object;)Lscalaz/IList;
       7: areturn

  public scalaz.Enum<scala.math.BigDecimal>.EnumLaw enumLaw();
    Code:
       0: aload_0
       1: invokestatic  #183                // InterfaceMethod scalaz/Enum.enumLaw$:(Lscalaz/Enum;)Lscalaz/Enum$EnumLaw;
       4: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #191                // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #197                // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #201                // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #209                // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #213                // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #219                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #223                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #229                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #236                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.math.BigDecimal> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.math.BigDecimal> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #250                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.math.BigDecimal>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #257                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scala.math.BigDecimal>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #270                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #277                // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #292                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #301                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #305                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #312                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #316                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #330                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scala.math.BigDecimal>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #337                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #342                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scala.math.BigDecimal> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.math.BigDecimal>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #349                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scala.math.BigDecimal> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.math.BigDecimal, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #354                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #361                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #366                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scala.math.BigDecimal>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #373                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.ShowSyntax<scala.math.BigDecimal> showSyntax();
    Code:
       0: aload_0
       1: getfield      #377                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       4: areturn

  public void scalaz$Show$_setter_$showSyntax_$eq(scalaz.syntax.ShowSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #377                // Field showSyntax:Lscalaz/syntax/ShowSyntax;
       5: return

  public scalaz.syntax.EnumSyntax<scala.math.BigDecimal> enumSyntax();
    Code:
       0: aload_0
       1: getfield      #385                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       4: areturn

  public void scalaz$Enum$_setter_$enumSyntax_$eq(scalaz.syntax.EnumSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #385                // Field enumSyntax:Lscalaz/syntax/EnumSyntax;
       5: return

  public scalaz.syntax.OrderSyntax<scala.math.BigDecimal> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #392                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #392                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.math.BigDecimal> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #399                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #399                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<scala.math.BigDecimal> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #406                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #406                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scala.math.BigDecimal> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #413                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #413                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Cord show(scala.math.BigDecimal);
    Code:
       0: getstatic     #424                // Field scalaz/Cord$.MODULE$:Lscalaz/Cord$;
       3: aload_0
       4: aload_1
       5: invokevirtual #428                // Method shows:(Lscala/math/BigDecimal;)Ljava/lang/String;
       8: invokevirtual #431                // Method scalaz/Cord$.apply:(Ljava/lang/String;)Lscalaz/Cord;
      11: areturn

  public java.lang.String shows(scala.math.BigDecimal);
    Code:
       0: aload_1
       1: invokevirtual #438                // Method scala/math/BigDecimal.toString:()Ljava/lang/String;
       4: areturn

  public scala.math.BigDecimal append(scala.math.BigDecimal, scala.Function0<scala.math.BigDecimal>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #448,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #434                // class scala/math/BigDecimal
      10: invokevirtual #452                // Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      13: areturn

  public scala.math.BigDecimal zero();
    Code:
       0: getstatic     #459                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       3: lconst_0
       4: invokevirtual #463                // Method scala/math/BigDecimal$.long2bigDecimal:(J)Lscala/math/BigDecimal;
       7: areturn

  public scalaz.Ordering order(scala.math.BigDecimal, scala.math.BigDecimal);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #469                // Method scala/math/BigDecimal.$less:(Ljava/lang/Object;)Z
       5: ifeq          12
       8: getstatic     #472                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      11: areturn
      12: aload_1
      13: aload_2
      14: invokevirtual #475                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: getstatic     #478                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      23: areturn
      24: getstatic     #481                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      27: areturn

  public scala.math.BigDecimal succ(scala.math.BigDecimal);
    Code:
       0: aload_1
       1: getstatic     #459                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       4: iconst_1
       5: invokevirtual #487                // Method scala/math/BigDecimal$.int2bigDecimal:(I)Lscala/math/BigDecimal;
       8: invokevirtual #452                // Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      11: areturn

  public scala.math.BigDecimal pred(scala.math.BigDecimal);
    Code:
       0: aload_1
       1: getstatic     #459                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       4: iconst_1
       5: invokevirtual #487                // Method scala/math/BigDecimal$.int2bigDecimal:(I)Lscala/math/BigDecimal;
       8: invokevirtual #491                // Method scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      11: areturn

  public scala.math.BigDecimal succn(int, scala.math.BigDecimal);
    Code:
       0: aload_2
       1: getstatic     #459                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       4: iload_1
       5: invokevirtual #487                // Method scala/math/BigDecimal$.int2bigDecimal:(I)Lscala/math/BigDecimal;
       8: invokevirtual #452                // Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      11: areturn

  public scala.math.BigDecimal predn(int, scala.math.BigDecimal);
    Code:
       0: aload_2
       1: getstatic     #459                // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       4: iload_1
       5: invokevirtual #487                // Method scala/math/BigDecimal$.int2bigDecimal:(I)Lscala/math/BigDecimal;
       8: invokevirtual #491                // Method scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      11: areturn

  public scala.None$ min();
    Code:
       0: getstatic     #500                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public scala.None$ max();
    Code:
       0: getstatic     #500                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #27                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #505                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scala.Option max();
    Code:
       0: aload_0
       1: invokevirtual #508                // Method max:()Lscala/None$;
       4: areturn

  public scala.Option min();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method min:()Lscala/None$;
       4: areturn

  public java.lang.Object predn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #434                // class scala/math/BigDecimal
       6: invokevirtual #513                // Method predn:(ILscala/math/BigDecimal;)Lscala/math/BigDecimal;
       9: areturn

  public java.lang.Object succn(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #434                // class scala/math/BigDecimal
       6: invokevirtual #515                // Method succn:(ILscala/math/BigDecimal;)Lscala/math/BigDecimal;
       9: areturn

  public java.lang.Object pred(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #434                // class scala/math/BigDecimal
       5: invokevirtual #518                // Method pred:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
       8: areturn

  public java.lang.Object succ(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #434                // class scala/math/BigDecimal
       5: invokevirtual #520                // Method succ:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
       8: areturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #434                // class scala/math/BigDecimal
       5: aload_2
       6: checkcast     #434                // class scala/math/BigDecimal
       9: invokevirtual #522                // Method order:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscalaz/Ordering;
      12: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #524                // Method zero:()Lscala/math/BigDecimal;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #434                // class scala/math/BigDecimal
       4: aload_2
       5: invokeinterface #448,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #434                // class scala/math/BigDecimal
      13: invokevirtual #452                // Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
      16: areturn

  public java.lang.String shows(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #434                // class scala/math/BigDecimal
       5: invokevirtual #428                // Method shows:(Lscala/math/BigDecimal;)Ljava/lang/String;
       8: areturn

  public scalaz.Cord show(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #434                // class scala/math/BigDecimal
       5: invokevirtual #529                // Method show:(Lscala/math/BigDecimal;)Lscalaz/Cord;
       8: areturn

  public scalaz.std.math.BigDecimalInstances$$anon$1(scalaz.std.math.BigDecimalInstances);
    Code:
       0: aload_0
       1: invokespecial #534                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #538                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #541                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      12: aload_0
      13: invokestatic  #544                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      16: aload_0
      17: invokestatic  #547                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      20: aload_0
      21: invokestatic  #550                // InterfaceMethod scalaz/Enum.$init$:(Lscalaz/Enum;)V
      24: aload_0
      25: invokestatic  #553                // InterfaceMethod scalaz/Show.$init$:(Lscalaz/Show;)V
      28: return
}
