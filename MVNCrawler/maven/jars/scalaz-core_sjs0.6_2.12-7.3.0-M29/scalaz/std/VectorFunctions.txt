Compiled from "Vector.scala"
public interface scalaz.std.VectorFunctions {
  public static scala.collection.immutable.Vector empty$(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokespecial #35                 // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       4: areturn

  public default <A> scala.collection.immutable.Vector<A> empty();
    Code:
       0: getstatic     #43                 // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #47                 // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
       6: invokevirtual #50                 // Method scala/collection/immutable/Vector$.empty:()Lscala/collection/immutable/Vector;
       9: areturn

  private <A, B> B lazyFoldRight(scala.collection.immutable.Vector<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: iconst_m1
       1: istore        4
       3: iload         4
       5: aload_1
       6: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
       9: iconst_1
      10: isub
      11: if_icmplt     21
      14: aload_2
      15: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: areturn
      21: aload_3
      22: aload_1
      23: iload         4
      25: iconst_1
      26: iadd
      27: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      30: iload         4
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      40: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn

  public static scala.collection.immutable.Vector intersperse$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #109                // InterfaceMethod intersperse:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       6: areturn

  public default <A> scala.collection.immutable.Vector<A> intersperse(scala.collection.immutable.Vector<A>, A);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: areturn
      14: aload_1
      15: invokevirtual #118                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
      18: aload_1
      19: invokevirtual #121                // Method scala/collection/immutable/Vector.last:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      29: aload_3
      30: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      33: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      36: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      39: aload_2
      40: invokedynamic #144,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function2;
      45: invokevirtual #148                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      48: checkcast     #59                 // class scala/collection/immutable/Vector
      51: areturn

  public static scalaz.Maybe toNel$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #154                // InterfaceMethod toNel:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          14
       7: getstatic     #160                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      10: invokevirtual #163                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      13: areturn
      14: getstatic     #160                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      17: getstatic     #168                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      20: aload_1
      21: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      24: getstatic     #176                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      27: aload_1
      28: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      31: getstatic     #184                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      34: invokevirtual #188                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      37: invokevirtual #192                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      40: invokevirtual #196                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      43: invokevirtual #200                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      46: areturn

  public static scalaz.Maybe toZipper$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #204                // InterfaceMethod toZipper:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #210                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #214                // Method scala/collection/immutable/Vector.toStream:()Lscala/collection/immutable/Stream;
       7: invokevirtual #217                // Method scalaz/std/stream$.toZipper:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
      10: areturn

  public static scalaz.Maybe zipperEnd$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #221                // InterfaceMethod zipperEnd:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       5: areturn

  public default <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #210                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #214                // Method scala/collection/immutable/Vector.toStream:()Lscala/collection/immutable/Stream;
       7: invokevirtual #223                // Method scalaz/std/stream$.zipperEnd:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
      10: areturn

  public static java.lang.Object $less$up$greater$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #230                // InterfaceMethod $less$up$greater:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B $less$up$greater(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          22
       7: getstatic     #238                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: invokeinterface #243,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      21: areturn
      22: aload_2
      23: getstatic     #168                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      26: aload_1
      27: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      30: getstatic     #176                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      33: aload_1
      34: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      37: getstatic     #184                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      40: invokevirtual #188                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      43: invokevirtual #192                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      46: invokevirtual #196                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      49: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      54: areturn

  public static java.lang.Object takeWhileM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #256                // InterfaceMethod takeWhileM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M takeWhileM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
       7: aload_0
       8: aload_3
       9: aload_2
      10: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: iconst_m1
      20: istore        6
      22: iload         6
      24: aload_1
      25: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      28: iconst_1
      29: isub
      30: if_icmplt     39
      33: aload_0
      34: aload_3
      35: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      38: areturn
      39: aload_1
      40: iload         6
      42: iconst_1
      43: iadd
      44: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      47: iload         6
      49: aload_1
      50: aload         4
      52: aload         5
      54: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      59: astore        8
      61: astore        7
      63: aload_0
      64: aload_3
      65: aload_2
      66: aload         7
      68: aload         8
      70: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      73: areturn

  public static java.lang.Object takeUntilM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #284                // InterfaceMethod takeUntilM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M takeUntilM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #293,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: aload_0
      10: aload_3
      11: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      16: aload_0
      17: aload_3
      18: aload         4
      20: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      25: astore        6
      27: astore        5
      29: iconst_m1
      30: istore        7
      32: iload         7
      34: aload_1
      35: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      38: iconst_1
      39: isub
      40: if_icmplt     49
      43: aload_0
      44: aload_3
      45: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      48: areturn
      49: aload_1
      50: iload         7
      52: iconst_1
      53: iadd
      54: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      57: iload         7
      59: aload_1
      60: aload         5
      62: aload         6
      64: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      69: astore        9
      71: astore        8
      73: aload_0
      74: aload_3
      75: aload         4
      77: aload         8
      79: aload         9
      81: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      84: areturn

  public static java.lang.Object filterM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #306                // InterfaceMethod filterM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M filterM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #316,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
       7: aload_3
       8: aload_2
       9: invokedynamic #324,  0            // InvokeDynamic #6:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: iconst_m1
      19: istore        6
      21: iload         6
      23: aload_1
      24: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      27: iconst_1
      28: isub
      29: if_icmplt     38
      32: aload_0
      33: aload_3
      34: invokestatic  #312                // InterfaceMethod $anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      37: areturn
      38: aload_1
      39: iload         6
      41: iconst_1
      42: iadd
      43: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      46: iload         6
      48: aload_1
      49: aload         4
      51: aload         5
      53: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      58: astore        8
      60: astore        7
      62: aload_3
      63: aload_2
      64: aload         7
      66: aload         8
      68: invokestatic  #320                // InterfaceMethod $anonfun$filterM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      71: areturn

  public static java.lang.Object findM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #329                // InterfaceMethod findM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M findM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: invokedynamic #337,  0            // InvokeDynamic #7:apply:(Lscalaz/Monad;)Lscala/Function0;
       6: aload_3
       7: aload_2
       8: invokedynamic #345,  0            // InvokeDynamic #8:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      13: astore        5
      15: astore        4
      17: iconst_m1
      18: istore        6
      20: iload         6
      22: aload_1
      23: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      26: iconst_1
      27: isub
      28: if_icmplt     36
      31: aload_3
      32: invokestatic  #333                // InterfaceMethod $anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      35: areturn
      36: aload_1
      37: iload         6
      39: iconst_1
      40: iadd
      41: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      44: iload         6
      46: aload_1
      47: aload         4
      49: aload         5
      51: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      56: astore        8
      58: astore        7
      60: aload_3
      61: aload_2
      62: aload         7
      64: aload         8
      66: invokestatic  #341                // InterfaceMethod $anonfun$findM$3:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      69: areturn

  public static scala.collection.immutable.Vector powerset$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #351                // InterfaceMethod powerset:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: iconst_1
       7: invokestatic  #358                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      13: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      19: checkcast     #59                 // class scala/collection/immutable/Vector
      22: iconst_0
      23: invokestatic  #358                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      26: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      29: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      32: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #59                 // class scala/collection/immutable/Vector
      38: invokedynamic #370,  0            // InvokeDynamic #9:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      43: getstatic     #184                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      46: invokevirtual #188                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      49: checkcast     #372                // class scalaz/Applicative
      52: astore_3
      53: astore_2
      54: aload_0
      55: aload_3
      56: invokedynamic #316,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      61: aload_3
      62: aload_2
      63: invokedynamic #324,  0            // InvokeDynamic #6:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      68: astore        5
      70: astore        4
      72: iconst_m1
      73: istore        6
      75: iload         6
      77: aload_1
      78: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      81: iconst_1
      82: isub
      83: if_icmplt     94
      86: aload_0
      87: aload_3
      88: invokestatic  #312                // InterfaceMethod $anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      91: goto          127
      94: aload_1
      95: iload         6
      97: iconst_1
      98: iadd
      99: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     102: iload         6
     104: aload_1
     105: aload         4
     107: aload         5
     109: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     114: astore        8
     116: astore        7
     118: aload_3
     119: aload_2
     120: aload         7
     122: aload         8
     124: invokestatic  #320                // InterfaceMethod $anonfun$filterM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     127: checkcast     #59                 // class scala/collection/immutable/Vector
     130: areturn

  public static java.lang.Object partitionM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #381                // InterfaceMethod partitionM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M partitionM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_3
       2: invokedynamic #386,  0            // InvokeDynamic #10:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
       7: aload_3
       8: aload_2
       9: invokedynamic #391,  0            // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: iconst_m1
      19: istore        6
      21: iload         6
      23: aload_1
      24: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      27: iconst_1
      28: isub
      29: if_icmplt     38
      32: aload_0
      33: aload_3
      34: invokestatic  #384                // InterfaceMethod $anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      37: areturn
      38: aload_1
      39: iload         6
      41: iconst_1
      42: iadd
      43: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      46: iload         6
      48: aload_1
      49: aload         4
      51: aload         5
      53: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      58: astore        8
      60: astore        7
      62: aload_3
      63: aload_2
      64: aload         7
      66: aload         8
      68: invokestatic  #389                // InterfaceMethod $anonfun$partitionM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      71: areturn

  public static java.lang.Object spanM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #396                // InterfaceMethod spanM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M spanM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_3
       9: aload_0
      10: aload_3
      11: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      24: astore        5
      26: astore        4
      28: iconst_m1
      29: istore        6
      31: iload         6
      33: aload_1
      34: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      37: iconst_1
      38: isub
      39: if_icmplt     50
      42: aload_0
      43: aload_3
      44: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      47: goto          84
      50: aload_1
      51: iload         6
      53: iconst_1
      54: iadd
      55: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      58: iload         6
      60: aload_1
      61: aload         4
      63: aload         5
      65: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      70: astore        8
      72: astore        7
      74: aload_0
      75: aload_3
      76: aload_2
      77: aload         7
      79: aload         8
      81: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      84: aload_1
      85: invokedynamic #409,  0            // InvokeDynamic #12:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      90: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      95: areturn

  public static java.lang.Object breakM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #418                // InterfaceMethod breakM:(Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M breakM(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_3
       1: aload_2
       2: invokedynamic #423,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload_3
      18: aload_0
      19: aload_3
      20: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      25: aload_0
      26: aload_3
      27: aload         4
      29: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      34: astore        6
      36: astore        5
      38: iconst_m1
      39: istore        7
      41: iload         7
      43: aload_1
      44: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      47: iconst_1
      48: isub
      49: if_icmplt     60
      52: aload_0
      53: aload_3
      54: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      57: goto          95
      60: aload_1
      61: iload         7
      63: iconst_1
      64: iadd
      65: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      68: iload         7
      70: aload_1
      71: aload         5
      73: aload         6
      75: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      80: astore        9
      82: astore        8
      84: aload_0
      85: aload_3
      86: aload         4
      88: aload         8
      90: aload         9
      92: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      95: aload_1
      96: invokedynamic #409,  0            // InvokeDynamic #12:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     101: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     106: areturn

  public static java.lang.Object groupWhenM$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #434                // InterfaceMethod groupWhenM:(Lscala/collection/immutable/Vector;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <A, M> M groupWhenM(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          28
       7: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_0
      17: invokedynamic #443,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      22: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      27: areturn
      28: aload_3
      29: aload_2
      30: invokedynamic #457,  0            // InvokeDynamic #15:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      35: astore        4
      37: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      40: ifnonnull     45
      43: aconst_null
      44: athrow
      45: aload_3
      46: aload_1
      47: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      50: getstatic     #462                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      53: aload_3
      54: invokevirtual #466                // Method scalaz/IndexedStateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      57: astore        6
      59: astore        5
      61: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      64: ifnonnull     69
      67: aconst_null
      68: athrow
      69: aload         6
      71: aload_0
      72: aload         6
      74: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      79: aload_0
      80: aload         6
      82: aload         4
      84: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      89: astore        8
      91: astore        7
      93: iconst_m1
      94: istore        9
      96: iload         9
      98: aload         5
     100: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
     103: iconst_1
     104: isub
     105: if_icmplt     117
     108: aload_0
     109: aload         6
     111: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     114: goto          155
     117: aload         5
     119: iload         9
     121: iconst_1
     122: iadd
     123: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     126: iload         9
     128: aload         5
     130: aload         7
     132: aload         8
     134: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     139: astore        11
     141: astore        10
     143: aload_0
     144: aload         6
     146: aload         4
     148: aload         10
     150: aload         11
     152: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     155: aload         5
     157: invokedynamic #409,  0            // InvokeDynamic #12:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     162: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     167: checkcast     #22                 // class scalaz/IndexedStateT
     170: aload_1
     171: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     174: aload_3
     175: invokevirtual #470                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     178: aload_0
     179: aload_3
     180: aload_2
     181: aload_1
     182: invokedynamic #480,  0            // InvokeDynamic #16:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     187: invokeinterface #483,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     192: areturn

  public static scala.collection.immutable.Vector groupWhen$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #494                // InterfaceMethod groupWhen:(Lscala/collection/immutable/Vector;Lscala/Function2;)Lscala/collection/immutable/Vector;
       6: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       7: astore        4
       9: astore_3
      10: aload_3
      11: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
      14: ifne          162
      17: aload_3
      18: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      21: aload_3
      22: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      25: aload_0
      26: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      31: astore        9
      33: astore        8
      35: astore        7
      37: aload         7
      39: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
      42: ifeq          54
      45: aload_0
      46: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      51: goto          115
      54: aload         7
      56: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      59: astore        10
      61: aload         7
      63: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      66: astore        11
      68: aload_2
      69: aload         8
      71: aload         10
      73: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      81: ifeq          113
      84: aload         11
      86: aload         10
      88: aload         9
      90: aload         10
      92: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      95: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      98: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     101: checkcast     #59                 // class scala/collection/immutable/Vector
     104: astore        9
     106: astore        8
     108: astore        7
     110: goto          37
     113: aload         7
     115: astore        12
     117: aload         9
     119: astore        5
     121: aload         12
     123: aload         4
     125: aload_3
     126: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     129: astore        6
     131: aload         5
     133: aload         6
     135: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     138: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     141: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     144: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     147: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     150: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     153: checkcast     #59                 // class scala/collection/immutable/Vector
     156: astore        4
     158: astore_3
     159: goto          10
     162: aload         4
     164: areturn

  public static scala.Tuple2 mapAccumLeft$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #514                // InterfaceMethod mapAccumLeft:(Lscala/collection/immutable/Vector;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_1
       1: new           #517                // class scala/Tuple2
       4: dup
       5: aload_2
       6: aload_0
       7: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      12: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_3
      16: invokedynamic #531,  0            // InvokeDynamic #17:apply:(Lscala/Function2;)Lscala/Function2;
      21: invokevirtual #534                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      24: checkcast     #517                // class scala/Tuple2
      27: areturn

  public static scala.Tuple2 mapAccumRight$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #538                // InterfaceMethod mapAccumRight:(Lscala/collection/immutable/Vector;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public default <A, B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_1
       1: new           #517                // class scala/Tuple2
       4: dup
       5: aload_2
       6: aload_0
       7: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      12: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_3
      16: invokedynamic #546,  0            // InvokeDynamic #18:apply:(Lscala/Function2;)Lscala/Function2;
      21: invokevirtual #148                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      24: checkcast     #517                // class scala/Tuple2
      27: areturn

  public static scala.collection.immutable.Vector tailz$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #550                // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          34
       7: aload_0
       8: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: astore_2
      14: aload_0
      15: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      20: aload_2
      21: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      24: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      27: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #59                 // class scala/collection/immutable/Vector
      33: areturn
      34: aload_0
      35: aload_1
      36: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      39: invokeinterface #550,  2          // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      44: aload_1
      45: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      48: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      51: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      54: checkcast     #59                 // class scala/collection/immutable/Vector
      57: areturn

  public static scala.collection.immutable.Vector initz$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #554                // InterfaceMethod initz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       7: aload_1
       8: invokespecial #558                // InterfaceMethod rec$3:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      11: areturn

  public static scala.collection.immutable.Vector allPairs$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #562                // InterfaceMethod allPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #550,  2          // InterfaceMethod tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      10: aload_1
      11: invokedynamic #569,  0            // InvokeDynamic #19:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
      16: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      19: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      22: invokevirtual #573                // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      25: checkcast     #59                 // class scala/collection/immutable/Vector
      28: areturn

  public static scala.collection.immutable.Vector adjacentPairs$(scalaz.std.VectorFunctions, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #577                // InterfaceMethod adjacentPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      13: areturn
      14: aload_1
      15: aload_1
      16: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      19: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      22: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokevirtual #581                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      28: checkcast     #59                 // class scala/collection/immutable/Vector
      31: areturn

  public static java.lang.Object $anonfun$lazyFoldRight$1(int, scala.collection.immutable.Vector, scala.Function0, scala.Function2);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: istore        4
       5: iload         4
       7: aload_1
       8: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      11: iconst_1
      12: isub
      13: if_icmplt     23
      16: aload_2
      17: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      22: areturn
      23: aload_3
      24: aload_1
      25: iload         4
      27: iconst_1
      28: iadd
      29: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      32: iload         4
      34: aload_1
      35: aload_2
      36: aload_3
      37: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      42: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: areturn

  private static java.lang.Object rec$2(int, scala.collection.immutable.Vector, scala.Function0, scala.Function2);
    Code:
       0: iload_0
       1: aload_1
       2: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
       5: iconst_1
       6: isub
       7: if_icmplt     17
      10: aload_2
      11: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: areturn
      17: aload_3
      18: aload_1
      19: iload_0
      20: iconst_1
      21: iadd
      22: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      25: iload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      34: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: areturn

  public static scala.collection.immutable.Vector $anonfun$intersperse$1(java.lang.Object, java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: aload_2
       1: aload_0
       2: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #59                 // class scala/collection/immutable/Vector
      14: aload_1
      15: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      18: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      21: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      24: checkcast     #59                 // class scala/collection/immutable/Vector
      27: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$2(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$takeWhileM$1(scalaz.std.VectorFunctions, scalaz.Monad);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: aload_0
      10: invokedynamic #596,  0            // InvokeDynamic #20:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      15: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      20: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$5(java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: aload_1
       1: aload_0
       2: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #59                 // class scala/collection/immutable/Vector
      14: areturn

  public static scala.collection.immutable.Vector $anonfun$takeWhileM$6(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$takeWhileM$4(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function0, java.lang.Object, boolean);
    Code:
       0: iload         4
       2: ifeq          32
       5: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_1
      14: aload_2
      15: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: aload_3
      21: invokedynamic #609,  0            // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function1;
      26: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: areturn
      32: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      35: ifnonnull     40
      38: aconst_null
      39: athrow
      40: aload_1
      41: aload_0
      42: invokedynamic #613,  0            // InvokeDynamic #22:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      47: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      52: areturn

  public static java.lang.Object $anonfun$takeWhileM$3(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: aload_0
      17: aload_1
      18: aload         4
      20: aload_3
      21: invokedynamic #623,  0            // InvokeDynamic #23:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      26: invokeinterface #483,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: areturn

  public static boolean $anonfun$takeUntilM$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$takeUntilM$1(scalaz.Monad, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: invokedynamic #634,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
      21: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: areturn

  public static scala.collection.immutable.Vector $anonfun$filterM$2(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static java.lang.Object $anonfun$filterM$1(scalaz.std.VectorFunctions, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #640,  0            // InvokeDynamic #25:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
       7: invokeinterface #641,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.collection.immutable.Vector $anonfun$filterM$6(boolean, java.lang.Object, scala.collection.immutable.Vector);
    Code:
       0: iload_0
       1: ifeq          19
       4: aload_2
       5: aload_1
       6: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       9: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      12: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      15: checkcast     #59                 // class scala/collection/immutable/Vector
      18: areturn
      19: aload_2
      20: areturn

  public static scala.Function1 $anonfun$filterM$5(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #654,  0            // InvokeDynamic #26:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$filterM$4(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #664,  0            // InvokeDynamic #27:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #665,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object $anonfun$filterM$3(scalaz.Applicative, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #672,  0            // InvokeDynamic #28:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: invokeinterface #676,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static scalaz.Maybe $anonfun$findM$2();
    Code:
       0: getstatic     #160                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #163                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static java.lang.Object $anonfun$findM$1(scalaz.Monad);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: invokedynamic #685,  0            // InvokeDynamic #29:apply:()Lscala/Function0;
      14: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      19: areturn

  public static scalaz.Maybe $anonfun$findM$5(java.lang.Object);
    Code:
       0: getstatic     #160                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #200                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static java.lang.Object $anonfun$findM$4(scalaz.Monad, java.lang.Object, scala.Function0, boolean);
    Code:
       0: iload_3
       1: ifeq          25
       4: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_0
      13: aload_1
      14: invokedynamic #696,  0            // InvokeDynamic #30:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      24: areturn
      25: aload_2
      26: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: areturn

  public static java.lang.Object $anonfun$findM$3(scalaz.Monad, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: aload_0
      17: aload_2
      18: aload_3
      19: invokedynamic #705,  0            // InvokeDynamic #31:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Lscala/Function1;
      24: invokeinterface #483,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public static scala.collection.immutable.Vector $anonfun$powerset$1(scala.collection.immutable.Vector, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.Tuple2 $anonfun$partitionM$2(scalaz.std.VectorFunctions);
    Code:
       0: new           #517                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      10: aload_0
      11: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      16: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: areturn

  public static java.lang.Object $anonfun$partitionM$1(scalaz.std.VectorFunctions, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #716,  0            // InvokeDynamic #32:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
       7: invokeinterface #641,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.Tuple2 $anonfun$partitionM$6(boolean, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        75
       4: aload_2
       5: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: checkcast     #59                 // class scala/collection/immutable/Vector
      11: astore        4
      13: aload_2
      14: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      17: checkcast     #59                 // class scala/collection/immutable/Vector
      20: astore        5
      22: iload_0
      23: ifeq          50
      26: new           #517                // class scala/Tuple2
      29: dup
      30: aload         4
      32: aload_1
      33: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      36: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: aload         5
      44: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      47: goto          71
      50: new           #517                // class scala/Tuple2
      53: dup
      54: aload         4
      56: aload         5
      58: aload_1
      59: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      62: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      65: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      68: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      71: astore_3
      72: goto          84
      75: new           #729                // class scala/MatchError
      78: dup
      79: aload_2
      80: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload_3
      85: areturn

  public static scala.Function1 $anonfun$partitionM$5(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #742,  0            // InvokeDynamic #33:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$partitionM$4(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #749,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #665,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object $anonfun$partitionM$3(scalaz.Applicative, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #753,  0            // InvokeDynamic #35:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      10: invokeinterface #676,  3          // InterfaceMethod scalaz/Applicative.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static scala.Tuple2 $anonfun$spanM$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: new           #517                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
      10: invokevirtual #759                // Method scala/collection/immutable/Vector.drop:(I)Lscala/collection/immutable/Vector;
      13: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      16: areturn

  public static boolean $anonfun$breakM$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$breakM$1(scalaz.Monad, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #248,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: invokedynamic #767,  0            // InvokeDynamic #36:apply:()Lscala/Function1;
      21: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: areturn

  public static scala.collection.immutable.Vector $anonfun$groupWhenM$1(scalaz.std.VectorFunctions);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
       6: areturn

  public static scala.Tuple2 $anonfun$groupWhenM$4(java.lang.Object, boolean);
    Code:
       0: getstatic     #773                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       3: aload_0
       4: iload_1
       5: invokestatic  #358                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: invokevirtual #777                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      11: areturn

  public static java.lang.Object $anonfun$groupWhenM$3(scalaz.Monad, scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_3
      11: aload_2
      12: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: getstatic     #788                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: aload_2
      21: invokevirtual #791                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokedynamic #798,  0            // InvokeDynamic #37:apply:(Ljava/lang/Object;)Lscala/Function1;
      29: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: areturn

  public static scalaz.IndexedStateT $anonfun$groupWhenM$2(scalaz.Monad, scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #802                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #808,  0            // InvokeDynamic #38:apply:(Lscalaz/Monad;Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: getstatic     #462                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: new           #20                 // class scalaz/IndexedStateT$Wrap
      28: dup
      29: aload_3
      30: invokespecial #811                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      33: areturn

  public static scala.collection.immutable.Vector $anonfun$groupWhenM$6(scala.collection.immutable.Vector, scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       4: astore        4
       6: aload_1
       7: aload         4
       9: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      12: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      15: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      18: checkcast     #59                 // class scala/collection/immutable/Vector
      21: astore_3
      22: aload_2
      23: aload_3
      24: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      27: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      33: checkcast     #59                 // class scala/collection/immutable/Vector
      36: areturn

  public static java.lang.Object $anonfun$groupWhenM$5(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function2, scala.collection.immutable.Vector, scala.Tuple2);
    Code:
       0: aload         4
       2: ifnull        250
       5: aload         4
       7: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #59                 // class scala/collection/immutable/Vector
      13: astore        6
      15: aload         4
      17: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      20: checkcast     #59                 // class scala/collection/immutable/Vector
      23: astore        7
      25: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload_1
      34: aload         7
      36: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
      39: ifeq          65
      42: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: aload_1
      51: aload_0
      52: invokedynamic #443,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      57: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      62: goto          232
      65: aload_1
      66: aload_2
      67: invokedynamic #457,  0            // InvokeDynamic #15:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      72: astore        8
      74: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      77: ifnonnull     82
      80: aconst_null
      81: athrow
      82: aload_1
      83: aload         7
      85: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      88: getstatic     #462                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      91: aload_1
      92: invokevirtual #466                // Method scalaz/IndexedStateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      95: astore        10
      97: astore        9
      99: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
     102: ifnonnull     107
     105: aconst_null
     106: athrow
     107: aload         10
     109: aload_0
     110: aload         10
     112: invokedynamic #266,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
     117: aload_0
     118: aload         10
     120: aload         8
     122: invokedynamic #276,  0            // InvokeDynamic #3:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
     127: astore        12
     129: astore        11
     131: iconst_m1
     132: istore        13
     134: iload         13
     136: aload         9
     138: invokevirtual #63                 // Method scala/collection/immutable/Vector.length:()I
     141: iconst_1
     142: isub
     143: if_icmplt     155
     146: aload_0
     147: aload         10
     149: invokestatic  #262                // InterfaceMethod $anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     152: goto          193
     155: aload         9
     157: iload         13
     159: iconst_1
     160: iadd
     161: invokevirtual #72                 // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     164: iload         13
     166: aload         9
     168: aload         11
     170: aload         12
     172: invokedynamic #92,  0             // InvokeDynamic #0:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     177: astore        15
     179: astore        14
     181: aload_0
     182: aload         10
     184: aload         8
     186: aload         14
     188: aload         15
     190: invokestatic  #270                // InterfaceMethod $anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     193: aload         9
     195: invokedynamic #409,  0            // InvokeDynamic #12:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     200: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     205: checkcast     #22                 // class scalaz/IndexedStateT
     208: aload         7
     210: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     213: aload_1
     214: invokevirtual #470                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     217: aload_0
     218: aload_1
     219: aload_2
     220: aload         7
     222: invokedynamic #480,  0            // InvokeDynamic #16:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     227: invokeinterface #483,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     232: aload_3
     233: aload         6
     235: invokedynamic #822,  0            // InvokeDynamic #39:apply:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)Lscala/Function1;
     240: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     245: astore        5
     247: goto          260
     250: new           #729                // class scala/MatchError
     253: dup
     254: aload         4
     256: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     259: athrow
     260: aload         5
     262: areturn

  private scala.Tuple2 span1$1(scala.collection.immutable.Vector, java.lang.Object, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          22
       7: new           #517                // class scala/Tuple2
      10: dup
      11: aload_3
      12: aload_0
      13: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      18: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn
      22: aload_1
      23: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      26: astore        5
      28: aload_1
      29: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      32: astore        6
      34: aload         4
      36: aload_2
      37: aload         5
      39: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      47: ifeq          75
      50: aload         6
      52: aload         5
      54: aload_3
      55: aload         5
      57: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      60: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      63: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      66: checkcast     #59                 // class scala/collection/immutable/Vector
      69: astore_3
      70: astore_2
      71: astore_1
      72: goto          0
      75: new           #517                // class scala/Tuple2
      78: dup
      79: aload_3
      80: aload_1
      81: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      84: areturn

  private scala.collection.immutable.Vector go$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          9
       7: aload_2
       8: areturn
       9: aload_1
      10: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      13: aload_1
      14: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      17: aload_0
      18: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      23: astore        8
      25: astore        7
      27: astore        6
      29: aload         6
      31: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
      34: ifeq          46
      37: aload_0
      38: invokeinterface #35,  1           // InterfaceMethod empty:()Lscala/collection/immutable/Vector;
      43: goto          107
      46: aload         6
      48: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      51: astore        9
      53: aload         6
      55: invokevirtual #179                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      58: astore        10
      60: aload_3
      61: aload         7
      63: aload         9
      65: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      73: ifeq          105
      76: aload         10
      78: aload         9
      80: aload         8
      82: aload         9
      84: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      87: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      90: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      93: checkcast     #59                 // class scala/collection/immutable/Vector
      96: astore        8
      98: astore        7
     100: astore        6
     102: goto          29
     105: aload         6
     107: astore        11
     109: aload         8
     111: astore        4
     113: aload         11
     115: aload_2
     116: aload_1
     117: invokevirtual #171                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     120: astore        5
     122: aload         4
     124: aload         5
     126: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     129: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     132: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     135: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     138: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     141: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     144: checkcast     #59                 // class scala/collection/immutable/Vector
     147: astore_2
     148: astore_1
     149: goto          0

  public static scala.Tuple2 $anonfun$mapAccumLeft$1(scala.Function2, scala.Tuple2, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        88
       4: aload_1
       5: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_1
      11: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: checkcast     #59                 // class scala/collection/immutable/Vector
      17: astore        5
      19: aload_0
      20: aload         4
      22: aload_2
      23: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #517                // class scala/Tuple2
      31: astore        6
      33: aload         6
      35: ifnull        78
      38: aload         6
      40: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: astore        7
      45: aload         6
      47: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: astore        8
      52: new           #517                // class scala/Tuple2
      55: dup
      56: aload         7
      58: aload         5
      60: aload         8
      62: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      65: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      68: invokevirtual #361                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      71: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      74: astore_3
      75: goto          97
      78: new           #729                // class scala/MatchError
      81: dup
      82: aload         6
      84: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow
      88: new           #729                // class scala/MatchError
      91: dup
      92: aload_1
      93: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: aload_3
      98: areturn

  public static scala.Tuple2 $anonfun$mapAccumRight$1(scala.Function2, java.lang.Object, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        88
       4: aload_2
       5: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: checkcast     #59                 // class scala/collection/immutable/Vector
      17: astore        5
      19: aload_0
      20: aload         4
      22: aload_1
      23: invokeinterface #97,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #517                // class scala/Tuple2
      31: astore        6
      33: aload         6
      35: ifnull        78
      38: aload         6
      40: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: astore        7
      45: aload         6
      47: invokevirtual #727                // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: astore        8
      52: new           #517                // class scala/Tuple2
      55: dup
      56: aload         7
      58: aload         5
      60: aload         8
      62: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      65: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      68: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      71: invokespecial #521                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      74: astore_3
      75: goto          97
      78: new           #729                // class scala/MatchError
      81: dup
      82: aload         6
      84: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      87: athrow
      88: new           #729                // class scala/MatchError
      91: dup
      92: aload_2
      93: invokespecial #732                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: aload_3
      98: areturn

  private scala.collection.immutable.Vector rec$3(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_2
       1: invokevirtual #115                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifeq          22
       7: aload_1
       8: aload_2
       9: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      12: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      15: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      18: checkcast     #59                 // class scala/collection/immutable/Vector
      21: areturn
      22: aload_1
      23: aload_2
      24: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      27: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      30: invokevirtual #132                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      33: checkcast     #59                 // class scala/collection/immutable/Vector
      36: aload_2
      37: invokevirtual #118                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
      40: astore_2
      41: astore_1
      42: goto          0

  public static scala.collection.immutable.Vector $anonfun$allPairs$1(scala.collection.immutable.Vector, scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #124                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       5: invokevirtual #128                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
       8: invokevirtual #581                // Method scala/collection/immutable/Vector.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      11: checkcast     #59                 // class scala/collection/immutable/Vector
      14: areturn

  public static void $init$(scalaz.std.VectorFunctions);
    Code:
       0: return

  public static java.lang.Object $anonfun$takeWhileM$4$adapted(scalaz.std.VectorFunctions, scalaz.Monad, scala.Function0, java.lang.Object, java.lang.Object);
    Code:
       0: aload         4
       2: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: ifeq          35
       8: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_1
      17: aload_2
      18: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: aload_3
      24: invokedynamic #609,  0            // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function1;
      29: invokeinterface #413,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: areturn
      35: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: aload_1
      44: aload_0
      45: invokedynamic #613,  0            // InvokeDynamic #22:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      50: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      55: areturn

  public static java.lang.Object $anonfun$takeUntilM$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #851                // InterfaceMethod $anonfun$takeUntilM$2:(Z)Z
       7: invokestatic  #358                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static scala.Function1 $anonfun$filterM$5$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #853                // InterfaceMethod $anonfun$filterM$5:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  public static java.lang.Object $anonfun$findM$4$adapted(scalaz.Monad, java.lang.Object, scala.Function0, java.lang.Object);
    Code:
       0: aload_3
       1: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: ifeq          28
       7: getstatic     #401                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_0
      16: aload_1
      17: invokedynamic #696,  0            // InvokeDynamic #30:apply:(Ljava/lang/Object;)Lscala/Function0;
      22: invokeinterface #447,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      27: areturn
      28: aload_2
      29: invokeinterface #69,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: areturn

  public static scala.Function1 $anonfun$partitionM$5$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #855                // InterfaceMethod $anonfun$partitionM$5:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  public static java.lang.Object $anonfun$breakM$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #857                // InterfaceMethod $anonfun$breakM$2:(Z)Z
       7: invokestatic  #358                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static scala.Tuple2 $anonfun$groupWhenM$4$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #499                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #859                // InterfaceMethod $anonfun$groupWhenM$4:(Ljava/lang/Object;Z)Lscala/Tuple2;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #871,  0            // InvokeDynamic #40:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
