Compiled from "Option.scala"
public final class scalaz.std.OptionInstances$$anon$9 implements scalaz.Monoid<java.lang.Object>, scalaz.Band<java.lang.Object> {
  private final scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax;

  private final scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax;

  private final scalaz.Order o$1;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<java.lang.Object>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #56                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(java.lang.Object, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #80                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(java.lang.Object, scala.Function0<B>, scalaz.Equal<java.lang.Object>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> java.lang.Object unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #104                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> java.lang.Object unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<java.lang.Object>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<java.lang.Object> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<java.lang.Object, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #143                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<java.lang.Object>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<java.lang.Object> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #168                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #168                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<java.lang.Object> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<java.lang.Object> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public java.lang.Object zero();
    Code:
       0: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
       6: astore_1
       7: dup
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      16: aload_1
      17: invokevirtual #208                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0<java.lang.Object>);
    Code:
       0: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: new           #216                // class scala/Tuple2
       6: dup
       7: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      19: aload_1
      20: invokevirtual #219                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore        16
      25: getstatic     #194                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      28: aload_2
      29: invokeinterface #223,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: astore        17
      36: dup
      37: ifnonnull     42
      40: aconst_null
      41: athrow
      42: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      45: aload         17
      47: invokevirtual #219                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      50: astore        18
      52: aload         16
      54: aload         18
      56: invokespecial #227                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      59: astore        4
      61: aload         16
      63: checkcast     #229                // class scala/Option
      66: astore        5
      68: aload         18
      70: checkcast     #229                // class scala/Option
      73: astore        6
      75: aload         5
      77: instanceof    #231                // class scala/Some
      80: ifeq          147
      83: aload         5
      85: checkcast     #231                // class scala/Some
      88: invokevirtual #233                // Method scala/Some.value:()Ljava/lang/Object;
      91: astore        7
      93: aload         6
      95: instanceof    #231                // class scala/Some
      98: ifeq          147
     101: aload         6
     103: checkcast     #231                // class scala/Some
     106: invokevirtual #233                // Method scala/Some.value:()Ljava/lang/Object;
     109: astore        8
     111: new           #231                // class scala/Some
     114: dup
     115: getstatic     #238                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
     118: aload_0
     119: getfield      #240                // Field o$1:Lscalaz/Order;
     122: astore        19
     124: ifnonnull     129
     127: aconst_null
     128: athrow
     129: aload         19
     131: aload         7
     133: aload         8
     135: invokeinterface #246,  3          // InterfaceMethod scalaz/Order.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: invokespecial #249                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     143: astore_3
     144: goto          288
     147: aload         16
     149: checkcast     #229                // class scala/Option
     152: astore        9
     154: aload         18
     156: checkcast     #229                // class scala/Option
     159: astore        10
     161: aload         9
     163: instanceof    #231                // class scala/Some
     166: ifeq          193
     169: aload         9
     171: checkcast     #231                // class scala/Some
     174: astore        11
     176: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     179: aload         10
     181: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     184: ifeq          193
     187: aload         11
     189: astore_3
     190: goto          288
     193: aload         16
     195: checkcast     #229                // class scala/Option
     198: astore        12
     200: aload         18
     202: checkcast     #229                // class scala/Option
     205: astore        13
     207: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     210: aload         12
     212: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     215: ifeq          235
     218: aload         13
     220: instanceof    #231                // class scala/Some
     223: ifeq          235
     226: aload         13
     228: checkcast     #231                // class scala/Some
     231: astore_3
     232: goto          288
     235: aload         16
     237: checkcast     #229                // class scala/Option
     240: astore        14
     242: aload         18
     244: checkcast     #229                // class scala/Option
     247: astore        15
     249: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     252: aload         14
     254: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     257: ifeq          278
     260: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     263: aload         15
     265: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     268: ifeq          278
     271: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
     274: astore_3
     275: goto          288
     278: new           #255                // class scala/MatchError
     281: dup
     282: aload         4
     284: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     287: athrow
     288: dup
     289: ifnonnull     294
     292: aconst_null
     293: athrow
     294: invokevirtual #203                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
     297: aload_3
     298: invokevirtual #208                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     301: areturn

  public scalaz.std.OptionInstances$$anon$9(scalaz.std.OptionInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #240                // Field o$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #267                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #271                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #274                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: aload_0
      18: invokestatic  #277                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      21: return
}
