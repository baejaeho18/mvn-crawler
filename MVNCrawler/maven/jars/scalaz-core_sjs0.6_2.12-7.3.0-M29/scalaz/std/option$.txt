Compiled from "Option.scala"
public final class scalaz.std.option$ implements scalaz.std.OptionInstances,scalaz.std.OptionFunctions {
  public static scalaz.std.option$ MODULE$;

  private final scalaz.Traverse<scala.Option> optionInstance;

  public static {};
    Code:
       0: new           #2                  // class scalaz/std/option$
       3: invokespecial #19                 // Method "<init>":()V
       6: return

  public final <A> scala.Option<A> some(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // InterfaceMethod scalaz/std/OptionFunctions.some$:(Lscalaz/std/OptionFunctions;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public final <A> scala.Option<A> none();
    Code:
       0: aload_0
       1: invokestatic  #36                 // InterfaceMethod scalaz/std/OptionFunctions.none$:(Lscalaz/std/OptionFunctions;)Lscala/Option;
       4: areturn

  public final <A, X> X cata(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #44                 // InterfaceMethod scalaz/std/OptionFunctions.cata$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, X> X fold(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #51                 // InterfaceMethod scalaz/std/OptionFunctions.fold$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, E> scalaz.Validation<E, A> toSuccess(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/std/OptionFunctions.toSuccess$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<A, B> toFailure(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/std/OptionFunctions.toFailure$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.Validation<scalaz.NonEmptyList<E>, A> toSuccessNel(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/std/OptionFunctions.toSuccessNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<scalaz.NonEmptyList<A>, B> toFailureNel(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/std/OptionFunctions.toFailureNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.$bslash$div<E, A> toRight(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/std/OptionFunctions.toRight$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A, B> scalaz.$bslash$div<A, B> toLeft(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/std/OptionFunctions.toLeft$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A> scalaz.Maybe<A> toMaybe(scala.Option<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // InterfaceMethod scalaz/std/OptionFunctions.toMaybe$:(Lscalaz/std/OptionFunctions;Lscala/Option;)Lscalaz/Maybe;
       5: areturn

  public final <A, M> M orEmpty(scala.Option<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #103                // InterfaceMethod scalaz/std/OptionFunctions.orEmpty$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public final <A, F> F getOrElseF(scala.Option<A>, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #114                // InterfaceMethod scalaz/std/OptionFunctions.getOrElseF$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <F, A, B> B foldLift(scala.Option<A>, scala.Function0<B>, scala.Function1<F, B>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #123                // InterfaceMethod scalaz/std/OptionFunctions.foldLift$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B foldLiftOpt(scala.Option<A>, scala.Function0<B>, scala.Function1<scala.Option<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #130                // InterfaceMethod scalaz/std/OptionFunctions.foldLiftOpt$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <A> scalaz.Monoid<scala.Option<A>> optionMonoid(scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // InterfaceMethod scalaz/std/OptionInstances.optionMonoid$:(Lscalaz/std/OptionInstances;Lscalaz/Semigroup;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Order<scala.Option<A>> optionOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/std/OptionInstances.optionOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Show<scala.Option<A>> optionShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // InterfaceMethod scalaz/std/OptionInstances.optionShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionFirst();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod scalaz/std/OptionInstances.optionFirst$:(Lscalaz/std/OptionInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<java.lang.Object> optionFirstShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod scalaz/std/OptionInstances.optionFirstShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionFirstOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/std/OptionInstances.optionFirstOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionFirstMonad();
    Code:
       0: aload_0
       1: invokestatic  #183                // InterfaceMethod scalaz/std/OptionInstances.optionFirstMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionLast();
    Code:
       0: aload_0
       1: invokestatic  #187                // InterfaceMethod scalaz/std/OptionInstances.optionLast$:(Lscalaz/std/OptionInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<java.lang.Object> optionLastShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // InterfaceMethod scalaz/std/OptionInstances.optionLastShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionLastOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // InterfaceMethod scalaz/std/OptionInstances.optionLastOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionLastMonad();
    Code:
       0: aload_0
       1: invokestatic  #201                // InterfaceMethod scalaz/std/OptionInstances.optionLastMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionMin(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #209                // InterfaceMethod scalaz/std/OptionInstances.optionMin$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Show<java.lang.Object> optionMinShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scalaz/std/OptionInstances.optionMinShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionMinOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #219                // InterfaceMethod scalaz/std/OptionInstances.optionMinOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionMinMonad();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod scalaz/std/OptionInstances.optionMinMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionMax(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // InterfaceMethod scalaz/std/OptionInstances.optionMax$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Show<java.lang.Object> optionMaxShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scalaz/std/OptionInstances.optionMaxShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionMaxOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #237                // InterfaceMethod scalaz/std/OptionInstances.optionMaxOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionMaxMonad();
    Code:
       0: aload_0
       1: invokestatic  #241                // InterfaceMethod scalaz/std/OptionInstances.optionMaxMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Equal<scala.Option<A>> optionEqual(scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // InterfaceMethod scalaz/std/OptionInstances0.optionEqual$:(Lscalaz/std/OptionInstances0;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <A> scalaz.SemiLattice<scala.Option<A>> optionSemiLattice(scalaz.SemiLattice<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // InterfaceMethod scalaz/std/OptionInstances0.optionSemiLattice$:(Lscalaz/std/OptionInstances0;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       5: areturn

  public <A> scalaz.Band<scala.Option<A>> optionBand(scalaz.Band<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #270                // InterfaceMethod scalaz/std/OptionInstances1.optionBand$:(Lscalaz/std/OptionInstances1;Lscalaz/Band;)Lscalaz/Band;
       5: areturn

  public scalaz.Traverse<scala.Option> optionInstance();
    Code:
       0: aload_0
       1: getfield      #275                // Field optionInstance:Lscalaz/Traverse;
       4: areturn

  public void scalaz$std$OptionInstances$_setter_$optionInstance_$eq(scalaz.Traverse<scala.Option>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #275                // Field optionInstance:Lscalaz/Traverse;
       5: return

  private scalaz.std.option$();
    Code:
       0: aload_0
       1: invokespecial #280                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #282                // Field MODULE$:Lscalaz/std/option$;
       8: aload_0
       9: invokestatic  #286                // InterfaceMethod scalaz/std/OptionInstances1.$init$:(Lscalaz/std/OptionInstances1;)V
      12: aload_0
      13: invokestatic  #289                // InterfaceMethod scalaz/std/OptionInstances0.$init$:(Lscalaz/std/OptionInstances0;)V
      16: aload_0
      17: invokestatic  #292                // InterfaceMethod scalaz/std/OptionInstances.$init$:(Lscalaz/std/OptionInstances;)V
      20: aload_0
      21: invokestatic  #295                // InterfaceMethod scalaz/std/OptionFunctions.$init$:(Lscalaz/std/OptionFunctions;)V
      24: return
}
