Compiled from "Tuple.scala"
public final class scalaz.std.TupleInstances3$$anon$59 implements scalaz.std.Tuple2Order<A1, A2> {
  private final boolean equalIsNatural;

  private final scalaz.syntax.OrderSyntax<scala.Tuple2<A1, A2>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>> equalSyntax;

  private final scalaz.Order A1$42;

  private final scalaz.Order A2$36;

  public scalaz.Ordering order(scala.Tuple2<A1, A2>, scala.Tuple2<A1, A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/std/Tuple2Order.order$:(Lscalaz/std/Tuple2Order;Lscala/Tuple2;Lscala/Tuple2;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scala.Tuple2<A1, A2>, scala.Tuple2<A1, A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // InterfaceMethod scalaz/std/Tuple2Equal.equal$:(Lscalaz/std/Tuple2Equal;Lscala/Tuple2;Lscala/Tuple2;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #76                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #100                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.Tuple2<A1, A2>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.Tuple2<A1, A2>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.Tuple2<A1, A2>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.Tuple2<A1, A2>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #140                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$Tuple2Equal$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #140                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.Tuple2<A1, A2>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #147                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #154                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #161                // Field A1$42:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #165                // Field A2$36:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #170                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #172                // class scala/Tuple2
       5: aload_2
       6: checkcast     #172                // class scala/Tuple2
       9: invokevirtual #174                // Method equal:(Lscala/Tuple2;Lscala/Tuple2;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #172                // class scala/Tuple2
       5: aload_2
       6: checkcast     #172                // class scala/Tuple2
       9: invokevirtual #176                // Method order:(Lscala/Tuple2;Lscala/Tuple2;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #181                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.std.TupleInstances3$$anon$59(scalaz.std.TupleInstances3, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #161                // Field A1$42:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #165                // Field A2$36:Lscalaz/Order;
      10: aload_0
      11: invokespecial #186                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #190                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #193                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: aload_0
      23: invokestatic  #196                // InterfaceMethod scalaz/std/Tuple2Equal.$init$:(Lscalaz/std/Tuple2Equal;)V
      26: aload_0
      27: invokestatic  #199                // InterfaceMethod scalaz/std/Tuple2Order.$init$:(Lscalaz/std/Tuple2Order;)V
      30: return
}
