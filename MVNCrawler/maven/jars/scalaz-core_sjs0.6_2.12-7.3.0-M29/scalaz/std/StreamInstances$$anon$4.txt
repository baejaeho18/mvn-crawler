Compiled from "Stream.scala"
public final class scalaz.std.StreamInstances$$anon$4 implements scalaz.Order<scala.collection.immutable.Stream<A>>, scalaz.std.StreamEqual<A> {
  private final scalaz.syntax.OrderSyntax<scala.collection.immutable.Stream<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.collection.immutable.Stream<A>> equalSyntax;

  private final scalaz.Order A0$2;

  public final boolean equal(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scalaz/std/StreamEqual.equal$:(Lscalaz/std/StreamEqual;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #99                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.collection.immutable.Stream<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.collection.immutable.Stream<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Stream<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.collection.immutable.Stream<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scala.collection.immutable.Stream<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scala.collection.immutable.Stream<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.collection.immutable.Stream<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.collection.immutable.Stream<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.collection.immutable.Stream<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> A();
    Code:
       0: aload_0
       1: getfield      #160                // Field A0$2:Lscalaz/Order;
       4: areturn

  public final scalaz.Ordering order(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: aload_1
       1: invokevirtual #170                // Method scala/collection/immutable/Stream.isEmpty:()Z
       4: ifeq          22
       7: aload_2
       8: invokevirtual #170                // Method scala/collection/immutable/Stream.isEmpty:()Z
      11: ifeq          18
      14: getstatic     #174                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      17: areturn
      18: getstatic     #177                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      21: areturn
      22: aload_2
      23: invokevirtual #170                // Method scala/collection/immutable/Stream.isEmpty:()Z
      26: ifeq          33
      29: getstatic     #180                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      32: areturn
      33: aload_0
      34: invokevirtual #182                // Method A:()Lscalaz/Order;
      37: aload_1
      38: invokevirtual #186                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      41: aload_2
      42: invokevirtual #186                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      45: invokeinterface #188,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      50: astore_3
      51: getstatic     #174                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      54: aload_3
      55: invokevirtual #192                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          80
      61: aload_1
      62: invokevirtual #195                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      65: checkcast     #167                // class scala/collection/immutable/Stream
      68: aload_2
      69: invokevirtual #195                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      72: checkcast     #167                // class scala/collection/immutable/Stream
      75: astore_2
      76: astore_1
      77: goto          0
      80: aload_3
      81: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #22                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #200                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public final boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #167                // class scala/collection/immutable/Stream
       5: aload_2
       6: checkcast     #167                // class scala/collection/immutable/Stream
       9: invokevirtual #202                // Method equal:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Z
      12: ireturn

  public final scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #167                // class scala/collection/immutable/Stream
       5: aload_2
       6: checkcast     #167                // class scala/collection/immutable/Stream
       9: invokevirtual #204                // Method order:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal A();
    Code:
       0: aload_0
       1: invokevirtual #182                // Method A:()Lscalaz/Order;
       4: areturn

  public scalaz.std.StreamInstances$$anon$4(scalaz.std.StreamInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field A0$2:Lscalaz/Order;
       5: aload_0
       6: invokespecial #210                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #214                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #217                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: aload_0
      18: invokestatic  #220                // InterfaceMethod scalaz/std/StreamEqual.$init$:(Lscalaz/std/StreamEqual;)V
      21: return
}
