Compiled from "Tuple.scala"
public class scalaz.std.tuple$tupleSyntax$ implements scalaz.syntax.std.ToTupleOps {
  public static scalaz.std.tuple$tupleSyntax$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/std/tuple$tupleSyntax$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public <A, B> scala.Tuple2<A, B> ToTuple2Ops(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple2Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple2;)Lscala/Tuple2;
       5: areturn

  public <A, B, C> scala.Tuple3<A, B, C> ToTuple3Ops(scala.Tuple3<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple3Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple3;)Lscala/Tuple3;
       5: areturn

  public <A, B, C, D> scala.Tuple4<A, B, C, D> ToTuple4Ops(scala.Tuple4<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple4Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple4;)Lscala/Tuple4;
       5: areturn

  public <A, B, C, D, E> scala.Tuple5<A, B, C, D, E> ToTuple5Ops(scala.Tuple5<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple5Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple5;)Lscala/Tuple5;
       5: areturn

  public <A, B, C, D, E, F> scala.Tuple6<A, B, C, D, E, F> ToTuple6Ops(scala.Tuple6<A, B, C, D, E, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple6Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple6;)Lscala/Tuple6;
       5: areturn

  public <A, B, C, D, E, F, G> scala.Tuple7<A, B, C, D, E, F, G> ToTuple7Ops(scala.Tuple7<A, B, C, D, E, F, G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple7Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple7;)Lscala/Tuple7;
       5: areturn

  public <A, B, C, D, E, F, G, H> scala.Tuple8<A, B, C, D, E, F, G, H> ToTuple8Ops(scala.Tuple8<A, B, C, D, E, F, G, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple8Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple8;)Lscala/Tuple8;
       5: areturn

  public <A, B, C, D, E, F, G, H, I> scala.Tuple9<A, B, C, D, E, F, G, H, I> ToTuple9Ops(scala.Tuple9<A, B, C, D, E, F, G, H, I>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple9Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple9;)Lscala/Tuple9;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J> scala.Tuple10<A, B, C, D, E, F, G, H, I, J> ToTuple10Ops(scala.Tuple10<A, B, C, D, E, F, G, H, I, J>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple10Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple10;)Lscala/Tuple10;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J, K> scala.Tuple11<A, B, C, D, E, F, G, H, I, J, K> ToTuple11Ops(scala.Tuple11<A, B, C, D, E, F, G, H, I, J, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple11Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple11;)Lscala/Tuple11;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J, K, L> scala.Tuple12<A, B, C, D, E, F, G, H, I, J, K, L> ToTuple12Ops(scala.Tuple12<A, B, C, D, E, F, G, H, I, J, K, L>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple12Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple12;)Lscala/Tuple12;
       5: areturn

  public scalaz.std.tuple$tupleSyntax$();
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #110                // Field MODULE$:Lscalaz/std/tuple$tupleSyntax$;
       8: aload_0
       9: invokestatic  #114                // InterfaceMethod scalaz/syntax/std/ToTupleOps.$init$:(Lscalaz/syntax/std/ToTupleOps;)V
      12: return
}
