Compiled from "AllFunctions.scala"
public final class scalaz.std.AllFunctions$ implements scalaz.std.AllFunctions {
  public static scalaz.std.AllFunctions$ MODULE$;

  private final scalaz.std.StringInstances$stringInstance$ scalaz$std$StringFunctions$$instance;

  public static {};
    Code:
       0: new           #2                  // class scalaz/std/AllFunctions$
       3: invokespecial #21                 // Method "<init>":()V
       6: return

  public final <A> A fix(scala.Function1<scala.Function0<A>, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // InterfaceMethod scalaz/std/FunctionFunctions.fix$:(Lscalaz/std/FunctionFunctions;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.String plural(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokestatic  #43                 // InterfaceMethod scalaz/std/StringFunctions.plural$:(Lscalaz/std/StringFunctions;Ljava/lang/String;J)Ljava/lang/String;
       6: areturn

  public scalaz.Maybe<scalaz.NonEmptyList<java.lang.Object>> charsNel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod scalaz/std/StringFunctions.charsNel$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Maybe;
       5: areturn

  public scalaz.NonEmptyList<java.lang.Object> charsNel(java.lang.String, scala.Function0<scalaz.NonEmptyList<java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/std/StringFunctions.charsNel$:(Lscalaz/std/StringFunctions;Ljava/lang/String;Lscala/Function0;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseLong(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // InterfaceMethod scalaz/std/StringFunctions.parseLong$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // InterfaceMethod scalaz/std/StringFunctions.parseInt$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseByte(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // InterfaceMethod scalaz/std/StringFunctions.parseByte$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseShort(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // InterfaceMethod scalaz/std/StringFunctions.parseShort$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // InterfaceMethod scalaz/std/StringFunctions.parseDouble$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseFloat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // InterfaceMethod scalaz/std/StringFunctions.parseFloat$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.math.BigInteger> parseBigInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // InterfaceMethod scalaz/std/StringFunctions.parseBigInt$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.math.BigDecimal> parseBigDecimal(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/std/StringFunctions.parseBigDecimal$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // InterfaceMethod scalaz/std/StringFunctions.parseBoolean$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public final <A> scalaz.Order<A> ToScalazOrderFromOrdering(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/std/math/OrderingFunctions.ToScalazOrderFromOrdering$:(Lscalaz/std/math/OrderingFunctions;Lscala/math/Ordering;)Lscalaz/Order;
       5: areturn

  public final boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/std/BooleanFunctions.conjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scalaz/std/BooleanFunctions.disjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scalaz/std/BooleanFunctions.nor$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/std/BooleanFunctions.nand$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scalaz/std/BooleanFunctions.conditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #143                // InterfaceMethod scalaz/std/BooleanFunctions.inverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #147                // InterfaceMethod scalaz/std/BooleanFunctions.negConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/std/BooleanFunctions.negInverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #159                // InterfaceMethod scalaz/std/BooleanFunctions.unless$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #163                // InterfaceMethod scalaz/std/BooleanFunctions.when$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #171                // InterfaceMethod scalaz/std/BooleanFunctions.unlessM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #179                // InterfaceMethod scalaz/std/BooleanFunctions.unlessMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #184                // InterfaceMethod scalaz/std/BooleanFunctions.whenM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #188                // InterfaceMethod scalaz/std/BooleanFunctions.whenMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #196                // InterfaceMethod scalaz/std/BooleanFunctions.fold$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #204                // InterfaceMethod scalaz/std/BooleanFunctions.option$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Lscala/Option;
       6: areturn

  public int test(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/std/BooleanFunctions.test$:(Lscalaz/std/BooleanFunctions;Z)I
       5: ireturn

  public final <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #219                // InterfaceMethod scalaz/std/BooleanFunctions.valueOrZero$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #224                // InterfaceMethod scalaz/std/BooleanFunctions.zeroOrValue$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #232                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmpty$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #237                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPoint$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M, A> M emptyOrPure(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #241                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPure$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #248                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmptyNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #252                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPointNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPureNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #256                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPureNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <A> scala.collection.immutable.Stream<A> interleave(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #267                // InterfaceMethod scalaz/std/StreamFunctions.interleave$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod scalaz/std/StreamFunctions.toZipper$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #280                // InterfaceMethod scalaz/std/StreamFunctions.zipperEnd$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       5: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> heads(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod scalaz/std/StreamFunctions.heads$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> tails(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #291                // InterfaceMethod scalaz/std/StreamFunctions.tails$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: areturn

  public final <A, B, C> scala.collection.immutable.Stream<scala.Function1<B, C>> zapp(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // InterfaceMethod scalaz/std/StreamFunctions.zapp$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A, B> scala.collection.immutable.Stream<scalaz.Tree<B>> unfoldForest(scala.collection.immutable.Stream<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.Stream<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #303                // InterfaceMethod scalaz/std/StreamFunctions.unfoldForest$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A, B, M> M unfoldForestM(scala.collection.immutable.Stream<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #311                // InterfaceMethod scalaz/std/StreamFunctions.unfoldForestM$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.Stream<A> intersperse(scala.collection.immutable.Stream<A>, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // InterfaceMethod scalaz/std/StreamFunctions.intersperse$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       6: areturn

  public <A, B> scala.collection.immutable.Stream<B> unfold(A, scala.Function1<A, scala.Option<scala.Tuple2<B, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/std/StreamFunctions.unfold$:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public <A, B> scala.collection.immutable.Stream<B> unfoldm(A, scala.Function1<A, scalaz.Maybe<scala.Tuple2<B, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #333                // InterfaceMethod scalaz/std/StreamFunctions.unfoldm$:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A> scala.Option<A> some(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // InterfaceMethod scalaz/std/OptionFunctions.some$:(Lscalaz/std/OptionFunctions;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public final <A> scala.Option<A> none();
    Code:
       0: aload_0
       1: invokestatic  #349                // InterfaceMethod scalaz/std/OptionFunctions.none$:(Lscalaz/std/OptionFunctions;)Lscala/Option;
       4: areturn

  public final <A, X> X cata(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #356                // InterfaceMethod scalaz/std/OptionFunctions.cata$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, X> X fold(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #359                // InterfaceMethod scalaz/std/OptionFunctions.fold$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, E> scalaz.Validation<E, A> toSuccess(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #366                // InterfaceMethod scalaz/std/OptionFunctions.toSuccess$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<A, B> toFailure(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #372                // InterfaceMethod scalaz/std/OptionFunctions.toFailure$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.Validation<scalaz.NonEmptyList<E>, A> toSuccessNel(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod scalaz/std/OptionFunctions.toSuccessNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<scalaz.NonEmptyList<A>, B> toFailureNel(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/std/OptionFunctions.toFailureNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.$bslash$div<E, A> toRight(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // InterfaceMethod scalaz/std/OptionFunctions.toRight$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A, B> scalaz.$bslash$div<A, B> toLeft(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #394                // InterfaceMethod scalaz/std/OptionFunctions.toLeft$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A> scalaz.Maybe<A> toMaybe(scala.Option<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #401                // InterfaceMethod scalaz/std/OptionFunctions.toMaybe$:(Lscalaz/std/OptionFunctions;Lscala/Option;)Lscalaz/Maybe;
       5: areturn

  public final <A, M> M orEmpty(scala.Option<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #410                // InterfaceMethod scalaz/std/OptionFunctions.orEmpty$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public final <A, F> F getOrElseF(scala.Option<A>, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #419                // InterfaceMethod scalaz/std/OptionFunctions.getOrElseF$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <F, A, B> B foldLift(scala.Option<A>, scala.Function0<B>, scala.Function1<F, B>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #427                // InterfaceMethod scalaz/std/OptionFunctions.foldLift$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B foldLiftOpt(scala.Option<A>, scala.Function0<B>, scala.Function1<scala.Option<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #434                // InterfaceMethod scalaz/std/OptionFunctions.foldLiftOpt$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.List<A> intersperse(scala.collection.immutable.List<A>, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #441                // InterfaceMethod scalaz/std/ListFunctions.intersperse$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;)Lscala/collection/immutable/List;
       6: areturn

  public final <A> scala.Option<scala.collection.immutable.List<A>> tailOption(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #449                // InterfaceMethod scalaz/std/ListFunctions.tailOption$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/Option;
       5: areturn

  public final <A> scala.collection.immutable.List<A> nil();
    Code:
       0: aload_0
       1: invokestatic  #456                // InterfaceMethod scalaz/std/ListFunctions.nil$:(Lscalaz/std/ListFunctions;)Lscala/collection/immutable/List;
       4: areturn

  public final <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // InterfaceMethod scalaz/std/ListFunctions.toNel$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // InterfaceMethod scalaz/std/ListFunctions.toZipper$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #468                // InterfaceMethod scalaz/std/ListFunctions.zipperEnd$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A, B> B $less$up$greater(scala.collection.immutable.List<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #475                // InterfaceMethod scalaz/std/ListFunctions.$less$up$greater$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M takeWhileM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #483                // InterfaceMethod scalaz/std/ListFunctions.takeWhileM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M takeUntilM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #488                // InterfaceMethod scalaz/std/ListFunctions.takeUntilM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M filterM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #496                // InterfaceMethod scalaz/std/ListFunctions.filterM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M findM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #501                // InterfaceMethod scalaz/std/ListFunctions.findM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> powerset(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #508                // InterfaceMethod scalaz/std/ListFunctions.powerset$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A, M> M partitionM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #513                // InterfaceMethod scalaz/std/ListFunctions.partitionM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M spanM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #518                // InterfaceMethod scalaz/std/ListFunctions.spanM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M breakM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #523                // InterfaceMethod scalaz/std/ListFunctions.breakM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M groupWhenM(scala.collection.immutable.List<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #531                // InterfaceMethod scalaz/std/ListFunctions.groupWhenM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, B> scala.collection.immutable.Map<B, scalaz.NonEmptyList<A>> groupBy1(scala.collection.immutable.List<A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #539                // InterfaceMethod scalaz/std/ListFunctions.groupBy1$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/Map;
       6: areturn

  public final <A> scala.collection.immutable.List<scalaz.NonEmptyList<A>> groupWhen(scala.collection.immutable.List<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #546                // InterfaceMethod scalaz/std/ListFunctions.groupWhen$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function2;)Lscala/collection/immutable/List;
       6: areturn

  public final <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumLeft(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #554                // InterfaceMethod scalaz/std/ListFunctions.mapAccumLeft$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public final <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumRight(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #558                // InterfaceMethod scalaz/std/ListFunctions.mapAccumRight$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> tailz(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #562                // InterfaceMethod scalaz/std/ListFunctions.tailz$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> initz(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #566                // InterfaceMethod scalaz/std/ListFunctions.initz$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.Tuple2<A, A>> allPairs(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #571                // InterfaceMethod scalaz/std/ListFunctions.allPairs$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.Tuple2<A, A>> adjacentPairs(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #575                // InterfaceMethod scalaz/std/ListFunctions.adjacentPairs$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public scalaz.std.StringInstances$stringInstance$ scalaz$std$StringFunctions$$instance();
    Code:
       0: aload_0
       1: getfield      #578                // Field scalaz$std$StringFunctions$$instance:Lscalaz/std/StringInstances$stringInstance$;
       4: areturn

  public final void scalaz$std$StringFunctions$_setter_$scalaz$std$StringFunctions$$instance_$eq(scalaz.std.StringInstances$stringInstance$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #578                // Field scalaz$std$StringFunctions$$instance:Lscalaz/std/StringInstances$stringInstance$;
       5: return

  private scalaz.std.AllFunctions$();
    Code:
       0: aload_0
       1: invokespecial #582                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #584                // Field MODULE$:Lscalaz/std/AllFunctions$;
       8: aload_0
       9: invokestatic  #588                // InterfaceMethod scalaz/std/ListFunctions.$init$:(Lscalaz/std/ListFunctions;)V
      12: aload_0
      13: invokestatic  #591                // InterfaceMethod scalaz/std/OptionFunctions.$init$:(Lscalaz/std/OptionFunctions;)V
      16: aload_0
      17: invokestatic  #594                // InterfaceMethod scalaz/std/StreamFunctions.$init$:(Lscalaz/std/StreamFunctions;)V
      20: aload_0
      21: invokestatic  #597                // InterfaceMethod scalaz/std/BooleanFunctions.$init$:(Lscalaz/std/BooleanFunctions;)V
      24: aload_0
      25: invokestatic  #600                // InterfaceMethod scalaz/std/math/OrderingFunctions.$init$:(Lscalaz/std/math/OrderingFunctions;)V
      28: aload_0
      29: invokestatic  #603                // InterfaceMethod scalaz/std/StringFunctions.$init$:(Lscalaz/std/StringFunctions;)V
      32: aload_0
      33: invokestatic  #606                // InterfaceMethod scalaz/std/FunctionFunctions.$init$:(Lscalaz/std/FunctionFunctions;)V
      36: return
}
