Compiled from "SortedMap.scala"
public final class scalaz.std.SortedMapInstances$$anon$6 implements scalaz.Order<scala.collection.immutable.SortedMap<K, V>>, scalaz.std.SortedMapInstances0$SortedMapEqual<K, V> {
  private final boolean equalIsNatural;

  private final scalaz.syntax.OrderSyntax<scala.collection.immutable.SortedMap<K, V>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scala.collection.immutable.SortedMap<K, V>> equalSyntax;

  private final scalaz.std.SortedMapInstances $outer;

  private final scalaz.Order evidence$4$1;

  private final scalaz.Order evidence$5$1;

  public boolean equal(scala.collection.immutable.SortedMap<K, V>, scala.collection.immutable.SortedMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapEqual.equal$:(Lscalaz/std/SortedMapInstances0$SortedMapEqual;Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scala.collection.immutable.SortedMap<K, V>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scala.collection.immutable.SortedMap<K, V>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scala.collection.immutable.SortedMap<K, V>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public scalaz.Equal<scala.collection.immutable.SortedMap<K, V>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: getfield      #141                // Field equalIsNatural:Z
       4: ireturn

  public void scalaz$std$SortedMapInstances0$SortedMapEqual$_setter_$equalIsNatural_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #141                // Field equalIsNatural:Z
       5: return

  public scalaz.syntax.OrderSyntax<scala.collection.immutable.SortedMap<K, V>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #148                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scala.collection.immutable.SortedMap<K, V>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #155                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scala.collection.immutable.SortedMap<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<K> OK();
    Code:
       0: getstatic     #166                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #168                // Field evidence$4$1:Lscalaz/Order;
       7: astore_1
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_1
      14: areturn

  public scalaz.Equal<V> OV();
    Code:
       0: getstatic     #176                // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: aload_0
       4: getfield      #178                // Field evidence$5$1:Lscalaz/Order;
       7: astore_1
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_1
      14: areturn

  public scalaz.Ordering order(scala.collection.immutable.SortedMap<K, V>, scala.collection.immutable.SortedMap<K, V>);
    Code:
       0: getstatic     #166                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #168                // Field evidence$4$1:Lscalaz/Order;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload         4
      16: invokeinterface #183,  1          // InterfaceMethod scalaz/Order.toScalaOrdering:()Lscala/math/Ordering;
      21: astore_3
      22: getstatic     #188                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
      25: getstatic     #193                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
      28: invokevirtual #197                // Method scalaz/Ordering$.orderingInstance:()Lscalaz/Enum;
      31: checkcast     #199                // class scalaz/Semigroup
      34: astore        5
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: aload         5
      43: getstatic     #166                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      46: getstatic     #204                // Field scalaz/std/anyVal$.MODULE$:Lscalaz/std/anyVal$;
      49: invokevirtual #208                // Method scalaz/std/anyVal$.intInstance:()Lscalaz/Monoid;
      52: checkcast     #7                  // class scalaz/Order
      55: astore        6
      57: ifnonnull     62
      60: aconst_null
      61: athrow
      62: aload         6
      64: aload_1
      65: invokeinterface #214,  1          // InterfaceMethod scala/collection/immutable/SortedMap.size:()I
      70: invokestatic  #220                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      73: aload_2
      74: invokeinterface #214,  1          // InterfaceMethod scala/collection/immutable/SortedMap.size:()I
      79: invokestatic  #220                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      82: invokeinterface #222,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      87: aload_0
      88: aload_1
      89: aload_3
      90: aload_2
      91: invokedynamic #245,  0            // InvokeDynamic #0:apply:(Lscalaz/std/SortedMapInstances$$anon$6;Lscala/collection/immutable/SortedMap;Lscala/math/Ordering;Lscala/collection/immutable/SortedMap;)Lscala/Function0;
      96: invokeinterface #249,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     101: checkcast     #251                // class scalaz/Ordering
     104: areturn

  public scalaz.std.SortedMapInstances0 scalaz$std$SortedMapInstances0$SortedMapEqual$$$outer();
    Code:
       0: aload_0
       1: getfield      #259                // Field $outer:Lscalaz/std/SortedMapInstances;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #27                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #264                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #210                // class scala/collection/immutable/SortedMap
       5: aload_2
       6: checkcast     #210                // class scala/collection/immutable/SortedMap
       9: invokevirtual #266                // Method equal:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #210                // class scala/collection/immutable/SortedMap
       5: aload_2
       6: checkcast     #210                // class scala/collection/immutable/SortedMap
       9: invokevirtual #268                // Method order:(Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;)Lscalaz/Ordering;
      12: areturn

  public static final java.lang.Object $anonfun$order$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #276                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$order$3(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #276                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Ordering $anonfun$order$1(scalaz.std.SortedMapInstances$$anon$6, scala.collection.immutable.SortedMap, scala.math.Ordering, scala.collection.immutable.SortedMap);
    Code:
       0: getstatic     #166                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: getstatic     #288                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       6: getstatic     #293                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
       9: aload_0
      10: getfield      #168                // Field evidence$4$1:Lscalaz/Order;
      13: aload_0
      14: getfield      #178                // Field evidence$5$1:Lscalaz/Order;
      17: invokevirtual #296                // Method scalaz/std/tuple$.tuple2Order:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      20: invokevirtual #299                // Method scalaz/std/vector$.vectorOrder:(Lscalaz/Order;)Lscalaz/Order;
      23: astore        4
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: aload         4
      32: aload_1
      33: invokeinterface #303,  1          // InterfaceMethod scala/collection/immutable/SortedMap.toVector:()Lscala/collection/immutable/Vector;
      38: invokedynamic #312,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      43: aload_2
      44: invokevirtual #318                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      47: aload_3
      48: invokeinterface #303,  1          // InterfaceMethod scala/collection/immutable/SortedMap.toVector:()Lscala/collection/immutable/Vector;
      53: invokedynamic #322,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      58: aload_2
      59: invokevirtual #318                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
      62: invokeinterface #222,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      67: areturn

  public scalaz.std.SortedMapInstances$$anon$6(scalaz.std.SortedMapInstances, scalaz.Order, scalaz.Order);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #259                // Field $outer:Lscalaz/std/SortedMapInstances;
      11: aload_0
      12: aload_2
      13: putfield      #168                // Field evidence$4$1:Lscalaz/Order;
      16: aload_0
      17: aload_3
      18: putfield      #178                // Field evidence$5$1:Lscalaz/Order;
      21: aload_0
      22: invokespecial #326                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #330                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      29: aload_0
      30: invokestatic  #333                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      33: aload_0
      34: invokestatic  #336                // InterfaceMethod scalaz/std/SortedMapInstances0$SortedMapEqual.$init$:(Lscalaz/std/SortedMapInstances0$SortedMapEqual;)V
      37: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #348,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
