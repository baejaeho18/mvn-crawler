Compiled from "Order.scala"
public final class scalaz.Order$$anon$1 implements scalaz.Order<B> {
  private final scalaz.syntax.OrderSyntax<B> orderSyntax;

  private final scalaz.syntax.EqualSyntax<B> equalSyntax;

  private final scalaz.Order $outer;

  private final scala.Function1 f$1;

  public scalaz.Ordering apply(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public B max(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public B min(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<B, B> sort(B, B);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<B> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #91                 // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<B> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<B>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<B>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #118                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<B> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #122                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<B>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<B> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #130                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<B>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #130                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(B, B);
    Code:
       0: aload_0
       1: getfield      #138                // Field $outer:Lscalaz/Order;
       4: aload_0
       5: getfield      #140                // Field f$1:Lscala/Function1;
       8: aload_1
       9: invokeinterface #145,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_0
      15: getfield      #140                // Field f$1:Lscala/Function1;
      18: aload_2
      19: invokeinterface #145,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokeinterface #147,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      29: areturn

  public boolean equal(B, B);
    Code:
       0: aload_0
       1: getfield      #138                // Field $outer:Lscalaz/Order;
       4: aload_0
       5: getfield      #140                // Field f$1:Lscala/Function1;
       8: aload_1
       9: invokeinterface #145,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_0
      15: getfield      #140                // Field f$1:Lscala/Function1;
      18: aload_2
      19: invokeinterface #145,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokeinterface #150,  3          // InterfaceMethod scalaz/Order.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      29: ireturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #2                  // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #155                // Method "<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.Order$$anon$1(scalaz.Order<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #138                // Field $outer:Lscalaz/Order;
      11: aload_0
      12: aload_2
      13: putfield      #140                // Field f$1:Lscala/Function1;
      16: aload_0
      17: invokespecial #159                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #163                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      24: aload_0
      25: invokestatic  #166                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      28: return
}
