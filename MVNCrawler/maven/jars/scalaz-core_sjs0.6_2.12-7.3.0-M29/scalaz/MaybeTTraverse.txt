Compiled from "MaybeT.scala"
public interface scalaz.MaybeTTraverse<F> extends scalaz.Traverse<?>, scalaz.MaybeTFoldable<F>, scalaz.MaybeTFunctor<F> {
  public abstract scalaz.Traverse<F> F();

  public static java.lang.Object traverseImpl$(scalaz.MaybeTTraverse, scalaz.MaybeT, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #33                 // InterfaceMethod traverseImpl:(Lscalaz/MaybeT;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverseImpl(scalaz.MaybeT<F, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #40,  1           // InterfaceMethod F:()Lscalaz/Traverse;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_3
      15: aload         4
      17: aload_1
      18: invokevirtual #46                 // Method scalaz/MaybeT.run:()Ljava/lang/Object;
      21: aload_2
      22: aload_3
      23: invokedynamic #70,  0             // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      28: aload_3
      29: invokeinterface #74,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      34: invokedynamic #83,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      39: invokeinterface #89,  3           // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      44: areturn

  public static void $init$(scalaz.MaybeTTraverse);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #106,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
