Compiled from "Coyoneda.scala"
public final class scalaz.CoyonedaInstances$$anon$6 implements scalaz.IsomorphismOrder<scalaz.Coyoneda<F, A>, F> {
  private final scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>> equalSyntax;

  private final scalaz.Order A$1;

  private final scalaz.Functor F$2;

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/IsomorphismOrder.equal$:(Lscalaz/IsomorphismOrder;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/IsomorphismOrder.order$:(Lscalaz/IsomorphismOrder;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.Coyoneda<F, A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.Coyoneda<F, A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.Coyoneda<F, A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Coyoneda<F, A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Coyoneda<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<F> G();
    Code:
       0: aload_0
       1: getfield      #160                // Field A$1:Lscalaz/Order;
       4: areturn

  public scalaz.Isomorphisms$Iso<scala.Function1, scalaz.Coyoneda<F, A>, F> iso();
    Code:
       0: getstatic     #169                // Field scalaz/Coyoneda$.MODULE$:Lscalaz/Coyoneda$;
       3: aload_0
       4: getfield      #171                // Field F$2:Lscalaz/Functor;
       7: invokevirtual #174                // Method scalaz/Coyoneda$.iso:(Lscalaz/Functor;)Lscalaz/Isomorphisms$Iso2;
      10: getstatic     #179                // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
      13: invokevirtual #183                // Method scalaz/Liskov$.refl:()Lscalaz/Liskov;
      16: getstatic     #179                // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
      19: invokevirtual #183                // Method scalaz/Liskov$.refl:()Lscalaz/Liskov;
      22: invokeinterface #187,  3          // InterfaceMethod scalaz/Isomorphisms$Iso2.unlift:(Lscalaz/Liskov;Lscalaz/Liskov;)Lscalaz/Isomorphisms$Iso;
      27: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #28                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #192                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public scalaz.Equal G();
    Code:
       0: aload_0
       1: invokevirtual #195                // Method G:()Lscalaz/Order;
       4: areturn

  public scalaz.CoyonedaInstances$$anon$6(scalaz.CoyonedaInstances, scalaz.Order, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field A$1:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #171                // Field F$2:Lscalaz/Functor;
      10: aload_0
      11: invokespecial #200                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #204                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #207                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: aload_0
      23: invokestatic  #212                // InterfaceMethod scalaz/IsomorphismEqual.$init$:(Lscalaz/IsomorphismEqual;)V
      26: aload_0
      27: invokestatic  #215                // InterfaceMethod scalaz/IsomorphismOrder.$init$:(Lscalaz/IsomorphismOrder;)V
      30: return
}
