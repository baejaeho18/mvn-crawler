Compiled from "StateT.scala"
public final class scalaz.IndexedStateTInstances0$$anon$5 implements scalaz.IndexedStateTBifunctor<S1, F> {
  private final scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.Applicative F0$4;

  public <A, B, C, D> scalaz.IndexedStateT<S1, C, F, D> bimap(scalaz.IndexedStateT<S1, A, F, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #38                 // InterfaceMethod scalaz/IndexedStateTBifunctor.bimap$:(Lscalaz/IndexedStateTBifunctor;Lscalaz/IndexedStateT;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #64                 // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #120                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #120                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Applicative<F> F();
    Code:
       0: aload_0
       1: getfield      #129                // Field F0$4:Lscalaz/Applicative;
       4: areturn

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #22                 // class scalaz/IndexedStateT
       4: astore        4
       6: aload         4
       8: aload_0
       9: invokeinterface #132,  1          // InterfaceMethod scalaz/IndexedStateTBifunctor.F:()Lscalaz/Applicative;
      14: astore        5
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload         5
      23: aload_2
      24: aload_3
      25: invokedynamic #155,  0            // InvokeDynamic #0:apply:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      30: invokedynamic #167,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function2;
      35: astore        6
      37: new           #20                 // class scalaz/IndexedStateT$FlatMap
      40: dup
      41: aload         4
      43: aload         6
      45: invokespecial #171                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      48: areturn

  public scalaz.IndexedStateTInstances0$$anon$5(scalaz.IndexedStateTInstances0, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #129                // Field F0$4:Lscalaz/Applicative;
       5: aload_0
       6: invokespecial #182                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #186                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      13: aload_0
      14: invokestatic  #189                // InterfaceMethod scalaz/IndexedStateTBifunctor.$init$:(Lscalaz/IndexedStateTBifunctor;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #202,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
