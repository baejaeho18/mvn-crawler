Compiled from "Free.scala"
public final class scalaz.FreeInstances1$$anon$6 implements scalaz.FreeTraverse<F> {
  private final scalaz.syntax.TraverseSyntax<?> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Traverse evidence$3$1;

  public final <A, B> scalaz.Free<F, B> map(scalaz.Free<F, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/FreeTraverse.map$:(Lscalaz/FreeTraverse;Lscalaz/Free;Lscala/Function1;)Lscalaz/Free;
       6: areturn

  public final <G, A, B> G traverseImpl(scalaz.Free<F, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #97                 // InterfaceMethod scalaz/FreeTraverse.traverseImpl$:(Lscalaz/FreeTraverse;Lscalaz/Free;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <A, B> B foldMap(scalaz.Free<F, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #108                // InterfaceMethod scalaz/FreeFoldable.foldMap$:(Lscalaz/FreeFoldable;Lscalaz/Free;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A, B> B foldLeft(scalaz.Free<F, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #117                // InterfaceMethod scalaz/FreeFoldable.foldLeft$:(Lscalaz/FreeFoldable;Lscalaz/Free;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public final <A, B> B foldRight(scalaz.Free<F, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #126                // InterfaceMethod scalaz/FreeFoldable.foldRight$:(Lscalaz/FreeFoldable;Lscalaz/Free;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<?>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<?>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #170                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #177                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #183                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #191                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #205                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #212                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #219                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #226                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #232                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #239                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #246                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #252                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #263                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #269                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #273                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #283                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #287                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #291                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #295                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<?>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #302                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #308                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #321                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #324                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #329                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #337                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #344                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #351                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #358                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #364                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #370                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #375                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #380                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #385                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #390                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #403                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #409                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #415                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #421                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #427                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #431                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #439                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #445                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #449                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #455                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #459                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #463                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #469                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #480                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #488                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #500                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #506                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #512                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #518                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #524                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #531                // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #535                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #539                // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #543                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #549                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #555                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #562                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #566                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #571                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #576                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #581                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #586                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #591                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #596                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #601                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #609                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #613                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #619                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #626                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #630                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #634                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #639                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #646                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #653                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #660                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #667                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #673                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #680                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #687                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #691                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #697                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #703                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #708                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #715                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #723                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #730                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #736                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Free<F, A>, scalaz.Free<F, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #743                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #748                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #753                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #757                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #762                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #766                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #770                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #776                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #782                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #790                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #796                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #799                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #806                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #814                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #821                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #829                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #837                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.TraverseSyntax<?> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #841                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #841                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #849                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #849                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #856                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #856                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #863                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #863                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Traverse<F> F();
    Code:
       0: getstatic     #874                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #876                // Field evidence$3$1:Lscalaz/Traverse;
       7: invokevirtual #879                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #58                 // class scalaz/Traverse
      13: areturn

  public final java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/Free
       4: aload_3
       5: aload_2
       6: invokedynamic #900,  0            // InvokeDynamic #0:apply:(Lscala/Function2;Lscala/Function0;)Lscala/Function1;
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokedynamic #908,  0            // InvokeDynamic #1:apply:(Lscalaz/FreeFoldable;Lscala/Function0;Lscala/Function2;)Lscala/Function1;
      19: aload_0
      20: aload_2
      21: aload_3
      22: invokedynamic #917,  0            // InvokeDynamic #2:apply:(Lscalaz/FreeFoldable;Lscala/Function0;Lscala/Function2;)Lscala/Function1;
      27: astore        7
      29: astore        6
      31: astore        5
      33: dup
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: astore        4
      41: aload         4
      43: instanceof    #30                 // class scalaz/Free$Gosub
      46: ifeq          253
      49: aload         4
      51: checkcast     #30                 // class scalaz/Free$Gosub
      54: astore        10
      56: aload         10
      58: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      61: astore        11
      63: aload         10
      65: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      68: astore        12
      70: aload         11
      72: instanceof    #30                 // class scalaz/Free$Gosub
      75: ifeq          145
      78: aload         11
      80: checkcast     #30                 // class scalaz/Free$Gosub
      83: astore        13
      85: aload         13
      87: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      90: astore        14
      92: aload         13
      94: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      97: astore        15
      99: aload         14
     101: aload         15
     103: aload         12
     105: invokedynamic #934,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
     110: astore        20
     112: ifnonnull     117
     115: aconst_null
     116: athrow
     117: new           #30                 // class scalaz/Free$Gosub
     120: dup
     121: aload         14
     123: aload         20
     125: invokespecial #938                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
     128: aload         5
     130: aload         6
     132: aload         7
     134: astore        7
     136: astore        6
     138: astore        5
     140: astore        4
     142: goto          41
     145: aload         11
     147: instanceof    #38                 // class scalaz/Free$Suspend
     150: ifeq          189
     153: aload         11
     155: checkcast     #38                 // class scalaz/Free$Suspend
     158: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     161: astore        16
     163: new           #943                // class scala/Tuple2
     166: dup
     167: aload         16
     169: aload         12
     171: invokespecial #946                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     174: astore        21
     176: aload_0
     177: aload_2
     178: aload_3
     179: aload         21
     181: invokestatic  #912                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldRight$4:(Lscalaz/FreeFoldable;Lscala/Function0;Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
     184: astore        9
     186: goto          246
     189: aload         11
     191: instanceof    #35                 // class scalaz/Free$Return
     194: ifeq          236
     197: aload         11
     199: checkcast     #35                 // class scalaz/Free$Return
     202: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     205: astore        17
     207: aload         12
     209: aload         17
     211: invokeinterface #951,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     216: checkcast     #32                 // class scalaz/Free
     219: aload         5
     221: aload         6
     223: aload         7
     225: astore        7
     227: astore        6
     229: astore        5
     231: astore        4
     233: goto          41
     236: new           #953                // class scala/MatchError
     239: dup
     240: aload         11
     242: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     245: athrow
     246: aload         9
     248: astore        8
     250: goto          324
     253: aload         4
     255: instanceof    #38                 // class scalaz/Free$Suspend
     258: ifeq          284
     261: aload         4
     263: checkcast     #38                 // class scalaz/Free$Suspend
     266: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     269: astore        18
     271: aload_0
     272: aload_2
     273: aload_3
     274: aload         18
     276: invokestatic  #904                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldRight$3:(Lscalaz/FreeFoldable;Lscala/Function0;Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
     279: astore        8
     281: goto          324
     284: aload         4
     286: instanceof    #35                 // class scalaz/Free$Return
     289: ifeq          314
     292: aload         4
     294: checkcast     #35                 // class scalaz/Free$Return
     297: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     300: astore        19
     302: aload_3
     303: aload_2
     304: aload         19
     306: invokestatic  #885                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldRight$2:(Lscala/Function2;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
     309: astore        8
     311: goto          324
     314: new           #953                // class scala/MatchError
     317: dup
     318: aload         4
     320: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     323: athrow
     324: aload         8
     326: areturn

  public final java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/Free
       4: aload_3
       5: aload_2
       6: invokedynamic #981,  0            // InvokeDynamic #4:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokedynamic #989,  0            // InvokeDynamic #5:apply:(Lscalaz/FreeFoldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Function1;
      19: aload_0
      20: aload_2
      21: aload_3
      22: invokedynamic #995,  0            // InvokeDynamic #6:apply:(Lscalaz/FreeFoldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Function1;
      27: astore        7
      29: astore        6
      31: astore        5
      33: dup
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: astore        4
      41: aload         4
      43: instanceof    #30                 // class scalaz/Free$Gosub
      46: ifeq          253
      49: aload         4
      51: checkcast     #30                 // class scalaz/Free$Gosub
      54: astore        10
      56: aload         10
      58: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      61: astore        11
      63: aload         10
      65: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      68: astore        12
      70: aload         11
      72: instanceof    #30                 // class scalaz/Free$Gosub
      75: ifeq          145
      78: aload         11
      80: checkcast     #30                 // class scalaz/Free$Gosub
      83: astore        13
      85: aload         13
      87: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      90: astore        14
      92: aload         13
      94: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      97: astore        15
      99: aload         14
     101: aload         15
     103: aload         12
     105: invokedynamic #934,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
     110: astore        20
     112: ifnonnull     117
     115: aconst_null
     116: athrow
     117: new           #30                 // class scalaz/Free$Gosub
     120: dup
     121: aload         14
     123: aload         20
     125: invokespecial #938                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
     128: aload         5
     130: aload         6
     132: aload         7
     134: astore        7
     136: astore        6
     138: astore        5
     140: astore        4
     142: goto          41
     145: aload         11
     147: instanceof    #38                 // class scalaz/Free$Suspend
     150: ifeq          189
     153: aload         11
     155: checkcast     #38                 // class scalaz/Free$Suspend
     158: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     161: astore        16
     163: new           #943                // class scala/Tuple2
     166: dup
     167: aload         16
     169: aload         12
     171: invokespecial #946                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     174: astore        21
     176: aload_0
     177: aload_2
     178: aload_3
     179: aload         21
     181: invokestatic  #993                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldLeft$3:(Lscalaz/FreeFoldable;Ljava/lang/Object;Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
     184: astore        9
     186: goto          246
     189: aload         11
     191: instanceof    #35                 // class scalaz/Free$Return
     194: ifeq          236
     197: aload         11
     199: checkcast     #35                 // class scalaz/Free$Return
     202: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     205: astore        17
     207: aload         12
     209: aload         17
     211: invokeinterface #951,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     216: checkcast     #32                 // class scalaz/Free
     219: aload         5
     221: aload         6
     223: aload         7
     225: astore        7
     227: astore        6
     229: astore        5
     231: astore        4
     233: goto          41
     236: new           #953                // class scala/MatchError
     239: dup
     240: aload         11
     242: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     245: athrow
     246: aload         9
     248: astore        8
     250: goto          324
     253: aload         4
     255: instanceof    #38                 // class scalaz/Free$Suspend
     258: ifeq          284
     261: aload         4
     263: checkcast     #38                 // class scalaz/Free$Suspend
     266: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     269: astore        18
     271: aload_0
     272: aload_2
     273: aload_3
     274: aload         18
     276: invokestatic  #985                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldLeft$2:(Lscalaz/FreeFoldable;Ljava/lang/Object;Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
     279: astore        8
     281: goto          324
     284: aload         4
     286: instanceof    #35                 // class scalaz/Free$Return
     289: ifeq          314
     292: aload         4
     294: checkcast     #35                 // class scalaz/Free$Return
     297: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     300: astore        19
     302: aload_3
     303: aload_2
     304: aload         19
     306: invokestatic  #977                // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldLeft$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     309: astore        8
     311: goto          324
     314: new           #953                // class scala/MatchError
     317: dup
     318: aload         4
     320: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     323: athrow
     324: aload         8
     326: areturn

  public final java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/Free
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokedynamic #1017,  0           // InvokeDynamic #7:apply:(Lscalaz/FreeFoldable;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokedynamic #1023,  0           // InvokeDynamic #8:apply:(Lscalaz/FreeFoldable;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
      20: astore        6
      22: astore        5
      24: dup
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: astore        4
      32: aload         4
      34: instanceof    #30                 // class scalaz/Free$Gosub
      37: ifeq          236
      40: aload         4
      42: checkcast     #30                 // class scalaz/Free$Gosub
      45: astore        9
      47: aload         9
      49: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      52: astore        10
      54: aload         9
      56: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      59: astore        11
      61: aload         10
      63: instanceof    #30                 // class scalaz/Free$Gosub
      66: ifeq          132
      69: aload         10
      71: checkcast     #30                 // class scalaz/Free$Gosub
      74: astore        12
      76: aload         12
      78: invokevirtual #921                // Method scalaz/Free$Gosub.a0:()Lscalaz/Free;
      81: astore        13
      83: aload         12
      85: invokevirtual #925                // Method scalaz/Free$Gosub.f0:()Lscala/Function1;
      88: astore        14
      90: aload         13
      92: aload         14
      94: aload         11
      96: invokedynamic #934,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
     101: astore        19
     103: ifnonnull     108
     106: aconst_null
     107: athrow
     108: new           #30                 // class scalaz/Free$Gosub
     111: dup
     112: aload         13
     114: aload         19
     116: invokespecial #938                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
     119: aload         5
     121: aload         6
     123: astore        6
     125: astore        5
     127: astore        4
     129: goto          32
     132: aload         10
     134: instanceof    #38                 // class scalaz/Free$Suspend
     137: ifeq          176
     140: aload         10
     142: checkcast     #38                 // class scalaz/Free$Suspend
     145: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     148: astore        15
     150: new           #943                // class scala/Tuple2
     153: dup
     154: aload         15
     156: aload         11
     158: invokespecial #946                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     161: astore        20
     163: aload_0
     164: aload_2
     165: aload_3
     166: aload         20
     168: invokestatic  #1021               // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldMap$4:(Lscalaz/FreeFoldable;Lscala/Function1;Lscalaz/Monoid;Lscala/Tuple2;)Ljava/lang/Object;
     171: astore        8
     173: goto          229
     176: aload         10
     178: instanceof    #35                 // class scalaz/Free$Return
     181: ifeq          219
     184: aload         10
     186: checkcast     #35                 // class scalaz/Free$Return
     189: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     192: astore        16
     194: aload         11
     196: aload         16
     198: invokeinterface #951,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     203: checkcast     #32                 // class scalaz/Free
     206: aload         5
     208: aload         6
     210: astore        6
     212: astore        5
     214: astore        4
     216: goto          32
     219: new           #953                // class scala/MatchError
     222: dup
     223: aload         10
     225: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     228: athrow
     229: aload         8
     231: astore        7
     233: goto          308
     236: aload         4
     238: instanceof    #38                 // class scalaz/Free$Suspend
     241: ifeq          267
     244: aload         4
     246: checkcast     #38                 // class scalaz/Free$Suspend
     249: invokevirtual #941                // Method scalaz/Free$Suspend.a:()Ljava/lang/Object;
     252: astore        17
     254: aload_0
     255: aload_2
     256: aload_3
     257: aload         17
     259: invokestatic  #1013               // InterfaceMethod scalaz/FreeFoldable.$anonfun$foldMap$3:(Lscalaz/FreeFoldable;Lscala/Function1;Lscalaz/Monoid;Ljava/lang/Object;)Ljava/lang/Object;
     262: astore        7
     264: goto          308
     267: aload         4
     269: instanceof    #35                 // class scalaz/Free$Return
     272: ifeq          298
     275: aload         4
     277: checkcast     #35                 // class scalaz/Free$Return
     280: invokevirtual #947                // Method scalaz/Free$Return.a:()Ljava/lang/Object;
     283: astore        18
     285: aload_2
     286: aload         18
     288: invokeinterface #951,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     293: astore        7
     295: goto          308
     298: new           #953                // class scala/MatchError
     301: dup
     302: aload         4
     304: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     307: athrow
     308: aload         7
     310: areturn

  public final java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/Free
       4: aload_0
       5: invokeinterface #1039,  1         // InterfaceMethod scalaz/FreeTraverse.F:()Lscalaz/Traverse;
      10: invokevirtual #1043               // Method scalaz/Free.resume:(Lscalaz/Functor;)Lscalaz/$bslash$div;
      13: astore        5
      15: aload         5
      17: instanceof    #1045               // class scalaz/$minus$bslash$div
      20: ifeq          71
      23: aload         5
      25: checkcast     #1045               // class scalaz/$minus$bslash$div
      28: invokevirtual #1046               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      31: astore        6
      33: aload_3
      34: aload_0
      35: invokeinterface #1039,  1         // InterfaceMethod scalaz/FreeTraverse.F:()Lscalaz/Traverse;
      40: aload         6
      42: aload_0
      43: aload_2
      44: aload_3
      45: invokedynamic #1056,  0           // InvokeDynamic #9:apply:(Lscalaz/FreeTraverse;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      50: aload_3
      51: invokeinterface #1058,  4         // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      56: invokedynamic #1064,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
      61: invokeinterface #1068,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      66: astore        4
      68: goto          123
      71: aload         5
      73: instanceof    #1070               // class scalaz/$bslash$div$minus
      76: ifeq          113
      79: aload         5
      81: checkcast     #1070               // class scalaz/$bslash$div$minus
      84: invokevirtual #1072               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      87: astore        7
      89: aload_3
      90: aload_2
      91: aload         7
      93: invokeinterface #951,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      98: invokedynamic #1077,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     103: invokeinterface #1068,  3         // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     108: astore        4
     110: goto          123
     113: new           #953                // class scala/MatchError
     116: dup
     117: aload         5
     119: invokespecial #956                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     122: athrow
     123: aload         4
     125: areturn

  public final java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/Free
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_2
      12: invokedynamic #1090,  0           // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: new           #30                 // class scalaz/Free$Gosub
      22: dup
      23: aload_3
      24: aload         4
      26: invokespecial #938                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      29: areturn

  public scalaz.Foldable F();
    Code:
       0: aload_0
       1: invokevirtual #1094               // Method F:()Lscalaz/Traverse;
       4: areturn

  public scalaz.FreeInstances1$$anon$6(scalaz.FreeInstances1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #876                // Field evidence$3$1:Lscalaz/Traverse;
       5: aload_0
       6: invokespecial #1099               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1103               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #1106               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #1109               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      21: aload_0
      22: invokestatic  #1112               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      25: aload_0
      26: invokestatic  #1115               // InterfaceMethod scalaz/FreeFoldable.$init$:(Lscalaz/FreeFoldable;)V
      29: aload_0
      30: invokestatic  #1118               // InterfaceMethod scalaz/FreeTraverse.$init$:(Lscalaz/FreeTraverse;)V
      33: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1131,  0           // InvokeDynamic #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
