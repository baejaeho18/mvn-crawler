Compiled from "Map.scala"
public final class scalaz.MapInstances$$anon$6 implements scalaz.Traverse<?> {
  private final scalaz.syntax.TraverseSyntax<?> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<?>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #112                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<?>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #129                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #138                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #146                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #160                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #167                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #174                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #195                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #202                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #209                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #221                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #227                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #231                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #235                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #241                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #249                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #253                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<?>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #260                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #266                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #295                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #303                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #310                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #318                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #330                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #335                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #340                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #345                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #363                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #369                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #375                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #387                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #391                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #395                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #399                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #405                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #409                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #415                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #429                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #448                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #460                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #466                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #471                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #475                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #481                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #487                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #494                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #498                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #508                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #513                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #518                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #523                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #528                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #533                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #537                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #541                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #545                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #551                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #558                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #562                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #566                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #571                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #578                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #585                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #592                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #599                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #612                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #619                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #623                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #629                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #635                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #640                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #647                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #655                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #662                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #668                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.$eq$eq$greater$greater<S, A>, scalaz.$eq$eq$greater$greater<S, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #675                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #680                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #685                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #689                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #694                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #702                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #708                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #714                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #722                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #728                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #731                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #738                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #746                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #753                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #769                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.TraverseSyntax<?> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #773                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #773                // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #781                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #781                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #788                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #788                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #795                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #795                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.Option<A> findLeft(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
       4: ifeq          127
       7: aload_1
       8: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      11: astore        5
      13: aload         5
      15: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      18: astore        6
      20: aload         5
      22: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      25: astore        7
      27: aload         5
      29: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      32: astore        8
      34: aload_0
      35: aload         7
      37: aload_2
      38: invokevirtual #813                // Method findLeft:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      41: astore        9
      43: aload         9
      45: instanceof    #815                // class scala/Some
      48: ifeq          61
      51: aload         9
      53: checkcast     #815                // class scala/Some
      56: astore        4
      58: goto          121
      61: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
      64: aload         9
      66: invokevirtual #824                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          111
      72: aload_2
      73: aload         6
      75: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      80: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      83: ifeq          98
      86: new           #815                // class scala/Some
      89: dup
      90: aload         6
      92: invokespecial #837                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      95: goto          106
      98: aload         8
     100: aload_2
     101: astore_2
     102: astore_1
     103: goto          0
     106: astore        4
     108: goto          121
     111: new           #839                // class scala/MatchError
     114: dup
     115: aload         9
     117: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow
     121: aload         4
     123: astore_3
     124: goto          150
     127: aload_1
     128: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
     131: ifeq          141
     134: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
     137: astore_3
     138: goto          150
     141: new           #839                // class scala/MatchError
     144: dup
     145: aload_1
     146: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     149: athrow
     150: aload_3
     151: areturn

  public <A> scala.Option<A> findRight(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
       4: ifeq          127
       7: aload_1
       8: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      11: astore        5
      13: aload         5
      15: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      18: astore        6
      20: aload         5
      22: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      25: astore        7
      27: aload         5
      29: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      32: astore        8
      34: aload_0
      35: aload         8
      37: aload_2
      38: invokevirtual #846                // Method findRight:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      41: astore        9
      43: aload         9
      45: instanceof    #815                // class scala/Some
      48: ifeq          61
      51: aload         9
      53: checkcast     #815                // class scala/Some
      56: astore        4
      58: goto          121
      61: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
      64: aload         9
      66: invokevirtual #824                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          111
      72: aload_2
      73: aload         6
      75: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      80: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      83: ifeq          98
      86: new           #815                // class scala/Some
      89: dup
      90: aload         6
      92: invokespecial #837                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      95: goto          106
      98: aload         7
     100: aload_2
     101: astore_2
     102: astore_1
     103: goto          0
     106: astore        4
     108: goto          121
     111: new           #839                // class scala/MatchError
     114: dup
     115: aload         9
     117: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow
     121: aload         4
     123: astore_3
     124: goto          150
     127: aload_1
     128: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
     131: ifeq          141
     134: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
     137: astore_3
     138: goto          150
     141: new           #839                // class scala/MatchError
     144: dup
     145: aload_1
     146: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     149: athrow
     150: aload_3
     151: areturn

  public <A, B> scalaz.$eq$eq$greater$greater<S, B> map(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #852                // Method scalaz/$eq$eq$greater$greater.map:(Lscala/Function1;)Lscalaz/$eq$eq$greater$greater;
       5: areturn

  public <A, B> B foldMap(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          18
       7: aload_3
       8: invokeinterface #860,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      13: astore        4
      15: goto          92
      18: aload_1
      19: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      22: ifeq          83
      25: aload_1
      26: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      29: astore        5
      31: aload         5
      33: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      36: astore        6
      38: aload         5
      40: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      43: astore        7
      45: aload         5
      47: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      50: astore        8
      52: aload_3
      53: aload_0
      54: aload         7
      56: aload_2
      57: aload_3
      58: invokevirtual #862                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      61: aload_0
      62: aload_3
      63: aload_2
      64: aload         6
      66: aload         8
      68: invokedynamic #882,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;)Lscala/Function0;
      73: invokeinterface #886,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      78: astore        4
      80: goto          92
      83: new           #839                // class scala/MatchError
      86: dup
      87: aload_1
      88: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: aload         4
      94: areturn

  public <A, B> B foldRight(scalaz.$eq$eq$greater$greater<S, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #893,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_3
       8: invokedynamic #903,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function3;
      13: invokevirtual #907                // Method scalaz/$eq$eq$greater$greater.foldrWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      16: areturn

  public <A, B> B foldLeft(scalaz.$eq$eq$greater$greater<S, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokedynamic #915,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function3;
       8: invokevirtual #918                // Method scalaz/$eq$eq$greater$greater.foldlWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      11: areturn

  public <A> scala.Option<A> index(scalaz.$eq$eq$greater$greater<S, A>, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #925                // Method scalaz/$eq$eq$greater$greater.elemAt:(I)Lscala/Option;
       5: invokedynamic #936,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      10: invokevirtual #939                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      13: areturn

  public <F, A, B> F traverseImpl(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, F>, scalaz.Applicative<F>);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          23
       7: aload_3
       8: invokedynamic #950,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
      13: invokeinterface #956,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      18: astore        4
      20: goto          119
      23: aload_1
      24: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      27: ifeq          110
      30: aload_1
      31: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      34: astore        5
      36: aload         5
      38: invokevirtual #959                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      48: astore        7
      50: aload         5
      52: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      55: astore        8
      57: aload         5
      59: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      62: astore        9
      64: aload_3
      65: aload_0
      66: aload         8
      68: aload_2
      69: aload_3
      70: invokedynamic #967,  0            // InvokeDynamic #5:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      75: aload_2
      76: aload         7
      78: invokedynamic #975,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      83: aload_0
      84: aload         9
      86: aload_2
      87: aload_3
      88: invokedynamic #980,  0            // InvokeDynamic #7:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      93: aload         6
      95: invokedynamic #990,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function3;
     100: invokeinterface #994,  5          // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     105: astore        4
     107: goto          119
     110: new           #839                // class scala/MatchError
     113: dup
     114: aload_1
     115: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload         4
     121: areturn

  public <A> int length(scalaz.$eq$eq$greater$greater<S, A>);
    Code:
       0: aload_1
       1: invokevirtual #1002               // Method scalaz/$eq$eq$greater$greater.size:()I
       4: ireturn

  public <A> boolean any(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          12
       7: iconst_0
       8: istore_3
       9: goto          92
      12: aload_1
      13: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      16: ifeq          83
      19: aload_1
      20: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      23: astore        4
      25: aload         4
      27: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      30: astore        5
      32: aload         4
      34: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      37: astore        6
      39: aload         4
      41: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      44: astore        7
      46: aload_0
      47: aload         6
      49: aload_2
      50: invokevirtual #1007               // Method any:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      53: ifne          78
      56: aload_2
      57: aload         5
      59: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      64: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      67: ifne          78
      70: aload         7
      72: aload_2
      73: astore_2
      74: astore_1
      75: goto          0
      78: iconst_1
      79: istore_3
      80: goto          92
      83: new           #839                // class scala/MatchError
      86: dup
      87: aload_1
      88: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: iload_3
      93: ireturn

  public <A> boolean all(scalaz.$eq$eq$greater$greater<S, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          92
      12: aload_1
      13: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      16: ifeq          83
      19: aload_1
      20: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      23: astore        4
      25: aload         4
      27: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      30: astore        5
      32: aload         4
      34: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      37: astore        6
      39: aload         4
      41: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      44: astore        7
      46: aload_0
      47: aload         6
      49: aload_2
      50: invokevirtual #1010               // Method all:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      53: ifeq          78
      56: aload_2
      57: aload         5
      59: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      64: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      67: ifeq          78
      70: aload         7
      72: aload_2
      73: astore_2
      74: astore_1
      75: goto          0
      78: iconst_0
      79: istore_3
      80: goto          92
      83: new           #839                // class scala/MatchError
      86: dup
      87: aload_1
      88: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: iload_3
      93: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore_3
       5: aload_3
       6: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       9: ifeq          18
      12: iconst_1
      13: istore        4
      15: goto          97
      18: aload_3
      19: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      22: ifeq          88
      25: aload_3
      26: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      29: astore        5
      31: aload         5
      33: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      36: astore        6
      38: aload         5
      40: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      43: astore        7
      45: aload         5
      47: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      50: astore        8
      52: aload_0
      53: aload         7
      55: aload_2
      56: invokevirtual #1010               // Method all:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      59: ifeq          82
      62: aload_2
      63: aload         6
      65: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      73: ifeq          82
      76: aload         8
      78: astore_3
      79: goto          5
      82: iconst_0
      83: istore        4
      85: goto          97
      88: new           #839                // class scala/MatchError
      91: dup
      92: aload_3
      93: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: iload         4
      99: ireturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore_3
       5: aload_3
       6: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       9: ifeq          18
      12: iconst_0
      13: istore        4
      15: goto          97
      18: aload_3
      19: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      22: ifeq          88
      25: aload_3
      26: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      29: astore        5
      31: aload         5
      33: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      36: astore        6
      38: aload         5
      40: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      43: astore        7
      45: aload         5
      47: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      50: astore        8
      52: aload_0
      53: aload         7
      55: aload_2
      56: invokevirtual #1007               // Method any:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Z
      59: ifne          82
      62: aload_2
      63: aload         6
      65: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      73: ifne          82
      76: aload         8
      78: astore_3
      79: goto          5
      82: iconst_1
      83: istore        4
      85: goto          97
      88: new           #839                // class scala/MatchError
      91: dup
      92: aload_3
      93: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: iload         4
      99: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       5: invokevirtual #1021               // Method length:(Lscalaz/$eq$eq$greater$greater;)I
       8: ireturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore        4
       6: aload         4
       8: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
      11: ifeq          30
      14: aload_3
      15: invokedynamic #950,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
      20: invokeinterface #956,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      25: astore        5
      27: goto          129
      30: aload         4
      32: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      35: ifeq          119
      38: aload         4
      40: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      43: astore        6
      45: aload         6
      47: invokevirtual #959                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      50: astore        7
      52: aload         6
      54: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      57: astore        8
      59: aload         6
      61: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      64: astore        9
      66: aload         6
      68: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      71: astore        10
      73: aload_3
      74: aload_0
      75: aload         9
      77: aload_2
      78: aload_3
      79: invokedynamic #967,  0            // InvokeDynamic #5:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      84: aload_2
      85: aload         8
      87: invokedynamic #975,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      92: aload_0
      93: aload         10
      95: aload_2
      96: aload_3
      97: invokedynamic #980,  0            // InvokeDynamic #7:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
     102: aload         7
     104: invokedynamic #990,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function3;
     109: invokeinterface #994,  5          // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     114: astore        5
     116: goto          129
     119: new           #839                // class scala/MatchError
     122: dup
     123: aload         4
     125: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     128: athrow
     129: aload         5
     131: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       5: iload_2
       6: invokevirtual #1029               // Method index:(Lscalaz/$eq$eq$greater$greater;I)Lscala/Option;
       9: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: aload_2
       5: aload_3
       6: invokedynamic #915,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function3;
      11: invokevirtual #918                // Method scalaz/$eq$eq$greater$greater.foldlWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      14: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: aload_2
       5: invokeinterface #893,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: aload_3
      11: invokedynamic #903,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function3;
      16: invokevirtual #907                // Method scalaz/$eq$eq$greater$greater.foldrWithKey:(Ljava/lang/Object;Lscala/Function3;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore        4
       6: aload         4
       8: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
      11: ifeq          25
      14: aload_3
      15: invokeinterface #860,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      20: astore        5
      22: goto          102
      25: aload         4
      27: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      30: ifeq          92
      33: aload         4
      35: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      38: astore        6
      40: aload         6
      42: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      45: astore        7
      47: aload         6
      49: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      52: astore        8
      54: aload         6
      56: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      59: astore        9
      61: aload_3
      62: aload_0
      63: aload         8
      65: aload_2
      66: aload_3
      67: invokevirtual #862                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      70: aload_0
      71: aload_3
      72: aload_2
      73: aload         7
      75: aload         9
      77: invokedynamic #882,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;)Lscala/Function0;
      82: invokeinterface #886,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      87: astore        5
      89: goto          102
      92: new           #839                // class scala/MatchError
      95: dup
      96: aload         4
      98: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow
     102: aload         5
     104: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: aload_2
       5: invokevirtual #852                // Method scalaz/$eq$eq$greater$greater.map:(Lscala/Function1;)Lscalaz/$eq$eq$greater$greater;
       8: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore_3
       5: aload_3
       6: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
       9: ifeq          131
      12: aload_3
      13: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      16: astore        6
      18: aload         6
      20: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      23: astore        7
      25: aload         6
      27: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      30: astore        8
      32: aload         6
      34: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      37: astore        9
      39: aload_0
      40: aload         9
      42: aload_2
      43: invokevirtual #846                // Method findRight:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      46: astore        10
      48: aload         10
      50: instanceof    #815                // class scala/Some
      53: ifeq          66
      56: aload         10
      58: checkcast     #815                // class scala/Some
      61: astore        5
      63: goto          124
      66: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
      69: aload         10
      71: invokevirtual #824                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          114
      77: aload_2
      78: aload         7
      80: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      88: ifeq          103
      91: new           #815                // class scala/Some
      94: dup
      95: aload         7
      97: invokespecial #837                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     100: goto          109
     103: aload         8
     105: astore_3
     106: goto          5
     109: astore        5
     111: goto          124
     114: new           #839                // class scala/MatchError
     117: dup
     118: aload         10
     120: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow
     124: aload         5
     126: astore        4
     128: goto          155
     131: aload_3
     132: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
     135: ifeq          146
     138: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
     141: astore        4
     143: goto          155
     146: new           #839                // class scala/MatchError
     149: dup
     150: aload_3
     151: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     154: athrow
     155: aload         4
     157: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/$eq$eq$greater$greater
       4: astore_3
       5: aload_3
       6: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
       9: ifeq          131
      12: aload_3
      13: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      16: astore        6
      18: aload         6
      20: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      23: astore        7
      25: aload         6
      27: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      30: astore        8
      32: aload         6
      34: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      37: astore        9
      39: aload_0
      40: aload         8
      42: aload_2
      43: invokevirtual #813                // Method findLeft:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;)Lscala/Option;
      46: astore        10
      48: aload         10
      50: instanceof    #815                // class scala/Some
      53: ifeq          66
      56: aload         10
      58: checkcast     #815                // class scala/Some
      61: astore        5
      63: goto          124
      66: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
      69: aload         10
      71: invokevirtual #824                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          114
      77: aload_2
      78: aload         7
      80: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      85: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      88: ifeq          103
      91: new           #815                // class scala/Some
      94: dup
      95: aload         7
      97: invokespecial #837                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     100: goto          109
     103: aload         9
     105: astore_3
     106: goto          5
     109: astore        5
     111: goto          124
     114: new           #839                // class scala/MatchError
     117: dup
     118: aload         10
     120: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow
     124: aload         5
     126: astore        4
     128: goto          155
     131: aload_3
     132: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
     135: ifeq          146
     138: getstatic     #821                // Field scala/None$.MODULE$:Lscala/None$;
     141: astore        4
     143: goto          155
     146: new           #839                // class scala/MatchError
     149: dup
     150: aload_3
     151: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     154: athrow
     155: aload         4
     157: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          18
       7: aload_3
       8: invokeinterface #860,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      13: astore        4
      15: goto          92
      18: aload_1
      19: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      22: ifeq          83
      25: aload_1
      26: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      29: astore        5
      31: aload         5
      33: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      36: astore        6
      38: aload         5
      40: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      43: astore        7
      45: aload         5
      47: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      50: astore        8
      52: aload_3
      53: aload_0
      54: aload         7
      56: aload_2
      57: aload_3
      58: invokevirtual #862                // Method foldMap:(Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      61: aload_0
      62: aload_3
      63: aload_2
      64: aload         6
      66: aload         8
      68: invokedynamic #882,  0            // InvokeDynamic #0:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;)Lscala/Function0;
      73: invokeinterface #886,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      78: astore        4
      80: goto          92
      83: new           #839                // class scala/MatchError
      86: dup
      87: aload_1
      88: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: aload         4
      94: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.MapInstances$$anon$6, scalaz.Monoid, scala.Function1, java.lang.Object, scalaz.$eq$eq$greater$greater);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_0
       9: aload         4
      11: aload_2
      12: aload_1
      13: invokedynamic #1056,  0           // InvokeDynamic #9:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      18: invokeinterface #886,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      23: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokedynamic #1067,  0           // InvokeDynamic #10:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #1071,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldLeft$1(scala.Function2, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #1071,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$index$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1079               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.$eq$eq$greater$greater $anonfun$traverseImpl$1();
    Code:
       0: getstatic     #1083               // Field scalaz/$eq$eq$greater$greater$Tip$.MODULE$:Lscalaz/$eq$eq$greater$greater$Tip$;
       3: invokevirtual #1085               // Method scalaz/$eq$eq$greater$greater$Tip$.apply:()Lscalaz/$eq$eq$greater$greater;
       6: areturn

  public static final java.lang.Object $anonfun$traverseImpl$2(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          23
       7: aload_3
       8: invokedynamic #950,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
      13: invokeinterface #956,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      18: astore        4
      20: goto          119
      23: aload_1
      24: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      27: ifeq          110
      30: aload_1
      31: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      34: astore        5
      36: aload         5
      38: invokevirtual #959                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      48: astore        7
      50: aload         5
      52: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      55: astore        8
      57: aload         5
      59: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      62: astore        9
      64: aload_3
      65: aload_0
      66: aload         8
      68: aload_2
      69: aload_3
      70: invokedynamic #967,  0            // InvokeDynamic #5:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      75: aload_2
      76: aload         7
      78: invokedynamic #975,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      83: aload_0
      84: aload         9
      86: aload_2
      87: aload_3
      88: invokedynamic #980,  0            // InvokeDynamic #7:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      93: aload         6
      95: invokedynamic #990,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function3;
     100: invokeinterface #994,  5          // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     105: astore        4
     107: goto          119
     110: new           #839                // class scala/MatchError
     113: dup
     114: aload_1
     115: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload         4
     121: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #828,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(scalaz.MapInstances$$anon$6, scalaz.$eq$eq$greater$greater, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: instanceof    #30                 // class scalaz/$eq$eq$greater$greater$Tip
       4: ifeq          23
       7: aload_3
       8: invokedynamic #950,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
      13: invokeinterface #956,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      18: astore        4
      20: goto          119
      23: aload_1
      24: instanceof    #25                 // class scalaz/$eq$eq$greater$greater$Bin
      27: ifeq          110
      30: aload_1
      31: checkcast     #25                 // class scalaz/$eq$eq$greater$greater$Bin
      34: astore        5
      36: aload         5
      38: invokevirtual #959                // Method scalaz/$eq$eq$greater$greater$Bin.k:()Ljava/lang/Object;
      41: astore        6
      43: aload         5
      45: invokevirtual #805                // Method scalaz/$eq$eq$greater$greater$Bin.v:()Ljava/lang/Object;
      48: astore        7
      50: aload         5
      52: invokevirtual #809                // Method scalaz/$eq$eq$greater$greater$Bin.l:()Lscalaz/$eq$eq$greater$greater;
      55: astore        8
      57: aload         5
      59: invokevirtual #811                // Method scalaz/$eq$eq$greater$greater$Bin.r:()Lscalaz/$eq$eq$greater$greater;
      62: astore        9
      64: aload_3
      65: aload_0
      66: aload         8
      68: aload_2
      69: aload_3
      70: invokedynamic #967,  0            // InvokeDynamic #5:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      75: aload_2
      76: aload         7
      78: invokedynamic #975,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      83: aload_0
      84: aload         9
      86: aload_2
      87: aload_3
      88: invokedynamic #980,  0            // InvokeDynamic #7:apply:(Lscalaz/MapInstances$$anon$6;Lscalaz/$eq$eq$greater$greater;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      93: aload         6
      95: invokedynamic #990,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function3;
     100: invokeinterface #994,  5          // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     105: astore        4
     107: goto          119
     110: new           #839                // class scala/MatchError
     113: dup
     114: aload_1
     115: invokespecial #840                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload         4
     121: areturn

  public static final scalaz.$eq$eq$greater$greater$Bin $anonfun$traverseImpl$5(java.lang.Object, scalaz.$eq$eq$greater$greater, java.lang.Object, scalaz.$eq$eq$greater$greater);
    Code:
       0: new           #25                 // class scalaz/$eq$eq$greater$greater$Bin
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: aload_3
       8: invokespecial #1097               // Method scalaz/$eq$eq$greater$greater$Bin."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/$eq$eq$greater$greater;Lscalaz/$eq$eq$greater$greater;)V
      11: areturn

  public scalaz.MapInstances$$anon$6(scalaz.MapInstances);
    Code:
       0: aload_0
       1: invokespecial #1102               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1106               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #1109               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #1112               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #1115               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1128,  0           // InvokeDynamic #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
