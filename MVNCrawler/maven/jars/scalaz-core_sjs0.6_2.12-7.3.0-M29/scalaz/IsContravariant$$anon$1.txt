Compiled from "IsContravariant.scala"
public final class scalaz.IsContravariant$$anon$1 implements scalaz.syntax.IsContravariantSyntax<F> {
  private final scalaz.IsContravariant $outer;

  public <A> scalaz.syntax.IsContravariantOps<F, A> ToIsContravariantOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // InterfaceMethod scalaz/syntax/IsContravariantSyntax.ToIsContravariantOps$:(Lscalaz/syntax/IsContravariantSyntax;Ljava/lang/Object;)Lscalaz/syntax/IsContravariantOps;
       5: areturn

  public scalaz.IsContravariant<F> F();
    Code:
       0: aload_0
       1: getfield      #28                 // Field $outer:Lscalaz/IsContravariant;
       4: areturn

  public scalaz.IsContravariant$$anon$1(scalaz.IsContravariant<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #28                 // Field $outer:Lscalaz/IsContravariant;
      11: aload_0
      12: invokespecial #34                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #38                 // InterfaceMethod scalaz/syntax/IsContravariantSyntax.$init$:(Lscalaz/syntax/IsContravariantSyntax;)V
      19: return
}
