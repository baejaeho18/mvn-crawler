Compiled from "Order.scala"
public interface scalaz.Order$OrderLaw extends scalaz.Equal<F>.EqualLaw {
  public static boolean antisymmetric$(scalaz.Order$OrderLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #33                 // InterfaceMethod antisymmetric:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean antisymmetric(F, F);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
       6: aload_1
       7: aload_2
       8: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      13: invokevirtual #48                 // Method scalaz/Ordering.complement:()Lscalaz/Ordering;
      16: aload_0
      17: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
      22: aload_2
      23: aload_1
      24: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      29: astore_3
      30: dup
      31: ifnonnull     42
      34: pop
      35: aload_3
      36: ifnull        49
      39: goto          51
      42: aload_3
      43: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: iconst_1
      50: ireturn
      51: iconst_0
      52: ireturn

  public static boolean transitiveOrder$(scalaz.Order$OrderLaw, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #60                 // InterfaceMethod transitiveOrder:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public default boolean transitiveOrder(F, F, F);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
       6: aload_1
       7: aload_2
       8: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      13: astore        4
      15: getstatic     #67                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
      18: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: invokevirtual #76                 // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
      24: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: iconst_2
      28: anewarray     #23                 // class scalaz/Ordering
      31: dup
      32: iconst_0
      33: aload         4
      35: aastore
      36: dup
      37: iconst_1
      38: getstatic     #79                 // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      41: aastore
      42: checkcast     #81                 // class "[Ljava/lang/Object;"
      45: invokevirtual #85                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      48: invokevirtual #91                 // Method scala/collection/immutable/Set$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      51: checkcast     #93                 // class scala/collection/GenSetLike
      54: aload_0
      55: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
      60: aload_2
      61: aload_3
      62: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      67: invokeinterface #95,  2           // InterfaceMethod scala/collection/GenSetLike.apply:(Ljava/lang/Object;)Z
      72: istore        5
      74: ifnonnull     79
      77: aconst_null
      78: athrow
      79: iload         5
      81: ifeq          95
      84: aload_0
      85: aload_1
      86: aload_3
      87: aload         4
      89: invokestatic  #99                 // InterfaceMethod $anonfun$transitiveOrder$1:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Ordering;)Z
      92: ifeq          97
      95: iconst_1
      96: ireturn
      97: iconst_0
      98: ireturn

  public static boolean orderAndEqualConsistent$(scalaz.Order$OrderLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #107                // InterfaceMethod orderAndEqualConsistent:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean orderAndEqualConsistent(F, F);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
       6: aload_1
       7: aload_2
       8: invokeinterface #110,  3          // InterfaceMethod scalaz/Order.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: aload_0
      14: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
      19: aload_1
      20: aload_2
      21: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      26: getstatic     #79                 // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      29: astore_3
      30: dup
      31: ifnonnull     42
      34: pop
      35: aload_3
      36: ifnull        49
      39: goto          53
      42: aload_3
      43: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: if_icmpne     59
      57: iconst_1
      58: ireturn
      59: iconst_0
      60: ireturn

  public abstract scalaz.Order scalaz$Order$OrderLaw$$$outer();

  public static boolean $anonfun$transitiveOrder$1(scalaz.Order$OrderLaw, java.lang.Object, java.lang.Object, scalaz.Ordering);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod scalaz$Order$OrderLaw$$$outer:()Lscalaz/Order;
       6: aload_1
       7: aload_2
       8: invokeinterface #44,  3           // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      13: dup
      14: ifnonnull     25
      17: pop
      18: aload_3
      19: ifnull        32
      22: goto          34
      25: aload_3
      26: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: iconst_0
      35: ireturn

  public static void $init$(scalaz.Order<F>.OrderLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #129,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
