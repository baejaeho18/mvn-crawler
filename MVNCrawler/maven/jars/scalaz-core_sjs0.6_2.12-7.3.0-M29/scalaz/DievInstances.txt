Compiled from "Diev.scala"
public abstract class scalaz.DievInstances implements scalaz.DievImplementation {
  private volatile scalaz.DievImplementation$DieVector$ DieVector$module;

  public scalaz.DievImplementation$DieVector$ DieVector();
    Code:
       0: aload_0
       1: getfield      #28                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #32                 // Method DieVector$lzycompute$1:()V
      11: aload_0
      12: getfield      #28                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
      15: areturn

  public <A> scalaz.Equal<scalaz.Diev<A>> dievEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #44                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: invokedynamic #67,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       8: getstatic     #72                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: getstatic     #77                 // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      14: aload_1
      15: aload_1
      16: invokevirtual #81                 // Method scalaz/std/tuple$.tuple2Equal:(Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      19: invokevirtual #84                 // Method scalaz/std/vector$.vectorEqual:(Lscalaz/Equal;)Lscalaz/Equal;
      22: astore_3
      23: astore_2
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: aload_3
      30: aload_2
      31: invokeinterface #90,  2           // InterfaceMethod scalaz/Equal.contramap:(Lscala/Function1;)Lscalaz/Equal;
      36: areturn

  public <A> scalaz.Monoid<scalaz.Diev<A>> dievMonoid(scalaz.Enum<A>);
    Code:
       0: new           #20                 // class scalaz/DievInstances$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #104                // Method scalaz/DievInstances$$anon$1."<init>":(Lscalaz/DievInstances;Lscalaz/Enum;)V
       9: areturn

  public <A> scalaz.Show<scalaz.Diev<A>> dievShow(scalaz.Show<A>);
    Code:
       0: new           #22                 // class scalaz/DievInstances$$anon$2
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #112                // Method scalaz/DievInstances$$anon$2."<init>":(Lscalaz/DievInstances;Lscalaz/Show;)V
       9: areturn

  private final void DieVector$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #28                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
       6: ifnonnull     21
       9: aload_0
      10: new           #17                 // class scalaz/DievImplementation$DieVector$
      13: dup
      14: aload_0
      15: invokespecial #116                // Method scalaz/DievImplementation$DieVector$."<init>":(Lscalaz/DievImplementation;)V
      18: putfield      #28                 // Field DieVector$module:Lscalaz/DievImplementation$DieVector$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  public static final scala.collection.immutable.Vector $anonfun$dievEqual$1(scalaz.Diev);
    Code:
       0: aload_0
       1: invokevirtual #125                // Method scalaz/Diev.intervals:()Lscala/collection/immutable/Vector;
       4: areturn

  public scalaz.DievInstances();
    Code:
       0: aload_0
       1: invokespecial #128                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #131                // InterfaceMethod scalaz/DievImplementation.$init$:(Lscalaz/DievImplementation;)V
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #143,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
