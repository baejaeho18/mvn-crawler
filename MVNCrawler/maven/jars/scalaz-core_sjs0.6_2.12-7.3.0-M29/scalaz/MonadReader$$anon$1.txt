Compiled from "MonadReader.scala"
public final class scalaz.MonadReader$$anon$1 implements scalaz.MonadReader<F, S>.MonadReaderLaw {
  private final scalaz.MonadReader $outer;

  public <A> boolean localPoint(scala.Function1<S, S>, A, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #56                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.localPoint$:(Lscalaz/MonadReader$MonadReaderLaw;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A> boolean localComposition(scala.Function1<S, S>, scala.Function1<S, S>, F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #70                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.localComposition$:(Lscalaz/MonadReader$MonadReaderLaw;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public boolean localFAsk(scala.Function1<S, S>, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.localFAsk$:(Lscalaz/MonadReader$MonadReaderLaw;Lscala/Function1;Lscalaz/Equal;)Z
       6: ireturn

  public boolean askIdempotence(scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.askIdempotence$:(Lscalaz/MonadReader$MonadReaderLaw;Lscalaz/Equal;)Z
       5: ireturn

  public <A> boolean askFALeft(F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.askFALeft$:(Lscalaz/MonadReader$MonadReaderLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A> boolean askFARight(F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.askFARight$:(Lscalaz/MonadReader$MonadReaderLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A> boolean rightIdentity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Monad$MonadLaw.rightIdentity$:(Lscalaz/Monad$MonadLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B> boolean leftIdentity(A, scala.Function1<A, java.lang.Object>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #110                // InterfaceMethod scalaz/Monad$MonadLaw.leftIdentity$:(Lscalaz/Monad$MonadLaw;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B, C> boolean associativeBind(java.lang.Object, scala.Function1<A, java.lang.Object>, scala.Function1<B, java.lang.Object>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #118                // InterfaceMethod scalaz/Bind$BindLaw.associativeBind$:(Lscalaz/Bind$BindLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
       9: ireturn

  public <A, B> boolean apLikeDerived(java.lang.Object, java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #125                // InterfaceMethod scalaz/Bind$BindLaw.apLikeDerived$:(Lscalaz/Bind$BindLaw;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A> boolean identityAp(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/Applicative$ApplicativeLaw.identityAp$:(Lscalaz/Applicative$ApplicativeLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B> boolean homomorphism(scala.Function1<A, B>, A, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #137                // InterfaceMethod scalaz/Applicative$ApplicativeLaw.homomorphism$:(Lscalaz/Applicative$ApplicativeLaw;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B> boolean interchange(java.lang.Object, A, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #143                // InterfaceMethod scalaz/Applicative$ApplicativeLaw.interchange$:(Lscalaz/Applicative$ApplicativeLaw;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B> boolean mapLikeDerived(scala.Function1<A, B>, java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #148                // InterfaceMethod scalaz/Applicative$ApplicativeLaw.mapLikeDerived$:(Lscalaz/Applicative$ApplicativeLaw;Lscala/Function1;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public <A, B, C> boolean composition(java.lang.Object, java.lang.Object, java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #157                // InterfaceMethod scalaz/Apply$ApplyLaw.composition$:(Lscalaz/Apply$ApplyLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean identity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #162                // InterfaceMethod scalaz/Functor$FunctorLaw.identity$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean composite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, C>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #170                // InterfaceMethod scalaz/Functor$FunctorLaw.composite$:(Lscalaz/Functor$FunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
       9: ireturn

  public <A> boolean invariantIdentity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #175                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantIdentity$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean invariantComposite(java.lang.Object, scala.Function1<A, B>, scala.Function1<B, A>, scala.Function1<B, C>, scala.Function1<C, B>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #184                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.invariantComposite$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
      13: ireturn

  public scalaz.MonadReader scalaz$MonadReader$MonadReaderLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.Monad scalaz$Monad$MonadLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.Bind scalaz$Bind$BindLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.Applicative scalaz$Applicative$ApplicativeLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.Apply scalaz$Apply$ApplyLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.Functor scalaz$Functor$FunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.InvariantFunctor scalaz$InvariantFunctor$InvariantFunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #188                // Field $outer:Lscalaz/MonadReader;
       4: areturn

  public scalaz.MonadReader$$anon$1(scalaz.MonadReader<F, S>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #188                // Field $outer:Lscalaz/MonadReader;
      11: aload_0
      12: invokespecial #206                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #210                // InterfaceMethod scalaz/InvariantFunctor$InvariantFunctorLaw.$init$:(Lscalaz/InvariantFunctor$InvariantFunctorLaw;)V
      19: aload_0
      20: invokestatic  #213                // InterfaceMethod scalaz/Functor$FunctorLaw.$init$:(Lscalaz/Functor$FunctorLaw;)V
      23: aload_0
      24: invokestatic  #216                // InterfaceMethod scalaz/Apply$ApplyLaw.$init$:(Lscalaz/Apply$ApplyLaw;)V
      27: aload_0
      28: invokestatic  #219                // InterfaceMethod scalaz/Applicative$ApplicativeLaw.$init$:(Lscalaz/Applicative$ApplicativeLaw;)V
      31: aload_0
      32: invokestatic  #222                // InterfaceMethod scalaz/Bind$BindLaw.$init$:(Lscalaz/Bind$BindLaw;)V
      35: aload_0
      36: invokestatic  #225                // InterfaceMethod scalaz/Monad$MonadLaw.$init$:(Lscalaz/Monad$MonadLaw;)V
      39: aload_0
      40: invokestatic  #228                // InterfaceMethod scalaz/MonadReader$MonadReaderLaw.$init$:(Lscalaz/MonadReader$MonadReaderLaw;)V
      43: return
}
