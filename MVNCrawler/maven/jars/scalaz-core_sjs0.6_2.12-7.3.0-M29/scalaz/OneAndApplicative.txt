Compiled from "OneAnd.scala"
public interface scalaz.OneAndApplicative<F> extends scalaz.Applicative<?>, scalaz.OneAndApply<F> {
  public abstract scalaz.Applicative<F> F();

  public abstract scalaz.PlusEmpty<F> G();

  public static scalaz.OneAnd point$(scalaz.OneAndApplicative, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // InterfaceMethod point:(Lscala/Function0;)Lscalaz/OneAnd;
       5: areturn

  public default <A> scalaz.OneAnd<F, A> point(scala.Function0<A>);
    Code:
       0: getstatic     #36                 // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_1
       4: invokeinterface #42,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: aload_0
      10: invokeinterface #44,  1           // InterfaceMethod G:()Lscalaz/PlusEmpty;
      15: invokeinterface #49,  1           // InterfaceMethod scalaz/PlusEmpty.empty:()Ljava/lang/Object;
      20: invokevirtual #52                 // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      23: areturn

  public static void $init$(scalaz.OneAndApplicative);
    Code:
       0: return
}
