Compiled from "Compose.scala"
public final class scalaz.Compose$$anon$2 implements scalaz.Compose<$eq$greater$colon>.ComposeSemigroup<A> {
  private final scalaz.syntax.SemigroupSyntax<$eq$greater$colon> semigroupSyntax;

  private final scalaz.Compose $outer;

  public $eq$greater$colon append($eq$greater$colon, scala.Function0<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #33                 // InterfaceMethod scalaz/Compose$ComposeSemigroup.append$:(Lscalaz/Compose$ComposeSemigroup;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public $eq$greater$colon multiply1($eq$greater$colon, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #46                 // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<$eq$greater$colon> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, $eq$greater$colon>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<$eq$greater$colon> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<$eq$greater$colon, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<$eq$greater$colon>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #83                 // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemigroupSyntax<$eq$greater$colon> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #87                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Compose scalaz$Compose$ComposeSemigroup$$$outer();
    Code:
       0: aload_0
       1: getfield      #94                 // Field $outer:Lscalaz/Compose;
       4: areturn

  public scalaz.Compose$$anon$2(scalaz.Compose<$eq$greater$colon>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #94                 // Field $outer:Lscalaz/Compose;
      11: aload_0
      12: invokespecial #100                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #104                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: aload_0
      20: invokestatic  #107                // InterfaceMethod scalaz/Compose$ComposeSemigroup.$init$:(Lscalaz/Compose$ComposeSemigroup;)V
      23: return
}
