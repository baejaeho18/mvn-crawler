Compiled from "MonoidCoproduct.scala"
public final class scalaz.$colon$plus$colon$$anon$1 implements scalaz.Monoid<scalaz.$colon$plus$colon<M, N>> {
  private final scalaz.$colon$plus$colon<M, N> zero;

  private final scalaz.syntax.MonoidSyntax<scalaz.$colon$plus$colon<M, N>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.$colon$plus$colon<M, N>> semigroupSyntax;

  private final scalaz.Monoid evidence$14$1;

  private final scalaz.Monoid evidence$15$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #41                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #53                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #62                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #71                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #75                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.$colon$plus$colon<M, N>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #113                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$colon$plus$colon<M, N>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.$colon$plus$colon<M, N>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.$colon$plus$colon<M, N>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.$colon$plus$colon<M, N>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.$colon$plus$colon<M, N>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #146                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.$colon$plus$colon<M, N>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #150                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.$colon$plus$colon<M, N>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.$colon$plus$colon<M, N>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #158                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.$colon$plus$colon<M, N>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #158                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.$colon$plus$colon<M, N> zero();
    Code:
       0: aload_0
       1: getfield      #165                // Field zero:Lscalaz/$colon$plus$colon;
       4: areturn

  public scalaz.$colon$plus$colon<M, N> append(scalaz.$colon$plus$colon<M, N>, scala.Function0<scalaz.$colon$plus$colon<M, N>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #174,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #176                // class scalaz/$colon$plus$colon
      10: aload_0
      11: getfield      #178                // Field evidence$14$1:Lscalaz/Monoid;
      14: aload_0
      15: getfield      #180                // Field evidence$15$1:Lscalaz/Monoid;
      18: invokevirtual #184                // Method scalaz/$colon$plus$colon.$bar$plus$bar:(Lscalaz/$colon$plus$colon;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/$colon$plus$colon;
      21: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #176                // class scalaz/$colon$plus$colon
       4: aload_2
       5: invokeinterface #174,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #176                // class scalaz/$colon$plus$colon
      13: aload_0
      14: getfield      #178                // Field evidence$14$1:Lscalaz/Monoid;
      17: aload_0
      18: getfield      #180                // Field evidence$15$1:Lscalaz/Monoid;
      21: invokevirtual #184                // Method scalaz/$colon$plus$colon.$bar$plus$bar:(Lscalaz/$colon$plus$colon;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/$colon$plus$colon;
      24: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #189                // Method zero:()Lscalaz/$colon$plus$colon;
       4: areturn

  public scalaz.$colon$plus$colon$$anon$1(scalaz.Monoid, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #178                // Field evidence$14$1:Lscalaz/Monoid;
       5: aload_0
       6: aload_2
       7: putfield      #180                // Field evidence$15$1:Lscalaz/Monoid;
      10: aload_0
      11: invokespecial #194                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #198                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #201                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      22: aload_0
      23: getstatic     #205                // Field scalaz/$colon$plus$colon$.MODULE$:Lscalaz/$colon$plus$colon$;
      26: invokevirtual #208                // Method scalaz/$colon$plus$colon$.empty:()Lscalaz/$colon$plus$colon;
      29: putfield      #165                // Field zero:Lscalaz/$colon$plus$colon;
      32: return
}
