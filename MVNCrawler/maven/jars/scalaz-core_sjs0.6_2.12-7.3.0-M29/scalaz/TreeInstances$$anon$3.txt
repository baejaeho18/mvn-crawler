Compiled from "Tree.scala"
public final class scalaz.TreeInstances$$anon$3 implements scalaz.Order<scalaz.Tree<A>>, scalaz.TreeEqual<A> {
  private final scalaz.syntax.OrderSyntax<scalaz.Tree<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.Tree<A>> equalSyntax;

  private final scalaz.TreeInstances $outer;

  private final scalaz.Order A0$2;

  public final boolean equal(scalaz.Tree<A>, scalaz.Tree<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // InterfaceMethod scalaz/TreeEqual.equal$:(Lscalaz/TreeEqual;Lscalaz/Tree;Lscalaz/Tree;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #85                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.Tree<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.Tree<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.Tree<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.Tree<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Tree<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.Tree<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #141                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.Tree<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #141                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.Tree<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #149                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Tree<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #149                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> A();
    Code:
       0: aload_0
       1: getfield      #156                // Field A0$2:Lscalaz/Order;
       4: areturn

  public scalaz.Ordering order(scalaz.Tree<A>, scalaz.Tree<A>);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method A:()Lscalaz/Order;
       4: aload_1
       5: invokevirtual #167                // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #167                // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      12: invokeinterface #169,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      17: astore        4
      19: getstatic     #173                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      22: aload         4
      24: invokevirtual #177                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          76
      30: getstatic     #182                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      33: getstatic     #187                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      36: aload_0
      37: getfield      #189                // Field $outer:Lscalaz/TreeInstances;
      40: aload_0
      41: getfield      #156                // Field A0$2:Lscalaz/Order;
      44: invokevirtual #190                // Method scalaz/TreeInstances.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
      47: invokevirtual #193                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
      50: astore        5
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: aload         5
      59: aload_1
      60: invokevirtual #197                // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      63: aload_2
      64: invokevirtual #197                // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      67: invokeinterface #169,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      72: astore_3
      73: goto          79
      76: aload         4
      78: astore_3
      79: aload_3
      80: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #22                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #202                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public final boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #163                // class scalaz/Tree
       5: aload_2
       6: checkcast     #163                // class scalaz/Tree
       9: invokevirtual #204                // Method equal:(Lscalaz/Tree;Lscalaz/Tree;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #163                // class scalaz/Tree
       5: aload_2
       6: checkcast     #163                // class scalaz/Tree
       9: invokevirtual #206                // Method order:(Lscalaz/Tree;Lscalaz/Tree;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal A();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method A:()Lscalaz/Order;
       4: areturn

  public scalaz.TreeInstances$$anon$3(scalaz.TreeInstances, scalaz.Order);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #189                // Field $outer:Lscalaz/TreeInstances;
      11: aload_0
      12: aload_2
      13: putfield      #156                // Field A0$2:Lscalaz/Order;
      16: aload_0
      17: invokespecial #211                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #215                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      24: aload_0
      25: invokestatic  #218                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      28: aload_0
      29: invokestatic  #221                // InterfaceMethod scalaz/TreeEqual.$init$:(Lscalaz/TreeEqual;)V
      32: return
}
