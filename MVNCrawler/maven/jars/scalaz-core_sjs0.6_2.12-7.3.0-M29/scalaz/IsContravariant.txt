Compiled from "IsContravariant.scala"
public interface scalaz.IsContravariant<F> {
  public static <F> scalaz.IsContravariant<F> force();
    Code:
       0: getstatic     #20                 // Field scalaz/IsContravariant$.MODULE$:Lscalaz/IsContravariant$;
       3: invokevirtual #22                 // Method scalaz/IsContravariant$.force:()Lscalaz/IsContravariant;
       6: areturn

  public static <F> scalaz.IsContravariant<F> scalaContravariant();
    Code:
       0: getstatic     #20                 // Field scalaz/IsContravariant$.MODULE$:Lscalaz/IsContravariant$;
       3: invokevirtual #25                 // Method scalaz/IsContravariant$.scalaContravariant:()Lscalaz/IsContravariant;
       6: areturn

  public static <F> scalaz.IsContravariant<F> apply(scalaz.IsContravariant<F>);
    Code:
       0: getstatic     #20                 // Field scalaz/IsContravariant$.MODULE$:Lscalaz/IsContravariant$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: areturn

  public abstract void scalaz$IsContravariant$_setter_$isContravariantSyntax_$eq(scalaz.syntax.IsContravariantSyntax<F>);

  public abstract <A, B> scalaz.Liskov<F, F> liftLiskovCt(scalaz.Liskov<A, B>);

  public static java.lang.Object substCo$(scalaz.IsContravariant, java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #45                 // InterfaceMethod substCo:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public default <G, A, B> G substCo(G, scalaz.Liskov<A, B>);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #51,  2           // InterfaceMethod liftLiskovCt:(Lscalaz/Liskov;)Lscalaz/Liskov;
       7: aload_1
       8: invokevirtual #56                 // Method scalaz/Liskov.substCo:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static java.lang.Object substCt$(scalaz.IsContravariant, java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #61                 // InterfaceMethod substCt:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public default <G, A, B> G substCt(G, scalaz.Liskov<A, B>);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #51,  2           // InterfaceMethod liftLiskovCt:(Lscalaz/Liskov;)Lscalaz/Liskov;
       7: aload_1
       8: invokevirtual #63                 // Method scalaz/Liskov.substCt:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static java.lang.Object narrow$(scalaz.IsContravariant, java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #68                 // InterfaceMethod narrow:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F narrow(F, scalaz.Liskov<A, B>);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #51,  2           // InterfaceMethod liftLiskovCt:(Lscalaz/Liskov;)Lscalaz/Liskov;
       7: aload_1
       8: invokevirtual #71                 // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public abstract scalaz.syntax.IsContravariantSyntax<F> isContravariantSyntax();

  public static void $init$(scalaz.IsContravariant);
    Code:
       0: aload_0
       1: new           #11                 // class scalaz/IsContravariant$$anon$1
       4: dup
       5: aload_0
       6: invokespecial #79                 // Method scalaz/IsContravariant$$anon$1."<init>":(Lscalaz/IsContravariant;)V
       9: invokeinterface #81,  2           // InterfaceMethod scalaz$IsContravariant$_setter_$isContravariantSyntax_$eq:(Lscalaz/syntax/IsContravariantSyntax;)V
      14: return
}
