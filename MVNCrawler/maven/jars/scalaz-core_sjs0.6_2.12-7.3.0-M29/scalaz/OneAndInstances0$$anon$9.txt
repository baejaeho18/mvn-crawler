Compiled from "OneAnd.scala"
public final class scalaz.OneAndInstances0$$anon$9 implements scalaz.OneAndFoldable1<F> {
  private final scalaz.syntax.Foldable1Syntax<?> foldable1Syntax;

  private final scalaz.syntax.FoldableSyntax<?> foldableSyntax;

  private final scalaz.Foldable1 evidence$13$1;

  public <A, B> B foldMap1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #64                 // InterfaceMethod scalaz/OneAndFoldable1.foldMap1$:(Lscalaz/OneAndFoldable1;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public <A, B> B foldMapRight1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #77                 // InterfaceMethod scalaz/OneAndFoldable1.foldMapRight1$:(Lscalaz/OneAndFoldable1;Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A> scala.Option<A> findLeft(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/OneAndFoldable.findLeft$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <A> scala.Option<A> findRight(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/OneAndFoldable.findRight$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public <A, B> B foldMapLeft1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #97                 // InterfaceMethod scalaz/OneAndFoldable.foldMapLeft1$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A, B> B foldMap(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #105                // InterfaceMethod scalaz/OneAndFoldable.foldMap$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public <A, B> B foldRight(scalaz.OneAnd<F, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #113                // InterfaceMethod scalaz/OneAndFoldable.foldRight$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A, B> B foldLeft(scalaz.OneAnd<F, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #121                // InterfaceMethod scalaz/OneAndFoldable.foldLeft$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> traverseS_(scalaz.OneAnd<F, A>, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #129                // InterfaceMethod scalaz/OneAndFoldable.traverseS_$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public <A> int length(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod scalaz/OneAndFoldable.length$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)I
       5: ireturn

  public <A> scala.Option<A> index(scalaz.OneAnd<F, A>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #144                // InterfaceMethod scalaz/OneAndFoldable.index$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;I)Lscala/Option;
       6: areturn

  public <A> scala.collection.immutable.Vector<A> toVector(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // InterfaceMethod scalaz/OneAndFoldable.toVector$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/collection/immutable/Vector;
       5: areturn

  public <A> scala.collection.immutable.List<A> toList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // InterfaceMethod scalaz/OneAndFoldable.toList$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/collection/immutable/List;
       5: areturn

  public <A> scalaz.IList<A> toIList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod scalaz/OneAndFoldable.toIList$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscalaz/IList;
       5: areturn

  public <A> scala.collection.immutable.Set<A> toSet(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod scalaz/OneAndFoldable.toSet$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/collection/immutable/Set;
       5: areturn

  public <A> scala.collection.immutable.Stream<A> toStream(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #180                // InterfaceMethod scalaz/OneAndFoldable.toStream$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/collection/immutable/Stream;
       5: areturn

  public <A> scalaz.EphemeralStream<A> toEphemeralStream(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod scalaz/OneAndFoldable.toEphemeralStream$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscalaz/EphemeralStream;
       5: areturn

  public <A> boolean all(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #194                // InterfaceMethod scalaz/OneAndFoldable.all$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public <A> boolean any(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/OneAndFoldable.any$:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #217                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #223                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #227                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #233                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #239                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #249                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #253                // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #257                // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #265                // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #272                // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #280                // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #285                // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #290                // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #295                // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #300                // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #307                // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #314                // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #319                // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #329                // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #334                // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #341                // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #347                // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #352                // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #356                // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #363                // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #370                // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #374                // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #381                // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #388                // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #395                // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #402                // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #415                // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #428                // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #432                // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<?>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #439                // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #444                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #451                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #454                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #457                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #463                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #470                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #477                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #483                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #489                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #495                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #502                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #509                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #516                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #523                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #529                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #535                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #541                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #545                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #551                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #555                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #561                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #567                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #574                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #579                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #583                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #589                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #594                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #599                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #603                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #607                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #611                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #615                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #619                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #625                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #632                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #636                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #640                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #646                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #653                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #660                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #666                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #672                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #679                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #683                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #689                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #695                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #700                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #706                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<?>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #714                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public scalaz.syntax.Foldable1Syntax<?> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #718                // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #718                // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.FoldableSyntax<?> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #726                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #726                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.Foldable1<F> F();
    Code:
       0: getstatic     #737                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #739                // Field evidence$13$1:Lscalaz/Foldable1;
       7: invokevirtual #743                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class scalaz/Foldable1
      13: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      10: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #760                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifne          40
      21: aload_0
      22: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      27: aload_3
      28: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      31: aload_2
      32: invokeinterface #768,  3          // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iconst_0
      43: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      10: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #760                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifeq          42
      21: aload_0
      22: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      27: aload_3
      28: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      31: aload_2
      32: invokeinterface #771,  3          // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iconst_0
      43: ireturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #775                // Method toEphemeralStream:(Lscalaz/OneAnd;)Lscalaz/EphemeralStream;
       8: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #778                // Method toStream:(Lscalaz/OneAnd;)Lscala/collection/immutable/Stream;
       8: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #781                // Method toSet:(Lscalaz/OneAnd;)Lscala/collection/immutable/Set;
       8: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #784                // Method toIList:(Lscalaz/OneAnd;)Lscalaz/IList;
       8: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #787                // Method toList:(Lscalaz/OneAnd;)Lscala/collection/immutable/List;
       8: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #790                // Method toVector:(Lscalaz/OneAnd;)Lscala/collection/immutable/Vector;
       8: areturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: iload_2
       6: invokevirtual #793                // Method index:(Lscalaz/OneAnd;I)Lscala/Option;
       9: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #746                // class scalaz/OneAnd
       5: invokevirtual #795                // Method length:(Lscalaz/OneAnd;)I
       8: ireturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore_3
       5: getstatic     #799                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       8: aload_0
       9: aload_3
      10: aload_2
      11: invokedynamic #821,  0            // InvokeDynamic #0:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscala/Function1;
      16: astore        4
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: getstatic     #824                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: getstatic     #829                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: new           #35                 // class scalaz/IndexedStateT$Wrap
      42: dup
      43: aload         4
      45: invokespecial #833                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      48: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_0
       7: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      12: aload         4
      14: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      17: aload_3
      18: aload_2
      19: aload         4
      21: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      24: invokeinterface #841,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: aload_3
      30: invokeinterface #843,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      35: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_3
       7: aload         4
       9: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      12: aload_0
      13: aload         4
      15: aload_2
      16: aload_3
      17: invokedynamic #854,  0            // InvokeDynamic #1:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      22: invokeinterface #841,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_3
       7: aload_2
       8: aload         4
      10: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      13: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_0
      19: aload         4
      21: aload_2
      22: aload_3
      23: invokedynamic #863,  0            // InvokeDynamic #2:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      28: invokeinterface #869,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      33: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_0
       7: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      12: aload         4
      14: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      17: aload_2
      18: aload         4
      20: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      23: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_3
      29: invokeinterface #843,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      34: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore_3
       5: aload_0
       6: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      11: aload_3
      12: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: aload_2
      16: invokeinterface #874,  3          // InterfaceMethod scalaz/Foldable.findRight:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      21: astore        5
      23: aload         5
      25: instanceof    #876                // class scala/Some
      28: ifeq          41
      31: aload         5
      33: checkcast     #876                // class scala/Some
      36: astore        4
      38: goto          100
      41: getstatic     #881                // Field scala/None$.MODULE$:Lscala/None$;
      44: aload         5
      46: invokevirtual #884                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          90
      52: aload_2
      53: aload_3
      54: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      57: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: invokestatic  #760                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      65: ifeq          82
      68: new           #876                // class scala/Some
      71: dup
      72: aload_3
      73: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      76: invokespecial #887                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      79: goto          85
      82: getstatic     #881                // Field scala/None$.MODULE$:Lscala/None$;
      85: astore        4
      87: goto          100
      90: new           #889                // class scala/MatchError
      93: dup
      94: aload         5
      96: invokespecial #890                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      99: athrow
     100: aload         4
     102: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      10: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #760                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifeq          33
      21: new           #876                // class scala/Some
      24: dup
      25: aload_3
      26: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      29: invokespecial #887                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      32: areturn
      33: aload_0
      34: invokeinterface #763,  1          // InterfaceMethod scalaz/OneAndFoldable.F:()Lscalaz/Foldable;
      39: aload_3
      40: invokevirtual #766                // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      43: aload_2
      44: invokeinterface #895,  3          // InterfaceMethod scalaz/Foldable.findLeft:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      49: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_3
       7: aload         4
       9: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      12: aload_0
      13: aload         4
      15: aload_2
      16: aload_3
      17: invokedynamic #903,  0            // InvokeDynamic #3:apply:(Lscalaz/OneAndFoldable1;Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Lscala/Function0;
      22: invokeinterface #841,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_1
       1: checkcast     #746                // class scalaz/OneAnd
       4: astore        4
       6: aload_3
       7: aload_2
       8: aload         4
      10: invokevirtual #750                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      13: invokeinterface #755,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_0
      19: aload         4
      21: aload_2
      22: aload_3
      23: invokedynamic #912,  0            // InvokeDynamic #4:apply:(Lscalaz/OneAndFoldable1;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Function0;
      28: invokeinterface #915,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      33: areturn

  public scalaz.Foldable F();
    Code:
       0: aload_0
       1: invokevirtual #918                // Method F:()Lscalaz/Foldable1;
       4: areturn

  public scalaz.OneAndInstances0$$anon$9(scalaz.OneAndInstances0, scalaz.Foldable1);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #739                // Field evidence$13$1:Lscalaz/Foldable1;
       5: aload_0
       6: invokespecial #923                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #927                // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      13: aload_0
      14: invokestatic  #930                // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      17: aload_0
      18: invokestatic  #933                // InterfaceMethod scalaz/OneAndFoldable.$init$:(Lscalaz/OneAndFoldable;)V
      21: aload_0
      22: invokestatic  #936                // InterfaceMethod scalaz/OneAndFoldable1.$init$:(Lscalaz/OneAndFoldable1;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #949,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
