Compiled from "UnwriterT.scala"
public final class scalaz.UnwriterT<F, U, A> implements scala.Product, scala.Serializable {
  private final F run;

  public static <F, U, A> scala.Option<F> unapply(scalaz.UnwriterT<F, U, A>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #33                 // Method scalaz/UnwriterT$.unapply:(Lscalaz/UnwriterT;)Lscala/Option;
       7: areturn

  public static <F, U, A> scalaz.UnwriterT<F, U, A> apply(F);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #38                 // Method scalaz/UnwriterT$.apply:(Ljava/lang/Object;)Lscalaz/UnwriterT;
       7: areturn

  public static <F, W, A> scalaz.UnwriterT<F, W, A> unputWith(F, scala.Function1<A, W>, scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/UnwriterT
      11: dup
      12: aload_2
      13: aload_0
      14: aload_1
      15: invokedynamic #67,  0             // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      20: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: invokespecial #77                 // Method "<init>":(Ljava/lang/Object;)V
      28: areturn

  public static <F, W, A> scalaz.UnwriterT<F, W, A> unput(F, W, scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #82                 // Method scalaz/UnwriterT$.unput:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/UnwriterT;
       9: areturn

  public static <W> scalaz.UnwriterT<java.lang.Object, W, scala.runtime.BoxedUnit> tell(W);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #86                 // Method scalaz/UnwriterT$.tell:(Ljava/lang/Object;)Lscalaz/UnwriterT;
       7: areturn

  public static <W, A> scalaz.UnwriterT<java.lang.Object, W, A> unwriter(scala.Tuple2<W, A>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #92                 // Method scalaz/UnwriterT$.unwriter:(Lscala/Tuple2;)Lscalaz/UnwriterT;
       7: areturn

  public static <F, W, A> scalaz.UnwriterT<F, W, A> unwriterT(F);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
       7: areturn

  public static <W, A> scalaz.Equal<scalaz.UnwriterT<java.lang.Object, W, A>> unwriterEqual(scalaz.Equal<W>, scalaz.Equal<A>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #103                // Method scalaz/UnwriterT$.unwriterEqual:(Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       8: areturn

  public static <F, W> scalaz.Traverse<?> unwriterTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #109                // Method scalaz/UnwriterT$.unwriterTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static <W> scalaz.Comonad<?> unwriterComonad();
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: invokevirtual #114                // Method scalaz/UnwriterT$.unwriterComonad:()Lscalaz/Comonad;
       6: areturn

  public static <F> scalaz.Bitraverse<?> unwriterTBitraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #119                // Method scalaz/UnwriterT$.unwriterTBitraverse:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       7: areturn

  public static <F, W, A> scalaz.Equal<scalaz.UnwriterT<F, W, A>> unwriterTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #125                // Method scalaz/UnwriterT$.unwriterTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F, W> scalaz.Foldable<?> unwriterTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #130                // Method scalaz/UnwriterT$.unwriterTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F, W> scalaz.Bind<?> unwriterTBind(scalaz.Bind<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #135                // Method scalaz/UnwriterT$.unwriterTBind:(Lscalaz/Bind;)Lscalaz/Bind;
       7: areturn

  public static <F> scalaz.Bifunctor<?> unwriterTBifunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #140                // Method scalaz/UnwriterT$.unwriterTBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
       7: areturn

  public static <F, W> scalaz.Apply<?> unwriterTApply(scalaz.Apply<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #145                // Method scalaz/UnwriterT$.unwriterTApply:(Lscalaz/Apply;)Lscalaz/Apply;
       7: areturn

  public static <F, W> scalaz.Functor<?> unwriterTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #150                // Method scalaz/UnwriterT$.unwriterTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #154                // Field run:Ljava/lang/Object;
       4: areturn

  public scalaz.WriterT<U, F, A> on();
    Code:
       0: new           #161                // class scalaz/WriterT
       3: dup
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: invokespecial #164                // Method scalaz/WriterT."<init>":(Ljava/lang/Object;)V
      11: areturn

  public scalaz.WriterT<U, F, A> unary_$plus();
    Code:
       0: new           #161                // class scalaz/WriterT
       3: dup
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: invokespecial #164                // Method scalaz/WriterT."<init>":(Ljava/lang/Object;)V
      11: areturn

  public <X, B> scalaz.UnwriterT<F, X, B> mapValue(scala.Function1<scala.Tuple2<U, A>, scala.Tuple2<X, B>>, scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      17: areturn

  public <X> scalaz.UnwriterT<F, X, A> mapUnwritten(scala.Function1<U, X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #181,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
      10: aload_2
      11: aload_0
      12: invokevirtual #163                // Method run:()Ljava/lang/Object;
      15: aload_3
      16: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      24: areturn

  public F unwritten(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #163                // Method run:()Ljava/lang/Object;
       5: invokedynamic #194,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      10: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F value(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #163                // Method run:()Ljava/lang/Object;
       5: invokedynamic #199,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      10: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public scalaz.UnwriterT<F, A, U> swap(scalaz.Functor<F>);
    Code:
       0: invokedynamic #207,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       5: astore_2
       6: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       9: aload_1
      10: aload_0
      11: invokevirtual #163                // Method run:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      23: areturn

  public <B> scalaz.UnwriterT<F, U, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: invokedynamic #213,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
      14: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      22: areturn

  public <G, V, B> scalaz.UnwriterT<G, V, B> mapT(scala.Function1<F, G>);
    Code:
       0: new           #2                  // class scalaz/UnwriterT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #163                // Method run:()Ljava/lang/Object;
       9: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #77                 // Method "<init>":(Ljava/lang/Object;)V
      17: areturn

  public <B> scalaz.UnwriterT<F, U, B> ap(scala.Function0<scalaz.UnwriterT<F, U, scala.Function1<A, B>>>, scalaz.Apply<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_2
       4: aload_1
       5: invokedynamic #233,  0            // InvokeDynamic #6:apply:(Lscala/Function0;)Lscala/Function0;
      10: aload_0
      11: invokedynamic #241,  0            // InvokeDynamic #7:apply:(Lscalaz/UnwriterT;)Lscala/Function0;
      16: invokedynamic #252,  0            // InvokeDynamic #8:apply:()Lscala/Function2;
      21: invokeinterface #258,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      26: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      29: areturn

  public <B> scalaz.UnwriterT<F, U, B> flatMap(scala.Function1<A, scalaz.UnwriterT<F, U, B>>, scalaz.Bind<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokedynamic #271,  0            // InvokeDynamic #9:apply:(Lscala/Function1;Lscalaz/Bind;)Lscala/Function1;
      15: invokeinterface #276,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      23: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Traverse<F>);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: invokevirtual #163                // Method run:()Ljava/lang/Object;
       6: aload_2
       7: aload_1
       8: invokedynamic #289,  0            // InvokeDynamic #10:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      13: aload_2
      14: invokeinterface #294,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #300,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
      24: invokeinterface #303,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <B> B foldRight(scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #163                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #319,  0            // InvokeDynamic #12:apply:(Lscala/Function2;)Lscala/Function1;
      11: astore        5
      13: astore        4
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_3
      21: aload         4
      23: aload_1
      24: aload         5
      26: invokedynamic #331,  0            // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function2;
      31: invokeinterface #334,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      36: areturn

  public <C, D> scalaz.UnwriterT<F, C, D> bimap(scala.Function1<U, C>, scala.Function1<A, D>, scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_3
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokedynamic #350,  0            // InvokeDynamic #14:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      23: areturn

  public <C> scalaz.UnwriterT<F, C, A> leftMap(scala.Function1<U, C>, scalaz.Functor<F>);
    Code:
       0: invokedynamic #357,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
       5: astore_3
       6: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       9: aload_2
      10: aload_0
      11: invokevirtual #163                // Method run:()Ljava/lang/Object;
      14: aload_1
      15: aload_3
      16: invokedynamic #350,  0            // InvokeDynamic #14:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      21: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      29: areturn

  public <G, C, D> G bitraverse(scala.Function1<U, G>, scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Traverse<F>);
    Code:
       0: aload_3
       1: aload         4
       3: aload_0
       4: invokevirtual #163                // Method run:()Ljava/lang/Object;
       7: aload_3
       8: aload_1
       9: aload_2
      10: invokedynamic #369,  0            // InvokeDynamic #16:apply:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      15: aload_3
      16: invokeinterface #294,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: invokedynamic #374,  0            // InvokeDynamic #17:apply:()Lscala/Function1;
      26: invokeinterface #303,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: areturn

  public <G> scalaz.UnwriterT<F, G, A> wpoint(scalaz.Functor<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_1
       4: aload_0
       5: invokevirtual #163                // Method run:()Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #386,  0            // InvokeDynamic #18:apply:(Lscalaz/Applicative;)Lscala/Function1;
      14: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      22: areturn

  public <X> scalaz.UnwriterT<F, X, A> colocal(scala.Function1<U, X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #181,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
      10: aload_2
      11: aload_0
      12: invokevirtual #163                // Method run:()Ljava/lang/Object;
      15: aload_3
      16: invokeinterface #73,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
      24: areturn

  public <F, U, A> scalaz.UnwriterT<F, U, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/UnwriterT
       3: dup
       4: aload_1
       5: invokespecial #77                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, U, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #395                // String UnwriterT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #163                // Method run:()Ljava/lang/Object;
      24: areturn
      25: new           #402                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #408                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #411                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #414                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #423                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #427                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/UnwriterT
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #423                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #434                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #423                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #438                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/UnwriterT
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/UnwriterT
      27: astore_3
      28: aload_0
      29: invokevirtual #163                // Method run:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #163                // Method run:()Ljava/lang/Object;
      36: invokestatic  #442                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public static final scala.Tuple2 $anonfun$mapUnwritten$1(scala.Function1, scala.Tuple2);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       9: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_1
      15: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn

  public static final java.lang.Object $anonfun$unwritten$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$value$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$swap$1(scala.Tuple2);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
       8: aload_0
       9: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static final scala.Tuple2 $anonfun$map$1(scala.Function1, scala.Tuple2);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_1
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: aload_0
       9: aload_1
      10: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn

  public static final java.lang.Object $anonfun$ap$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #463,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/UnwriterT
       9: invokevirtual #163                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$ap$2(scalaz.UnwriterT);
    Code:
       0: aload_0
       1: invokevirtual #163                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$ap$3(scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: aload_0
      11: astore        4
      13: aload_1
      14: astore        5
      16: aload         4
      18: ifnull        72
      21: aload         4
      23: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
      26: astore        6
      28: aload         4
      30: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: checkcast     #218                // class scala/Function1
      36: astore        7
      38: aload         5
      40: ifnull        72
      43: aload         5
      45: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: astore        8
      50: new           #446                // class scala/Tuple2
      53: dup
      54: aload         6
      56: aload         7
      58: aload         8
      60: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      68: astore_2
      69: goto          81
      72: new           #468                // class scala/MatchError
      75: dup
      76: aload_3
      77: invokespecial #469                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow
      81: aload_2
      82: areturn

  public static final scala.Tuple2 $anonfun$flatMap$2(scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      12: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scala.Function1, scalaz.Bind, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
       5: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/UnwriterT
      13: invokevirtual #163                // Method run:()Ljava/lang/Object;
      16: astore_3
      17: aload_1
      18: aload_3
      19: aload_2
      20: invokedynamic #482,  0            // InvokeDynamic #19:apply:(Lscala/Tuple2;)Lscala/Function1;
      25: invokeinterface #483,  3          // InterfaceMethod scalaz/Bind.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public static final scala.Tuple2 $anonfun$traverse$2(java.lang.Object, java.lang.Object);
    Code:
       0: new           #446                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final java.lang.Object $anonfun$traverse$1(scalaz.Applicative, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        41
       4: aload_2
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: aload_0
      17: aload_1
      18: aload         5
      20: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload         4
      27: invokedynamic #495,  0            // InvokeDynamic #20:apply:(Ljava/lang/Object;)Lscala/Function1;
      32: invokeinterface #303,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      37: astore_3
      38: goto          50
      41: new           #468                // class scala/MatchError
      44: dup
      45: aload_2
      46: invokespecial #469                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_3
      51: areturn

  public static final scalaz.UnwriterT $anonfun$traverse$3(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/UnwriterT
       3: dup
       4: aload_0
       5: invokespecial #77                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final java.lang.Object $anonfun$foldRight$2(scala.Function2, scala.Tuple2, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
       5: aload_2
       6: invokeinterface #504,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static final scala.Function1 $anonfun$foldRight$1(scala.Function2, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #510,  0            // InvokeDynamic #21:apply:(Lscala/Function2;Lscala/Tuple2;)Lscala/Function1;
       7: areturn

  public static final scala.Tuple2 $anonfun$bimap$1(scala.Function1, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        43
       4: aload_2
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: new           #446                // class scala/Tuple2
      19: dup
      20: aload_0
      21: aload         4
      23: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_1
      29: aload         5
      31: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      39: astore_3
      40: goto          52
      43: new           #468                // class scala/MatchError
      46: dup
      47: aload_2
      48: invokespecial #469                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_3
      53: areturn

  public static final java.lang.Object $anonfun$leftMap$1(java.lang.Object);
    Code:
       0: getstatic     #518                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #521                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #220,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$1(scalaz.Applicative, scala.Function1, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        43
       4: aload_3
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        5
      10: aload_3
      11: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        6
      16: aload_0
      17: aload_1
      18: aload         5
      20: invokedynamic #535,  0            // InvokeDynamic #22:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      25: aload_2
      26: aload         6
      28: invokedynamic #539,  0            // InvokeDynamic #23:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      33: invokeinterface #543,  3          // InterfaceMethod scalaz/Applicative.tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      38: astore        4
      40: goto          52
      43: new           #468                // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #469                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload         4
      54: areturn

  public static final scalaz.UnwriterT $anonfun$bitraverse$4(java.lang.Object);
    Code:
       0: getstatic     #31                 // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_0
       4: invokevirtual #96                 // Method scalaz/UnwriterT$.unwriterT:(Ljava/lang/Object;)Lscalaz/UnwriterT;
       7: areturn

  public static final java.lang.Object $anonfun$wpoint$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Tuple2 $anonfun$wpoint$1(scalaz.Applicative, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        40
       4: aload_1
       5: invokevirtual #449                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #452                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #446                // class scala/Tuple2
      18: dup
      19: aload_0
      20: aload_3
      21: invokedynamic #553,  0            // InvokeDynamic #24:apply:(Ljava/lang/Object;)Lscala/Function0;
      26: invokeinterface #556,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      31: aload         4
      33: invokespecial #455                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      36: astore_2
      37: goto          49
      40: new           #468                // class scala/MatchError
      43: dup
      44: aload_1
      45: invokespecial #469                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow
      49: aload_2
      50: areturn

  public scalaz.UnwriterT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #561                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #565                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #577,  0            // InvokeDynamic #25:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
