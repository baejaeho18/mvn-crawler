Compiled from "Free.scala"
public final class scalaz.FreeInstances4$$anon$3 implements scalaz.Comonad<scalaz.Free> {
  private final scalaz.syntax.ComonadSyntax<scalaz.Free> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<scalaz.Free> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.Free> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.Free> invariantFunctorSyntax;

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.Free>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.Free>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #91                 // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #98                 // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #103                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Free<scala.Function0, A>, scalaz.Free<scala.Function0, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #117                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #122                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #126                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #183                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.Free>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #198                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #206                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Free>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #214                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<scalaz.Free> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #218                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.Free>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #218                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.Free> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #226                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.Free>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #226                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.Free> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #233                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.Free>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #233                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Free> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #240                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Free>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #240                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.Free<scala.Function0, B> map(scalaz.Free<scala.Function0, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: invokedynamic #267,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      12: astore_3
      13: new           #25                 // class scalaz/Free$Gosub
      16: dup
      17: aload_1
      18: aload_3
      19: invokespecial #271                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      22: areturn

  public <A> A copoint(scalaz.Free<scala.Function0, A>);
    Code:
       0: aload_1
       1: getstatic     #282                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
       4: invokevirtual #286                // Method scalaz/Leibniz$.refl:()Lscalaz/Leibniz;
       7: invokevirtual #290                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      10: areturn

  public <A, B> scalaz.Free<scala.Function0, B> cobind(scalaz.Free<scala.Function0, A>, scala.Function1<scalaz.Free<scala.Function0, A>, B>);
    Code:
       0: getstatic     #297                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       3: aload_2
       4: aload_1
       5: invokedynamic #308,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscalaz/Free;)Lscala/Function0;
      10: getstatic     #313                // Field scalaz/std/function$.MODULE$:Lscalaz/std/function$;
      13: invokevirtual #317                // Method scalaz/std/function$.function0Instance:()Lscalaz/Traverse;
      16: checkcast     #319                // class scalaz/Applicative
      19: astore        4
      21: astore_3
      22: dup
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload         4
      30: aload_3
      31: invokeinterface #323,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      36: invokevirtual #327                // Method scalaz/Free$.liftF:(Ljava/lang/Object;)Lscalaz/Free;
      39: areturn

  public <A> scalaz.Free<scala.Function0, scalaz.Free<scala.Function0, A>> cojoin(scalaz.Free<scala.Function0, A>);
    Code:
       0: getstatic     #297                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       3: aload_1
       4: invokevirtual #340                // Method scalaz/Free$.point:(Ljava/lang/Object;)Lscalaz/Free;
       7: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scalaz/Free
       5: invokevirtual #342                // Method cojoin:(Lscalaz/Free;)Lscalaz/Free;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/Free
       4: astore_3
       5: getstatic     #297                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       8: aload_2
       9: aload_3
      10: invokedynamic #308,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscalaz/Free;)Lscala/Function0;
      15: getstatic     #313                // Field scalaz/std/function$.MODULE$:Lscalaz/std/function$;
      18: invokevirtual #317                // Method scalaz/std/function$.function0Instance:()Lscalaz/Traverse;
      21: checkcast     #319                // class scalaz/Applicative
      24: astore        5
      26: astore        4
      28: dup
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: aload         5
      36: aload         4
      38: invokeinterface #323,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      43: invokevirtual #327                // Method scalaz/Free$.liftF:(Ljava/lang/Object;)Lscalaz/Free;
      46: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class scalaz/Free
       5: invokevirtual #347                // Method copoint:(Lscalaz/Free;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/Free
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_2
      12: invokedynamic #267,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: new           #25                 // class scalaz/Free$Gosub
      22: dup
      23: aload_3
      24: aload         4
      26: invokespecial #271                // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      29: areturn

  public static final java.lang.Object $anonfun$cobind$1(scala.Function1, scalaz.Free);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #353,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public scalaz.FreeInstances4$$anon$3(scalaz.FreeInstances4);
    Code:
       0: aload_0
       1: invokespecial #358                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #362                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #365                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #368                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      16: aload_0
      17: invokestatic  #371                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #384,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
