Compiled from "BijectionT.scala"
public final class scalaz.BijectionT<F, G, A, B> {
  private final scala.Function1<A, F> _to;

  private final scala.Function1<B, G> _from;

  public static <A, B, C, D, E, H, I> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple7<A, B, C, D, E, H, I>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, scala.Tuple2<E, scala.Tuple2<H, I>>>>>>> tuple7B();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #48                 // Method scalaz/BijectionT$.tuple7B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D, E, H> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple6<A, B, C, D, E, H>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, scala.Tuple2<E, H>>>>>> tuple6B();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #52                 // Method scalaz/BijectionT$.tuple6B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D, E> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple5<A, B, C, D, E>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, scala.Tuple2<D, E>>>>> tuple5B();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #56                 // Method scalaz/BijectionT$.tuple5B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple4<A, B, C, D>, scala.Tuple2<A, scala.Tuple2<B, scala.Tuple2<C, D>>>> tuple4B();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #60                 // Method scalaz/BijectionT$.tuple4B:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple3<A, B, C>, scala.Tuple2<A, scala.Tuple2<B, C>>> tuple3B();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #64                 // Method scalaz/BijectionT$.tuple3B:()Lscalaz/BijectionT;
       6: areturn

  public static <T, A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scala.Function1<T, A>, scala.Function1<T, B>>, scala.Function1<T, scala.Tuple2<A, B>>> zipReaderB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #68                 // Method scalaz/BijectionT$.zipReaderB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scalaz.Endo<A>, scalaz.Endo<B>>, scalaz.Endo<scala.Tuple2<A, B>>> zipEndoB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #72                 // Method scalaz/BijectionT$.zipEndoB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scalaz.IList<A>, scalaz.IList<B>>, scalaz.IList<scala.Tuple2<A, B>>> zipIListB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #76                 // Method scalaz/BijectionT$.zipIListB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<scala.collection.immutable.List<A>, scala.collection.immutable.List<B>>, scala.collection.immutable.List<scala.Tuple2<A, B>>> zipListB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #80                 // Method scalaz/BijectionT$.zipListB:()Lscalaz/BijectionT;
       6: areturn

  public static <X, A, B> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<X, X>, X> zipB(scalaz.Zip<X>, scalaz.Unzip<X>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #87                 // Method scalaz/BijectionT$.zipB:(Lscalaz/Zip;Lscalaz/Unzip;)Lscalaz/BijectionT;
       8: areturn

  public static <A> scalaz.BijectionT<java.lang.Object, java.lang.Object, scalaz.$bslash$div<A, A>, scala.Tuple2<java.lang.Object, A>> eitherB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #91                 // Method scalaz/BijectionT$.eitherB:()Lscalaz/BijectionT;
       6: areturn

  public static <A, B, C> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Function2<A, B, C>, scala.Function1<A, scala.Function1<B, C>>> curryB();
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: invokevirtual #95                 // Method scalaz/BijectionT$.curryB:()Lscalaz/BijectionT;
       6: areturn

  public static <F, G, A> scalaz.BijectionT<F, G, A, A> bijectionId(scalaz.Applicative<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #102                // Method scalaz/BijectionT$.bijectionId:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/BijectionT;
       8: areturn

  public static <F, G, A, B> scalaz.BijectionT<F, G, A, B> liftBijection(scala.Function1<A, B>, scala.Function1<B, A>, scalaz.Applicative<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_2
       9: aload_0
      10: invokedynamic #129,  0            // InvokeDynamic #0:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      15: aload_3
      16: aload_1
      17: invokedynamic #134,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      22: astore        5
      24: astore        4
      26: new           #2                  // class scalaz/BijectionT
      29: dup
      30: aload         4
      32: aload         5
      34: invokespecial #138                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      37: areturn

  public static <F, G, A, B> scalaz.BijectionT<F, G, A, B> bijection(scala.Function1<A, F>, scala.Function1<B, G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/BijectionT
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #138                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      17: areturn

  public static <F, G> scalaz.Category<?> bijectionTCategory(scalaz.Monad<F>, scalaz.Monad<G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #150                // Method scalaz/BijectionT$.bijectionTCategory:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Category;
       8: areturn

  public static <F, G> scalaz.Split<?> bijectionTSplit(scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #155                // Method scalaz/BijectionT$.bijectionTSplit:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Split;
       8: areturn

  public F to(A);
    Code:
       0: aload_0
       1: getfield      #160                // Field _to:Lscala/Function1;
       4: aload_1
       5: invokeinterface #164,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public G from(B);
    Code:
       0: aload_0
       1: getfield      #172                // Field _from:Lscala/Function1;
       4: aload_1
       5: invokeinterface #164,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public scalaz.BijectionT<G, F, B, A> flip();
    Code:
       0: new           #2                  // class scalaz/BijectionT
       3: dup
       4: aload_0
       5: getfield      #172                // Field _from:Lscala/Function1;
       8: aload_0
       9: getfield      #160                // Field _to:Lscala/Function1;
      12: invokespecial #138                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      15: areturn

  public scalaz.Kleisli<F, A, B> toK();
    Code:
       0: new           #179                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: getfield      #160                // Field _to:Lscala/Function1;
       8: invokespecial #182                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      11: areturn

  public scalaz.Kleisli<G, B, A> fromK();
    Code:
       0: new           #179                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: getfield      #172                // Field _from:Lscala/Function1;
       8: invokespecial #182                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      11: areturn

  public scalaz.LensFamily<A, A, B, B> lens(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: getstatic     #192                // Field scalaz/package$Lens$.MODULE$:Lscalaz/package$Lens$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #203,  0            // InvokeDynamic #2:apply:(Lscalaz/BijectionT;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #21                 // class scalaz/LensFunctions$$anon$4
      20: dup
      21: aconst_null
      22: aload_3
      23: invokespecial #206                // Method scalaz/LensFunctions$$anon$4."<init>":(Lscalaz/LensFunctions;Lscala/Function1;)V
      26: areturn

  public scalaz.PLensFamily<A, A, B, B> partial(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #213                // Method lens:(Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/LensFamily;
       6: invokevirtual #218                // Method scalaz/LensFamily.partial:()Lscalaz/PLensFamily;
       9: areturn

  public scalaz.PLensFamily<A, A, B, B> unary_$tilde(scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #221                // Method partial:(Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/PLensFamily;
       6: areturn

  public <C, X, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, X, X> bimap(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Bifunctor<X>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: aload_2
       5: aload_3
       6: aload_1
       7: invokedynamic #234,  0            // InvokeDynamic #3:apply:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/BijectionT;)Lscala/Function1;
      12: aload_0
      13: aload_2
      14: aload         4
      16: aload_1
      17: invokedynamic #239,  0            // InvokeDynamic #4:apply:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/BijectionT;)Lscala/Function1;
      22: astore        6
      24: astore        5
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: new           #2                  // class scalaz/BijectionT
      34: dup
      35: aload         5
      37: aload         6
      39: invokespecial #138                // Method "<init>":(Lscala/Function1;Lscala/Function1;)V
      42: areturn

  public <C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scala.Tuple2<A, C>, scala.Tuple2<B, D>> $times$times$times(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #250                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
       5: invokevirtual #254                // Method scalaz/std/tuple$.tuple2Bitraverse:()Lscalaz/Bitraverse;
       8: aload_2
       9: aload_3
      10: invokevirtual #256                // Method bimap:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/BijectionT;
      13: areturn

  public <C, D> scalaz.BijectionT<java.lang.Object, java.lang.Object, scalaz.$bslash$div<A, C>, scalaz.$bslash$div<B, D>> $up$up$up(scalaz.BijectionT<java.lang.Object, java.lang.Object, C, D>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, F, B>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, G, A>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #263                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       5: invokevirtual #266                // Method scalaz/$bslash$div$.DisjunctionInstances2:()Lscalaz/Bitraverse;
       8: aload_2
       9: aload_3
      10: invokevirtual #256                // Method bimap:(Lscalaz/BijectionT;Lscalaz/Bifunctor;Lscalaz/Leibniz;Lscalaz/Leibniz;)Lscalaz/BijectionT;
      13: areturn

  public <C> scalaz.BijectionT<F, G, C, B> compose(scalaz.BijectionT<F, G, C, A>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: getstatic     #46                 // Field scalaz/BijectionT$.MODULE$:Lscalaz/BijectionT$;
       3: aload_0
       4: invokevirtual #273                // Method toK:()Lscalaz/Kleisli;
       7: aload_1
       8: invokevirtual #273                // Method toK:()Lscalaz/Kleisli;
      11: aload_2
      12: invokevirtual #277                // Method scalaz/Kleisli.$less$eq$less:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      15: invokevirtual #281                // Method scalaz/Kleisli.run:()Lscala/Function1;
      18: aload_0
      19: invokevirtual #283                // Method fromK:()Lscalaz/Kleisli;
      22: aload_1
      23: invokevirtual #283                // Method fromK:()Lscalaz/Kleisli;
      26: aload_3
      27: invokevirtual #286                // Method scalaz/Kleisli.$greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      30: invokevirtual #281                // Method scalaz/Kleisli.run:()Lscala/Function1;
      33: invokevirtual #288                // Method scalaz/BijectionT$.bijection:(Lscala/Function1;Lscala/Function1;)Lscalaz/BijectionT;
      36: areturn

  public <C> scalaz.BijectionT<F, G, C, B> $less$eq$less(scalaz.BijectionT<F, G, C, A>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #292                // Method compose:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public <C> scalaz.BijectionT<F, G, A, C> andThen(scalaz.BijectionT<F, G, B, C>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload_3
       4: invokevirtual #292                // Method compose:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public <C> scalaz.BijectionT<F, G, A, C> $greater$eq$greater(scalaz.BijectionT<F, G, B, C>, scalaz.Bind<F>, scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #297                // Method andThen:(Lscalaz/BijectionT;Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/BijectionT;
       7: areturn

  public static final java.lang.Object $anonfun$lens$2(scalaz.BijectionT, scalaz.Leibniz, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #303                // Method from:(Ljava/lang/Object;)Ljava/lang/Object;
       6: invokevirtual #306                // Method scalaz/Leibniz.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public static final scalaz.IndexedStoreT $anonfun$lens$1(scalaz.BijectionT, scalaz.Leibniz, scalaz.Leibniz, java.lang.Object);
    Code:
       0: getstatic     #310                // Field scalaz/package$Store$.MODULE$:Lscalaz/package$Store$;
       3: aload_0
       4: aload_1
       5: invokedynamic #316,  0            // InvokeDynamic #5:apply:(Lscalaz/BijectionT;Lscalaz/Leibniz;)Lscala/Function1;
      10: aload_2
      11: aload_0
      12: aload_3
      13: invokevirtual #318                // Method to:(Ljava/lang/Object;)Ljava/lang/Object;
      16: invokevirtual #306                // Method scalaz/Leibniz.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore        5
      21: astore        4
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: getstatic     #321                // Field scalaz/package$StoreT$.MODULE$:Lscalaz/package$StoreT$;
      31: dup
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: getstatic     #324                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      40: getstatic     #329                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      43: aload         4
      45: invokevirtual #332                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      48: aload         5
      50: invokevirtual #336                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      53: invokeinterface #342,  2          // InterfaceMethod scalaz/StoreTFunctions.storeT:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
      58: areturn

  public static final java.lang.Object $anonfun$bimap$2(scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #318                // Method to:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$bimap$1(scalaz.BijectionT, scalaz.Bifunctor, scalaz.Leibniz, scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_1
       1: aload         4
       3: aload_0
       4: getfield      #160                // Field _to:Lscala/Function1;
       7: getstatic     #356                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      10: aload_2
      11: invokevirtual #360                // Method scalaz/Leibniz$.witness:(Lscalaz/Leibniz;)Lscala/Function1;
      14: invokeinterface #363,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      19: aload_3
      20: invokedynamic #369,  0            // InvokeDynamic #6:apply:(Lscalaz/BijectionT;)Lscala/Function1;
      25: invokeinterface #374,  4          // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public static final java.lang.Object $anonfun$bimap$4(scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #303                // Method from:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$bimap$3(scalaz.BijectionT, scalaz.Bifunctor, scalaz.Leibniz, scalaz.BijectionT, java.lang.Object);
    Code:
       0: aload_1
       1: aload         4
       3: aload_0
       4: getfield      #172                // Field _from:Lscala/Function1;
       7: getstatic     #356                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      10: aload_2
      11: invokevirtual #360                // Method scalaz/Leibniz$.witness:(Lscalaz/Leibniz;)Lscala/Function1;
      14: invokeinterface #363,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      19: aload_3
      20: invokedynamic #382,  0            // InvokeDynamic #7:apply:(Lscalaz/BijectionT;)Lscala/Function1;
      25: invokeinterface #374,  4          // InterfaceMethod scalaz/Bifunctor.bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      30: areturn

  public scalaz.BijectionT(scala.Function1<A, F>, scala.Function1<B, G>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field _to:Lscala/Function1;
       5: aload_0
       6: aload_2
       7: putfield      #172                // Field _from:Lscala/Function1;
      10: aload_0
      11: invokespecial #386                // Method java/lang/Object."<init>":()V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #398,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
