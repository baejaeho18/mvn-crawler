Compiled from "OneOr.scala"
public abstract class scalaz.OneOrInstances extends scalaz.OneOrInstances0 {
  public <F, A> scalaz.Show<scalaz.OneOr<F, A>> OneOrShow(scalaz.Show<A>, scalaz.Show<F>);
    Code:
       0: new           #10                 // class scalaz/OneOrInstances$$anon$1
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: invokespecial #23                 // Method scalaz/OneOrInstances$$anon$1."<init>":(Lscalaz/OneOrInstances;Lscalaz/Show;Lscalaz/Show;)V
      10: areturn

  public <F, A> scalaz.Order<scalaz.OneOr<F, A>> OneOrOrder(scalaz.Order<A>, scalaz.Order<F>);
    Code:
       0: new           #12                 // class scalaz/OneOrInstances$$anon$2
       3: dup
       4: aconst_null
       5: aload_1
       6: aload_2
       7: invokespecial #32                 // Method scalaz/OneOrInstances$$anon$2."<init>":(Lscalaz/OneOrInstances;Lscalaz/Order;Lscalaz/Order;)V
      10: areturn

  public <F> scalaz.Comonad<?> OneOrComonad(scalaz.Comonad<F>);
    Code:
       0: new           #14                 // class scalaz/OneOrInstances$$anon$3
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #40                 // Method scalaz/OneOrInstances$$anon$3."<init>":(Lscalaz/OneOrInstances;Lscalaz/Comonad;)V
       9: areturn

  public scalaz.OneOrInstances();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method scalaz/OneOrInstances0."<init>":()V
       4: return
}
