Compiled from "Monad.scala"
public interface scalaz.Monad<F> extends scalaz.Applicative<F>, scalaz.Bind<F> {
  public static <F, G> scalaz.Monad<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Monad<G>);
    Code:
       0: getstatic     #43                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: aload_0
       4: aload_1
       5: invokevirtual #45                 // Method scalaz/Monad$.fromIso:(Lscalaz/Isomorphisms$Iso2;Lscalaz/Monad;)Lscalaz/Monad;
       8: areturn

  public abstract void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<F>);

  public static java.lang.Object map$(scalaz.Monad, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #58                 // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F map(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #84,  0             // InvokeDynamic #0:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
       9: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object whileM$(scalaz.Monad, java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #97                 // InterfaceMethod whileM:(Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public default <G, A> F whileM(F, scala.Function0<F>, scalaz.MonadPlus<G>);
    Code:
       0: getstatic     #105                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #107                // class scalaz/Need
      11: dup
      12: aload_2
      13: invokespecial #111                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      16: astore        4
      18: aload_0
      19: aload_1
      20: aload_0
      21: aload         4
      23: aload_1
      24: aload_3
      25: invokedynamic #121,  0            // InvokeDynamic #1:apply:(Lscalaz/Monad;Lscalaz/Need;Ljava/lang/Object;Lscalaz/MonadPlus;)Lscala/Function0;
      30: aload_0
      31: aload_3
      32: invokedynamic #129,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscalaz/MonadPlus;)Lscala/Function0;
      37: invokeinterface #133,  4          // InterfaceMethod ifM:(Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      42: areturn

  public static java.lang.Object whileM_$(scalaz.Monad, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #139                // InterfaceMethod whileM_:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F whileM_(F, scala.Function0<F>);
    Code:
       0: getstatic     #105                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #107                // class scalaz/Need
      11: dup
      12: aload_2
      13: invokespecial #111                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_3
      21: aload_1
      22: invokedynamic #148,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscalaz/Need;Ljava/lang/Object;)Lscala/Function0;
      27: aload_0
      28: invokedynamic #156,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;)Lscala/Function0;
      33: invokeinterface #133,  4          // InterfaceMethod ifM:(Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      38: areturn

  public static java.lang.Object untilM$(scalaz.Monad, java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #161                // InterfaceMethod untilM:(Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public default <G, A> F untilM(F, scala.Function0<F>, scalaz.MonadPlus<G>);
    Code:
       0: getstatic     #105                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #107                // class scalaz/Need
      11: dup
      12: aload_2
      13: invokespecial #111                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      16: astore        4
      18: aload_0
      19: aload_1
      20: aload_0
      21: aload         4
      23: aload_1
      24: aload_3
      25: invokedynamic #169,  0            // InvokeDynamic #5:apply:(Lscalaz/Monad;Lscalaz/Need;Ljava/lang/Object;Lscalaz/MonadPlus;)Lscala/Function1;
      30: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      35: areturn

  public static java.lang.Object untilM_$(scalaz.Monad, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #173                // InterfaceMethod untilM_:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F untilM_(F, scala.Function0<F>);
    Code:
       0: getstatic     #105                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #107                // class scalaz/Need
      11: dup
      12: aload_2
      13: invokespecial #111                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_3
      21: aload_1
      22: invokedynamic #181,  0            // InvokeDynamic #6:apply:(Lscalaz/Monad;Lscalaz/Need;Ljava/lang/Object;)Lscala/Function1;
      27: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      32: areturn

  public static java.lang.Object iterateWhile$(scalaz.Monad, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #185                // InterfaceMethod iterateWhile:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F iterateWhile(F, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload_1
       5: invokedynamic #194,  0            // InvokeDynamic #7:apply:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      10: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public static java.lang.Object iterateUntil$(scalaz.Monad, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #198                // InterfaceMethod iterateUntil:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F iterateUntil(F, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload_1
       5: invokedynamic #203,  0            // InvokeDynamic #8:apply:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      10: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public static scalaz.Monad product$(scalaz.Monad, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #210                // InterfaceMethod product:(Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public default <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: new           #25                 // class scalaz/Monad$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #214                // Method scalaz/Monad$$anon$1."<init>":(Lscalaz/Monad;Lscalaz/Monad;)V
       9: areturn

  public static scalaz.Monad$MonadLaw monadLaw$(scalaz.Monad);
    Code:
       0: aload_0
       1: invokespecial #220                // InterfaceMethod monadLaw:()Lscalaz/Monad$MonadLaw;
       4: areturn

  public default scalaz.Monad<F>.MonadLaw monadLaw();
    Code:
       0: new           #27                 // class scalaz/Monad$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #224                // Method scalaz/Monad$$anon$2."<init>":(Lscalaz/Monad;)V
       8: areturn

  public abstract scalaz.syntax.MonadSyntax<F> monadSyntax();

  public static java.lang.Object $anonfun$map$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #235,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$map$1(scalaz.Monad, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #242,  0            // InvokeDynamic #9:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #246,  2          // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object $anonfun$whileM$3(scalaz.Need);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       4: areturn

  public static java.lang.Object $anonfun$whileM$5(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$whileM$6(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$whileM$4(scalaz.MonadPlus, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #267,  0            // InvokeDynamic #10:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #270,  2          // InterfaceMethod scalaz/MonadPlus.point:(Lscala/Function0;)Ljava/lang/Object;
      13: aload_2
      14: invokedynamic #274,  0            // InvokeDynamic #11:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #277,  3          // InterfaceMethod scalaz/MonadPlus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      24: areturn

  public static java.lang.Object $anonfun$whileM$2(scalaz.Monad, java.lang.Object, scalaz.Need, scalaz.MonadPlus, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #287,  0            // InvokeDynamic #12:apply:(Lscalaz/Need;)Lscala/Function0;
       9: aload_3
      10: invokeinterface #97,  4           // InterfaceMethod whileM:(Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
      15: aload_3
      16: aload         4
      18: invokedynamic #293,  0            // InvokeDynamic #13:apply:(Lscalaz/MonadPlus;Ljava/lang/Object;)Lscala/Function1;
      23: invokeinterface #58,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: areturn

  public static java.lang.Object $anonfun$whileM$1(scalaz.Monad, scalaz.Need, java.lang.Object, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: aload_1
       8: aload_3
       9: invokedynamic #299,  0            // InvokeDynamic #14:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscalaz/Need;Lscalaz/MonadPlus;)Lscala/Function1;
      14: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object $anonfun$whileM$8(scalaz.MonadPlus);
    Code:
       0: aload_0
       1: invokeinterface #304,  1          // InterfaceMethod scalaz/MonadPlus.empty:()Ljava/lang/Object;
       6: areturn

  public static java.lang.Object $anonfun$whileM$7(scalaz.Monad, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #310,  0            // InvokeDynamic #15:apply:(Lscalaz/MonadPlus;)Lscala/Function0;
       7: invokeinterface #246,  2          // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object $anonfun$whileM_$3(scalaz.Need);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       4: areturn

  public static java.lang.Object $anonfun$whileM_$2(scalaz.Monad, java.lang.Object, scalaz.Need, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #319,  0            // InvokeDynamic #16:apply:(Lscalaz/Need;)Lscala/Function0;
       8: invokeinterface #139,  3          // InterfaceMethod whileM_:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object $anonfun$whileM_$1(scalaz.Monad, scalaz.Need, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokedynamic #325,  0            // InvokeDynamic #17:apply:(Lscalaz/Monad;Ljava/lang/Object;Lscalaz/Need;)Lscala/Function1;
      13: invokeinterface #87,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public static void $anonfun$whileM_$5();
    Code:
       0: return

  public static java.lang.Object $anonfun$whileM_$4(scalaz.Monad);
    Code:
       0: aload_0
       1: invokedynamic #335,  0            // InvokeDynamic #18:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
       6: invokeinterface #246,  2          // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static boolean $anonfun$untilM$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$untilM$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$untilM$5(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$untilM$6(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$untilM$4(scalaz.MonadPlus, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #351,  0            // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #270,  2          // InterfaceMethod scalaz/MonadPlus.point:(Lscala/Function0;)Ljava/lang/Object;
      13: aload_2
      14: invokedynamic #355,  0            // InvokeDynamic #20:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #277,  3          // InterfaceMethod scalaz/MonadPlus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      24: areturn

  public static java.lang.Object $anonfun$untilM$1(scalaz.Monad, scalaz.Need, java.lang.Object, scalaz.MonadPlus, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: aload_1
       4: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       7: invokedynamic #363,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
      12: invokeinterface #58,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: aload_2
      18: invokedynamic #367,  0            // InvokeDynamic #22:apply:(Ljava/lang/Object;)Lscala/Function0;
      23: aload_3
      24: invokeinterface #97,  4           // InterfaceMethod whileM:(Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
      29: aload_3
      30: aload         4
      32: invokedynamic #371,  0            // InvokeDynamic #23:apply:(Lscalaz/MonadPlus;Ljava/lang/Object;)Lscala/Function1;
      37: invokeinterface #58,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      42: areturn

  public static boolean $anonfun$untilM_$2(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static java.lang.Object $anonfun$untilM_$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$untilM_$1(scalaz.Monad, scalaz.Need, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #252                // Method scalaz/Need.value:()Ljava/lang/Object;
       6: invokedynamic #382,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
      11: invokeinterface #58,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: aload_2
      17: invokedynamic #386,  0            // InvokeDynamic #25:apply:(Ljava/lang/Object;)Lscala/Function0;
      22: invokeinterface #139,  3          // InterfaceMethod whileM_:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      27: areturn

  public static java.lang.Object $anonfun$iterateWhile$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$iterateWhile$1(scalaz.Monad, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #235,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: invokestatic  #397                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      10: ifeq          22
      13: aload_0
      14: aload_2
      15: aload_1
      16: invokeinterface #185,  3          // InterfaceMethod iterateWhile:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn
      22: aload_0
      23: aload_3
      24: invokedynamic #401,  0            // InvokeDynamic #26:apply:(Ljava/lang/Object;)Lscala/Function0;
      29: invokeinterface #246,  2          // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      34: areturn

  public static java.lang.Object $anonfun$iterateUntil$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$iterateUntil$1(scalaz.Monad, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #235,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: invokestatic  #397                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      10: ifeq          26
      13: aload_0
      14: aload_3
      15: invokedynamic #409,  0            // InvokeDynamic #27:apply:(Ljava/lang/Object;)Lscala/Function0;
      20: invokeinterface #246,  2          // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      25: areturn
      26: aload_0
      27: aload_2
      28: aload_1
      29: invokeinterface #198,  3          // InterfaceMethod iterateUntil:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: areturn

  public static void $init$(scalaz.Monad);
    Code:
       0: aload_0
       1: new           #29                 // class scalaz/Monad$$anon$3
       4: dup
       5: aload_0
       6: invokespecial #411                // Method scalaz/Monad$$anon$3."<init>":(Lscalaz/Monad;)V
       9: invokeinterface #413,  2          // InterfaceMethod scalaz$Monad$_setter_$monadSyntax_$eq:(Lscalaz/syntax/MonadSyntax;)V
      14: return

  public static java.lang.Object $anonfun$untilM$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #397                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #415                // InterfaceMethod $anonfun$untilM$2:(Z)Z
       7: invokestatic  #419                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static java.lang.Object $anonfun$untilM_$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #397                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #421                // InterfaceMethod $anonfun$untilM_$2:(Z)Z
       7: invokestatic  #419                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #433,  0            // InvokeDynamic #28:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
