Compiled from "StreamT.scala"
public final class scalaz.StreamTInstances$$anon$3 implements scalaz.StreamTMonoid<F, A> {
  private final scalaz.syntax.MonoidSyntax<scalaz.StreamT<F, A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>> semigroupSyntax;

  private final scalaz.Applicative F0$3;

  public scalaz.StreamT<F, A> zero();
    Code:
       0: aload_0
       1: invokestatic  #48                 // InterfaceMethod scalaz/StreamTMonoid.zero$:(Lscalaz/StreamTMonoid;)Lscalaz/StreamT;
       4: areturn

  public scalaz.StreamT<F, A> append(scalaz.StreamT<F, A>, scala.Function0<scalaz.StreamT<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/StreamTSemigroup.append$:(Lscalaz/StreamTSemigroup;Lscalaz/StreamT;Lscala/Function0;)Lscalaz/StreamT;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #98                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #103                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #115                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.StreamT<F, A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #141                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.StreamT<F, A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.StreamT<F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.StreamT<F, A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.StreamT<F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #160                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.StreamT<F, A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #174                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.StreamT<F, A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #178                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.StreamT<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #178                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #186                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.StreamT<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #186                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Applicative<F> F();
    Code:
       0: aload_0
       1: getfield      #193                // Field F0$3:Lscalaz/Applicative;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #32                 // class scalaz/StreamT
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #197,  1          // InterfaceMethod scalaz/StreamTSemigroup.F:()Lscalaz/Functor;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_2
      20: aload         4
      22: invokedynamic #220,  0            // InvokeDynamic #0:apply:(Lscala/Function0;Lscalaz/Functor;)Lscala/Function1;
      27: astore        5
      29: getstatic     #226                // Field scalaz/StreamT$.MODULE$:Lscalaz/StreamT$;
      32: aload         4
      34: aload_3
      35: invokevirtual #230                // Method scalaz/StreamT.step:()Ljava/lang/Object;
      38: aload         5
      40: invokeinterface #235,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      45: invokevirtual #238                // Method scalaz/StreamT$.apply:(Ljava/lang/Object;)Lscalaz/StreamT;
      48: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method zero:()Lscalaz/StreamT;
       4: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #246                // Method F:()Lscalaz/Applicative;
       4: areturn

  public scalaz.StreamTInstances$$anon$3(scalaz.StreamTInstances, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #193                // Field F0$3:Lscalaz/Applicative;
       5: aload_0
       6: invokespecial #252                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #256                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #259                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: aload_0
      18: invokestatic  #262                // InterfaceMethod scalaz/StreamTSemigroup.$init$:(Lscalaz/StreamTSemigroup;)V
      21: aload_0
      22: invokestatic  #265                // InterfaceMethod scalaz/StreamTMonoid.$init$:(Lscalaz/StreamTMonoid;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #278,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
