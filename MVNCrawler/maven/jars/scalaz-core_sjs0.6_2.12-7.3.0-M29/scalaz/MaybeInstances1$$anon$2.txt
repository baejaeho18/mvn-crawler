Compiled from "Maybe.scala"
public final class scalaz.MaybeInstances1$$anon$2 implements scalaz.MaybeMonoid<A>, scalaz.Band<scalaz.Maybe<A>> {
  private final scalaz.syntax.BandSyntax<scalaz.Maybe<A>> bandSyntax;

  private final scalaz.syntax.MonoidSyntax<scalaz.Maybe<A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>> semigroupSyntax;

  private final scalaz.Band evidence$3$1;

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #60                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scalaz.Maybe<A>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #71                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public scalaz.Maybe<A> append(scalaz.Maybe<A>, scala.Function0<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/MaybeMonoid.append$:(Lscalaz/MaybeMonoid;Lscalaz/Maybe;Lscala/Function0;)Lscalaz/Maybe;
       6: areturn

  public scalaz.Maybe<A> zero();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod scalaz/MaybeMonoid.zero$:(Lscalaz/MaybeMonoid;)Lscalaz/Maybe;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #111                // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #119                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #124                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #136                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.Maybe<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public <S> scalaz.Maybe<scalaz.Maybe<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Maybe<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Maybe<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Maybe<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #169                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #176                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #183                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Maybe<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #190                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.BandSyntax<scalaz.Maybe<A>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #194                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #194                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<scalaz.Maybe<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #202                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #202                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #209                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #209                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Semigroup<A> A();
    Code:
       0: getstatic     #221                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #223                // Field evidence$3$1:Lscalaz/Band;
       7: invokevirtual #227                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #40                 // class scalaz/Semigroup
      13: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method zero:()Lscalaz/Maybe;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #27                 // class scalaz/Maybe
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_3
      12: instanceof    #30                 // class scalaz/Maybe$Just
      15: ifeq          40
      18: aload_3
      19: checkcast     #30                 // class scalaz/Maybe$Just
      22: invokevirtual #236                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: astore        5
      27: aload_0
      28: aload_2
      29: aload_3
      30: aload         5
      32: invokestatic  #240                // InterfaceMethod scalaz/MaybeMonoid.$anonfun$append$10:(Lscalaz/MaybeMonoid;Lscala/Function0;Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
      35: astore        4
      37: goto          65
      40: aload_3
      41: instanceof    #25                 // class scalaz/Maybe$Empty
      44: ifeq          56
      47: aload_2
      48: invokestatic  #244                // InterfaceMethod scalaz/MaybeMonoid.$anonfun$append$14:(Lscala/Function0;)Lscalaz/Maybe;
      51: astore        4
      53: goto          65
      56: new           #246                // class scala/MatchError
      59: dup
      60: aload_3
      61: invokespecial #250                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload         4
      67: areturn

  public scalaz.MaybeInstances1$$anon$2(scalaz.MaybeInstances1, scalaz.Band);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #223                // Field evidence$3$1:Lscalaz/Band;
       5: aload_0
       6: invokespecial #257                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #261                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #264                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: aload_0
      18: invokestatic  #267                // InterfaceMethod scalaz/MaybeMonoid.$init$:(Lscalaz/MaybeMonoid;)V
      21: aload_0
      22: invokestatic  #270                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #285,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
