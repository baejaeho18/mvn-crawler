Compiled from "Scalaz.scala"
public final class scalaz.Scalaz$ implements scalaz.StateFunctions,scalaz.syntax.ToTypeClassOps,scalaz.syntax.ToDataOps,scalaz.std.AllInstances,scalaz.std.AllFunctions,scalaz.syntax.std.ToAllStdOps,scalaz.IdInstances {
  public static scalaz.Scalaz$ MODULE$;

  private final scalaz.Traverse1<java.lang.Object> id;

  private final scalaz.std.StringInstances$stringInstance$ scalaz$std$StringFunctions$$instance;

  private final scalaz.Monad<java.util.concurrent.Callable> callableMonad;

  private final scalaz.Monoid<java.math.BigInteger> bigIntegerInstance;

  private final scalaz.Monoid<java.lang.Object> bigIntegerMultiplication;

  private final scalaz.Show<java.math.BigDecimal> javaBigDecimalInstance;

  private final scalaz.Bitraverse<java.util.Map$Entry> mapEntryBitraverse;

  private final scalaz.Monoid<scala.math.BigInt> bigIntInstance;

  private final scalaz.Monoid<java.lang.Object> bigIntMultiplication;

  private final scalaz.Monoid<scala.math.BigDecimal> bigDecimalInstance;

  private final scalaz.Monoid<java.lang.Object> BigDecimalMultiplicationNewType;

  private final scalaz.Category<scala.Predef$$less$colon$less> $less$colon$less;

  private final scalaz.Category<scala.Predef$$eq$colon$eq> $eq$colon$eq;

  private final scalaz.Arrow<scala.PartialFunction> partialFunctionInstance;

  private final scalaz.Bitraverse<scala.util.Either> eitherInstance;

  private final scalaz.Traverse<scala.collection.immutable.Vector> vectorInstance;

  private final scalaz.Cozip<scala.Tuple1> tuple1Cozip;

  private final scalaz.Bitraverse<scala.Tuple2> tuple2Bitraverse;

  private final scalaz.Associative<scala.Tuple2> tuple2Associative;

  private final scalaz.Traverse<scala.Tuple1> tuple1Instance;

  private final scalaz.Traverse<scala.collection.immutable.Stream> streamInstance;

  private final scalaz.Applicative<?> streamZipApplicative;

  private volatile scalaz.std.StringInstances$stringInstance$ stringInstance$module;

  private final scalaz.Foldable<scala.collection.immutable.Set> setInstance;

  private final scalaz.Traverse<scala.Option> optionInstance;

  private final scalaz.Traverse<scala.collection.immutable.List> listInstance;

  private final scalaz.Traverse<scala.Function0> function0Instance;

  private final scalaz.Arrow<scala.Function1> function1Instance;

  private final scalaz.Monoid<scala.runtime.BoxedUnit> unitInstance;

  private volatile scalaz.std.AnyValInstances$booleanInstance$ booleanInstance$module;

  private final scalaz.Monoid<java.lang.Object> booleanDisjunctionNewTypeInstance;

  private final scalaz.Monoid<java.lang.Object> booleanConjunctionNewTypeInstance;

  private final scalaz.Monoid<java.lang.Object> byteInstance;

  private final scalaz.Monoid<java.lang.Object> byteMultiplicationNewType;

  private final scalaz.Monoid<java.lang.Object> char;

  private final scalaz.Monoid<java.lang.Object> charMultiplicationNewType;

  private final scalaz.Monoid<java.lang.Object> shortInstance;

  private final scalaz.Monoid<java.lang.Object> shortMultiplicationNewType;

  private final scalaz.Monoid<java.lang.Object> intInstance;

  private final scalaz.Monoid<java.lang.Object> intMultiplicationNewType;

  private final scalaz.Monoid<java.lang.Object> longInstance;

  private final scalaz.Monoid<java.lang.Object> longMultiplicationNewType;

  private final scalaz.Order<java.lang.Object> floatInstance;

  private final scalaz.Order<java.lang.Object> doubleInstance;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Scalaz$
       3: invokespecial #150                // Method "<init>":()V
       6: return

  public <A> scala.util.Try<A> ToTryOpsFromTry(scala.util.Try<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // InterfaceMethod scalaz/syntax/std/ToTryOps.ToTryOpsFromTry$:(Lscalaz/syntax/std/ToTryOps;Lscala/util/Try;)Lscala/util/Try;
       5: areturn

  public <A, B> scala.util.Either<A, B> ToEitherOpsFromEither(scala.util.Either<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // InterfaceMethod scalaz/syntax/std/ToEitherOps.ToEitherOpsFromEither$:(Lscalaz/syntax/std/ToEitherOps;Lscala/util/Either;)Lscala/util/Either;
       5: areturn

  public <K, V> scala.collection.immutable.Map<K, V> ToMapOpsFromMap(scala.collection.immutable.Map<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod scalaz/syntax/std/ToMapOps.ToMapOpsFromMap$:(Lscalaz/syntax/std/ToMapOps;Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
       5: areturn

  public <A, B> scala.Tuple2<A, B> ToTuple2Ops(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple2Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple2;)Lscala/Tuple2;
       5: areturn

  public <A, B, C> scala.Tuple3<A, B, C> ToTuple3Ops(scala.Tuple3<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple3Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple3;)Lscala/Tuple3;
       5: areturn

  public <A, B, C, D> scala.Tuple4<A, B, C, D> ToTuple4Ops(scala.Tuple4<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple4Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple4;)Lscala/Tuple4;
       5: areturn

  public <A, B, C, D, E> scala.Tuple5<A, B, C, D, E> ToTuple5Ops(scala.Tuple5<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple5Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple5;)Lscala/Tuple5;
       5: areturn

  public <A, B, C, D, E, F> scala.Tuple6<A, B, C, D, E, F> ToTuple6Ops(scala.Tuple6<A, B, C, D, E, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple6Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple6;)Lscala/Tuple6;
       5: areturn

  public <A, B, C, D, E, F, G> scala.Tuple7<A, B, C, D, E, F, G> ToTuple7Ops(scala.Tuple7<A, B, C, D, E, F, G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple7Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple7;)Lscala/Tuple7;
       5: areturn

  public <A, B, C, D, E, F, G, H> scala.Tuple8<A, B, C, D, E, F, G, H> ToTuple8Ops(scala.Tuple8<A, B, C, D, E, F, G, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #242                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple8Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple8;)Lscala/Tuple8;
       5: areturn

  public <A, B, C, D, E, F, G, H, I> scala.Tuple9<A, B, C, D, E, F, G, H, I> ToTuple9Ops(scala.Tuple9<A, B, C, D, E, F, G, H, I>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #250                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple9Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple9;)Lscala/Tuple9;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J> scala.Tuple10<A, B, C, D, E, F, G, H, I, J> ToTuple10Ops(scala.Tuple10<A, B, C, D, E, F, G, H, I, J>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #258                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple10Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple10;)Lscala/Tuple10;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J, K> scala.Tuple11<A, B, C, D, E, F, G, H, I, J, K> ToTuple11Ops(scala.Tuple11<A, B, C, D, E, F, G, H, I, J, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #266                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple11Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple11;)Lscala/Tuple11;
       5: areturn

  public <A, B, C, D, E, F, G, H, I, J, K, L> scala.Tuple12<A, B, C, D, E, F, G, H, I, J, K, L> ToTuple12Ops(scala.Tuple12<A, B, C, D, E, F, G, H, I, J, K, L>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #274                // InterfaceMethod scalaz/syntax/std/ToTupleOps.ToTuple12Ops$:(Lscalaz/syntax/std/ToTupleOps;Lscala/Tuple12;)Lscala/Tuple12;
       5: areturn

  public java.lang.String ToStringOpsFromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #283                // InterfaceMethod scalaz/syntax/std/ToStringOps.ToStringOpsFromString$:(Lscalaz/syntax/std/ToStringOps;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public <A, B> scala.Function1<A, B> ToFunction1OpsFromBoolean(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // InterfaceMethod scalaz/syntax/std/ToFunction1Ops.ToFunction1OpsFromBoolean$:(Lscalaz/syntax/std/ToFunction1Ops;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <T1, T2, R> scala.Function2<T1, T2, R> ToFunction2Ops(scala.Function2<T1, T2, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #304                // InterfaceMethod scalaz/syntax/std/ToFunction2Ops.ToFunction2Ops$:(Lscalaz/syntax/std/ToFunction2Ops;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A> scala.collection.immutable.Vector<A> ToVectorOpsFromVector(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // InterfaceMethod scalaz/syntax/std/ToVectorOps.ToVectorOpsFromVector$:(Lscalaz/syntax/std/ToVectorOps;Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       5: areturn

  public <A> scala.collection.immutable.Stream<A> ToStreamOpsFromStream(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #324                // InterfaceMethod scalaz/syntax/std/ToStreamOps.ToStreamOpsFromStream$:(Lscalaz/syntax/std/ToStreamOps;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: areturn

  public <A> scala.collection.immutable.List<A> ToListOpsFromList(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #334                // InterfaceMethod scalaz/syntax/std/ToListOps.ToListOpsFromList$:(Lscalaz/syntax/std/ToListOps;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public <A> A ToOptionIdOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // InterfaceMethod scalaz/syntax/std/ToOptionIdOps.ToOptionIdOps$:(Lscalaz/syntax/std/ToOptionIdOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> scala.Option<A> ToOptionOpsFromOption(scala.Option<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #354                // InterfaceMethod scalaz/syntax/std/ToOptionOps.ToOptionOpsFromOption$:(Lscalaz/syntax/std/ToOptionOps;Lscala/Option;)Lscala/Option;
       5: areturn

  public <A> scalaz.syntax.std.OptionOps2<A> ToOptionOps2FromOption(scala.Option<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // InterfaceMethod scalaz/syntax/std/ToOptionOps.ToOptionOps2FromOption$:(Lscalaz/syntax/std/ToOptionOps;Lscala/Option;)Lscalaz/syntax/std/OptionOps2;
       5: areturn

  public boolean ToBooleanOpsFromBoolean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #370                // InterfaceMethod scalaz/syntax/std/ToBooleanOps.ToBooleanOpsFromBoolean$:(Lscalaz/syntax/std/ToBooleanOps;Z)Z
       5: ireturn

  public scalaz.syntax.std.BooleanOps2 ToBooleanOps2FromBoolean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #377                // InterfaceMethod scalaz/syntax/std/ToBooleanOps.ToBooleanOps2FromBoolean$:(Lscalaz/syntax/std/ToBooleanOps;Z)Lscalaz/syntax/std/BooleanOps2;
       5: areturn

  public final <A> A fix(scala.Function1<scala.Function0<A>, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #386                // InterfaceMethod scalaz/std/FunctionFunctions.fix$:(Lscalaz/std/FunctionFunctions;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.String plural(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokestatic  #396                // InterfaceMethod scalaz/std/StringFunctions.plural$:(Lscalaz/std/StringFunctions;Ljava/lang/String;J)Ljava/lang/String;
       6: areturn

  public scalaz.Maybe<scalaz.NonEmptyList<java.lang.Object>> charsNel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod scalaz/std/StringFunctions.charsNel$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Maybe;
       5: areturn

  public scalaz.NonEmptyList<java.lang.Object> charsNel(java.lang.String, scala.Function0<scalaz.NonEmptyList<java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #409                // InterfaceMethod scalaz/std/StringFunctions.charsNel$:(Lscalaz/std/StringFunctions;Ljava/lang/String;Lscala/Function0;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseLong(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod scalaz/std/StringFunctions.parseLong$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scalaz/std/StringFunctions.parseInt$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseByte(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #425                // InterfaceMethod scalaz/std/StringFunctions.parseByte$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseShort(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // InterfaceMethod scalaz/std/StringFunctions.parseShort$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #433                // InterfaceMethod scalaz/std/StringFunctions.parseDouble$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseFloat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // InterfaceMethod scalaz/std/StringFunctions.parseFloat$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.math.BigInteger> parseBigInt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // InterfaceMethod scalaz/std/StringFunctions.parseBigInt$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.math.BigDecimal> parseBigDecimal(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #447                // InterfaceMethod scalaz/std/StringFunctions.parseBigDecimal$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public scalaz.Validation<java.lang.String, java.lang.Object> parseBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #451                // InterfaceMethod scalaz/std/StringFunctions.parseBoolean$:(Lscalaz/std/StringFunctions;Ljava/lang/String;)Lscalaz/Validation;
       5: areturn

  public final <A> scalaz.Order<A> ToScalazOrderFromOrdering(scala.math.Ordering<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #461                // InterfaceMethod scalaz/std/math/OrderingFunctions.ToScalazOrderFromOrdering$:(Lscalaz/std/math/OrderingFunctions;Lscala/math/Ordering;)Lscalaz/Order;
       5: areturn

  public final boolean conjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #473                // InterfaceMethod scalaz/std/BooleanFunctions.conjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean disjunction(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #477                // InterfaceMethod scalaz/std/BooleanFunctions.disjunction$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nor(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #481                // InterfaceMethod scalaz/std/BooleanFunctions.nor$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean nand(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #485                // InterfaceMethod scalaz/std/BooleanFunctions.nand$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean conditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #489                // InterfaceMethod scalaz/std/BooleanFunctions.conditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean inverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #493                // InterfaceMethod scalaz/std/BooleanFunctions.inverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #497                // InterfaceMethod scalaz/std/BooleanFunctions.negConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final boolean negInverseConditional(boolean, scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #501                // InterfaceMethod scalaz/std/BooleanFunctions.negInverseConditional$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Z
       6: ireturn

  public final void unless(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #509                // InterfaceMethod scalaz/std/BooleanFunctions.unless$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final void when(boolean, scala.Function0<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #513                // InterfaceMethod scalaz/std/BooleanFunctions.when$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)V
       6: return

  public final <M, A> M unlessM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #521                // InterfaceMethod scalaz/std/BooleanFunctions.unlessM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object unlessMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #528                // InterfaceMethod scalaz/std/BooleanFunctions.unlessMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M whenM(boolean, scala.Function0<M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #533                // InterfaceMethod scalaz/std/BooleanFunctions.whenM$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <MA> java.lang.Object whenMU(boolean, scala.Function0<MA>, scalaz.Unapply<scalaz.Applicative, MA>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #537                // InterfaceMethod scalaz/std/BooleanFunctions.whenMU$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final <A> A fold(boolean, scala.Function0<A>, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #544                // InterfaceMethod scalaz/std/BooleanFunctions.fold$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.Option<A> option(boolean, scala.Function0<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #551                // InterfaceMethod scalaz/std/BooleanFunctions.option$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;)Lscala/Option;
       6: areturn

  public int test(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #557                // InterfaceMethod scalaz/std/BooleanFunctions.test$:(Lscalaz/std/BooleanFunctions;Z)I
       5: ireturn

  public final <A> A valueOrZero(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #566                // InterfaceMethod scalaz/std/BooleanFunctions.valueOrZero$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A> A zeroOrValue(boolean, scala.Function0<A>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #570                // InterfaceMethod scalaz/std/BooleanFunctions.zeroOrValue$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <M, A> M pointOrEmpty(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #578                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmpty$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M, A> M emptyOrPoint(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #583                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPoint$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M, A> M emptyOrPure(boolean, scala.Function0<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #587                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPure$:(Lscalaz/std/BooleanFunctions;ZLscala/Function0;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       9: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> pointOrEmptyNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #594                // InterfaceMethod scalaz/std/BooleanFunctions.pointOrEmptyNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPointNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #598                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPointNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <M> scalaz.NaturalTransformation<java.lang.Object, M> emptyOrPureNT(boolean, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #602                // InterfaceMethod scalaz/std/BooleanFunctions.emptyOrPureNT$:(Lscalaz/std/BooleanFunctions;ZLscalaz/Applicative;Lscalaz/PlusEmpty;)Lscalaz/NaturalTransformation;
       7: areturn

  public final <A> scala.collection.immutable.Stream<A> interleave(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #613                // InterfaceMethod scalaz/std/StreamFunctions.interleave$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #621                // InterfaceMethod scalaz/std/StreamFunctions.toZipper$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #625                // InterfaceMethod scalaz/std/StreamFunctions.zipperEnd$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       5: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> heads(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #631                // InterfaceMethod scalaz/std/StreamFunctions.heads$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> tails(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #635                // InterfaceMethod scalaz/std/StreamFunctions.tails$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       5: areturn

  public final <A, B, C> scala.collection.immutable.Stream<scala.Function1<B, C>> zapp(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #640                // InterfaceMethod scalaz/std/StreamFunctions.zapp$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A, B> scala.collection.immutable.Stream<scalaz.Tree<B>> unfoldForest(scala.collection.immutable.Stream<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.Stream<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #647                // InterfaceMethod scalaz/std/StreamFunctions.unfoldForest$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A, B, M> M unfoldForestM(scala.collection.immutable.Stream<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #655                // InterfaceMethod scalaz/std/StreamFunctions.unfoldForestM$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.Stream<A> intersperse(scala.collection.immutable.Stream<A>, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #662                // InterfaceMethod scalaz/std/StreamFunctions.intersperse$:(Lscalaz/std/StreamFunctions;Lscala/collection/immutable/Stream;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       6: areturn

  public <A, B> scala.collection.immutable.Stream<B> unfold(A, scala.Function1<A, scala.Option<scala.Tuple2<B, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #670                // InterfaceMethod scalaz/std/StreamFunctions.unfold$:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public <A, B> scala.collection.immutable.Stream<B> unfoldm(A, scala.Function1<A, scalaz.Maybe<scala.Tuple2<B, A>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #675                // InterfaceMethod scalaz/std/StreamFunctions.unfoldm$:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Stream;
       6: areturn

  public final <A> scala.Option<A> some(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #684                // InterfaceMethod scalaz/std/OptionFunctions.some$:(Lscalaz/std/OptionFunctions;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public final <A> scala.Option<A> none();
    Code:
       0: aload_0
       1: invokestatic  #691                // InterfaceMethod scalaz/std/OptionFunctions.none$:(Lscalaz/std/OptionFunctions;)Lscala/Option;
       4: areturn

  public final <A, X> X cata(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #698                // InterfaceMethod scalaz/std/OptionFunctions.cata$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, X> X fold(scala.Option<A>, scala.Function1<A, X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #700                // InterfaceMethod scalaz/std/OptionFunctions.fold$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public final <A, E> scalaz.Validation<E, A> toSuccess(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #707                // InterfaceMethod scalaz/std/OptionFunctions.toSuccess$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<A, B> toFailure(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #713                // InterfaceMethod scalaz/std/OptionFunctions.toFailure$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.Validation<scalaz.NonEmptyList<E>, A> toSuccessNel(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #718                // InterfaceMethod scalaz/std/OptionFunctions.toSuccessNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, B> scalaz.Validation<scalaz.NonEmptyList<A>, B> toFailureNel(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #723                // InterfaceMethod scalaz/std/OptionFunctions.toFailureNel$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/Validation;
       6: areturn

  public final <A, E> scalaz.$bslash$div<E, A> toRight(scala.Option<A>, scala.Function0<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #730                // InterfaceMethod scalaz/std/OptionFunctions.toRight$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A, B> scalaz.$bslash$div<A, B> toLeft(scala.Option<A>, scala.Function0<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #735                // InterfaceMethod scalaz/std/OptionFunctions.toLeft$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;)Lscalaz/$bslash$div;
       6: areturn

  public final <A> scalaz.Maybe<A> toMaybe(scala.Option<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #742                // InterfaceMethod scalaz/std/OptionFunctions.toMaybe$:(Lscalaz/std/OptionFunctions;Lscala/Option;)Lscalaz/Maybe;
       5: areturn

  public final <A, M> M orEmpty(scala.Option<A>, scalaz.Applicative<M>, scalaz.PlusEmpty<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #751                // InterfaceMethod scalaz/std/OptionFunctions.orEmpty$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscalaz/Applicative;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public final <A, F> F getOrElseF(scala.Option<A>, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #760                // InterfaceMethod scalaz/std/OptionFunctions.getOrElseF$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <F, A, B> B foldLift(scala.Option<A>, scala.Function0<B>, scala.Function1<F, B>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #768                // InterfaceMethod scalaz/std/OptionFunctions.foldLift$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B foldLiftOpt(scala.Option<A>, scala.Function0<B>, scala.Function1<scala.Option<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #775                // InterfaceMethod scalaz/std/OptionFunctions.foldLiftOpt$:(Lscalaz/std/OptionFunctions;Lscala/Option;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.List<A> intersperse(scala.collection.immutable.List<A>, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #782                // InterfaceMethod scalaz/std/ListFunctions.intersperse$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;)Lscala/collection/immutable/List;
       6: areturn

  public final <A> scala.Option<scala.collection.immutable.List<A>> tailOption(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #789                // InterfaceMethod scalaz/std/ListFunctions.tailOption$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/Option;
       5: areturn

  public final <A> scala.collection.immutable.List<A> nil();
    Code:
       0: aload_0
       1: invokestatic  #796                // InterfaceMethod scalaz/std/ListFunctions.nil$:(Lscalaz/std/ListFunctions;)Lscala/collection/immutable/List;
       4: areturn

  public final <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #803                // InterfaceMethod scalaz/std/ListFunctions.toNel$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #806                // InterfaceMethod scalaz/std/ListFunctions.toZipper$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #808                // InterfaceMethod scalaz/std/ListFunctions.zipperEnd$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscalaz/Maybe;
       5: areturn

  public final <A, B> B $less$up$greater(scala.collection.immutable.List<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #815                // InterfaceMethod scalaz/std/ListFunctions.$less$up$greater$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M takeWhileM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #823                // InterfaceMethod scalaz/std/ListFunctions.takeWhileM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M takeUntilM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #828                // InterfaceMethod scalaz/std/ListFunctions.takeUntilM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M filterM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #836                // InterfaceMethod scalaz/std/ListFunctions.filterM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M findM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #841                // InterfaceMethod scalaz/std/ListFunctions.findM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> powerset(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #847                // InterfaceMethod scalaz/std/ListFunctions.powerset$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A, M> M partitionM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #852                // InterfaceMethod scalaz/std/ListFunctions.partitionM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M spanM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #857                // InterfaceMethod scalaz/std/ListFunctions.spanM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M breakM(scala.collection.immutable.List<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #862                // InterfaceMethod scalaz/std/ListFunctions.breakM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, M> M groupWhenM(scala.collection.immutable.List<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #870                // InterfaceMethod scalaz/std/ListFunctions.groupWhenM$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public final <A, B> scala.collection.immutable.Map<B, scalaz.NonEmptyList<A>> groupBy1(scala.collection.immutable.List<A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #877                // InterfaceMethod scalaz/std/ListFunctions.groupBy1$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/collection/immutable/Map;
       6: areturn

  public final <A> scala.collection.immutable.List<scalaz.NonEmptyList<A>> groupWhen(scala.collection.immutable.List<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #884                // InterfaceMethod scalaz/std/ListFunctions.groupWhen$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Lscala/Function2;)Lscala/collection/immutable/List;
       6: areturn

  public final <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumLeft(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #892                // InterfaceMethod scalaz/std/ListFunctions.mapAccumLeft$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public final <A, B, C> scala.Tuple2<C, scala.collection.immutable.List<B>> mapAccumRight(scala.collection.immutable.List<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #896                // InterfaceMethod scalaz/std/ListFunctions.mapAccumRight$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> tailz(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #900                // InterfaceMethod scalaz/std/ListFunctions.tailz$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.collection.immutable.List<A>> initz(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #904                // InterfaceMethod scalaz/std/ListFunctions.initz$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.Tuple2<A, A>> allPairs(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #909                // InterfaceMethod scalaz/std/ListFunctions.allPairs$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public final <A> scala.collection.immutable.List<scala.Tuple2<A, A>> adjacentPairs(scala.collection.immutable.List<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #913                // InterfaceMethod scalaz/std/ListFunctions.adjacentPairs$:(Lscalaz/std/ListFunctions;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       5: areturn

  public <A> scalaz.Order<java.util.concurrent.Callable<A>> callableOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #922                // InterfaceMethod scalaz/std/java/util/concurrent/CallableInstances.callableOrder$:(Lscalaz/std/java/util/concurrent/CallableInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <E extends java.lang.Enum<E>> scalaz.Equal<E> enumInstance();
    Code:
       0: aload_0
       1: invokestatic  #931                // InterfaceMethod scalaz/std/java/EnumInstances.enumInstance$:(Lscalaz/std/java/EnumInstances;)Lscalaz/Equal;
       4: areturn

  public <A> scalaz.Monoid<scala.math.Ordering<A>> orderingMonoid();
    Code:
       0: aload_0
       1: invokestatic  #940                // InterfaceMethod scalaz/std/math/OrderingInstances.orderingMonoid$:(Lscalaz/std/math/OrderingInstances;)Lscalaz/Monoid;
       4: areturn

  public <L> scalaz.Traverse<?> eitherMonad();
    Code:
       0: aload_0
       1: invokestatic  #949                // InterfaceMethod scalaz/std/EitherInstances.eitherMonad$:(Lscalaz/std/EitherInstances;)Lscalaz/Traverse;
       4: areturn

  public <A, B> scalaz.Order<scala.util.Either<A, B>> eitherOrder(scalaz.Order<A>, scalaz.Order<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #958                // InterfaceMethod scalaz/std/EitherInstances.eitherOrder$:(Lscalaz/std/EitherInstances;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       6: areturn

  public scalaz.Associative<scala.util.Either> eitherAssociative();
    Code:
       0: aload_0
       1: invokestatic  #965                // InterfaceMethod scalaz/std/EitherInstances.eitherAssociative$:(Lscalaz/std/EitherInstances;)Lscalaz/Associative;
       4: areturn

  public <A, B> scalaz.Show<scala.util.Either<A, B>> eitherShow(scalaz.Show<A>, scalaz.Show<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #974                // InterfaceMethod scalaz/std/EitherInstances.eitherShow$:(Lscalaz/std/EitherInstances;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       6: areturn

  public <A, B> scalaz.Equal<scala.util.Either<A, B>> eitherEqual(scalaz.Equal<A>, scalaz.Equal<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #985                // InterfaceMethod scalaz/std/EitherInstances0.eitherEqual$:(Lscalaz/std/EitherInstances0;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       6: areturn

  public <A> scalaz.Monoid<scala.concurrent.Future<A>> futureMonoid(scalaz.Monoid<A>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #997                // InterfaceMethod scalaz/std/FutureInstances.futureMonoid$:(Lscalaz/std/FutureInstances;Lscalaz/Monoid;Lscala/concurrent/ExecutionContext;)Lscalaz/Monoid;
       6: areturn

  public scalaz.Nondeterminism<scala.concurrent.Future> futureInstance(scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1007               // InterfaceMethod scalaz/std/FutureInstances1.futureInstance$:(Lscalaz/std/FutureInstances1;Lscala/concurrent/ExecutionContext;)Lscalaz/Nondeterminism;
       5: areturn

  public <A> scalaz.Semigroup<scala.concurrent.Future<A>> futureSemigroup(scalaz.Semigroup<A>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1014               // InterfaceMethod scalaz/std/FutureInstances1.futureSemigroup$:(Lscalaz/std/FutureInstances1;Lscalaz/Semigroup;Lscala/concurrent/ExecutionContext;)Lscalaz/Semigroup;
       6: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Vector<A>> vectorMonoid();
    Code:
       0: aload_0
       1: invokestatic  #1023               // InterfaceMethod scalaz/std/VectorInstances.vectorMonoid$:(Lscalaz/std/VectorInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<scala.collection.immutable.Vector<A>> vectorShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1030               // InterfaceMethod scalaz/std/VectorInstances.vectorShow$:(Lscalaz/std/VectorInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<scala.collection.immutable.Vector<A>> vectorOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1036               // InterfaceMethod scalaz/std/VectorInstances.vectorOrder$:(Lscalaz/std/VectorInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Equal<scala.collection.immutable.Vector<A>> vectorEqual(scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1045               // InterfaceMethod scalaz/std/VectorInstances0.vectorEqual$:(Lscalaz/std/VectorInstances0;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <A1> scalaz.Show<scala.Tuple1<A1>> tuple1Show(scalaz.Show<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1054               // InterfaceMethod scalaz/std/TupleInstances3.tuple1Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A1, A2> scalaz.Show<scala.Tuple2<A1, A2>> tuple2Show(scalaz.Show<A1>, scalaz.Show<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1061               // InterfaceMethod scalaz/std/TupleInstances3.tuple2Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       6: areturn

  public <A1, A2, A3> scalaz.Show<scala.Tuple3<A1, A2, A3>> tuple3Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1069               // InterfaceMethod scalaz/std/TupleInstances3.tuple3Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Show<scala.Tuple4<A1, A2, A3, A4>> tuple4Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1077               // InterfaceMethod scalaz/std/TupleInstances3.tuple4Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Show<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1085               // InterfaceMethod scalaz/std/TupleInstances3.tuple5Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Show<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1093               // InterfaceMethod scalaz/std/TupleInstances3.tuple6Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Show<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>, scalaz.Show<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1101               // InterfaceMethod scalaz/std/TupleInstances3.tuple7Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Show<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>, scalaz.Show<A4>, scalaz.Show<A5>, scalaz.Show<A6>, scalaz.Show<A7>, scalaz.Show<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1109               // InterfaceMethod scalaz/std/TupleInstances3.tuple8Show$:(Lscalaz/std/TupleInstances3;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
      17: areturn

  public <A1> scalaz.Order<scala.Tuple1<A1>> tuple1Order(scalaz.Order<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1115               // InterfaceMethod scalaz/std/TupleInstances3.tuple1Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A1, A2> scalaz.Order<scala.Tuple2<A1, A2>> tuple2Order(scalaz.Order<A1>, scalaz.Order<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1121               // InterfaceMethod scalaz/std/TupleInstances3.tuple2Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       6: areturn

  public <A1, A2, A3> scalaz.Order<scala.Tuple3<A1, A2, A3>> tuple3Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1128               // InterfaceMethod scalaz/std/TupleInstances3.tuple3Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Order<scala.Tuple4<A1, A2, A3, A4>> tuple4Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1135               // InterfaceMethod scalaz/std/TupleInstances3.tuple4Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Order<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1142               // InterfaceMethod scalaz/std/TupleInstances3.tuple5Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Order<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1149               // InterfaceMethod scalaz/std/TupleInstances3.tuple6Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Order<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>, scalaz.Order<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1156               // InterfaceMethod scalaz/std/TupleInstances3.tuple7Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Order<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>, scalaz.Order<A4>, scalaz.Order<A5>, scalaz.Order<A6>, scalaz.Order<A7>, scalaz.Order<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1163               // InterfaceMethod scalaz/std/TupleInstances3.tuple8Order$:(Lscalaz/std/TupleInstances3;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
      17: areturn

  public <A1> scalaz.Cozip<?> tuple2Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1170               // InterfaceMethod scalaz/std/TupleInstances3.tuple2Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2> scalaz.Cozip<?> tuple3Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1175               // InterfaceMethod scalaz/std/TupleInstances3.tuple3Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2, A3> scalaz.Cozip<?> tuple4Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1180               // InterfaceMethod scalaz/std/TupleInstances3.tuple4Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2, A3, A4> scalaz.Cozip<?> tuple5Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1185               // InterfaceMethod scalaz/std/TupleInstances3.tuple5Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2, A3, A4, A5> scalaz.Cozip<?> tuple6Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1190               // InterfaceMethod scalaz/std/TupleInstances3.tuple6Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Cozip<?> tuple7Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1195               // InterfaceMethod scalaz/std/TupleInstances3.tuple7Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Cozip<?> tuple8Cozip();
    Code:
       0: aload_0
       1: invokestatic  #1200               // InterfaceMethod scalaz/std/TupleInstances3.tuple8Cozip$:(Lscalaz/std/TupleInstances3;)Lscalaz/Cozip;
       4: areturn

  public <A1> scalaz.Monad<?> tuple2Monad(scalaz.Monoid<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1207               // InterfaceMethod scalaz/std/TupleInstances3.tuple2Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;)Lscalaz/Monad;
       5: areturn

  public <A1, A2> scalaz.Monad<?> tuple3Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1214               // InterfaceMethod scalaz/std/TupleInstances3.tuple3Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       6: areturn

  public <A1, A2, A3> scalaz.Monad<?> tuple4Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1221               // InterfaceMethod scalaz/std/TupleInstances3.tuple4Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Monad<?> tuple5Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1228               // InterfaceMethod scalaz/std/TupleInstances3.tuple5Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Monad<?> tuple6Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1235               // InterfaceMethod scalaz/std/TupleInstances3.tuple6Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Monad<?> tuple7Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1242               // InterfaceMethod scalaz/std/TupleInstances3.tuple7Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Monad<?> tuple8Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1249               // InterfaceMethod scalaz/std/TupleInstances3.tuple8Monad$:(Lscalaz/std/TupleInstances3;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
      15: areturn

  public <A1> scalaz.SemiLattice<scala.Tuple1<A1>> tuple1SemiLattice(scalaz.SemiLattice<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1256               // InterfaceMethod scalaz/std/TupleInstances3.tuple1SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       5: areturn

  public <A1, A2> scalaz.SemiLattice<scala.Tuple2<A1, A2>> tuple2SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1264               // InterfaceMethod scalaz/std/TupleInstances3.tuple2SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       6: areturn

  public <A1, A2, A3> scalaz.SemiLattice<scala.Tuple3<A1, A2, A3>> tuple3SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1271               // InterfaceMethod scalaz/std/TupleInstances3.tuple3SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       7: areturn

  public <A1, A2, A3, A4> scalaz.SemiLattice<scala.Tuple4<A1, A2, A3, A4>> tuple4SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1278               // InterfaceMethod scalaz/std/TupleInstances3.tuple4SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.SemiLattice<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1285               // InterfaceMethod scalaz/std/TupleInstances3.tuple5SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.SemiLattice<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1292               // InterfaceMethod scalaz/std/TupleInstances3.tuple6SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.SemiLattice<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>, scalaz.SemiLattice<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1299               // InterfaceMethod scalaz/std/TupleInstances3.tuple7SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.SemiLattice<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8SemiLattice(scalaz.SemiLattice<A1>, scalaz.SemiLattice<A2>, scalaz.SemiLattice<A3>, scalaz.SemiLattice<A4>, scalaz.SemiLattice<A5>, scalaz.SemiLattice<A6>, scalaz.SemiLattice<A7>, scalaz.SemiLattice<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1306               // InterfaceMethod scalaz/std/TupleInstances3.tuple8SemiLattice$:(Lscalaz/std/TupleInstances3;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
      17: areturn

  public <A1> scalaz.Band<scala.Tuple1<A1>> tuple1Band(scalaz.Band<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1315               // InterfaceMethod scalaz/std/TupleInstances2.tuple1Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;)Lscalaz/Band;
       5: areturn

  public <A1, A2> scalaz.Band<scala.Tuple2<A1, A2>> tuple2Band(scalaz.Band<A1>, scalaz.Band<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1323               // InterfaceMethod scalaz/std/TupleInstances2.tuple2Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
       6: areturn

  public <A1, A2, A3> scalaz.Band<scala.Tuple3<A1, A2, A3>> tuple3Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1330               // InterfaceMethod scalaz/std/TupleInstances2.tuple3Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Band<scala.Tuple4<A1, A2, A3, A4>> tuple4Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1337               // InterfaceMethod scalaz/std/TupleInstances2.tuple4Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Band<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1344               // InterfaceMethod scalaz/std/TupleInstances2.tuple5Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Band<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1351               // InterfaceMethod scalaz/std/TupleInstances2.tuple6Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Band<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>, scalaz.Band<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1358               // InterfaceMethod scalaz/std/TupleInstances2.tuple7Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Band<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Band(scalaz.Band<A1>, scalaz.Band<A2>, scalaz.Band<A3>, scalaz.Band<A4>, scalaz.Band<A5>, scalaz.Band<A6>, scalaz.Band<A7>, scalaz.Band<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1365               // InterfaceMethod scalaz/std/TupleInstances2.tuple8Band$:(Lscalaz/std/TupleInstances2;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;Lscalaz/Band;)Lscalaz/Band;
      17: areturn

  public <A1> scalaz.BindRec<?> tuple2BindRec(scalaz.Semigroup<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1372               // InterfaceMethod scalaz/std/TupleInstances2.tuple2BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;)Lscalaz/BindRec;
       5: areturn

  public <A1, A2> scalaz.BindRec<?> tuple3BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1379               // InterfaceMethod scalaz/std/TupleInstances2.tuple3BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
       6: areturn

  public <A1, A2, A3> scalaz.BindRec<?> tuple4BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1386               // InterfaceMethod scalaz/std/TupleInstances2.tuple4BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
       7: areturn

  public <A1, A2, A3, A4> scalaz.BindRec<?> tuple5BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1396               // InterfaceMethod scalaz/std/TupleInstances2.tuple5BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.BindRec<?> tuple6BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1405               // InterfaceMethod scalaz/std/TupleInstances2.tuple6BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.BindRec<?> tuple7BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1418               // InterfaceMethod scalaz/std/TupleInstances2.tuple7BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.BindRec<?> tuple8BindRec(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1432               // InterfaceMethod scalaz/std/TupleInstances2.tuple8BindRec$:(Lscalaz/std/TupleInstances2;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/BindRec;
      15: areturn

  public <A1> scalaz.Equal<scala.Tuple1<A1>> tuple1Equal(scalaz.Equal<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1438               // InterfaceMethod scalaz/std/TupleInstances2.tuple1Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <A1, A2> scalaz.Equal<scala.Tuple2<A1, A2>> tuple2Equal(scalaz.Equal<A1>, scalaz.Equal<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1444               // InterfaceMethod scalaz/std/TupleInstances2.tuple2Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       6: areturn

  public <A1, A2, A3> scalaz.Equal<scala.Tuple3<A1, A2, A3>> tuple3Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1451               // InterfaceMethod scalaz/std/TupleInstances2.tuple3Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Equal<scala.Tuple4<A1, A2, A3, A4>> tuple4Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1458               // InterfaceMethod scalaz/std/TupleInstances2.tuple4Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Equal<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1465               // InterfaceMethod scalaz/std/TupleInstances2.tuple5Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Equal<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1472               // InterfaceMethod scalaz/std/TupleInstances2.tuple6Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Equal<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>, scalaz.Equal<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1479               // InterfaceMethod scalaz/std/TupleInstances2.tuple7Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Equal<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>, scalaz.Equal<A4>, scalaz.Equal<A5>, scalaz.Equal<A6>, scalaz.Equal<A7>, scalaz.Equal<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1486               // InterfaceMethod scalaz/std/TupleInstances2.tuple8Equal$:(Lscalaz/std/TupleInstances2;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
      17: areturn

  public <A1> scalaz.Traverse<?> tuple2Instance();
    Code:
       0: aload_0
       1: invokestatic  #1494               // InterfaceMethod scalaz/std/TupleInstances1.tuple2Instance$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2> scalaz.Traverse<?> tuple3Functor();
    Code:
       0: aload_0
       1: invokestatic  #1499               // InterfaceMethod scalaz/std/TupleInstances1.tuple3Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2, A3> scalaz.Traverse<?> tuple4Functor();
    Code:
       0: aload_0
       1: invokestatic  #1504               // InterfaceMethod scalaz/std/TupleInstances1.tuple4Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2, A3, A4> scalaz.Traverse<?> tuple5Functor();
    Code:
       0: aload_0
       1: invokestatic  #1509               // InterfaceMethod scalaz/std/TupleInstances1.tuple5Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2, A3, A4, A5> scalaz.Traverse<?> tuple6Functor();
    Code:
       0: aload_0
       1: invokestatic  #1514               // InterfaceMethod scalaz/std/TupleInstances1.tuple6Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Traverse<?> tuple7Functor();
    Code:
       0: aload_0
       1: invokestatic  #1519               // InterfaceMethod scalaz/std/TupleInstances1.tuple7Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Traverse<?> tuple8Functor();
    Code:
       0: aload_0
       1: invokestatic  #1524               // InterfaceMethod scalaz/std/TupleInstances1.tuple8Functor$:(Lscalaz/std/TupleInstances1;)Lscalaz/Traverse;
       4: areturn

  public <A1> scalaz.Monoid<scala.Tuple1<A1>> tuple1Monoid(scalaz.Monoid<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1531               // InterfaceMethod scalaz/std/TupleInstances1.tuple1Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;)Lscalaz/Monoid;
       5: areturn

  public <A1, A2> scalaz.Monoid<scala.Tuple2<A1, A2>> tuple2Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1538               // InterfaceMethod scalaz/std/TupleInstances1.tuple2Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       6: areturn

  public <A1, A2, A3> scalaz.Monoid<scala.Tuple3<A1, A2, A3>> tuple3Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1545               // InterfaceMethod scalaz/std/TupleInstances1.tuple3Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Monoid<scala.Tuple4<A1, A2, A3, A4>> tuple4Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1552               // InterfaceMethod scalaz/std/TupleInstances1.tuple4Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Monoid<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1559               // InterfaceMethod scalaz/std/TupleInstances1.tuple5Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Monoid<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1566               // InterfaceMethod scalaz/std/TupleInstances1.tuple6Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Monoid<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1573               // InterfaceMethod scalaz/std/TupleInstances1.tuple7Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Monoid<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>, scalaz.Monoid<A4>, scalaz.Monoid<A5>, scalaz.Monoid<A6>, scalaz.Monoid<A7>, scalaz.Monoid<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1580               // InterfaceMethod scalaz/std/TupleInstances1.tuple8Monoid$:(Lscalaz/std/TupleInstances1;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
      17: areturn

  public <A1> scalaz.Semigroup<scala.Tuple1<A1>> tuple1Semigroup(scalaz.Semigroup<A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1589               // InterfaceMethod scalaz/std/TupleInstances0.tuple1Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       5: areturn

  public <A1, A2> scalaz.Semigroup<scala.Tuple2<A1, A2>> tuple2Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1596               // InterfaceMethod scalaz/std/TupleInstances0.tuple2Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       6: areturn

  public <A1, A2, A3> scalaz.Semigroup<scala.Tuple3<A1, A2, A3>> tuple3Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1603               // InterfaceMethod scalaz/std/TupleInstances0.tuple3Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       7: areturn

  public <A1, A2, A3, A4> scalaz.Semigroup<scala.Tuple4<A1, A2, A3, A4>> tuple4Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1610               // InterfaceMethod scalaz/std/TupleInstances0.tuple4Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       9: areturn

  public <A1, A2, A3, A4, A5> scalaz.Semigroup<scala.Tuple5<A1, A2, A3, A4, A5>> tuple5Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1617               // InterfaceMethod scalaz/std/TupleInstances0.tuple5Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      11: areturn

  public <A1, A2, A3, A4, A5, A6> scalaz.Semigroup<scala.Tuple6<A1, A2, A3, A4, A5, A6>> tuple6Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1624               // InterfaceMethod scalaz/std/TupleInstances0.tuple6Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, A7> scalaz.Semigroup<scala.Tuple7<A1, A2, A3, A4, A5, A6, A7>> tuple7Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1631               // InterfaceMethod scalaz/std/TupleInstances0.tuple7Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      15: areturn

  public <A1, A2, A3, A4, A5, A6, A7, A8> scalaz.Semigroup<scala.Tuple8<A1, A2, A3, A4, A5, A6, A7, A8>> tuple8Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>, scalaz.Semigroup<A4>, scalaz.Semigroup<A5>, scalaz.Semigroup<A6>, scalaz.Semigroup<A7>, scalaz.Semigroup<A8>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1638               // InterfaceMethod scalaz/std/TupleInstances0.tuple8Semigroup$:(Lscalaz/std/TupleInstances0;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
      17: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Stream<A>> streamMonoid();
    Code:
       0: aload_0
       1: invokestatic  #1646               // InterfaceMethod scalaz/std/StreamInstances.streamMonoid$:(Lscalaz/std/StreamInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Equal<scala.collection.immutable.Stream<A>> streamEqual(scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1652               // InterfaceMethod scalaz/std/StreamInstances.streamEqual$:(Lscalaz/std/StreamInstances;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <A> scalaz.Order<scala.collection.immutable.Stream<A>> streamOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1658               // InterfaceMethod scalaz/std/StreamInstances.streamOrder$:(Lscalaz/std/StreamInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Show<scala.collection.immutable.Stream<A>> streamShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1664               // InterfaceMethod scalaz/std/StreamInstances.streamShow$:(Lscalaz/std/StreamInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<scala.collection.immutable.Set<A>> setOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1672               // InterfaceMethod scalaz/std/SetInstances.setOrder$:(Lscalaz/std/SetInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.Set<A>> setMonoid();
    Code:
       0: aload_0
       1: invokestatic  #1678               // InterfaceMethod scalaz/std/SetInstances.setMonoid$:(Lscalaz/std/SetInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<scala.collection.immutable.Set<A>> setShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1685               // InterfaceMethod scalaz/std/SetInstances.setShow$:(Lscalaz/std/SetInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Monoid<scala.Option<A>> optionMonoid(scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1694               // InterfaceMethod scalaz/std/OptionInstances.optionMonoid$:(Lscalaz/std/OptionInstances;Lscalaz/Semigroup;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Order<scala.Option<A>> optionOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1700               // InterfaceMethod scalaz/std/OptionInstances.optionOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Show<scala.Option<A>> optionShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1706               // InterfaceMethod scalaz/std/OptionInstances.optionShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionFirst();
    Code:
       0: aload_0
       1: invokestatic  #1712               // InterfaceMethod scalaz/std/OptionInstances.optionFirst$:(Lscalaz/std/OptionInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<java.lang.Object> optionFirstShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1717               // InterfaceMethod scalaz/std/OptionInstances.optionFirstShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionFirstOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1722               // InterfaceMethod scalaz/std/OptionInstances.optionFirstOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionFirstMonad();
    Code:
       0: aload_0
       1: invokestatic  #1729               // InterfaceMethod scalaz/std/OptionInstances.optionFirstMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionLast();
    Code:
       0: aload_0
       1: invokestatic  #1733               // InterfaceMethod scalaz/std/OptionInstances.optionLast$:(Lscalaz/std/OptionInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<java.lang.Object> optionLastShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1737               // InterfaceMethod scalaz/std/OptionInstances.optionLastShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionLastOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1741               // InterfaceMethod scalaz/std/OptionInstances.optionLastOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionLastMonad();
    Code:
       0: aload_0
       1: invokestatic  #1745               // InterfaceMethod scalaz/std/OptionInstances.optionLastMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionMin(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1753               // InterfaceMethod scalaz/std/OptionInstances.optionMin$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Show<java.lang.Object> optionMinShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1757               // InterfaceMethod scalaz/std/OptionInstances.optionMinShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionMinOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1761               // InterfaceMethod scalaz/std/OptionInstances.optionMinOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionMinMonad();
    Code:
       0: aload_0
       1: invokestatic  #1765               // InterfaceMethod scalaz/std/OptionInstances.optionMinMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Monoid<java.lang.Object> optionMax(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1769               // InterfaceMethod scalaz/std/OptionInstances.optionMax$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Monoid;
       5: areturn

  public <A> scalaz.Show<java.lang.Object> optionMaxShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1773               // InterfaceMethod scalaz/std/OptionInstances.optionMaxShow$:(Lscalaz/std/OptionInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<java.lang.Object> optionMaxOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1777               // InterfaceMethod scalaz/std/OptionInstances.optionMaxOrder$:(Lscalaz/std/OptionInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public scalaz.Monad<java.lang.Object> optionMaxMonad();
    Code:
       0: aload_0
       1: invokestatic  #1781               // InterfaceMethod scalaz/std/OptionInstances.optionMaxMonad$:(Lscalaz/std/OptionInstances;)Lscalaz/Monad;
       4: areturn

  public <A> scalaz.Equal<scala.Option<A>> optionEqual(scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1789               // InterfaceMethod scalaz/std/OptionInstances0.optionEqual$:(Lscalaz/std/OptionInstances0;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <A> scalaz.SemiLattice<scala.Option<A>> optionSemiLattice(scalaz.SemiLattice<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1795               // InterfaceMethod scalaz/std/OptionInstances0.optionSemiLattice$:(Lscalaz/std/OptionInstances0;Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       5: areturn

  public <A> scalaz.Band<scala.Option<A>> optionBand(scalaz.Band<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1803               // InterfaceMethod scalaz/std/OptionInstances1.optionBand$:(Lscalaz/std/OptionInstances1;Lscalaz/Band;)Lscalaz/Band;
       5: areturn

  public <K> scalaz.Traverse<?> sortedMapInstance(scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1812               // InterfaceMethod scalaz/std/SortedMapInstances.sortedMapInstance$:(Lscalaz/std/SortedMapInstances;Lscala/math/Ordering;)Lscalaz/Traverse;
       5: areturn

  public <K, V> scalaz.Monoid<scala.collection.immutable.SortedMap<K, V>> sortedMapMonoid(scalaz.Semigroup<V>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1821               // InterfaceMethod scalaz/std/SortedMapInstances.sortedMapMonoid$:(Lscalaz/std/SortedMapInstances;Lscalaz/Semigroup;Lscala/math/Ordering;)Lscalaz/Monoid;
       6: areturn

  public <K, V> scalaz.Show<scala.collection.immutable.SortedMap<K, V>> sortedMapShow(scalaz.Show<K>, scalaz.Show<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1828               // InterfaceMethod scalaz/std/SortedMapInstances.sortedMapShow$:(Lscalaz/std/SortedMapInstances;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       6: areturn

  public <K, V> scalaz.Order<scala.collection.immutable.SortedMap<K, V>> sortedMapOrder(scalaz.Order<K>, scalaz.Order<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1834               // InterfaceMethod scalaz/std/SortedMapInstances.sortedMapOrder$:(Lscalaz/std/SortedMapInstances;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       6: areturn

  public final <K, A> scala.collection.immutable.SortedMap<K, A> alter(scala.collection.immutable.SortedMap<K, A>, K, scala.Function1<scala.Option<A>, scala.Option<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1843               // InterfaceMethod scalaz/std/SortedMapFunctions.alter$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/SortedMap;
       7: areturn

  public final <K, A, B, C> scala.collection.immutable.SortedMap<K, C> intersectWithKey(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.Function3<K, A, B, C>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1853               // InterfaceMethod scalaz/std/SortedMapFunctions.intersectWithKey$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function3;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public final <K, A, B, C> scala.collection.immutable.SortedMap<K, C> intersectWith(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, B>, scala.Function2<A, B, C>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1861               // InterfaceMethod scalaz/std/SortedMapFunctions.intersectWith$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function2;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public final <K, K2, A> scala.collection.immutable.SortedMap<K2, A> mapKeys(scala.collection.immutable.SortedMap<K, A>, scala.Function1<K, K2>, scala.math.Ordering<K2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1868               // InterfaceMethod scalaz/std/SortedMapFunctions.mapKeys$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Lscala/Function1;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       7: areturn

  public final <K, A> scala.collection.immutable.SortedMap<K, A> unionWithKey(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, A>, scala.Function3<K, A, A, A>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1873               // InterfaceMethod scalaz/std/SortedMapFunctions.unionWithKey$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function3;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public final <K, A> scala.collection.immutable.SortedMap<K, A> unionWith(scala.collection.immutable.SortedMap<K, A>, scala.collection.immutable.SortedMap<K, A>, scala.Function2<A, A, A>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1878               // InterfaceMethod scalaz/std/SortedMapFunctions.unionWith$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Lscala/collection/immutable/SortedMap;Lscala/Function2;Lscala/math/Ordering;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public final <K, A> scala.collection.immutable.SortedMap<K, A> insertWith(scala.collection.immutable.SortedMap<K, A>, K, A, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1886               // InterfaceMethod scalaz/std/SortedMapFunctions.insertWith$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/immutable/SortedMap;
       9: areturn

  public final <F, K, A> F getOrAdd(scala.collection.immutable.SortedMap<K, A>, K, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1893               // InterfaceMethod scalaz/std/SortedMapFunctions.getOrAdd$:(Lscalaz/std/SortedMapFunctions;Lscala/collection/immutable/SortedMap;Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public <K, V> scalaz.Equal<scala.collection.immutable.SortedMap<K, V>> sortedMapEqual(scalaz.Order<K>, scalaz.Equal<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1902               // InterfaceMethod scalaz/std/SortedMapInstances0.sortedMapEqual$:(Lscalaz/std/SortedMapInstances0;Lscalaz/Order;Lscalaz/Equal;)Lscalaz/Equal;
       6: areturn

  public <K> scalaz.Foldable<?> sortedMapFoldable();
    Code:
       0: aload_0
       1: invokestatic  #1909               // InterfaceMethod scalaz/std/SortedMapInstances0.sortedMapFoldable$:(Lscalaz/std/SortedMapInstances0;)Lscalaz/Foldable;
       4: areturn

  public <K, V> scalaz.Band<scala.collection.immutable.SortedMap<K, V>> sortedMapBand(scalaz.Band<V>, scala.math.Ordering<K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1916               // InterfaceMethod scalaz/std/SortedMapInstances0.sortedMapBand$:(Lscalaz/std/SortedMapInstances0;Lscalaz/Band;Lscala/math/Ordering;)Lscalaz/Band;
       6: areturn

  public <K> scalaz.Traverse<?> mapInstance();
    Code:
       0: aload_0
       1: invokestatic  #1924               // InterfaceMethod scalaz/std/MapInstances.mapInstance$:(Lscalaz/std/MapInstances;)Lscalaz/Traverse;
       4: areturn

  public <K, V> scalaz.Monoid<scala.collection.immutable.Map<K, V>> mapMonoid(scalaz.Semigroup<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1930               // InterfaceMethod scalaz/std/MapInstances.mapMonoid$:(Lscalaz/std/MapInstances;Lscalaz/Semigroup;)Lscalaz/Monoid;
       5: areturn

  public <K, V> scalaz.Show<scala.collection.immutable.Map<K, V>> mapShow(scalaz.Show<K>, scalaz.Show<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1936               // InterfaceMethod scalaz/std/MapInstances.mapShow$:(Lscalaz/std/MapInstances;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       6: areturn

  public <K, V> scalaz.Order<scala.collection.immutable.Map<K, V>> mapOrder(scalaz.Order<K>, scalaz.Order<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1942               // InterfaceMethod scalaz/std/MapInstances.mapOrder$:(Lscalaz/std/MapInstances;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       6: areturn

  public final <K, A> scala.collection.immutable.Map<K, A> alter(scala.collection.immutable.Map<K, A>, K, scala.Function1<scala.Option<A>, scala.Option<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1949               // InterfaceMethod scalaz/std/MapFunctions.alter$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K, A, B, C> scala.collection.immutable.Map<K, C> intersectWithKey(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, B>, scala.Function3<K, A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1954               // InterfaceMethod scalaz/std/MapFunctions.intersectWithKey$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function3;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K, A, B, C> scala.collection.immutable.Map<K, C> intersectWith(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, B>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1959               // InterfaceMethod scalaz/std/MapFunctions.intersectWith$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function2;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K, K2, A> scala.collection.immutable.Map<K2, A> mapKeys(scala.collection.immutable.Map<K, A>, scala.Function1<K, K2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1964               // InterfaceMethod scalaz/std/MapFunctions.mapKeys$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Lscala/Function1;)Lscala/collection/immutable/Map;
       6: areturn

  public final <K, A> scala.collection.immutable.Map<K, A> unionWithKey(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, A>, scala.Function3<K, A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1967               // InterfaceMethod scalaz/std/MapFunctions.unionWithKey$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function3;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K, A> scala.collection.immutable.Map<K, A> unionWith(scala.collection.immutable.Map<K, A>, scala.collection.immutable.Map<K, A>, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1970               // InterfaceMethod scalaz/std/MapFunctions.unionWith$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Function2;)Lscala/collection/immutable/Map;
       7: areturn

  public final <K, A> scala.collection.immutable.Map<K, A> insertWith(scala.collection.immutable.Map<K, A>, K, A, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1975               // InterfaceMethod scalaz/std/MapFunctions.insertWith$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/immutable/Map;
       9: areturn

  public final <F, K, A> F getOrAdd(scala.collection.immutable.Map<K, A>, K, scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1980               // InterfaceMethod scalaz/std/MapFunctions.getOrAdd$:(Lscalaz/std/MapFunctions;Lscala/collection/immutable/Map;Ljava/lang/Object;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public <K, V> scalaz.Equal<scala.collection.immutable.Map<K, V>> mapEqual(scalaz.Order<K>, scalaz.Equal<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1988               // InterfaceMethod scalaz/std/MapInstances0.mapEqual$:(Lscalaz/std/MapInstances0;Lscalaz/Order;Lscalaz/Equal;)Lscalaz/Equal;
       6: areturn

  public <K> scalaz.Foldable<?> mapFoldable();
    Code:
       0: aload_0
       1: invokestatic  #1993               // InterfaceMethod scalaz/std/MapInstances0.mapFoldable$:(Lscalaz/std/MapInstances0;)Lscalaz/Foldable;
       4: areturn

  public <K, V> scalaz.Band<scala.collection.immutable.Map<K, V>> mapBand(scalaz.Band<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1999               // InterfaceMethod scalaz/std/MapInstances0.mapBand$:(Lscalaz/std/MapInstances0;Lscalaz/Band;)Lscalaz/Band;
       5: areturn

  public <A> scalaz.Monoid<scala.collection.immutable.List<A>> listMonoid();
    Code:
       0: aload_0
       1: invokestatic  #2007               // InterfaceMethod scalaz/std/ListInstances.listMonoid$:(Lscalaz/std/ListInstances;)Lscalaz/Monoid;
       4: areturn

  public <A> scalaz.Show<scala.collection.immutable.List<A>> listShow(scalaz.Show<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2013               // InterfaceMethod scalaz/std/ListInstances.listShow$:(Lscalaz/std/ListInstances;Lscalaz/Show;)Lscalaz/Show;
       5: areturn

  public <A> scalaz.Order<scala.collection.immutable.List<A>> listOrder(scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2019               // InterfaceMethod scalaz/std/ListInstances.listOrder$:(Lscalaz/std/ListInstances;Lscalaz/Order;)Lscalaz/Order;
       5: areturn

  public <A> scalaz.Equal<scala.collection.immutable.List<A>> listEqual(scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2027               // InterfaceMethod scalaz/std/ListInstances0.listEqual$:(Lscalaz/std/ListInstances0;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <R> scalaz.Equal<scala.Function0<R>> function0Equal(scalaz.Equal<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2035               // InterfaceMethod scalaz/std/FunctionInstances.function0Equal$:(Lscalaz/std/FunctionInstances;Lscalaz/Equal;)Lscalaz/Equal;
       5: areturn

  public <T> scalaz.Monad<?> function1Covariant();
    Code:
       0: aload_0
       1: invokestatic  #2041               // InterfaceMethod scalaz/std/FunctionInstances.function1Covariant$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <R> scalaz.Contravariant<?> function1Contravariant();
    Code:
       0: aload_0
       1: invokestatic  #2048               // InterfaceMethod scalaz/std/FunctionInstances.function1Contravariant$:(Lscalaz/std/FunctionInstances;)Lscalaz/Contravariant;
       4: areturn

  public <T1, T2> scalaz.Monad<?> function2Instance();
    Code:
       0: aload_0
       1: invokestatic  #2053               // InterfaceMethod scalaz/std/FunctionInstances.function2Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3> scalaz.Monad<?> function3Instance();
    Code:
       0: aload_0
       1: invokestatic  #2058               // InterfaceMethod scalaz/std/FunctionInstances.function3Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4> scalaz.Monad<?> function4Instance();
    Code:
       0: aload_0
       1: invokestatic  #2063               // InterfaceMethod scalaz/std/FunctionInstances.function4Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5> scalaz.Monad<?> function5Instance();
    Code:
       0: aload_0
       1: invokestatic  #2068               // InterfaceMethod scalaz/std/FunctionInstances.function5Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6> scalaz.Monad<?> function6Instance();
    Code:
       0: aload_0
       1: invokestatic  #2073               // InterfaceMethod scalaz/std/FunctionInstances.function6Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6, T7> scalaz.Monad<?> function7Instance();
    Code:
       0: aload_0
       1: invokestatic  #2078               // InterfaceMethod scalaz/std/FunctionInstances.function7Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <T1, T2, T3, T4, T5, T6, T7, T8> scalaz.Monad<?> function8Instance();
    Code:
       0: aload_0
       1: invokestatic  #2083               // InterfaceMethod scalaz/std/FunctionInstances.function8Instance$:(Lscalaz/std/FunctionInstances;)Lscalaz/Monad;
       4: areturn

  public <A, R> scalaz.Monoid<scala.Function1<A, R>> function1Monoid(scalaz.Monoid<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2092               // InterfaceMethod scalaz/std/FunctionInstances0.function1Monoid$:(Lscalaz/std/FunctionInstances0;Lscalaz/Monoid;)Lscalaz/Monoid;
       5: areturn

  public <A, R> scalaz.Comonad<?> function1Comonad(scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2099               // InterfaceMethod scalaz/std/FunctionInstances0.function1Comonad$:(Lscalaz/std/FunctionInstances0;Lscalaz/Monoid;)Lscalaz/Comonad;
       5: areturn

  public <T> scalaz.Monad<?> function1CovariantByName();
    Code:
       0: aload_0
       1: invokestatic  #2104               // InterfaceMethod scalaz/std/FunctionInstances0.function1CovariantByName$:(Lscalaz/std/FunctionInstances0;)Lscalaz/Monad;
       4: areturn

  public <A, R> scalaz.Semigroup<scala.Function1<A, R>> function1Semigroup(scalaz.Semigroup<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2112               // InterfaceMethod scalaz/std/FunctionInstances1.function1Semigroup$:(Lscalaz/std/FunctionInstances1;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       5: areturn

  public <A, R> scalaz.Cobind<?> function1Cobind(scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2119               // InterfaceMethod scalaz/std/FunctionInstances1.function1Cobind$:(Lscalaz/std/FunctionInstances1;Lscalaz/Semigroup;)Lscalaz/Cobind;
       5: areturn

  public <A> A ToConstOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2126               // InterfaceMethod scalaz/syntax/ToConstOps.ToConstOps$:(Lscalaz/syntax/ToConstOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <M, A> M ToContTOps(M);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2135               // InterfaceMethod scalaz/syntax/ToContTOps.ToContTOps$:(Lscalaz/syntax/ToContTOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToMaybeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2142               // InterfaceMethod scalaz/syntax/ToMaybeOps.ToMaybeOps$:(Lscalaz/syntax/ToMaybeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToTheseOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2149               // InterfaceMethod scalaz/syntax/ToTheseOps.ToTheseOps$:(Lscalaz/syntax/ToTheseOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A, B> scala.Tuple2<A, B> ToThesePairOps(scala.Tuple2<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2154               // InterfaceMethod scalaz/syntax/ToTheseOps.ToThesePairOps$:(Lscalaz/syntax/ToTheseOps;Lscala/Tuple2;)Lscala/Tuple2;
       5: areturn

  public <A> A ToNelOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2161               // InterfaceMethod scalaz/syntax/ToNelOps.ToNelOps$:(Lscalaz/syntax/ToNelOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToEitherTOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2168               // InterfaceMethod scalaz/syntax/ToEitherTOps.ToEitherTOps$:(Lscalaz/syntax/ToEitherTOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToEitherOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2175               // InterfaceMethod scalaz/syntax/ToEitherOps.ToEitherOps$:(Lscalaz/syntax/ToEitherOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToKleisliIdOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2182               // InterfaceMethod scalaz/syntax/ToKleisliOps.ToKleisliIdOps$:(Lscalaz/syntax/ToKleisliOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A> F ToKleisliFAOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2187               // InterfaceMethod scalaz/syntax/ToKleisliOps.ToKleisliFAOps$:(Lscalaz/syntax/ToKleisliOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <FA> java.lang.Object ToKleisliOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2197               // InterfaceMethod scalaz/syntax/ToKleisliOps0.ToKleisliOpsUnapply$:(Lscalaz/syntax/ToKleisliOps0;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <A> A ToValidationOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2204               // InterfaceMethod scalaz/syntax/ToValidationOps.ToValidationOps$:(Lscalaz/syntax/ToValidationOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToStateOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2211               // InterfaceMethod scalaz/syntax/ToStateOps.ToStateOps$:(Lscalaz/syntax/ToStateOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToWriterOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2218               // InterfaceMethod scalaz/syntax/ToWriterOps.ToWriterOps$:(Lscalaz/syntax/ToWriterOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToReducerOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2225               // InterfaceMethod scalaz/syntax/ToReducerOps.ToReducerOps$:(Lscalaz/syntax/ToReducerOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToStrictTreeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2232               // InterfaceMethod scalaz/syntax/ToStrictTreeOps.ToStrictTreeOps$:(Lscalaz/syntax/ToStrictTreeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToTreeOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2239               // InterfaceMethod scalaz/syntax/ToTreeOps.ToTreeOps$:(Lscalaz/syntax/ToTreeOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <A> A ToIdOps(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2246               // InterfaceMethod scalaz/syntax/ToIdOps.ToIdOps$:(Lscalaz/syntax/ToIdOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A, B> scalaz.syntax.ProChoiceOps<F, A, B> ToProChoiceOps(F, scalaz.ProChoice<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2255               // InterfaceMethod scalaz/syntax/ToProChoiceOps0.ToProChoiceOps$:(Lscalaz/syntax/ToProChoiceOps0;Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ProChoiceOps<?, A, B> ToProChoiceVFromKleisliLike(F, scalaz.ProChoice<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2261               // InterfaceMethod scalaz/syntax/ToProChoiceOps0.ToProChoiceVFromKleisliLike$:(Lscalaz/syntax/ToProChoiceOps0;Ljava/lang/Object;Lscalaz/ProChoice;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <FA> scalaz.syntax.ProChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.ProChoice, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2270               // InterfaceMethod scalaz/syntax/ToProChoiceOpsU.ToProChoiceOpsUnapply$:(Lscalaz/syntax/ToProChoiceOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProChoiceOps;
       6: areturn

  public <F, G, A> G MonadTransGFGA(G);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2280               // InterfaceMethod scalaz/syntax/ToMonadTransOps.MonadTransGFGA$:(Lscalaz/syntax/ToMonadTransOps;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A> scalaz.syntax.AlignOps<F, A> ToAlignOps(F, scalaz.Align<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2289               // InterfaceMethod scalaz/syntax/ToAlignOps0.ToAlignOps$:(Lscalaz/syntax/ToAlignOps0;Ljava/lang/Object;Lscalaz/Align;)Lscalaz/syntax/AlignOps;
       6: areturn

  public <FA> scalaz.syntax.AlignOps<java.lang.Object, java.lang.Object> ToAlignOpsUnapply(FA, scalaz.Unapply<scalaz.Align, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2299               // InterfaceMethod scalaz/syntax/ToAlignOpsU.ToAlignOpsUnapply$:(Lscalaz/syntax/ToAlignOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AlignOps;
       6: areturn

  public <F, A> scalaz.syntax.CatchableOps<F, A> ToCatchableOps(F, scalaz.Catchable<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2308               // InterfaceMethod scalaz/syntax/ToCatchableOps0.ToCatchableOps$:(Lscalaz/syntax/ToCatchableOps0;Ljava/lang/Object;Lscalaz/Catchable;)Lscalaz/syntax/CatchableOps;
       6: areturn

  public <FA> scalaz.syntax.CatchableOps<java.lang.Object, java.lang.Object> ToCatchableOpsUnapply(FA, scalaz.Unapply<scalaz.Catchable, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2318               // InterfaceMethod scalaz/syntax/ToCatchableOpsU.ToCatchableOpsUnapply$:(Lscalaz/syntax/ToCatchableOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/CatchableOps;
       6: areturn

  public <F, A> scalaz.syntax.OptionalOps<F, A> ToOptionalOps(F, scalaz.Optional<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2327               // InterfaceMethod scalaz/syntax/ToOptionalOps0.ToOptionalOps$:(Lscalaz/syntax/ToOptionalOps0;Ljava/lang/Object;Lscalaz/Optional;)Lscalaz/syntax/OptionalOps;
       6: areturn

  public <FA> scalaz.syntax.OptionalOps<java.lang.Object, java.lang.Object> ToOptionalOpsUnapply(FA, scalaz.Unapply<scalaz.Optional, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2337               // InterfaceMethod scalaz/syntax/ToOptionalOpsU.ToOptionalOpsUnapply$:(Lscalaz/syntax/ToOptionalOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/OptionalOps;
       6: areturn

  public <F, A> scalaz.syntax.Traverse1Ops<F, A> ToTraverse1Ops(F, scalaz.Traverse1<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2346               // InterfaceMethod scalaz/syntax/ToTraverse1Ops0.ToTraverse1Ops$:(Lscalaz/syntax/ToTraverse1Ops0;Ljava/lang/Object;Lscalaz/Traverse1;)Lscalaz/syntax/Traverse1Ops;
       6: areturn

  public <FA> scalaz.syntax.Traverse1Ops<java.lang.Object, java.lang.Object> ToTraverse1OpsUnapply(FA, scalaz.Unapply<scalaz.Traverse1, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2355               // InterfaceMethod scalaz/syntax/ToTraverse1OpsU.ToTraverse1OpsUnapply$:(Lscalaz/syntax/ToTraverse1OpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Traverse1Ops;
       6: areturn

  public <F, A> scalaz.syntax.Foldable1Ops<F, A> ToFoldable1Ops(F, scalaz.Foldable1<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2364               // InterfaceMethod scalaz/syntax/ToFoldable1Ops0.ToFoldable1Ops$:(Lscalaz/syntax/ToFoldable1Ops0;Ljava/lang/Object;Lscalaz/Foldable1;)Lscalaz/syntax/Foldable1Ops;
       6: areturn

  public <FA> scalaz.syntax.Foldable1Ops<java.lang.Object, java.lang.Object> ToFoldable1OpsUnapply(FA, scalaz.Unapply<scalaz.Foldable1, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2374               // InterfaceMethod scalaz/syntax/ToFoldable1OpsU.ToFoldable1OpsUnapply$:(Lscalaz/syntax/ToFoldable1OpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/Foldable1Ops;
       6: areturn

  public <F, S, A> scalaz.syntax.ApplicativeErrorOps<F, S, A> ToApplicativeErrorOps(F, scalaz.ApplicativeError<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2383               // InterfaceMethod scalaz/syntax/ToApplicativeErrorOps0.ToApplicativeErrorOps$:(Lscalaz/syntax/ToApplicativeErrorOps0;Ljava/lang/Object;Lscalaz/ApplicativeError;)Lscalaz/syntax/ApplicativeErrorOps;
       6: areturn

  public <F, S, A> scalaz.syntax.MonadErrorOps<F, S, A> ToMonadErrorOps(F, scalaz.MonadError<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2393               // InterfaceMethod scalaz/syntax/ToMonadErrorOps0.ToMonadErrorOps$:(Lscalaz/syntax/ToMonadErrorOps0;Ljava/lang/Object;Lscalaz/MonadError;)Lscalaz/syntax/MonadErrorOps;
       6: areturn

  public <E> E ToMonadErrorIdOps(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2400               // InterfaceMethod scalaz/syntax/ToMonadErrorOps0.ToMonadErrorIdOps$:(Lscalaz/syntax/ToMonadErrorOps0;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <F, A, W> scalaz.syntax.MonadListenOps<F, W, A> ToMonadListenOps(F, scalaz.MonadListen<F, W>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2409               // InterfaceMethod scalaz/syntax/ToMonadListenOps0.ToMonadListenOps$:(Lscalaz/syntax/ToMonadListenOps0;Ljava/lang/Object;Lscalaz/MonadListen;)Lscalaz/syntax/MonadListenOps;
       6: areturn

  public <F, S, A> scalaz.syntax.MonadTellOps<F, S, A> ToMonadTellOps(F, scalaz.MonadTell<F, S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2419               // InterfaceMethod scalaz/syntax/ToMonadTellOps0.ToMonadTellOps$:(Lscalaz/syntax/ToMonadTellOps0;Ljava/lang/Object;Lscalaz/MonadTell;)Lscalaz/syntax/MonadTellOps;
       6: areturn

  public <F, A> scalaz.syntax.UnzipOps<F, A> ToUnzipOps(F, scalaz.Unzip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2427               // InterfaceMethod scalaz/syntax/ToUnzipOps0.ToUnzipOps$:(Lscalaz/syntax/ToUnzipOps0;Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/UnzipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ToUnzipOps0<scalaz.Unzip>.UnzipPairOps<F, A, B> ToUnzipPairOps(F, scalaz.Unzip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2435               // InterfaceMethod scalaz/syntax/ToUnzipOps0.ToUnzipPairOps$:(Lscalaz/syntax/ToUnzipOps0;Ljava/lang/Object;Lscalaz/Unzip;)Lscalaz/syntax/ToUnzipOps0$UnzipPairOps;
       6: areturn

  public <FA> scalaz.syntax.UnzipOps<java.lang.Object, java.lang.Object> ToUnzipOpsUnapply(FA, scalaz.Unapply<scalaz.Unzip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2444               // InterfaceMethod scalaz/syntax/ToUnzipOpsU.ToUnzipOpsUnapply$:(Lscalaz/syntax/ToUnzipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/UnzipOps;
       6: areturn

  public <F, A> scalaz.syntax.ZipOps<F, A> ToZipOps(F, scalaz.Zip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2453               // InterfaceMethod scalaz/syntax/ToZipOps0.ToZipOps$:(Lscalaz/syntax/ToZipOps0;Ljava/lang/Object;Lscalaz/Zip;)Lscalaz/syntax/ZipOps;
       6: areturn

  public <FA> scalaz.syntax.ZipOps<java.lang.Object, java.lang.Object> ToZipOpsUnapply(FA, scalaz.Unapply<scalaz.Zip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2463               // InterfaceMethod scalaz/syntax/ToZipOpsU.ToZipOpsUnapply$:(Lscalaz/syntax/ToZipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ZipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.SplitOps<F, A, B> ToSplitOps(F, scalaz.Split<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2472               // InterfaceMethod scalaz/syntax/ToSplitOps0.ToSplitOps$:(Lscalaz/syntax/ToSplitOps0;Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.SplitOps<?, A, B> ToSplitVFromKleisliLike(F, scalaz.Split<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2478               // InterfaceMethod scalaz/syntax/ToSplitOps0.ToSplitVFromKleisliLike$:(Lscalaz/syntax/ToSplitOps0;Ljava/lang/Object;Lscalaz/Split;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <FA> scalaz.syntax.SplitOps<java.lang.Object, java.lang.Object, java.lang.Object> ToSplitOpsUnapply(FA, scalaz.Unapply2<scalaz.Split, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2487               // InterfaceMethod scalaz/syntax/ToSplitOpsU.ToSplitOpsUnapply$:(Lscalaz/syntax/ToSplitOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/SplitOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ChoiceOps<F, A, B> ToChoiceOps(F, scalaz.Choice<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2496               // InterfaceMethod scalaz/syntax/ToChoiceOps0.ToChoiceOps$:(Lscalaz/syntax/ToChoiceOps0;Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ChoiceOps<?, A, B> ToChoiceVFromKleisliLike(F, scalaz.Choice<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2502               // InterfaceMethod scalaz/syntax/ToChoiceOps0.ToChoiceVFromKleisliLike$:(Lscalaz/syntax/ToChoiceOps0;Ljava/lang/Object;Lscalaz/Choice;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <FA> scalaz.syntax.ChoiceOps<java.lang.Object, java.lang.Object, java.lang.Object> ToChoiceOpsUnapply(FA, scalaz.Unapply2<scalaz.Choice, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2511               // InterfaceMethod scalaz/syntax/ToChoiceOpsU.ToChoiceOpsUnapply$:(Lscalaz/syntax/ToChoiceOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ChoiceOps;
       6: areturn

  public <F, A> scalaz.syntax.FoldableOps<F, A> ToFoldableOps(F, scalaz.Foldable<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2520               // InterfaceMethod scalaz/syntax/ToFoldableOps0.ToFoldableOps$:(Lscalaz/syntax/ToFoldableOps0;Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
       6: areturn

  public <FA> scalaz.syntax.FoldableOps<java.lang.Object, java.lang.Object> ToFoldableOpsUnapply(FA, scalaz.Unapply<scalaz.Foldable, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2529               // InterfaceMethod scalaz/syntax/ToFoldableOpsU.ToFoldableOpsUnapply$:(Lscalaz/syntax/ToFoldableOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FoldableOps;
       6: areturn

  public <F, A, B> scalaz.syntax.StrongOps<F, A, B> ToStrongOps(F, scalaz.Strong<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2538               // InterfaceMethod scalaz/syntax/ToStrongOps0.ToStrongOps$:(Lscalaz/syntax/ToStrongOps0;Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.StrongOps<?, A, B> ToStrongVFromKleisliLike(F, scalaz.Strong<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2544               // InterfaceMethod scalaz/syntax/ToStrongOps0.ToStrongVFromKleisliLike$:(Lscalaz/syntax/ToStrongOps0;Ljava/lang/Object;Lscalaz/Strong;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <FA> scalaz.syntax.StrongOps<java.lang.Object, java.lang.Object, java.lang.Object> ToStrongOpsUnapply(FA, scalaz.Unapply2<scalaz.Strong, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2553               // InterfaceMethod scalaz/syntax/ToStrongOpsU.ToStrongOpsUnapply$:(Lscalaz/syntax/ToStrongOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/StrongOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ProfunctorOps<F, A, B> ToProfunctorOps(F, scalaz.Profunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2562               // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorOps$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ProfunctorOps<?, A, B> ToProfunctorVFromKleisliLike(F, scalaz.Profunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2568               // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorVFromKleisliLike$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <FA> scalaz.syntax.ProfunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProfunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Profunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2577               // InterfaceMethod scalaz/syntax/ToProfunctorOpsU.ToProfunctorOpsUnapply$:(Lscalaz/syntax/ToProfunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ArrowOps<F, A, B> ToArrowOps(F, scalaz.Arrow<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2586               // InterfaceMethod scalaz/syntax/ToArrowOps0.ToArrowOps$:(Lscalaz/syntax/ToArrowOps0;Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ArrowOps<?, A, B> ToArrowVFromKleisliLike(F, scalaz.Arrow<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2591               // InterfaceMethod scalaz/syntax/ToArrowOps0.ToArrowVFromKleisliLike$:(Lscalaz/syntax/ToArrowOps0;Ljava/lang/Object;Lscalaz/Arrow;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <FA> scalaz.syntax.ArrowOps<java.lang.Object, java.lang.Object, java.lang.Object> ToArrowOpsUnapply(FA, scalaz.Unapply2<scalaz.Arrow, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2600               // InterfaceMethod scalaz/syntax/ToArrowOpsU.ToArrowOpsUnapply$:(Lscalaz/syntax/ToArrowOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ArrowOps;
       6: areturn

  public <F, A, B> scalaz.syntax.CategoryOps<F, A, B> ToCategoryOps(F, scalaz.Category<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2609               // InterfaceMethod scalaz/syntax/ToCategoryOps0.ToCategoryOps$:(Lscalaz/syntax/ToCategoryOps0;Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.CategoryOps<?, A, B> ToCategoryVFromKleisliLike(F, scalaz.Category<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2614               // InterfaceMethod scalaz/syntax/ToCategoryOps0.ToCategoryVFromKleisliLike$:(Lscalaz/syntax/ToCategoryOps0;Ljava/lang/Object;Lscalaz/Category;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <FA> scalaz.syntax.CategoryOps<java.lang.Object, java.lang.Object, java.lang.Object> ToCategoryOpsUnapply(FA, scalaz.Unapply2<scalaz.Category, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2623               // InterfaceMethod scalaz/syntax/ToCategoryOpsU.ToCategoryOpsUnapply$:(Lscalaz/syntax/ToCategoryOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/CategoryOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ComposeOps<F, A, B> ToComposeOps(F, scalaz.Compose<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2632               // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeOps$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ComposeOps<?, A, B> ToComposeVFromKleisliLike(F, scalaz.Compose<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2638               // InterfaceMethod scalaz/syntax/ToComposeOps0.ToComposeVFromKleisliLike$:(Lscalaz/syntax/ToComposeOps0;Ljava/lang/Object;Lscalaz/Compose;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <FA> scalaz.syntax.ComposeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToComposeOpsUnapply(FA, scalaz.Unapply2<scalaz.Compose, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2647               // InterfaceMethod scalaz/syntax/ToComposeOpsU.ToComposeOpsUnapply$:(Lscalaz/syntax/ToComposeOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ComposeOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BitraverseOps<F, A, B> ToBitraverseOps(F, scalaz.Bitraverse<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2656               // InterfaceMethod scalaz/syntax/ToBitraverseOps0.ToBitraverseOps$:(Lscalaz/syntax/ToBitraverseOps0;Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BitraverseOps<?, A, B> ToBitraverseVFromKleisliLike(F, scalaz.Bitraverse<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2661               // InterfaceMethod scalaz/syntax/ToBitraverseOps0.ToBitraverseVFromKleisliLike$:(Lscalaz/syntax/ToBitraverseOps0;Ljava/lang/Object;Lscalaz/Bitraverse;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <FA> scalaz.syntax.BitraverseOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBitraverseOpsUnapply(FA, scalaz.Unapply2<scalaz.Bitraverse, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2670               // InterfaceMethod scalaz/syntax/ToBitraverseOpsU.ToBitraverseOpsUnapply$:(Lscalaz/syntax/ToBitraverseOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BitraverseOps;
       6: areturn

  public <F, A, B> scalaz.syntax.AssociativeOps<F, A, B> ToAssociativeOps(F, scalaz.Associative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2679               // InterfaceMethod scalaz/syntax/ToAssociativeOps0.ToAssociativeOps$:(Lscalaz/syntax/ToAssociativeOps0;Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.AssociativeOps<?, A, B> ToAssociativeVFromKleisliLike(F, scalaz.Associative<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2684               // InterfaceMethod scalaz/syntax/ToAssociativeOps0.ToAssociativeVFromKleisliLike$:(Lscalaz/syntax/ToAssociativeOps0;Ljava/lang/Object;Lscalaz/Associative;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <FA> scalaz.syntax.AssociativeOps<java.lang.Object, java.lang.Object, java.lang.Object> ToAssociativeOpsUnapply(FA, scalaz.Unapply2<scalaz.Associative, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2693               // InterfaceMethod scalaz/syntax/ToAssociativeOpsU.ToAssociativeOpsUnapply$:(Lscalaz/syntax/ToAssociativeOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/AssociativeOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BifunctorOps<F, A, B> ToBifunctorOps(F, scalaz.Bifunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2702               // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorOps$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BifunctorOps<?, A, B> ToBifunctorVFromKleisliLike(F, scalaz.Bifunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2708               // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorVFromKleisliLike$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <FA> scalaz.syntax.BifunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2717               // InterfaceMethod scalaz/syntax/ToBifunctorOpsU.ToBifunctorOpsUnapply$:(Lscalaz/syntax/ToBifunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <F, A> scalaz.syntax.TraverseOps<F, A> ToTraverseOps(F, scalaz.Traverse<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2726               // InterfaceMethod scalaz/syntax/ToTraverseOps0.ToTraverseOps$:(Lscalaz/syntax/ToTraverseOps0;Ljava/lang/Object;Lscalaz/Traverse;)Lscalaz/syntax/TraverseOps;
       6: areturn

  public <FA> scalaz.syntax.TraverseOps<java.lang.Object, java.lang.Object> ToTraverseOpsUnapply(FA, scalaz.Unapply<scalaz.Traverse, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2735               // InterfaceMethod scalaz/syntax/ToTraverseOpsU.ToTraverseOpsUnapply$:(Lscalaz/syntax/ToTraverseOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/TraverseOps;
       6: areturn

  public <F, A> scalaz.syntax.MonadPlusOps<F, A> ToMonadPlusOps(F, scalaz.MonadPlus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2744               // InterfaceMethod scalaz/syntax/ToMonadPlusOps0.ToMonadPlusOps$:(Lscalaz/syntax/ToMonadPlusOps0;Ljava/lang/Object;Lscalaz/MonadPlus;)Lscalaz/syntax/MonadPlusOps;
       6: areturn

  public <FA> scalaz.syntax.MonadPlusOps<java.lang.Object, java.lang.Object> ToMonadPlusOpsUnapply(FA, scalaz.Unapply<scalaz.MonadPlus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2754               // InterfaceMethod scalaz/syntax/ToMonadPlusOpsU.ToMonadPlusOpsUnapply$:(Lscalaz/syntax/ToMonadPlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadPlusOps;
       6: areturn

  public <F, A> scalaz.syntax.AltOps<F, A> ToAltOps(F, scalaz.Alt<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2763               // InterfaceMethod scalaz/syntax/ToAltOps0.ToAltOps$:(Lscalaz/syntax/ToAltOps0;Ljava/lang/Object;Lscalaz/Alt;)Lscalaz/syntax/AltOps;
       6: areturn

  public <FA> scalaz.syntax.AltOps<java.lang.Object, java.lang.Object> ToAltOpsUnapply(FA, scalaz.Unapply<scalaz.Alt, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2773               // InterfaceMethod scalaz/syntax/ToAltOpsU.ToAltOpsUnapply$:(Lscalaz/syntax/ToAltOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/AltOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplicativePlusOps<F, A> ToApplicativePlusOps(F, scalaz.ApplicativePlus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2782               // InterfaceMethod scalaz/syntax/ToApplicativePlusOps0.ToApplicativePlusOps$:(Lscalaz/syntax/ToApplicativePlusOps0;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Lscalaz/syntax/ApplicativePlusOps;
       6: areturn

  public <FA> scalaz.syntax.ApplicativePlusOps<java.lang.Object, java.lang.Object> ToApplicativePlusOpsUnapply(FA, scalaz.Unapply<scalaz.ApplicativePlus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2792               // InterfaceMethod scalaz/syntax/ToApplicativePlusOpsU.ToApplicativePlusOpsUnapply$:(Lscalaz/syntax/ToApplicativePlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativePlusOps;
       6: areturn

  public <F, A> scalaz.syntax.PlusOps<F, A> ToPlusOps(F, scalaz.Plus<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2801               // InterfaceMethod scalaz/syntax/ToPlusOps0.ToPlusOps$:(Lscalaz/syntax/ToPlusOps0;Ljava/lang/Object;Lscalaz/Plus;)Lscalaz/syntax/PlusOps;
       6: areturn

  public <FA> scalaz.syntax.PlusOps<java.lang.Object, java.lang.Object> ToPlusOpsUnapply(FA, scalaz.Unapply<scalaz.Plus, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2811               // InterfaceMethod scalaz/syntax/ToPlusOpsU.ToPlusOpsUnapply$:(Lscalaz/syntax/ToPlusOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusOps;
       6: areturn

  public <F, A> scalaz.syntax.CozipOps<F, A> ToCozipOps(F, scalaz.Cozip<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2820               // InterfaceMethod scalaz/syntax/ToCozipOps0.ToCozipOps$:(Lscalaz/syntax/ToCozipOps0;Ljava/lang/Object;Lscalaz/Cozip;)Lscalaz/syntax/CozipOps;
       6: areturn

  public <FA> scalaz.syntax.CozipOps<java.lang.Object, java.lang.Object> ToCozipOpsUnapply(FA, scalaz.Unapply<scalaz.Cozip, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2829               // InterfaceMethod scalaz/syntax/ToCozipOpsU.ToCozipOpsUnapply$:(Lscalaz/syntax/ToCozipOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/CozipOps;
       6: areturn

  public <F, A, B> scalaz.syntax.BifoldableOps<F, A, B> ToBifoldableOps(F, scalaz.Bifoldable<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2838               // InterfaceMethod scalaz/syntax/ToBifoldableOps0.ToBifoldableOps$:(Lscalaz/syntax/ToBifoldableOps0;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BifoldableOps<?, A, B> ToBifoldableVFromKleisliLike(F, scalaz.Bifoldable<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2844               // InterfaceMethod scalaz/syntax/ToBifoldableOps0.ToBifoldableVFromKleisliLike$:(Lscalaz/syntax/ToBifoldableOps0;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <FA> scalaz.syntax.BifoldableOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifoldableOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifoldable, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2853               // InterfaceMethod scalaz/syntax/ToBifoldableOpsU.ToBifoldableOpsUnapply$:(Lscalaz/syntax/ToBifoldableOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifoldableOps;
       6: areturn

  public <F, A> scalaz.syntax.ComonadOps<F, A> ToComonadOps(F, scalaz.Comonad<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2862               // InterfaceMethod scalaz/syntax/ToComonadOps0.ToComonadOps$:(Lscalaz/syntax/ToComonadOps0;Ljava/lang/Object;Lscalaz/Comonad;)Lscalaz/syntax/ComonadOps;
       6: areturn

  public <FA> scalaz.syntax.ComonadOps<java.lang.Object, java.lang.Object> ToComonadOpsUnapply(FA, scalaz.Unapply<scalaz.Comonad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2872               // InterfaceMethod scalaz/syntax/ToComonadOpsU.ToComonadOpsUnapply$:(Lscalaz/syntax/ToComonadOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ComonadOps;
       6: areturn

  public <F, A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F, scalaz.Monad<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2881               // InterfaceMethod scalaz/syntax/ToMonadOps0.ToMonadOps$:(Lscalaz/syntax/ToMonadOps0;Ljava/lang/Object;Lscalaz/Monad;)Lscalaz/syntax/MonadOps;
       6: areturn

  public <FA> scalaz.syntax.MonadOps<java.lang.Object, java.lang.Object> ToMonadOpsUnapply(FA, scalaz.Unapply<scalaz.Monad, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2890               // InterfaceMethod scalaz/syntax/ToMonadOpsU.ToMonadOpsUnapply$:(Lscalaz/syntax/ToMonadOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/MonadOps;
       6: areturn

  public <F, A> scalaz.syntax.BindOps<F, A> ToBindOps(F, scalaz.Bind<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2899               // InterfaceMethod scalaz/syntax/ToBindOps0.ToBindOps$:(Lscalaz/syntax/ToBindOps0;Ljava/lang/Object;Lscalaz/Bind;)Lscalaz/syntax/BindOps;
       6: areturn

  public <FA> scalaz.syntax.BindOps<java.lang.Object, java.lang.Object> ToBindOpsUnapply(FA, scalaz.Unapply<scalaz.Bind, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2909               // InterfaceMethod scalaz/syntax/ToBindOpsU.ToBindOpsUnapply$:(Lscalaz/syntax/ToBindOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/BindOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2916               // InterfaceMethod scalaz/syntax/ToApplicativeOps0.ToApplicativeOps$:(Lscalaz/syntax/ToApplicativeOps0;Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/syntax/ApplicativeOps;
       6: areturn

  public <A> scalaz.syntax.ToApplicativeOps0<scalaz.Applicative>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2922               // InterfaceMethod scalaz/syntax/ToApplicativeOps0.ApplicativeIdV$:(Lscalaz/syntax/ToApplicativeOps0;Lscala/Function0;)Lscalaz/syntax/ToApplicativeOps0$ApplicativeIdV;
       5: areturn

  public <FA> scalaz.syntax.ApplicativeOps<java.lang.Object, java.lang.Object> ToApplicativeOpsUnapply(FA, scalaz.Unapply<scalaz.Applicative, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2931               // InterfaceMethod scalaz/syntax/ToApplicativeOpsU.ToApplicativeOpsUnapply$:(Lscalaz/syntax/ToApplicativeOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplicativeOps;
       6: areturn

  public <F, A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2940               // InterfaceMethod scalaz/syntax/ToApplyOps0.ToApplyOps$:(Lscalaz/syntax/ToApplyOps0;Ljava/lang/Object;Lscalaz/Apply;)Lscalaz/syntax/ApplyOps;
       6: areturn

  public <F, A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #2949               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
       9: areturn

  public <F, A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #2957               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
      11: areturn

  public <F, A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #2965               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscalaz/Apply;)Ljava/lang/Object;
      13: areturn

  public <F, A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #2974               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;Lscalaz/Apply;)Ljava/lang/Object;
      15: areturn

  public <F, A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #2983               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;Lscalaz/Apply;)Ljava/lang/Object;
      17: areturn

  public <F, A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>, scalaz.Apply<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #2992               // InterfaceMethod scalaz/syntax/ToApplyOps0.$up$up$up$up$up$up$:(Lscalaz/syntax/ToApplyOps0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;Lscalaz/Apply;)Ljava/lang/Object;
      19: areturn

  public <FA> scalaz.syntax.ApplyOps<java.lang.Object, java.lang.Object> ToApplyOpsUnapply(FA, scalaz.Unapply<scalaz.Apply, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3002               // InterfaceMethod scalaz/syntax/ToApplyOpsU.ToApplyOpsUnapply$:(Lscalaz/syntax/ToApplyOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ApplyOps;
       6: areturn

  public <F, A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F, scalaz.Contravariant<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3011               // InterfaceMethod scalaz/syntax/ToContravariantOps0.ToContravariantOps$:(Lscalaz/syntax/ToContravariantOps0;Ljava/lang/Object;Lscalaz/Contravariant;)Lscalaz/syntax/ContravariantOps;
       6: areturn

  public <FA> scalaz.syntax.ContravariantOps<java.lang.Object, java.lang.Object> ToContravariantOpsUnapply(FA, scalaz.Unapply<scalaz.Contravariant, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3021               // InterfaceMethod scalaz/syntax/ToContravariantOpsU.ToContravariantOpsUnapply$:(Lscalaz/syntax/ToContravariantOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/ContravariantOps;
       6: areturn

  public <F, A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F, scalaz.Functor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3028               // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToFunctorOps$:(Lscalaz/syntax/ToFunctorOps0;Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/syntax/FunctorOps;
       6: areturn

  public <F, A, B> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.LiftV<F, A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3036               // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToLiftV$:(Lscalaz/syntax/ToFunctorOps0;Lscala/Function1;)Lscalaz/syntax/ToFunctorOps0$LiftV;
       5: areturn

  public <A> scalaz.syntax.ToFunctorOps0<scalaz.Functor>.FunctorIdV<A> ToFunctorIdV(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3043               // InterfaceMethod scalaz/syntax/ToFunctorOps0.ToFunctorIdV$:(Lscalaz/syntax/ToFunctorOps0;Ljava/lang/Object;)Lscalaz/syntax/ToFunctorOps0$FunctorIdV;
       5: areturn

  public <FA> scalaz.syntax.FunctorOps<java.lang.Object, java.lang.Object> ToFunctorOpsUnapply(FA, scalaz.Unapply<scalaz.Functor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3052               // InterfaceMethod scalaz/syntax/ToFunctorOpsU.ToFunctorOpsUnapply$:(Lscalaz/syntax/ToFunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/FunctorOps;
       6: areturn

  public <F, A> scalaz.syntax.PlusEmptyOps<F, A> ToPlusEmptyOps(F, scalaz.PlusEmpty<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3061               // InterfaceMethod scalaz/syntax/ToPlusEmptyOps0.ToPlusEmptyOps$:(Lscalaz/syntax/ToPlusEmptyOps0;Ljava/lang/Object;Lscalaz/PlusEmpty;)Lscalaz/syntax/PlusEmptyOps;
       6: areturn

  public <F, A> F mempty(scalaz.PlusEmpty<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3068               // InterfaceMethod scalaz/syntax/ToPlusEmptyOps0.mempty$:(Lscalaz/syntax/ToPlusEmptyOps0;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       5: areturn

  public <FA> scalaz.syntax.PlusEmptyOps<java.lang.Object, java.lang.Object> ToPlusEmptyOpsUnapply(FA, scalaz.Unapply<scalaz.PlusEmpty, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3077               // InterfaceMethod scalaz/syntax/ToPlusEmptyOpsU.ToPlusEmptyOpsUnapply$:(Lscalaz/syntax/ToPlusEmptyOpsU;Ljava/lang/Object;Lscalaz/Unapply;)Lscalaz/syntax/PlusEmptyOps;
       6: areturn

  public <F> scalaz.syntax.EnumOps<F> ToEnumOps(F, scalaz.Enum<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3086               // InterfaceMethod scalaz/syntax/ToEnumOps.ToEnumOps$:(Lscalaz/syntax/ToEnumOps;Ljava/lang/Object;Lscalaz/Enum;)Lscalaz/syntax/EnumOps;
       6: areturn

  public <F> scalaz.syntax.OrderOps<F> ToOrderOps(F, scalaz.Order<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3096               // InterfaceMethod scalaz/syntax/ToOrderOps.ToOrderOps$:(Lscalaz/syntax/ToOrderOps;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
       6: areturn

  public <F> scalaz.syntax.ShowOps<F> ToShowOps(F, scalaz.Show<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3105               // InterfaceMethod scalaz/syntax/ToShowOps.ToShowOps$:(Lscalaz/syntax/ToShowOps;Ljava/lang/Object;Lscalaz/Show;)Lscalaz/syntax/ShowOps;
       6: areturn

  public final scala.StringContext showInterpolator(scala.StringContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3112               // InterfaceMethod scalaz/syntax/ToShowOps.showInterpolator$:(Lscalaz/syntax/ToShowOps;Lscala/StringContext;)Lscala/StringContext;
       5: areturn

  public final scala.StringContext cordInterpolator(scala.StringContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3117               // InterfaceMethod scalaz/syntax/ToShowOps.cordInterpolator$:(Lscalaz/syntax/ToShowOps;Lscala/StringContext;)Lscala/StringContext;
       5: areturn

  public <F> scalaz.syntax.EqualOps<F> ToEqualOps(F, scalaz.Equal<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3126               // InterfaceMethod scalaz/syntax/ToEqualOps.ToEqualOps$:(Lscalaz/syntax/ToEqualOps;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/syntax/EqualOps;
       6: areturn

  public <F> scalaz.syntax.BandOps<F> ToBandOps(F, scalaz.Band<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3135               // InterfaceMethod scalaz/syntax/ToBandOps.ToBandOps$:(Lscalaz/syntax/ToBandOps;Ljava/lang/Object;Lscalaz/Band;)Lscalaz/syntax/BandOps;
       6: areturn

  public <F> scalaz.syntax.MonoidOps<F> ToMonoidOps(F, scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3144               // InterfaceMethod scalaz/syntax/ToMonoidOps.ToMonoidOps$:(Lscalaz/syntax/ToMonoidOps;Ljava/lang/Object;Lscalaz/Monoid;)Lscalaz/syntax/MonoidOps;
       6: areturn

  public <F> F mzero(scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3151               // InterfaceMethod scalaz/syntax/ToMonoidOps.mzero$:(Lscalaz/syntax/ToMonoidOps;Lscalaz/Monoid;)Ljava/lang/Object;
       5: areturn

  public <F> F $u2205(scalaz.Monoid<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3155               // InterfaceMethod scalaz/syntax/ToMonoidOps.$u2205$:(Lscalaz/syntax/ToMonoidOps;Lscalaz/Monoid;)Ljava/lang/Object;
       5: areturn

  public <F> scalaz.syntax.SemigroupOps<F> ToSemigroupOps(F, scalaz.Semigroup<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3164               // InterfaceMethod scalaz/syntax/ToSemigroupOps.ToSemigroupOps$:(Lscalaz/syntax/ToSemigroupOps;Ljava/lang/Object;Lscalaz/Semigroup;)Lscalaz/syntax/SemigroupOps;
       6: areturn

  public <S, A> scalaz.IndexedStateT<S, S, java.lang.Object, A> constantState(A, scala.Function0<S>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3171               // InterfaceMethod scalaz/StateFunctions.constantState$:(Lscalaz/StateFunctions;Ljava/lang/Object;Lscala/Function0;)Lscalaz/IndexedStateT;
       6: areturn

  public <S, A> scalaz.IndexedStateT<S, S, java.lang.Object, A> state(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3178               // InterfaceMethod scalaz/StateFunctions.state$:(Lscalaz/StateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public <S> scalaz.IndexedStateT<S, S, java.lang.Object, S> init();
    Code:
       0: aload_0
       1: invokestatic  #3185               // InterfaceMethod scalaz/StateFunctions.init$:(Lscalaz/StateFunctions;)Lscalaz/IndexedStateT;
       4: areturn

  public <S> scalaz.IndexedStateT<S, S, java.lang.Object, S> get();
    Code:
       0: aload_0
       1: invokestatic  #3189               // InterfaceMethod scalaz/StateFunctions.get$:(Lscalaz/StateFunctions;)Lscalaz/IndexedStateT;
       4: areturn

  public <S, T> scalaz.IndexedStateT<S, S, java.lang.Object, T> gets(scala.Function1<S, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3196               // InterfaceMethod scalaz/StateFunctions.gets$:(Lscalaz/StateFunctions;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <S> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> put(S);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3201               // InterfaceMethod scalaz/StateFunctions.put$:(Lscalaz/StateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public <S> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> modify(scala.Function1<S, S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3206               // InterfaceMethod scalaz/StateFunctions.modify$:(Lscalaz/StateFunctions;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public <S1, S2, A> scalaz.IndexedStateT<S1, S2, java.lang.Object, A> constantIndexedState(A, scala.Function0<S2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3214               // InterfaceMethod scalaz/IndexedStateFunctions.constantIndexedState$:(Lscalaz/IndexedStateFunctions;Ljava/lang/Object;Lscala/Function0;)Lscalaz/IndexedStateT;
       6: areturn

  public <S1, S2> scalaz.IndexedStateT<S1, S2, java.lang.Object, scala.runtime.BoxedUnit> iPut(S2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3220               // InterfaceMethod scalaz/IndexedStateFunctions.iPut$:(Lscalaz/IndexedStateFunctions;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public <S1, S2> scalaz.IndexedStateT<S1, S2, java.lang.Object, scala.runtime.BoxedUnit> iModify(scala.Function1<S1, S2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3226               // InterfaceMethod scalaz/IndexedStateFunctions.iModify$:(Lscalaz/IndexedStateFunctions;Lscala/Function1;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Traverse1<java.lang.Object> id();
    Code:
       0: aload_0
       1: getfield      #3230               // Field id:Lscalaz/Traverse1;
       4: areturn

  public void scalaz$IdInstances$_setter_$id_$eq(scalaz.Traverse1<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3230               // Field id:Lscalaz/Traverse1;
       5: return

  public scalaz.std.StringInstances$stringInstance$ scalaz$std$StringFunctions$$instance();
    Code:
       0: aload_0
       1: getfield      #3237               // Field scalaz$std$StringFunctions$$instance:Lscalaz/std/StringInstances$stringInstance$;
       4: areturn

  public final void scalaz$std$StringFunctions$_setter_$scalaz$std$StringFunctions$$instance_$eq(scalaz.std.StringInstances$stringInstance$);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3237               // Field scalaz$std$StringFunctions$$instance:Lscalaz/std/StringInstances$stringInstance$;
       5: return

  public scalaz.Monad<java.util.concurrent.Callable> callableMonad();
    Code:
       0: aload_0
       1: getfield      #3242               // Field callableMonad:Lscalaz/Monad;
       4: areturn

  public void scalaz$std$java$util$concurrent$CallableInstances$_setter_$callableMonad_$eq(scalaz.Monad<java.util.concurrent.Callable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3242               // Field callableMonad:Lscalaz/Monad;
       5: return

  public scalaz.Monoid<java.math.BigInteger> bigIntegerInstance();
    Code:
       0: aload_0
       1: getfield      #3248               // Field bigIntegerInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> bigIntegerMultiplication();
    Code:
       0: aload_0
       1: getfield      #3251               // Field bigIntegerMultiplication:Lscalaz/Monoid;
       4: areturn

  public void scalaz$std$java$math$BigIntegerInstances$_setter_$bigIntegerInstance_$eq(scalaz.Monoid<java.math.BigInteger>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3248               // Field bigIntegerInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$java$math$BigIntegerInstances$_setter_$bigIntegerMultiplication_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3251               // Field bigIntegerMultiplication:Lscalaz/Monoid;
       5: return

  public scalaz.Show<java.math.BigDecimal> javaBigDecimalInstance();
    Code:
       0: aload_0
       1: getfield      #3260               // Field javaBigDecimalInstance:Lscalaz/Show;
       4: areturn

  public void scalaz$std$java$math$BigDecimalInstances$_setter_$javaBigDecimalInstance_$eq(scalaz.Show<java.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3260               // Field javaBigDecimalInstance:Lscalaz/Show;
       5: return

  public scalaz.Bitraverse<java.util.Map$Entry> mapEntryBitraverse();
    Code:
       0: aload_0
       1: getfield      #3267               // Field mapEntryBitraverse:Lscalaz/Bitraverse;
       4: areturn

  public void scalaz$std$java$util$MapInstances$_setter_$mapEntryBitraverse_$eq(scalaz.Bitraverse<java.util.Map$Entry>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3267               // Field mapEntryBitraverse:Lscalaz/Bitraverse;
       5: return

  public scalaz.Monoid<scala.math.BigInt> bigIntInstance();
    Code:
       0: aload_0
       1: getfield      #3273               // Field bigIntInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> bigIntMultiplication();
    Code:
       0: aload_0
       1: getfield      #3275               // Field bigIntMultiplication:Lscalaz/Monoid;
       4: areturn

  public void scalaz$std$math$BigInts$_setter_$bigIntInstance_$eq(scalaz.Monoid<scala.math.BigInt>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3273               // Field bigIntInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$math$BigInts$_setter_$bigIntMultiplication_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3275               // Field bigIntMultiplication:Lscalaz/Monoid;
       5: return

  public scalaz.Monoid<scala.math.BigDecimal> bigDecimalInstance();
    Code:
       0: aload_0
       1: getfield      #3281               // Field bigDecimalInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> BigDecimalMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3283               // Field BigDecimalMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public void scalaz$std$math$BigDecimalInstances$_setter_$bigDecimalInstance_$eq(scalaz.Monoid<scala.math.BigDecimal>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3281               // Field bigDecimalInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$math$BigDecimalInstances$_setter_$BigDecimalMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3283               // Field BigDecimalMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public scalaz.Category<scala.Predef$$less$colon$less> $less$colon$less();
    Code:
       0: aload_0
       1: getfield      #3290               // Field $less$colon$less:Lscalaz/Category;
       4: areturn

  public scalaz.Category<scala.Predef$$eq$colon$eq> $eq$colon$eq();
    Code:
       0: aload_0
       1: getfield      #3293               // Field $eq$colon$eq:Lscalaz/Category;
       4: areturn

  public void scalaz$std$TypeConstraintInstances$_setter_$$less$colon$less_$eq(scalaz.Category<scala.Predef$$less$colon$less>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3290               // Field $less$colon$less:Lscalaz/Category;
       5: return

  public void scalaz$std$TypeConstraintInstances$_setter_$$eq$colon$eq_$eq(scalaz.Category<scala.Predef$$eq$colon$eq>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3293               // Field $eq$colon$eq:Lscalaz/Category;
       5: return

  public scalaz.Arrow<scala.PartialFunction> partialFunctionInstance();
    Code:
       0: aload_0
       1: getfield      #3302               // Field partialFunctionInstance:Lscalaz/Arrow;
       4: areturn

  public void scalaz$std$PartialFunctionInstances$_setter_$partialFunctionInstance_$eq(scalaz.Arrow<scala.PartialFunction>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3302               // Field partialFunctionInstance:Lscalaz/Arrow;
       5: return

  public scalaz.Bitraverse<scala.util.Either> eitherInstance();
    Code:
       0: aload_0
       1: getfield      #3308               // Field eitherInstance:Lscalaz/Bitraverse;
       4: areturn

  public void scalaz$std$EitherInstances$_setter_$eitherInstance_$eq(scalaz.Bitraverse<scala.util.Either>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3308               // Field eitherInstance:Lscalaz/Bitraverse;
       5: return

  public scalaz.Traverse<scala.collection.immutable.Vector> vectorInstance();
    Code:
       0: aload_0
       1: getfield      #3313               // Field vectorInstance:Lscalaz/Traverse;
       4: areturn

  public void scalaz$std$VectorInstances$_setter_$vectorInstance_$eq(scalaz.Traverse<scala.collection.immutable.Vector>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3313               // Field vectorInstance:Lscalaz/Traverse;
       5: return

  public scalaz.Cozip<scala.Tuple1> tuple1Cozip();
    Code:
       0: aload_0
       1: getfield      #3319               // Field tuple1Cozip:Lscalaz/Cozip;
       4: areturn

  public void scalaz$std$TupleInstances3$_setter_$tuple1Cozip_$eq(scalaz.Cozip<scala.Tuple1>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3319               // Field tuple1Cozip:Lscalaz/Cozip;
       5: return

  public scalaz.Bitraverse<scala.Tuple2> tuple2Bitraverse();
    Code:
       0: aload_0
       1: getfield      #3325               // Field tuple2Bitraverse:Lscalaz/Bitraverse;
       4: areturn

  public scalaz.Associative<scala.Tuple2> tuple2Associative();
    Code:
       0: aload_0
       1: getfield      #3328               // Field tuple2Associative:Lscalaz/Associative;
       4: areturn

  public scalaz.Traverse<scala.Tuple1> tuple1Instance();
    Code:
       0: aload_0
       1: getfield      #3331               // Field tuple1Instance:Lscalaz/Traverse;
       4: areturn

  public void scalaz$std$TupleInstances2$_setter_$tuple2Bitraverse_$eq(scalaz.Bitraverse<scala.Tuple2>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3325               // Field tuple2Bitraverse:Lscalaz/Bitraverse;
       5: return

  public void scalaz$std$TupleInstances2$_setter_$tuple2Associative_$eq(scalaz.Associative<scala.Tuple2>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3328               // Field tuple2Associative:Lscalaz/Associative;
       5: return

  public void scalaz$std$TupleInstances2$_setter_$tuple1Instance_$eq(scalaz.Traverse<scala.Tuple1>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3331               // Field tuple1Instance:Lscalaz/Traverse;
       5: return

  public scalaz.Traverse<scala.collection.immutable.Stream> streamInstance();
    Code:
       0: aload_0
       1: getfield      #3341               // Field streamInstance:Lscalaz/Traverse;
       4: areturn

  public scalaz.Applicative<?> streamZipApplicative();
    Code:
       0: aload_0
       1: getfield      #3345               // Field streamZipApplicative:Lscalaz/Applicative;
       4: areturn

  public void scalaz$std$StreamInstances$_setter_$streamInstance_$eq(scalaz.Traverse<scala.collection.immutable.Stream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3341               // Field streamInstance:Lscalaz/Traverse;
       5: return

  public void scalaz$std$StreamInstances$_setter_$streamZipApplicative_$eq(scalaz.Applicative<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3345               // Field streamZipApplicative:Lscalaz/Applicative;
       5: return

  public scalaz.std.StringInstances$stringInstance$ stringInstance();
    Code:
       0: aload_0
       1: getfield      #3353               // Field stringInstance$module:Lscalaz/std/StringInstances$stringInstance$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #3356               // Method stringInstance$lzycompute$1:()V
      11: aload_0
      12: getfield      #3353               // Field stringInstance$module:Lscalaz/std/StringInstances$stringInstance$;
      15: areturn

  public scalaz.Foldable<scala.collection.immutable.Set> setInstance();
    Code:
       0: aload_0
       1: getfield      #3359               // Field setInstance:Lscalaz/Foldable;
       4: areturn

  public void scalaz$std$SetInstances$_setter_$setInstance_$eq(scalaz.Foldable<scala.collection.immutable.Set>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3359               // Field setInstance:Lscalaz/Foldable;
       5: return

  public scalaz.Traverse<scala.Option> optionInstance();
    Code:
       0: aload_0
       1: getfield      #3365               // Field optionInstance:Lscalaz/Traverse;
       4: areturn

  public void scalaz$std$OptionInstances$_setter_$optionInstance_$eq(scalaz.Traverse<scala.Option>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3365               // Field optionInstance:Lscalaz/Traverse;
       5: return

  public scalaz.Traverse<scala.collection.immutable.List> listInstance();
    Code:
       0: aload_0
       1: getfield      #3370               // Field listInstance:Lscalaz/Traverse;
       4: areturn

  public void scalaz$std$ListInstances$_setter_$listInstance_$eq(scalaz.Traverse<scala.collection.immutable.List>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3370               // Field listInstance:Lscalaz/Traverse;
       5: return

  public scalaz.Traverse<scala.Function0> function0Instance();
    Code:
       0: aload_0
       1: getfield      #3375               // Field function0Instance:Lscalaz/Traverse;
       4: areturn

  public scalaz.Arrow<scala.Function1> function1Instance();
    Code:
       0: aload_0
       1: getfield      #3378               // Field function1Instance:Lscalaz/Arrow;
       4: areturn

  public void scalaz$std$FunctionInstances$_setter_$function0Instance_$eq(scalaz.Traverse<scala.Function0>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3375               // Field function0Instance:Lscalaz/Traverse;
       5: return

  public void scalaz$std$FunctionInstances$_setter_$function1Instance_$eq(scalaz.Arrow<scala.Function1>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3378               // Field function1Instance:Lscalaz/Arrow;
       5: return

  public scalaz.Monoid<scala.runtime.BoxedUnit> unitInstance();
    Code:
       0: aload_0
       1: getfield      #3385               // Field unitInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.std.AnyValInstances$booleanInstance$ booleanInstance();
    Code:
       0: aload_0
       1: getfield      #3389               // Field booleanInstance$module:Lscalaz/std/AnyValInstances$booleanInstance$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #3392               // Method booleanInstance$lzycompute$1:()V
      11: aload_0
      12: getfield      #3389               // Field booleanInstance$module:Lscalaz/std/AnyValInstances$booleanInstance$;
      15: areturn

  public scalaz.Monoid<java.lang.Object> booleanDisjunctionNewTypeInstance();
    Code:
       0: aload_0
       1: getfield      #3394               // Field booleanDisjunctionNewTypeInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> booleanConjunctionNewTypeInstance();
    Code:
       0: aload_0
       1: getfield      #3396               // Field booleanConjunctionNewTypeInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> byteInstance();
    Code:
       0: aload_0
       1: getfield      #3398               // Field byteInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> byteMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3400               // Field byteMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> char();
    Code:
       0: aload_0
       1: getfield      #3402               // Field char:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> charMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3404               // Field charMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> shortInstance();
    Code:
       0: aload_0
       1: getfield      #3406               // Field shortInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> shortMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3408               // Field shortMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> intInstance();
    Code:
       0: aload_0
       1: getfield      #3410               // Field intInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> intMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3412               // Field intMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> longInstance();
    Code:
       0: aload_0
       1: getfield      #3414               // Field longInstance:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<java.lang.Object> longMultiplicationNewType();
    Code:
       0: aload_0
       1: getfield      #3416               // Field longMultiplicationNewType:Lscalaz/Monoid;
       4: areturn

  public scalaz.Order<java.lang.Object> floatInstance();
    Code:
       0: aload_0
       1: getfield      #3420               // Field floatInstance:Lscalaz/Order;
       4: areturn

  public scalaz.Order<java.lang.Object> doubleInstance();
    Code:
       0: aload_0
       1: getfield      #3422               // Field doubleInstance:Lscalaz/Order;
       4: areturn

  public void scalaz$std$AnyValInstances$_setter_$unitInstance_$eq(scalaz.Monoid<scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3385               // Field unitInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$booleanDisjunctionNewTypeInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3394               // Field booleanDisjunctionNewTypeInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$booleanConjunctionNewTypeInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3396               // Field booleanConjunctionNewTypeInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$byteInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3398               // Field byteInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$byteMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3400               // Field byteMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$char_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3402               // Field char:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$charMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3404               // Field charMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$shortInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3406               // Field shortInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$shortMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3408               // Field shortMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$intInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3410               // Field intInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$intMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3412               // Field intMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$longInstance_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3414               // Field longInstance:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$longMultiplicationNewType_$eq(scalaz.Monoid<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3416               // Field longMultiplicationNewType:Lscalaz/Monoid;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$floatInstance_$eq(scalaz.Order<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3420               // Field floatInstance:Lscalaz/Order;
       5: return

  public void scalaz$std$AnyValInstances$_setter_$doubleInstance_$eq(scalaz.Order<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3422               // Field doubleInstance:Lscalaz/Order;
       5: return

  private final void stringInstance$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #3353               // Field stringInstance$module:Lscalaz/std/StringInstances$stringInstance$;
       6: ifnonnull     21
       9: aload_0
      10: new           #39                 // class scalaz/std/StringInstances$stringInstance$
      13: dup
      14: aload_0
      15: invokespecial #3443               // Method scalaz/std/StringInstances$stringInstance$."<init>":(Lscalaz/std/StringInstances;)V
      18: putfield      #3353               // Field stringInstance$module:Lscalaz/std/StringInstances$stringInstance$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void booleanInstance$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #3389               // Field booleanInstance$module:Lscalaz/std/AnyValInstances$booleanInstance$;
       6: ifnonnull     21
       9: aload_0
      10: new           #34                 // class scalaz/std/AnyValInstances$booleanInstance$
      13: dup
      14: aload_0
      15: invokespecial #3448               // Method scalaz/std/AnyValInstances$booleanInstance$."<init>":(Lscalaz/std/AnyValInstances;)V
      18: putfield      #3389               // Field booleanInstance$module:Lscalaz/std/AnyValInstances$booleanInstance$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private scalaz.Scalaz$();
    Code:
       0: aload_0
       1: invokespecial #3449               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #3451               // Field MODULE$:Lscalaz/Scalaz$;
       8: aload_0
       9: invokestatic  #3455               // InterfaceMethod scalaz/IndexedStateFunctions.$init$:(Lscalaz/IndexedStateFunctions;)V
      12: aload_0
      13: invokestatic  #3458               // InterfaceMethod scalaz/StateFunctions.$init$:(Lscalaz/StateFunctions;)V
      16: aload_0
      17: invokestatic  #3461               // InterfaceMethod scalaz/syntax/ToSemigroupOps.$init$:(Lscalaz/syntax/ToSemigroupOps;)V
      20: aload_0
      21: invokestatic  #3464               // InterfaceMethod scalaz/syntax/ToMonoidOps.$init$:(Lscalaz/syntax/ToMonoidOps;)V
      24: aload_0
      25: invokestatic  #3467               // InterfaceMethod scalaz/syntax/ToBandOps.$init$:(Lscalaz/syntax/ToBandOps;)V
      28: aload_0
      29: invokestatic  #3470               // InterfaceMethod scalaz/syntax/ToEqualOps.$init$:(Lscalaz/syntax/ToEqualOps;)V
      32: aload_0
      33: invokestatic  #3473               // InterfaceMethod scalaz/syntax/ToShowOps.$init$:(Lscalaz/syntax/ToShowOps;)V
      36: aload_0
      37: invokestatic  #3476               // InterfaceMethod scalaz/syntax/ToOrderOps.$init$:(Lscalaz/syntax/ToOrderOps;)V
      40: aload_0
      41: invokestatic  #3479               // InterfaceMethod scalaz/syntax/ToEnumOps.$init$:(Lscalaz/syntax/ToEnumOps;)V
      44: aload_0
      45: invokestatic  #3482               // InterfaceMethod scalaz/syntax/ToPlusEmptyOpsU.$init$:(Lscalaz/syntax/ToPlusEmptyOpsU;)V
      48: aload_0
      49: invokestatic  #3485               // InterfaceMethod scalaz/syntax/ToPlusEmptyOps0.$init$:(Lscalaz/syntax/ToPlusEmptyOps0;)V
      52: aload_0
      53: invokestatic  #3488               // InterfaceMethod scalaz/syntax/ToFunctorOpsU.$init$:(Lscalaz/syntax/ToFunctorOpsU;)V
      56: aload_0
      57: invokestatic  #3491               // InterfaceMethod scalaz/syntax/ToFunctorOps0.$init$:(Lscalaz/syntax/ToFunctorOps0;)V
      60: aload_0
      61: invokestatic  #3494               // InterfaceMethod scalaz/syntax/ToContravariantOpsU.$init$:(Lscalaz/syntax/ToContravariantOpsU;)V
      64: aload_0
      65: invokestatic  #3497               // InterfaceMethod scalaz/syntax/ToContravariantOps0.$init$:(Lscalaz/syntax/ToContravariantOps0;)V
      68: aload_0
      69: invokestatic  #3500               // InterfaceMethod scalaz/syntax/ToApplyOpsU.$init$:(Lscalaz/syntax/ToApplyOpsU;)V
      72: aload_0
      73: invokestatic  #3503               // InterfaceMethod scalaz/syntax/ToApplyOps0.$init$:(Lscalaz/syntax/ToApplyOps0;)V
      76: aload_0
      77: invokestatic  #3506               // InterfaceMethod scalaz/syntax/ToApplicativeOpsU.$init$:(Lscalaz/syntax/ToApplicativeOpsU;)V
      80: aload_0
      81: invokestatic  #3509               // InterfaceMethod scalaz/syntax/ToApplicativeOps0.$init$:(Lscalaz/syntax/ToApplicativeOps0;)V
      84: aload_0
      85: invokestatic  #3512               // InterfaceMethod scalaz/syntax/ToBindOpsU.$init$:(Lscalaz/syntax/ToBindOpsU;)V
      88: aload_0
      89: invokestatic  #3515               // InterfaceMethod scalaz/syntax/ToBindOps0.$init$:(Lscalaz/syntax/ToBindOps0;)V
      92: aload_0
      93: invokestatic  #3518               // InterfaceMethod scalaz/syntax/ToMonadOpsU.$init$:(Lscalaz/syntax/ToMonadOpsU;)V
      96: aload_0
      97: invokestatic  #3521               // InterfaceMethod scalaz/syntax/ToMonadOps0.$init$:(Lscalaz/syntax/ToMonadOps0;)V
     100: aload_0
     101: invokestatic  #3524               // InterfaceMethod scalaz/syntax/ToComonadOpsU.$init$:(Lscalaz/syntax/ToComonadOpsU;)V
     104: aload_0
     105: invokestatic  #3527               // InterfaceMethod scalaz/syntax/ToComonadOps0.$init$:(Lscalaz/syntax/ToComonadOps0;)V
     108: aload_0
     109: invokestatic  #3530               // InterfaceMethod scalaz/syntax/ToBifoldableOpsU.$init$:(Lscalaz/syntax/ToBifoldableOpsU;)V
     112: aload_0
     113: invokestatic  #3533               // InterfaceMethod scalaz/syntax/ToBifoldableOps0.$init$:(Lscalaz/syntax/ToBifoldableOps0;)V
     116: aload_0
     117: invokestatic  #3536               // InterfaceMethod scalaz/syntax/ToCozipOpsU.$init$:(Lscalaz/syntax/ToCozipOpsU;)V
     120: aload_0
     121: invokestatic  #3539               // InterfaceMethod scalaz/syntax/ToCozipOps0.$init$:(Lscalaz/syntax/ToCozipOps0;)V
     124: aload_0
     125: invokestatic  #3542               // InterfaceMethod scalaz/syntax/ToPlusOpsU.$init$:(Lscalaz/syntax/ToPlusOpsU;)V
     128: aload_0
     129: invokestatic  #3545               // InterfaceMethod scalaz/syntax/ToPlusOps0.$init$:(Lscalaz/syntax/ToPlusOps0;)V
     132: aload_0
     133: invokestatic  #3548               // InterfaceMethod scalaz/syntax/ToApplicativePlusOpsU.$init$:(Lscalaz/syntax/ToApplicativePlusOpsU;)V
     136: aload_0
     137: invokestatic  #3551               // InterfaceMethod scalaz/syntax/ToApplicativePlusOps0.$init$:(Lscalaz/syntax/ToApplicativePlusOps0;)V
     140: aload_0
     141: invokestatic  #3554               // InterfaceMethod scalaz/syntax/ToAltOpsU.$init$:(Lscalaz/syntax/ToAltOpsU;)V
     144: aload_0
     145: invokestatic  #3557               // InterfaceMethod scalaz/syntax/ToAltOps0.$init$:(Lscalaz/syntax/ToAltOps0;)V
     148: aload_0
     149: invokestatic  #3560               // InterfaceMethod scalaz/syntax/ToMonadPlusOpsU.$init$:(Lscalaz/syntax/ToMonadPlusOpsU;)V
     152: aload_0
     153: invokestatic  #3563               // InterfaceMethod scalaz/syntax/ToMonadPlusOps0.$init$:(Lscalaz/syntax/ToMonadPlusOps0;)V
     156: aload_0
     157: invokestatic  #3566               // InterfaceMethod scalaz/syntax/ToTraverseOpsU.$init$:(Lscalaz/syntax/ToTraverseOpsU;)V
     160: aload_0
     161: invokestatic  #3569               // InterfaceMethod scalaz/syntax/ToTraverseOps0.$init$:(Lscalaz/syntax/ToTraverseOps0;)V
     164: aload_0
     165: invokestatic  #3572               // InterfaceMethod scalaz/syntax/ToBifunctorOpsU.$init$:(Lscalaz/syntax/ToBifunctorOpsU;)V
     168: aload_0
     169: invokestatic  #3575               // InterfaceMethod scalaz/syntax/ToBifunctorOps0.$init$:(Lscalaz/syntax/ToBifunctorOps0;)V
     172: aload_0
     173: invokestatic  #3578               // InterfaceMethod scalaz/syntax/ToAssociativeOpsU.$init$:(Lscalaz/syntax/ToAssociativeOpsU;)V
     176: aload_0
     177: invokestatic  #3581               // InterfaceMethod scalaz/syntax/ToAssociativeOps0.$init$:(Lscalaz/syntax/ToAssociativeOps0;)V
     180: aload_0
     181: invokestatic  #3584               // InterfaceMethod scalaz/syntax/ToBitraverseOpsU.$init$:(Lscalaz/syntax/ToBitraverseOpsU;)V
     184: aload_0
     185: invokestatic  #3587               // InterfaceMethod scalaz/syntax/ToBitraverseOps0.$init$:(Lscalaz/syntax/ToBitraverseOps0;)V
     188: aload_0
     189: invokestatic  #3590               // InterfaceMethod scalaz/syntax/ToComposeOpsU.$init$:(Lscalaz/syntax/ToComposeOpsU;)V
     192: aload_0
     193: invokestatic  #3593               // InterfaceMethod scalaz/syntax/ToComposeOps0.$init$:(Lscalaz/syntax/ToComposeOps0;)V
     196: aload_0
     197: invokestatic  #3596               // InterfaceMethod scalaz/syntax/ToCategoryOpsU.$init$:(Lscalaz/syntax/ToCategoryOpsU;)V
     200: aload_0
     201: invokestatic  #3599               // InterfaceMethod scalaz/syntax/ToCategoryOps0.$init$:(Lscalaz/syntax/ToCategoryOps0;)V
     204: aload_0
     205: invokestatic  #3602               // InterfaceMethod scalaz/syntax/ToArrowOpsU.$init$:(Lscalaz/syntax/ToArrowOpsU;)V
     208: aload_0
     209: invokestatic  #3605               // InterfaceMethod scalaz/syntax/ToArrowOps0.$init$:(Lscalaz/syntax/ToArrowOps0;)V
     212: aload_0
     213: invokestatic  #3608               // InterfaceMethod scalaz/syntax/ToProfunctorOpsU.$init$:(Lscalaz/syntax/ToProfunctorOpsU;)V
     216: aload_0
     217: invokestatic  #3611               // InterfaceMethod scalaz/syntax/ToProfunctorOps0.$init$:(Lscalaz/syntax/ToProfunctorOps0;)V
     220: aload_0
     221: invokestatic  #3614               // InterfaceMethod scalaz/syntax/ToStrongOpsU.$init$:(Lscalaz/syntax/ToStrongOpsU;)V
     224: aload_0
     225: invokestatic  #3617               // InterfaceMethod scalaz/syntax/ToStrongOps0.$init$:(Lscalaz/syntax/ToStrongOps0;)V
     228: aload_0
     229: invokestatic  #3620               // InterfaceMethod scalaz/syntax/ToFoldableOpsU.$init$:(Lscalaz/syntax/ToFoldableOpsU;)V
     232: aload_0
     233: invokestatic  #3623               // InterfaceMethod scalaz/syntax/ToFoldableOps0.$init$:(Lscalaz/syntax/ToFoldableOps0;)V
     236: aload_0
     237: invokestatic  #3626               // InterfaceMethod scalaz/syntax/ToChoiceOpsU.$init$:(Lscalaz/syntax/ToChoiceOpsU;)V
     240: aload_0
     241: invokestatic  #3629               // InterfaceMethod scalaz/syntax/ToChoiceOps0.$init$:(Lscalaz/syntax/ToChoiceOps0;)V
     244: aload_0
     245: invokestatic  #3632               // InterfaceMethod scalaz/syntax/ToSplitOpsU.$init$:(Lscalaz/syntax/ToSplitOpsU;)V
     248: aload_0
     249: invokestatic  #3635               // InterfaceMethod scalaz/syntax/ToSplitOps0.$init$:(Lscalaz/syntax/ToSplitOps0;)V
     252: aload_0
     253: invokestatic  #3638               // InterfaceMethod scalaz/syntax/ToZipOpsU.$init$:(Lscalaz/syntax/ToZipOpsU;)V
     256: aload_0
     257: invokestatic  #3641               // InterfaceMethod scalaz/syntax/ToZipOps0.$init$:(Lscalaz/syntax/ToZipOps0;)V
     260: aload_0
     261: invokestatic  #3644               // InterfaceMethod scalaz/syntax/ToUnzipOpsU.$init$:(Lscalaz/syntax/ToUnzipOpsU;)V
     264: aload_0
     265: invokestatic  #3647               // InterfaceMethod scalaz/syntax/ToUnzipOps0.$init$:(Lscalaz/syntax/ToUnzipOps0;)V
     268: aload_0
     269: invokestatic  #3650               // InterfaceMethod scalaz/syntax/ToMonadTellOps0.$init$:(Lscalaz/syntax/ToMonadTellOps0;)V
     272: aload_0
     273: invokestatic  #3653               // InterfaceMethod scalaz/syntax/ToMonadListenOps0.$init$:(Lscalaz/syntax/ToMonadListenOps0;)V
     276: aload_0
     277: invokestatic  #3656               // InterfaceMethod scalaz/syntax/ToMonadErrorOps0.$init$:(Lscalaz/syntax/ToMonadErrorOps0;)V
     280: aload_0
     281: invokestatic  #3659               // InterfaceMethod scalaz/syntax/ToApplicativeErrorOps0.$init$:(Lscalaz/syntax/ToApplicativeErrorOps0;)V
     284: aload_0
     285: invokestatic  #3662               // InterfaceMethod scalaz/syntax/ToFoldable1OpsU.$init$:(Lscalaz/syntax/ToFoldable1OpsU;)V
     288: aload_0
     289: invokestatic  #3665               // InterfaceMethod scalaz/syntax/ToFoldable1Ops0.$init$:(Lscalaz/syntax/ToFoldable1Ops0;)V
     292: aload_0
     293: invokestatic  #3668               // InterfaceMethod scalaz/syntax/ToTraverse1OpsU.$init$:(Lscalaz/syntax/ToTraverse1OpsU;)V
     296: aload_0
     297: invokestatic  #3671               // InterfaceMethod scalaz/syntax/ToTraverse1Ops0.$init$:(Lscalaz/syntax/ToTraverse1Ops0;)V
     300: aload_0
     301: invokestatic  #3674               // InterfaceMethod scalaz/syntax/ToOptionalOpsU.$init$:(Lscalaz/syntax/ToOptionalOpsU;)V
     304: aload_0
     305: invokestatic  #3677               // InterfaceMethod scalaz/syntax/ToOptionalOps0.$init$:(Lscalaz/syntax/ToOptionalOps0;)V
     308: aload_0
     309: invokestatic  #3680               // InterfaceMethod scalaz/syntax/ToCatchableOpsU.$init$:(Lscalaz/syntax/ToCatchableOpsU;)V
     312: aload_0
     313: invokestatic  #3683               // InterfaceMethod scalaz/syntax/ToCatchableOps0.$init$:(Lscalaz/syntax/ToCatchableOps0;)V
     316: aload_0
     317: invokestatic  #3686               // InterfaceMethod scalaz/syntax/ToAlignOpsU.$init$:(Lscalaz/syntax/ToAlignOpsU;)V
     320: aload_0
     321: invokestatic  #3689               // InterfaceMethod scalaz/syntax/ToAlignOps0.$init$:(Lscalaz/syntax/ToAlignOps0;)V
     324: aload_0
     325: invokestatic  #3692               // InterfaceMethod scalaz/syntax/ToMonadTransOps.$init$:(Lscalaz/syntax/ToMonadTransOps;)V
     328: aload_0
     329: invokestatic  #3695               // InterfaceMethod scalaz/syntax/ToProChoiceOpsU.$init$:(Lscalaz/syntax/ToProChoiceOpsU;)V
     332: aload_0
     333: invokestatic  #3698               // InterfaceMethod scalaz/syntax/ToProChoiceOps0.$init$:(Lscalaz/syntax/ToProChoiceOps0;)V
     336: aload_0
     337: invokestatic  #3701               // InterfaceMethod scalaz/syntax/ToIdOps.$init$:(Lscalaz/syntax/ToIdOps;)V
     340: aload_0
     341: invokestatic  #3704               // InterfaceMethod scalaz/syntax/ToTreeOps.$init$:(Lscalaz/syntax/ToTreeOps;)V
     344: aload_0
     345: invokestatic  #3707               // InterfaceMethod scalaz/syntax/ToStrictTreeOps.$init$:(Lscalaz/syntax/ToStrictTreeOps;)V
     348: aload_0
     349: invokestatic  #3710               // InterfaceMethod scalaz/syntax/ToReducerOps.$init$:(Lscalaz/syntax/ToReducerOps;)V
     352: aload_0
     353: invokestatic  #3713               // InterfaceMethod scalaz/syntax/ToWriterOps.$init$:(Lscalaz/syntax/ToWriterOps;)V
     356: aload_0
     357: invokestatic  #3716               // InterfaceMethod scalaz/syntax/ToStateOps.$init$:(Lscalaz/syntax/ToStateOps;)V
     360: aload_0
     361: invokestatic  #3719               // InterfaceMethod scalaz/syntax/ToValidationOps.$init$:(Lscalaz/syntax/ToValidationOps;)V
     364: aload_0
     365: invokestatic  #3722               // InterfaceMethod scalaz/syntax/ToKleisliOps0.$init$:(Lscalaz/syntax/ToKleisliOps0;)V
     368: aload_0
     369: invokestatic  #3725               // InterfaceMethod scalaz/syntax/ToKleisliOps.$init$:(Lscalaz/syntax/ToKleisliOps;)V
     372: aload_0
     373: invokestatic  #3728               // InterfaceMethod scalaz/syntax/ToEitherOps.$init$:(Lscalaz/syntax/ToEitherOps;)V
     376: aload_0
     377: invokestatic  #3731               // InterfaceMethod scalaz/syntax/ToEitherTOps.$init$:(Lscalaz/syntax/ToEitherTOps;)V
     380: aload_0
     381: invokestatic  #3734               // InterfaceMethod scalaz/syntax/ToNelOps.$init$:(Lscalaz/syntax/ToNelOps;)V
     384: aload_0
     385: invokestatic  #3737               // InterfaceMethod scalaz/syntax/ToTheseOps.$init$:(Lscalaz/syntax/ToTheseOps;)V
     388: aload_0
     389: invokestatic  #3740               // InterfaceMethod scalaz/syntax/ToMaybeOps.$init$:(Lscalaz/syntax/ToMaybeOps;)V
     392: aload_0
     393: invokestatic  #3743               // InterfaceMethod scalaz/syntax/ToContTOps.$init$:(Lscalaz/syntax/ToContTOps;)V
     396: aload_0
     397: invokestatic  #3746               // InterfaceMethod scalaz/syntax/ToConstOps.$init$:(Lscalaz/syntax/ToConstOps;)V
     400: aload_0
     401: invokestatic  #3748               // InterfaceMethod scalaz/std/AnyValInstances.$init$:(Lscalaz/std/AnyValInstances;)V
     404: aload_0
     405: invokestatic  #3751               // InterfaceMethod scalaz/std/FunctionInstances1.$init$:(Lscalaz/std/FunctionInstances1;)V
     408: aload_0
     409: invokestatic  #3754               // InterfaceMethod scalaz/std/FunctionInstances0.$init$:(Lscalaz/std/FunctionInstances0;)V
     412: aload_0
     413: invokestatic  #3757               // InterfaceMethod scalaz/std/FunctionInstances.$init$:(Lscalaz/std/FunctionInstances;)V
     416: aload_0
     417: invokestatic  #3760               // InterfaceMethod scalaz/std/ListInstances0.$init$:(Lscalaz/std/ListInstances0;)V
     420: aload_0
     421: invokestatic  #3763               // InterfaceMethod scalaz/std/ListInstances.$init$:(Lscalaz/std/ListInstances;)V
     424: aload_0
     425: invokestatic  #3766               // InterfaceMethod scalaz/std/MapInstances0.$init$:(Lscalaz/std/MapInstances0;)V
     428: aload_0
     429: invokestatic  #3769               // InterfaceMethod scalaz/std/MapFunctions.$init$:(Lscalaz/std/MapFunctions;)V
     432: aload_0
     433: invokestatic  #3772               // InterfaceMethod scalaz/std/MapInstances.$init$:(Lscalaz/std/MapInstances;)V
     436: aload_0
     437: invokestatic  #3775               // InterfaceMethod scalaz/std/SortedMapInstances0.$init$:(Lscalaz/std/SortedMapInstances0;)V
     440: aload_0
     441: invokestatic  #3778               // InterfaceMethod scalaz/std/SortedMapFunctions.$init$:(Lscalaz/std/SortedMapFunctions;)V
     444: aload_0
     445: invokestatic  #3781               // InterfaceMethod scalaz/std/SortedMapInstances.$init$:(Lscalaz/std/SortedMapInstances;)V
     448: aload_0
     449: invokestatic  #3784               // InterfaceMethod scalaz/std/OptionInstances1.$init$:(Lscalaz/std/OptionInstances1;)V
     452: aload_0
     453: invokestatic  #3787               // InterfaceMethod scalaz/std/OptionInstances0.$init$:(Lscalaz/std/OptionInstances0;)V
     456: aload_0
     457: invokestatic  #3790               // InterfaceMethod scalaz/std/OptionInstances.$init$:(Lscalaz/std/OptionInstances;)V
     460: aload_0
     461: invokestatic  #3793               // InterfaceMethod scalaz/std/SetInstances.$init$:(Lscalaz/std/SetInstances;)V
     464: aload_0
     465: invokestatic  #3795               // InterfaceMethod scalaz/std/StringInstances.$init$:(Lscalaz/std/StringInstances;)V
     468: aload_0
     469: invokestatic  #3798               // InterfaceMethod scalaz/std/StreamInstances.$init$:(Lscalaz/std/StreamInstances;)V
     472: aload_0
     473: invokestatic  #3801               // InterfaceMethod scalaz/std/TupleInstances0.$init$:(Lscalaz/std/TupleInstances0;)V
     476: aload_0
     477: invokestatic  #3804               // InterfaceMethod scalaz/std/TupleInstances1.$init$:(Lscalaz/std/TupleInstances1;)V
     480: aload_0
     481: invokestatic  #3807               // InterfaceMethod scalaz/std/TupleInstances2.$init$:(Lscalaz/std/TupleInstances2;)V
     484: aload_0
     485: invokestatic  #3810               // InterfaceMethod scalaz/std/TupleInstances3.$init$:(Lscalaz/std/TupleInstances3;)V
     488: aload_0
     489: invokestatic  #3813               // InterfaceMethod scalaz/std/VectorInstances0.$init$:(Lscalaz/std/VectorInstances0;)V
     492: aload_0
     493: invokestatic  #3816               // InterfaceMethod scalaz/std/VectorInstances.$init$:(Lscalaz/std/VectorInstances;)V
     496: aload_0
     497: invokestatic  #3819               // InterfaceMethod scalaz/std/FutureInstances1.$init$:(Lscalaz/std/FutureInstances1;)V
     500: aload_0
     501: invokestatic  #3822               // InterfaceMethod scalaz/std/FutureInstances.$init$:(Lscalaz/std/FutureInstances;)V
     504: aload_0
     505: invokestatic  #3825               // InterfaceMethod scalaz/std/EitherInstances0.$init$:(Lscalaz/std/EitherInstances0;)V
     508: aload_0
     509: invokestatic  #3828               // InterfaceMethod scalaz/std/EitherInstances.$init$:(Lscalaz/std/EitherInstances;)V
     512: aload_0
     513: invokestatic  #3833               // InterfaceMethod scalaz/std/PartialFunctionInstances.$init$:(Lscalaz/std/PartialFunctionInstances;)V
     516: aload_0
     517: invokestatic  #3838               // InterfaceMethod scalaz/std/TypeConstraintInstances.$init$:(Lscalaz/std/TypeConstraintInstances;)V
     520: aload_0
     521: invokestatic  #3843               // InterfaceMethod scalaz/std/math/BigDecimalInstances.$init$:(Lscalaz/std/math/BigDecimalInstances;)V
     524: aload_0
     525: invokestatic  #3848               // InterfaceMethod scalaz/std/math/BigInts.$init$:(Lscalaz/std/math/BigInts;)V
     528: aload_0
     529: invokestatic  #3851               // InterfaceMethod scalaz/std/math/OrderingInstances.$init$:(Lscalaz/std/math/OrderingInstances;)V
     532: aload_0
     533: invokestatic  #3856               // InterfaceMethod scalaz/std/java/util/MapInstances.$init$:(Lscalaz/std/java/util/MapInstances;)V
     536: aload_0
     537: invokestatic  #3861               // InterfaceMethod scalaz/std/java/math/BigDecimalInstances.$init$:(Lscalaz/std/java/math/BigDecimalInstances;)V
     540: aload_0
     541: invokestatic  #3866               // InterfaceMethod scalaz/std/java/math/BigIntegerInstances.$init$:(Lscalaz/std/java/math/BigIntegerInstances;)V
     544: aload_0
     545: invokestatic  #3869               // InterfaceMethod scalaz/std/java/EnumInstances.$init$:(Lscalaz/std/java/EnumInstances;)V
     548: aload_0
     549: invokestatic  #3872               // InterfaceMethod scalaz/std/java/util/concurrent/CallableInstances.$init$:(Lscalaz/std/java/util/concurrent/CallableInstances;)V
     552: aload_0
     553: invokestatic  #3875               // InterfaceMethod scalaz/std/ListFunctions.$init$:(Lscalaz/std/ListFunctions;)V
     556: aload_0
     557: invokestatic  #3878               // InterfaceMethod scalaz/std/OptionFunctions.$init$:(Lscalaz/std/OptionFunctions;)V
     560: aload_0
     561: invokestatic  #3881               // InterfaceMethod scalaz/std/StreamFunctions.$init$:(Lscalaz/std/StreamFunctions;)V
     564: aload_0
     565: invokestatic  #3884               // InterfaceMethod scalaz/std/BooleanFunctions.$init$:(Lscalaz/std/BooleanFunctions;)V
     568: aload_0
     569: invokestatic  #3887               // InterfaceMethod scalaz/std/math/OrderingFunctions.$init$:(Lscalaz/std/math/OrderingFunctions;)V
     572: aload_0
     573: invokestatic  #3890               // InterfaceMethod scalaz/std/StringFunctions.$init$:(Lscalaz/std/StringFunctions;)V
     576: aload_0
     577: invokestatic  #3893               // InterfaceMethod scalaz/std/FunctionFunctions.$init$:(Lscalaz/std/FunctionFunctions;)V
     580: aload_0
     581: invokestatic  #3896               // InterfaceMethod scalaz/syntax/std/ToBooleanOps.$init$:(Lscalaz/syntax/std/ToBooleanOps;)V
     584: aload_0
     585: invokestatic  #3899               // InterfaceMethod scalaz/syntax/std/ToOptionOps.$init$:(Lscalaz/syntax/std/ToOptionOps;)V
     588: aload_0
     589: invokestatic  #3902               // InterfaceMethod scalaz/syntax/std/ToOptionIdOps.$init$:(Lscalaz/syntax/std/ToOptionIdOps;)V
     592: aload_0
     593: invokestatic  #3905               // InterfaceMethod scalaz/syntax/std/ToListOps.$init$:(Lscalaz/syntax/std/ToListOps;)V
     596: aload_0
     597: invokestatic  #3908               // InterfaceMethod scalaz/syntax/std/ToStreamOps.$init$:(Lscalaz/syntax/std/ToStreamOps;)V
     600: aload_0
     601: invokestatic  #3911               // InterfaceMethod scalaz/syntax/std/ToVectorOps.$init$:(Lscalaz/syntax/std/ToVectorOps;)V
     604: aload_0
     605: invokestatic  #3914               // InterfaceMethod scalaz/syntax/std/ToFunction2Ops.$init$:(Lscalaz/syntax/std/ToFunction2Ops;)V
     608: aload_0
     609: invokestatic  #3917               // InterfaceMethod scalaz/syntax/std/ToFunction1Ops.$init$:(Lscalaz/syntax/std/ToFunction1Ops;)V
     612: aload_0
     613: invokestatic  #3920               // InterfaceMethod scalaz/syntax/std/ToStringOps.$init$:(Lscalaz/syntax/std/ToStringOps;)V
     616: aload_0
     617: invokestatic  #3923               // InterfaceMethod scalaz/syntax/std/ToTupleOps.$init$:(Lscalaz/syntax/std/ToTupleOps;)V
     620: aload_0
     621: invokestatic  #3926               // InterfaceMethod scalaz/syntax/std/ToMapOps.$init$:(Lscalaz/syntax/std/ToMapOps;)V
     624: aload_0
     625: invokestatic  #3929               // InterfaceMethod scalaz/syntax/std/ToEitherOps.$init$:(Lscalaz/syntax/std/ToEitherOps;)V
     628: aload_0
     629: invokestatic  #3932               // InterfaceMethod scalaz/syntax/std/ToTryOps.$init$:(Lscalaz/syntax/std/ToTryOps;)V
     632: aload_0
     633: invokestatic  #3935               // InterfaceMethod scalaz/IdInstances.$init$:(Lscalaz/IdInstances;)V
     636: return
}
