Compiled from "OneAnd.scala"
public interface scalaz.OneAndFoldable<F> extends scalaz.Foldable1<?> {
  public abstract scalaz.Foldable<F> F();

  public static scala.Option findLeft$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #48                 // InterfaceMethod findLeft:(Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> findLeft(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          28
      16: new           #72                 // class scala/Some
      19: dup
      20: aload_1
      21: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      24: invokespecial #76                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      27: areturn
      28: aload_0
      29: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      34: aload_1
      35: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      38: aload_2
      39: invokeinterface #86,  3           // InterfaceMethod scalaz/Foldable.findLeft:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      44: areturn

  public static scala.Option findRight$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #91                 // InterfaceMethod findRight:(Lscalaz/OneAnd;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> findRight(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: invokeinterface #93,  3           // InterfaceMethod scalaz/Foldable.findRight:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
      16: astore        4
      18: aload         4
      20: instanceof    #72                 // class scala/Some
      23: ifeq          35
      26: aload         4
      28: checkcast     #72                 // class scala/Some
      31: astore_3
      32: goto          93
      35: getstatic     #99                 // Field scala/None$.MODULE$:Lscala/None$;
      38: aload         4
      40: invokevirtual #102                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          83
      46: aload_2
      47: aload_1
      48: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      51: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      59: ifeq          76
      62: new           #72                 // class scala/Some
      65: dup
      66: aload_1
      67: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      70: invokespecial #76                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      73: goto          79
      76: getstatic     #99                 // Field scala/None$.MODULE$:Lscala/None$;
      79: astore_3
      80: goto          93
      83: new           #104                // class scala/MatchError
      86: dup
      87: aload         4
      89: invokespecial #105                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow
      93: aload_3
      94: areturn

  public static java.lang.Object foldMap1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #114                // InterfaceMethod foldMap1:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #138,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #143                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      11: aload_3
      12: invokevirtual #147                // Method scalaz/std/option$.optionMonoid:(Lscalaz/Semigroup;)Lscalaz/Monoid;
      15: invokeinterface #151,  4          // InterfaceMethod foldMap:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      20: checkcast     #107                // class scala/Option
      23: aload_2
      24: aload_1
      25: invokedynamic #161,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
      30: invokevirtual #165                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      33: areturn

  public static java.lang.Object foldMapRight1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #172                // InterfaceMethod foldMapRight1:(Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMapRight1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokedynamic #183,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      15: aload_3
      16: aload_2
      17: invokedynamic #195,  0            // InvokeDynamic #3:apply:(Lscala/Function2;Lscala/Function1;)Lscala/Function2;
      22: invokeinterface #199,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #107                // class scala/Option
      30: aload_3
      31: aload_1
      32: invokedynamic #207,  0            // InvokeDynamic #4:apply:(Lscala/Function2;Lscalaz/OneAnd;)Lscala/Function1;
      37: invokevirtual #211                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      40: aload_2
      41: aload_1
      42: invokedynamic #216,  0            // InvokeDynamic #5:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
      47: invokevirtual #165                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      50: areturn

  public static java.lang.Object foldMapLeft1$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #220                // InterfaceMethod foldMapLeft1:(Lscalaz/OneAnd;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMapLeft1(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_1
      12: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      15: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: aload_3
      21: invokeinterface #225,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      26: areturn

  public static java.lang.Object foldMap$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #151                // InterfaceMethod foldMap:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap(scalaz.OneAnd<F, A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_1
       3: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       6: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokedynamic #237,  0            // InvokeDynamic #6:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function0;
      20: invokeinterface #243,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      25: areturn

  public static java.lang.Object foldRight$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #248                // InterfaceMethod foldRight:(Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldRight(scalaz.OneAnd<F, A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      14: invokeinterface #261,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object foldLeft$(scalaz.OneAndFoldable, scalaz.OneAnd, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #266                // InterfaceMethod foldLeft:(Lscalaz/OneAnd;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldLeft(scalaz.OneAnd<F, A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_3
      11: aload_2
      12: aload_1
      13: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      16: invokeinterface #261,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: aload_3
      22: invokeinterface #225,  4          // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public static scalaz.IndexedStateT traverseS_$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #274                // InterfaceMethod traverseS_:(Lscalaz/OneAnd;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public default <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, scala.runtime.BoxedUnit> traverseS_(scalaz.OneAnd<F, A>, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: getstatic     #278                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #288,  0            // InvokeDynamic #8:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;Lscala/Function1;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: getstatic     #291                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: getstatic     #296                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: new           #25                 // class scalaz/IndexedStateT$Wrap
      36: dup
      37: aload_3
      38: invokespecial #299                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      41: areturn

  public static int length$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #306                // InterfaceMethod length:(Lscalaz/OneAnd;)I
       5: ireturn

  public default <A> int length(scalaz.OneAnd<F, A>);
    Code:
       0: iconst_1
       1: aload_0
       2: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       7: aload_1
       8: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      11: invokeinterface #310,  2          // InterfaceMethod scalaz/Foldable.length:(Ljava/lang/Object;)I
      16: iadd
      17: ireturn

  public static scala.Option index$(scalaz.OneAndFoldable, scalaz.OneAnd, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #317                // InterfaceMethod index:(Lscalaz/OneAnd;I)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> index(scalaz.OneAnd<F, A>, int);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpne     17
       5: new           #72                 // class scala/Some
       8: dup
       9: aload_1
      10: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      13: invokespecial #76                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn
      17: aload_0
      18: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      23: aload_1
      24: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      27: iload_2
      28: iconst_1
      29: isub
      30: invokeinterface #322,  3          // InterfaceMethod scalaz/Foldable.index:(Ljava/lang/Object;I)Lscala/Option;
      35: areturn

  public static scala.collection.immutable.Vector toVector$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #328                // InterfaceMethod toVector:(Lscalaz/OneAnd;)Lscala/collection/immutable/Vector;
       5: areturn

  public default <A> scala.collection.immutable.Vector<A> toVector(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #332,  2          // InterfaceMethod scalaz/Foldable.toVector:(Ljava/lang/Object;)Lscala/collection/immutable/Vector;
      20: aload_2
      21: getstatic     #337                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      24: invokevirtual #341                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      27: invokevirtual #347                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #343                // class scala/collection/immutable/Vector
      33: areturn

  public static scala.collection.immutable.List toList$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #353                // InterfaceMethod toList:(Lscalaz/OneAnd;)Lscala/collection/immutable/List;
       5: areturn

  public default <A> scala.collection.immutable.List<A> toList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #357,  2          // InterfaceMethod scalaz/Foldable.toList:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      20: aload_2
      21: invokevirtual #362                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      24: areturn

  public static scalaz.IList toIList$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #368                // InterfaceMethod toIList:(Lscalaz/OneAnd;)Lscalaz/IList;
       5: areturn

  public default <A> scalaz.IList<A> toIList(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      11: aload_1
      12: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      15: invokeinterface #372,  2          // InterfaceMethod scalaz/Foldable.toIList:(Ljava/lang/Object;)Lscalaz/IList;
      20: aload_2
      21: invokevirtual #376                // Method scalaz/IList.$colon$colon:(Ljava/lang/Object;)Lscalaz/IList;
      24: areturn

  public static scala.collection.immutable.Set toSet$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #382                // InterfaceMethod toSet:(Lscalaz/OneAnd;)Lscala/collection/immutable/Set;
       5: areturn

  public default <A> scala.collection.immutable.Set<A> toSet(scalaz.OneAnd<F, A>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #386,  2          // InterfaceMethod scalaz/Foldable.toSet:(Ljava/lang/Object;)Lscala/collection/immutable/Set;
      15: aload_1
      16: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      19: invokeinterface #392,  2          // InterfaceMethod scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/Set;
      24: checkcast     #388                // class scala/collection/immutable/Set
      27: areturn

  public static scala.collection.immutable.Stream toStream$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #398                // InterfaceMethod toStream:(Lscalaz/OneAnd;)Lscala/collection/immutable/Stream;
       5: areturn

  public default <A> scala.collection.immutable.Stream<A> toStream(scalaz.OneAnd<F, A>);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_2
       5: getstatic     #404                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
       8: aload_0
       9: aload_1
      10: invokedynamic #413,  0            // InvokeDynamic #9:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/Function0;
      15: invokevirtual #417                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      18: aload_2
      19: invokevirtual #421                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      22: areturn

  public static scalaz.EphemeralStream toEphemeralStream$(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #427                // InterfaceMethod toEphemeralStream:(Lscalaz/OneAnd;)Lscalaz/EphemeralStream;
       5: areturn

  public default <A> scalaz.EphemeralStream<A> toEphemeralStream(scalaz.OneAnd<F, A>);
    Code:
       0: getstatic     #433                // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: aload_1
       4: invokedynamic #441,  0            // InvokeDynamic #10:apply:(Lscalaz/OneAnd;)Lscala/Function0;
       9: aload_0
      10: aload_1
      11: invokedynamic #448,  0            // InvokeDynamic #11:apply:(Lscalaz/OneAndFoldable;Lscalaz/OneAnd;)Lscala/Function0;
      16: astore_3
      17: astore_2
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: new           #23                 // class scalaz/EphemeralStream$$anon$4
      26: dup
      27: aload_2
      28: aload_3
      29: invokespecial #451                // Method scalaz/EphemeralStream$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      32: areturn

  public static boolean all$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #461                // InterfaceMethod all:(Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public default <A> boolean all(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          37
      16: aload_0
      17: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      22: aload_1
      23: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      26: aload_2
      27: invokeinterface #465,  3          // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public static boolean any$(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #469                // InterfaceMethod any:(Lscalaz/OneAnd;Lscala/Function1;)Z
       6: ireturn

  public default <A> boolean any(scalaz.OneAnd<F, A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifne          35
      16: aload_0
      17: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
      22: aload_1
      23: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      26: aload_2
      27: invokeinterface #471,  3          // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public static scala.Option $anonfun$foldMap1$1(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #143                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokevirtual #476                // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
      13: areturn

  public static java.lang.Object $anonfun$foldMap1$2(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static scala.Option $anonfun$foldMapRight1$1();
    Code:
       0: getstatic     #143                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #480                // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  public static java.lang.Object $anonfun$foldMapRight1$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$foldMapRight1$3(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #493,  0            // InvokeDynamic #12:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #261,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static scala.Option $anonfun$foldMapRight1$5(scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #143                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokevirtual #476                // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
      13: areturn

  public static scala.Option $anonfun$foldMapRight1$2(scala.Function2, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_3
       1: invokeinterface #498,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #107                // class scala/Option
       9: aload_0
      10: aload_2
      11: invokedynamic #504,  0            // InvokeDynamic #13:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      16: invokevirtual #211                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      19: aload_1
      20: aload_2
      21: invokedynamic #510,  0            // InvokeDynamic #14:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      26: invokevirtual #514                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
      29: areturn

  public static java.lang.Object $anonfun$foldMapRight1$7(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$foldMapRight1$6(scala.Function2, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #522,  0            // InvokeDynamic #15:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #261,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static java.lang.Object $anonfun$foldMapRight1$8(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$foldMap$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #528,  4          // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      17: areturn

  public static java.lang.Object $anonfun$foldRight$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #199,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      17: areturn

  public static scala.Tuple2 $anonfun$traverseS_$1(scalaz.OneAndFoldable, scalaz.OneAnd, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: invokeinterface #537,  3          // InterfaceMethod scalaz/Foldable.traverseS_:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      16: aload_2
      17: aload_1
      18: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      21: invokeinterface #64,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #27                 // class scalaz/IndexedStateT
      29: aload_3
      30: getstatic     #542                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      33: invokevirtual #546                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      36: checkcast     #548                // class scalaz/Bind
      39: invokevirtual #551                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      42: checkcast     #553                // class scala/Tuple2
      45: invokevirtual #556                // Method scala/Tuple2._1:()Ljava/lang/Object;
      48: getstatic     #542                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      51: invokevirtual #546                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      54: checkcast     #548                // class scalaz/Bind
      57: invokevirtual #551                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      60: checkcast     #553                // class scala/Tuple2
      63: areturn

  public static scala.collection.immutable.Stream $anonfun$toStream$1(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #559,  2          // InterfaceMethod scalaz/Foldable.toStream:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      15: areturn

  public static java.lang.Object $anonfun$toEphemeralStream$1(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: areturn

  public static scalaz.EphemeralStream $anonfun$toEphemeralStream$2(scalaz.OneAndFoldable, scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod F:()Lscalaz/Foldable;
       6: aload_1
       7: invokevirtual #81                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: invokeinterface #563,  2          // InterfaceMethod scalaz/Foldable.toEphemeralStream:(Ljava/lang/Object;)Lscalaz/EphemeralStream;
      15: areturn

  public static void $init$(scalaz.OneAndFoldable);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #577,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
