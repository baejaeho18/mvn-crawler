Compiled from "Cokleisli.scala"
public interface scalaz.CokleisliProfunctor<F> extends scalaz.Profunctor<?> {
  public abstract scalaz.Functor<F> F();

  public static scalaz.Cokleisli dimap$(scalaz.CokleisliProfunctor, scalaz.Cokleisli, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // InterfaceMethod dimap:(Lscalaz/Cokleisli;Lscala/Function1;Lscala/Function1;)Lscalaz/Cokleisli;
       7: areturn

  public default <A, B, C, D> scalaz.Cokleisli<F, C, D> dimap(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  1           // InterfaceMethod F:()Lscalaz/Functor;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: new           #37                 // class scalaz/Cokleisli
      17: dup
      18: aload_1
      19: aload_3
      20: aload         4
      22: aload_2
      23: invokedynamic #59,  0             // InvokeDynamic #0:apply:(Lscalaz/Cokleisli;Lscala/Function1;Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
      28: invokespecial #63                 // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      31: areturn

  public static scalaz.Cokleisli mapfst$(scalaz.CokleisliProfunctor, scalaz.Cokleisli, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #75                 // InterfaceMethod mapfst:(Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public default <A, B, C> scalaz.Cokleisli<F, C, B> mapfst(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>);
    Code:
       0: new           #37                 // class scalaz/Cokleisli
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #84,  0             // InvokeDynamic #1:apply:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscala/Function1;
      12: invokespecial #63                 // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      15: areturn

  public static scalaz.Cokleisli mapsnd$(scalaz.CokleisliProfunctor, scalaz.Cokleisli, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #88                 // InterfaceMethod mapsnd:(Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public default <A, B, C> scalaz.Cokleisli<F, A, C> mapsnd(scalaz.Cokleisli<F, A, B>, scala.Function1<B, C>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: new           #37                 // class scalaz/Cokleisli
       9: dup
      10: aload_2
      11: aload_1
      12: invokevirtual #93                 // Method scalaz/Cokleisli.run:()Lscala/Function1;
      15: invokeinterface #99,  2           // InterfaceMethod scala/Function1.compose:(Lscala/Function1;)Lscala/Function1;
      20: invokespecial #63                 // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      23: areturn

  public static java.lang.Object $anonfun$mapfst$1(scalaz.CokleisliProfunctor, scalaz.Cokleisli, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  1           // InterfaceMethod F:()Lscalaz/Functor;
       7: aload_3
       8: aload_2
       9: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: invokevirtual #108                // Method scalaz/Cokleisli.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public static void $init$(scalaz.CokleisliProfunctor);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #123,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
