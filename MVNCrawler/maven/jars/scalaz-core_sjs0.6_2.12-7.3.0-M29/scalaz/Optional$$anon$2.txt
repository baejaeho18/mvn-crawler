Compiled from "Optional.scala"
public final class scalaz.Optional$$anon$2 implements scalaz.IsomorphismOptional<F, G> {
  private final scalaz.syntax.OptionalSyntax<F> optionalSyntax;

  private final scalaz.Optional E$1;

  private final scalaz.Isomorphisms$Iso2 D$1;

  public <B, A> scalaz.$bslash$div<F, A> pextract(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // InterfaceMethod scalaz/IsomorphismOptional.pextract$:(Lscalaz/IsomorphismOptional;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public <A> A getOrElse(F, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // InterfaceMethod scalaz/Optional.getOrElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A> boolean isDefined(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // InterfaceMethod scalaz/Optional.isDefined$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final <A> boolean nonEmpty(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod scalaz/Optional.nonEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final <A> boolean isEmpty(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // InterfaceMethod scalaz/Optional.isEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public <A> F orElse(F, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #68                 // InterfaceMethod scalaz/Optional.orElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A, X> X $qmark(F, scala.Function0<X>, scala.Function0<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #77                 // InterfaceMethod scalaz/Optional.$qmark$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public <A> scala.Option<A> toOption(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // InterfaceMethod scalaz/Optional.toOption$:(Lscalaz/Optional;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public <A> scalaz.Maybe<A> toMaybe(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // InterfaceMethod scalaz/Optional.toMaybe$:(Lscalaz/Optional;Ljava/lang/Object;)Lscalaz/Maybe;
       5: areturn

  public scalaz.syntax.OptionalSyntax<F> optionalSyntax();
    Code:
       0: aload_0
       1: getfield      #95                 // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       4: areturn

  public void scalaz$Optional$_setter_$optionalSyntax_$eq(scalaz.syntax.OptionalSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       5: return

  public scalaz.Optional<G> G();
    Code:
       0: aload_0
       1: getfield      #104                // Field E$1:Lscalaz/Optional;
       4: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #109                // Field D$1:Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public scalaz.Optional$$anon$2(scalaz.Optional, scalaz.Isomorphisms$Iso2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field E$1:Lscalaz/Optional;
       5: aload_0
       6: aload_2
       7: putfield      #109                // Field D$1:Lscalaz/Isomorphisms$Iso2;
      10: aload_0
      11: invokespecial #114                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #118                // InterfaceMethod scalaz/Optional.$init$:(Lscalaz/Optional;)V
      18: aload_0
      19: invokestatic  #121                // InterfaceMethod scalaz/IsomorphismOptional.$init$:(Lscalaz/IsomorphismOptional;)V
      22: return
}
