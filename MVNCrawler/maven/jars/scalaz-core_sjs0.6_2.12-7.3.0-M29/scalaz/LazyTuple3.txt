Compiled from "LazyTuple.scala"
public abstract class scalaz.LazyTuple3<A, B, C> {
  public static <A, B, C> scalaz.LazyTuple3<A, B, C> apply(scala.Function0<A>, scala.Function0<B>, scala.Function0<C>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #11                 // class scalaz/LazyTuple3$$anon$2
      11: dup
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #27                 // Method scalaz/LazyTuple3$$anon$2."<init>":(Lscala/Function0;Lscala/Function0;Lscala/Function0;)V
      18: areturn

  public static <A1, A2> scalaz.Monad<?> lazyTuple3Monad(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: invokevirtual #34                 // Method scalaz/LazyTuple3$.lazyTuple3Monad:(Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monad;
       8: areturn

  public static <A1, A2, A3> scalaz.Monoid<scalaz.LazyTuple3<A1, A2, A3>> lazyTuple3Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>, scalaz.Monoid<A3>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #40                 // Method scalaz/LazyTuple3$.lazyTuple3Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       9: areturn

  public static <A1, A2, A3> scalaz.Order<scalaz.LazyTuple3<A1, A2, A3>> lazyTuple3Order(scalaz.Order<A1>, scalaz.Order<A2>, scalaz.Order<A3>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #45                 // Method scalaz/LazyTuple3$.lazyTuple3Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       9: areturn

  public static <A1, A2, A3> scalaz.Show<scalaz.LazyTuple3<A1, A2, A3>> lazyTuple3Show(scalaz.Show<A1>, scalaz.Show<A2>, scalaz.Show<A3>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #50                 // Method scalaz/LazyTuple3$.lazyTuple3Show:(Lscalaz/Show;Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       9: areturn

  public static <A1, A2, A3> scalaz.Equal<scalaz.LazyTuple3<A1, A2, A3>> lazyTuple3Equal(scalaz.Equal<A1>, scalaz.Equal<A2>, scalaz.Equal<A3>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #55                 // Method scalaz/LazyTuple3$.lazyTuple3Equal:(Lscalaz/Equal;Lscalaz/Equal;Lscalaz/Equal;)Lscalaz/Equal;
       9: areturn

  public static <A1, A2> scalaz.Functor<?> lazyTuple3Functor();
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: invokevirtual #60                 // Method scalaz/LazyTuple3$.lazyTuple3Functor:()Lscalaz/Functor;
       6: areturn

  public static <A1, A2, A3> scalaz.Semigroup<scalaz.LazyTuple3<A1, A2, A3>> lazyTuple3Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>, scalaz.Semigroup<A3>);
    Code:
       0: getstatic     #23                 // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #65                 // Method scalaz/LazyTuple3$.lazyTuple3Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       9: areturn

  public abstract A _1();

  public abstract B _2();

  public abstract C _3();

  public scalaz.LazyTuple3();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object."<init>":()V
       4: return
}
