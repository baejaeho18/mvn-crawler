Compiled from "CaseInsensitive.scala"
public final class scalaz.CaseInsensitiveInstances$$anon$3 implements scalaz.Equal<scalaz.CaseInsensitive<A>> {
  private final scalaz.syntax.EqualSyntax<scalaz.CaseInsensitive<A>> equalSyntax;

  private final scalaz.Equal evidence$4$1;

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.CaseInsensitive<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #45                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.EqualSyntax<scalaz.CaseInsensitive<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #49                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.CaseInsensitive<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public boolean equal(scalaz.CaseInsensitive<A>, scalaz.CaseInsensitive<A>);
    Code:
       0: getstatic     #64                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: aload_0
       4: getfield      #66                 // Field evidence$4$1:Lscalaz/Equal;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_3
      14: aload_1
      15: invokevirtual #72                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      18: aload_2
      19: invokevirtual #72                 // Method scalaz/CaseInsensitive.foldedCase:()Ljava/lang/Object;
      22: invokeinterface #75,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      27: ireturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #68                 // class scalaz/CaseInsensitive
       5: aload_2
       6: checkcast     #68                 // class scalaz/CaseInsensitive
       9: invokevirtual #80                 // Method equal:(Lscalaz/CaseInsensitive;Lscalaz/CaseInsensitive;)Z
      12: ireturn

  public scalaz.CaseInsensitiveInstances$$anon$3(scalaz.CaseInsensitiveInstances, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #66                 // Field evidence$4$1:Lscalaz/Equal;
       5: aload_0
       6: invokespecial #87                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #91                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: return
}
