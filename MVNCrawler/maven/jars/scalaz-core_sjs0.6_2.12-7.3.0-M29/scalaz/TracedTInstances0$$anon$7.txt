Compiled from "TracedT.scala"
public final class scalaz.TracedTInstances0$$anon$7 implements scalaz.TracedTComonad<W, C> {
  private final scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Comonad evidence$8$1;

  private final scalaz.Monoid evidence$9$1;

  public final <A> A copoint(scalaz.TracedT<W, C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // InterfaceMethod scalaz/TracedTComonad.copoint$:(Lscalaz/TracedTComonad;Lscalaz/TracedT;)Ljava/lang/Object;
       5: areturn

  public final <A, B> scalaz.TracedT<W, C, B> cobind(scalaz.TracedT<W, C, A>, scala.Function1<scalaz.TracedT<W, C, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/TracedTCobind.cobind$:(Lscalaz/TracedTCobind;Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       6: areturn

  public final <A, B> scalaz.TracedT<W, C, B> map(scalaz.TracedT<W, C, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/TracedTFunctor.map$:(Lscalaz/TracedTFunctor;Lscalaz/TracedT;Lscala/Function1;)Lscalaz/TracedT;
       6: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #110                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // InterfaceMethod scalaz/Cobind.cojoin$:(Lscalaz/Cobind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #129                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.TracedT<W, C, A>, scalaz.TracedT<W, C, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #157                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #166                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #214                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #229                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #237                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #249                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #249                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #257                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #257                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #264                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #264                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #271                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #271                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Comonad<W> W();
    Code:
       0: getstatic     #283                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #285                // Field evidence$8$1:Lscalaz/Comonad;
       7: invokevirtual #288                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class scalaz/Comonad
      13: areturn

  public scalaz.Monoid<C> C();
    Code:
       0: getstatic     #283                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #293                // Field evidence$9$1:Lscalaz/Monoid;
       7: invokevirtual #288                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #295                // class scalaz/Monoid
      13: areturn

  public final java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #297                // class scalaz/TracedT
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #300,  1          // InterfaceMethod scalaz/TracedTFunctor.W:()Lscalaz/Functor;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: new           #297                // class scalaz/TracedT
      22: dup
      23: aload         4
      25: aload_3
      26: invokevirtual #304                // Method scalaz/TracedT.run:()Ljava/lang/Object;
      29: aload_2
      30: invokedynamic #324,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      35: invokeinterface #326,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      40: invokespecial #330                // Method scalaz/TracedT."<init>":(Ljava/lang/Object;)V
      43: areturn

  public final java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #297                // class scalaz/TracedT
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #335,  1          // InterfaceMethod scalaz/TracedTCobind.W:()Lscalaz/Cobind;
      12: aload_0
      13: invokeinterface #338,  1          // InterfaceMethod scalaz/TracedTCobind.C:()Lscalaz/Semigroup;
      18: astore        5
      20: astore        4
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: new           #297                // class scalaz/TracedT
      30: dup
      31: aload         4
      33: aload_3
      34: invokevirtual #304                // Method scalaz/TracedT.run:()Ljava/lang/Object;
      37: aload_2
      38: aload         4
      40: aload         5
      42: invokedynamic #348,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscalaz/Cobind;Lscalaz/Semigroup;)Lscala/Function1;
      47: astore        7
      49: astore        6
      51: ifnonnull     56
      54: aconst_null
      55: athrow
      56: aload         4
      58: aload         6
      60: aload         7
      62: invokeinterface #350,  3          // InterfaceMethod scalaz/Cobind.cobind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      67: invokespecial #330                // Method scalaz/TracedT."<init>":(Ljava/lang/Object;)V
      70: areturn

  public final java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #297                // class scalaz/TracedT
       5: invokevirtual #363                // Method copoint:(Lscalaz/TracedT;)Ljava/lang/Object;
       8: areturn

  public scalaz.Semigroup C();
    Code:
       0: aload_0
       1: invokevirtual #365                // Method C:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Functor W();
    Code:
       0: aload_0
       1: invokevirtual #367                // Method W:()Lscalaz/Comonad;
       4: areturn

  public scalaz.Cobind W();
    Code:
       0: aload_0
       1: invokevirtual #367                // Method W:()Lscalaz/Comonad;
       4: areturn

  public scalaz.TracedTInstances0$$anon$7(scalaz.TracedTInstances0, scalaz.Comonad, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #285                // Field evidence$8$1:Lscalaz/Comonad;
       5: aload_0
       6: aload_3
       7: putfield      #293                // Field evidence$9$1:Lscalaz/Monoid;
      10: aload_0
      11: invokespecial #372                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #376                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      18: aload_0
      19: invokestatic  #379                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      22: aload_0
      23: invokestatic  #382                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      26: aload_0
      27: invokestatic  #385                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      30: aload_0
      31: invokestatic  #388                // InterfaceMethod scalaz/TracedTFunctor.$init$:(Lscalaz/TracedTFunctor;)V
      34: aload_0
      35: invokestatic  #391                // InterfaceMethod scalaz/TracedTCobind.$init$:(Lscalaz/TracedTCobind;)V
      38: aload_0
      39: invokestatic  #394                // InterfaceMethod scalaz/TracedTComonad.$init$:(Lscalaz/TracedTComonad;)V
      42: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #407,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
