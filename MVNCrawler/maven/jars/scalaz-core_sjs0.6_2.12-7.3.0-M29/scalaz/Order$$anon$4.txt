Compiled from "Order.scala"
public final class scalaz.Order$$anon$4 implements scalaz.Order<F>.OrderLaw {
  private final scalaz.Order $outer;

  public boolean antisymmetric(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // InterfaceMethod scalaz/Order$OrderLaw.antisymmetric$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean transitiveOrder(F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #41                 // InterfaceMethod scalaz/Order$OrderLaw.transitiveOrder$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public boolean orderAndEqualConsistent(F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #45                 // InterfaceMethod scalaz/Order$OrderLaw.orderAndEqualConsistent$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean commutative(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/Equal$EqualLaw.commutative$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean reflexive(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // InterfaceMethod scalaz/Equal$EqualLaw.reflexive$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean transitive(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #62                 // InterfaceMethod scalaz/Equal$EqualLaw.transitive$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public boolean naturality(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/Equal$EqualLaw.naturality$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public scalaz.Order scalaz$Order$OrderLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Order;
       4: areturn

  public scalaz.Equal scalaz$Equal$EqualLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Order;
       4: areturn

  public scalaz.Order$$anon$4(scalaz.Order<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #70                 // Field $outer:Lscalaz/Order;
      11: aload_0
      12: invokespecial #78                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #82                 // InterfaceMethod scalaz/Equal$EqualLaw.$init$:(Lscalaz/Equal$EqualLaw;)V
      19: aload_0
      20: invokestatic  #85                 // InterfaceMethod scalaz/Order$OrderLaw.$init$:(Lscalaz/Order$OrderLaw;)V
      23: return
}
