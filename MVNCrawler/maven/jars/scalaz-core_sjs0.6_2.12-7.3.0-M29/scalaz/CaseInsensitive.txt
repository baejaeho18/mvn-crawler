Compiled from "CaseInsensitive.scala"
public abstract class scalaz.CaseInsensitive<A> {
  private final scalaz.Need<java.lang.Object> hash;

  public static <A> scalaz.CaseInsensitive<A> apply(A, scalaz.FoldCase<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method scalaz/CaseInsensitive$.apply:(Ljava/lang/Object;Lscalaz/FoldCase;)Lscalaz/CaseInsensitive;
       8: areturn

  public static <A> scalaz.Show<scalaz.CaseInsensitive<A>> CaseInsensitiveShow(scalaz.Show<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: invokevirtual #36                 // Method scalaz/CaseInsensitive$.CaseInsensitiveShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scalaz.CaseInsensitive<A>> CaseInsensitiveOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: invokevirtual #42                 // Method scalaz/CaseInsensitive$.CaseInsensitiveOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scalaz.CaseInsensitive<A>> CaseInsensitiveEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: invokevirtual #48                 // Method scalaz/CaseInsensitive$.CaseInsensitiveEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.Monoid<scalaz.CaseInsensitive<A>> CaseInsensitiveMonoid(scalaz.FoldCase<A>, scalaz.Monoid<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method scalaz/CaseInsensitive$.CaseInsensitiveMonoid:(Lscalaz/FoldCase;Lscalaz/Monoid;)Lscalaz/Monoid;
       8: areturn

  public abstract A original();

  public abstract A foldedCase();

  public final <B> scalaz.CaseInsensitive<B> map(scala.Function1<A, B>, scalaz.FoldCase<B>);
    Code:
       0: getstatic     #28                 // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_1
       4: aload_0
       5: invokevirtual #66                 // Method original:()Ljava/lang/Object;
       8: invokeinterface #71,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: aload_2
      14: invokevirtual #30                 // Method scalaz/CaseInsensitive$.apply:(Ljava/lang/Object;Lscalaz/FoldCase;)Lscalaz/CaseInsensitive;
      17: areturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/CaseInsensitive
       4: ifeq          35
       7: aload_1
       8: checkcast     #2                  // class scalaz/CaseInsensitive
      11: astore_3
      12: aload_0
      13: invokevirtual #80                 // Method foldedCase:()Ljava/lang/Object;
      16: aload_3
      17: invokevirtual #80                 // Method foldedCase:()Ljava/lang/Object;
      20: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: istore_2
      32: goto          37
      35: iconst_0
      36: istore_2
      37: iload_2
      38: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #90                 // Field hash:Lscalaz/Need;
       4: invokevirtual #95                 // Method scalaz/Need.value:()Ljava/lang/Object;
       7: invokestatic  #99                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      10: ireturn

  public static final int $anonfun$hash$1(scalaz.CaseInsensitive);
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method foldedCase:()Ljava/lang/Object;
       4: invokevirtual #104                // Method java/lang/Object.hashCode:()I
       7: ireturn

  public scalaz.CaseInsensitive();
    Code:
       0: aload_0
       1: invokespecial #108                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #113                // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       8: aload_0
       9: invokedynamic #132,  0            // InvokeDynamic #0:apply$mcI$sp:(Lscalaz/CaseInsensitive;)Lscala/runtime/java8/JFunction0$mcI$sp;
      14: astore_1
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #92                 // class scalaz/Need
      23: dup
      24: aload_1
      25: invokespecial #135                // Method scalaz/Need."<init>":(Lscala/Function0;)V
      28: putfield      #90                 // Field hash:Lscalaz/Need;
      31: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #151,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
