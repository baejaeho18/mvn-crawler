Compiled from "WriterT.scala"
public final class scalaz.WriterTInstances15$$anon$3 implements scalaz.WriterTPlus<F, W> {
  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.Plus F0$2;

  public final <A> scalaz.WriterT<W, F, A> plus(scalaz.WriterT<W, F, A>, scala.Function0<scalaz.WriterT<W, F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #37                 // InterfaceMethod scalaz/WriterTPlus.plus$:(Lscalaz/WriterTPlus;Lscalaz/WriterT;Lscala/Function0;)Lscalaz/WriterT;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.WriterT<W, F, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.WriterT<W, F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.WriterT<W, F, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.WriterT<W, F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #63                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.WriterT<W, F, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #88                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Plus<F> F();
    Code:
       0: aload_0
       1: getfield      #96                 // Field F0$2:Lscalaz/Plus;
       4: areturn

  public final java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #99                 // class scalaz/WriterT
       4: astore_3
       5: new           #99                 // class scalaz/WriterT
       8: dup
       9: aload_0
      10: invokeinterface #101,  1          // InterfaceMethod scalaz/WriterTPlus.F:()Lscalaz/Plus;
      15: aload_3
      16: invokevirtual #105                // Method scalaz/WriterT.run:()Ljava/lang/Object;
      19: aload_2
      20: invokedynamic #126,  0            // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      25: invokeinterface #128,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      30: invokespecial #132                // Method scalaz/WriterT."<init>":(Ljava/lang/Object;)V
      33: areturn

  public scalaz.WriterTInstances15$$anon$3(scalaz.WriterTInstances15, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #96                 // Field F0$2:Lscalaz/Plus;
       5: aload_0
       6: invokespecial #138                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #142                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      13: aload_0
      14: invokestatic  #145                // InterfaceMethod scalaz/WriterTPlus.$init$:(Lscalaz/WriterTPlus;)V
      17: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #158,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
