Compiled from "Profunctor.scala"
public final class scalaz.Profunctor$$anon$8 implements scalaz.Profunctor<?> {
  private final scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax;

  private final scalaz.Functor evidence$2$1;

  public <A, B, C, D> java.lang.Object dimap(java.lang.Object, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #41                 // InterfaceMethod scalaz/Profunctor.dimap$:(Lscalaz/Profunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #59                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #66                 // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<?>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #77                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public <A, B, C> java.lang.Object mapfst(java.lang.Object, scala.Function1<C, A>);
    Code:
       0: getstatic     #89                 // Field scalaz/Profunctor$.MODULE$:Lscalaz/Profunctor$;
       3: invokevirtual #93                 // Method scalaz/Profunctor$.DownStar:()Lscalaz/Tag$TagOf;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #115,  0            // InvokeDynamic #0:apply:(Lscalaz/Profunctor$$anon$8;Ljava/lang/Object;Lscala/Function1;)Lscala/Function1;
      14: invokevirtual #117                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public <A, B, C> java.lang.Object mapsnd(java.lang.Object, scala.Function1<B, C>);
    Code:
       0: getstatic     #89                 // Field scalaz/Profunctor$.MODULE$:Lscalaz/Profunctor$;
       3: invokevirtual #93                 // Method scalaz/Profunctor$.DownStar:()Lscalaz/Tag$TagOf;
       6: aload_2
       7: getstatic     #124                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: invokevirtual #128                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      19: aload_1
      20: invokevirtual #133                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #135                // class scala/Function1
      26: invokeinterface #139,  2          // InterfaceMethod scala/Function1.compose:(Lscala/Function1;)Lscala/Function1;
      31: invokevirtual #117                // Method scalaz/Tag$TagOf.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn

  public static final java.lang.Object $anonfun$mapfst$1(scalaz.Profunctor$$anon$8, java.lang.Object, scala.Function1, java.lang.Object);
    Code:
       0: getstatic     #124                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #128                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_1
      13: invokevirtual #133                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #135                // class scala/Function1
      19: getstatic     #148                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      22: aload_0
      23: getfield      #150                // Field evidence$2$1:Lscalaz/Functor;
      26: astore        4
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload         4
      35: aload_3
      36: aload_2
      37: invokeinterface #155,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      42: invokeinterface #156,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: areturn

  public scalaz.Profunctor$$anon$8(scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field evidence$2$1:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #161                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #165                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #177,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
