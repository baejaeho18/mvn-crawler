Compiled from "EitherT.scala"
public final class scalaz.EitherT$ extends scalaz.EitherTInstances implements scala.Serializable {
  public static scalaz.EitherT$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/EitherT$
       3: invokespecial #28                 // Method "<init>":()V
       6: return

  public <A, F, B> scalaz.EitherT<A, F, B> eitherT(F);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_1
       5: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> either(scalaz.$bslash$div<A, B>, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #47                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_2
      13: aload_1
      14: invokedynamic #69,  0             // InvokeDynamic #0:apply:(Lscalaz/$bslash$div;)Lscala/Function0;
      19: invokeinterface #75,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      27: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> leftT(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #89                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_2
      13: aload_1
      14: invokedynamic #100,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      19: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      27: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> rightT(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #89                 // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_2
      13: aload_1
      14: invokedynamic #117,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      19: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      27: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> left(A, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #47                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_2
      13: aload_1
      14: invokedynamic #128,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #75,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      27: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> right(B, scalaz.Applicative<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: getstatic     #47                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_2
      13: aload_1
      14: invokedynamic #137,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #75,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      27: areturn

  public <A, F, B> scalaz.EitherT<A, F, B> pure(B, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #141                // Method right:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/EitherT;
       6: areturn

  public <F> scalaz.EitherT$FromDisjunctionAux<F> fromDisjunction();
    Code:
       0: new           #18                 // class scalaz/EitherT$FromDisjunctionAux
       3: dup
       4: invokespecial #145                // Method scalaz/EitherT$FromDisjunctionAux."<init>":()V
       7: areturn

  public <FAB, AB, A0, B0> scalaz.EitherT<A0, java.lang.Object, B0> eitherTU(FAB, scalaz.Unapply<scalaz.Functor, FAB>, scalaz.Unapply2<scalaz.Bifunctor, AB>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, AB, scalaz.$bslash$div<A0, B0>>);
    Code:
       0: aload_0
       1: aload         4
       3: aload_2
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_2
      10: invokeinterface #158,  1          // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      15: aload_1
      16: invokevirtual #162                // Method scalaz/Leibniz.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #165                // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      22: invokevirtual #167                // Method eitherT:(Ljava/lang/Object;)Lscalaz/EitherT;
      25: areturn

  public <F, W, A> scalaz.EitherTMonadTell<F, W, A> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: new           #14                 // class scalaz/EitherT$$anon$1
       3: dup
       4: aload_1
       5: invokespecial #179                // Method scalaz/EitherT$$anon$1."<init>":(Lscalaz/MonadTell;)V
       8: areturn

  public <F, W, A> scalaz.EitherTMonadListen<F, W, A> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: new           #16                 // class scalaz/EitherT$$anon$2
       3: dup
       4: aload_1
       5: invokespecial #187                // Method scalaz/EitherT$$anon$2."<init>":(Lscalaz/MonadListen;)V
       8: areturn

  public <B> boolean leftU();
    Code:
       0: iconst_1
       1: ireturn

  public <A> boolean rightU();
    Code:
       0: iconst_1
       1: ireturn

  public <F, A, B> scalaz.EitherT<A, F, B> fromEither(F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #204,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      11: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      19: areturn

  public <F, A, B> scalaz.EitherT<A, F, B> fromOption(scala.Function0<A>, F, scalaz.Functor<F>);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_3
       5: aload_2
       6: aload_1
       7: invokedynamic #219,  0            // InvokeDynamic #6:apply:(Lscala/Function0;)Lscala/Function1;
      12: invokeinterface #106,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      20: areturn

  public <F, A, B extends java.lang.Throwable> scalaz.EitherT<B, F, A> fromTryCatchThrowable(scala.Function0<F>, scalaz.NotNothing<B>, scalaz.Applicative<F>, scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #231,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_3
       8: invokevirtual #233                // Method rightT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      11: areturn
      12: astore        6
      14: aload         4
      16: invokeinterface #239,  1          // InterfaceMethod scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
      21: aload         6
      23: invokevirtual #245                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      26: ifeq          52
      29: aload_0
      30: aload_3
      31: aload         6
      33: invokedynamic #255,  0            // InvokeDynamic #7:apply:(Ljava/lang/Throwable;)Lscala/Function0;
      38: invokeinterface #75,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      43: aload_3
      44: invokevirtual #257                // Method leftT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      47: astore        5
      49: goto          55
      52: aload         6
      54: athrow
      55: aload         5
      57: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Throwable

  public <F, A> scalaz.EitherT<java.lang.Throwable, F, A> fromTryCatchNonFatal(scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #231,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_2
       8: invokevirtual #233                // Method rightT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      11: areturn
      12: astore        4
      14: getstatic     #269                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      17: aload         4
      19: invokevirtual #273                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      22: astore        5
      24: aload         5
      26: invokevirtual #278                // Method scala/Option.isEmpty:()Z
      29: ifne          64
      32: aload         5
      34: invokevirtual #281                // Method scala/Option.get:()Ljava/lang/Object;
      37: checkcast     #227                // class java/lang/Throwable
      40: astore        6
      42: aload_0
      43: aload_2
      44: aload         6
      46: invokedynamic #286,  0            // InvokeDynamic #8:apply:(Ljava/lang/Throwable;)Lscala/Function0;
      51: invokeinterface #75,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      56: aload_2
      57: invokevirtual #257                // Method leftT:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/EitherT;
      60: astore_3
      61: goto          67
      64: aload         4
      66: athrow
      67: aload_3
      68: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Throwable

  public <A, F, B> scalaz.EitherT<A, F, B> apply(F);
    Code:
       0: new           #20                 // class scalaz/EitherT
       3: dup
       4: aload_1
       5: invokespecial #35                 // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <A, F, B> scala.Option<F> unapply(scalaz.EitherT<A, F, B>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #297                // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #299                // class scala/Some
      11: dup
      12: aload_1
      13: invokevirtual #301                // Method scalaz/EitherT.run:()Ljava/lang/Object;
      16: invokespecial #302                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      19: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #306                // Field MODULE$:Lscalaz/EitherT$;
       3: areturn

  public static final scalaz.$bslash$div $anonfun$either$1(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.$bslash$div $anonfun$leftT$1(java.lang.Object);
    Code:
       0: getstatic     #313                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: aload_0
       4: invokevirtual #315                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$rightT$1(java.lang.Object);
    Code:
       0: getstatic     #321                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokevirtual #322                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$left$1(java.lang.Object);
    Code:
       0: getstatic     #313                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: aload_0
       4: invokevirtual #315                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$right$1(java.lang.Object);
    Code:
       0: getstatic     #321                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokevirtual #322                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$fromEither$1(scala.util.Either);
    Code:
       0: aload_0
       1: getstatic     #330                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       4: invokevirtual #332                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
       7: getstatic     #330                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      10: invokevirtual #334                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      13: invokevirtual #340                // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      16: checkcast     #79                 // class scalaz/$bslash$div
      19: areturn

  public static final scalaz.$bslash$div $anonfun$fromOption$1(scala.Function0, scala.Option);
    Code:
       0: getstatic     #330                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_2
      10: aload_1
      11: aload_0
      12: invokedynamic #350,  0            // InvokeDynamic #9:apply:(Lscala/Function0;)Lscala/Function0;
      17: aload_2
      18: invokevirtual #334                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      21: invokevirtual #353                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #79                 // class scalaz/$bslash$div
      27: areturn

  public static final java.lang.Throwable $anonfun$fromTryCatchThrowable$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Throwable $anonfun$fromTryCatchNonFatal$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  private scalaz.EitherT$();
    Code:
       0: aload_0
       1: invokespecial #358                // Method scalaz/EitherTInstances."<init>":()V
       4: aload_0
       5: putstatic     #306                // Field MODULE$:Lscalaz/EitherT$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #370,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
