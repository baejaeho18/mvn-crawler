Compiled from "Maybe.scala"
public final class scalaz.MaybeInstances$$anon$5 implements scalaz.Order<scalaz.Maybe<A>>, scalaz.MaybeEqual<A> {
  private final scalaz.syntax.OrderSyntax<scalaz.Maybe<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.Maybe<A>> equalSyntax;

  private final scalaz.Order evidence$5$1;

  public final boolean equal(scalaz.Maybe<A>, scalaz.Maybe<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/MaybeEqual.equal$:(Lscalaz/MaybeEqual;Lscalaz/Maybe;Lscalaz/Maybe;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #112                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.Maybe<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.Maybe<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.Maybe<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.Maybe<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #154                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.Maybe<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #158                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #158                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.Maybe<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #166                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #166                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Equal<A> A();
    Code:
       0: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #180                // Field evidence$5$1:Lscalaz/Order;
       7: invokevirtual #184                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #24                 // class scalaz/Equal
      13: areturn

  public scalaz.Ordering order(scalaz.Maybe<A>, scalaz.Maybe<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #32                 // class scalaz/Maybe$Just
      10: ifeq          33
      13: aload_1
      14: checkcast     #32                 // class scalaz/Maybe$Just
      17: invokevirtual #191                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload_2
      24: aload         4
      26: invokestatic  #195                // Method $anonfun$order$1:(Lscalaz/MaybeInstances$$anon$5;Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Ordering;
      29: astore_3
      30: goto          57
      33: aload_1
      34: instanceof    #27                 // class scalaz/Maybe$Empty
      37: ifeq          48
      40: aload_2
      41: invokestatic  #199                // Method $anonfun$order$4:(Lscalaz/Maybe;)Lscalaz/Ordering;
      44: astore_3
      45: goto          57
      48: new           #201                // class scala/MatchError
      51: dup
      52: aload_1
      53: invokespecial #205                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      56: athrow
      57: aload_3
      58: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #35                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #210                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public final boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scalaz/Maybe
       5: aload_2
       6: checkcast     #29                 // class scalaz/Maybe
       9: invokevirtual #212                // Method equal:(Lscalaz/Maybe;Lscalaz/Maybe;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scalaz/Maybe
       5: aload_2
       6: checkcast     #29                 // class scalaz/Maybe
       9: invokevirtual #214                // Method order:(Lscalaz/Maybe;Lscalaz/Maybe;)Lscalaz/Ordering;
      12: areturn

  public static final scalaz.Ordering $anonfun$order$2(scalaz.MaybeInstances$$anon$5, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #224                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: aload_0
       4: getfield      #180                // Field evidence$5$1:Lscalaz/Order;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokeinterface #226,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      21: areturn

  public static final scalaz.Ordering$GT$ $anonfun$order$3();
    Code:
       0: getstatic     #231                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
       3: areturn

  public static final scalaz.Ordering $anonfun$order$1(scalaz.MaybeInstances$$anon$5, scalaz.Maybe, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #32                 // class scalaz/Maybe$Just
      10: ifeq          33
      13: aload_1
      14: checkcast     #32                 // class scalaz/Maybe$Just
      17: invokevirtual #191                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload_2
      24: aload         4
      26: invokestatic  #235                // Method $anonfun$order$2:(Lscalaz/MaybeInstances$$anon$5;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      29: astore_3
      30: goto          56
      33: aload_1
      34: instanceof    #27                 // class scalaz/Maybe$Empty
      37: ifeq          47
      40: invokestatic  #237                // Method $anonfun$order$3:()Lscalaz/Ordering$GT$;
      43: astore_3
      44: goto          56
      47: new           #201                // class scala/MatchError
      50: dup
      51: aload_1
      52: invokespecial #205                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow
      56: aload_3
      57: checkcast     #42                 // class scalaz/Ordering
      60: areturn

  public static final scalaz.Ordering$LT$ $anonfun$order$5(java.lang.Object);
    Code:
       0: getstatic     #243                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
       3: areturn

  public static final scalaz.Ordering$EQ$ $anonfun$order$6();
    Code:
       0: getstatic     #248                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
       3: areturn

  public static final scalaz.Ordering $anonfun$order$4(scalaz.Maybe);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: instanceof    #32                 // class scalaz/Maybe$Just
      10: ifeq          27
      13: aload_0
      14: checkcast     #32                 // class scalaz/Maybe$Just
      17: invokevirtual #191                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: invokestatic  #250                // Method $anonfun$order$5:(Ljava/lang/Object;)Lscalaz/Ordering$LT$;
      23: astore_1
      24: goto          50
      27: aload_0
      28: instanceof    #27                 // class scalaz/Maybe$Empty
      31: ifeq          41
      34: invokestatic  #252                // Method $anonfun$order$6:()Lscalaz/Ordering$EQ$;
      37: astore_1
      38: goto          50
      41: new           #201                // class scala/MatchError
      44: dup
      45: aload_0
      46: invokespecial #205                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_1
      51: checkcast     #42                 // class scalaz/Ordering
      54: areturn

  public scalaz.MaybeInstances$$anon$5(scalaz.MaybeInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #180                // Field evidence$5$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #257                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #261                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #264                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: aload_0
      18: invokestatic  #267                // InterfaceMethod scalaz/MaybeEqual.$init$:(Lscalaz/MaybeEqual;)V
      21: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #286,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
