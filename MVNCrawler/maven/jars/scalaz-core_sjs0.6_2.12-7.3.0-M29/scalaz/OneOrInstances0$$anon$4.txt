Compiled from "OneOr.scala"
public final class scalaz.OneOrInstances0$$anon$4 implements scalaz.OneOrCobind<F> {
  private final scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Cobind evidence$4$1;

  public final <A, B> scalaz.OneOr<F, B> cobind(scalaz.OneOr<F, A>, scala.Function1<scalaz.OneOr<F, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/OneOrCobind.cobind$:(Lscalaz/OneOrCobind;Lscalaz/OneOr;Lscala/Function1;)Lscalaz/OneOr;
       6: areturn

  public final <A, B> scalaz.OneOr<F, B> map(scalaz.OneOr<F, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/OneOrFunctor.map$:(Lscalaz/OneOrFunctor;Lscalaz/OneOr;Lscala/Function1;)Lscalaz/OneOr;
       6: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #76                 // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // InterfaceMethod scalaz/Cobind.cojoin$:(Lscalaz/Cobind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #97                 // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.OneOr<F, A>, scalaz.OneOr<F, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #130                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #190                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #197                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #213                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #217                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #217                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #225                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #225                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #232                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #232                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Cobind<F> F();
    Code:
       0: getstatic     #244                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #246                // Field evidence$4$1:Lscalaz/Cobind;
       7: invokevirtual #249                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class scalaz/Cobind
      13: areturn

  public final java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #251                // class scalaz/OneOr
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #254,  1          // InterfaceMethod scalaz/OneOrFunctor.F:()Lscalaz/Functor;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: new           #251                // class scalaz/OneOr
      22: dup
      23: aload_3
      24: invokevirtual #258                // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
      27: aload         4
      29: aload_2
      30: invokeinterface #260,  2          // InterfaceMethod scalaz/Functor.lift:(Lscala/Function1;)Lscala/Function1;
      35: astore        6
      37: dup
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: astore        5
      45: aload         5
      47: instanceof    #262                // class scalaz/$minus$bslash$div
      50: ifeq          83
      53: aload         5
      55: checkcast     #262                // class scalaz/$minus$bslash$div
      58: invokevirtual #265                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      61: astore        8
      63: getstatic     #270                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      66: aload         6
      68: aload         8
      70: invokeinterface #274,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: invokevirtual #277                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      78: astore        7
      80: goto          130
      83: aload         5
      85: instanceof    #279                // class scalaz/$bslash$div$minus
      88: ifeq          120
      91: aload         5
      93: checkcast     #279                // class scalaz/$bslash$div$minus
      96: invokevirtual #281                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      99: astore        9
     101: getstatic     #286                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     104: aload_2
     105: aload         9
     107: invokeinterface #274,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     112: invokevirtual #287                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     115: astore        7
     117: goto          130
     120: new           #289                // class scala/MatchError
     123: dup
     124: aload         5
     126: invokespecial #293                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     129: athrow
     130: aload         7
     132: invokespecial #296                // Method scalaz/OneOr."<init>":(Lscalaz/$bslash$div;)V
     135: areturn

  public final java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #251                // class scalaz/OneOr
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #306,  1          // InterfaceMethod scalaz/OneOrCobind.F:()Lscalaz/Cobind;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: new           #251                // class scalaz/OneOr
      22: dup
      23: aload_3
      24: invokevirtual #258                // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
      27: astore        6
      29: aload         6
      31: instanceof    #279                // class scalaz/$bslash$div$minus
      34: ifeq          55
      37: getstatic     #286                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      40: aload_2
      41: aload_3
      42: invokeinterface #274,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: invokevirtual #287                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      50: astore        5
      52: goto          109
      55: aload         6
      57: instanceof    #262                // class scalaz/$minus$bslash$div
      60: ifeq          99
      63: aload         6
      65: checkcast     #262                // class scalaz/$minus$bslash$div
      68: invokevirtual #265                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      71: astore        7
      73: getstatic     #270                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      76: aload         4
      78: aload         7
      80: aload_2
      81: invokedynamic #325,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      86: invokeinterface #327,  3          // InterfaceMethod scalaz/Cobind.cobind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      91: invokevirtual #277                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      94: astore        5
      96: goto          109
      99: new           #289                // class scala/MatchError
     102: dup
     103: aload         6
     105: invokespecial #293                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         5
     111: invokespecial #296                // Method scalaz/OneOr."<init>":(Lscalaz/$bslash$div;)V
     114: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #331                // Method F:()Lscalaz/Cobind;
       4: areturn

  public scalaz.OneOrInstances0$$anon$4(scalaz.OneOrInstances0, scalaz.Cobind);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #246                // Field evidence$4$1:Lscalaz/Cobind;
       5: aload_0
       6: invokespecial #336                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #340                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #343                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #346                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      21: aload_0
      22: invokestatic  #349                // InterfaceMethod scalaz/OneOrFunctor.$init$:(Lscalaz/OneOrFunctor;)V
      25: aload_0
      26: invokestatic  #352                // InterfaceMethod scalaz/OneOrCobind.$init$:(Lscalaz/OneOrCobind;)V
      29: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #365,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
