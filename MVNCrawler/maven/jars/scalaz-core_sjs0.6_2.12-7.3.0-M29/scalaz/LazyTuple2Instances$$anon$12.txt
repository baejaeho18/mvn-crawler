Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple2Instances$$anon$12 implements scalaz.LazyTuple2Order<A1, A2> {
  private final scalaz.syntax.OrderSyntax<scalaz.LazyTuple2<A1, A2>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.LazyTuple2<A1, A2>> equalSyntax;

  private final scalaz.Order A1$3;

  private final scalaz.Order A2$3;

  public scalaz.Ordering order(scalaz.LazyTuple2<A1, A2>, scalaz.LazyTuple2<A1, A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // InterfaceMethod scalaz/LazyTuple2Order.order$:(Lscalaz/LazyTuple2Order;Lscalaz/LazyTuple2;Lscalaz/LazyTuple2;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(scalaz.LazyTuple2<A1, A2>, scalaz.LazyTuple2<A1, A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #55                 // InterfaceMethod scalaz/LazyTuple2Equal.equal$:(Lscalaz/LazyTuple2Equal;Lscalaz/LazyTuple2;Lscalaz/LazyTuple2;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #70                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #74                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #82                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.LazyTuple2<A1, A2>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple2<A1, A2>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.LazyTuple2<A1, A2>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.LazyTuple2<A1, A2>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.LazyTuple2<A1, A2>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.LazyTuple2<A1, A2>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A1> _1();
    Code:
       0: aload_0
       1: getfield      #160                // Field A1$3:Lscalaz/Order;
       4: areturn

  public scalaz.Order<A2> _2();
    Code:
       0: aload_0
       1: getfield      #164                // Field A2$3:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #169                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #171                // class scalaz/LazyTuple2
       5: aload_2
       6: checkcast     #171                // class scalaz/LazyTuple2
       9: invokevirtual #173                // Method equal:(Lscalaz/LazyTuple2;Lscalaz/LazyTuple2;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #171                // class scalaz/LazyTuple2
       5: aload_2
       6: checkcast     #171                // class scalaz/LazyTuple2
       9: invokevirtual #175                // Method order:(Lscalaz/LazyTuple2;Lscalaz/LazyTuple2;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal _2();
    Code:
       0: aload_0
       1: invokevirtual #178                // Method _2:()Lscalaz/Order;
       4: areturn

  public scalaz.Equal _1();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method _1:()Lscalaz/Order;
       4: areturn

  public scalaz.LazyTuple2Instances$$anon$12(scalaz.LazyTuple2Instances, scalaz.Order, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #160                // Field A1$3:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #164                // Field A2$3:Lscalaz/Order;
      10: aload_0
      11: invokespecial #185                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #189                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #192                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: aload_0
      23: invokestatic  #195                // InterfaceMethod scalaz/LazyTuple2Equal.$init$:(Lscalaz/LazyTuple2Equal;)V
      26: aload_0
      27: invokestatic  #198                // InterfaceMethod scalaz/LazyTuple2Order.$init$:(Lscalaz/LazyTuple2Order;)V
      30: return
}
