Compiled from "MonadTrans.scala"
public interface scalaz.MonadTrans<F> {
  public abstract <G, A> F liftM(G, scalaz.Monad<G>);

  public static java.lang.Object liftMU$(scalaz.MonadTrans, java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // InterfaceMethod liftMU:(Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public default <GA> F liftMU(GA, scalaz.Unapply<scalaz.Monad, GA>);
    Code:
       0: aload_0
       1: aload_2
       2: ifnonnull     7
       5: aconst_null
       6: athrow
       7: aload_2
       8: invokeinterface #42,  1           // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      13: aload_1
      14: invokevirtual #48                 // Method scalaz/Leibniz.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: aload_2
      18: invokeinterface #52,  1           // InterfaceMethod scalaz/Unapply.TC:()Ljava/lang/Object;
      23: checkcast     #54                 // class scalaz/Monad
      26: invokeinterface #56,  3           // InterfaceMethod liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      31: areturn

  public static java.lang.Object wrapEffect$(scalaz.MonadTrans, java.lang.Object, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #63                 // InterfaceMethod wrapEffect:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
       6: areturn

  public default <G, A> F wrapEffect(G, scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #67,  2           // InterfaceMethod apply:(Lscalaz/Monad;)Lscalaz/Monad;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokeinterface #56,  3           // InterfaceMethod liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      15: invokeinterface #70,  2           // InterfaceMethod scalaz/Monad.join:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public abstract <G> scalaz.Monad<?> apply(scalaz.Monad<G>);

  public static java.lang.Object mapF$(scalaz.MonadTrans, java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #81                 // InterfaceMethod mapF:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> F mapF(F, scala.Function1<A, G>, scalaz.Monad<G>);
    Code:
       0: getstatic     #89                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
       3: aload_0
       4: aload_3
       5: invokeinterface #67,  2           // InterfaceMethod apply:(Lscalaz/Monad;)Lscalaz/Monad;
      10: astore        4
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload         4
      19: aload_1
      20: aload_0
      21: aload_2
      22: aload_3
      23: invokedynamic #109,  0            // InvokeDynamic #0:apply:(Lscalaz/MonadTrans;Lscala/Function1;Lscalaz/Monad;)Lscala/Function1;
      28: invokeinterface #113,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      33: areturn

  public static scalaz.MonadTrans$MonadTransLaw monadTransLaw$(scalaz.MonadTrans);
    Code:
       0: aload_0
       1: invokespecial #119                // InterfaceMethod monadTransLaw:()Lscalaz/MonadTrans$MonadTransLaw;
       4: areturn

  public default scalaz.MonadTrans<F>.MonadTransLaw monadTransLaw();
    Code:
       0: new           #16                 // class scalaz/MonadTrans$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #124                // Method scalaz/MonadTrans$$anon$1."<init>":(Lscalaz/MonadTrans;)V
       8: areturn

  public static java.lang.Object $anonfun$mapF$1(scalaz.MonadTrans, scala.Function1, scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #129,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokeinterface #56,  3           // InterfaceMethod liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
      14: areturn

  public static void $init$(scalaz.MonadTrans);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #142,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
