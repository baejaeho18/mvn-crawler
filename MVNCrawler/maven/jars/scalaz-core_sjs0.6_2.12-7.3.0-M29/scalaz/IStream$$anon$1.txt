Compiled from "IStream.scala"
public final class scalaz.IStream$$anon$1 implements scalaz.MonadPlus<scalaz.IStream>, scalaz.IsEmpty<scalaz.IStream>, scalaz.Traverse<scalaz.IStream> {
  private final scalaz.syntax.TraverseSyntax<scalaz.IStream> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.IStream> foldableSyntax;

  private final scalaz.syntax.IsEmptySyntax<scalaz.IStream> isEmptySyntax;

  private final scalaz.syntax.MonadPlusSyntax<scalaz.IStream> monadPlusSyntax;

  private final scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream> applicativePlusSyntax;

  private final scalaz.syntax.PlusEmptySyntax<scalaz.IStream> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scalaz.IStream> plusSyntax;

  private final scalaz.syntax.MonadSyntax<scalaz.IStream> monadSyntax;

  private final scalaz.syntax.BindSyntax<scalaz.IStream> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.IStream> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.IStream> applySyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.IStream> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream> invariantFunctorSyntax;

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.IStream>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.IStream>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #190                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #199                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #209                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #216                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #223                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #230                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #237                // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #245                // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #251                // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #258                // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #265                // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #272                // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #284                // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #290                // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #294                // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #304                // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #308                // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #312                // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #316                // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.IStream>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #329                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #335                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #342                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #358                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #366                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #373                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #394                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #399                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #404                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #409                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #414                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #427                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #433                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #439                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #445                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #451                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #455                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #459                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #463                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #469                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #473                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #480                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #484                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #488                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #494                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #505                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #513                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #519                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #525                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #531                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #537                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #549                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #556                // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #560                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #564                // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #568                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #574                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #580                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #587                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #591                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #596                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #601                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #606                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #611                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #616                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #621                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #626                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #630                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #634                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #644                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #651                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #655                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #659                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #664                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #671                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #678                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #685                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #692                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #705                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #712                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #716                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #728                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #733                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #740                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.IStream>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #748                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public scalaz.IsEmpty<scalaz.IStream>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #755                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #761                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #769                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #775                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #779                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #785                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #790                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #795                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.IStream>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #803                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.IStream>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #810                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #817                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #828                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #832                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #837                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #841                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.IStream<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #848                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.IStream>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #855                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.IStream<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.IStream<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #862                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.IStream<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.IStream<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #867                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #872                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.IStream<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #880                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.IStream>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #887                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #894                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #900                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #905                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #909                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #914                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #918                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #923                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.IStream>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #930                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #936                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #942                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #947                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #955                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #960                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #965                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.IStream>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #972                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #978                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #984                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #989                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #996                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1000               // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1008               // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1015               // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1022               // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1030               // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1038               // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1042               // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1049               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1054               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1061               // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1066               // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1070               // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.IStream> flip();
    Code:
       0: aload_0
       1: invokestatic  #1075               // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1083               // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.IStream>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #1090               // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1097               // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1103               // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1109               // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1115               // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1121               // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1127               // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1133               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1138               // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scalaz.IStream<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.IStream<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1146               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1152               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1155               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.IStream<A>, scalaz.IStream<B>> apF(scala.Function0<scalaz.IStream<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1162               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1168               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1175               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1182               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1189               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1196               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1203               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1210               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1216               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1222               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1228               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1235               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1242               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1249               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1257               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1265               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1273               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1281               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1288               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1294               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1300               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1306               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1311               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1317               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1323               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1329               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1336               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1343               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1350               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1357               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1364               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1371               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<H>, scalaz.IStream<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1378               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1385               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1392               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<K>, scalaz.IStream<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1399               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.IStream<A>, scalaz.IStream<B>, scalaz.IStream<C>, scalaz.IStream<D>, scalaz.IStream<E>, scalaz.IStream<FF>, scalaz.IStream<G>, scalaz.IStream<H>, scalaz.IStream<I>, scalaz.IStream<J>, scalaz.IStream<K>, scalaz.IStream<L>, scalaz.IStream<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1406               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1410               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1414               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1419               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.IStream<A>, scalaz.IStream<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1426               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.IStream>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1433               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1439               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1444               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.IStream<A>, scalaz.IStream<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1451               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1456               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1461               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1465               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1470               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1474               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1478               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1484               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1490               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1498               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1504               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1507               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1514               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.IStream>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1522               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1529               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1537               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.IStream>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1545               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.TraverseSyntax<scalaz.IStream> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1549               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1549               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.IStream> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1557               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1557               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scalaz.IStream> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1564               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1564               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.IStream> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1571               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1571               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1578               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1578               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.IStream> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1585               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1585               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.IStream> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1592               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1592               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.IStream> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1599               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1599               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.IStream> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1606               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1606               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.IStream> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1613               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1613               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1620               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1620               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.IStream> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1627               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1627               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.IStream> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1634               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1634               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1641               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.IStream>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1641               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.IStream<B> map(scalaz.IStream<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1670,  0           // InvokeDynamic #0:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       7: aload_2
       8: invokedynamic #1681,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function2;
      13: astore        4
      15: astore_3
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_1
      22: instanceof    #59                 // class scalaz/IStream$Nil
      25: ifeq          37
      28: aload_0
      29: invokestatic  #1653               // Method $anonfun$map$1:(Lscalaz/IStream$$anon$1;)Lscalaz/IStream;
      32: astore        5
      34: goto          107
      37: aload_1
      38: instanceof    #51                 // class scalaz/IStream$Cons
      41: ifeq          98
      44: aload_1
      45: checkcast     #51                 // class scalaz/IStream$Cons
      48: astore        6
      50: aload         6
      52: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      55: astore        7
      57: aload         6
      59: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      62: astore        8
      64: aload         7
      66: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      71: aload         8
      73: aload_3
      74: aload         4
      76: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      81: astore        10
      83: astore        9
      85: aload_2
      86: aload         9
      88: aload         10
      90: invokestatic  #1675               // Method $anonfun$map$2:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
      93: astore        5
      95: goto          107
      98: new           #1707               // class scala/MatchError
     101: dup
     102: aload_1
     103: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     106: athrow
     107: aload         5
     109: areturn

  public <A> scalaz.IStream<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1728               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #51                 // class scalaz/IStream$Cons
      11: dup
      12: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #1735               // class scalaz/Need
      23: dup
      24: aload_1
      25: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      28: getstatic     #1741               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
      31: invokevirtual #1744               // Method scalaz/IStream$.scalaz$IStream$$nil:()Lscalaz/Name;
      34: invokespecial #1747               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      37: areturn

  public <A, B> scalaz.IStream<B> bind(scalaz.IStream<A>, scala.Function1<A, scalaz.IStream<B>>);
    Code:
       0: aload_0
       1: invokedynamic #1754,  0           // InvokeDynamic #4:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       6: aload_0
       7: aload_2
       8: invokedynamic #1764,  0           // InvokeDynamic #5:apply:(Lscalaz/IStream$$anon$1;Lscala/Function1;)Lscala/Function2;
      13: astore        4
      15: astore_3
      16: aload_1
      17: instanceof    #59                 // class scalaz/IStream$Nil
      20: ifeq          32
      23: aload_0
      24: invokestatic  #1752               // Method $anonfun$bind$1:(Lscalaz/IStream$$anon$1;)Lscalaz/IStream;
      27: astore        5
      29: goto          102
      32: aload_1
      33: instanceof    #51                 // class scalaz/IStream$Cons
      36: ifeq          93
      39: aload_1
      40: checkcast     #51                 // class scalaz/IStream$Cons
      43: astore        6
      45: aload         6
      47: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      50: astore        7
      52: aload         6
      54: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      57: astore        8
      59: aload         7
      61: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      64: aload_0
      65: aload         8
      67: aload_3
      68: aload         4
      70: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      75: astore        10
      77: astore        9
      79: aload_0
      80: aload_2
      81: aload         9
      83: aload         10
      85: invokestatic  #1758               // Method $anonfun$bind$2:(Lscalaz/IStream$$anon$1;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Lscalaz/IStream;
      88: astore        5
      90: goto          102
      93: new           #1707               // class scala/MatchError
      96: dup
      97: aload_1
      98: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow
     102: aload         5
     104: areturn

  public <A> scalaz.IStream<A> plus(scalaz.IStream<A>, scala.Function0<scalaz.IStream<A>>);
    Code:
       0: aload_1
       1: invokedynamic #1790,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
       6: astore_3
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: aload_1
      13: instanceof    #59                 // class scalaz/IStream$Nil
      16: ifeq          30
      19: aload_2
      20: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      25: astore        4
      27: goto          90
      30: aload_1
      31: instanceof    #51                 // class scalaz/IStream$Cons
      34: ifeq          81
      37: aload_1
      38: checkcast     #51                 // class scalaz/IStream$Cons
      41: astore        5
      43: aload         5
      45: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      48: astore        6
      50: aload         5
      52: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      55: astore        7
      57: aload         6
      59: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      64: aload         7
      66: aload_2
      67: aload_3
      68: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      73: invokestatic  #1786               // Method $anonfun$plus$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
      76: astore        4
      78: goto          90
      81: new           #1707               // class scala/MatchError
      84: dup
      85: aload_1
      86: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload         4
      92: checkcast     #53                 // class scalaz/IStream
      95: areturn

  public <A> scalaz.IStream<A> empty();
    Code:
       0: getstatic     #1741               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
       3: invokevirtual #1795               // Method scalaz/IStream$.empty:()Lscalaz/IStream;
       6: areturn

  public <A> boolean isEmpty(scalaz.IStream<A>);
    Code:
       0: aload_1
       1: instanceof    #59                 // class scalaz/IStream$Nil
       4: ireturn

  public <A, B> B foldMap(scalaz.IStream<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_3
       1: invokedynamic #1809,  0           // InvokeDynamic #8:apply:(Lscalaz/Monoid;)Lscala/Function0;
       6: aload_3
       7: aload_2
       8: invokedynamic #1818,  0           // InvokeDynamic #9:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      13: astore        5
      15: astore        4
      17: aload_1
      18: instanceof    #59                 // class scalaz/IStream$Nil
      21: ifeq          33
      24: aload_3
      25: invokestatic  #1805               // Method $anonfun$foldMap$1:(Lscalaz/Monoid;)Ljava/lang/Object;
      28: astore        6
      30: goto          104
      33: aload_1
      34: instanceof    #51                 // class scalaz/IStream$Cons
      37: ifeq          95
      40: aload_1
      41: checkcast     #51                 // class scalaz/IStream$Cons
      44: astore        7
      46: aload         7
      48: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      51: astore        8
      53: aload         7
      55: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      58: astore        9
      60: aload         8
      62: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      65: aload_0
      66: aload         9
      68: aload         4
      70: aload         5
      72: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      77: astore        11
      79: astore        10
      81: aload_3
      82: aload_2
      83: aload         10
      85: aload         11
      87: invokestatic  #1813               // Method $anonfun$foldMap$2:(Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      90: astore        6
      92: goto          104
      95: new           #1707               // class scala/MatchError
      98: dup
      99: aload_1
     100: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     103: athrow
     104: aload         6
     106: areturn

  public <A, B> B foldRight(scalaz.IStream<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: instanceof    #59                 // class scalaz/IStream$Nil
       4: ifeq          18
       7: aload_2
       8: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: astore        4
      15: goto          80
      18: aload_1
      19: instanceof    #51                 // class scalaz/IStream$Cons
      22: ifeq          71
      25: aload_1
      26: checkcast     #51                 // class scalaz/IStream$Cons
      29: astore        5
      31: aload         5
      33: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      36: astore        6
      38: aload         5
      40: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      43: astore        7
      45: aload_3
      46: aload         6
      48: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      51: aload_0
      52: aload         7
      54: aload_2
      55: aload_3
      56: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      61: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: astore        4
      68: goto          80
      71: new           #1707               // class scala/MatchError
      74: dup
      75: aload_1
      76: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow
      80: aload         4
      82: areturn

  public <A, B> B foldLeft(scalaz.IStream<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: astore        5
       4: astore        4
       6: aload         4
       8: instanceof    #59                 // class scalaz/IStream$Nil
      11: ifne          77
      14: aload         4
      16: instanceof    #51                 // class scalaz/IStream$Cons
      19: ifeq          67
      22: aload         4
      24: checkcast     #51                 // class scalaz/IStream$Cons
      27: astore        6
      29: aload         6
      31: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      34: astore        7
      36: aload         6
      38: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      41: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      44: checkcast     #53                 // class scalaz/IStream
      47: aload_3
      48: aload         5
      50: aload         7
      52: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      55: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: astore        5
      62: astore        4
      64: goto          6
      67: new           #1707               // class scala/MatchError
      70: dup
      71: aload         4
      73: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      76: athrow
      77: aload         5
      79: areturn

  public <G, A, B> G traverseImpl(scalaz.IStream<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: invokedynamic #1840,  0           // InvokeDynamic #10:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
       8: aload_3
       9: aload_2
      10: invokedynamic #1849,  0           // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: instanceof    #59                 // class scalaz/IStream$Nil
      28: ifeq          41
      31: aload_0
      32: aload_3
      33: invokestatic  #1836               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      36: astore        6
      38: goto          113
      41: aload_1
      42: instanceof    #51                 // class scalaz/IStream$Cons
      45: ifeq          104
      48: aload_1
      49: checkcast     #51                 // class scalaz/IStream$Cons
      52: astore        7
      54: aload         7
      56: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      59: astore        8
      61: aload         7
      63: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      66: astore        9
      68: aload         8
      70: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      75: aload         9
      77: aload         4
      79: aload         5
      81: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      86: astore        11
      88: astore        10
      90: aload_3
      91: aload_2
      92: aload         10
      94: aload         11
      96: invokestatic  #1844               // Method $anonfun$traverseImpl$3:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      99: astore        6
     101: goto          113
     104: new           #1707               // class scala/MatchError
     107: dup
     108: aload_1
     109: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload         6
     115: areturn

  public <G, A, B> G traverse(scalaz.IStream<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_3
       3: invokedynamic #1840,  0           // InvokeDynamic #10:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
       8: aload_3
       9: aload_2
      10: invokedynamic #1849,  0           // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      15: astore        5
      17: astore        4
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_1
      25: instanceof    #59                 // class scalaz/IStream$Nil
      28: ifeq          41
      31: aload_0
      32: aload_3
      33: invokestatic  #1836               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      36: astore        6
      38: goto          113
      41: aload_1
      42: instanceof    #51                 // class scalaz/IStream$Cons
      45: ifeq          104
      48: aload_1
      49: checkcast     #51                 // class scalaz/IStream$Cons
      52: astore        7
      54: aload         7
      56: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      59: astore        8
      61: aload         7
      63: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      66: astore        9
      68: aload         8
      70: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      75: aload         9
      77: aload         4
      79: aload         5
      81: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      86: astore        11
      88: astore        10
      90: aload_3
      91: aload_2
      92: aload         10
      94: aload         11
      96: invokestatic  #1844               // Method $anonfun$traverseImpl$3:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      99: astore        6
     101: goto          113
     104: new           #1707               // class scala/MatchError
     107: dup
     108: aload_1
     109: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload         6
     115: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #1856               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #1859               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1861               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore        4
       6: aload         4
       8: aload_0
       9: aload_3
      10: invokedynamic #1840,  0           // InvokeDynamic #10:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
      15: aload_3
      16: aload_2
      17: invokedynamic #1849,  0           // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      22: astore        6
      24: astore        5
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         4
      33: instanceof    #59                 // class scalaz/IStream$Nil
      36: ifeq          49
      39: aload_0
      40: aload_3
      41: invokestatic  #1836               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      44: astore        7
      46: goto          124
      49: aload         4
      51: instanceof    #51                 // class scalaz/IStream$Cons
      54: ifeq          114
      57: aload         4
      59: checkcast     #51                 // class scalaz/IStream$Cons
      62: astore        8
      64: aload         8
      66: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      69: astore        9
      71: aload         8
      73: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      76: astore        10
      78: aload         9
      80: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      85: aload         10
      87: aload         5
      89: aload         6
      91: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      96: astore        12
      98: astore        11
     100: aload_3
     101: aload_2
     102: aload         11
     104: aload         12
     106: invokestatic  #1844               // Method $anonfun$traverseImpl$3:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
     109: astore        7
     111: goto          124
     114: new           #1707               // class scala/MatchError
     117: dup
     118: aload         4
     120: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow
     124: aload         7
     126: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore        4
       6: aload         4
       8: aload_0
       9: aload_3
      10: invokedynamic #1840,  0           // InvokeDynamic #10:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Lscala/Function0;
      15: aload_3
      16: aload_2
      17: invokedynamic #1849,  0           // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      22: astore        6
      24: astore        5
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         4
      33: instanceof    #59                 // class scalaz/IStream$Nil
      36: ifeq          49
      39: aload_0
      40: aload_3
      41: invokestatic  #1836               // Method $anonfun$traverseImpl$1:(Lscalaz/IStream$$anon$1;Lscalaz/Applicative;)Ljava/lang/Object;
      44: astore        7
      46: goto          124
      49: aload         4
      51: instanceof    #51                 // class scalaz/IStream$Cons
      54: ifeq          114
      57: aload         4
      59: checkcast     #51                 // class scalaz/IStream$Cons
      62: astore        8
      64: aload         8
      66: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      69: astore        9
      71: aload         8
      73: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      76: astore        10
      78: aload         9
      80: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      85: aload         10
      87: aload         5
      89: aload         6
      91: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      96: astore        12
      98: astore        11
     100: aload_3
     101: aload_2
     102: aload         11
     104: aload         12
     106: invokestatic  #1844               // Method $anonfun$traverseImpl$3:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
     109: astore        7
     111: goto          124
     114: new           #1707               // class scala/MatchError
     117: dup
     118: aload         4
     120: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     123: athrow
     124: aload         7
     126: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: aload_2
       5: astore        5
       7: astore        4
       9: aload         4
      11: instanceof    #59                 // class scalaz/IStream$Nil
      14: ifne          80
      17: aload         4
      19: instanceof    #51                 // class scalaz/IStream$Cons
      22: ifeq          70
      25: aload         4
      27: checkcast     #51                 // class scalaz/IStream$Cons
      30: astore        6
      32: aload         6
      34: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      37: astore        7
      39: aload         6
      41: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      44: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      47: checkcast     #53                 // class scalaz/IStream
      50: aload_3
      51: aload         5
      53: aload         7
      55: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      58: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore        5
      65: astore        4
      67: goto          9
      70: new           #1707               // class scala/MatchError
      73: dup
      74: aload         4
      76: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow
      80: aload         5
      82: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore        4
       6: aload         4
       8: instanceof    #59                 // class scalaz/IStream$Nil
      11: ifeq          25
      14: aload_2
      15: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: astore        5
      22: goto          90
      25: aload         4
      27: instanceof    #51                 // class scalaz/IStream$Cons
      30: ifeq          80
      33: aload         4
      35: checkcast     #51                 // class scalaz/IStream$Cons
      38: astore        6
      40: aload         6
      42: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      45: astore        7
      47: aload         6
      49: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      52: astore        8
      54: aload_3
      55: aload         7
      57: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      60: aload_0
      61: aload         8
      63: aload_2
      64: aload_3
      65: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      70: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: astore        5
      77: goto          90
      80: new           #1707               // class scala/MatchError
      83: dup
      84: aload         4
      86: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload         5
      92: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore        4
       6: aload_3
       7: invokedynamic #1809,  0           // InvokeDynamic #8:apply:(Lscalaz/Monoid;)Lscala/Function0;
      12: aload_3
      13: aload_2
      14: invokedynamic #1818,  0           // InvokeDynamic #9:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      19: astore        6
      21: astore        5
      23: aload         4
      25: instanceof    #59                 // class scalaz/IStream$Nil
      28: ifeq          40
      31: aload_3
      32: invokestatic  #1805               // Method $anonfun$foldMap$1:(Lscalaz/Monoid;)Ljava/lang/Object;
      35: astore        7
      37: goto          114
      40: aload         4
      42: instanceof    #51                 // class scalaz/IStream$Cons
      45: ifeq          104
      48: aload         4
      50: checkcast     #51                 // class scalaz/IStream$Cons
      53: astore        8
      55: aload         8
      57: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      60: astore        9
      62: aload         8
      64: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      67: astore        10
      69: aload         9
      71: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      74: aload_0
      75: aload         10
      77: aload         5
      79: aload         6
      81: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      86: astore        12
      88: astore        11
      90: aload_3
      91: aload_2
      92: aload         11
      94: aload         12
      96: invokestatic  #1813               // Method $anonfun$foldMap$2:(Lscalaz/Monoid;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      99: astore        7
     101: goto          114
     104: new           #1707               // class scala/MatchError
     107: dup
     108: aload         4
     110: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload         7
     116: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class scalaz/IStream
       5: invokevirtual #1880               // Method isEmpty:(Lscalaz/IStream;)Z
       8: ireturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #1881               // Method empty:()Lscalaz/IStream;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore_3
       5: aload_3
       6: invokedynamic #1790,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
      11: astore        4
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: aload_3
      19: instanceof    #59                 // class scalaz/IStream$Nil
      22: ifeq          36
      25: aload_2
      26: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: astore        5
      33: goto          97
      36: aload_3
      37: instanceof    #51                 // class scalaz/IStream$Cons
      40: ifeq          88
      43: aload_3
      44: checkcast     #51                 // class scalaz/IStream$Cons
      47: astore        6
      49: aload         6
      51: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      54: astore        7
      56: aload         6
      58: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      61: astore        8
      63: aload         7
      65: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      70: aload         8
      72: aload_2
      73: aload         4
      75: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      80: invokestatic  #1786               // Method $anonfun$plus$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
      83: astore        5
      85: goto          97
      88: new           #1707               // class scala/MatchError
      91: dup
      92: aload_3
      93: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: aload         5
      99: checkcast     #53                 // class scalaz/IStream
     102: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore_3
       5: aload_0
       6: invokedynamic #1754,  0           // InvokeDynamic #4:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
      11: aload_0
      12: aload_2
      13: invokedynamic #1764,  0           // InvokeDynamic #5:apply:(Lscalaz/IStream$$anon$1;Lscala/Function1;)Lscala/Function2;
      18: astore        5
      20: astore        4
      22: aload_3
      23: instanceof    #59                 // class scalaz/IStream$Nil
      26: ifeq          38
      29: aload_0
      30: invokestatic  #1752               // Method $anonfun$bind$1:(Lscalaz/IStream$$anon$1;)Lscalaz/IStream;
      33: astore        6
      35: goto          109
      38: aload_3
      39: instanceof    #51                 // class scalaz/IStream$Cons
      42: ifeq          100
      45: aload_3
      46: checkcast     #51                 // class scalaz/IStream$Cons
      49: astore        7
      51: aload         7
      53: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      56: astore        8
      58: aload         7
      60: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      63: astore        9
      65: aload         8
      67: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      70: aload_0
      71: aload         9
      73: aload         4
      75: aload         5
      77: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      82: astore        11
      84: astore        10
      86: aload_0
      87: aload_2
      88: aload         10
      90: aload         11
      92: invokestatic  #1758               // Method $anonfun$bind$2:(Lscalaz/IStream$$anon$1;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Lscalaz/IStream;
      95: astore        6
      97: goto          109
     100: new           #1707               // class scala/MatchError
     103: dup
     104: aload_3
     105: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         6
     111: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #1728               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #51                 // class scalaz/IStream$Cons
      11: dup
      12: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #1735               // class scalaz/Need
      23: dup
      24: aload_1
      25: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      28: getstatic     #1741               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
      31: invokevirtual #1744               // Method scalaz/IStream$.scalaz$IStream$$nil:()Lscalaz/Name;
      34: invokespecial #1747               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      37: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #53                 // class scalaz/IStream
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokedynamic #1670,  0           // InvokeDynamic #0:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
      12: aload_2
      13: invokedynamic #1681,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function2;
      18: astore        5
      20: astore        4
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: instanceof    #59                 // class scalaz/IStream$Nil
      31: ifeq          43
      34: aload_0
      35: invokestatic  #1653               // Method $anonfun$map$1:(Lscalaz/IStream$$anon$1;)Lscalaz/IStream;
      38: astore        6
      40: goto          114
      43: aload_3
      44: instanceof    #51                 // class scalaz/IStream$Cons
      47: ifeq          105
      50: aload_3
      51: checkcast     #51                 // class scalaz/IStream$Cons
      54: astore        7
      56: aload         7
      58: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      61: astore        8
      63: aload         7
      65: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      68: astore        9
      70: aload         8
      72: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      77: aload         9
      79: aload         4
      81: aload         5
      83: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      88: astore        11
      90: astore        10
      92: aload_2
      93: aload         10
      95: aload         11
      97: invokestatic  #1675               // Method $anonfun$map$2:(Lscala/Function1;Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
     100: astore        6
     102: goto          114
     105: new           #1707               // class scala/MatchError
     108: dup
     109: aload_3
     110: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload         6
     116: areturn

  public static final scalaz.IStream $anonfun$map$1(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1881               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final java.lang.Object $anonfun$map$3(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #1904,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.IStream $anonfun$map$2(scala.Function1, scala.Function0, scala.Function0);
    Code:
       0: getstatic     #1728               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1911,  0           // InvokeDynamic #12:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      10: astore_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #51                 // class scalaz/IStream$Cons
      19: dup
      20: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: new           #1735               // class scalaz/Need
      31: dup
      32: aload_3
      33: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      36: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      39: ifnonnull     44
      42: aconst_null
      43: athrow
      44: new           #1735               // class scalaz/Need
      47: dup
      48: aload_2
      49: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      52: invokespecial #1747               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      55: areturn

  public static final scalaz.IStream $anonfun$bind$1(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1881               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final scalaz.IStream $anonfun$bind$2(scalaz.IStream$$anon$1, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #1904,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #53                 // class scalaz/IStream
      10: astore        4
      12: aload         4
      14: invokedynamic #1790,  0           // InvokeDynamic #7:apply:()Lscala/Function2;
      19: astore        5
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: aload         4
      28: instanceof    #59                 // class scalaz/IStream$Nil
      31: ifeq          45
      34: aload_3
      35: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      40: astore        6
      42: goto          109
      45: aload         4
      47: instanceof    #51                 // class scalaz/IStream$Cons
      50: ifeq          99
      53: aload         4
      55: checkcast     #51                 // class scalaz/IStream$Cons
      58: astore        7
      60: aload         7
      62: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      65: astore        8
      67: aload         7
      69: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      72: astore        9
      74: aload         8
      76: invokedynamic #1697,  0           // InvokeDynamic #2:apply:(Lscalaz/Name;)Lscala/Function0;
      81: aload         9
      83: aload_3
      84: aload         5
      86: invokedynamic #1705,  0           // InvokeDynamic #3:apply:(Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      91: invokestatic  #1786               // Method $anonfun$plus$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/IStream;
      94: astore        6
      96: goto          109
      99: new           #1707               // class scala/MatchError
     102: dup
     103: aload         4
     105: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         6
     111: checkcast     #53                 // class scalaz/IStream
     114: areturn

  public static final scalaz.IStream $anonfun$plus$1(scala.Function0, scala.Function0);
    Code:
       0: getstatic     #1728               // Field scalaz/IStream$Lazy$.MODULE$:Lscalaz/IStream$Lazy$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #51                 // class scalaz/IStream$Cons
      11: dup
      12: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #1735               // class scalaz/Need
      23: dup
      24: aload_0
      25: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      28: getstatic     #1733               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      31: ifnonnull     36
      34: aconst_null
      35: athrow
      36: new           #1735               // class scalaz/Need
      39: dup
      40: aload_1
      41: invokespecial #1738               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      44: invokespecial #1747               // Method scalaz/IStream$Cons."<init>":(Lscalaz/Name;Lscalaz/Name;)V
      47: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #1919,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scalaz.Monoid, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #1904,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_3
       9: invokeinterface #1923,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scalaz.IStream$$anon$1, scalaz.Name, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
       4: checkcast     #53                 // class scalaz/IStream
       7: astore        4
       9: aload         4
      11: instanceof    #59                 // class scalaz/IStream$Nil
      14: ifeq          28
      17: aload_2
      18: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: astore        5
      25: goto          93
      28: aload         4
      30: instanceof    #51                 // class scalaz/IStream$Cons
      33: ifeq          83
      36: aload         4
      38: checkcast     #51                 // class scalaz/IStream$Cons
      41: astore        6
      43: aload         6
      45: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      48: astore        7
      50: aload         6
      52: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      55: astore        8
      57: aload_3
      58: aload         7
      60: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      63: aload_0
      64: aload         8
      66: aload_2
      67: aload_3
      68: invokedynamic #1776,  0           // InvokeDynamic #6:apply:(Lscalaz/IStream$$anon$1;Lscalaz/Name;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      73: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: astore        5
      80: goto          93
      83: new           #1707               // class scala/MatchError
      86: dup
      87: aload         4
      89: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow
      93: aload         5
      95: areturn

  private final java.lang.Object loop$2(scalaz.IStream, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: instanceof    #59                 // class scalaz/IStream$Nil
       4: ifne          64
       7: aload_1
       8: instanceof    #51                 // class scalaz/IStream$Cons
      11: ifeq          55
      14: aload_1
      15: checkcast     #51                 // class scalaz/IStream$Cons
      18: astore        4
      20: aload         4
      22: invokevirtual #1685               // Method scalaz/IStream$Cons.head:()Lscalaz/Name;
      25: astore        5
      27: aload         4
      29: invokevirtual #1688               // Method scalaz/IStream$Cons.tail:()Lscalaz/Name;
      32: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      35: checkcast     #53                 // class scalaz/IStream
      38: aload_3
      39: aload_2
      40: aload         5
      42: invokevirtual #1768               // Method scalaz/Name.value:()Ljava/lang/Object;
      45: invokeinterface #1823,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: astore_2
      51: astore_1
      52: goto          0
      55: new           #1707               // class scala/MatchError
      58: dup
      59: aload_1
      60: invokespecial #1711               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow
      64: aload_2
      65: areturn

  public static final scalaz.IStream $anonfun$traverseImpl$2(scalaz.IStream$$anon$1);
    Code:
       0: aload_0
       1: invokevirtual #1881               // Method empty:()Lscalaz/IStream;
       4: areturn

  public static final java.lang.Object $anonfun$traverseImpl$1(scalaz.IStream$$anon$1, scalaz.Applicative);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1935,  0           // InvokeDynamic #13:apply:(Lscalaz/IStream$$anon$1;)Lscala/Function0;
       7: invokeinterface #1937,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$traverseImpl$4(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1792,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #1904,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.IStream $anonfun$traverseImpl$5(java.lang.Object, scalaz.IStream);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #1948               // Method scalaz/IStream.$bang$colon:(Ljava/lang/Object;)Lscalaz/IStream;
       5: areturn

  public static final java.lang.Object $anonfun$traverseImpl$3(scalaz.Applicative, scala.Function1, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1953,  0           // InvokeDynamic #14:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
       8: aload_3
       9: invokedynamic #1958,  0           // InvokeDynamic #15:apply:()Lscala/Function2;
      14: invokeinterface #1960,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      19: areturn

  public scalaz.IStream$$anon$1();
    Code:
       0: aload_0
       1: invokespecial #1963               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #1967               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #1970               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #1973               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      16: aload_0
      17: invokestatic  #1976               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #1979               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      24: aload_0
      25: invokestatic  #1982               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      28: aload_0
      29: invokestatic  #1985               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      32: aload_0
      33: invokestatic  #1988               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      36: aload_0
      37: invokestatic  #1991               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      40: aload_0
      41: invokestatic  #1994               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      44: aload_0
      45: invokestatic  #1997               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      48: aload_0
      49: invokestatic  #2000               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      52: aload_0
      53: invokestatic  #2003               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      56: aload_0
      57: invokestatic  #2006               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      60: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2018,  0           // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
