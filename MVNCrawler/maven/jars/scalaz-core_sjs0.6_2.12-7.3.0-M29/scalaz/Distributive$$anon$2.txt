Compiled from "Distributive.scala"
public final class scalaz.Distributive$$anon$2 implements scalaz.ProductDistributive<F, G> {
  private final scalaz.syntax.DistributiveSyntax<?> distributiveSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Distributive $outer;

  private final scalaz.Distributive G0$2;

  public <X, A, B> scala.Tuple2<F, G> distributeImpl(X, scala.Function1<A, scala.Tuple2<F, G>>, scalaz.Functor<X>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #58                 // InterfaceMethod scalaz/ProductDistributive.distributeImpl$:(Lscalaz/ProductDistributive;Ljava/lang/Object;Lscala/Function1;Lscalaz/Functor;)Lscala/Tuple2;
       7: areturn

  public <A, B> scala.Tuple2<F, G> map(scala.Tuple2<F, G>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/ProductFunctor.map$:(Lscalaz/ProductFunctor;Lscala/Tuple2;Lscala/Function1;)Lscala/Tuple2;
       6: areturn

  public <G> scalaz.Distributive<?> compose(scalaz.Distributive<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #81                 // InterfaceMethod scalaz/Distributive.compose$:(Lscalaz/Distributive;Lscalaz/Distributive;)Lscalaz/Distributive;
       5: areturn

  public <G> scalaz.Distributive<?> product(scalaz.Distributive<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // InterfaceMethod scalaz/Distributive.product$:(Lscalaz/Distributive;Lscalaz/Distributive;)Lscalaz/Distributive;
       5: areturn

  public <G> scalaz.Distributive<?>.Distribution<G> distribution(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // InterfaceMethod scalaz/Distributive.distribution$:(Lscalaz/Distributive;Lscalaz/Functor;)Lscalaz/Distributive$Distribution;
       5: areturn

  public java.lang.Object distribute(java.lang.Object, scala.Function1, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #99                 // InterfaceMethod scalaz/Distributive.distribute$:(Lscalaz/Distributive;Ljava/lang/Object;Lscala/Function1;Lscalaz/Functor;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object cosequence(java.lang.Object, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Distributive.cosequence$:(Lscalaz/Distributive;Ljava/lang/Object;Lscalaz/Functor;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #113                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scala.Tuple2<F, G>, scala.Tuple2<F, G>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #186                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #193                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #201                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #208                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #216                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.DistributiveSyntax<?> distributiveSyntax();
    Code:
       0: aload_0
       1: getfield      #228                // Field distributiveSyntax:Lscalaz/syntax/DistributiveSyntax;
       4: areturn

  public void scalaz$Distributive$_setter_$distributiveSyntax_$eq(scalaz.syntax.DistributiveSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #228                // Field distributiveSyntax:Lscalaz/syntax/DistributiveSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #236                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #236                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #243                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #243                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Distributive<F> F();
    Code:
       0: aload_0
       1: getfield      #251                // Field $outer:Lscalaz/Distributive;
       4: areturn

  public scalaz.Distributive<G> G();
    Code:
       0: aload_0
       1: getfield      #255                // Field G0$2:Lscalaz/Distributive;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #257                // class scala/Tuple2
       4: astore_3
       5: new           #257                // class scala/Tuple2
       8: dup
       9: aload_0
      10: invokeinterface #260,  1          // InterfaceMethod scalaz/ProductFunctor.F:()Lscalaz/Functor;
      15: aload_3
      16: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
      19: aload_2
      20: invokeinterface #266,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: aload_0
      26: invokeinterface #268,  1          // InterfaceMethod scalaz/ProductFunctor.G:()Lscalaz/Functor;
      31: aload_3
      32: invokevirtual #271                // Method scala/Tuple2._2:()Ljava/lang/Object;
      35: aload_2
      36: invokeinterface #266,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      41: invokespecial #275                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      44: areturn

  public java.lang.Object distributeImpl(java.lang.Object, scala.Function1, scalaz.Functor);
    Code:
       0: new           #257                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokeinterface #278,  1          // InterfaceMethod scalaz/ProductDistributive.F:()Lscalaz/Distributive;
      10: aload_1
      11: aload_2
      12: invokedynamic #297,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      17: aload_3
      18: invokeinterface #299,  4          // InterfaceMethod scalaz/Distributive.distribute:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Functor;)Ljava/lang/Object;
      23: aload_0
      24: invokeinterface #301,  1          // InterfaceMethod scalaz/ProductDistributive.G:()Lscalaz/Distributive;
      29: aload_1
      30: aload_2
      31: invokedynamic #306,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      36: aload_3
      37: invokeinterface #299,  4          // InterfaceMethod scalaz/Distributive.distribute:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Functor;)Ljava/lang/Object;
      42: invokespecial #275                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      45: areturn

  public scalaz.Functor G();
    Code:
       0: aload_0
       1: invokevirtual #307                // Method G:()Lscalaz/Distributive;
       4: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #308                // Method F:()Lscalaz/Distributive;
       4: areturn

  public scalaz.Distributive$$anon$2(scalaz.Distributive<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #251                // Field $outer:Lscalaz/Distributive;
      11: aload_0
      12: aload_2
      13: putfield      #255                // Field G0$2:Lscalaz/Distributive;
      16: aload_0
      17: invokespecial #313                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #317                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      24: aload_0
      25: invokestatic  #320                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      28: aload_0
      29: invokestatic  #323                // InterfaceMethod scalaz/Distributive.$init$:(Lscalaz/Distributive;)V
      32: aload_0
      33: invokestatic  #326                // InterfaceMethod scalaz/ProductFunctor.$init$:(Lscalaz/ProductFunctor;)V
      36: aload_0
      37: invokestatic  #329                // InterfaceMethod scalaz/ProductDistributive.$init$:(Lscalaz/ProductDistributive;)V
      40: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #341,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
