Compiled from "StoreT.scala"
public final class scalaz.StoreTInstances1$$anon$6 implements scalaz.StoreTComonad<F, A> {
  private final scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Comonad F0$5;

  public <A> scalaz.IndexedStoreT<F, A, A, scalaz.IndexedStoreT<F, A, A, A>> cojoin(scalaz.IndexedStoreT<F, A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #70                 // InterfaceMethod scalaz/StoreTComonad.cojoin$:(Lscalaz/StoreTComonad;Lscalaz/IndexedStoreT;)Lscalaz/IndexedStoreT;
       5: areturn

  public <A> A copoint(scalaz.IndexedStoreT<F, A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #81                 // InterfaceMethod scalaz/StoreTComonad.copoint$:(Lscalaz/StoreTComonad;Lscalaz/IndexedStoreT;)Ljava/lang/Object;
       5: areturn

  public <A, B> scalaz.IndexedStoreT<F, A, A, B> cobind(scalaz.IndexedStoreT<F, A, A, A>, scala.Function1<scalaz.IndexedStoreT<F, A, A, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/StoreTCobind.cobind$:(Lscalaz/StoreTCobind;Lscalaz/IndexedStoreT;Lscala/Function1;)Lscalaz/IndexedStoreT;
       6: areturn

  public <A, B> scalaz.IndexedStoreT<F, A, A, B> map(scalaz.IndexedStoreT<F, A, A, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/IndexedStoreTFunctorRight.map$:(Lscalaz/IndexedStoreTFunctorRight;Lscalaz/IndexedStoreT;Lscala/Function1;)Lscalaz/IndexedStoreT;
       6: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #135                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.IndexedStoreT<F, A, A, A>, scalaz.IndexedStoreT<F, A, A, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #153                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #158                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #162                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #171                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #198                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #219                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #234                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #242                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #250                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #254                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #254                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #262                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #262                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #269                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #269                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #276                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #276                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Comonad<F> F();
    Code:
       0: aload_0
       1: getfield      #284                // Field F0$5:Lscalaz/Comonad;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #286                // class scalaz/IndexedStoreT
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #289,  1          // InterfaceMethod scalaz/IndexedStoreTFunctorRight.F:()Lscalaz/Functor;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: getstatic     #293                // Field scalaz/package$StoreT$.MODULE$:Lscalaz/package$StoreT$;
      22: aload_2
      23: invokedynamic #313,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      28: astore        5
      30: new           #315                // class scala/Tuple2
      33: dup
      34: aload         4
      36: aload_3
      37: invokevirtual #319                // Method scalaz/IndexedStoreT.run:()Lscala/Tuple2;
      40: invokevirtual #323                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: aload         5
      45: invokeinterface #325,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: aload_3
      51: invokevirtual #319                // Method scalaz/IndexedStoreT.run:()Lscala/Tuple2;
      54: invokevirtual #328                // Method scala/Tuple2._2:()Ljava/lang/Object;
      57: invokespecial #332                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: invokevirtual #336                // Method scalaz/package$StoreT$.indexedStoreT:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
      63: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #286                // class scalaz/IndexedStoreT
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #342,  1          // InterfaceMethod scalaz/StoreTCobind.F:()Lscalaz/Cobind;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: getstatic     #293                // Field scalaz/package$StoreT$.MODULE$:Lscalaz/package$StoreT$;
      22: new           #315                // class scala/Tuple2
      25: dup
      26: aload         4
      28: aload_3
      29: invokevirtual #319                // Method scalaz/IndexedStoreT.run:()Lscala/Tuple2;
      32: invokevirtual #323                // Method scala/Tuple2._1:()Ljava/lang/Object;
      35: aload_2
      36: invokedynamic #350,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      41: invokeinterface #352,  3          // InterfaceMethod scalaz/Cobind.cobind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      46: aload_3
      47: invokevirtual #355                // Method scalaz/IndexedStoreT.pos:()Ljava/lang/Object;
      50: invokespecial #332                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      53: invokevirtual #336                // Method scalaz/package$StoreT$.indexedStoreT:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
      56: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #286                // class scalaz/IndexedStoreT
       5: invokevirtual #360                // Method copoint:(Lscalaz/IndexedStoreT;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #286                // class scalaz/IndexedStoreT
       5: invokevirtual #362                // Method cojoin:(Lscalaz/IndexedStoreT;)Lscalaz/IndexedStoreT;
       8: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #364                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.Cobind F();
    Code:
       0: aload_0
       1: invokevirtual #364                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.StoreTInstances1$$anon$6(scalaz.StoreTInstances1, scalaz.Comonad);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #284                // Field F0$5:Lscalaz/Comonad;
       5: aload_0
       6: invokespecial #369                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #373                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #376                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #379                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      21: aload_0
      22: invokestatic  #382                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      25: aload_0
      26: invokestatic  #385                // InterfaceMethod scalaz/IndexedStoreTFunctorRight.$init$:(Lscalaz/IndexedStoreTFunctorRight;)V
      29: aload_0
      30: invokestatic  #388                // InterfaceMethod scalaz/StoreTCobind.$init$:(Lscalaz/StoreTCobind;)V
      33: aload_0
      34: invokestatic  #391                // InterfaceMethod scalaz/StoreTComonad.$init$:(Lscalaz/StoreTComonad;)V
      37: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #404,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
