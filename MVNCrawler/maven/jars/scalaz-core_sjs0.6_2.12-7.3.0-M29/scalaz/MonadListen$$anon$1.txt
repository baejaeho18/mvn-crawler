Compiled from "MonadListen.scala"
public final class scalaz.MonadListen$$anon$1 implements scalaz.syntax.MonadListenSyntax<F, W> {
  private final scalaz.MonadListen $outer;

  public <A> scalaz.syntax.MonadListenOps<F, W, A> ToMonadListenOps(F, scalaz.MonadListen<F, W>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // InterfaceMethod scalaz/syntax/MonadListenSyntax.ToMonadListenOps$:(Lscalaz/syntax/MonadListenSyntax;Ljava/lang/Object;Lscalaz/MonadListen;)Lscalaz/syntax/MonadListenOps;
       6: areturn

  public <A> scalaz.syntax.MonadTellOps<F, W, A> ToMonadTellOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // InterfaceMethod scalaz/syntax/MonadTellSyntax.ToMonadTellOps$:(Lscalaz/syntax/MonadTellSyntax;Ljava/lang/Object;)Lscalaz/syntax/MonadTellOps;
       5: areturn

  public <A> scalaz.syntax.MonadOps<F, A> ToMonadOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod scalaz/syntax/MonadSyntax.ToMonadOps$:(Lscalaz/syntax/MonadSyntax;Ljava/lang/Object;)Lscalaz/syntax/MonadOps;
       5: areturn

  public <A> scalaz.syntax.BindOps<F, A> ToBindOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // InterfaceMethod scalaz/syntax/BindSyntax.ToBindOps$:(Lscalaz/syntax/BindSyntax;Ljava/lang/Object;)Lscalaz/syntax/BindOps;
       5: areturn

  public <A> scalaz.syntax.ApplicativeOps<F, A> ToApplicativeOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.ToApplicativeOps$:(Lscalaz/syntax/ApplicativeSyntax;Ljava/lang/Object;)Lscalaz/syntax/ApplicativeOps;
       5: areturn

  public <A> F point(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.point$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> F pure(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.pure$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> F η(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.η$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public <A> scalaz.syntax.ApplicativeSyntax<F>.ApplicativeIdV<A> ApplicativeIdV(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // InterfaceMethod scalaz/syntax/ApplicativeSyntax.ApplicativeIdV$:(Lscalaz/syntax/ApplicativeSyntax;Lscala/Function0;)Lscalaz/syntax/ApplicativeSyntax$ApplicativeIdV;
       5: areturn

  public <A> scalaz.syntax.InvariantApplicativeOps<F, A> ToInvariantApplicativeOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/syntax/InvariantApplicativeSyntax.ToInvariantApplicativeOps$:(Lscalaz/syntax/InvariantApplicativeSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantApplicativeOps;
       5: areturn

  public <A> scalaz.syntax.ApplyOps<F, A> ToApplyOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #111                // InterfaceMethod scalaz/syntax/ApplySyntax.ToApplyOps$:(Lscalaz/syntax/ApplySyntax;Ljava/lang/Object;)Lscalaz/syntax/ApplyOps;
       5: areturn

  public <A, B, C> F $up(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #121                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <A, B, C, D> F $up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #130                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public <A, B, C, D, E> F $up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #139                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public <A, B, C, D, E, I> F $up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function5<A, B, C, D, E, I>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #148                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public <A, B, C, D, E, I, J> F $up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function6<A, B, C, D, E, I, J>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #157                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public <A, B, C, D, E, I, J, K> F $up$up$up$up$up$up(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function7<A, B, C, D, E, I, J, K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #166                // InterfaceMethod scalaz/syntax/ApplySyntax.$up$up$up$up$up$up$:(Lscalaz/syntax/ApplySyntax;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public <A> scalaz.syntax.FunctorOps<F, A> ToFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // InterfaceMethod scalaz/syntax/FunctorSyntax.ToFunctorOps$:(Lscalaz/syntax/FunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/FunctorOps;
       5: areturn

  public <A, B> scalaz.syntax.FunctorSyntax<F>.LiftV<A, B> ToLiftV(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // InterfaceMethod scalaz/syntax/FunctorSyntax.ToLiftV$:(Lscalaz/syntax/FunctorSyntax;Lscala/Function1;)Lscalaz/syntax/FunctorSyntax$LiftV;
       5: areturn

  public <A> scalaz.syntax.InvariantFunctorOps<F, A> ToInvariantFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.ToInvariantFunctorOps$:(Lscalaz/syntax/InvariantFunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantFunctorOps;
       5: areturn

  public scalaz.MonadListen<F, W> F();
    Code:
       0: aload_0
       1: getfield      #195                // Field $outer:Lscalaz/MonadListen;
       4: areturn

  public scalaz.InvariantFunctor F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.Apply F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.InvariantApplicative F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.Applicative F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.Bind F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.Monad F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.MonadTell F();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method F:()Lscalaz/MonadListen;
       4: areturn

  public scalaz.MonadListen$$anon$1(scalaz.MonadListen<F, W>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #195                // Field $outer:Lscalaz/MonadListen;
      11: aload_0
      12: invokespecial #211                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #215                // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.$init$:(Lscalaz/syntax/InvariantFunctorSyntax;)V
      19: aload_0
      20: invokestatic  #218                // InterfaceMethod scalaz/syntax/FunctorSyntax.$init$:(Lscalaz/syntax/FunctorSyntax;)V
      23: aload_0
      24: invokestatic  #221                // InterfaceMethod scalaz/syntax/ApplySyntax.$init$:(Lscalaz/syntax/ApplySyntax;)V
      27: aload_0
      28: invokestatic  #224                // InterfaceMethod scalaz/syntax/InvariantApplicativeSyntax.$init$:(Lscalaz/syntax/InvariantApplicativeSyntax;)V
      31: aload_0
      32: invokestatic  #227                // InterfaceMethod scalaz/syntax/ApplicativeSyntax.$init$:(Lscalaz/syntax/ApplicativeSyntax;)V
      35: aload_0
      36: invokestatic  #230                // InterfaceMethod scalaz/syntax/BindSyntax.$init$:(Lscalaz/syntax/BindSyntax;)V
      39: aload_0
      40: invokestatic  #233                // InterfaceMethod scalaz/syntax/MonadSyntax.$init$:(Lscalaz/syntax/MonadSyntax;)V
      43: aload_0
      44: invokestatic  #236                // InterfaceMethod scalaz/syntax/MonadTellSyntax.$init$:(Lscalaz/syntax/MonadTellSyntax;)V
      47: aload_0
      48: invokestatic  #239                // InterfaceMethod scalaz/syntax/MonadListenSyntax.$init$:(Lscalaz/syntax/MonadListenSyntax;)V
      51: return
}
