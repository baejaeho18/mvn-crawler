Compiled from "Profunctor.scala"
public final class scalaz.Profunctor$$anon$1 implements scalaz.InvariantFunctor<?> {
  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Profunctor $outer;

  public <A, B> $eq$greater$colon xmapb($eq$greater$colon, scalaz.BijectionT<?, ?, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #35                 // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public <A, B> $eq$greater$colon xmapi($eq$greater$colon, scalaz.Isomorphisms$Iso<scala.Function1, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #55                 // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #59                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> $eq$greater$colon xmap($eq$greater$colon, scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Profunctor;
       4: aload_0
       5: getfield      #70                 // Field $outer:Lscalaz/Profunctor;
       8: aload_1
       9: aload_3
      10: invokeinterface #74,  3           // InterfaceMethod scalaz/Profunctor.mapfst:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: aload_2
      16: invokeinterface #77,  3           // InterfaceMethod scalaz/Profunctor.mapsnd:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public scalaz.Profunctor$$anon$1(scalaz.Profunctor<$eq$greater$colon>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #70                 // Field $outer:Lscalaz/Profunctor;
      11: aload_0
      12: invokespecial #84                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #88                 // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      19: return
}
