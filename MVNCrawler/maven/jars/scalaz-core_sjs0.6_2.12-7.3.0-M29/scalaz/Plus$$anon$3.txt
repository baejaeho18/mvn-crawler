Compiled from "Plus.scala"
public final class scalaz.Plus$$anon$3 implements scalaz.Semigroup<F> {
  private final scalaz.syntax.SemigroupSyntax<F> semigroupSyntax;

  private final scalaz.Plus $outer;

  public F multiply1(F, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #30                 // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #41                 // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #48                 // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<F>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #55                 // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemigroupSyntax<F> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #59                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public F append(F, scala.Function0<F>);
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Plus;
       4: aload_1
       5: aload_2
       6: invokeinterface #73,  3           // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <S> scalaz.Maybe<F> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, F>>>);
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Plus;
       4: aload_1
       5: aload_2
       6: invokeinterface #82,  3           // InterfaceMethod scalaz/Plus.unfoldlPsumOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
      11: areturn

  public <S> scalaz.Maybe<F> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<F, S>>>);
    Code:
       0: aload_0
       1: getfield      #70                 // Field $outer:Lscalaz/Plus;
       4: aload_1
       5: aload_2
       6: invokeinterface #88,  3           // InterfaceMethod scalaz/Plus.unfoldrPsumOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
      11: areturn

  public scalaz.Plus$$anon$3(scalaz.Plus<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #70                 // Field $outer:Lscalaz/Plus;
      11: aload_0
      12: invokespecial #94                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #98                 // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      19: return
}
