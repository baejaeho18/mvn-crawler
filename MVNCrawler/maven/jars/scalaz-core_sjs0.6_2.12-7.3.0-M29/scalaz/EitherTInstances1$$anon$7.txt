Compiled from "EitherT.scala"
public final class scalaz.EitherTInstances1$$anon$7 implements scalaz.EitherTPlus<F, L> {
  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.Monad F0$5;

  private final scalaz.Semigroup L0$1;

  public <A> scalaz.EitherT<L, F, A> plus(scalaz.EitherT<L, F, A>, scala.Function0<scalaz.EitherT<L, F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // InterfaceMethod scalaz/EitherTPlus.plus$:(Lscalaz/EitherTPlus;Lscalaz/EitherT;Lscala/Function0;)Lscalaz/EitherT;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.EitherT<L, F, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.EitherT<L, F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.EitherT<L, F, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.EitherT<L, F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #66                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #73                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.EitherT<L, F, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #81                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #92                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Monad<F> F();
    Code:
       0: aload_0
       1: getfield      #101                // Field F0$5:Lscalaz/Monad;
       4: areturn

  public scalaz.Semigroup<L> G();
    Code:
       0: aload_0
       1: getfield      #105                // Field L0$1:Lscalaz/Semigroup;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #108                // class scalaz/EitherT
       4: astore_3
       5: new           #108                // class scalaz/EitherT
       8: dup
       9: aload_0
      10: invokeinterface #110,  1          // InterfaceMethod scalaz/EitherTPlus.F:()Lscalaz/Monad;
      15: aload_3
      16: invokevirtual #114                // Method scalaz/EitherT.run:()Ljava/lang/Object;
      19: aload_0
      20: aload_2
      21: invokedynamic #138,  0            // InvokeDynamic #0:apply:(Lscalaz/EitherTPlus;Lscala/Function0;)Lscala/Function1;
      26: invokeinterface #144,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: invokespecial #148                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      34: areturn

  public scalaz.EitherTInstances1$$anon$7(scalaz.EitherTInstances1, scalaz.Monad, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #101                // Field F0$5:Lscalaz/Monad;
       5: aload_0
       6: aload_3
       7: putfield      #105                // Field L0$1:Lscalaz/Semigroup;
      10: aload_0
      11: invokespecial #154                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #158                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      18: aload_0
      19: invokestatic  #161                // InterfaceMethod scalaz/EitherTPlus.$init$:(Lscalaz/EitherTPlus;)V
      22: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #174,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
