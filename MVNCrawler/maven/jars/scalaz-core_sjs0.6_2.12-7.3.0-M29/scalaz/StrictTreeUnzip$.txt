Compiled from "StrictTree.scala"
public final class scalaz.StrictTreeUnzip$ {
  public static scalaz.StrictTreeUnzip$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/StrictTreeUnzip$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public final <A1, A2> scala.Tuple2<scalaz.StrictTree<A1>, scalaz.StrictTree<A2>> unzipCombiner$extension(scalaz.StrictTree<scala.Tuple2<A1, A2>>, scala.Tuple2<A1, A2>, scala.collection.Seq<scala.Tuple2<scalaz.StrictTree<A1>, scalaz.StrictTree<A2>>>);
    Code:
       0: new           #25                 // class scala/Tuple2
       3: dup
       4: new           #27                 // class scalaz/StrictTree
       7: dup
       8: aload_2
       9: invokevirtual #31                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: aload_3
      13: invokedynamic #54,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      18: getstatic     #59                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      21: invokevirtual #63                 // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokeinterface #69,  3           // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      29: checkcast     #71                 // class scala/collection/TraversableOnce
      32: invokeinterface #75,  1           // InterfaceMethod scala/collection/TraversableOnce.toVector:()Lscala/collection/immutable/Vector;
      37: invokespecial #78                 // Method scalaz/StrictTree."<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
      40: new           #27                 // class scalaz/StrictTree
      43: dup
      44: aload_2
      45: invokevirtual #81                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: aload_3
      49: invokedynamic #86,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      54: getstatic     #59                 // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      57: invokevirtual #63                 // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      60: invokeinterface #69,  3           // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      65: checkcast     #71                 // class scala/collection/TraversableOnce
      68: invokeinterface #75,  1           // InterfaceMethod scala/collection/TraversableOnce.toVector:()Lscala/collection/immutable/Vector;
      73: invokespecial #78                 // Method scalaz/StrictTree."<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
      76: invokespecial #89                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      79: areturn

  public final <A1, A2> scala.Tuple2<scalaz.StrictTree<A1>, scalaz.StrictTree<A2>> unzip$extension(scalaz.StrictTree<scala.Tuple2<A1, A2>>);
    Code:
       0: aload_1
       1: aload_1
       2: invokedynamic #106,  0            // InvokeDynamic #2:apply:(Lscalaz/StrictTree;)Lscala/Function1;
       7: invokevirtual #110                // Method scalaz/StrictTree.runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
      10: checkcast     #25                 // class scala/Tuple2
      13: areturn

  public final <A1, A2> int hashCode$extension(scalaz.StrictTree<scala.Tuple2<A1, A2>>);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method scalaz/StrictTree.hashCode:()I
       4: ireturn

  public final <A1, A2> boolean equals$extension(scalaz.StrictTree<scala.Tuple2<A1, A2>>, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #123                // class scalaz/StrictTreeUnzip
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          67
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          33
      26: aload_2
      27: checkcast     #123                // class scalaz/StrictTreeUnzip
      30: invokevirtual #127                // Method scalaz/StrictTreeUnzip.scalaz$StrictTreeUnzip$$root:()Lscalaz/StrictTree;
      33: astore        4
      35: aload_1
      36: dup
      37: ifnonnull     49
      40: pop
      41: aload         4
      43: ifnull        57
      46: goto          61
      49: aload         4
      51: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn

  public static final scalaz.StrictTree $anonfun$unzipCombiner$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: checkcast     #27                 // class scalaz/StrictTree
       7: areturn

  public static final scalaz.StrictTree $anonfun$unzipCombiner$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: checkcast     #27                 // class scalaz/StrictTree
       7: areturn

  public static final scala.Tuple2 $anonfun$unzip$2(scalaz.StrictTree, scala.Tuple2, scala.collection.Seq);
    Code:
       0: getstatic     #139                // Field MODULE$:Lscalaz/StrictTreeUnzip$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #141                // Method unzipCombiner$extension:(Lscalaz/StrictTree;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/Tuple2;
       9: areturn

  public static final scala.Function1 $anonfun$unzip$1(scalaz.StrictTree, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #148,  0            // InvokeDynamic #3:apply:(Lscalaz/StrictTree;Lscala/Tuple2;)Lscala/Function1;
       7: areturn

  private scalaz.StrictTreeUnzip$();
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #139                // Field MODULE$:Lscalaz/StrictTreeUnzip$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #161,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
