Compiled from "OneAnd.scala"
public interface scalaz.OneAndTraverse<F> extends scalaz.Traverse1<?>, scalaz.OneAndFunctor<F>, scalaz.OneAndFoldable<F> {
  public abstract scalaz.Traverse<F> F();

  public static java.lang.Object traverse1Impl$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #46                 // InterfaceMethod traverse1Impl:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverse1Impl(scalaz.OneAnd<F, A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_3
       1: invokeinterface #57,  1           // InterfaceMethod scalaz/Apply.applyApplicative:()Lscalaz/Applicative;
       6: aload_1
       7: invokevirtual #63                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: getstatic     #69                 // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      14: invokevirtual #73                 // Method scalaz/$bslash$div$.left:()Lscala/Function1;
      17: invokeinterface #79,  2           // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      22: aload_0
      23: invokeinterface #81,  1           // InterfaceMethod F:()Lscalaz/Traverse;
      28: invokeinterface #87,  4           // InterfaceMethod scalaz/Applicative.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      33: checkcast     #89                 // class scalaz/$bslash$div
      36: dup
      37: ifnonnull     42
      40: aconst_null
      41: athrow
      42: astore        4
      44: aload         4
      46: instanceof    #91                 // class scalaz/$minus$bslash$div
      49: ifeq          75
      52: aload         4
      54: checkcast     #91                 // class scalaz/$minus$bslash$div
      57: invokevirtual #94                 // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      60: astore        6
      62: aload_3
      63: aload_2
      64: aload_1
      65: aload         6
      67: invokestatic  #98                 // InterfaceMethod $anonfun$traverse1Impl$1:(Lscalaz/Apply;Lscala/Function1;Lscalaz/OneAnd;Ljava/lang/Object;)Ljava/lang/Object;
      70: astore        5
      72: goto          116
      75: aload         4
      77: instanceof    #100                // class scalaz/$bslash$div$minus
      80: ifeq          106
      83: aload         4
      85: checkcast     #100                // class scalaz/$bslash$div$minus
      88: invokevirtual #103                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      91: astore        7
      93: aload_3
      94: aload_2
      95: aload_1
      96: aload         7
      98: invokestatic  #106                // InterfaceMethod $anonfun$traverse1Impl$5:(Lscalaz/Apply;Lscala/Function1;Lscalaz/OneAnd;Ljava/lang/Object;)Ljava/lang/Object;
     101: astore        5
     103: goto          116
     106: new           #108                // class scala/MatchError
     109: dup
     110: aload         4
     112: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     115: athrow
     116: aload         5
     118: areturn

  public static java.lang.Object traverseImpl$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #124                // InterfaceMethod traverseImpl:(Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public default <G, A, B> G traverseImpl(scalaz.OneAnd<F, A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_1
       3: invokedynamic #147,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokedynamic #154,  0            // InvokeDynamic #1:apply:(Lscalaz/OneAndTraverse;Lscalaz/OneAnd;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function0;
      17: invokedynamic #166,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
      22: invokeinterface #170,  4          // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public static scalaz.IndexedStateT traverseS$(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #176                // InterfaceMethod traverseS:(Lscalaz/OneAnd;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public default <S, A, B> scalaz.IndexedStateT<S, S, java.lang.Object, scalaz.OneAnd<F, B>> traverseS(scalaz.OneAnd<F, A>, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, B>>);
    Code:
       0: getstatic     #180                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #192,  0            // InvokeDynamic #3:apply:(Lscalaz/OneAndTraverse;Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: getstatic     #195                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: getstatic     #200                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: new           #22                 // class scalaz/IndexedStateT$Wrap
      36: dup
      37: aload_3
      38: invokespecial #203                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      41: areturn

  public static java.lang.Object $anonfun$traverse1Impl$2(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #210                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$traverse1Impl$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scalaz.OneAnd $anonfun$traverse1Impl$4(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #222                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #224                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static java.lang.Object $anonfun$traverse1Impl$1(scalaz.Apply, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #230,  0            // InvokeDynamic #4:apply:(Lscala/Function1;Lscalaz/OneAnd;)Lscala/Function0;
       8: aload_3
       9: invokedynamic #236,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      14: invokedynamic #240,  0            // InvokeDynamic #6:apply:()Lscala/Function2;
      19: invokeinterface #241,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public static scalaz.OneAnd $anonfun$traverse1Impl$6(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #222                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_1
       4: aload_0
       5: invokevirtual #224                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static java.lang.Object $anonfun$traverse1Impl$5(scalaz.Apply, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #210                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       6: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_3
      12: invokedynamic #252,  0            // InvokeDynamic #7:apply:(Ljava/lang/Object;)Lscala/Function1;
      17: invokeinterface #256,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static java.lang.Object $anonfun$traverseImpl$1(scala.Function1, scalaz.OneAnd);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #210                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static java.lang.Object $anonfun$traverseImpl$2(scalaz.OneAndTraverse, scalaz.OneAnd, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: invokeinterface #81,  1           // InterfaceMethod F:()Lscalaz/Traverse;
       6: aload_1
       7: invokevirtual #63                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      10: aload_2
      11: aload_3
      12: invokeinterface #264,  4          // InterfaceMethod scalaz/Traverse.traverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      17: areturn

  public static scalaz.OneAnd $anonfun$traverseImpl$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #222                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_0
       4: aload_1
       5: invokevirtual #224                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  public static scala.Tuple2 $anonfun$traverseS$1(scalaz.OneAndTraverse, scala.Function1, scalaz.OneAnd, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #210                // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       5: invokeinterface #212,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #24                 // class scalaz/IndexedStateT
      13: aload_3
      14: getstatic     #272                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      17: invokevirtual #276                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      20: checkcast     #278                // class scalaz/Bind
      23: invokevirtual #281                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      26: checkcast     #283                // class scala/Tuple2
      29: astore        4
      31: aload         4
      33: ifnull        53
      36: aload         4
      38: invokevirtual #286                // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: astore        5
      43: aload         4
      45: invokevirtual #289                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: astore        6
      50: goto          63
      53: new           #108                // class scala/MatchError
      56: dup
      57: aload         4
      59: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: aload_0
      64: invokeinterface #81,  1           // InterfaceMethod F:()Lscalaz/Traverse;
      69: aload_2
      70: invokevirtual #63                 // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      73: aload_1
      74: invokeinterface #292,  3          // InterfaceMethod scalaz/Traverse.traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      79: aload         5
      81: getstatic     #272                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      84: invokevirtual #276                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      87: checkcast     #278                // class scalaz/Bind
      90: invokevirtual #281                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      93: checkcast     #283                // class scala/Tuple2
      96: astore        7
      98: aload         7
     100: ifnull        120
     103: aload         7
     105: invokevirtual #286                // Method scala/Tuple2._1:()Ljava/lang/Object;
     108: astore        8
     110: aload         7
     112: invokevirtual #289                // Method scala/Tuple2._2:()Ljava/lang/Object;
     115: astore        9
     117: goto          130
     120: new           #108                // class scala/MatchError
     123: dup
     124: aload         7
     126: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     129: athrow
     130: new           #283                // class scala/Tuple2
     133: dup
     134: aload         8
     136: getstatic     #222                // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
     139: aload         6
     141: aload         9
     143: invokevirtual #224                // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     146: invokespecial #295                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     149: areturn

  public static void $init$(scalaz.OneAndTraverse);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #314,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
