Compiled from "StrictTree.scala"
public class scalaz.StrictTree<A> implements scala.Product, scala.Serializable {
  private final A rootLabel;

  private final scala.collection.immutable.Vector<scalaz.StrictTree<A>> subForest;

  public static <A> scala.Option<scala.Tuple2<A, scala.collection.immutable.Vector<scalaz.StrictTree<A>>>> unapply(scalaz.StrictTree<A>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: invokevirtual #66                 // Method scalaz/StrictTree$.unapply:(Lscalaz/StrictTree;)Lscala/Option;
       7: areturn

  public static <A> scalaz.StrictTree<A> apply(A, scala.collection.immutable.Vector<scalaz.StrictTree<A>>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: aload_1
       5: invokevirtual #71                 // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
       8: areturn

  public static scalaz.StrictTree ToStrictTreeUnzip(scalaz.StrictTree);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: invokevirtual #76                 // Method scalaz/StrictTree$.ToStrictTreeUnzip:(Lscalaz/StrictTree;)Lscalaz/StrictTree;
       7: areturn

  public static <A, B> scalaz.StrictTree<B> unfoldTree(A, scala.Function1<A, scala.Tuple2<B, scala.collection.immutable.Vector<A>>>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: aload_0
      10: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #88                 // class scala/Tuple2
      18: astore_3
      19: aload_3
      20: ifnull        70
      23: aload_3
      24: invokevirtual #92                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: astore        4
      29: aload_3
      30: invokevirtual #95                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: checkcast     #97                 // class scala/collection/immutable/Vector
      36: astore        5
      38: getstatic     #100                // Field scalaz/StrictTree$Node$.MODULE$:Lscalaz/StrictTree$Node$;
      41: aload         4
      43: aload         5
      45: aload_1
      46: invokedynamic #120,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      51: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      54: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      57: invokevirtual #133                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      60: checkcast     #97                 // class scala/collection/immutable/Vector
      63: invokevirtual #134                // Method scalaz/StrictTree$Node$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      66: astore_2
      67: goto          79
      70: new           #136                // class scala/MatchError
      73: dup
      74: aload_3
      75: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow
      79: aload_2
      80: areturn

  public static <A, B> scala.collection.immutable.Vector<scalaz.StrictTree<B>> unfoldForest(scala.collection.immutable.Vector<A>, scala.Function1<A, scala.Tuple2<B, scala.collection.immutable.Vector<A>>>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: invokedynamic #120,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      15: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      18: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      21: invokevirtual #133                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      24: checkcast     #97                 // class scala/collection/immutable/Vector
      27: areturn

  public static <A> scalaz.Order<scalaz.StrictTree<A>> treeOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: invokevirtual #152                // Method scalaz/StrictTree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scalaz.StrictTree<A>> treeEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: invokevirtual #157                // Method scalaz/StrictTree$.treeEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static scalaz.Traverse1<scalaz.StrictTree> strictTreeInstance();
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: invokevirtual #162                // Method scalaz/StrictTree$.strictTreeInstance:()Lscalaz/Traverse1;
       6: areturn

  public A rootLabel();
    Code:
       0: aload_0
       1: getfield      #165                // Field rootLabel:Ljava/lang/Object;
       4: areturn

  public scala.collection.immutable.Vector<scalaz.StrictTree<A>> subForest();
    Code:
       0: aload_0
       1: getfield      #171                // Field subForest:Lscala/collection/immutable/Vector;
       4: areturn

  public <B> B runBottomUp(scala.Function1<A, scala.Function1<scala.collection.mutable.Buffer<B>, B>>);
    Code:
       0: new           #26                 // class scalaz/StrictTree$BottomUpStackElem
       3: dup
       4: getstatic     #180                // Field scala/None$.MODULE$:Lscala/None$;
       7: aload_0
       8: invokespecial #183                // Method scalaz/StrictTree$BottomUpStackElem."<init>":(Lscala/Option;Lscalaz/StrictTree;)V
      11: astore_2
      12: getstatic     #188                // Field scala/collection/mutable/Stack$.MODULE$:Lscala/collection/mutable/Stack$;
      15: getstatic     #193                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      18: iconst_1
      19: anewarray     #26                 // class scalaz/StrictTree$BottomUpStackElem
      22: dup
      23: iconst_0
      24: aload_2
      25: aastore
      26: checkcast     #195                // class "[Ljava/lang/Object;"
      29: invokevirtual #199                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      32: invokevirtual #202                // Method scala/collection/mutable/Stack$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      35: checkcast     #204                // class scala/collection/mutable/Stack
      38: astore_3
      39: aload_3
      40: invokevirtual #208                // Method scala/collection/mutable/Stack.nonEmpty:()Z
      43: ifeq          149
      46: aload_3
      47: invokevirtual #211                // Method scala/collection/mutable/Stack.head:()Ljava/lang/Object;
      50: checkcast     #26                 // class scalaz/StrictTree$BottomUpStackElem
      53: astore        4
      55: aload         4
      57: invokevirtual #214                // Method scalaz/StrictTree$BottomUpStackElem.hasNext:()Z
      60: ifeq          100
      63: aload         4
      65: invokevirtual #218                // Method scalaz/StrictTree$BottomUpStackElem.next:()Lscalaz/StrictTree;
      68: astore        5
      70: new           #26                 // class scalaz/StrictTree$BottomUpStackElem
      73: dup
      74: new           #220                // class scala/Some
      77: dup
      78: aload         4
      80: invokespecial #221                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      83: aload         5
      85: invokespecial #183                // Method scalaz/StrictTree$BottomUpStackElem."<init>":(Lscala/Option;Lscalaz/StrictTree;)V
      88: astore        6
      90: aload_3
      91: aload         6
      93: invokevirtual #225                // Method scala/collection/mutable/Stack.push:(Ljava/lang/Object;)Lscala/collection/mutable/Stack;
      96: pop
      97: goto          39
     100: aload_1
     101: aload         4
     103: invokevirtual #227                // Method scalaz/StrictTree$BottomUpStackElem.rootLabel:()Ljava/lang/Object;
     106: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #83                 // class scala/Function1
     114: aload         4
     116: invokevirtual #231                // Method scalaz/StrictTree$BottomUpStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
     119: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     124: astore        7
     126: aload         4
     128: invokevirtual #235                // Method scalaz/StrictTree$BottomUpStackElem.parent:()Lscala/Option;
     131: aload         7
     133: invokedynamic #245,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function1;
     138: invokevirtual #251                // Method scala/Option.foreach:(Lscala/Function1;)V
     141: aload_3
     142: invokevirtual #254                // Method scala/collection/mutable/Stack.pop:()Ljava/lang/Object;
     145: pop
     146: goto          39
     149: aload_1
     150: aload_2
     151: invokevirtual #227                // Method scalaz/StrictTree$BottomUpStackElem.rootLabel:()Ljava/lang/Object;
     154: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     159: checkcast     #83                 // class scala/Function1
     162: aload_2
     163: invokevirtual #231                // Method scalaz/StrictTree$BottomUpStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
     166: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     171: areturn

  public <B> B foldMap(scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #275,  0            // InvokeDynamic #2:apply:(Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
       8: invokevirtual #277                // Method runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <B> B foldRight(B, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: getstatic     #287                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #292                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       6: invokevirtual #296                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_0
      17: invokevirtual #299                // Method flatten:()Lscala/collection/immutable/Vector;
      20: aload_1
      21: invokedynamic #308,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      26: aload_2
      27: invokeinterface #313,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      32: areturn

  public java.lang.String drawTree(scalaz.Show<A>);
    Code:
       0: aload_0
       1: invokevirtual #324                // Method toTree:()Lscalaz/Tree;
       4: aload_1
       5: invokevirtual #326                // Method scalaz/Tree.drawTree:(Lscalaz/Show;)Ljava/lang/String;
       8: areturn

  public <B> scalaz.StrictTree<B> scanr(scala.Function2<A, scala.collection.immutable.Vector<scalaz.StrictTree<B>>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #339,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function1;
       7: invokevirtual #277                // Method runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/StrictTree
      13: areturn

  public scala.collection.immutable.Vector<A> flatten();
    Code:
       0: getstatic     #188                // Field scala/collection/mutable/Stack$.MODULE$:Lscala/collection/mutable/Stack$;
       3: getstatic     #193                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #2                  // class scalaz/StrictTree
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: checkcast     #195                // class "[Ljava/lang/Object;"
      17: invokevirtual #199                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      20: invokevirtual #202                // Method scala/collection/mutable/Stack$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      23: checkcast     #204                // class scala/collection/mutable/Stack
      26: astore_1
      27: getstatic     #345                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      30: invokevirtual #349                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/GenTraversable;
      33: checkcast     #351                // class scala/collection/mutable/Buffer
      36: astore_2
      37: aload_1
      38: invokevirtual #208                // Method scala/collection/mutable/Stack.nonEmpty:()Z
      41: ifeq          84
      44: aload_1
      45: invokevirtual #254                // Method scala/collection/mutable/Stack.pop:()Ljava/lang/Object;
      48: checkcast     #2                  // class scalaz/StrictTree
      51: astore_3
      52: aload_2
      53: aload_3
      54: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
      57: invokeinterface #356,  2          // InterfaceMethod scala/collection/mutable/Buffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
      62: pop
      63: aload_3
      64: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      67: invokevirtual #362                // Method scala/collection/immutable/Vector.reverseIterator:()Lscala/collection/Iterator;
      70: aload_1
      71: invokedynamic #372,  0            // InvokeDynamic #5:apply:(Lscala/collection/mutable/Stack;)Lscala/Function1;
      76: invokeinterface #375,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      81: goto          37
      84: aload_2
      85: invokeinterface #378,  1          // InterfaceMethod scala/collection/mutable/Buffer.toVector:()Lscala/collection/immutable/Vector;
      90: areturn

  public int size();
    Code:
       0: getstatic     #188                // Field scala/collection/mutable/Stack$.MODULE$:Lscala/collection/mutable/Stack$;
       3: getstatic     #193                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: anewarray     #97                 // class scala/collection/immutable/Vector
      10: dup
      11: iconst_0
      12: aload_0
      13: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      16: aastore
      17: checkcast     #195                // class "[Ljava/lang/Object;"
      20: invokevirtual #199                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      23: invokevirtual #202                // Method scala/collection/mutable/Stack$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      26: checkcast     #204                // class scala/collection/mutable/Stack
      29: astore_1
      30: iconst_1
      31: istore_2
      32: aload_1
      33: invokevirtual #208                // Method scala/collection/mutable/Stack.nonEmpty:()Z
      36: ifeq          80
      39: aload_1
      40: invokevirtual #254                // Method scala/collection/mutable/Stack.pop:()Ljava/lang/Object;
      43: checkcast     #97                 // class scala/collection/immutable/Vector
      46: astore_3
      47: iload_2
      48: aload_3
      49: invokevirtual #384                // Method scala/collection/immutable/Vector.size:()I
      52: iadd
      53: istore_2
      54: aload_1
      55: aload_3
      56: invokedynamic #393,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      61: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      64: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      67: invokevirtual #133                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      70: checkcast     #395                // class scala/collection/TraversableOnce
      73: invokevirtual #399                // Method scala/collection/mutable/Stack.pushAll:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Stack;
      76: pop
      77: goto          32
      80: iload_2
      81: ireturn

  public scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> levels();
    Code:
       0: invokedynamic #409,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
       5: astore_1
       6: getstatic     #414                // Field scala/package$.MODULE$:Lscala/package$;
       9: invokevirtual #418                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      12: getstatic     #414                // Field scala/package$.MODULE$:Lscala/package$;
      15: invokevirtual #418                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      18: getstatic     #193                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: iconst_1
      22: anewarray     #2                  // class scalaz/StrictTree
      25: dup
      26: iconst_0
      27: aload_0
      28: aastore
      29: checkcast     #195                // class "[Ljava/lang/Object;"
      32: invokevirtual #199                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      35: invokevirtual #419                // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      38: aload_0
      39: invokevirtual #420                // Method size:()I
      42: aload_1
      43: invokevirtual #424                // Method scala/collection/immutable/Vector$.iterate:(Ljava/lang/Object;ILscala/Function1;)Lscala/collection/GenTraversable;
      46: checkcast     #426                // class scala/collection/IterableLike
      49: invokedynamic #433,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
      54: invokeinterface #436,  2          // InterfaceMethod scala/collection/IterableLike.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
      59: checkcast     #438                // class scala/collection/TraversableLike
      62: invokedynamic #443,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
      67: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      70: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      73: invokeinterface #444,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      78: checkcast     #97                 // class scala/collection/immutable/Vector
      81: areturn

  public scalaz.Tree<A> toTree();
    Code:
       0: getstatic     #448                // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
       3: aload_0
       4: invokedynamic #456,  0            // InvokeDynamic #10:apply:(Lscalaz/StrictTree;)Lscala/Function0;
       9: aload_0
      10: invokedynamic #464,  0            // InvokeDynamic #11:apply:(Lscalaz/StrictTree;)Lscala/Function0;
      15: astore_2
      16: astore_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #48                 // class scalaz/Tree$Node$$anon$4
      25: dup
      26: aload_1
      27: aload_2
      28: invokespecial #467                // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      31: areturn

  public <B> scalaz.StrictTree<B> cobind(scala.Function1<scalaz.StrictTree<A>, B>);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_1
       4: invokedynamic #483,  0            // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
       9: astore_2
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_0
      16: astore        7
      18: aload_1
      19: aload         7
      21: invokestatic  #479                // Method $anonfun$cobind$1:(Lscala/Function1;Lscalaz/StrictTree;)Lscala/Tuple2;
      24: astore        4
      26: aload         4
      28: ifnull        80
      31: aload         4
      33: invokevirtual #92                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: astore        5
      38: aload         4
      40: invokevirtual #95                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      43: checkcast     #97                 // class scala/collection/immutable/Vector
      46: astore        6
      48: getstatic     #100                // Field scalaz/StrictTree$Node$.MODULE$:Lscalaz/StrictTree$Node$;
      51: aload         5
      53: aload         6
      55: aload_2
      56: invokedynamic #120,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      61: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      64: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      67: invokevirtual #133                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      70: checkcast     #97                 // class scala/collection/immutable/Vector
      73: invokevirtual #134                // Method scalaz/StrictTree$Node$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      76: astore_3
      77: goto          90
      80: new           #136                // class scala/MatchError
      83: dup
      84: aload         4
      86: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload_3
      91: areturn

  public <Z> Z foldNode(scala.Function1<A, scala.Function1<scala.collection.immutable.Vector<scalaz.StrictTree<A>>, Z>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
       5: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #83                 // class scala/Function1
      13: aload_0
      14: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      17: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  public <B> scalaz.StrictTree<B> map(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #493,  0            // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
       7: invokevirtual #277                // Method runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/StrictTree
      13: areturn

  public <B> scalaz.StrictTree<B> flatMap(scala.Function1<A, scalaz.StrictTree<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #500,  0            // InvokeDynamic #14:apply:(Lscala/Function1;)Lscala/Function1;
       7: invokevirtual #277                // Method runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/StrictTree
      13: areturn

  public <G, B> G traverse1(scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: getstatic     #509                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      12: astore        4
      14: getstatic     #414                // Field scala/package$.MODULE$:Lscala/package$;
      17: invokevirtual #418                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      20: aload         4
      22: invokevirtual #513                // Method scala/collection/immutable/Vector$.unapplySeq:(Lscala/collection/Seq;)Lscala/Some;
      25: astore        5
      27: aload         5
      29: invokevirtual #516                // Method scala/Some.isEmpty:()Z
      32: ifne          84
      35: aload         5
      37: invokevirtual #519                // Method scala/Some.get:()Ljava/lang/Object;
      40: ifnull        84
      43: aload         5
      45: invokevirtual #519                // Method scala/Some.get:()Ljava/lang/Object;
      48: checkcast     #97                 // class scala/collection/immutable/Vector
      51: iconst_0
      52: invokevirtual #523                // Method scala/collection/immutable/Vector.lengthCompare:(I)I
      55: iconst_0
      56: if_icmpne     84
      59: aload_2
      60: aload_1
      61: aload_0
      62: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
      65: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: invokedynamic #528,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
      75: invokeinterface #533,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      80: astore_3
      81: goto          180
      84: getstatic     #414                // Field scala/package$.MODULE$:Lscala/package$;
      87: invokevirtual #537                // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
      90: aload         4
      92: invokevirtual #542                // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
      95: astore        6
      97: aload         6
      99: invokevirtual #543                // Method scala/Option.isEmpty:()Z
     102: ifne          170
     105: aload         6
     107: invokevirtual #544                // Method scala/Option.get:()Ljava/lang/Object;
     110: checkcast     #88                 // class scala/Tuple2
     113: invokevirtual #92                 // Method scala/Tuple2._1:()Ljava/lang/Object;
     116: checkcast     #2                  // class scalaz/StrictTree
     119: astore        7
     121: aload         6
     123: invokevirtual #544                // Method scala/Option.get:()Ljava/lang/Object;
     126: checkcast     #88                 // class scala/Tuple2
     129: invokevirtual #95                 // Method scala/Tuple2._2:()Ljava/lang/Object;
     132: checkcast     #97                 // class scala/collection/immutable/Vector
     135: astore        8
     137: aload_2
     138: aload_0
     139: aload_1
     140: invokedynamic #552,  0            // InvokeDynamic #16:apply:(Lscalaz/StrictTree;Lscala/Function1;)Lscala/Function0;
     145: aload         7
     147: aload         8
     149: aload_1
     150: aload_2
     151: invokedynamic #560,  0            // InvokeDynamic #17:apply:(Lscalaz/StrictTree;Lscala/collection/immutable/Vector;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     156: invokedynamic #571,  0            // InvokeDynamic #18:apply:()Lscala/Function2;
     161: invokeinterface #575,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     166: astore_3
     167: goto          180
     170: new           #136                // class scala/MatchError
     173: dup
     174: aload         4
     176: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     179: athrow
     180: aload_3
     181: areturn

  public <B> scalaz.StrictTree<scala.Tuple2<A, B>> zip(scalaz.StrictTree<B>);
    Code:
       0: new           #38                 // class scalaz/StrictTree$ZipStackElem
       3: dup
       4: getstatic     #180                // Field scala/None$.MODULE$:Lscala/None$;
       7: aload_0
       8: aload_1
       9: invokespecial #584                // Method scalaz/StrictTree$ZipStackElem."<init>":(Lscala/Option;Lscalaz/StrictTree;Lscalaz/StrictTree;)V
      12: astore_2
      13: getstatic     #188                // Field scala/collection/mutable/Stack$.MODULE$:Lscala/collection/mutable/Stack$;
      16: getstatic     #193                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: iconst_1
      20: anewarray     #38                 // class scalaz/StrictTree$ZipStackElem
      23: dup
      24: iconst_0
      25: aload_2
      26: aastore
      27: checkcast     #195                // class "[Ljava/lang/Object;"
      30: invokevirtual #199                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      33: invokevirtual #202                // Method scala/collection/mutable/Stack$.apply:(Lscala/collection/Seq;)Lscala/collection/GenTraversable;
      36: checkcast     #204                // class scala/collection/mutable/Stack
      39: astore_3
      40: aload_3
      41: invokevirtual #208                // Method scala/collection/mutable/Stack.nonEmpty:()Z
      44: ifeq          214
      47: aload_3
      48: invokevirtual #211                // Method scala/collection/mutable/Stack.head:()Ljava/lang/Object;
      51: checkcast     #38                 // class scalaz/StrictTree$ZipStackElem
      54: astore        4
      56: aload         4
      58: invokevirtual #585                // Method scalaz/StrictTree$ZipStackElem.hasNext:()Z
      61: ifeq          149
      64: aload         4
      66: invokevirtual #588                // Method scalaz/StrictTree$ZipStackElem.next:()Lscala/Tuple2;
      69: astore        5
      71: aload         5
      73: ifnull        99
      76: aload         5
      78: invokevirtual #92                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      81: checkcast     #2                  // class scalaz/StrictTree
      84: astore        6
      86: aload         5
      88: invokevirtual #95                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      91: checkcast     #2                  // class scalaz/StrictTree
      94: astore        7
      96: goto          109
      99: new           #136                // class scala/MatchError
     102: dup
     103: aload         5
     105: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         6
     111: astore        8
     113: aload         7
     115: astore        9
     117: new           #38                 // class scalaz/StrictTree$ZipStackElem
     120: dup
     121: new           #220                // class scala/Some
     124: dup
     125: aload         4
     127: invokespecial #221                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     130: aload         8
     132: aload         9
     134: invokespecial #584                // Method scalaz/StrictTree$ZipStackElem."<init>":(Lscala/Option;Lscalaz/StrictTree;Lscalaz/StrictTree;)V
     137: astore        10
     139: aload_3
     140: aload         10
     142: invokevirtual #225                // Method scala/collection/mutable/Stack.push:(Ljava/lang/Object;)Lscala/collection/mutable/Stack;
     145: pop
     146: goto          40
     149: new           #2                  // class scalaz/StrictTree
     152: dup
     153: new           #88                 // class scala/Tuple2
     156: dup
     157: aload         4
     159: invokevirtual #591                // Method scalaz/StrictTree$ZipStackElem.a:()Lscalaz/StrictTree;
     162: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
     165: aload         4
     167: invokevirtual #593                // Method scalaz/StrictTree$ZipStackElem.b:()Lscalaz/StrictTree;
     170: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
     173: invokespecial #596                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     176: aload         4
     178: invokevirtual #597                // Method scalaz/StrictTree$ZipStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
     181: invokeinterface #378,  1          // InterfaceMethod scala/collection/mutable/Buffer.toVector:()Lscala/collection/immutable/Vector;
     186: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
     189: astore        11
     191: aload         4
     193: invokevirtual #601                // Method scalaz/StrictTree$ZipStackElem.parent:()Lscala/Option;
     196: aload         11
     198: invokedynamic #611,  0            // InvokeDynamic #19:apply:(Lscalaz/StrictTree;)Lscala/Function1;
     203: invokevirtual #251                // Method scala/Option.foreach:(Lscala/Function1;)V
     206: aload_3
     207: invokevirtual #254                // Method scala/collection/mutable/Stack.pop:()Ljava/lang/Object;
     210: pop
     211: goto          40
     214: new           #2                  // class scalaz/StrictTree
     217: dup
     218: new           #88                 // class scala/Tuple2
     221: dup
     222: aload_0
     223: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
     226: aload_1
     227: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
     230: invokespecial #596                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     233: aload_2
     234: invokevirtual #597                // Method scalaz/StrictTree$ZipStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
     237: invokeinterface #378,  1          // InterfaceMethod scala/collection/mutable/Buffer.toVector:()Lscala/collection/immutable/Vector;
     242: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
     245: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokedynamic #620,  0            // InvokeDynamic #20:apply:()Lscala/Function1;
       6: invokevirtual #277                // Method runBottomUp:(Lscala/Function1;)Ljava/lang/Object;
       9: invokestatic  #626                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      12: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree
       4: ifeq          29
       7: aload_1
       8: checkcast     #2                  // class scalaz/StrictTree
      11: astore_3
      12: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
      15: invokevirtual #633                // Method scalaz/StrictTree$.scalaz$StrictTree$$badEqInstance:()Lscalaz/StrictTreeEqual;
      18: aload_0
      19: aload_3
      20: invokeinterface #639,  3          // InterfaceMethod scalaz/StrictTreeEqual.equal:(Lscalaz/StrictTree;Lscalaz/StrictTree;)Z
      25: istore_2
      26: goto          31
      29: iconst_0
      30: istore_2
      31: iload_2
      32: ireturn

  public <A> scalaz.StrictTree<A> copy(A, scala.collection.immutable.Vector<scalaz.StrictTree<A>>);
    Code:
       0: new           #2                  // class scalaz/StrictTree
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
       9: areturn

  public <A> A copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
       4: areturn

  public <A> scala.collection.immutable.Vector<scalaz.StrictTree<A>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #648                // String StrictTree
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 29
               default: 34
          }
      24: aload_0
      25: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
      28: areturn
      29: aload_0
      30: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      33: areturn
      34: new           #654                // class java/lang/IndexOutOfBoundsException
      37: dup
      38: iload_1
      39: invokestatic  #658                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: invokevirtual #661                // Method java/lang/Object.toString:()Ljava/lang/String;
      45: invokespecial #664                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      48: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #671                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #675                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree
       4: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #671                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #680                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public static final scala.collection.mutable.Buffer $anonfun$runBottomUp$1(java.lang.Object, scalaz.StrictTree$BottomUpStackElem);
    Code:
       0: aload_1
       1: invokevirtual #231                // Method scalaz/StrictTree$BottomUpStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
       4: aload_0
       5: invokeinterface #356,  2          // InterfaceMethod scala/collection/mutable/Buffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
      10: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scala.Function1, java.lang.Object, scalaz.Monoid, scala.collection.mutable.Buffer);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore        4
      17: getstatic     #287                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      20: getstatic     #292                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      23: invokevirtual #296                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      26: astore        6
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload         6
      35: aload_3
      36: invokeinterface #378,  1          // InterfaceMethod scala/collection/mutable/Buffer.toVector:()Lscala/collection/immutable/Vector;
      41: aload_2
      42: invokeinterface #690,  3          // InterfaceMethod scalaz/Foldable.fold:(Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
      47: astore        5
      49: getstatic     #695                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: aload_2
      58: aload         4
      60: aload         5
      62: invokedynamic #700,  0            // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function0;
      67: invokeinterface #706,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      72: areturn

  public static final scala.Function1 $anonfun$foldMap$1(scala.Function1, scalaz.Monoid, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #716,  0            // InvokeDynamic #22:apply:(Lscala/Function1;Ljava/lang/Object;Lscalaz/Monoid;)Lscala/Function1;
       8: areturn

  public static final java.lang.Object $anonfun$foldRight$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.StrictTree $anonfun$scanr$2(scala.Function2, java.lang.Object, scala.collection.mutable.Buffer);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_2
       9: invokeinterface #378,  1          // InterfaceMethod scala/collection/mutable/Buffer.toVector:()Lscala/collection/immutable/Vector;
      14: astore_3
      15: new           #2                  // class scalaz/StrictTree
      18: dup
      19: aload_0
      20: aload_1
      21: aload_3
      22: invokeinterface #725,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_3
      28: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
      31: areturn

  public static final scala.Function1 $anonfun$scanr$1(scala.Function2, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #733,  0            // InvokeDynamic #23:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
       7: areturn

  public static final scala.collection.mutable.Stack $anonfun$flatten$1(scala.collection.mutable.Stack, scalaz.StrictTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #225                // Method scala/collection/mutable/Stack.push:(Ljava/lang/Object;)Lscala/collection/mutable/Stack;
       5: areturn

  public static final scala.collection.immutable.Vector $anonfun$size$1(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
       4: areturn

  public static final scala.collection.immutable.Vector $anonfun$levels$2(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
       4: areturn

  public static final scala.collection.immutable.Vector $anonfun$levels$1(scala.collection.immutable.Vector);
    Code:
       0: getstatic     #287                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #292                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       6: invokevirtual #296                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
       9: astore_1
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_1
      16: aload_0
      17: invokedynamic #742,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
      22: getstatic     #292                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      25: invokevirtual #746                // Method scalaz/std/vector$.vectorMonoid:()Lscalaz/Monoid;
      28: invokeinterface #749,  4          // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      33: checkcast     #97                 // class scala/collection/immutable/Vector
      36: areturn

  public static final boolean $anonfun$levels$3(scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: invokevirtual #753                // Method scala/collection/immutable/Vector.isEmpty:()Z
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: iconst_0
      10: ireturn

  public static final java.lang.Object $anonfun$levels$5(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
       4: areturn

  public static final scala.collection.immutable.Vector $anonfun$levels$4(scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: invokedynamic #761,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
       6: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
       9: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      12: invokevirtual #133                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      15: checkcast     #97                 // class scala/collection/immutable/Vector
      18: areturn

  public static final java.lang.Object $anonfun$toTree$1(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Tree $anonfun$toTree$3(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #324                // Method toTree:()Lscalaz/Tree;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$toTree$2(scalaz.StrictTree);
    Code:
       0: aload_0
       1: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
       4: invokevirtual #768                // Method scala/collection/immutable/Vector.toStream:()Lscala/collection/immutable/Stream;
       7: invokedynamic #773,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
      12: getstatic     #778                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      15: invokevirtual #779                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      18: invokevirtual #782                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      21: checkcast     #781                // class scala/collection/immutable/Stream
      24: areturn

  public static final scala.Tuple2 $anonfun$cobind$1(scala.Function1, scalaz.StrictTree);
    Code:
       0: new           #88                 // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      15: invokespecial #596                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: areturn

  public static final scalaz.StrictTree $anonfun$map$2(scala.Function1, java.lang.Object, scala.collection.Seq);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/StrictTree
      11: dup
      12: aload_0
      13: aload_1
      14: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: aload_2
      20: invokeinterface #791,  1          // InterfaceMethod scala/collection/Seq.toVector:()Lscala/collection/immutable/Vector;
      25: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
      28: areturn

  public static final scala.Function1 $anonfun$map$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #799,  0            // InvokeDynamic #27:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       7: areturn

  public static final scalaz.StrictTree $anonfun$flatMap$2(scala.Function1, java.lang.Object, scala.collection.Seq);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #2                  // class scalaz/StrictTree
      18: astore_3
      19: aload_3
      20: ifnull        38
      23: aload_3
      24: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
      27: astore        4
      29: aload_3
      30: invokevirtual #358                // Method subForest:()Lscala/collection/immutable/Vector;
      33: astore        5
      35: goto          47
      38: new           #136                // class scala/MatchError
      41: dup
      42: aload_3
      43: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload         5
      49: astore        6
      51: new           #2                  // class scalaz/StrictTree
      54: dup
      55: aload         4
      57: aload         6
      59: aload_2
      60: getstatic     #125                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      63: invokevirtual #129                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      66: invokevirtual #806                // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      69: checkcast     #97                 // class scala/collection/immutable/Vector
      72: invokespecial #600                // Method "<init>":(Ljava/lang/Object;Lscala/collection/immutable/Vector;)V
      75: areturn

  public static final scala.Function1 $anonfun$flatMap$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #812,  0            // InvokeDynamic #28:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
       7: areturn

  public static final scalaz.StrictTree $anonfun$traverse1$1(java.lang.Object);
    Code:
       0: getstatic     #816                // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
       3: aload_0
       4: invokevirtual #818                // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
       7: areturn

  public static final java.lang.Object $anonfun$traverse1$2(scalaz.StrictTree, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #352                // Method rootLabel:()Ljava/lang/Object;
       5: invokeinterface #86,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1$4(scala.Function1, scalaz.Apply, scalaz.StrictTree);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #825                // Method traverse1:(Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$traverse1$3(scalaz.StrictTree, scala.collection.immutable.Vector, scala.Function1, scalaz.Apply);
    Code:
       0: getstatic     #832                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_0
       4: getstatic     #837                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: aload_1
       8: getstatic     #292                // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: invokevirtual #296                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      14: invokevirtual #841                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      17: invokevirtual #845                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      20: aload_2
      21: aload_3
      22: invokedynamic #851,  0            // InvokeDynamic #29:apply:(Lscala/Function1;Lscalaz/Apply;)Lscala/Function1;
      27: astore        5
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: astore        4
      37: aload         4
      39: invokevirtual #857                // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      42: astore        7
      44: aload         7
      46: instanceof    #859                // class scalaz/INil
      49: ifeq          85
      52: aload_3
      53: aload         4
      55: invokevirtual #860                // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      58: checkcast     #2                  // class scalaz/StrictTree
      61: astore        11
      63: aload_2
      64: aload_3
      65: aload         11
      67: invokestatic  #847                // Method $anonfun$traverse1$4:(Lscala/Function1;Lscalaz/Apply;Lscalaz/StrictTree;)Ljava/lang/Object;
      70: invokedynamic #866,  0            // InvokeDynamic #30:apply:()Lscala/Function1;
      75: invokeinterface #533,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      80: astore        6
      82: goto          161
      85: aload         7
      87: instanceof    #868                // class scalaz/ICons
      90: ifeq          151
      93: aload         7
      95: checkcast     #868                // class scalaz/ICons
      98: astore        8
     100: aload         8
     102: invokevirtual #869                // Method scalaz/ICons.head:()Ljava/lang/Object;
     105: astore        9
     107: aload         8
     109: invokevirtual #870                // Method scalaz/ICons.tail:()Lscalaz/IList;
     112: astore        10
     114: aload_3
     115: aload         4
     117: aload         5
     119: invokedynamic #877,  0            // InvokeDynamic #31:apply:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscala/Function0;
     124: aload         9
     126: aload         10
     128: aload         5
     130: aload_3
     131: invokedynamic #884,  0            // InvokeDynamic #32:apply:(Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     136: invokedynamic #890,  0            // InvokeDynamic #33:apply:()Lscala/Function2;
     141: invokeinterface #575,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     146: astore        6
     148: goto          161
     151: new           #136                // class scala/MatchError
     154: dup
     155: aload         7
     157: invokespecial #140                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     160: athrow
     161: aload         6
     163: areturn

  public static final scalaz.StrictTree $anonfun$traverse1$5(java.lang.Object, scalaz.NonEmptyList);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #100                // Field scalaz/StrictTree$Node$.MODULE$:Lscalaz/StrictTree$Node$;
       5: aload_0
       6: aload_2
       7: invokevirtual #903                // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      10: invokevirtual #904                // Method scalaz/IList.toVector:()Lscala/collection/immutable/Vector;
      13: invokevirtual #134                // Method scalaz/StrictTree$Node$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      16: areturn

  public static final scala.collection.mutable.Buffer $anonfun$zip$1(scalaz.StrictTree, scalaz.StrictTree$ZipStackElem);
    Code:
       0: aload_1
       1: invokevirtual #597                // Method scalaz/StrictTree$ZipStackElem.mappedSubForest:()Lscala/collection/mutable/Buffer;
       4: aload_0
       5: invokeinterface #356,  2          // InterfaceMethod scala/collection/mutable/Buffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
      10: areturn

  public static final int $anonfun$hashCode$2(java.lang.Object, scala.collection.Seq);
    Code:
       0: getstatic     #64                 // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_0
       4: aload_1
       5: invokevirtual #912                // Method scalaz/StrictTree$.scalaz$StrictTree$$hashCodeReducer:(Ljava/lang/Object;Lscala/collection/Seq;)I
       8: ireturn

  public static final scala.Function1 $anonfun$hashCode$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #920,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function1;
       6: areturn

  public scalaz.StrictTree(A, scala.collection.immutable.Vector<scalaz.StrictTree<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field rootLabel:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #171                // Field subForest:Lscala/collection/immutable/Vector;
      10: aload_0
      11: invokespecial #924                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #928                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return

  public static final java.lang.Object $anonfun$levels$3$adapted(scala.collection.immutable.Vector);
    Code:
       0: aload_0
       1: invokestatic  #930                // Method $anonfun$levels$3:(Lscala/collection/immutable/Vector;)Z
       4: invokestatic  #934                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$hashCode$2$adapted(java.lang.Object, scala.collection.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #936                // Method $anonfun$hashCode$2:(Ljava/lang/Object;Lscala/collection/Seq;)I
       5: invokestatic  #658                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #948,  0            // InvokeDynamic #35:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
