Compiled from "LazyOption.scala"
public final class scalaz.LazyOptionInstances$$anon$1 implements scalaz.Traverse<scalaz.LazyOption>, scalaz.MonadPlus<scalaz.LazyOption>, scalaz.Alt<scalaz.LazyOption>, scalaz.BindRec<scalaz.LazyOption>, scalaz.Cozip<scalaz.LazyOption>, scalaz.Zip<scalaz.LazyOption>, scalaz.Unzip<scalaz.LazyOption>, scalaz.Align<scalaz.LazyOption>, scalaz.Cobind<scalaz.LazyOption>, scalaz.Optional<scalaz.LazyOption>, scalaz.IsEmpty<scalaz.LazyOption> {
  private final scalaz.syntax.IsEmptySyntax<scalaz.LazyOption> isEmptySyntax;

  private final scalaz.syntax.OptionalSyntax<scalaz.LazyOption> optionalSyntax;

  private final scalaz.syntax.CobindSyntax<scalaz.LazyOption> cobindSyntax;

  private final scalaz.syntax.AlignSyntax<scalaz.LazyOption> alignSyntax;

  private final scalaz.syntax.UnzipSyntax<scalaz.LazyOption> unzipSyntax;

  private final scalaz.syntax.ZipSyntax<scalaz.LazyOption> zipSyntax;

  private final scalaz.syntax.CozipSyntax<scalaz.LazyOption> cozipSyntax;

  private final scalaz.syntax.BindRecSyntax<scalaz.LazyOption> bindRecSyntax;

  private final scalaz.syntax.AltSyntax<scalaz.LazyOption> altSyntax;

  private final scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption> invariantAltSyntax;

  private final scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption> monadPlusSyntax;

  private final scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption> applicativePlusSyntax;

  private final scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scalaz.LazyOption> plusSyntax;

  private final scalaz.syntax.MonadSyntax<scalaz.LazyOption> monadSyntax;

  private final scalaz.syntax.BindSyntax<scalaz.LazyOption> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.LazyOption> applySyntax;

  private final scalaz.syntax.TraverseSyntax<scalaz.LazyOption> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.LazyOption> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.LazyOption> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption> invariantFunctorSyntax;

  public scalaz.IsEmpty<scalaz.LazyOption>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #207                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object getOrElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #217                // InterfaceMethod scalaz/Optional.getOrElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final boolean nonEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // InterfaceMethod scalaz/Optional.nonEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public final boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod scalaz/Optional.isEmpty$:(Lscalaz/Optional;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object orElse(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #234                // InterfaceMethod scalaz/Optional.orElse$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object $qmark(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #242                // InterfaceMethod scalaz/Optional.$qmark$:(Lscalaz/Optional;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public scala.Option toOption(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #248                // InterfaceMethod scalaz/Optional.toOption$:(Lscalaz/Optional;Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public scalaz.Maybe toMaybe(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #254                // InterfaceMethod scalaz/Optional.toMaybe$:(Lscalaz/Optional;Ljava/lang/Object;)Lscalaz/Maybe;
       5: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #261                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.LazyOption>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #269                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #293                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #310                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #315                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #319                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #323                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #327                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #331                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #335                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.LazyOption>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #342                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #352                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scalaz.LazyOption>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #360                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #367                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #374                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #386                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #398                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.LazyOption>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #403                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #417                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #423                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #430                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.LazyOption> ap(scalaz.Functor<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #438                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.LazyOption>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #445                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public scalaz.$bslash$div cozip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #451                // InterfaceMethod scalaz/Cozip.cozip3$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // InterfaceMethod scalaz/Cozip.cozip4$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #459                // InterfaceMethod scalaz/Cozip.cozip5$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // InterfaceMethod scalaz/Cozip.cozip6$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public scalaz.$bslash$div cozip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // InterfaceMethod scalaz/Cozip.cozip7$:(Lscalaz/Cozip;Ljava/lang/Object;)Lscalaz/$bslash$div;
       5: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #477                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scalaz.LazyOption>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #485                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #490                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #496                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #502                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #509                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #516                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #527                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #533                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #539                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #545                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #552                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #558                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #564                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #570                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.LazyOption>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #577                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #585                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #591                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #597                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #603                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #608                // InterfaceMethod scalaz/MonadPlus.filter$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #616                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #624                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #629                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #635                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #641                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #647                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.LazyOption>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #655                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.LazyOption>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #662                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #669                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #675                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #682                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #686                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #691                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #695                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.LazyOption<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #703                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.LazyOption>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #710                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.LazyOption<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.LazyOption<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #717                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.LazyOption<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyOption<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #727                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.LazyOption<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #735                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.LazyOption>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #742                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #747                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #755                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #760                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #765                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #769                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #773                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #777                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #782                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.LazyOption>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #790                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #796                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #802                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #809                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #814                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #819                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.LazyOption>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #827                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #833                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #839                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #848                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #855                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #860                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #865                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #871                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #877                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #884                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #892                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #897                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #904                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #909                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #916                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #921                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #925                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.LazyOption> flip();
    Code:
       0: aload_0
       1: invokestatic  #930                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #938                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.LazyOption>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #945                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #952                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #957                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #963                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #969                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #975                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #981                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #988                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S, A, B> scalaz.Maybe<scalaz.LazyOption<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyOption<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #996                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1002               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1005               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.LazyOption<A>, scalaz.LazyOption<B>> apF(scala.Function0<scalaz.LazyOption<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1012               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1018               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1025               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1032               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1039               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1046               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1053               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1060               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1066               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1072               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1078               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1085               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1092               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1099               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1107               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1115               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1123               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1131               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1137               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1143               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1149               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1155               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1160               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1166               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1172               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1178               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1184               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1191               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1198               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1205               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1212               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1219               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<H>, scalaz.LazyOption<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1226               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1233               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1240               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<K>, scalaz.LazyOption<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1247               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>, scalaz.LazyOption<D>, scalaz.LazyOption<E>, scalaz.LazyOption<FF>, scalaz.LazyOption<G>, scalaz.LazyOption<H>, scalaz.LazyOption<I>, scalaz.LazyOption<J>, scalaz.LazyOption<K>, scalaz.LazyOption<L>, scalaz.LazyOption<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1254               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1258               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1262               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1267               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.LazyOption<A>, scalaz.LazyOption<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1275               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.LazyOption>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1282               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1287               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1295               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1298               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1305               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.LazyOption>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1313               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.LazyOption>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1320               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1325               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1331               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1337               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1343               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1350               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1357               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1364               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1370               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1376               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1382               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1389               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1395               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1401               // InterfaceMethod scalaz/Traverse.foldLeft$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1407               // InterfaceMethod scalaz/Traverse.foldMap$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1412               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1414               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1418               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1422               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1426               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1431               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1435               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1439               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1443               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.LazyOption>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1450               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1456               // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1461               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1466               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1468               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1473               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1480               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1486               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1493               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1500               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1506               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1511               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1516               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1521               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1526               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1531               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1537               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1543               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1549               // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1555               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1561               // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1567               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1571               // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1575               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1579               // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1585               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1589               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1595               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1599               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1603               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1609               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1613               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1620               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1626               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1632               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1638               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1644               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1650               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1656               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1662               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1668               // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1672               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1676               // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1680               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1686               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1692               // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1699               // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1703               // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1708               // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1713               // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1718               // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1723               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1728               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1733               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1738               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1742               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1746               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1750               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1756               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1762               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1766               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1770               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1775               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1782               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1788               // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1795               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1802               // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1808               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1815               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1821               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1825               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1831               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1837               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1842               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1848               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.LazyOption>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1855               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1861               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1866               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.LazyOption<A>, scalaz.LazyOption<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1873               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1878               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1882               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1886               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1891               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1895               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1899               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1905               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1911               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1918               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1924               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1927               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1934               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.LazyOption>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1942               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1949               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1957               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.LazyOption>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1965               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.IsEmptySyntax<scalaz.LazyOption> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1969               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1969               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.OptionalSyntax<scalaz.LazyOption> optionalSyntax();
    Code:
       0: aload_0
       1: getfield      #1977               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       4: areturn

  public void scalaz$Optional$_setter_$optionalSyntax_$eq(scalaz.syntax.OptionalSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1977               // Field optionalSyntax:Lscalaz/syntax/OptionalSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.LazyOption> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1984               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1984               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scalaz.LazyOption> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1991               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1991               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scalaz.LazyOption> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1998               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1998               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scalaz.LazyOption> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #2005               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2005               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.CozipSyntax<scalaz.LazyOption> cozipSyntax();
    Code:
       0: aload_0
       1: getfield      #2012               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       4: areturn

  public void scalaz$Cozip$_setter_$cozipSyntax_$eq(scalaz.syntax.CozipSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2012               // Field cozipSyntax:Lscalaz/syntax/CozipSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scalaz.LazyOption> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #2019               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2019               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.LazyOption> altSyntax();
    Code:
       0: aload_0
       1: getfield      #2026               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2026               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #2033               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2033               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #2040               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2040               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #2047               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2047               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #2054               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2054               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.LazyOption> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #2061               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2061               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.LazyOption> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #2068               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2068               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.LazyOption> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2075               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2075               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2082               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2082               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2089               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2089               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.LazyOption> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2096               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2096               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.LazyOption> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2103               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2103               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.LazyOption> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2110               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2110               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.LazyOption> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2117               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2117               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2124               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.LazyOption>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2124               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.LazyOption<B> cobind(scalaz.LazyOption<A>, scala.Function1<scalaz.LazyOption<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2134               // Method cojoin:(Lscalaz/LazyOption;)Lscalaz/LazyOption;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_0
       9: aload_2
      10: invokedynamic #2154,  0           // InvokeDynamic #0:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #2157,  3         // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: checkcast     #2159               // class scalaz/LazyOption
      23: areturn

  public <A> scalaz.LazyOption<scalaz.LazyOption<A>> cojoin(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: instanceof    #2164               // class scalaz/LazyNone
       4: ifeq          17
       7: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      10: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
      13: astore_2
      14: goto          55
      17: aload_1
      18: instanceof    #2176               // class scalaz/LazySome
      21: ifeq          46
      24: aload_1
      25: checkcast     #2176               // class scalaz/LazySome
      28: astore_3
      29: new           #2176               // class scalaz/LazySome
      32: dup
      33: aload_3
      34: invokedynamic #2189,  0           // InvokeDynamic #1:apply:(Lscalaz/LazySome;)Lscala/Function0;
      39: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      42: astore_2
      43: goto          55
      46: new           #2195               // class scala/MatchError
      49: dup
      50: aload_1
      51: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow
      55: aload_2
      56: areturn

  public <G, A, B> G traverseImpl(scalaz.LazyOption<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #2209,  0           // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_1
      15: instanceof    #2176               // class scalaz/LazySome
      18: ifeq          43
      21: aload_1
      22: checkcast     #2176               // class scalaz/LazySome
      25: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      28: astore        6
      30: aload_3
      31: aload         4
      33: aload         6
      35: invokestatic  #2216               // Method scalaz/LazyOption.$anonfun$traverse$1:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
      38: astore        5
      40: goto          68
      43: aload_1
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          59
      50: aload_3
      51: invokestatic  #2220               // Method scalaz/LazyOption.$anonfun$traverse$4:(Lscalaz/Applicative;)Ljava/lang/Object;
      54: astore        5
      56: goto          68
      59: new           #2195               // class scala/MatchError
      62: dup
      63: aload_1
      64: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: aload         5
      70: areturn

  public <A, B> B foldRight(scalaz.LazyOption<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          34
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        5
      22: aload_3
      23: aload_2
      24: aload         5
      26: invokestatic  #2230               // Method scalaz/LazyOption.$anonfun$foldRight$1:(Lscala/Function2;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      29: astore        4
      31: goto          61
      34: aload_1
      35: instanceof    #2164               // class scalaz/LazyNone
      38: ifeq          52
      41: aload_2
      42: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      47: astore        4
      49: goto          61
      52: new           #2195               // class scala/MatchError
      55: dup
      56: aload_1
      57: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      60: athrow
      61: aload         4
      63: areturn

  public <A, B> scalaz.LazyOption<B> ap(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_2
      33: aload         5
      35: invokestatic  #2239               // Method scalaz/LazyOption.$anonfun$ap$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          67
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          58
      50: invokestatic  #2242               // Method scalaz/LazyOption.$anonfun$ap$3:()Lscalaz/LazyOption;
      53: astore        4
      55: goto          67
      58: new           #2195               // class scala/MatchError
      61: dup
      62: aload_3
      63: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         4
      69: areturn

  public <A> scalaz.LazyOption<A> plus(scalaz.LazyOption<A>, scala.Function0<scalaz.LazyOption<A>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          32
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        4
      22: aload_1
      23: aload         4
      25: invokestatic  #2249               // Method scalaz/LazyOption.$anonfun$orElse$1:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
      28: astore_3
      29: goto          58
      32: aload_1
      33: instanceof    #2164               // class scalaz/LazyNone
      36: ifeq          49
      39: aload_2
      40: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #2195               // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2159               // class scalaz/LazyOption
      62: areturn

  public <A> scalaz.LazyOption<A> alt(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_3
      33: aload         5
      35: invokestatic  #2249               // Method scalaz/LazyOption.$anonfun$orElse$1:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          70
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          61
      50: aload_2
      51: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      56: astore        4
      58: goto          70
      61: new           #2195               // class scala/MatchError
      64: dup
      65: aload_3
      66: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow
      70: aload         4
      72: checkcast     #2159               // class scalaz/LazyOption
      75: areturn

  public <A, B> scalaz.LazyOption<B> bind(scalaz.LazyOption<A>, scala.Function1<A, scalaz.LazyOption<B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          32
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        4
      22: aload_2
      23: aload         4
      25: invokestatic  #2257               // Method $anonfun$bind$1:(Lscala/Function1;Lscala/Function0;)Lscalaz/LazyOption;
      28: astore_3
      29: goto          55
      32: aload_1
      33: instanceof    #2164               // class scalaz/LazyNone
      36: ifeq          46
      39: invokestatic  #2260               // Method scalaz/LazyOption.$anonfun$flatMap$1:()Lscalaz/LazyOption;
      42: astore_3
      43: goto          55
      46: new           #2195               // class scala/MatchError
      49: dup
      50: aload_1
      51: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      54: athrow
      55: aload_3
      56: areturn

  public <A> scalaz.LazyOption<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2176               // class scalaz/LazySome
      11: dup
      12: aload_1
      13: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      16: areturn

  public <A> scalaz.LazyOption<A> empty();
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
       6: areturn

  public <A, B> scalaz.$bslash$div<scalaz.LazyOption<A>, scalaz.LazyOption<B>> cozip(scalaz.LazyOption<scalaz.$bslash$div<A, B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          27
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: invokestatic  #2271               // Method $anonfun$cozip$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      23: astore_2
      24: goto          50
      27: aload_1
      28: instanceof    #2164               // class scalaz/LazyNone
      31: ifeq          41
      34: invokestatic  #2275               // Method $anonfun$cozip$4:()Lscalaz/$bslash$div;
      37: astore_2
      38: goto          50
      41: new           #2195               // class scala/MatchError
      44: dup
      45: aload_1
      46: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_2
      51: areturn

  public <A, B> scalaz.LazyOption<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.LazyOption<A>>, scala.Function0<scalaz.LazyOption<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_2
      33: aload         5
      35: invokestatic  #2282               // Method scalaz/LazyOption.$anonfun$zip$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          67
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          58
      50: invokestatic  #2260               // Method scalaz/LazyOption.$anonfun$flatMap$1:()Lscalaz/LazyOption;
      53: astore        4
      55: goto          67
      58: new           #2195               // class scala/MatchError
      61: dup
      62: aload_3
      63: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         4
      69: areturn

  public <A, B> scala.Tuple2<scalaz.LazyOption<A>, scalaz.LazyOption<B>> unzip(scalaz.LazyOption<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2291               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: invokevirtual #2295               // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
       7: invokevirtual #2298               // Method scalaz/LazyOption.unzip:(Lscala/Predef$$less$colon$less;)Lscala/Tuple2;
      10: areturn

  public <A, B, C> scala.Function2<scalaz.LazyOption<A>, scalaz.LazyOption<B>, scalaz.LazyOption<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2311,  0           // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <B, A> scalaz.$bslash$div<scalaz.LazyOption<B>, A> pextract(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          27
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: invokestatic  #2316               // Method $anonfun$pextract$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      23: astore_2
      24: goto          50
      27: aload_1
      28: instanceof    #2164               // class scalaz/LazyNone
      31: ifeq          41
      34: invokestatic  #2319               // Method $anonfun$pextract$2:()Lscalaz/$bslash$div;
      37: astore_2
      38: goto          50
      41: new           #2195               // class scala/MatchError
      44: dup
      45: aload_1
      46: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_2
      51: areturn

  public <A> boolean isDefined(scalaz.LazyOption<A>);
    Code:
       0: aload_1
       1: invokevirtual #2325               // Method scalaz/LazyOption.isDefined:()Z
       4: ireturn

  public <A, B> scalaz.LazyOption<B> tailrecM(A, scala.Function1<A, scalaz.LazyOption<scalaz.$bslash$div<A, B>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2159               // class scalaz/LazyOption
      10: astore        4
      12: aload         4
      14: instanceof    #2164               // class scalaz/LazyNone
      17: ifeq          30
      20: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      23: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
      26: astore_3
      27: goto          153
      30: aload         4
      32: instanceof    #2176               // class scalaz/LazySome
      35: ifeq          143
      38: aload         4
      40: checkcast     #2176               // class scalaz/LazySome
      43: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      46: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      51: checkcast     #2277               // class scalaz/$bslash$div
      54: astore        5
      56: aload         5
      58: instanceof    #2332               // class scalaz/$bslash$div$minus
      61: ifeq          105
      64: aload         5
      66: checkcast     #2332               // class scalaz/$bslash$div$minus
      69: invokevirtual #2334               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      72: astore        6
      74: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      77: aload         6
      79: invokedynamic #2341,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      84: astore        7
      86: ifnonnull     91
      89: aconst_null
      90: athrow
      91: new           #2176               // class scalaz/LazySome
      94: dup
      95: aload         7
      97: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     100: astore        8
     102: goto          137
     105: aload         5
     107: instanceof    #2343               // class scalaz/$minus$bslash$div
     110: ifeq          127
     113: aload         5
     115: checkcast     #2343               // class scalaz/$minus$bslash$div
     118: invokevirtual #2345               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     121: aload_2
     122: astore_2
     123: astore_1
     124: goto          0
     127: new           #2195               // class scala/MatchError
     130: dup
     131: aload         5
     133: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: aload         8
     139: astore_3
     140: goto          153
     143: new           #2195               // class scala/MatchError
     146: dup
     147: aload         4
     149: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     152: athrow
     153: aload_3
     154: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2349               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2352               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2354               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: aload_3
       4: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #2159               // class scalaz/LazyOption
      12: astore        5
      14: aload         5
      16: instanceof    #2164               // class scalaz/LazyNone
      19: ifeq          33
      22: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      25: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
      28: astore        4
      30: goto          155
      33: aload         5
      35: instanceof    #2176               // class scalaz/LazySome
      38: ifeq          145
      41: aload         5
      43: checkcast     #2176               // class scalaz/LazySome
      46: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      49: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      54: checkcast     #2277               // class scalaz/$bslash$div
      57: astore        6
      59: aload         6
      61: instanceof    #2332               // class scalaz/$bslash$div$minus
      64: ifeq          108
      67: aload         6
      69: checkcast     #2332               // class scalaz/$bslash$div$minus
      72: invokevirtual #2334               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      75: astore        7
      77: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      80: aload         7
      82: invokedynamic #2341,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      87: astore        8
      89: ifnonnull     94
      92: aconst_null
      93: athrow
      94: new           #2176               // class scalaz/LazySome
      97: dup
      98: aload         8
     100: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     103: astore        9
     105: goto          138
     108: aload         6
     110: instanceof    #2343               // class scalaz/$minus$bslash$div
     113: ifeq          128
     116: aload         6
     118: checkcast     #2343               // class scalaz/$minus$bslash$div
     121: invokevirtual #2345               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
     124: astore_3
     125: goto          2
     128: new           #2195               // class scala/MatchError
     131: dup
     132: aload         6
     134: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     137: athrow
     138: aload         9
     140: astore        4
     142: goto          155
     145: new           #2195               // class scala/MatchError
     148: dup
     149: aload         5
     151: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     154: athrow
     155: aload         4
     157: areturn

  public boolean isDefined(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2159               // class scalaz/LazyOption
       5: invokevirtual #2359               // Method isDefined:(Lscalaz/LazyOption;)Z
       8: ireturn

  public scalaz.$bslash$div pextract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2159               // class scalaz/LazyOption
       5: invokevirtual #2361               // Method pextract:(Lscalaz/LazyOption;)Lscalaz/$bslash$div;
       8: areturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2159               // class scalaz/LazyOption
       5: invokevirtual #2364               // Method unzip:(Lscalaz/LazyOption;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_2
      33: aload         5
      35: invokestatic  #2282               // Method scalaz/LazyOption.$anonfun$zip$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          67
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          58
      50: invokestatic  #2260               // Method scalaz/LazyOption.$anonfun$flatMap$1:()Lscalaz/LazyOption;
      53: astore        4
      55: goto          67
      58: new           #2195               // class scala/MatchError
      61: dup
      62: aload_3
      63: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         4
      69: areturn

  public scalaz.$bslash$div cozip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2159               // class scalaz/LazyOption
       5: invokevirtual #2367               // Method cozip:(Lscalaz/LazyOption;)Lscalaz/$bslash$div;
       8: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2369               // Method empty:()Lscalaz/LazyOption;
       4: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2176               // class scalaz/LazySome
      11: dup
      12: aload_1
      13: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      16: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2159               // class scalaz/LazyOption
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_3
      12: instanceof    #2176               // class scalaz/LazySome
      15: ifeq          38
      18: aload_3
      19: checkcast     #2176               // class scalaz/LazySome
      22: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      25: astore        5
      27: aload_2
      28: aload         5
      30: invokestatic  #2257               // Method $anonfun$bind$1:(Lscala/Function1;Lscala/Function0;)Lscalaz/LazyOption;
      33: astore        4
      35: goto          62
      38: aload_3
      39: instanceof    #2164               // class scalaz/LazyNone
      42: ifeq          53
      45: invokestatic  #2260               // Method scalaz/LazyOption.$anonfun$flatMap$1:()Lscalaz/LazyOption;
      48: astore        4
      50: goto          62
      53: new           #2195               // class scala/MatchError
      56: dup
      57: aload_3
      58: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      61: athrow
      62: aload         4
      64: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_3
      33: aload         5
      35: invokestatic  #2249               // Method scalaz/LazyOption.$anonfun$orElse$1:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          70
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          61
      50: aload_2
      51: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      56: astore        4
      58: goto          70
      61: new           #2195               // class scala/MatchError
      64: dup
      65: aload_3
      66: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow
      70: aload         4
      72: checkcast     #2159               // class scalaz/LazyOption
      75: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #2159               // class scalaz/LazyOption
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_3
      12: instanceof    #2176               // class scalaz/LazySome
      15: ifeq          38
      18: aload_3
      19: checkcast     #2176               // class scalaz/LazySome
      22: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      25: astore        5
      27: aload_3
      28: aload         5
      30: invokestatic  #2249               // Method scalaz/LazyOption.$anonfun$orElse$1:(Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
      33: astore        4
      35: goto          65
      38: aload_3
      39: instanceof    #2164               // class scalaz/LazyNone
      42: ifeq          56
      45: aload_2
      46: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      51: astore        4
      53: goto          65
      56: new           #2195               // class scala/MatchError
      59: dup
      60: aload_3
      61: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload         4
      67: checkcast     #2159               // class scalaz/LazyOption
      70: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2159               // class scalaz/LazyOption
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: instanceof    #2176               // class scalaz/LazySome
      20: ifeq          43
      23: aload_3
      24: checkcast     #2176               // class scalaz/LazySome
      27: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      30: astore        5
      32: aload_2
      33: aload         5
      35: invokestatic  #2239               // Method scalaz/LazyOption.$anonfun$ap$1:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyOption;
      38: astore        4
      40: goto          67
      43: aload_3
      44: instanceof    #2164               // class scalaz/LazyNone
      47: ifeq          58
      50: invokestatic  #2242               // Method scalaz/LazyOption.$anonfun$ap$3:()Lscalaz/LazyOption;
      53: astore        4
      55: goto          67
      58: new           #2195               // class scala/MatchError
      61: dup
      62: aload_3
      63: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         4
      69: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2159               // class scalaz/LazyOption
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload         4
      15: instanceof    #2176               // class scalaz/LazySome
      18: ifeq          43
      21: aload         4
      23: checkcast     #2176               // class scalaz/LazySome
      26: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      29: astore        6
      31: aload_3
      32: aload_2
      33: aload         6
      35: invokestatic  #2230               // Method scalaz/LazyOption.$anonfun$foldRight$1:(Lscala/Function2;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      38: astore        5
      40: goto          72
      43: aload         4
      45: instanceof    #2164               // class scalaz/LazyNone
      48: ifeq          62
      51: aload_2
      52: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      57: astore        5
      59: goto          72
      62: new           #2195               // class scala/MatchError
      65: dup
      66: aload         4
      68: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      71: athrow
      72: aload         5
      74: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #2159               // class scalaz/LazyOption
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokedynamic #2209,  0           // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
      14: astore        5
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload         4
      23: instanceof    #2176               // class scalaz/LazySome
      26: ifeq          52
      29: aload         4
      31: checkcast     #2176               // class scalaz/LazySome
      34: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      37: astore        7
      39: aload_3
      40: aload         5
      42: aload         7
      44: invokestatic  #2216               // Method scalaz/LazyOption.$anonfun$traverse$1:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
      47: astore        6
      49: goto          79
      52: aload         4
      54: instanceof    #2164               // class scalaz/LazyNone
      57: ifeq          69
      60: aload_3
      61: invokestatic  #2220               // Method scalaz/LazyOption.$anonfun$traverse$4:(Lscalaz/Applicative;)Ljava/lang/Object;
      64: astore        6
      66: goto          79
      69: new           #2195               // class scala/MatchError
      72: dup
      73: aload         4
      75: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow
      79: aload         6
      81: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2159               // class scalaz/LazyOption
       5: invokevirtual #2134               // Method cojoin:(Lscalaz/LazyOption;)Lscalaz/LazyOption;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2159               // class scalaz/LazyOption
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #2134               // Method cojoin:(Lscalaz/LazyOption;)Lscalaz/LazyOption;
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_0
      16: aload_2
      17: invokedynamic #2154,  0           // InvokeDynamic #0:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      22: invokeinterface #2157,  3         // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: checkcast     #2159               // class scalaz/LazyOption
      30: areturn

  public static final scalaz.LazySome $anonfun$cojoin$1(scalaz.LazySome);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverseImpl$1(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static final scalaz.LazyOption $anonfun$bind$1(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #2159               // class scalaz/LazyOption
      15: areturn

  public static final java.lang.Object $anonfun$cozip$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$cozip$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.$bslash$div $anonfun$cozip$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2277               // class scalaz/$bslash$div
       9: astore_2
      10: aload_2
      11: instanceof    #2343               // class scalaz/$minus$bslash$div
      14: ifeq          60
      17: aload_2
      18: checkcast     #2343               // class scalaz/$minus$bslash$div
      21: invokevirtual #2345               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      24: astore_3
      25: getstatic     #2392               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      28: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      31: aload_3
      32: invokedynamic #2396,  0           // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function0;
      37: astore        5
      39: ifnonnull     44
      42: aconst_null
      43: athrow
      44: new           #2176               // class scalaz/LazySome
      47: dup
      48: aload         5
      50: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      53: invokevirtual #2398               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      56: astore_1
      57: goto          121
      60: aload_2
      61: instanceof    #2332               // class scalaz/$bslash$div$minus
      64: ifeq          112
      67: aload_2
      68: checkcast     #2332               // class scalaz/$bslash$div$minus
      71: invokevirtual #2334               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      74: astore        4
      76: getstatic     #2403               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      79: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
      82: aload         4
      84: invokedynamic #2407,  0           // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      89: astore        6
      91: ifnonnull     96
      94: aconst_null
      95: athrow
      96: new           #2176               // class scalaz/LazySome
      99: dup
     100: aload         6
     102: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
     105: invokevirtual #2408               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     108: astore_1
     109: goto          121
     112: new           #2195               // class scala/MatchError
     115: dup
     116: aload_2
     117: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow
     121: aload_1
     122: areturn

  public static final scalaz.$bslash$div $anonfun$cozip$4();
    Code:
       0: getstatic     #2392               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       6: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
       9: invokevirtual #2398               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      12: areturn

  public static final scalaz.$bslash$amp$div$Both $anonfun$alignWith$4(scala.Function0, scala.Function0);
    Code:
       0: new           #42                 // class scalaz/$bslash$amp$div$Both
       3: dup
       4: aload_0
       5: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: invokespecial #2415               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: areturn

  public static final scalaz.$bslash$amp$div$This $anonfun$alignWith$5(scala.Function0);
    Code:
       0: new           #50                 // class scalaz/$bslash$amp$div$This
       3: dup
       4: aload_0
       5: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: invokespecial #2418               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      13: areturn

  public static final java.lang.Object $anonfun$alignWith$3(scala.Function1, scalaz.LazyOption, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     7
       5: aconst_null
       6: athrow
       7: aload_1
       8: instanceof    #2176               // class scalaz/LazySome
      11: ifeq          33
      14: aload_1
      15: checkcast     #2176               // class scalaz/LazySome
      18: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokestatic  #2424               // Method $anonfun$alignWith$4:(Lscala/Function0;Lscala/Function0;)Lscalaz/$bslash$amp$div$Both;
      29: astore_3
      30: goto          57
      33: aload_1
      34: instanceof    #2164               // class scalaz/LazyNone
      37: ifeq          48
      40: aload_2
      41: invokestatic  #2426               // Method $anonfun$alignWith$5:(Lscala/Function0;)Lscalaz/$bslash$amp$div$This;
      44: astore_3
      45: goto          57
      48: new           #2195               // class scala/MatchError
      51: dup
      52: aload_1
      53: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      56: athrow
      57: aload_3
      58: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      63: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$2(scala.Function1, scalaz.LazyOption, scala.Function0);
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #2435,  0           // InvokeDynamic #7:apply:(Lscala/Function1;Lscalaz/LazyOption;Lscala/Function0;)Lscala/Function0;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2176               // class scalaz/LazySome
      20: dup
      21: aload_3
      22: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      25: areturn

  public static final java.lang.Object $anonfun$alignWith$8(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: new           #47                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: invokespecial #2438               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      14: invokeinterface #2330,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$7(scala.Function1, scala.Function0);
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2445,  0           // InvokeDynamic #8:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function0;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #2176               // class scalaz/LazySome
      19: dup
      20: aload_2
      21: invokespecial #2193               // Method scalaz/LazySome."<init>":(Lscala/Function0;)V
      24: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$9();
    Code:
       0: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
       6: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$6(scalaz.LazyOption, scala.Function1);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          30
      13: aload_0
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore_3
      21: aload_1
      22: aload_3
      23: invokestatic  #2449               // Method $anonfun$alignWith$7:(Lscala/Function1;Lscala/Function0;)Lscalaz/LazyOption;
      26: astore_2
      27: goto          53
      30: aload_0
      31: instanceof    #2164               // class scalaz/LazyNone
      34: ifeq          44
      37: invokestatic  #2451               // Method $anonfun$alignWith$9:()Lscalaz/LazyOption;
      40: astore_2
      41: goto          53
      44: new           #2195               // class scala/MatchError
      47: dup
      48: aload_0
      49: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow
      53: aload_2
      54: areturn

  public static final scalaz.LazyOption $anonfun$alignWith$1(scala.Function1, scalaz.LazyOption, scalaz.LazyOption);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #2176               // class scalaz/LazySome
      10: ifeq          33
      13: aload_1
      14: checkcast     #2176               // class scalaz/LazySome
      17: invokevirtual #2212               // Method scalaz/LazySome.a:()Lscala/Function0;
      20: astore        4
      22: aload_0
      23: aload_2
      24: aload         4
      26: invokestatic  #2453               // Method $anonfun$alignWith$2:(Lscala/Function1;Lscalaz/LazyOption;Lscala/Function0;)Lscalaz/LazyOption;
      29: astore_3
      30: goto          58
      33: aload_1
      34: instanceof    #2164               // class scalaz/LazyNone
      37: ifeq          49
      40: aload_2
      41: aload_0
      42: invokestatic  #2455               // Method $anonfun$alignWith$6:(Lscalaz/LazyOption;Lscala/Function1;)Lscalaz/LazyOption;
      45: astore_3
      46: goto          58
      49: new           #2195               // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: areturn

  public static final scalaz.$bslash$div $anonfun$pextract$1(scala.Function0);
    Code:
       0: getstatic     #2403               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokeinterface #2234,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #2408               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      12: areturn

  public static final scalaz.$bslash$div $anonfun$pextract$2();
    Code:
       0: getstatic     #2392               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: getstatic     #2170               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       6: invokevirtual #2174               // Method scalaz/LazyOption$.lazyNone:()Lscalaz/LazyOption;
       9: invokevirtual #2398               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      12: areturn

  public static final java.lang.Object $anonfun$tailrecM$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public scalaz.LazyOptionInstances$$anon$1(scalaz.LazyOptionInstances);
    Code:
       0: aload_0
       1: invokespecial #2461               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2465               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2468               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2471               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2474               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2477               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      24: aload_0
      25: invokestatic  #2480               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      28: aload_0
      29: invokestatic  #2483               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      32: aload_0
      33: invokestatic  #2486               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      36: aload_0
      37: invokestatic  #2489               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      40: aload_0
      41: invokestatic  #2492               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      44: aload_0
      45: invokestatic  #2495               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      48: aload_0
      49: invokestatic  #2498               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      52: aload_0
      53: invokestatic  #2501               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      56: aload_0
      57: invokestatic  #2504               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      60: aload_0
      61: invokestatic  #2507               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      64: aload_0
      65: invokestatic  #2510               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      68: aload_0
      69: invokestatic  #2513               // InterfaceMethod scalaz/Cozip.$init$:(Lscalaz/Cozip;)V
      72: aload_0
      73: invokestatic  #2516               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2519               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2522               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      84: aload_0
      85: invokestatic  #2525               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      88: aload_0
      89: invokestatic  #2528               // InterfaceMethod scalaz/Optional.$init$:(Lscalaz/Optional;)V
      92: aload_0
      93: invokestatic  #2531               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      96: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2563,  0           // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
