Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$6 implements scalaz.Order<scalaz.CorecursiveList<A>>, scalaz.CorecursiveListEqual<A> {
  private final scalaz.Order<A> A;

  private final scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>> equalSyntax;

  public boolean equal(scalaz.CorecursiveList<A>, scalaz.CorecursiveList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/CorecursiveListEqual.equal$:(Lscalaz/CorecursiveListEqual;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #88                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.CorecursiveList<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.CorecursiveList<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.CorecursiveList<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.CorecursiveList<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #154                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #162                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #162                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> A();
    Code:
       0: aload_0
       1: getfield      #168                // Field A:Lscalaz/Order;
       4: areturn

  public scalaz.Ordering order(scalaz.CorecursiveList<A>, scalaz.CorecursiveList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #177                // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       5: aload_2
       6: invokevirtual #177                // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokespecial #181                // Method rec$4:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Ordering;
      14: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #30                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #186                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #173                // class scalaz/CorecursiveList
       5: aload_2
       6: checkcast     #173                // class scalaz/CorecursiveList
       9: invokevirtual #188                // Method equal:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #173                // class scalaz/CorecursiveList
       5: aload_2
       6: checkcast     #173                // class scalaz/CorecursiveList
       9: invokevirtual #190                // Method order:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal A();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method A:()Lscalaz/Order;
       4: areturn

  private final scalaz.Ordering rec$4(java.lang.Object, java.lang.Object, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: aload_3
       1: invokevirtual #201                // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #206,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: aload         4
      12: invokevirtual #201                // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      15: aload_2
      16: invokeinterface #206,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore        19
      23: astore        18
      25: aload         18
      27: checkcast     #24                 // class scalaz/Maybe
      30: astore        7
      32: aload         19
      34: checkcast     #24                 // class scalaz/Maybe
      37: astore        8
      39: aload         7
      41: instanceof    #22                 // class scalaz/Maybe$Empty
      44: ifeq          75
      47: aload         8
      49: instanceof    #22                 // class scalaz/Maybe$Empty
      52: ifeq          63
      55: getstatic     #210                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      58: astore        6
      60: goto          68
      63: getstatic     #213                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      66: astore        6
      68: aload         6
      70: astore        5
      72: goto          216
      75: aload         18
      77: checkcast     #24                 // class scalaz/Maybe
      80: astore        9
      82: aload         19
      84: checkcast     #24                 // class scalaz/Maybe
      87: astore        10
      89: aload         9
      91: instanceof    #27                 // class scalaz/Maybe$Just
      94: ifeq          211
      97: aload         9
      99: checkcast     #27                 // class scalaz/Maybe$Just
     102: invokevirtual #216                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     105: checkcast     #218                // class scala/Tuple2
     108: astore        11
     110: aload         11
     112: ifnull        211
     115: aload         11
     117: invokevirtual #221                // Method scala/Tuple2._1:()Ljava/lang/Object;
     120: astore        12
     122: aload         11
     124: invokevirtual #224                // Method scala/Tuple2._2:()Ljava/lang/Object;
     127: astore        13
     129: aload         10
     131: instanceof    #27                 // class scalaz/Maybe$Just
     134: ifeq          211
     137: aload         10
     139: checkcast     #27                 // class scalaz/Maybe$Just
     142: invokevirtual #216                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     145: checkcast     #218                // class scala/Tuple2
     148: astore        14
     150: aload         14
     152: ifnull        211
     155: aload         14
     157: invokevirtual #221                // Method scala/Tuple2._1:()Ljava/lang/Object;
     160: astore        15
     162: aload         14
     164: invokevirtual #224                // Method scala/Tuple2._2:()Ljava/lang/Object;
     167: astore        16
     169: aload_0
     170: invokevirtual #193                // Method A:()Lscalaz/Order;
     173: aload         13
     175: aload         16
     177: invokeinterface #226,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     182: astore        17
     184: getstatic     #210                // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
     187: aload         17
     189: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     192: ifeq          204
     195: aload         12
     197: aload         15
     199: astore_2
     200: astore_1
     201: goto          0
     204: aload         17
     206: astore        5
     208: goto          216
     211: getstatic     #233                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
     214: astore        5
     216: aload         5
     218: areturn

  public scalaz.CorecursiveList$$anon$6(scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #244                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #248                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
       8: aload_0
       9: invokestatic  #250                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      12: aload_0
      13: invokestatic  #253                // InterfaceMethod scalaz/CorecursiveListEqual.$init$:(Lscalaz/CorecursiveListEqual;)V
      16: aload_0
      17: getstatic     #258                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: aload_1
      26: putfield      #168                // Field A:Lscalaz/Order;
      29: return
}
