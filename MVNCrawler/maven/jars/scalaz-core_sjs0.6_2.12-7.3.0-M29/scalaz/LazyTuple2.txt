Compiled from "LazyTuple.scala"
public abstract class scalaz.LazyTuple2<A, B> {
  public static <A, B> scalaz.LazyTuple2<A, B> apply(scala.Function0<A>, scala.Function0<B>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #11                 // class scalaz/LazyTuple2$$anon$1
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #26                 // Method scalaz/LazyTuple2$$anon$1."<init>":(Lscala/Function0;Lscala/Function0;)V
      17: areturn

  public static <A1> scalaz.Monad<?> lazyTuple2Monad(scalaz.Monoid<A1>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: invokevirtual #32                 // Method scalaz/LazyTuple2$.lazyTuple2Monad:(Lscalaz/Monoid;)Lscalaz/Monad;
       7: areturn

  public static <A1, A2> scalaz.Monoid<scalaz.LazyTuple2<A1, A2>> lazyTuple2Monoid(scalaz.Monoid<A1>, scalaz.Monoid<A2>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #38                 // Method scalaz/LazyTuple2$.lazyTuple2Monoid:(Lscalaz/Monoid;Lscalaz/Monoid;)Lscalaz/Monoid;
       8: areturn

  public static <A1, A2> scalaz.Order<scalaz.LazyTuple2<A1, A2>> lazyTuple2Order(scalaz.Order<A1>, scalaz.Order<A2>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #43                 // Method scalaz/LazyTuple2$.lazyTuple2Order:(Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
       8: areturn

  public static <A1, A2> scalaz.Show<scalaz.LazyTuple2<A1, A2>> lazyTuple2Show(scalaz.Show<A1>, scalaz.Show<A2>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #48                 // Method scalaz/LazyTuple2$.lazyTuple2Show:(Lscalaz/Show;Lscalaz/Show;)Lscalaz/Show;
       8: areturn

  public static scalaz.Associative<scalaz.LazyTuple2> lazyTuple2Associative();
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: invokevirtual #53                 // Method scalaz/LazyTuple2$.lazyTuple2Associative:()Lscalaz/Associative;
       6: areturn

  public static <A1> scalaz.Functor<?> lazyTuple2Functor();
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: invokevirtual #58                 // Method scalaz/LazyTuple2$.lazyTuple2Functor:()Lscalaz/Functor;
       6: areturn

  public static <A1, A2> scalaz.Semigroup<scalaz.LazyTuple2<A1, A2>> lazyTuple2Semigroup(scalaz.Semigroup<A1>, scalaz.Semigroup<A2>);
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: aload_1
       5: invokevirtual #63                 // Method scalaz/LazyTuple2$.lazyTuple2Semigroup:(Lscalaz/Semigroup;Lscalaz/Semigroup;)Lscalaz/Semigroup;
       8: areturn

  public static scalaz.Bitraverse<scalaz.LazyTuple2> lazyTuple2Instance();
    Code:
       0: getstatic     #22                 // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: invokevirtual #68                 // Method scalaz/LazyTuple2$.lazyTuple2Instance:()Lscalaz/Bitraverse;
       6: areturn

  public abstract A _1();

  public abstract B _2();

  public scalaz.LazyTuple2();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method java/lang/Object."<init>":()V
       4: return
}
