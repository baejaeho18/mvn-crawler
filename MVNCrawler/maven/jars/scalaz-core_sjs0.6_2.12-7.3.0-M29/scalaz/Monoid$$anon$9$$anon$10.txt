Compiled from "Monoid.scala"
public final class scalaz.Monoid$$anon$9$$anon$10 implements scalaz.Monoid<B> {
  private final scalaz.syntax.MonoidSyntax<B> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<B> semigroupSyntax;

  private final scala.Function1 f$2;

  private final scalaz.Monoid ma$1;

  private final scala.Function1 g$1;

  public B multiply(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #46                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(B, scalaz.Equal<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final <B> B ifEmpty(B, scala.Function0<B>, scala.Function0<B>, scalaz.Equal<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #69                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final <B> B onNotEmpty(B, scala.Function0<B>, scalaz.Equal<B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #79                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final <A, B> B onEmpty(B, scala.Function0<B>, scalaz.Equal<B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #84                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <S> B unfoldlSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <S> B unfoldrSum(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<B, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #97                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<B>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #118                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public B multiply1(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #123                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<B> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<B> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<B, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<B>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #156                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<B> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #160                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<B>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<B> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #168                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<B>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #168                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public B zero();
    Code:
       0: aload_0
       1: getfield      #176                // Field f$2:Lscala/Function1;
       4: aload_0
       5: getfield      #178                // Field ma$1:Lscalaz/Monoid;
       8: invokeinterface #180,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      13: invokeinterface #185,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public B append(B, scala.Function0<B>);
    Code:
       0: aload_0
       1: getfield      #176                // Field f$2:Lscala/Function1;
       4: aload_0
       5: getfield      #178                // Field ma$1:Lscalaz/Monoid;
       8: aload_0
       9: getfield      #192                // Field g$1:Lscala/Function1;
      12: aload_1
      13: invokeinterface #185,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_0
      19: aload_2
      20: invokedynamic #212,  0            // InvokeDynamic #0:apply:(Lscalaz/Monoid$$anon$9$$anon$10;Lscala/Function0;)Lscala/Function0;
      25: invokeinterface #214,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      30: invokeinterface #185,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  public static final java.lang.Object $anonfun$append$1(scalaz.Monoid$$anon$9$$anon$10, scala.Function0);
    Code:
       0: aload_0
       1: getfield      #192                // Field g$1:Lscala/Function1;
       4: aload_1
       5: invokeinterface #220,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: invokeinterface #185,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public scalaz.Monoid$$anon$9$$anon$10(scalaz.Monoid$$anon$9, scala.Function1, scalaz.Monoid, scala.Function1);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #176                // Field f$2:Lscala/Function1;
       5: aload_0
       6: aload_3
       7: putfield      #178                // Field ma$1:Lscalaz/Monoid;
      10: aload_0
      11: aload         4
      13: putfield      #192                // Field g$1:Lscala/Function1;
      16: aload_0
      17: invokespecial #226                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #230                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      24: aload_0
      25: invokestatic  #233                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      28: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #246,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
