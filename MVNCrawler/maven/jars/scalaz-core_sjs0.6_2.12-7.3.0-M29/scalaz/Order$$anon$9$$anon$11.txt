Compiled from "Order.scala"
public final class scalaz.Order$$anon$9$$anon$11 implements scalaz.Order<A> {
  private final scalaz.syntax.OrderSyntax<A> orderSyntax;

  private final scalaz.syntax.EqualSyntax<A> equalSyntax;

  private final scalaz.Order f1$2;

  private final scala.Function0 f2$1;

  public scalaz.Ordering apply(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean equal(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // InterfaceMethod scalaz/Order.equal$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThan(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public A max(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public A min(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<A, A> sort(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<A> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<A> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<A>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<A>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<A> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #138                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<A> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #146                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #146                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Ordering order(A, A);
    Code:
       0: getstatic     #156                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
       3: getstatic     #161                // Field scalaz/Ordering$.MODULE$:Lscalaz/Ordering$;
       6: invokevirtual #165                // Method scalaz/Ordering$.orderingInstance:()Lscalaz/Enum;
       9: checkcast     #167                // class scalaz/Semigroup
      12: astore_3
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: aload_3
      19: aload_0
      20: getfield      #169                // Field f1$2:Lscalaz/Order;
      23: aload_1
      24: aload_2
      25: invokeinterface #171,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokedynamic #194,  0            // InvokeDynamic #0:apply:(Lscalaz/Order$$anon$9$$anon$11;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      38: invokeinterface #197,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      43: checkcast     #199                // class scalaz/Ordering
      46: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #25                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #204                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public static final scalaz.Ordering $anonfun$order$1(scalaz.Order$$anon$9$$anon$11, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #209                // Field f2$1:Lscala/Function0;
       4: invokeinterface #213,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: checkcast     #7                  // class scalaz/Order
      12: aload_1
      13: aload_2
      14: invokeinterface #171,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      19: areturn

  public scalaz.Order$$anon$9$$anon$11(scalaz.Order$$anon$9, scalaz.Order, scala.Function0);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #169                // Field f1$2:Lscalaz/Order;
       5: aload_0
       6: aload_3
       7: putfield      #209                // Field f2$1:Lscala/Function0;
      10: aload_0
      11: invokespecial #218                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #222                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      18: aload_0
      19: invokestatic  #225                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      22: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #238,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
