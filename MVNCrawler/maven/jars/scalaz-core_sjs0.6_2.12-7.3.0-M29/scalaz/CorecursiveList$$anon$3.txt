Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$3 implements scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, scalaz.CorecursiveList> {
  public <E> scalaz.NaturalTransformation<E, scalaz.CorecursiveList> compose(scalaz.NaturalTransformation<E, scala.collection.immutable.LinearSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // InterfaceMethod scalaz/NaturalTransformation.compose$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, H> andThen(scalaz.NaturalTransformation<scalaz.CorecursiveList, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/NaturalTransformation.andThen$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<?, scalaz.CorecursiveList> or(scalaz.NaturalTransformation<H, scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod scalaz/NaturalTransformation.or$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <GG> scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, GG> widen(scalaz.LiskovF<scalaz.CorecursiveList, GG>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // InterfaceMethod scalaz/NaturalTransformation.widen$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <FF> scalaz.NaturalTransformation<FF, scalaz.CorecursiveList> narrow(scalaz.LiskovF<FF, scala.collection.immutable.LinearSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // InterfaceMethod scalaz/NaturalTransformation.narrow$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <A> scalaz.CorecursiveList<A> apply(scala.collection.immutable.LinearSeq<A>);
    Code:
       0: getstatic     #69                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: invokedynamic #91,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       8: astore_2
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: new           #17                 // class scalaz/CorecursiveList$CorecursiveListImpl
      17: dup
      18: aload_1
      19: aload_2
      20: invokespecial #95                 // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      23: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #102                // class scala/collection/immutable/LinearSeq
       5: invokevirtual #104                // Method apply:(Lscala/collection/immutable/LinearSeq;)Lscalaz/CorecursiveList;
       8: areturn

  public static final scalaz.Maybe $anonfun$apply$1(scala.collection.immutable.LinearSeq);
    Code:
       0: getstatic     #111                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #115                // Method scala/package$.$plus$colon:()Lscala/collection/$plus$colon$;
       6: aload_0
       7: invokevirtual #121                // Method scala/collection/$plus$colon$.unapply:(Lscala/collection/SeqLike;)Lscala/Option;
      10: astore_2
      11: aload_2
      12: invokevirtual #127                // Method scala/Option.isEmpty:()Z
      15: ifne          64
      18: aload_2
      19: invokevirtual #131                // Method scala/Option.get:()Ljava/lang/Object;
      22: checkcast     #133                // class scala/Tuple2
      25: invokevirtual #136                // Method scala/Tuple2._1:()Ljava/lang/Object;
      28: astore_3
      29: aload_2
      30: invokevirtual #131                // Method scala/Option.get:()Ljava/lang/Object;
      33: checkcast     #133                // class scala/Tuple2
      36: invokevirtual #139                // Method scala/Tuple2._2:()Ljava/lang/Object;
      39: checkcast     #102                // class scala/collection/immutable/LinearSeq
      42: astore        4
      44: getstatic     #144                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      47: new           #133                // class scala/Tuple2
      50: dup
      51: aload         4
      53: aload_3
      54: invokespecial #147                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      57: invokevirtual #151                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      60: astore_1
      61: goto          71
      64: getstatic     #154                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      67: invokevirtual #157                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      70: astore_1
      71: aload_1
      72: areturn

  public scalaz.CorecursiveList$$anon$3();
    Code:
       0: aload_0
       1: invokespecial #161                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #165                // InterfaceMethod scalaz/NaturalTransformation.$init$:(Lscalaz/NaturalTransformation;)V
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #177,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
