Compiled from "Decidable.scala"
public final class scalaz.Decidable$$anon$3 implements scalaz.IsomorphismDecidable<F, G> {
  private final scalaz.syntax.DecidableSyntax<F> decidableSyntax;

  private final scalaz.syntax.InvariantAltSyntax<F> invariantAltSyntax;

  private final scalaz.syntax.DivisibleSyntax<F> divisibleSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<F> invariantApplicativeSyntax;

  private final scalaz.syntax.DivideSyntax<F> divideSyntax;

  private final scalaz.syntax.ContravariantSyntax<F> contravariantSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<F> invariantFunctorSyntax;

  private final scalaz.Decidable E$1;

  private final scalaz.Isomorphisms$Iso2 D$1;

  public <Z, A1, A2> F choose2(scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #81                 // InterfaceMethod scalaz/IsomorphismDecidable.choose2$:(Lscalaz/IsomorphismDecidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <Z, A1> F xcoproduct1(scala.Function0<F>, scala.Function1<A1, Z>, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #93                 // InterfaceMethod scalaz/IsomorphismDecidable.xcoproduct1$:(Lscalaz/IsomorphismDecidable;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <Z, A1, A2> F xcoproduct2(scala.Function0<F>, scala.Function0<F>, scala.Function1<scalaz.$bslash$div<A1, A2>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #100                // InterfaceMethod scalaz/IsomorphismDecidable.xcoproduct2$:(Lscalaz/IsomorphismDecidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <Z, A1, A2, A3> F xcoproduct3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #108                // InterfaceMethod scalaz/IsomorphismDecidable.xcoproduct3$:(Lscalaz/IsomorphismDecidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <Z, A1, A2, A3, A4> F xcoproduct4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #116                // InterfaceMethod scalaz/IsomorphismDecidable.xcoproduct4$:(Lscalaz/IsomorphismDecidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public <A> F conquer();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/IsomorphismDivisible.conquer$:(Lscalaz/IsomorphismDivisible;)Ljava/lang/Object;
       4: areturn

  public <Z> F xproduct0(scala.Function0<Z>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // InterfaceMethod scalaz/IsomorphismDivisible.xproduct0$:(Lscalaz/IsomorphismDivisible;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public <Z, A1> F xproduct1(scala.Function0<F>, scala.Function1<A1, Z>, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #138                // InterfaceMethod scalaz/IsomorphismDivisible.xproduct1$:(Lscalaz/IsomorphismDivisible;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <Z, A1, A2> F xproduct2(scala.Function0<F>, scala.Function0<F>, scala.Function2<A1, A2, Z>, scala.Function1<Z, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #145                // InterfaceMethod scalaz/IsomorphismDivisible.xproduct2$:(Lscalaz/IsomorphismDivisible;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <Z, A1, A2, A3> F xproduct3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A1, A2, A3, Z>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #153                // InterfaceMethod scalaz/IsomorphismDivisible.xproduct3$:(Lscalaz/IsomorphismDivisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <Z, A1, A2, A3, A4> F xproduct4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A1, A2, A3, A4, Z>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #161                // InterfaceMethod scalaz/IsomorphismDivisible.xproduct4$:(Lscalaz/IsomorphismDivisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public <A, B, C> F divide2(scala.Function0<F>, scala.Function0<F>, scala.Function1<C, scala.Tuple2<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #172                // InterfaceMethod scalaz/IsomorphismDivide.divide2$:(Lscalaz/IsomorphismDivide;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <A, B> F contramap(F, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod scalaz/IsomorphismContravariant.contramap$:(Lscalaz/IsomorphismContravariant;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> F xmap(F, scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #193                // InterfaceMethod scalaz/IsomorphismInvariantFunctor.xmap$:(Lscalaz/IsomorphismInvariantFunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final <Z, A1, A2> F choose(scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #198                // InterfaceMethod scalaz/Decidable.choose$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <Z, A1> F choose1(scala.Function0<F>, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/Decidable.choose1$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <Z, A1, A2, A3> F choose3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #212                // InterfaceMethod scalaz/Decidable.choose3$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <Z, A1, A2, A3, A4> F choose4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #219                // InterfaceMethod scalaz/Decidable.choose4$:(Lscalaz/Decidable;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public final <Z, A1, A2> F choosing2(scala.Function1<Z, scalaz.$bslash$div<A1, A2>>, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #228                // InterfaceMethod scalaz/Decidable.choosing2$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final <Z, A1, A2, A3> F choosing3(scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>>, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #236                // InterfaceMethod scalaz/Decidable.choosing3$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final <Z, A1, A2, A3, A4> F choosing4(scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>>, F, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #244                // InterfaceMethod scalaz/Decidable.choosing4$:(Lscalaz/Decidable;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Decidable<F>.DecidableLaw decidableLaw();
    Code:
       0: aload_0
       1: invokestatic  #251                // InterfaceMethod scalaz/Decidable.decidableLaw$:(Lscalaz/Decidable;)Lscalaz/Decidable$DecidableLaw;
       4: areturn

  public final <Z, A1> F xcoderiving1(scala.Function1<A1, Z>, scala.Function1<Z, A1>, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #260                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final <Z, A1, A2> F xcoderiving2(scala.Function1<scalaz.$bslash$div<A1, A2>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, A2>>, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #267                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final <Z, A1, A2, A3> F xcoderiving3(scala.Function1<scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, A3>>>, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #274                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final <Z, A1, A2, A3, A4> F xcoderiving4(scala.Function1<scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>, Z>, scala.Function1<Z, scalaz.$bslash$div<A1, scalaz.$bslash$div<A2, scalaz.$bslash$div<A3, A4>>>>, F, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #281                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public scalaz.Divisible<F>.DivisibleLaw divisibleLaw();
    Code:
       0: aload_0
       1: invokestatic  #288                // InterfaceMethod scalaz/Divisible.divisibleLaw$:(Lscalaz/Divisible;)Lscalaz/Divisible$DivisibleLaw;
       4: areturn

  public final <Z> F xderiving0(scala.Function0<Z>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final <Z, A1> F xderiving1(scala.Function1<A1, Z>, scala.Function1<Z, A1>, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #300                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final <Z, A1, A2> F xderiving2(scala.Function2<A1, A2, Z>, scala.Function1<Z, scala.Tuple2<A1, A2>>, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #307                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final <Z, A1, A2, A3> F xderiving3(scala.Function3<A1, A2, A3, Z>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #314                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final <Z, A1, A2, A3, A4> F xderiving4(scala.Function4<A1, A2, A3, A4, Z>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>, F, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #321                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final <A, B, C> F divide(scala.Function0<F>, scala.Function0<F>, scala.Function1<C, scala.Tuple2<A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #326                // InterfaceMethod scalaz/Divide.divide$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public final <A1, Z> F divide1(F, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #332                // InterfaceMethod scalaz/Divide.divide1$:(Lscalaz/Divide;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A1, A2, A3, Z> F divide3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #338                // InterfaceMethod scalaz/Divide.divide3$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <A1, A2, A3, A4, Z> F divide4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #344                // InterfaceMethod scalaz/Divide.divide4$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <A1, A2> F tuple2(scala.Function0<F>, scala.Function0<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #351                // InterfaceMethod scalaz/Divide.tuple2$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final <A1, Z> F dividing1(scala.Function1<Z, A1>, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #358                // InterfaceMethod scalaz/Divide.dividing1$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final <A1, A2, Z> F dividing2(scala.Function1<Z, scala.Tuple2<A1, A2>>, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #364                // InterfaceMethod scalaz/Divide.dividing2$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final <A1, A2, A3, Z> F dividing3(scala.Function1<Z, scala.Tuple3<A1, A2, A3>>, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #370                // InterfaceMethod scalaz/Divide.dividing3$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final <A1, A2, A3, A4, Z> F dividing4(scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>, F, F, F, F);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #376                // InterfaceMethod scalaz/Divide.dividing4$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Divide<F>.DivideLaw divideLaw();
    Code:
       0: aload_0
       1: invokestatic  #383                // InterfaceMethod scalaz/Divide.divideLaw$:(Lscalaz/Divide;)Lscalaz/Divide$DivideLaw;
       4: areturn

  public <A, B> F narrow(F, scalaz.Liskov<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #391                // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<F>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #423                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public <A, B> F xmapb(F, scalaz.BijectionT<?, ?, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #431                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public <A, B> F xmapi(F, scalaz.Isomorphisms$Iso<scala.Function1, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #440                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<F>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #448                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.DecidableSyntax<F> decidableSyntax();
    Code:
       0: aload_0
       1: getfield      #452                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       4: areturn

  public void scalaz$Decidable$_setter_$decidableSyntax_$eq(scalaz.syntax.DecidableSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #452                // Field decidableSyntax:Lscalaz/syntax/DecidableSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<F> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #460                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #460                // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.DivisibleSyntax<F> divisibleSyntax();
    Code:
       0: aload_0
       1: getfield      #467                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       4: areturn

  public void scalaz$Divisible$_setter_$divisibleSyntax_$eq(scalaz.syntax.DivisibleSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #467                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<F> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #474                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #474                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.DivideSyntax<F> divideSyntax();
    Code:
       0: aload_0
       1: getfield      #481                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       4: areturn

  public void scalaz$Divide$_setter_$divideSyntax_$eq(scalaz.syntax.DivideSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #481                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       5: return

  public scalaz.syntax.ContravariantSyntax<F> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #488                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #488                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<F> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #495                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #495                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Decidable<G> G();
    Code:
       0: aload_0
       1: getfield      #503                // Field E$1:Lscalaz/Decidable;
       4: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #507                // Field D$1:Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public scalaz.InvariantFunctor G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.Contravariant G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.Divide G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.InvariantApplicative G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.Divisible G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.InvariantAlt G();
    Code:
       0: aload_0
       1: invokevirtual #510                // Method G:()Lscalaz/Decidable;
       4: areturn

  public scalaz.Decidable$$anon$3(scalaz.Decidable, scalaz.Isomorphisms$Iso2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #503                // Field E$1:Lscalaz/Decidable;
       5: aload_0
       6: aload_2
       7: putfield      #507                // Field D$1:Lscalaz/Isomorphisms$Iso2;
      10: aload_0
      11: invokespecial #520                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #524                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      18: aload_0
      19: invokestatic  #527                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      22: aload_0
      23: invokestatic  #530                // InterfaceMethod scalaz/Divide.$init$:(Lscalaz/Divide;)V
      26: aload_0
      27: invokestatic  #533                // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      30: aload_0
      31: invokestatic  #536                // InterfaceMethod scalaz/Divisible.$init$:(Lscalaz/Divisible;)V
      34: aload_0
      35: invokestatic  #539                // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      38: aload_0
      39: invokestatic  #542                // InterfaceMethod scalaz/Decidable.$init$:(Lscalaz/Decidable;)V
      42: aload_0
      43: invokestatic  #545                // InterfaceMethod scalaz/IsomorphismInvariantFunctor.$init$:(Lscalaz/IsomorphismInvariantFunctor;)V
      46: aload_0
      47: invokestatic  #548                // InterfaceMethod scalaz/IsomorphismContravariant.$init$:(Lscalaz/IsomorphismContravariant;)V
      50: aload_0
      51: invokestatic  #551                // InterfaceMethod scalaz/IsomorphismDivide.$init$:(Lscalaz/IsomorphismDivide;)V
      54: aload_0
      55: invokestatic  #556                // InterfaceMethod scalaz/IsomorphismInvariantApplicative.$init$:(Lscalaz/IsomorphismInvariantApplicative;)V
      58: aload_0
      59: invokestatic  #559                // InterfaceMethod scalaz/IsomorphismDivisible.$init$:(Lscalaz/IsomorphismDivisible;)V
      62: aload_0
      63: invokestatic  #564                // InterfaceMethod scalaz/IsomorphismInvariantAlt.$init$:(Lscalaz/IsomorphismInvariantAlt;)V
      66: aload_0
      67: invokestatic  #567                // InterfaceMethod scalaz/IsomorphismDecidable.$init$:(Lscalaz/IsomorphismDecidable;)V
      70: return
}
