Compiled from "ImmutableArray.scala"
public final class scalaz.ImmutableArrayInstances$$anon$1 implements scalaz.Foldable<scalaz.ImmutableArray>, scalaz.Zip<scalaz.ImmutableArray> {
  private final scalaz.syntax.ZipSyntax<scalaz.ImmutableArray> zipSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.ImmutableArray> foldableSyntax;

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.ImmutableArray>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #72                 // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #88                 // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.ImmutableArray> ap(scalaz.Functor<scalaz.ImmutableArray>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.ImmutableArray>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #109                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #117                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #144                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #151                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #159                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #167                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #174                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #180                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #187                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #194                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #200                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #220                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #226                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #232                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #238                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #244                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #248                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #256                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #262                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #266                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #273                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #277                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #295                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #302                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #320                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #337                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #341                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #347                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #354                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #362                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #367                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #372                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #377                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #382                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #392                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #397                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #402                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #406                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #410                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #414                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #420                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #427                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #431                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #435                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #441                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #448                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #456                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #463                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #469                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #476                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #483                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #487                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #493                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #499                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #504                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #511                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.ImmutableArray>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #519                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public scalaz.syntax.ZipSyntax<scalaz.ImmutableArray> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #523                // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.ImmutableArray>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #523                // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.ImmutableArray> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #531                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.ImmutableArray>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #531                // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public <A, B> B foldLeft(scalaz.ImmutableArray<A>, B, scala.Function2<B, A, B>);
    Code:
       0: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       3: aload_1
       4: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
       7: aload_2
       8: aload_3
       9: invokevirtual #550                // Method scalaz/ImmutableArray$WrappedImmutableArray.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: areturn

  public <A, B> B foldMap(scalaz.ImmutableArray<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: iconst_0
       1: invokestatic  #560                // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
       4: astore        4
       6: aload_3
       7: invokeinterface #566,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      12: astore        5
      14: aload         4
      16: getfield      #569                // Field scala/runtime/IntRef.elem:I
      19: aload_1
      20: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
      23: if_icmpge     60
      26: aload_3
      27: aload         5
      29: aload_2
      30: aload_1
      31: aload         4
      33: invokedynamic #594,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/ImmutableArray;Lscala/runtime/IntRef;)Lscala/Function0;
      38: invokeinterface #598,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      43: astore        5
      45: aload         4
      47: aload         4
      49: getfield      #569                // Field scala/runtime/IntRef.elem:I
      52: iconst_1
      53: iadd
      54: putfield      #569                // Field scala/runtime/IntRef.elem:I
      57: goto          14
      60: aload         5
      62: areturn

  public <A, B> B foldRight(scalaz.ImmutableArray<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       3: aload_1
       4: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
       7: aload_2
       8: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      13: aload_3
      14: invokedynamic #617,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      19: invokevirtual #619                // Method scalaz/ImmutableArray$WrappedImmutableArray.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      22: areturn

  public <A, B> scalaz.ImmutableArray<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.ImmutableArray<A>>, scala.Function0<scalaz.ImmutableArray<B>>);
    Code:
       0: aload_1
       1: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #29                 // class scalaz/ImmutableArray
       9: astore_3
      10: aload_3
      11: invokevirtual #626                // Method scalaz/ImmutableArray.isEmpty:()Z
      14: ifeq          46
      17: new           #32                 // class scalaz/ImmutableArray$ofRef
      20: dup
      21: getstatic     #631                // Field scala/Array$.MODULE$:Lscala/Array$;
      24: getstatic     #636                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      27: getstatic     #641                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      30: ldc_w         #643                // class scala/Tuple2
      33: invokevirtual #646                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      36: invokevirtual #649                // Method scala/Array$.apply:(Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      39: checkcast     #651                // class "[Ljava/lang/Object;"
      42: invokespecial #655                // Method scalaz/ImmutableArray$ofRef."<init>":([Ljava/lang/Object;)V
      45: areturn
      46: new           #32                 // class scalaz/ImmutableArray$ofRef
      49: dup
      50: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
      53: aload_3
      54: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      57: invokevirtual #659                // Method scalaz/ImmutableArray$WrappedImmutableArray.iterator:()Lscala/collection/Iterator;
      60: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
      63: aload_2
      64: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      69: checkcast     #29                 // class scalaz/ImmutableArray
      72: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      75: invokevirtual #659                // Method scalaz/ImmutableArray$WrappedImmutableArray.iterator:()Lscala/collection/Iterator;
      78: invokeinterface #664,  2          // InterfaceMethod scala/collection/Iterator.zip:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
      83: getstatic     #641                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      86: ldc_w         #643                // class scala/Tuple2
      89: invokevirtual #646                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      92: invokeinterface #668,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      97: checkcast     #651                // class "[Ljava/lang/Object;"
     100: invokespecial #655                // Method scalaz/ImmutableArray$ofRef."<init>":([Ljava/lang/Object;)V
     103: areturn

  public <A> scala.Option<A> index(scalaz.ImmutableArray<A>, int);
    Code:
       0: iconst_0
       1: iload_2
       2: if_icmpgt     26
       5: iload_2
       6: aload_1
       7: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
      10: if_icmpge     26
      13: new           #674                // class scala/Some
      16: dup
      17: aload_1
      18: iload_2
      19: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      22: invokespecial #680                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      25: areturn
      26: getstatic     #685                // Field scala/None$.MODULE$:Lscala/None$;
      29: areturn

  public <A> int length(scalaz.ImmutableArray<A>);
    Code:
       0: aload_1
       1: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
       4: ireturn

  public <A> boolean empty(scalaz.ImmutableArray<A>);
    Code:
       0: aload_1
       1: invokevirtual #626                // Method scalaz/ImmutableArray.isEmpty:()Z
       4: ireturn

  public <A> boolean all(scalaz.ImmutableArray<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     43
      14: aload_2
      15: aload_1
      16: iload         4
      18: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      21: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      29: ifeq          41
      32: iload         4
      34: iconst_1
      35: iadd
      36: istore        4
      38: goto          8
      41: iconst_0
      42: ireturn
      43: iconst_1
      44: ireturn

  public <A> boolean any(scalaz.ImmutableArray<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     43
      14: aload_2
      15: aload_1
      16: iload         4
      18: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      21: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      29: ifne          41
      32: iload         4
      34: iconst_1
      35: iadd
      36: istore        4
      38: goto          8
      41: iconst_1
      42: ireturn
      43: iconst_0
      44: ireturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #29                 // class scalaz/ImmutableArray
       4: astore_3
       5: aload_3
       6: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     50
      21: aload_2
      22: aload_3
      23: iload         5
      25: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      28: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      36: ifne          48
      39: iload         5
      41: iconst_1
      42: iadd
      43: istore        5
      45: goto          14
      48: iconst_1
      49: ireturn
      50: iconst_0
      51: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #29                 // class scalaz/ImmutableArray
       4: astore_3
       5: aload_3
       6: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     50
      21: aload_2
      22: aload_3
      23: iload         5
      25: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      28: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      36: ifeq          48
      39: iload         5
      41: iconst_1
      42: iadd
      43: istore        5
      45: goto          14
      48: iconst_0
      49: ireturn
      50: iconst_1
      51: ireturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scalaz/ImmutableArray
       5: invokevirtual #717                // Method empty:(Lscalaz/ImmutableArray;)Z
       8: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scalaz/ImmutableArray
       5: invokevirtual #719                // Method length:(Lscalaz/ImmutableArray;)I
       8: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class scalaz/ImmutableArray
       5: iload_2
       6: invokevirtual #722                // Method index:(Lscalaz/ImmutableArray;I)Lscala/Option;
       9: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #29                 // class scalaz/ImmutableArray
       9: astore_3
      10: aload_3
      11: invokevirtual #626                // Method scalaz/ImmutableArray.isEmpty:()Z
      14: ifeq          46
      17: new           #32                 // class scalaz/ImmutableArray$ofRef
      20: dup
      21: getstatic     #631                // Field scala/Array$.MODULE$:Lscala/Array$;
      24: getstatic     #636                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      27: getstatic     #641                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      30: ldc_w         #643                // class scala/Tuple2
      33: invokevirtual #646                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      36: invokevirtual #649                // Method scala/Array$.apply:(Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      39: checkcast     #651                // class "[Ljava/lang/Object;"
      42: invokespecial #655                // Method scalaz/ImmutableArray$ofRef."<init>":([Ljava/lang/Object;)V
      45: areturn
      46: new           #32                 // class scalaz/ImmutableArray$ofRef
      49: dup
      50: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
      53: aload_3
      54: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      57: invokevirtual #659                // Method scalaz/ImmutableArray$WrappedImmutableArray.iterator:()Lscala/collection/Iterator;
      60: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
      63: aload_2
      64: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      69: checkcast     #29                 // class scalaz/ImmutableArray
      72: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      75: invokevirtual #659                // Method scalaz/ImmutableArray$WrappedImmutableArray.iterator:()Lscala/collection/Iterator;
      78: invokeinterface #664,  2          // InterfaceMethod scala/collection/Iterator.zip:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
      83: getstatic     #641                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      86: ldc_w         #643                // class scala/Tuple2
      89: invokevirtual #646                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      92: invokeinterface #668,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      97: checkcast     #651                // class "[Ljava/lang/Object;"
     100: invokespecial #655                // Method scalaz/ImmutableArray$ofRef."<init>":([Ljava/lang/Object;)V
     103: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #29                 // class scalaz/ImmutableArray
       4: astore        4
       6: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       9: aload         4
      11: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      14: aload_2
      15: invokeinterface #607,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      20: aload_3
      21: invokedynamic #617,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      26: invokevirtual #619                // Method scalaz/ImmutableArray$WrappedImmutableArray.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      29: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #29                 // class scalaz/ImmutableArray
       4: astore        4
       6: iconst_0
       7: invokestatic  #560                // Method scala/runtime/IntRef.create:(I)Lscala/runtime/IntRef;
      10: astore        5
      12: aload_3
      13: invokeinterface #566,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      18: astore        6
      20: aload         5
      22: getfield      #569                // Field scala/runtime/IntRef.elem:I
      25: aload         4
      27: invokevirtual #573                // Method scalaz/ImmutableArray.length:()I
      30: if_icmpge     68
      33: aload_3
      34: aload         6
      36: aload_2
      37: aload         4
      39: aload         5
      41: invokedynamic #594,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Lscalaz/ImmutableArray;Lscala/runtime/IntRef;)Lscala/Function0;
      46: invokeinterface #598,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      51: astore        6
      53: aload         5
      55: aload         5
      57: getfield      #569                // Field scala/runtime/IntRef.elem:I
      60: iconst_1
      61: iadd
      62: putfield      #569                // Field scala/runtime/IntRef.elem:I
      65: goto          20
      68: aload         6
      70: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #29                 // class scalaz/ImmutableArray
       4: astore        4
       6: getstatic     #543                // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       9: aload         4
      11: invokevirtual #547                // Method scalaz/ImmutableArray$.wrapArray:(Lscalaz/ImmutableArray;)Lscalaz/ImmutableArray$WrappedImmutableArray;
      14: aload_2
      15: aload_3
      16: invokevirtual #550                // Method scalaz/ImmutableArray$WrappedImmutableArray.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      19: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scala.Function1, scalaz.ImmutableArray, scala.runtime.IntRef);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getfield      #569                // Field scala/runtime/IntRef.elem:I
       6: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
       9: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #743,  0            // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #747,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  private final boolean loop$1(int, int, scala.Function1, scalaz.ImmutableArray);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     32
       5: aload_3
       6: aload         4
       8: iload_1
       9: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      12: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      20: ifeq          30
      23: iload_1
      24: iconst_1
      25: iadd
      26: istore_1
      27: goto          0
      30: iconst_0
      31: ireturn
      32: iconst_1
      33: ireturn

  private final boolean loop$2(int, int, scala.Function1, scalaz.ImmutableArray);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     32
       5: aload_3
       6: aload         4
       8: iload_1
       9: invokevirtual #677                // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
      12: invokeinterface #698,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: invokestatic  #704                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      20: ifne          30
      23: iload_1
      24: iconst_1
      25: iadd
      26: istore_1
      27: goto          0
      30: iconst_1
      31: ireturn
      32: iconst_0
      33: ireturn

  public scalaz.ImmutableArrayInstances$$anon$1(scalaz.ImmutableArrayInstances);
    Code:
       0: aload_0
       1: invokespecial #761                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #765                // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
       8: aload_0
       9: invokestatic  #768                // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      12: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #781,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
