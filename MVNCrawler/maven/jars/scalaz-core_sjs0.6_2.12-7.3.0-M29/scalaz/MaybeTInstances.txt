Compiled from "MaybeT.scala"
public abstract class scalaz.MaybeTInstances extends scalaz.MaybeTInstances0 {
  private final scalaz.Hoist<scalaz.MaybeT> maybeTMonadTrans;

  public scalaz.Hoist<scalaz.MaybeT> maybeTMonadTrans();
    Code:
       0: aload_0
       1: getfield      #26                 // Field maybeTMonadTrans:Lscalaz/Hoist;
       4: areturn

  public <F> scalaz.Traverse<?> maybeTTraverse(scalaz.Traverse<F>);
    Code:
       0: new           #17                 // class scalaz/MaybeTInstances$$anon$7
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #36                 // Method scalaz/MaybeTInstances$$anon$7."<init>":(Lscalaz/MaybeTInstances;Lscalaz/Traverse;)V
       9: areturn

  public <F, A> scalaz.Equal<scalaz.MaybeT<F, A>> maybeTEqual(scalaz.Equal<F>);
    Code:
       0: aload_1
       1: invokedynamic #63,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       6: invokeinterface #69,  2           // InterfaceMethod scalaz/Equal.contramap:(Lscala/Function1;)Lscalaz/Equal;
      11: areturn

  public <F, A> scalaz.Show<scalaz.MaybeT<F, A>> maybeTShow(scalaz.Show<F>);
    Code:
       0: getstatic     #79                 // Field scalaz/Contravariant$.MODULE$:Lscalaz/Contravariant$;
       3: getstatic     #84                 // Field scalaz/Show$.MODULE$:Lscalaz/Show$;
       6: invokevirtual #88                 // Method scalaz/Show$.showContravariant:()Lscalaz/Contravariant;
       9: astore_2
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_2
      16: aload_1
      17: invokedynamic #93,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      22: invokeinterface #98,  3           // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: checkcast     #100                // class scalaz/Show
      30: areturn

  public <F> scalaz.Decidable<?> maybeTDecidable(scalaz.Divisible<F>);
    Code:
       0: new           #19                 // class scalaz/MaybeTInstances$$anon$8
       3: dup
       4: aconst_null
       5: aload_1
       6: invokespecial #107                // Method scalaz/MaybeTInstances$$anon$8."<init>":(Lscalaz/MaybeTInstances;Lscalaz/Divisible;)V
       9: areturn

  public static final java.lang.Object $anonfun$maybeTEqual$1(scalaz.MaybeT);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method scalaz/MaybeT.run:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$maybeTShow$1(scalaz.MaybeT);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method scalaz/MaybeT.run:()Ljava/lang/Object;
       4: areturn

  public scalaz.MaybeTInstances();
    Code:
       0: aload_0
       1: invokespecial #120                // Method scalaz/MaybeTInstances0."<init>":()V
       4: aload_0
       5: new           #15                 // class scalaz/MaybeTInstances$$anon$6
       8: dup
       9: aconst_null
      10: invokespecial #123                // Method scalaz/MaybeTInstances$$anon$6."<init>":(Lscalaz/MaybeTInstances;)V
      13: putfield      #26                 // Field maybeTMonadTrans:Lscalaz/Hoist;
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #135,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
