Compiled from "LazyEitherT.scala"
public final class scalaz.LazyEitherTInstances0$$anon$11 implements scalaz.IsomorphismBifunctor<?, ?> {
  private final scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.LazyEitherTInstances0 $outer;

  private final scalaz.Functor F0$9;

  public java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #34                 // InterfaceMethod scalaz/IsomorphismBifunctor.bimap$:(Lscalaz/IsomorphismBifunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #92                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #113                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Bifunctor<?> G();
    Code:
       0: aload_0
       1: getfield      #122                // Field $outer:Lscalaz/LazyEitherTInstances0;
       4: aload_0
       5: getfield      #124                // Field F0$9:Lscalaz/Functor;
       8: invokevirtual #127                // Method scalaz/LazyEitherTInstances0.lazyEitherTBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
      11: areturn

  public scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, ?, ?> iso();
    Code:
       0: getstatic     #136                // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: invokevirtual #139                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionIso2:()Lscalaz/Isomorphisms$Iso3;
       6: areturn

  public scalaz.LazyEitherTInstances0$$anon$11(scalaz.LazyEitherTInstances0, scalaz.Functor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #122                // Field $outer:Lscalaz/LazyEitherTInstances0;
      11: aload_0
      12: aload_2
      13: putfield      #124                // Field F0$9:Lscalaz/Functor;
      16: aload_0
      17: invokespecial #144                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #148                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      24: aload_0
      25: invokestatic  #151                // InterfaceMethod scalaz/IsomorphismBifunctor.$init$:(Lscalaz/IsomorphismBifunctor;)V
      28: return
}
