Compiled from "TreeLoc.scala"
public final class scalaz.TreeLocInstances$$anon$4 implements scalaz.Order<scalaz.TreeLoc<A>>, scalaz.TreeLocEqual<A> {
  private final scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>> equalSyntax;

  private final scalaz.Order A$2;

  public final boolean equal(scalaz.TreeLoc<A>, scalaz.TreeLoc<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/TreeLocEqual.equal$:(Lscalaz/TreeLocEqual;Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #73                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #77                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.TreeLoc<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #109                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.TreeLoc<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.TreeLoc<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.TreeLoc<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #139                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #147                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.TreeLoc<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #147                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> E();
    Code:
       0: aload_0
       1: getfield      #154                // Field A$2:Lscalaz/Order;
       4: areturn

  public scalaz.Ordering order(scalaz.TreeLoc<A>, scalaz.TreeLoc<A>);
    Code:
       0: getstatic     #163                // Field scalaz/Divide$.MODULE$:Lscalaz/Divide$;
       3: getstatic     #168                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       6: invokevirtual #172                // Method scalaz/Order$.orderInstance:()Lscalaz/Decidable;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: getstatic     #177                // Field scala/Function$.MODULE$:Lscala/Function$;
      19: invokedynamic #199,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      24: invokevirtual #203                // Method scala/Function$.unlift:(Lscala/Function1;)Lscala/PartialFunction;
      27: getstatic     #208                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      30: aload_0
      31: getfield      #154                // Field A$2:Lscalaz/Order;
      34: invokevirtual #211                // Method scalaz/Tree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
      37: getstatic     #216                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      40: getstatic     #208                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      43: aload_0
      44: getfield      #154                // Field A$2:Lscalaz/Order;
      47: invokevirtual #211                // Method scalaz/Tree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
      50: invokevirtual #219                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
      53: getstatic     #216                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      56: getstatic     #208                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      59: aload_0
      60: getfield      #154                // Field A$2:Lscalaz/Order;
      63: invokevirtual #211                // Method scalaz/Tree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
      66: invokevirtual #219                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
      69: getstatic     #216                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      72: getstatic     #224                // Field scalaz/std/tuple$.MODULE$:Lscalaz/std/tuple$;
      75: getstatic     #216                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      78: getstatic     #208                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      81: aload_0
      82: getfield      #154                // Field A$2:Lscalaz/Order;
      85: invokevirtual #211                // Method scalaz/Tree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
      88: invokevirtual #219                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
      91: aload_0
      92: getfield      #154                // Field A$2:Lscalaz/Order;
      95: getstatic     #216                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      98: getstatic     #208                // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
     101: aload_0
     102: getfield      #154                // Field A$2:Lscalaz/Order;
     105: invokevirtual #211                // Method scalaz/Tree$.treeOrder:(Lscalaz/Order;)Lscalaz/Order;
     108: invokevirtual #219                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
     111: invokevirtual #228                // Method scalaz/std/tuple$.tuple3Order:(Lscalaz/Order;Lscalaz/Order;Lscalaz/Order;)Lscalaz/Order;
     114: invokevirtual #219                // Method scalaz/std/stream$.streamOrder:(Lscalaz/Order;)Lscalaz/Order;
     117: invokeinterface #234,  6          // InterfaceMethod scalaz/Divide.dividing4:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: checkcast     #7                  // class scalaz/Order
     125: aload_1
     126: aload_2
     127: invokeinterface #236,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
     132: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #27                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #243                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public final boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #245                // class scalaz/TreeLoc
       5: aload_2
       6: checkcast     #245                // class scalaz/TreeLoc
       9: invokevirtual #247                // Method equal:(Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Z
      12: ireturn

  public scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #245                // class scalaz/TreeLoc
       5: aload_2
       6: checkcast     #245                // class scalaz/TreeLoc
       9: invokevirtual #249                // Method order:(Lscalaz/TreeLoc;Lscalaz/TreeLoc;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal E();
    Code:
       0: aload_0
       1: invokevirtual #252                // Method E:()Lscalaz/Order;
       4: areturn

  public static final scala.Option $anonfun$order$1(scalaz.TreeLoc);
    Code:
       0: getstatic     #258                // Field scalaz/TreeLoc$.MODULE$:Lscalaz/TreeLoc$;
       3: aload_0
       4: invokevirtual #261                // Method scalaz/TreeLoc$.unapply:(Lscalaz/TreeLoc;)Lscala/Option;
       7: areturn

  public scalaz.TreeLocInstances$$anon$4(scalaz.TreeLocInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #154                // Field A$2:Lscalaz/Order;
       5: aload_0
       6: invokespecial #266                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #270                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: aload_0
      14: invokestatic  #273                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      17: aload_0
      18: invokestatic  #276                // InterfaceMethod scalaz/TreeLocEqual.$init$:(Lscalaz/TreeLocEqual;)V
      21: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
