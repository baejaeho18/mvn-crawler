Compiled from "Foldable1.scala"
public interface scalaz.Foldable1<F> extends scalaz.Foldable<F> {
  public static <F, G> scalaz.Foldable1<F> fromIso(scalaz.NaturalTransformation<F, G>, scalaz.Foldable1<G>);
    Code:
       0: getstatic     #53                 // Field scalaz/Foldable1$.MODULE$:Lscalaz/Foldable1$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method scalaz/Foldable1$.fromIso:(Lscalaz/NaturalTransformation;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       8: areturn

  public static <F> scalaz.Foldable1<F> apply(scalaz.Foldable1<F>);
    Code:
       0: getstatic     #53                 // Field scalaz/Foldable1$.MODULE$:Lscalaz/Foldable1$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: areturn

  public abstract void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<F>);

  public static scalaz.Foldable1 product$(scalaz.Foldable1, scalaz.Foldable1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #70                 // InterfaceMethod product:(Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public default <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: new           #18                 // class scalaz/Foldable1$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #76                 // Method scalaz/Foldable1$$anon$1."<init>":(Lscalaz/Foldable1;Lscalaz/Foldable1;)V
       9: areturn

  public static scalaz.Foldable1 compose$(scalaz.Foldable1, scalaz.Foldable1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #82                 // InterfaceMethod compose:(Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public default <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: new           #20                 // class scalaz/Foldable1$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #83                 // Method scalaz/Foldable1$$anon$2."<init>":(Lscalaz/Foldable1;Lscalaz/Foldable1;)V
       9: areturn

  public abstract <A, B> B foldMap1(F, scala.Function1<A, B>, scalaz.Semigroup<B>);

  public static scala.Option foldMap1Opt$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #94                 // InterfaceMethod foldMap1Opt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<B> foldMap1Opt(F, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public abstract <A, B> B foldMapRight1(F, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);

  public static java.lang.Object foldMap$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #115                // InterfaceMethod foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMap(F, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object foldRight1$(scalaz.Foldable1, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #123                // InterfaceMethod foldRight1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public default <A> A foldRight1(F, scala.Function2<A, scala.Function0<A>, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #145,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       7: aload_2
       8: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object foldRight$(scalaz.Foldable1, java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #153                // InterfaceMethod foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldRight(F, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokedynamic #163,  0            // InvokeDynamic #1:apply:(Lscala/Function2;Lscala/Function0;)Lscala/Function1;
       9: aload_3
      10: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      15: areturn

  public static java.lang.Object foldMapLeft1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #168                // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B foldMapLeft1(F, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #174                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       5: invokevirtual #178                // Method scalaz/std/option$.none:()Lscala/Option;
       8: aload_2
       9: aload_3
      10: invokedynamic #191,  0            // InvokeDynamic #2:apply:(Lscala/Function1;Lscala/Function2;)Lscala/Function2;
      15: invokeinterface #195,  4          // InterfaceMethod foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      20: checkcast     #197                // class scala/Option
      23: invokedynamic #208,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
      28: invokevirtual #212                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      31: areturn

  public static java.lang.Object foldLeft1$(scalaz.Foldable1, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #216                // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public default <A> A foldLeft1(F, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #222,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       7: aload_2
       8: invokeinterface #168,  4          // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object foldr1$(scalaz.Foldable1, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #228                // InterfaceMethod foldr1:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> A foldr1(F, scala.Function1<A, scala.Function1<scala.Function0<A>, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #239,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function2;
       8: invokeinterface #123,  3          // InterfaceMethod foldRight1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static scala.Option foldMapRight1Opt$(scalaz.Foldable1, java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #245                // InterfaceMethod foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<B> foldMapRight1Opt(F, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scala.Option foldr1Opt$(scalaz.Foldable1, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #252                // InterfaceMethod foldr1Opt:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> foldr1Opt(F, scala.Function1<A, scala.Function1<scala.Function0<A>, A>>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #239,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function2;
      12: invokeinterface #123,  3          // InterfaceMethod foldRight1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      17: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  public static java.lang.Object foldl1$(scalaz.Foldable1, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #257                // InterfaceMethod foldl1:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> A foldl1(F, scala.Function1<A, scala.Function1<A, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #264,  0            // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function2;
       8: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static scala.Option foldMapLeft1Opt$(scalaz.Foldable1, java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #268                // InterfaceMethod foldMapLeft1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<B> foldMapLeft1Opt(F, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #168,  4          // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scala.Option foldl1Opt$(scalaz.Foldable1, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #273                // InterfaceMethod foldl1Opt:(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> foldl1Opt(F, scala.Function1<A, scala.Function1<A, A>>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #264,  0            // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function2;
      12: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      17: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  public static java.lang.Object fold1$(scalaz.Foldable1, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #282                // InterfaceMethod fold1:(Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public default <M> M fold1(F, scalaz.Semigroup<M>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #288,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
       7: aload_2
       8: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object maximum1$(scalaz.Foldable1, java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #295                // InterfaceMethod maximum1:(Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public default <A> A maximum1(F, scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #305,  0            // InvokeDynamic #8:apply:(Lscalaz/Order;)Lscala/Function2;
       8: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object maximumOf1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #312                // InterfaceMethod maximumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B maximumOf1(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: getstatic     #318                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: aload_1
       5: getstatic     #323                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       8: invokevirtual #327                // Method scalaz/Tags$.MaxVal:()Lscalaz/Tag$TagOf;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload_2
      18: invokevirtual #330                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #332                // class scala/Function1
      24: getstatic     #337                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload_3
      34: invokevirtual #341                // Method scalaz/Semigroup$.maxSemigroup:(Lscalaz/Order;)Lscalaz/SemiLattice;
      37: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      42: astore        4
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: invokevirtual #345                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload         4
      55: invokevirtual #350                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      58: areturn

  public static java.lang.Object maximumBy1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #358                // InterfaceMethod maximumBy1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public default <A, B> A maximumBy1(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #369,  0            // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #374                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      11: invokedynamic #381,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
      16: astore        4
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload_3
      24: aload         4
      26: invokeinterface #385,  2          // InterfaceMethod scalaz/Order.contramap:(Lscala/Function1;)Lscalaz/Order;
      31: invokeinterface #312,  4          // InterfaceMethod maximumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      36: checkcast     #387                // class scala/Tuple2
      39: invokevirtual #390                // Method scala/Tuple2._1:()Ljava/lang/Object;
      42: areturn

  public static java.lang.Object minimum1$(scalaz.Foldable1, java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #396                // InterfaceMethod minimum1:(Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public default <A> A minimum1(F, scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #401,  0            // InvokeDynamic #11:apply:(Lscalaz/Order;)Lscala/Function2;
       8: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object minimumOf1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #406                // InterfaceMethod minimumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public default <A, B> B minimumOf1(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: getstatic     #318                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: aload_1
       5: getstatic     #323                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       8: invokevirtual #409                // Method scalaz/Tags$.MinVal:()Lscalaz/Tag$TagOf;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload_2
      18: invokevirtual #330                // Method scalaz/Tag$TagOf.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #332                // class scala/Function1
      24: getstatic     #337                // Field scalaz/Semigroup$.MODULE$:Lscalaz/Semigroup$;
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload_3
      34: invokevirtual #412                // Method scalaz/Semigroup$.minSemigroup:(Lscalaz/Order;)Lscalaz/SemiLattice;
      37: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      42: astore        4
      44: dup
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: invokevirtual #345                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      53: aload         4
      55: invokevirtual #350                // Method scalaz/TagKind.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
      58: areturn

  public static java.lang.Object minimumBy1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #417                // InterfaceMethod minimumBy1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public default <A, B> A minimumBy1(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #422,  0            // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
       8: getstatic     #374                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
      11: invokedynamic #427,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
      16: astore        4
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload_3
      24: aload         4
      26: invokeinterface #385,  2          // InterfaceMethod scalaz/Order.contramap:(Lscala/Function1;)Lscalaz/Order;
      31: invokeinterface #406,  4          // InterfaceMethod minimumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      36: checkcast     #387                // class scala/Tuple2
      39: invokevirtual #390                // Method scala/Tuple2._1:()Ljava/lang/Object;
      42: areturn

  public static scala.Option maximum$(scalaz.Foldable1, java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #434                // InterfaceMethod maximum:(Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> maximum(F, scalaz.Order<A>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #295,  3          // InterfaceMethod maximum1:(Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
      12: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: areturn

  public static scala.Option maximumOf$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #442                // InterfaceMethod maximumOf:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<B> maximumOf(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #312,  4          // InterfaceMethod maximumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scala.Option maximumBy$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #448                // InterfaceMethod maximumBy:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<A> maximumBy(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #358,  4          // InterfaceMethod maximumBy1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scala.Option minimum$(scalaz.Foldable1, java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #454                // InterfaceMethod minimum:(Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public default <A> scala.Option<A> minimum(F, scalaz.Order<A>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #396,  3          // InterfaceMethod minimum1:(Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
      12: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      15: areturn

  public static scala.Option minimumOf$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #459                // InterfaceMethod minimumOf:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<B> minimumOf(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #406,  4          // InterfaceMethod minimumOf1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scala.Option minimumBy$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #464                // InterfaceMethod minimumBy:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public default <A, B> scala.Option<A> minimumBy(F, scala.Function1<A, B>, scalaz.Order<B>);
    Code:
       0: new           #100                // class scala/Some
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokeinterface #417,  4          // InterfaceMethod minimumBy1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
      13: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      16: areturn

  public static scalaz.NonEmptyList distinct1$(scalaz.Foldable1, java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #471                // InterfaceMethod distinct1:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public default <A> scalaz.NonEmptyList<A> distinct1(F, scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #477,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       7: aload_2
       8: invokedynamic #485,  0            // InvokeDynamic #15:apply:(Lscalaz/Order;)Lscala/Function2;
      13: invokeinterface #168,  4          // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      18: checkcast     #387                // class scala/Tuple2
      21: invokevirtual #488                // Method scala/Tuple2._2:()Ljava/lang/Object;
      24: checkcast     #490                // class scalaz/NonEmptyList
      27: invokevirtual #494                // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      30: areturn

  public static scalaz.NonEmptyList distinctE1$(scalaz.Foldable1, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #500                // InterfaceMethod distinctE1:(Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public default <A> scalaz.NonEmptyList<A> distinctE1(F, scalaz.Equal<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #509,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
       7: aload_2
       8: invokedynamic #519,  0            // InvokeDynamic #17:apply:(Lscalaz/Equal;)Lscala/Function2;
      13: invokeinterface #168,  4          // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      18: checkcast     #490                // class scalaz/NonEmptyList
      21: invokevirtual #494                // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      24: areturn

  public static java.lang.Object sumr1$(scalaz.Foldable1, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #523                // InterfaceMethod sumr1:(Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public default <A> A sumr1(F, scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #532,  0            // InvokeDynamic #18:apply:(Lscalaz/Semigroup;)Lscala/Function2;
       8: invokeinterface #123,  3          // InterfaceMethod foldRight1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object suml1$(scalaz.Foldable1, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #536                // InterfaceMethod suml1:(Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public default <A> A suml1(F, scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #542,  0            // InvokeDynamic #19:apply:(Lscalaz/Semigroup;)Lscala/Function2;
       8: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object psum1$(scalaz.Foldable1, java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #549                // InterfaceMethod psum1:(Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public default <G, A> G psum1(F, scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #559,  0            // InvokeDynamic #20:apply:(Lscalaz/Plus;)Lscala/Function2;
       8: invokeinterface #123,  3          // InterfaceMethod foldRight1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object psumMap1$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #565                // InterfaceMethod psumMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public default <A, B, G> G psumMap1(F, scala.Function1<A, G>, scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokedynamic #574,  0            // InvokeDynamic #21:apply:(Lscalaz/Plus;Lscala/Function1;)Lscala/Function2;
      10: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      15: areturn

  public static java.lang.Object msuml1$(scalaz.Foldable1, java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #578                // InterfaceMethod msuml1:(Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public default <G, A> G msuml1(F, scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #584,  0            // InvokeDynamic #22:apply:(Lscalaz/Plus;)Lscala/Function2;
       8: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object intercalate1$(scalaz.Foldable1, java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #591                // InterfaceMethod intercalate1:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <A> A intercalate1(F, A, scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: invokedynamic #600,  0            // InvokeDynamic #23:apply:(Lscalaz/Semigroup;Ljava/lang/Object;)Lscala/Function2;
       9: invokeinterface #216,  3          // InterfaceMethod foldLeft1:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object intercalate$(scalaz.Foldable1, java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #607                // InterfaceMethod intercalate:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <A> A intercalate(F, A, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #591,  4          // InterfaceMethod intercalate1:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object traverse1_$(scalaz.Foldable1, java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #615                // InterfaceMethod traverse1_:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public default <M, A, B> M traverse1_(F, scala.Function1<A, M>, scalaz.Apply<M>, scalaz.Semigroup<M>);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: invokeinterface #102,  4          // InterfaceMethod foldMap1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
      11: invokedynamic #622,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
      16: invokeinterface #627,  3          // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public static java.lang.Object sequence1_$(scalaz.Foldable1, java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #633                // InterfaceMethod sequence1_:(Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <M, A> M sequence1_(F, scalaz.Apply<M>, scalaz.Semigroup<M>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #639,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
       7: aload_2
       8: aload_3
       9: invokeinterface #615,  5          // InterfaceMethod traverse1_:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
      14: areturn

  public static boolean empty$(scalaz.Foldable1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #645                // InterfaceMethod empty:(Ljava/lang/Object;)Z
       5: ireturn

  public default <A> boolean empty(F);
    Code:
       0: iconst_0
       1: ireturn

  public static scalaz.Foldable1 product0$(scalaz.Foldable1, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #652                // InterfaceMethod product0:(Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public default <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: new           #22                 // class scalaz/Foldable1$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #657                // Method scalaz/Foldable1$$anon$3."<init>":(Lscalaz/Foldable1;Lscalaz/Foldable;)V
       9: areturn

  public static scalaz.NonEmptyList toNel$(scalaz.Foldable1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #662                // InterfaceMethod toNel:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public default <A> scalaz.NonEmptyList<A> toNel(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #668,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
       7: invokedynamic #677,  0            // InvokeDynamic #27:apply:()Lscala/Function2;
      12: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      17: checkcast     #490                // class scalaz/NonEmptyList
      20: areturn

  public static scalaz.NonEmptyList scanLeft1$(scalaz.Foldable1, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #683                // InterfaceMethod scanLeft1:(Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public default <A> scalaz.NonEmptyList<A> scanLeft1(F, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #689,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
       7: aload_2
       8: invokedynamic #697,  0            // InvokeDynamic #29:apply:(Lscala/Function2;)Lscala/Function2;
      13: invokeinterface #168,  4          // InterfaceMethod foldMapLeft1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      18: checkcast     #490                // class scalaz/NonEmptyList
      21: invokevirtual #494                // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      24: areturn

  public static scalaz.NonEmptyList scanRight1$(scalaz.Foldable1, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #701                // InterfaceMethod scanRight1:(Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public default <A> scalaz.NonEmptyList<A> scanRight1(F, scala.Function2<A, A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #706,  0            // InvokeDynamic #30:apply:()Lscala/Function1;
       7: aload_2
       8: invokedynamic #712,  0            // InvokeDynamic #31:apply:(Lscala/Function2;)Lscala/Function2;
      13: invokeinterface #147,  4          // InterfaceMethod foldMapRight1:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Ljava/lang/Object;
      18: checkcast     #490                // class scalaz/NonEmptyList
      21: areturn

  public static scalaz.Foldable1$Foldable1Law foldable1Law$(scalaz.Foldable1);
    Code:
       0: aload_0
       1: invokespecial #718                // InterfaceMethod foldable1Law:()Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public default scalaz.Foldable1<F>.Foldable1Law foldable1Law();
    Code:
       0: new           #24                 // class scalaz/Foldable1$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #722                // Method scalaz/Foldable1$$anon$4."<init>":(Lscalaz/Foldable1;)V
       8: areturn

  public abstract scalaz.syntax.Foldable1Syntax<F> foldable1Syntax();

  public static java.lang.Object $anonfun$foldRight1$1(java.lang.Object);
    Code:
       0: getstatic     #730                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #733                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$foldRight$1(scala.Function2, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #739,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scala.Option $anonfun$foldMapLeft1$1(scala.Function1, scala.Function2, scala.Option, java.lang.Object);
    Code:
       0: new           #387                // class scala/Tuple2
       3: dup
       4: aload_2
       5: aload_3
       6: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        5
      11: aload_2
      12: astore        6
      14: getstatic     #751                // Field scala/None$.MODULE$:Lscala/None$;
      17: aload         6
      19: invokevirtual #754                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifeq          43
      25: getstatic     #174                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      28: aload_0
      29: aload_3
      30: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: invokevirtual #760                // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
      38: astore        4
      40: goto          94
      43: aload_2
      44: astore        7
      46: aload         7
      48: instanceof    #100                // class scala/Some
      51: ifeq          84
      54: aload         7
      56: checkcast     #100                // class scala/Some
      59: invokevirtual #763                // Method scala/Some.value:()Ljava/lang/Object;
      62: astore        8
      64: getstatic     #174                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      67: aload_1
      68: aload         8
      70: aload_3
      71: invokeinterface #739,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: invokevirtual #760                // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
      79: astore        4
      81: goto          94
      84: new           #765                // class scala/MatchError
      87: dup
      88: aload         5
      90: invokespecial #766                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         4
      96: areturn

  public static scala.runtime.Nothing$ $anonfun$foldMapLeft1$2();
    Code:
       0: getstatic     #773                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       3: ldc_w         #774                // String foldMapLeft1
       6: invokevirtual #778                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       9: areturn

  public static java.lang.Object $anonfun$foldLeft1$1(java.lang.Object);
    Code:
       0: getstatic     #730                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #733                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$foldr1$1(scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #332                // class scala/Function1
      10: aload_2
      11: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static java.lang.Object $anonfun$foldl1$1(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #332                // class scala/Function1
      10: aload_2
      11: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static java.lang.Object $anonfun$fold1$1(java.lang.Object);
    Code:
       0: getstatic     #730                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #733                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$maximum1$1(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #374                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #787,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      16: getstatic     #790                // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      19: astore_3
      20: dup
      21: ifnonnull     32
      24: pop
      25: aload_3
      26: ifnull        39
      29: goto          41
      32: aload_3
      33: invokevirtual #754                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_1
      40: areturn
      41: aload_2
      42: areturn

  public static scala.Tuple2 $anonfun$maximumBy1$1(scala.Function1, java.lang.Object);
    Code:
       0: new           #387                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static java.lang.Object $anonfun$maximumBy1$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #488                // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static java.lang.Object $anonfun$minimum1$1(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #374                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #787,  3          // InterfaceMethod scalaz/Order.order:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
      16: getstatic     #797                // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      19: astore_3
      20: dup
      21: ifnonnull     32
      24: pop
      25: aload_3
      26: ifnull        39
      29: goto          41
      32: aload_3
      33: invokevirtual #754                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_1
      40: areturn
      41: aload_2
      42: areturn

  public static scala.Tuple2 $anonfun$minimumBy1$1(scala.Function1, java.lang.Object);
    Code:
       0: new           #387                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static java.lang.Object $anonfun$minimumBy1$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #488                // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static scala.Tuple2 $anonfun$distinct1$1(java.lang.Object);
    Code:
       0: new           #387                // class scala/Tuple2
       3: dup
       4: getstatic     #804                // Field scalaz/ISet$.MODULE$:Lscalaz/ISet$;
       7: aload_0
       8: invokevirtual #808                // Method scalaz/ISet$.singleton:(Ljava/lang/Object;)Lscalaz/ISet;
      11: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      14: dup
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_0
      21: getstatic     #818                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      24: invokevirtual #821                // Method scalaz/IList$.empty:()Lscalaz/IList;
      27: invokevirtual #825                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      30: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      33: areturn

  public static scala.Tuple2 $anonfun$distinct1$2(scalaz.Order, scala.Tuple2, java.lang.Object);
    Code:
       0: new           #387                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        4
      11: aload_1
      12: astore        5
      14: aload         5
      16: ifnull        87
      19: aload         5
      21: invokevirtual #390                // Method scala/Tuple2._1:()Ljava/lang/Object;
      24: checkcast     #827                // class scalaz/ISet
      27: astore        6
      29: aload         5
      31: invokevirtual #488                // Method scala/Tuple2._2:()Ljava/lang/Object;
      34: checkcast     #490                // class scalaz/NonEmptyList
      37: astore        7
      39: aload         6
      41: aload_2
      42: aload_0
      43: invokevirtual #832                // Method scalaz/ISet.notMember:(Ljava/lang/Object;Lscalaz/Order;)Z
      46: ifeq          72
      49: new           #387                // class scala/Tuple2
      52: dup
      53: aload         6
      55: aload_2
      56: aload_0
      57: invokevirtual #836                // Method scalaz/ISet.insert:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/ISet;
      60: aload         7
      62: aload_2
      63: invokevirtual #839                // Method scalaz/NonEmptyList.$less$colon$colon:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
      66: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      69: goto          83
      72: new           #387                // class scala/Tuple2
      75: dup
      76: aload         6
      78: aload         7
      80: invokespecial #746                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      83: astore_3
      84: goto          97
      87: new           #765                // class scala/MatchError
      90: dup
      91: aload         4
      93: invokespecial #766                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: aload_3
      98: areturn

  public static scalaz.NonEmptyList $anonfun$distinctE1$1(java.lang.Object);
    Code:
       0: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_0
      10: getstatic     #818                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      13: invokevirtual #821                // Method scalaz/IList$.empty:()Lscalaz/IList;
      16: invokevirtual #825                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      19: areturn

  public static scalaz.NonEmptyList $anonfun$distinctE1$2(scalaz.Equal, scalaz.NonEmptyList, java.lang.Object);
    Code:
       0: aload_1
       1: astore_3
       2: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       5: invokevirtual #848                // Method scalaz/NonEmptyList$.nonEmptyList:()Lscalaz/Traverse1;
       8: aload_3
       9: aload_2
      10: aload_0
      11: invokeinterface #854,  4          // InterfaceMethod scalaz/Traverse1.element:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
      16: ifne          25
      19: aload_3
      20: aload_2
      21: invokevirtual #839                // Method scalaz/NonEmptyList.$less$colon$colon:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
      24: areturn
      25: aload_3
      26: areturn

  public static java.lang.Object $anonfun$sumr1$1(scalaz.Semigroup, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #862,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object $anonfun$suml1$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$suml1$1(scalaz.Semigroup, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #873,  0            // InvokeDynamic #32:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #862,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object $anonfun$psum1$1(scalaz.Plus, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #881,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object $anonfun$psumMap1$1(scalaz.Plus, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #756,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_3
       9: invokeinterface #881,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$msuml1$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$msuml1$1(scalaz.Plus, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #893,  0            // InvokeDynamic #33:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #881,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object $anonfun$intercalate1$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$intercalate1$2(scalaz.Semigroup, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #902,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #862,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object $anonfun$intercalate1$1(scalaz.Semigroup, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: aload_1
       4: aload_3
       5: invokedynamic #908,  0            // InvokeDynamic #35:apply:(Lscalaz/Semigroup;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      10: invokeinterface #862,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      15: areturn

  public static void $anonfun$traverse1_$1(java.lang.Object);
    Code:
       0: return

  public static java.lang.Object $anonfun$sequence1_$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scalaz.NonEmptyList $anonfun$toNel$1(java.lang.Object);
    Code:
       0: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_0
       4: getstatic     #818                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       7: invokevirtual #821                // Method scalaz/IList$.empty:()Lscalaz/IList;
      10: invokevirtual #825                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      13: areturn

  public static scalaz.NonEmptyList $anonfun$toNel$2(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #917,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #490                // class scalaz/NonEmptyList
       9: aload_0
      10: invokevirtual #839                // Method scalaz/NonEmptyList.$less$colon$colon:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
      13: areturn

  public static scalaz.NonEmptyList $anonfun$scanLeft1$1(java.lang.Object);
    Code:
       0: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_0
      10: getstatic     #818                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      13: invokevirtual #821                // Method scalaz/IList$.empty:()Lscalaz/IList;
      16: invokevirtual #825                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      19: areturn

  public static scalaz.NonEmptyList $anonfun$scanLeft1$2(scala.Function2, scalaz.NonEmptyList, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #923                // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: aload_2
       6: invokeinterface #739,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_1
      13: aload_3
      14: invokevirtual #839                // Method scalaz/NonEmptyList.$less$colon$colon:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
      17: areturn

  public static scalaz.NonEmptyList $anonfun$scanRight1$1(java.lang.Object);
    Code:
       0: getstatic     #813                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_0
      10: getstatic     #818                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      13: invokevirtual #821                // Method scalaz/IList$.empty:()Lscalaz/IList;
      16: invokevirtual #825                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      19: areturn

  public static scalaz.NonEmptyList $anonfun$scanRight1$2(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #917,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       8: checkcast     #490                // class scalaz/NonEmptyList
      11: invokevirtual #923                // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      14: invokeinterface #739,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_3
      20: aload_2
      21: invokeinterface #917,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: checkcast     #490                // class scalaz/NonEmptyList
      29: aload_3
      30: invokevirtual #839                // Method scalaz/NonEmptyList.$less$colon$colon:(Ljava/lang/Object;)Lscalaz/NonEmptyList;
      33: areturn

  public static void $init$(scalaz.Foldable1);
    Code:
       0: aload_0
       1: new           #26                 // class scalaz/Foldable1$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #927                // Method scalaz/Foldable1$$anon$5."<init>":(Lscalaz/Foldable1;)V
       9: invokeinterface #929,  2          // InterfaceMethod scalaz$Foldable1$_setter_$foldable1Syntax_$eq:(Lscalaz/syntax/Foldable1Syntax;)V
      14: return

  public static java.lang.Object $anonfun$traverse1_$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #931                // InterfaceMethod $anonfun$traverse1_$1:(Ljava/lang/Object;)V
       4: getstatic     #937                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #949,  0            // InvokeDynamic #36:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
