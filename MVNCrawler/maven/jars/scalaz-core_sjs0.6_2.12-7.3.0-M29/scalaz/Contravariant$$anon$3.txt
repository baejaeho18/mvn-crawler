Compiled from "Contravariant.scala"
public final class scalaz.Contravariant$$anon$3 implements scalaz.Contravariant<?> {
  private final scalaz.syntax.ContravariantSyntax<?> contravariantSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Contravariant $outer;

  private final scalaz.Contravariant G0$3;

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #41                 // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #53                 // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<?>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ContravariantSyntax<?> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #110                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #110                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #118                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #118                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scala.Tuple2<F, G> contramap(scala.Tuple2<F, G>, scala.Function1<B, A>);
    Code:
       0: new           #126                // class scala/Tuple2
       3: dup
       4: aload_0
       5: getfield      #128                // Field $outer:Lscalaz/Contravariant;
       8: aload_1
       9: invokevirtual #132                // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: aload_2
      13: invokeinterface #135,  3          // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: aload_0
      19: getfield      #137                // Field G0$3:Lscalaz/Contravariant;
      22: aload_1
      23: invokevirtual #140                // Method scala/Tuple2._2:()Ljava/lang/Object;
      26: aload_2
      27: invokeinterface #135,  3          // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      32: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      35: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #126                // class scala/Tuple2
       4: astore_3
       5: new           #126                // class scala/Tuple2
       8: dup
       9: aload_0
      10: getfield      #128                // Field $outer:Lscalaz/Contravariant;
      13: aload_3
      14: invokevirtual #132                // Method scala/Tuple2._1:()Ljava/lang/Object;
      17: aload_2
      18: invokeinterface #135,  3          // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: aload_0
      24: getfield      #137                // Field G0$3:Lscalaz/Contravariant;
      27: aload_3
      28: invokevirtual #140                // Method scala/Tuple2._2:()Ljava/lang/Object;
      31: aload_2
      32: invokeinterface #135,  3          // InterfaceMethod scalaz/Contravariant.contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      37: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: areturn

  public scalaz.Contravariant$$anon$3(scalaz.Contravariant<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #128                // Field $outer:Lscalaz/Contravariant;
      11: aload_0
      12: aload_2
      13: putfield      #137                // Field G0$3:Lscalaz/Contravariant;
      16: aload_0
      17: invokespecial #152                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #156                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      24: aload_0
      25: invokestatic  #159                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      28: return
}
