Compiled from "Syntax.scala"
public class scalaz.syntax.Syntaxes$profunctor$ implements scalaz.syntax.ToProfunctorOps<scalaz.Profunctor> {
  public <F, A, B> scalaz.syntax.ProfunctorOps<F, A, B> ToProfunctorOps(F, scalaz.Profunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorOps$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.ProfunctorOps<?, A, B> ToProfunctorVFromKleisliLike(F, scalaz.Profunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // InterfaceMethod scalaz/syntax/ToProfunctorOps0.ToProfunctorVFromKleisliLike$:(Lscalaz/syntax/ToProfunctorOps0;Ljava/lang/Object;Lscalaz/Profunctor;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public <FA> scalaz.syntax.ProfunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToProfunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Profunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // InterfaceMethod scalaz/syntax/ToProfunctorOpsU.ToProfunctorOpsUnapply$:(Lscalaz/syntax/ToProfunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/ProfunctorOps;
       6: areturn

  public scalaz.syntax.Syntaxes$profunctor$(scalaz.syntax.Syntaxes);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #51                 // InterfaceMethod scalaz/syntax/ToProfunctorOpsU.$init$:(Lscalaz/syntax/ToProfunctorOpsU;)V
       8: aload_0
       9: invokestatic  #54                 // InterfaceMethod scalaz/syntax/ToProfunctorOps0.$init$:(Lscalaz/syntax/ToProfunctorOps0;)V
      12: return
}
