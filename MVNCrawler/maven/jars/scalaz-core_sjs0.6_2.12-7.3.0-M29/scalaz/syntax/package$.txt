Compiled from "package.scala"
public final class scalaz.syntax.package$ implements scalaz.syntax.Syntaxes {
  public static scalaz.syntax.package$ MODULE$;

  private volatile scalaz.syntax.Syntaxes$semigroup$ semigroup$module;

  private volatile scalaz.syntax.Syntaxes$monoid$ monoid$module;

  private volatile scalaz.syntax.Syntaxes$band$ band$module;

  private volatile scalaz.syntax.Syntaxes$equal$ equal$module;

  private volatile scalaz.syntax.Syntaxes$show$ show$module;

  private volatile scalaz.syntax.Syntaxes$order$ order$module;

  private volatile scalaz.syntax.Syntaxes$enum$ enum$module;

  private volatile scalaz.syntax.Syntaxes$isEmpty0$ isEmpty0$module;

  private volatile scalaz.syntax.Syntaxes$isEmpty$ isEmpty$module;

  private volatile scalaz.syntax.Syntaxes$plusEmpty0$ plusEmpty0$module;

  private volatile scalaz.syntax.Syntaxes$plusEmpty$ plusEmpty$module;

  private volatile scalaz.syntax.Syntaxes$functor0$ functor0$module;

  private volatile scalaz.syntax.Syntaxes$functor$ functor$module;

  private volatile scalaz.syntax.Syntaxes$invariantFunctor0$ invariantFunctor0$module;

  private volatile scalaz.syntax.Syntaxes$invariantFunctor$ invariantFunctor$module;

  private volatile scalaz.syntax.Syntaxes$contravariant0$ contravariant0$module;

  private volatile scalaz.syntax.Syntaxes$contravariant$ contravariant$module;

  private volatile scalaz.syntax.Syntaxes$align0$ align0$module;

  private volatile scalaz.syntax.Syntaxes$align$ align$module;

  private volatile scalaz.syntax.Syntaxes$apply0$ apply0$module;

  private volatile scalaz.syntax.Syntaxes$apply$ apply$module;

  private volatile scalaz.syntax.Syntaxes$applicative0$ applicative0$module;

  private volatile scalaz.syntax.Syntaxes$applicative$ applicative$module;

  private volatile scalaz.syntax.Syntaxes$bind0$ bind0$module;

  private volatile scalaz.syntax.Syntaxes$bind$ bind$module;

  private volatile scalaz.syntax.Syntaxes$monad0$ monad0$module;

  private volatile scalaz.syntax.Syntaxes$monad$ monad$module;

  private volatile scalaz.syntax.Syntaxes$cobind0$ cobind0$module;

  private volatile scalaz.syntax.Syntaxes$cobind$ cobind$module;

  private volatile scalaz.syntax.Syntaxes$comonad0$ comonad0$module;

  private volatile scalaz.syntax.Syntaxes$comonad$ comonad$module;

  private volatile scalaz.syntax.Syntaxes$cozip0$ cozip0$module;

  private volatile scalaz.syntax.Syntaxes$cozip$ cozip$module;

  private volatile scalaz.syntax.Syntaxes$plus0$ plus0$module;

  private volatile scalaz.syntax.Syntaxes$plus$ plus$module;

  private volatile scalaz.syntax.Syntaxes$applicativePlus0$ applicativePlus0$module;

  private volatile scalaz.syntax.Syntaxes$applicativePlus$ applicativePlus$module;

  private volatile scalaz.syntax.Syntaxes$alt0$ alt0$module;

  private volatile scalaz.syntax.Syntaxes$alt$ alt$module;

  private volatile scalaz.syntax.Syntaxes$monadPlus0$ monadPlus0$module;

  private volatile scalaz.syntax.Syntaxes$monadPlus$ monadPlus$module;

  private volatile scalaz.syntax.Syntaxes$foldable0$ foldable0$module;

  private volatile scalaz.syntax.Syntaxes$foldable$ foldable$module;

  private volatile scalaz.syntax.Syntaxes$foldable10$ foldable10$module;

  private volatile scalaz.syntax.Syntaxes$foldable1$ foldable1$module;

  private volatile scalaz.syntax.Syntaxes$traverse0$ traverse0$module;

  private volatile scalaz.syntax.Syntaxes$traverse$ traverse$module;

  private volatile scalaz.syntax.Syntaxes$traverse10$ traverse10$module;

  private volatile scalaz.syntax.Syntaxes$traverse1$ traverse1$module;

  private volatile scalaz.syntax.Syntaxes$zip0$ zip0$module;

  private volatile scalaz.syntax.Syntaxes$zip$ zip$module;

  private volatile scalaz.syntax.Syntaxes$unzip0$ unzip0$module;

  private volatile scalaz.syntax.Syntaxes$unzip$ unzip$module;

  private volatile scalaz.syntax.Syntaxes$optional0$ optional0$module;

  private volatile scalaz.syntax.Syntaxes$optional$ optional$module;

  private volatile scalaz.syntax.Syntaxes$catchable0$ catchable0$module;

  private volatile scalaz.syntax.Syntaxes$catchable$ catchable$module;

  private volatile scalaz.syntax.Syntaxes$associative0$ associative0$module;

  private volatile scalaz.syntax.Syntaxes$associative$ associative$module;

  private volatile scalaz.syntax.Syntaxes$bifunctor0$ bifunctor0$module;

  private volatile scalaz.syntax.Syntaxes$bifunctor$ bifunctor$module;

  private volatile scalaz.syntax.Syntaxes$bifoldable0$ bifoldable0$module;

  private volatile scalaz.syntax.Syntaxes$bifoldable$ bifoldable$module;

  private volatile scalaz.syntax.Syntaxes$bitraverse0$ bitraverse0$module;

  private volatile scalaz.syntax.Syntaxes$bitraverse$ bitraverse$module;

  private volatile scalaz.syntax.Syntaxes$compose0$ compose0$module;

  private volatile scalaz.syntax.Syntaxes$compose$ compose$module;

  private volatile scalaz.syntax.Syntaxes$profunctor0$ profunctor0$module;

  private volatile scalaz.syntax.Syntaxes$profunctor$ profunctor$module;

  private volatile scalaz.syntax.Syntaxes$strong0$ strong0$module;

  private volatile scalaz.syntax.Syntaxes$strong$ strong$module;

  private volatile scalaz.syntax.Syntaxes$proChoice0$ proChoice0$module;

  private volatile scalaz.syntax.Syntaxes$proChoice$ proChoice$module;

  private volatile scalaz.syntax.Syntaxes$category0$ category0$module;

  private volatile scalaz.syntax.Syntaxes$category$ category$module;

  private volatile scalaz.syntax.Syntaxes$arrow0$ arrow0$module;

  private volatile scalaz.syntax.Syntaxes$arrow$ arrow$module;

  private volatile scalaz.syntax.Syntaxes$choice0$ choice0$module;

  private volatile scalaz.syntax.Syntaxes$choice$ choice$module;

  private volatile scalaz.syntax.Syntaxes$split0$ split0$module;

  private volatile scalaz.syntax.Syntaxes$split$ split$module;

  private volatile scalaz.syntax.Syntaxes$monadTell0$ monadTell0$module;

  private volatile scalaz.syntax.Syntaxes$monadTell$ monadTell$module;

  private volatile scalaz.syntax.Syntaxes$monadListen0$ monadListen0$module;

  private volatile scalaz.syntax.Syntaxes$monadListen$ monadListen$module;

  private volatile scalaz.syntax.Syntaxes$monadError0$ monadError0$module;

  private volatile scalaz.syntax.Syntaxes$monadError$ monadError$module;

  private volatile scalaz.syntax.Syntaxes$applicativeError0$ applicativeError0$module;

  private volatile scalaz.syntax.Syntaxes$applicativeError$ applicativeError$module;

  private volatile scalaz.syntax.Syntaxes$monadTrans$ monadTrans$module;

  private volatile scalaz.syntax.Syntaxes$id$ id$module;

  private volatile scalaz.syntax.Syntaxes$tree$ tree$module;

  private volatile scalaz.syntax.Syntaxes$strictTree$ strictTree$module;

  private volatile scalaz.syntax.Syntaxes$reducer$ reducer$module;

  private volatile scalaz.syntax.Syntaxes$writer$ writer$module;

  private volatile scalaz.syntax.Syntaxes$state$ state$module;

  private volatile scalaz.syntax.Syntaxes$validation$ validation$module;

  private volatile scalaz.syntax.Syntaxes$kleisli$ kleisli$module;

  private volatile scalaz.syntax.Syntaxes$either$ either$module;

  private volatile scalaz.syntax.Syntaxes$eithert$ eithert$module;

  private volatile scalaz.syntax.Syntaxes$nel$ nel$module;

  private volatile scalaz.syntax.Syntaxes$these$ these$module;

  private volatile scalaz.syntax.Syntaxes$maybe$ maybe$module;

  private volatile scalaz.syntax.Syntaxes$tag$ tag$module;

  private volatile scalaz.syntax.Syntaxes$contT$ contT$module;

  private volatile scalaz.syntax.Syntaxes$const$ const$module;

  private volatile scalaz.syntax.Syntaxes$all$ all$module;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/package$
       3: invokespecial #549                // Method "<init>":()V
       6: return

  public scalaz.syntax.Syntaxes$semigroup$ semigroup();
    Code:
       0: aload_0
       1: getfield      #553                // Field semigroup$module:Lscalaz/syntax/Syntaxes$semigroup$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #556                // Method semigroup$lzycompute$1:()V
      11: aload_0
      12: getfield      #553                // Field semigroup$module:Lscalaz/syntax/Syntaxes$semigroup$;
      15: areturn

  public scalaz.syntax.Syntaxes$monoid$ monoid();
    Code:
       0: aload_0
       1: getfield      #561                // Field monoid$module:Lscalaz/syntax/Syntaxes$monoid$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #564                // Method monoid$lzycompute$1:()V
      11: aload_0
      12: getfield      #561                // Field monoid$module:Lscalaz/syntax/Syntaxes$monoid$;
      15: areturn

  public scalaz.syntax.Syntaxes$band$ band();
    Code:
       0: aload_0
       1: getfield      #568                // Field band$module:Lscalaz/syntax/Syntaxes$band$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #571                // Method band$lzycompute$1:()V
      11: aload_0
      12: getfield      #568                // Field band$module:Lscalaz/syntax/Syntaxes$band$;
      15: areturn

  public scalaz.syntax.Syntaxes$equal$ equal();
    Code:
       0: aload_0
       1: getfield      #575                // Field equal$module:Lscalaz/syntax/Syntaxes$equal$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #578                // Method equal$lzycompute$1:()V
      11: aload_0
      12: getfield      #575                // Field equal$module:Lscalaz/syntax/Syntaxes$equal$;
      15: areturn

  public scalaz.syntax.Syntaxes$show$ show();
    Code:
       0: aload_0
       1: getfield      #582                // Field show$module:Lscalaz/syntax/Syntaxes$show$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #585                // Method show$lzycompute$1:()V
      11: aload_0
      12: getfield      #582                // Field show$module:Lscalaz/syntax/Syntaxes$show$;
      15: areturn

  public scalaz.syntax.Syntaxes$order$ order();
    Code:
       0: aload_0
       1: getfield      #589                // Field order$module:Lscalaz/syntax/Syntaxes$order$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #592                // Method order$lzycompute$1:()V
      11: aload_0
      12: getfield      #589                // Field order$module:Lscalaz/syntax/Syntaxes$order$;
      15: areturn

  public scalaz.syntax.Syntaxes$enum$ enum();
    Code:
       0: aload_0
       1: getfield      #596                // Field enum$module:Lscalaz/syntax/Syntaxes$enum$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #599                // Method enum$lzycompute$1:()V
      11: aload_0
      12: getfield      #596                // Field enum$module:Lscalaz/syntax/Syntaxes$enum$;
      15: areturn

  public scalaz.syntax.Syntaxes$isEmpty0$ isEmpty0();
    Code:
       0: aload_0
       1: getfield      #603                // Field isEmpty0$module:Lscalaz/syntax/Syntaxes$isEmpty0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #606                // Method isEmpty0$lzycompute$1:()V
      11: aload_0
      12: getfield      #603                // Field isEmpty0$module:Lscalaz/syntax/Syntaxes$isEmpty0$;
      15: areturn

  public scalaz.syntax.Syntaxes$isEmpty$ isEmpty();
    Code:
       0: aload_0
       1: getfield      #610                // Field isEmpty$module:Lscalaz/syntax/Syntaxes$isEmpty$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #613                // Method isEmpty$lzycompute$1:()V
      11: aload_0
      12: getfield      #610                // Field isEmpty$module:Lscalaz/syntax/Syntaxes$isEmpty$;
      15: areturn

  public scalaz.syntax.Syntaxes$plusEmpty0$ plusEmpty0();
    Code:
       0: aload_0
       1: getfield      #617                // Field plusEmpty0$module:Lscalaz/syntax/Syntaxes$plusEmpty0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #620                // Method plusEmpty0$lzycompute$1:()V
      11: aload_0
      12: getfield      #617                // Field plusEmpty0$module:Lscalaz/syntax/Syntaxes$plusEmpty0$;
      15: areturn

  public scalaz.syntax.Syntaxes$plusEmpty$ plusEmpty();
    Code:
       0: aload_0
       1: getfield      #624                // Field plusEmpty$module:Lscalaz/syntax/Syntaxes$plusEmpty$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #627                // Method plusEmpty$lzycompute$1:()V
      11: aload_0
      12: getfield      #624                // Field plusEmpty$module:Lscalaz/syntax/Syntaxes$plusEmpty$;
      15: areturn

  public scalaz.syntax.Syntaxes$functor0$ functor0();
    Code:
       0: aload_0
       1: getfield      #631                // Field functor0$module:Lscalaz/syntax/Syntaxes$functor0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #634                // Method functor0$lzycompute$1:()V
      11: aload_0
      12: getfield      #631                // Field functor0$module:Lscalaz/syntax/Syntaxes$functor0$;
      15: areturn

  public scalaz.syntax.Syntaxes$functor$ functor();
    Code:
       0: aload_0
       1: getfield      #638                // Field functor$module:Lscalaz/syntax/Syntaxes$functor$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #641                // Method functor$lzycompute$1:()V
      11: aload_0
      12: getfield      #638                // Field functor$module:Lscalaz/syntax/Syntaxes$functor$;
      15: areturn

  public scalaz.syntax.Syntaxes$invariantFunctor0$ invariantFunctor0();
    Code:
       0: aload_0
       1: getfield      #645                // Field invariantFunctor0$module:Lscalaz/syntax/Syntaxes$invariantFunctor0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #648                // Method invariantFunctor0$lzycompute$1:()V
      11: aload_0
      12: getfield      #645                // Field invariantFunctor0$module:Lscalaz/syntax/Syntaxes$invariantFunctor0$;
      15: areturn

  public scalaz.syntax.Syntaxes$invariantFunctor$ invariantFunctor();
    Code:
       0: aload_0
       1: getfield      #652                // Field invariantFunctor$module:Lscalaz/syntax/Syntaxes$invariantFunctor$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #655                // Method invariantFunctor$lzycompute$1:()V
      11: aload_0
      12: getfield      #652                // Field invariantFunctor$module:Lscalaz/syntax/Syntaxes$invariantFunctor$;
      15: areturn

  public scalaz.syntax.Syntaxes$contravariant0$ contravariant0();
    Code:
       0: aload_0
       1: getfield      #659                // Field contravariant0$module:Lscalaz/syntax/Syntaxes$contravariant0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #662                // Method contravariant0$lzycompute$1:()V
      11: aload_0
      12: getfield      #659                // Field contravariant0$module:Lscalaz/syntax/Syntaxes$contravariant0$;
      15: areturn

  public scalaz.syntax.Syntaxes$contravariant$ contravariant();
    Code:
       0: aload_0
       1: getfield      #666                // Field contravariant$module:Lscalaz/syntax/Syntaxes$contravariant$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #669                // Method contravariant$lzycompute$1:()V
      11: aload_0
      12: getfield      #666                // Field contravariant$module:Lscalaz/syntax/Syntaxes$contravariant$;
      15: areturn

  public scalaz.syntax.Syntaxes$align0$ align0();
    Code:
       0: aload_0
       1: getfield      #673                // Field align0$module:Lscalaz/syntax/Syntaxes$align0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #676                // Method align0$lzycompute$1:()V
      11: aload_0
      12: getfield      #673                // Field align0$module:Lscalaz/syntax/Syntaxes$align0$;
      15: areturn

  public scalaz.syntax.Syntaxes$align$ align();
    Code:
       0: aload_0
       1: getfield      #680                // Field align$module:Lscalaz/syntax/Syntaxes$align$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #683                // Method align$lzycompute$1:()V
      11: aload_0
      12: getfield      #680                // Field align$module:Lscalaz/syntax/Syntaxes$align$;
      15: areturn

  public scalaz.syntax.Syntaxes$apply0$ apply0();
    Code:
       0: aload_0
       1: getfield      #687                // Field apply0$module:Lscalaz/syntax/Syntaxes$apply0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #690                // Method apply0$lzycompute$1:()V
      11: aload_0
      12: getfield      #687                // Field apply0$module:Lscalaz/syntax/Syntaxes$apply0$;
      15: areturn

  public scalaz.syntax.Syntaxes$apply$ apply();
    Code:
       0: aload_0
       1: getfield      #694                // Field apply$module:Lscalaz/syntax/Syntaxes$apply$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #697                // Method apply$lzycompute$1:()V
      11: aload_0
      12: getfield      #694                // Field apply$module:Lscalaz/syntax/Syntaxes$apply$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicative0$ applicative0();
    Code:
       0: aload_0
       1: getfield      #701                // Field applicative0$module:Lscalaz/syntax/Syntaxes$applicative0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #704                // Method applicative0$lzycompute$1:()V
      11: aload_0
      12: getfield      #701                // Field applicative0$module:Lscalaz/syntax/Syntaxes$applicative0$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicative$ applicative();
    Code:
       0: aload_0
       1: getfield      #708                // Field applicative$module:Lscalaz/syntax/Syntaxes$applicative$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #711                // Method applicative$lzycompute$1:()V
      11: aload_0
      12: getfield      #708                // Field applicative$module:Lscalaz/syntax/Syntaxes$applicative$;
      15: areturn

  public scalaz.syntax.Syntaxes$bind0$ bind0();
    Code:
       0: aload_0
       1: getfield      #715                // Field bind0$module:Lscalaz/syntax/Syntaxes$bind0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #718                // Method bind0$lzycompute$1:()V
      11: aload_0
      12: getfield      #715                // Field bind0$module:Lscalaz/syntax/Syntaxes$bind0$;
      15: areturn

  public scalaz.syntax.Syntaxes$bind$ bind();
    Code:
       0: aload_0
       1: getfield      #722                // Field bind$module:Lscalaz/syntax/Syntaxes$bind$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #725                // Method bind$lzycompute$1:()V
      11: aload_0
      12: getfield      #722                // Field bind$module:Lscalaz/syntax/Syntaxes$bind$;
      15: areturn

  public scalaz.syntax.Syntaxes$monad0$ monad0();
    Code:
       0: aload_0
       1: getfield      #729                // Field monad0$module:Lscalaz/syntax/Syntaxes$monad0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #732                // Method monad0$lzycompute$1:()V
      11: aload_0
      12: getfield      #729                // Field monad0$module:Lscalaz/syntax/Syntaxes$monad0$;
      15: areturn

  public scalaz.syntax.Syntaxes$monad$ monad();
    Code:
       0: aload_0
       1: getfield      #736                // Field monad$module:Lscalaz/syntax/Syntaxes$monad$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #739                // Method monad$lzycompute$1:()V
      11: aload_0
      12: getfield      #736                // Field monad$module:Lscalaz/syntax/Syntaxes$monad$;
      15: areturn

  public scalaz.syntax.Syntaxes$cobind0$ cobind0();
    Code:
       0: aload_0
       1: getfield      #743                // Field cobind0$module:Lscalaz/syntax/Syntaxes$cobind0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #746                // Method cobind0$lzycompute$1:()V
      11: aload_0
      12: getfield      #743                // Field cobind0$module:Lscalaz/syntax/Syntaxes$cobind0$;
      15: areturn

  public scalaz.syntax.Syntaxes$cobind$ cobind();
    Code:
       0: aload_0
       1: getfield      #750                // Field cobind$module:Lscalaz/syntax/Syntaxes$cobind$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #753                // Method cobind$lzycompute$1:()V
      11: aload_0
      12: getfield      #750                // Field cobind$module:Lscalaz/syntax/Syntaxes$cobind$;
      15: areturn

  public scalaz.syntax.Syntaxes$comonad0$ comonad0();
    Code:
       0: aload_0
       1: getfield      #757                // Field comonad0$module:Lscalaz/syntax/Syntaxes$comonad0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #760                // Method comonad0$lzycompute$1:()V
      11: aload_0
      12: getfield      #757                // Field comonad0$module:Lscalaz/syntax/Syntaxes$comonad0$;
      15: areturn

  public scalaz.syntax.Syntaxes$comonad$ comonad();
    Code:
       0: aload_0
       1: getfield      #764                // Field comonad$module:Lscalaz/syntax/Syntaxes$comonad$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #767                // Method comonad$lzycompute$1:()V
      11: aload_0
      12: getfield      #764                // Field comonad$module:Lscalaz/syntax/Syntaxes$comonad$;
      15: areturn

  public scalaz.syntax.Syntaxes$cozip0$ cozip0();
    Code:
       0: aload_0
       1: getfield      #771                // Field cozip0$module:Lscalaz/syntax/Syntaxes$cozip0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #774                // Method cozip0$lzycompute$1:()V
      11: aload_0
      12: getfield      #771                // Field cozip0$module:Lscalaz/syntax/Syntaxes$cozip0$;
      15: areturn

  public scalaz.syntax.Syntaxes$cozip$ cozip();
    Code:
       0: aload_0
       1: getfield      #778                // Field cozip$module:Lscalaz/syntax/Syntaxes$cozip$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #781                // Method cozip$lzycompute$1:()V
      11: aload_0
      12: getfield      #778                // Field cozip$module:Lscalaz/syntax/Syntaxes$cozip$;
      15: areturn

  public scalaz.syntax.Syntaxes$plus0$ plus0();
    Code:
       0: aload_0
       1: getfield      #785                // Field plus0$module:Lscalaz/syntax/Syntaxes$plus0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #788                // Method plus0$lzycompute$1:()V
      11: aload_0
      12: getfield      #785                // Field plus0$module:Lscalaz/syntax/Syntaxes$plus0$;
      15: areturn

  public scalaz.syntax.Syntaxes$plus$ plus();
    Code:
       0: aload_0
       1: getfield      #792                // Field plus$module:Lscalaz/syntax/Syntaxes$plus$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #795                // Method plus$lzycompute$1:()V
      11: aload_0
      12: getfield      #792                // Field plus$module:Lscalaz/syntax/Syntaxes$plus$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicativePlus0$ applicativePlus0();
    Code:
       0: aload_0
       1: getfield      #799                // Field applicativePlus0$module:Lscalaz/syntax/Syntaxes$applicativePlus0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #802                // Method applicativePlus0$lzycompute$1:()V
      11: aload_0
      12: getfield      #799                // Field applicativePlus0$module:Lscalaz/syntax/Syntaxes$applicativePlus0$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicativePlus$ applicativePlus();
    Code:
       0: aload_0
       1: getfield      #806                // Field applicativePlus$module:Lscalaz/syntax/Syntaxes$applicativePlus$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #809                // Method applicativePlus$lzycompute$1:()V
      11: aload_0
      12: getfield      #806                // Field applicativePlus$module:Lscalaz/syntax/Syntaxes$applicativePlus$;
      15: areturn

  public scalaz.syntax.Syntaxes$alt0$ alt0();
    Code:
       0: aload_0
       1: getfield      #813                // Field alt0$module:Lscalaz/syntax/Syntaxes$alt0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #816                // Method alt0$lzycompute$1:()V
      11: aload_0
      12: getfield      #813                // Field alt0$module:Lscalaz/syntax/Syntaxes$alt0$;
      15: areturn

  public scalaz.syntax.Syntaxes$alt$ alt();
    Code:
       0: aload_0
       1: getfield      #820                // Field alt$module:Lscalaz/syntax/Syntaxes$alt$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #823                // Method alt$lzycompute$1:()V
      11: aload_0
      12: getfield      #820                // Field alt$module:Lscalaz/syntax/Syntaxes$alt$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadPlus0$ monadPlus0();
    Code:
       0: aload_0
       1: getfield      #827                // Field monadPlus0$module:Lscalaz/syntax/Syntaxes$monadPlus0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #830                // Method monadPlus0$lzycompute$1:()V
      11: aload_0
      12: getfield      #827                // Field monadPlus0$module:Lscalaz/syntax/Syntaxes$monadPlus0$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadPlus$ monadPlus();
    Code:
       0: aload_0
       1: getfield      #834                // Field monadPlus$module:Lscalaz/syntax/Syntaxes$monadPlus$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #837                // Method monadPlus$lzycompute$1:()V
      11: aload_0
      12: getfield      #834                // Field monadPlus$module:Lscalaz/syntax/Syntaxes$monadPlus$;
      15: areturn

  public scalaz.syntax.Syntaxes$foldable0$ foldable0();
    Code:
       0: aload_0
       1: getfield      #841                // Field foldable0$module:Lscalaz/syntax/Syntaxes$foldable0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #844                // Method foldable0$lzycompute$1:()V
      11: aload_0
      12: getfield      #841                // Field foldable0$module:Lscalaz/syntax/Syntaxes$foldable0$;
      15: areturn

  public scalaz.syntax.Syntaxes$foldable$ foldable();
    Code:
       0: aload_0
       1: getfield      #848                // Field foldable$module:Lscalaz/syntax/Syntaxes$foldable$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #851                // Method foldable$lzycompute$1:()V
      11: aload_0
      12: getfield      #848                // Field foldable$module:Lscalaz/syntax/Syntaxes$foldable$;
      15: areturn

  public scalaz.syntax.Syntaxes$foldable10$ foldable10();
    Code:
       0: aload_0
       1: getfield      #855                // Field foldable10$module:Lscalaz/syntax/Syntaxes$foldable10$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #858                // Method foldable10$lzycompute$1:()V
      11: aload_0
      12: getfield      #855                // Field foldable10$module:Lscalaz/syntax/Syntaxes$foldable10$;
      15: areturn

  public scalaz.syntax.Syntaxes$foldable1$ foldable1();
    Code:
       0: aload_0
       1: getfield      #862                // Field foldable1$module:Lscalaz/syntax/Syntaxes$foldable1$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #865                // Method foldable1$lzycompute$1:()V
      11: aload_0
      12: getfield      #862                // Field foldable1$module:Lscalaz/syntax/Syntaxes$foldable1$;
      15: areturn

  public scalaz.syntax.Syntaxes$traverse0$ traverse0();
    Code:
       0: aload_0
       1: getfield      #869                // Field traverse0$module:Lscalaz/syntax/Syntaxes$traverse0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #872                // Method traverse0$lzycompute$1:()V
      11: aload_0
      12: getfield      #869                // Field traverse0$module:Lscalaz/syntax/Syntaxes$traverse0$;
      15: areturn

  public scalaz.syntax.Syntaxes$traverse$ traverse();
    Code:
       0: aload_0
       1: getfield      #876                // Field traverse$module:Lscalaz/syntax/Syntaxes$traverse$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #879                // Method traverse$lzycompute$1:()V
      11: aload_0
      12: getfield      #876                // Field traverse$module:Lscalaz/syntax/Syntaxes$traverse$;
      15: areturn

  public scalaz.syntax.Syntaxes$traverse10$ traverse10();
    Code:
       0: aload_0
       1: getfield      #883                // Field traverse10$module:Lscalaz/syntax/Syntaxes$traverse10$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #886                // Method traverse10$lzycompute$1:()V
      11: aload_0
      12: getfield      #883                // Field traverse10$module:Lscalaz/syntax/Syntaxes$traverse10$;
      15: areturn

  public scalaz.syntax.Syntaxes$traverse1$ traverse1();
    Code:
       0: aload_0
       1: getfield      #890                // Field traverse1$module:Lscalaz/syntax/Syntaxes$traverse1$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #893                // Method traverse1$lzycompute$1:()V
      11: aload_0
      12: getfield      #890                // Field traverse1$module:Lscalaz/syntax/Syntaxes$traverse1$;
      15: areturn

  public scalaz.syntax.Syntaxes$zip0$ zip0();
    Code:
       0: aload_0
       1: getfield      #897                // Field zip0$module:Lscalaz/syntax/Syntaxes$zip0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #900                // Method zip0$lzycompute$1:()V
      11: aload_0
      12: getfield      #897                // Field zip0$module:Lscalaz/syntax/Syntaxes$zip0$;
      15: areturn

  public scalaz.syntax.Syntaxes$zip$ zip();
    Code:
       0: aload_0
       1: getfield      #904                // Field zip$module:Lscalaz/syntax/Syntaxes$zip$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #907                // Method zip$lzycompute$1:()V
      11: aload_0
      12: getfield      #904                // Field zip$module:Lscalaz/syntax/Syntaxes$zip$;
      15: areturn

  public scalaz.syntax.Syntaxes$unzip0$ unzip0();
    Code:
       0: aload_0
       1: getfield      #911                // Field unzip0$module:Lscalaz/syntax/Syntaxes$unzip0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #914                // Method unzip0$lzycompute$1:()V
      11: aload_0
      12: getfield      #911                // Field unzip0$module:Lscalaz/syntax/Syntaxes$unzip0$;
      15: areturn

  public scalaz.syntax.Syntaxes$unzip$ unzip();
    Code:
       0: aload_0
       1: getfield      #918                // Field unzip$module:Lscalaz/syntax/Syntaxes$unzip$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #921                // Method unzip$lzycompute$1:()V
      11: aload_0
      12: getfield      #918                // Field unzip$module:Lscalaz/syntax/Syntaxes$unzip$;
      15: areturn

  public scalaz.syntax.Syntaxes$optional0$ optional0();
    Code:
       0: aload_0
       1: getfield      #925                // Field optional0$module:Lscalaz/syntax/Syntaxes$optional0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #928                // Method optional0$lzycompute$1:()V
      11: aload_0
      12: getfield      #925                // Field optional0$module:Lscalaz/syntax/Syntaxes$optional0$;
      15: areturn

  public scalaz.syntax.Syntaxes$optional$ optional();
    Code:
       0: aload_0
       1: getfield      #932                // Field optional$module:Lscalaz/syntax/Syntaxes$optional$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #935                // Method optional$lzycompute$1:()V
      11: aload_0
      12: getfield      #932                // Field optional$module:Lscalaz/syntax/Syntaxes$optional$;
      15: areturn

  public scalaz.syntax.Syntaxes$catchable0$ catchable0();
    Code:
       0: aload_0
       1: getfield      #939                // Field catchable0$module:Lscalaz/syntax/Syntaxes$catchable0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #942                // Method catchable0$lzycompute$1:()V
      11: aload_0
      12: getfield      #939                // Field catchable0$module:Lscalaz/syntax/Syntaxes$catchable0$;
      15: areturn

  public scalaz.syntax.Syntaxes$catchable$ catchable();
    Code:
       0: aload_0
       1: getfield      #946                // Field catchable$module:Lscalaz/syntax/Syntaxes$catchable$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #949                // Method catchable$lzycompute$1:()V
      11: aload_0
      12: getfield      #946                // Field catchable$module:Lscalaz/syntax/Syntaxes$catchable$;
      15: areturn

  public scalaz.syntax.Syntaxes$associative0$ associative0();
    Code:
       0: aload_0
       1: getfield      #953                // Field associative0$module:Lscalaz/syntax/Syntaxes$associative0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #956                // Method associative0$lzycompute$1:()V
      11: aload_0
      12: getfield      #953                // Field associative0$module:Lscalaz/syntax/Syntaxes$associative0$;
      15: areturn

  public scalaz.syntax.Syntaxes$associative$ associative();
    Code:
       0: aload_0
       1: getfield      #960                // Field associative$module:Lscalaz/syntax/Syntaxes$associative$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #963                // Method associative$lzycompute$1:()V
      11: aload_0
      12: getfield      #960                // Field associative$module:Lscalaz/syntax/Syntaxes$associative$;
      15: areturn

  public scalaz.syntax.Syntaxes$bifunctor0$ bifunctor0();
    Code:
       0: aload_0
       1: getfield      #967                // Field bifunctor0$module:Lscalaz/syntax/Syntaxes$bifunctor0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #970                // Method bifunctor0$lzycompute$1:()V
      11: aload_0
      12: getfield      #967                // Field bifunctor0$module:Lscalaz/syntax/Syntaxes$bifunctor0$;
      15: areturn

  public scalaz.syntax.Syntaxes$bifunctor$ bifunctor();
    Code:
       0: aload_0
       1: getfield      #974                // Field bifunctor$module:Lscalaz/syntax/Syntaxes$bifunctor$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #977                // Method bifunctor$lzycompute$1:()V
      11: aload_0
      12: getfield      #974                // Field bifunctor$module:Lscalaz/syntax/Syntaxes$bifunctor$;
      15: areturn

  public scalaz.syntax.Syntaxes$bifoldable0$ bifoldable0();
    Code:
       0: aload_0
       1: getfield      #981                // Field bifoldable0$module:Lscalaz/syntax/Syntaxes$bifoldable0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #984                // Method bifoldable0$lzycompute$1:()V
      11: aload_0
      12: getfield      #981                // Field bifoldable0$module:Lscalaz/syntax/Syntaxes$bifoldable0$;
      15: areturn

  public scalaz.syntax.Syntaxes$bifoldable$ bifoldable();
    Code:
       0: aload_0
       1: getfield      #988                // Field bifoldable$module:Lscalaz/syntax/Syntaxes$bifoldable$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #991                // Method bifoldable$lzycompute$1:()V
      11: aload_0
      12: getfield      #988                // Field bifoldable$module:Lscalaz/syntax/Syntaxes$bifoldable$;
      15: areturn

  public scalaz.syntax.Syntaxes$bitraverse0$ bitraverse0();
    Code:
       0: aload_0
       1: getfield      #995                // Field bitraverse0$module:Lscalaz/syntax/Syntaxes$bitraverse0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #998                // Method bitraverse0$lzycompute$1:()V
      11: aload_0
      12: getfield      #995                // Field bitraverse0$module:Lscalaz/syntax/Syntaxes$bitraverse0$;
      15: areturn

  public scalaz.syntax.Syntaxes$bitraverse$ bitraverse();
    Code:
       0: aload_0
       1: getfield      #1002               // Field bitraverse$module:Lscalaz/syntax/Syntaxes$bitraverse$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1005               // Method bitraverse$lzycompute$1:()V
      11: aload_0
      12: getfield      #1002               // Field bitraverse$module:Lscalaz/syntax/Syntaxes$bitraverse$;
      15: areturn

  public scalaz.syntax.Syntaxes$compose0$ compose0();
    Code:
       0: aload_0
       1: getfield      #1009               // Field compose0$module:Lscalaz/syntax/Syntaxes$compose0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1012               // Method compose0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1009               // Field compose0$module:Lscalaz/syntax/Syntaxes$compose0$;
      15: areturn

  public scalaz.syntax.Syntaxes$compose$ compose();
    Code:
       0: aload_0
       1: getfield      #1016               // Field compose$module:Lscalaz/syntax/Syntaxes$compose$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1019               // Method compose$lzycompute$1:()V
      11: aload_0
      12: getfield      #1016               // Field compose$module:Lscalaz/syntax/Syntaxes$compose$;
      15: areturn

  public scalaz.syntax.Syntaxes$profunctor0$ profunctor0();
    Code:
       0: aload_0
       1: getfield      #1023               // Field profunctor0$module:Lscalaz/syntax/Syntaxes$profunctor0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1026               // Method profunctor0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1023               // Field profunctor0$module:Lscalaz/syntax/Syntaxes$profunctor0$;
      15: areturn

  public scalaz.syntax.Syntaxes$profunctor$ profunctor();
    Code:
       0: aload_0
       1: getfield      #1030               // Field profunctor$module:Lscalaz/syntax/Syntaxes$profunctor$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1033               // Method profunctor$lzycompute$1:()V
      11: aload_0
      12: getfield      #1030               // Field profunctor$module:Lscalaz/syntax/Syntaxes$profunctor$;
      15: areturn

  public scalaz.syntax.Syntaxes$strong0$ strong0();
    Code:
       0: aload_0
       1: getfield      #1037               // Field strong0$module:Lscalaz/syntax/Syntaxes$strong0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1040               // Method strong0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1037               // Field strong0$module:Lscalaz/syntax/Syntaxes$strong0$;
      15: areturn

  public scalaz.syntax.Syntaxes$strong$ strong();
    Code:
       0: aload_0
       1: getfield      #1044               // Field strong$module:Lscalaz/syntax/Syntaxes$strong$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1047               // Method strong$lzycompute$1:()V
      11: aload_0
      12: getfield      #1044               // Field strong$module:Lscalaz/syntax/Syntaxes$strong$;
      15: areturn

  public scalaz.syntax.Syntaxes$proChoice0$ proChoice0();
    Code:
       0: aload_0
       1: getfield      #1051               // Field proChoice0$module:Lscalaz/syntax/Syntaxes$proChoice0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1054               // Method proChoice0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1051               // Field proChoice0$module:Lscalaz/syntax/Syntaxes$proChoice0$;
      15: areturn

  public scalaz.syntax.Syntaxes$proChoice$ proChoice();
    Code:
       0: aload_0
       1: getfield      #1058               // Field proChoice$module:Lscalaz/syntax/Syntaxes$proChoice$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1061               // Method proChoice$lzycompute$1:()V
      11: aload_0
      12: getfield      #1058               // Field proChoice$module:Lscalaz/syntax/Syntaxes$proChoice$;
      15: areturn

  public scalaz.syntax.Syntaxes$category0$ category0();
    Code:
       0: aload_0
       1: getfield      #1065               // Field category0$module:Lscalaz/syntax/Syntaxes$category0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1068               // Method category0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1065               // Field category0$module:Lscalaz/syntax/Syntaxes$category0$;
      15: areturn

  public scalaz.syntax.Syntaxes$category$ category();
    Code:
       0: aload_0
       1: getfield      #1072               // Field category$module:Lscalaz/syntax/Syntaxes$category$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1075               // Method category$lzycompute$1:()V
      11: aload_0
      12: getfield      #1072               // Field category$module:Lscalaz/syntax/Syntaxes$category$;
      15: areturn

  public scalaz.syntax.Syntaxes$arrow0$ arrow0();
    Code:
       0: aload_0
       1: getfield      #1079               // Field arrow0$module:Lscalaz/syntax/Syntaxes$arrow0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1082               // Method arrow0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1079               // Field arrow0$module:Lscalaz/syntax/Syntaxes$arrow0$;
      15: areturn

  public scalaz.syntax.Syntaxes$arrow$ arrow();
    Code:
       0: aload_0
       1: getfield      #1086               // Field arrow$module:Lscalaz/syntax/Syntaxes$arrow$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1089               // Method arrow$lzycompute$1:()V
      11: aload_0
      12: getfield      #1086               // Field arrow$module:Lscalaz/syntax/Syntaxes$arrow$;
      15: areturn

  public scalaz.syntax.Syntaxes$choice0$ choice0();
    Code:
       0: aload_0
       1: getfield      #1093               // Field choice0$module:Lscalaz/syntax/Syntaxes$choice0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1096               // Method choice0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1093               // Field choice0$module:Lscalaz/syntax/Syntaxes$choice0$;
      15: areturn

  public scalaz.syntax.Syntaxes$choice$ choice();
    Code:
       0: aload_0
       1: getfield      #1100               // Field choice$module:Lscalaz/syntax/Syntaxes$choice$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1103               // Method choice$lzycompute$1:()V
      11: aload_0
      12: getfield      #1100               // Field choice$module:Lscalaz/syntax/Syntaxes$choice$;
      15: areturn

  public scalaz.syntax.Syntaxes$split0$ split0();
    Code:
       0: aload_0
       1: getfield      #1107               // Field split0$module:Lscalaz/syntax/Syntaxes$split0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1110               // Method split0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1107               // Field split0$module:Lscalaz/syntax/Syntaxes$split0$;
      15: areturn

  public scalaz.syntax.Syntaxes$split$ split();
    Code:
       0: aload_0
       1: getfield      #1114               // Field split$module:Lscalaz/syntax/Syntaxes$split$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1117               // Method split$lzycompute$1:()V
      11: aload_0
      12: getfield      #1114               // Field split$module:Lscalaz/syntax/Syntaxes$split$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadTell0$ monadTell0();
    Code:
       0: aload_0
       1: getfield      #1121               // Field monadTell0$module:Lscalaz/syntax/Syntaxes$monadTell0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1124               // Method monadTell0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1121               // Field monadTell0$module:Lscalaz/syntax/Syntaxes$monadTell0$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadTell$ monadTell();
    Code:
       0: aload_0
       1: getfield      #1128               // Field monadTell$module:Lscalaz/syntax/Syntaxes$monadTell$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1131               // Method monadTell$lzycompute$1:()V
      11: aload_0
      12: getfield      #1128               // Field monadTell$module:Lscalaz/syntax/Syntaxes$monadTell$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadListen0$ monadListen0();
    Code:
       0: aload_0
       1: getfield      #1135               // Field monadListen0$module:Lscalaz/syntax/Syntaxes$monadListen0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1138               // Method monadListen0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1135               // Field monadListen0$module:Lscalaz/syntax/Syntaxes$monadListen0$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadListen$ monadListen();
    Code:
       0: aload_0
       1: getfield      #1142               // Field monadListen$module:Lscalaz/syntax/Syntaxes$monadListen$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1145               // Method monadListen$lzycompute$1:()V
      11: aload_0
      12: getfield      #1142               // Field monadListen$module:Lscalaz/syntax/Syntaxes$monadListen$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadError0$ monadError0();
    Code:
       0: aload_0
       1: getfield      #1149               // Field monadError0$module:Lscalaz/syntax/Syntaxes$monadError0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1152               // Method monadError0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1149               // Field monadError0$module:Lscalaz/syntax/Syntaxes$monadError0$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadError$ monadError();
    Code:
       0: aload_0
       1: getfield      #1156               // Field monadError$module:Lscalaz/syntax/Syntaxes$monadError$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1159               // Method monadError$lzycompute$1:()V
      11: aload_0
      12: getfield      #1156               // Field monadError$module:Lscalaz/syntax/Syntaxes$monadError$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicativeError0$ applicativeError0();
    Code:
       0: aload_0
       1: getfield      #1163               // Field applicativeError0$module:Lscalaz/syntax/Syntaxes$applicativeError0$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1166               // Method applicativeError0$lzycompute$1:()V
      11: aload_0
      12: getfield      #1163               // Field applicativeError0$module:Lscalaz/syntax/Syntaxes$applicativeError0$;
      15: areturn

  public scalaz.syntax.Syntaxes$applicativeError$ applicativeError();
    Code:
       0: aload_0
       1: getfield      #1170               // Field applicativeError$module:Lscalaz/syntax/Syntaxes$applicativeError$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1173               // Method applicativeError$lzycompute$1:()V
      11: aload_0
      12: getfield      #1170               // Field applicativeError$module:Lscalaz/syntax/Syntaxes$applicativeError$;
      15: areturn

  public scalaz.syntax.Syntaxes$monadTrans$ monadTrans();
    Code:
       0: aload_0
       1: getfield      #1177               // Field monadTrans$module:Lscalaz/syntax/Syntaxes$monadTrans$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1180               // Method monadTrans$lzycompute$1:()V
      11: aload_0
      12: getfield      #1177               // Field monadTrans$module:Lscalaz/syntax/Syntaxes$monadTrans$;
      15: areturn

  public scalaz.syntax.Syntaxes$id$ id();
    Code:
       0: aload_0
       1: getfield      #1184               // Field id$module:Lscalaz/syntax/Syntaxes$id$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1187               // Method id$lzycompute$1:()V
      11: aload_0
      12: getfield      #1184               // Field id$module:Lscalaz/syntax/Syntaxes$id$;
      15: areturn

  public scalaz.syntax.Syntaxes$tree$ tree();
    Code:
       0: aload_0
       1: getfield      #1191               // Field tree$module:Lscalaz/syntax/Syntaxes$tree$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1194               // Method tree$lzycompute$1:()V
      11: aload_0
      12: getfield      #1191               // Field tree$module:Lscalaz/syntax/Syntaxes$tree$;
      15: areturn

  public scalaz.syntax.Syntaxes$strictTree$ strictTree();
    Code:
       0: aload_0
       1: getfield      #1198               // Field strictTree$module:Lscalaz/syntax/Syntaxes$strictTree$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1201               // Method strictTree$lzycompute$1:()V
      11: aload_0
      12: getfield      #1198               // Field strictTree$module:Lscalaz/syntax/Syntaxes$strictTree$;
      15: areturn

  public scalaz.syntax.Syntaxes$reducer$ reducer();
    Code:
       0: aload_0
       1: getfield      #1205               // Field reducer$module:Lscalaz/syntax/Syntaxes$reducer$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1208               // Method reducer$lzycompute$1:()V
      11: aload_0
      12: getfield      #1205               // Field reducer$module:Lscalaz/syntax/Syntaxes$reducer$;
      15: areturn

  public scalaz.syntax.Syntaxes$writer$ writer();
    Code:
       0: aload_0
       1: getfield      #1212               // Field writer$module:Lscalaz/syntax/Syntaxes$writer$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1215               // Method writer$lzycompute$1:()V
      11: aload_0
      12: getfield      #1212               // Field writer$module:Lscalaz/syntax/Syntaxes$writer$;
      15: areturn

  public scalaz.syntax.Syntaxes$state$ state();
    Code:
       0: aload_0
       1: getfield      #1219               // Field state$module:Lscalaz/syntax/Syntaxes$state$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1222               // Method state$lzycompute$1:()V
      11: aload_0
      12: getfield      #1219               // Field state$module:Lscalaz/syntax/Syntaxes$state$;
      15: areturn

  public scalaz.syntax.Syntaxes$validation$ validation();
    Code:
       0: aload_0
       1: getfield      #1226               // Field validation$module:Lscalaz/syntax/Syntaxes$validation$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1229               // Method validation$lzycompute$1:()V
      11: aload_0
      12: getfield      #1226               // Field validation$module:Lscalaz/syntax/Syntaxes$validation$;
      15: areturn

  public scalaz.syntax.Syntaxes$kleisli$ kleisli();
    Code:
       0: aload_0
       1: getfield      #1233               // Field kleisli$module:Lscalaz/syntax/Syntaxes$kleisli$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1236               // Method kleisli$lzycompute$1:()V
      11: aload_0
      12: getfield      #1233               // Field kleisli$module:Lscalaz/syntax/Syntaxes$kleisli$;
      15: areturn

  public scalaz.syntax.Syntaxes$either$ either();
    Code:
       0: aload_0
       1: getfield      #1240               // Field either$module:Lscalaz/syntax/Syntaxes$either$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1243               // Method either$lzycompute$1:()V
      11: aload_0
      12: getfield      #1240               // Field either$module:Lscalaz/syntax/Syntaxes$either$;
      15: areturn

  public scalaz.syntax.Syntaxes$eithert$ eithert();
    Code:
       0: aload_0
       1: getfield      #1247               // Field eithert$module:Lscalaz/syntax/Syntaxes$eithert$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1250               // Method eithert$lzycompute$1:()V
      11: aload_0
      12: getfield      #1247               // Field eithert$module:Lscalaz/syntax/Syntaxes$eithert$;
      15: areturn

  public scalaz.syntax.Syntaxes$nel$ nel();
    Code:
       0: aload_0
       1: getfield      #1254               // Field nel$module:Lscalaz/syntax/Syntaxes$nel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1257               // Method nel$lzycompute$1:()V
      11: aload_0
      12: getfield      #1254               // Field nel$module:Lscalaz/syntax/Syntaxes$nel$;
      15: areturn

  public scalaz.syntax.Syntaxes$these$ these();
    Code:
       0: aload_0
       1: getfield      #1261               // Field these$module:Lscalaz/syntax/Syntaxes$these$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1264               // Method these$lzycompute$1:()V
      11: aload_0
      12: getfield      #1261               // Field these$module:Lscalaz/syntax/Syntaxes$these$;
      15: areturn

  public scalaz.syntax.Syntaxes$maybe$ maybe();
    Code:
       0: aload_0
       1: getfield      #1268               // Field maybe$module:Lscalaz/syntax/Syntaxes$maybe$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1271               // Method maybe$lzycompute$1:()V
      11: aload_0
      12: getfield      #1268               // Field maybe$module:Lscalaz/syntax/Syntaxes$maybe$;
      15: areturn

  public scalaz.syntax.Syntaxes$tag$ tag();
    Code:
       0: aload_0
       1: getfield      #1275               // Field tag$module:Lscalaz/syntax/Syntaxes$tag$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1278               // Method tag$lzycompute$1:()V
      11: aload_0
      12: getfield      #1275               // Field tag$module:Lscalaz/syntax/Syntaxes$tag$;
      15: areturn

  public scalaz.syntax.Syntaxes$contT$ contT();
    Code:
       0: aload_0
       1: getfield      #1282               // Field contT$module:Lscalaz/syntax/Syntaxes$contT$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1285               // Method contT$lzycompute$1:()V
      11: aload_0
      12: getfield      #1282               // Field contT$module:Lscalaz/syntax/Syntaxes$contT$;
      15: areturn

  public scalaz.syntax.Syntaxes$const$ const();
    Code:
       0: aload_0
       1: getfield      #1289               // Field const$module:Lscalaz/syntax/Syntaxes$const$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1292               // Method const$lzycompute$1:()V
      11: aload_0
      12: getfield      #1289               // Field const$module:Lscalaz/syntax/Syntaxes$const$;
      15: areturn

  public scalaz.syntax.Syntaxes$all$ all();
    Code:
       0: aload_0
       1: getfield      #1296               // Field all$module:Lscalaz/syntax/Syntaxes$all$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1299               // Method all$lzycompute$1:()V
      11: aload_0
      12: getfield      #1296               // Field all$module:Lscalaz/syntax/Syntaxes$all$;
      15: areturn

  private final void semigroup$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #553                // Field semigroup$module:Lscalaz/syntax/Syntaxes$semigroup$;
       6: ifnonnull     21
       9: aload_0
      10: new           #267                // class scalaz/syntax/Syntaxes$semigroup$
      13: dup
      14: aload_0
      15: invokespecial #1302               // Method scalaz/syntax/Syntaxes$semigroup$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #553                // Field semigroup$module:Lscalaz/syntax/Syntaxes$semigroup$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monoid$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #561                // Field monoid$module:Lscalaz/syntax/Syntaxes$monoid$;
       6: ifnonnull     21
       9: aload_0
      10: new           #225                // class scalaz/syntax/Syntaxes$monoid$
      13: dup
      14: aload_0
      15: invokespecial #1305               // Method scalaz/syntax/Syntaxes$monoid$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #561                // Field monoid$module:Lscalaz/syntax/Syntaxes$monoid$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void band$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #568                // Field band$module:Lscalaz/syntax/Syntaxes$band$;
       6: ifnonnull     21
       9: aload_0
      10: new           #60                 // class scalaz/syntax/Syntaxes$band$
      13: dup
      14: aload_0
      15: invokespecial #1306               // Method scalaz/syntax/Syntaxes$band$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #568                // Field band$module:Lscalaz/syntax/Syntaxes$band$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void equal$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #575                // Field equal$module:Lscalaz/syntax/Syntaxes$equal$;
       6: ifnonnull     21
       9: aload_0
      10: new           #150                // class scalaz/syntax/Syntaxes$equal$
      13: dup
      14: aload_0
      15: invokespecial #1307               // Method scalaz/syntax/Syntaxes$equal$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #575                // Field equal$module:Lscalaz/syntax/Syntaxes$equal$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void show$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #582                // Field show$module:Lscalaz/syntax/Syntaxes$show$;
       6: ifnonnull     21
       9: aload_0
      10: new           #270                // class scalaz/syntax/Syntaxes$show$
      13: dup
      14: aload_0
      15: invokespecial #1308               // Method scalaz/syntax/Syntaxes$show$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #582                // Field show$module:Lscalaz/syntax/Syntaxes$show$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void order$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #589                // Field order$module:Lscalaz/syntax/Syntaxes$order$;
       6: ifnonnull     21
       9: aload_0
      10: new           #237                // class scalaz/syntax/Syntaxes$order$
      13: dup
      14: aload_0
      15: invokespecial #1309               // Method scalaz/syntax/Syntaxes$order$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #589                // Field order$module:Lscalaz/syntax/Syntaxes$order$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void enum$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #596                // Field enum$module:Lscalaz/syntax/Syntaxes$enum$;
       6: ifnonnull     21
       9: aload_0
      10: new           #147                // class scalaz/syntax/Syntaxes$enum$
      13: dup
      14: aload_0
      15: invokespecial #1310               // Method scalaz/syntax/Syntaxes$enum$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #596                // Field enum$module:Lscalaz/syntax/Syntaxes$enum$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void isEmpty0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #603                // Field isEmpty0$module:Lscalaz/syntax/Syntaxes$isEmpty0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #183                // class scalaz/syntax/Syntaxes$isEmpty0$
      13: dup
      14: aload_0
      15: invokespecial #1311               // Method scalaz/syntax/Syntaxes$isEmpty0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #603                // Field isEmpty0$module:Lscalaz/syntax/Syntaxes$isEmpty0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void isEmpty$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #610                // Field isEmpty$module:Lscalaz/syntax/Syntaxes$isEmpty$;
       6: ifnonnull     21
       9: aload_0
      10: new           #180                // class scalaz/syntax/Syntaxes$isEmpty$
      13: dup
      14: aload_0
      15: invokespecial #1312               // Method scalaz/syntax/Syntaxes$isEmpty$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #610                // Field isEmpty$module:Lscalaz/syntax/Syntaxes$isEmpty$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void plusEmpty0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #617                // Field plusEmpty0$module:Lscalaz/syntax/Syntaxes$plusEmpty0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #249                // class scalaz/syntax/Syntaxes$plusEmpty0$
      13: dup
      14: aload_0
      15: invokespecial #1313               // Method scalaz/syntax/Syntaxes$plusEmpty0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #617                // Field plusEmpty0$module:Lscalaz/syntax/Syntaxes$plusEmpty0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void plusEmpty$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #624                // Field plusEmpty$module:Lscalaz/syntax/Syntaxes$plusEmpty$;
       6: ifnonnull     21
       9: aload_0
      10: new           #246                // class scalaz/syntax/Syntaxes$plusEmpty$
      13: dup
      14: aload_0
      15: invokespecial #1314               // Method scalaz/syntax/Syntaxes$plusEmpty$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #624                // Field plusEmpty$module:Lscalaz/syntax/Syntaxes$plusEmpty$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void functor0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #631                // Field functor0$module:Lscalaz/syntax/Syntaxes$functor0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #168                // class scalaz/syntax/Syntaxes$functor0$
      13: dup
      14: aload_0
      15: invokespecial #1315               // Method scalaz/syntax/Syntaxes$functor0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #631                // Field functor0$module:Lscalaz/syntax/Syntaxes$functor0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void functor$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #638                // Field functor$module:Lscalaz/syntax/Syntaxes$functor$;
       6: ifnonnull     21
       9: aload_0
      10: new           #165                // class scalaz/syntax/Syntaxes$functor$
      13: dup
      14: aload_0
      15: invokespecial #1316               // Method scalaz/syntax/Syntaxes$functor$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #638                // Field functor$module:Lscalaz/syntax/Syntaxes$functor$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void invariantFunctor0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #645                // Field invariantFunctor0$module:Lscalaz/syntax/Syntaxes$invariantFunctor0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #177                // class scalaz/syntax/Syntaxes$invariantFunctor0$
      13: dup
      14: aload_0
      15: invokespecial #1317               // Method scalaz/syntax/Syntaxes$invariantFunctor0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #645                // Field invariantFunctor0$module:Lscalaz/syntax/Syntaxes$invariantFunctor0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void invariantFunctor$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #652                // Field invariantFunctor$module:Lscalaz/syntax/Syntaxes$invariantFunctor$;
       6: ifnonnull     21
       9: aload_0
      10: new           #174                // class scalaz/syntax/Syntaxes$invariantFunctor$
      13: dup
      14: aload_0
      15: invokespecial #1318               // Method scalaz/syntax/Syntaxes$invariantFunctor$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #652                // Field invariantFunctor$module:Lscalaz/syntax/Syntaxes$invariantFunctor$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void contravariant0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #659                // Field contravariant0$module:Lscalaz/syntax/Syntaxes$contravariant0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #132                // class scalaz/syntax/Syntaxes$contravariant0$
      13: dup
      14: aload_0
      15: invokespecial #1319               // Method scalaz/syntax/Syntaxes$contravariant0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #659                // Field contravariant0$module:Lscalaz/syntax/Syntaxes$contravariant0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void contravariant$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #666                // Field contravariant$module:Lscalaz/syntax/Syntaxes$contravariant$;
       6: ifnonnull     21
       9: aload_0
      10: new           #129                // class scalaz/syntax/Syntaxes$contravariant$
      13: dup
      14: aload_0
      15: invokespecial #1320               // Method scalaz/syntax/Syntaxes$contravariant$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #666                // Field contravariant$module:Lscalaz/syntax/Syntaxes$contravariant$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void align0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #673                // Field align0$module:Lscalaz/syntax/Syntaxes$align0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #12                 // class scalaz/syntax/Syntaxes$align0$
      13: dup
      14: aload_0
      15: invokespecial #1321               // Method scalaz/syntax/Syntaxes$align0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #673                // Field align0$module:Lscalaz/syntax/Syntaxes$align0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void align$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #680                // Field align$module:Lscalaz/syntax/Syntaxes$align$;
       6: ifnonnull     21
       9: aload_0
      10: new           #9                  // class scalaz/syntax/Syntaxes$align$
      13: dup
      14: aload_0
      15: invokespecial #1322               // Method scalaz/syntax/Syntaxes$align$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #680                // Field align$module:Lscalaz/syntax/Syntaxes$align$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void apply0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #687                // Field apply0$module:Lscalaz/syntax/Syntaxes$apply0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #45                 // class scalaz/syntax/Syntaxes$apply0$
      13: dup
      14: aload_0
      15: invokespecial #1323               // Method scalaz/syntax/Syntaxes$apply0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #687                // Field apply0$module:Lscalaz/syntax/Syntaxes$apply0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void apply$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #694                // Field apply$module:Lscalaz/syntax/Syntaxes$apply$;
       6: ifnonnull     21
       9: aload_0
      10: new           #42                 // class scalaz/syntax/Syntaxes$apply$
      13: dup
      14: aload_0
      15: invokespecial #1324               // Method scalaz/syntax/Syntaxes$apply$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #694                // Field apply$module:Lscalaz/syntax/Syntaxes$apply$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicative0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #701                // Field applicative0$module:Lscalaz/syntax/Syntaxes$applicative0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #27                 // class scalaz/syntax/Syntaxes$applicative0$
      13: dup
      14: aload_0
      15: invokespecial #1325               // Method scalaz/syntax/Syntaxes$applicative0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #701                // Field applicative0$module:Lscalaz/syntax/Syntaxes$applicative0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicative$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #708                // Field applicative$module:Lscalaz/syntax/Syntaxes$applicative$;
       6: ifnonnull     21
       9: aload_0
      10: new           #24                 // class scalaz/syntax/Syntaxes$applicative$
      13: dup
      14: aload_0
      15: invokespecial #1326               // Method scalaz/syntax/Syntaxes$applicative$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #708                // Field applicative$module:Lscalaz/syntax/Syntaxes$applicative$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bind0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #715                // Field bind0$module:Lscalaz/syntax/Syntaxes$bind0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #78                 // class scalaz/syntax/Syntaxes$bind0$
      13: dup
      14: aload_0
      15: invokespecial #1327               // Method scalaz/syntax/Syntaxes$bind0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #715                // Field bind0$module:Lscalaz/syntax/Syntaxes$bind0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bind$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #722                // Field bind$module:Lscalaz/syntax/Syntaxes$bind$;
       6: ifnonnull     21
       9: aload_0
      10: new           #75                 // class scalaz/syntax/Syntaxes$bind$
      13: dup
      14: aload_0
      15: invokespecial #1328               // Method scalaz/syntax/Syntaxes$bind$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #722                // Field bind$module:Lscalaz/syntax/Syntaxes$bind$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monad0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #729                // Field monad0$module:Lscalaz/syntax/Syntaxes$monad0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #195                // class scalaz/syntax/Syntaxes$monad0$
      13: dup
      14: aload_0
      15: invokespecial #1329               // Method scalaz/syntax/Syntaxes$monad0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #729                // Field monad0$module:Lscalaz/syntax/Syntaxes$monad0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monad$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #736                // Field monad$module:Lscalaz/syntax/Syntaxes$monad$;
       6: ifnonnull     21
       9: aload_0
      10: new           #192                // class scalaz/syntax/Syntaxes$monad$
      13: dup
      14: aload_0
      15: invokespecial #1330               // Method scalaz/syntax/Syntaxes$monad$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #736                // Field monad$module:Lscalaz/syntax/Syntaxes$monad$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void cobind0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #743                // Field cobind0$module:Lscalaz/syntax/Syntaxes$cobind0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #108                // class scalaz/syntax/Syntaxes$cobind0$
      13: dup
      14: aload_0
      15: invokespecial #1331               // Method scalaz/syntax/Syntaxes$cobind0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #743                // Field cobind0$module:Lscalaz/syntax/Syntaxes$cobind0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void cobind$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #750                // Field cobind$module:Lscalaz/syntax/Syntaxes$cobind$;
       6: ifnonnull     21
       9: aload_0
      10: new           #105                // class scalaz/syntax/Syntaxes$cobind$
      13: dup
      14: aload_0
      15: invokespecial #1332               // Method scalaz/syntax/Syntaxes$cobind$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #750                // Field cobind$module:Lscalaz/syntax/Syntaxes$cobind$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void comonad0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #757                // Field comonad0$module:Lscalaz/syntax/Syntaxes$comonad0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #114                // class scalaz/syntax/Syntaxes$comonad0$
      13: dup
      14: aload_0
      15: invokespecial #1333               // Method scalaz/syntax/Syntaxes$comonad0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #757                // Field comonad0$module:Lscalaz/syntax/Syntaxes$comonad0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void comonad$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #764                // Field comonad$module:Lscalaz/syntax/Syntaxes$comonad$;
       6: ifnonnull     21
       9: aload_0
      10: new           #111                // class scalaz/syntax/Syntaxes$comonad$
      13: dup
      14: aload_0
      15: invokespecial #1334               // Method scalaz/syntax/Syntaxes$comonad$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #764                // Field comonad$module:Lscalaz/syntax/Syntaxes$comonad$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void cozip0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #771                // Field cozip0$module:Lscalaz/syntax/Syntaxes$cozip0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #138                // class scalaz/syntax/Syntaxes$cozip0$
      13: dup
      14: aload_0
      15: invokespecial #1335               // Method scalaz/syntax/Syntaxes$cozip0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #771                // Field cozip0$module:Lscalaz/syntax/Syntaxes$cozip0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void cozip$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #778                // Field cozip$module:Lscalaz/syntax/Syntaxes$cozip$;
       6: ifnonnull     21
       9: aload_0
      10: new           #135                // class scalaz/syntax/Syntaxes$cozip$
      13: dup
      14: aload_0
      15: invokespecial #1336               // Method scalaz/syntax/Syntaxes$cozip$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #778                // Field cozip$module:Lscalaz/syntax/Syntaxes$cozip$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void plus0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #785                // Field plus0$module:Lscalaz/syntax/Syntaxes$plus0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #243                // class scalaz/syntax/Syntaxes$plus0$
      13: dup
      14: aload_0
      15: invokespecial #1337               // Method scalaz/syntax/Syntaxes$plus0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #785                // Field plus0$module:Lscalaz/syntax/Syntaxes$plus0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void plus$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #792                // Field plus$module:Lscalaz/syntax/Syntaxes$plus$;
       6: ifnonnull     21
       9: aload_0
      10: new           #240                // class scalaz/syntax/Syntaxes$plus$
      13: dup
      14: aload_0
      15: invokespecial #1338               // Method scalaz/syntax/Syntaxes$plus$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #792                // Field plus$module:Lscalaz/syntax/Syntaxes$plus$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicativePlus0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #799                // Field applicativePlus0$module:Lscalaz/syntax/Syntaxes$applicativePlus0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #39                 // class scalaz/syntax/Syntaxes$applicativePlus0$
      13: dup
      14: aload_0
      15: invokespecial #1339               // Method scalaz/syntax/Syntaxes$applicativePlus0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #799                // Field applicativePlus0$module:Lscalaz/syntax/Syntaxes$applicativePlus0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicativePlus$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #806                // Field applicativePlus$module:Lscalaz/syntax/Syntaxes$applicativePlus$;
       6: ifnonnull     21
       9: aload_0
      10: new           #36                 // class scalaz/syntax/Syntaxes$applicativePlus$
      13: dup
      14: aload_0
      15: invokespecial #1340               // Method scalaz/syntax/Syntaxes$applicativePlus$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #806                // Field applicativePlus$module:Lscalaz/syntax/Syntaxes$applicativePlus$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void alt0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #813                // Field alt0$module:Lscalaz/syntax/Syntaxes$alt0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #21                 // class scalaz/syntax/Syntaxes$alt0$
      13: dup
      14: aload_0
      15: invokespecial #1341               // Method scalaz/syntax/Syntaxes$alt0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #813                // Field alt0$module:Lscalaz/syntax/Syntaxes$alt0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void alt$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #820                // Field alt$module:Lscalaz/syntax/Syntaxes$alt$;
       6: ifnonnull     21
       9: aload_0
      10: new           #18                 // class scalaz/syntax/Syntaxes$alt$
      13: dup
      14: aload_0
      15: invokespecial #1342               // Method scalaz/syntax/Syntaxes$alt$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #820                // Field alt$module:Lscalaz/syntax/Syntaxes$alt$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadPlus0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #827                // Field monadPlus0$module:Lscalaz/syntax/Syntaxes$monadPlus0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #213                // class scalaz/syntax/Syntaxes$monadPlus0$
      13: dup
      14: aload_0
      15: invokespecial #1343               // Method scalaz/syntax/Syntaxes$monadPlus0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #827                // Field monadPlus0$module:Lscalaz/syntax/Syntaxes$monadPlus0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadPlus$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #834                // Field monadPlus$module:Lscalaz/syntax/Syntaxes$monadPlus$;
       6: ifnonnull     21
       9: aload_0
      10: new           #210                // class scalaz/syntax/Syntaxes$monadPlus$
      13: dup
      14: aload_0
      15: invokespecial #1344               // Method scalaz/syntax/Syntaxes$monadPlus$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #834                // Field monadPlus$module:Lscalaz/syntax/Syntaxes$monadPlus$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void foldable0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #841                // Field foldable0$module:Lscalaz/syntax/Syntaxes$foldable0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #156                // class scalaz/syntax/Syntaxes$foldable0$
      13: dup
      14: aload_0
      15: invokespecial #1345               // Method scalaz/syntax/Syntaxes$foldable0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #841                // Field foldable0$module:Lscalaz/syntax/Syntaxes$foldable0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void foldable$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #848                // Field foldable$module:Lscalaz/syntax/Syntaxes$foldable$;
       6: ifnonnull     21
       9: aload_0
      10: new           #153                // class scalaz/syntax/Syntaxes$foldable$
      13: dup
      14: aload_0
      15: invokespecial #1346               // Method scalaz/syntax/Syntaxes$foldable$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #848                // Field foldable$module:Lscalaz/syntax/Syntaxes$foldable$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void foldable10$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #855                // Field foldable10$module:Lscalaz/syntax/Syntaxes$foldable10$;
       6: ifnonnull     21
       9: aload_0
      10: new           #162                // class scalaz/syntax/Syntaxes$foldable10$
      13: dup
      14: aload_0
      15: invokespecial #1347               // Method scalaz/syntax/Syntaxes$foldable10$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #855                // Field foldable10$module:Lscalaz/syntax/Syntaxes$foldable10$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void foldable1$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #862                // Field foldable1$module:Lscalaz/syntax/Syntaxes$foldable1$;
       6: ifnonnull     21
       9: aload_0
      10: new           #159                // class scalaz/syntax/Syntaxes$foldable1$
      13: dup
      14: aload_0
      15: invokespecial #1348               // Method scalaz/syntax/Syntaxes$foldable1$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #862                // Field foldable1$module:Lscalaz/syntax/Syntaxes$foldable1$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void traverse0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #869                // Field traverse0$module:Lscalaz/syntax/Syntaxes$traverse0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #300                // class scalaz/syntax/Syntaxes$traverse0$
      13: dup
      14: aload_0
      15: invokespecial #1349               // Method scalaz/syntax/Syntaxes$traverse0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #869                // Field traverse0$module:Lscalaz/syntax/Syntaxes$traverse0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void traverse$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #876                // Field traverse$module:Lscalaz/syntax/Syntaxes$traverse$;
       6: ifnonnull     21
       9: aload_0
      10: new           #297                // class scalaz/syntax/Syntaxes$traverse$
      13: dup
      14: aload_0
      15: invokespecial #1350               // Method scalaz/syntax/Syntaxes$traverse$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #876                // Field traverse$module:Lscalaz/syntax/Syntaxes$traverse$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void traverse10$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #883                // Field traverse10$module:Lscalaz/syntax/Syntaxes$traverse10$;
       6: ifnonnull     21
       9: aload_0
      10: new           #306                // class scalaz/syntax/Syntaxes$traverse10$
      13: dup
      14: aload_0
      15: invokespecial #1351               // Method scalaz/syntax/Syntaxes$traverse10$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #883                // Field traverse10$module:Lscalaz/syntax/Syntaxes$traverse10$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void traverse1$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #890                // Field traverse1$module:Lscalaz/syntax/Syntaxes$traverse1$;
       6: ifnonnull     21
       9: aload_0
      10: new           #303                // class scalaz/syntax/Syntaxes$traverse1$
      13: dup
      14: aload_0
      15: invokespecial #1352               // Method scalaz/syntax/Syntaxes$traverse1$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #890                // Field traverse1$module:Lscalaz/syntax/Syntaxes$traverse1$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void zip0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #897                // Field zip0$module:Lscalaz/syntax/Syntaxes$zip0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #327                // class scalaz/syntax/Syntaxes$zip0$
      13: dup
      14: aload_0
      15: invokespecial #1353               // Method scalaz/syntax/Syntaxes$zip0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #897                // Field zip0$module:Lscalaz/syntax/Syntaxes$zip0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void zip$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #904                // Field zip$module:Lscalaz/syntax/Syntaxes$zip$;
       6: ifnonnull     21
       9: aload_0
      10: new           #324                // class scalaz/syntax/Syntaxes$zip$
      13: dup
      14: aload_0
      15: invokespecial #1354               // Method scalaz/syntax/Syntaxes$zip$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #904                // Field zip$module:Lscalaz/syntax/Syntaxes$zip$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void unzip0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #911                // Field unzip0$module:Lscalaz/syntax/Syntaxes$unzip0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #315                // class scalaz/syntax/Syntaxes$unzip0$
      13: dup
      14: aload_0
      15: invokespecial #1355               // Method scalaz/syntax/Syntaxes$unzip0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #911                // Field unzip0$module:Lscalaz/syntax/Syntaxes$unzip0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void unzip$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #918                // Field unzip$module:Lscalaz/syntax/Syntaxes$unzip$;
       6: ifnonnull     21
       9: aload_0
      10: new           #312                // class scalaz/syntax/Syntaxes$unzip$
      13: dup
      14: aload_0
      15: invokespecial #1356               // Method scalaz/syntax/Syntaxes$unzip$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #918                // Field unzip$module:Lscalaz/syntax/Syntaxes$unzip$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void optional0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #925                // Field optional0$module:Lscalaz/syntax/Syntaxes$optional0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #234                // class scalaz/syntax/Syntaxes$optional0$
      13: dup
      14: aload_0
      15: invokespecial #1357               // Method scalaz/syntax/Syntaxes$optional0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #925                // Field optional0$module:Lscalaz/syntax/Syntaxes$optional0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void optional$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #932                // Field optional$module:Lscalaz/syntax/Syntaxes$optional$;
       6: ifnonnull     21
       9: aload_0
      10: new           #231                // class scalaz/syntax/Syntaxes$optional$
      13: dup
      14: aload_0
      15: invokespecial #1358               // Method scalaz/syntax/Syntaxes$optional$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #932                // Field optional$module:Lscalaz/syntax/Syntaxes$optional$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void catchable0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #939                // Field catchable0$module:Lscalaz/syntax/Syntaxes$catchable0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #90                 // class scalaz/syntax/Syntaxes$catchable0$
      13: dup
      14: aload_0
      15: invokespecial #1359               // Method scalaz/syntax/Syntaxes$catchable0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #939                // Field catchable0$module:Lscalaz/syntax/Syntaxes$catchable0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void catchable$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #946                // Field catchable$module:Lscalaz/syntax/Syntaxes$catchable$;
       6: ifnonnull     21
       9: aload_0
      10: new           #87                 // class scalaz/syntax/Syntaxes$catchable$
      13: dup
      14: aload_0
      15: invokespecial #1360               // Method scalaz/syntax/Syntaxes$catchable$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #946                // Field catchable$module:Lscalaz/syntax/Syntaxes$catchable$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void associative0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #953                // Field associative0$module:Lscalaz/syntax/Syntaxes$associative0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #57                 // class scalaz/syntax/Syntaxes$associative0$
      13: dup
      14: aload_0
      15: invokespecial #1361               // Method scalaz/syntax/Syntaxes$associative0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #953                // Field associative0$module:Lscalaz/syntax/Syntaxes$associative0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void associative$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #960                // Field associative$module:Lscalaz/syntax/Syntaxes$associative$;
       6: ifnonnull     21
       9: aload_0
      10: new           #54                 // class scalaz/syntax/Syntaxes$associative$
      13: dup
      14: aload_0
      15: invokespecial #1362               // Method scalaz/syntax/Syntaxes$associative$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #960                // Field associative$module:Lscalaz/syntax/Syntaxes$associative$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bifunctor0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #967                // Field bifunctor0$module:Lscalaz/syntax/Syntaxes$bifunctor0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #72                 // class scalaz/syntax/Syntaxes$bifunctor0$
      13: dup
      14: aload_0
      15: invokespecial #1363               // Method scalaz/syntax/Syntaxes$bifunctor0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #967                // Field bifunctor0$module:Lscalaz/syntax/Syntaxes$bifunctor0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bifunctor$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #974                // Field bifunctor$module:Lscalaz/syntax/Syntaxes$bifunctor$;
       6: ifnonnull     21
       9: aload_0
      10: new           #69                 // class scalaz/syntax/Syntaxes$bifunctor$
      13: dup
      14: aload_0
      15: invokespecial #1364               // Method scalaz/syntax/Syntaxes$bifunctor$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #974                // Field bifunctor$module:Lscalaz/syntax/Syntaxes$bifunctor$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bifoldable0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #981                // Field bifoldable0$module:Lscalaz/syntax/Syntaxes$bifoldable0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #66                 // class scalaz/syntax/Syntaxes$bifoldable0$
      13: dup
      14: aload_0
      15: invokespecial #1365               // Method scalaz/syntax/Syntaxes$bifoldable0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #981                // Field bifoldable0$module:Lscalaz/syntax/Syntaxes$bifoldable0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bifoldable$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #988                // Field bifoldable$module:Lscalaz/syntax/Syntaxes$bifoldable$;
       6: ifnonnull     21
       9: aload_0
      10: new           #63                 // class scalaz/syntax/Syntaxes$bifoldable$
      13: dup
      14: aload_0
      15: invokespecial #1366               // Method scalaz/syntax/Syntaxes$bifoldable$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #988                // Field bifoldable$module:Lscalaz/syntax/Syntaxes$bifoldable$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bitraverse0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #995                // Field bitraverse0$module:Lscalaz/syntax/Syntaxes$bitraverse0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #84                 // class scalaz/syntax/Syntaxes$bitraverse0$
      13: dup
      14: aload_0
      15: invokespecial #1367               // Method scalaz/syntax/Syntaxes$bitraverse0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #995                // Field bitraverse0$module:Lscalaz/syntax/Syntaxes$bitraverse0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void bitraverse$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1002               // Field bitraverse$module:Lscalaz/syntax/Syntaxes$bitraverse$;
       6: ifnonnull     21
       9: aload_0
      10: new           #81                 // class scalaz/syntax/Syntaxes$bitraverse$
      13: dup
      14: aload_0
      15: invokespecial #1368               // Method scalaz/syntax/Syntaxes$bitraverse$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1002               // Field bitraverse$module:Lscalaz/syntax/Syntaxes$bitraverse$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void compose0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1009               // Field compose0$module:Lscalaz/syntax/Syntaxes$compose0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #120                // class scalaz/syntax/Syntaxes$compose0$
      13: dup
      14: aload_0
      15: invokespecial #1369               // Method scalaz/syntax/Syntaxes$compose0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1009               // Field compose0$module:Lscalaz/syntax/Syntaxes$compose0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void compose$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1016               // Field compose$module:Lscalaz/syntax/Syntaxes$compose$;
       6: ifnonnull     21
       9: aload_0
      10: new           #117                // class scalaz/syntax/Syntaxes$compose$
      13: dup
      14: aload_0
      15: invokespecial #1370               // Method scalaz/syntax/Syntaxes$compose$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1016               // Field compose$module:Lscalaz/syntax/Syntaxes$compose$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void profunctor0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1023               // Field profunctor0$module:Lscalaz/syntax/Syntaxes$profunctor0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #261                // class scalaz/syntax/Syntaxes$profunctor0$
      13: dup
      14: aload_0
      15: invokespecial #1371               // Method scalaz/syntax/Syntaxes$profunctor0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1023               // Field profunctor0$module:Lscalaz/syntax/Syntaxes$profunctor0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void profunctor$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1030               // Field profunctor$module:Lscalaz/syntax/Syntaxes$profunctor$;
       6: ifnonnull     21
       9: aload_0
      10: new           #258                // class scalaz/syntax/Syntaxes$profunctor$
      13: dup
      14: aload_0
      15: invokespecial #1372               // Method scalaz/syntax/Syntaxes$profunctor$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1030               // Field profunctor$module:Lscalaz/syntax/Syntaxes$profunctor$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void strong0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1037               // Field strong0$module:Lscalaz/syntax/Syntaxes$strong0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #288                // class scalaz/syntax/Syntaxes$strong0$
      13: dup
      14: aload_0
      15: invokespecial #1373               // Method scalaz/syntax/Syntaxes$strong0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1037               // Field strong0$module:Lscalaz/syntax/Syntaxes$strong0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void strong$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1044               // Field strong$module:Lscalaz/syntax/Syntaxes$strong$;
       6: ifnonnull     21
       9: aload_0
      10: new           #285                // class scalaz/syntax/Syntaxes$strong$
      13: dup
      14: aload_0
      15: invokespecial #1374               // Method scalaz/syntax/Syntaxes$strong$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1044               // Field strong$module:Lscalaz/syntax/Syntaxes$strong$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void proChoice0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1051               // Field proChoice0$module:Lscalaz/syntax/Syntaxes$proChoice0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #255                // class scalaz/syntax/Syntaxes$proChoice0$
      13: dup
      14: aload_0
      15: invokespecial #1375               // Method scalaz/syntax/Syntaxes$proChoice0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1051               // Field proChoice0$module:Lscalaz/syntax/Syntaxes$proChoice0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void proChoice$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1058               // Field proChoice$module:Lscalaz/syntax/Syntaxes$proChoice$;
       6: ifnonnull     21
       9: aload_0
      10: new           #252                // class scalaz/syntax/Syntaxes$proChoice$
      13: dup
      14: aload_0
      15: invokespecial #1376               // Method scalaz/syntax/Syntaxes$proChoice$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1058               // Field proChoice$module:Lscalaz/syntax/Syntaxes$proChoice$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void category0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1065               // Field category0$module:Lscalaz/syntax/Syntaxes$category0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #96                 // class scalaz/syntax/Syntaxes$category0$
      13: dup
      14: aload_0
      15: invokespecial #1377               // Method scalaz/syntax/Syntaxes$category0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1065               // Field category0$module:Lscalaz/syntax/Syntaxes$category0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void category$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1072               // Field category$module:Lscalaz/syntax/Syntaxes$category$;
       6: ifnonnull     21
       9: aload_0
      10: new           #93                 // class scalaz/syntax/Syntaxes$category$
      13: dup
      14: aload_0
      15: invokespecial #1378               // Method scalaz/syntax/Syntaxes$category$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1072               // Field category$module:Lscalaz/syntax/Syntaxes$category$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void arrow0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1079               // Field arrow0$module:Lscalaz/syntax/Syntaxes$arrow0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #51                 // class scalaz/syntax/Syntaxes$arrow0$
      13: dup
      14: aload_0
      15: invokespecial #1379               // Method scalaz/syntax/Syntaxes$arrow0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1079               // Field arrow0$module:Lscalaz/syntax/Syntaxes$arrow0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void arrow$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1086               // Field arrow$module:Lscalaz/syntax/Syntaxes$arrow$;
       6: ifnonnull     21
       9: aload_0
      10: new           #48                 // class scalaz/syntax/Syntaxes$arrow$
      13: dup
      14: aload_0
      15: invokespecial #1380               // Method scalaz/syntax/Syntaxes$arrow$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1086               // Field arrow$module:Lscalaz/syntax/Syntaxes$arrow$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void choice0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1093               // Field choice0$module:Lscalaz/syntax/Syntaxes$choice0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #102                // class scalaz/syntax/Syntaxes$choice0$
      13: dup
      14: aload_0
      15: invokespecial #1381               // Method scalaz/syntax/Syntaxes$choice0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1093               // Field choice0$module:Lscalaz/syntax/Syntaxes$choice0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void choice$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1100               // Field choice$module:Lscalaz/syntax/Syntaxes$choice$;
       6: ifnonnull     21
       9: aload_0
      10: new           #99                 // class scalaz/syntax/Syntaxes$choice$
      13: dup
      14: aload_0
      15: invokespecial #1382               // Method scalaz/syntax/Syntaxes$choice$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1100               // Field choice$module:Lscalaz/syntax/Syntaxes$choice$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void split0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1107               // Field split0$module:Lscalaz/syntax/Syntaxes$split0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #276                // class scalaz/syntax/Syntaxes$split0$
      13: dup
      14: aload_0
      15: invokespecial #1383               // Method scalaz/syntax/Syntaxes$split0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1107               // Field split0$module:Lscalaz/syntax/Syntaxes$split0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void split$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1114               // Field split$module:Lscalaz/syntax/Syntaxes$split$;
       6: ifnonnull     21
       9: aload_0
      10: new           #273                // class scalaz/syntax/Syntaxes$split$
      13: dup
      14: aload_0
      15: invokespecial #1384               // Method scalaz/syntax/Syntaxes$split$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1114               // Field split$module:Lscalaz/syntax/Syntaxes$split$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadTell0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1121               // Field monadTell0$module:Lscalaz/syntax/Syntaxes$monadTell0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #219                // class scalaz/syntax/Syntaxes$monadTell0$
      13: dup
      14: aload_0
      15: invokespecial #1385               // Method scalaz/syntax/Syntaxes$monadTell0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1121               // Field monadTell0$module:Lscalaz/syntax/Syntaxes$monadTell0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadTell$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1128               // Field monadTell$module:Lscalaz/syntax/Syntaxes$monadTell$;
       6: ifnonnull     21
       9: aload_0
      10: new           #216                // class scalaz/syntax/Syntaxes$monadTell$
      13: dup
      14: aload_0
      15: invokespecial #1386               // Method scalaz/syntax/Syntaxes$monadTell$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1128               // Field monadTell$module:Lscalaz/syntax/Syntaxes$monadTell$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadListen0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1135               // Field monadListen0$module:Lscalaz/syntax/Syntaxes$monadListen0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #207                // class scalaz/syntax/Syntaxes$monadListen0$
      13: dup
      14: aload_0
      15: invokespecial #1387               // Method scalaz/syntax/Syntaxes$monadListen0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1135               // Field monadListen0$module:Lscalaz/syntax/Syntaxes$monadListen0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadListen$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1142               // Field monadListen$module:Lscalaz/syntax/Syntaxes$monadListen$;
       6: ifnonnull     21
       9: aload_0
      10: new           #204                // class scalaz/syntax/Syntaxes$monadListen$
      13: dup
      14: aload_0
      15: invokespecial #1388               // Method scalaz/syntax/Syntaxes$monadListen$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1142               // Field monadListen$module:Lscalaz/syntax/Syntaxes$monadListen$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadError0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1149               // Field monadError0$module:Lscalaz/syntax/Syntaxes$monadError0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #201                // class scalaz/syntax/Syntaxes$monadError0$
      13: dup
      14: aload_0
      15: invokespecial #1389               // Method scalaz/syntax/Syntaxes$monadError0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1149               // Field monadError0$module:Lscalaz/syntax/Syntaxes$monadError0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadError$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1156               // Field monadError$module:Lscalaz/syntax/Syntaxes$monadError$;
       6: ifnonnull     21
       9: aload_0
      10: new           #198                // class scalaz/syntax/Syntaxes$monadError$
      13: dup
      14: aload_0
      15: invokespecial #1390               // Method scalaz/syntax/Syntaxes$monadError$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1156               // Field monadError$module:Lscalaz/syntax/Syntaxes$monadError$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicativeError0$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1163               // Field applicativeError0$module:Lscalaz/syntax/Syntaxes$applicativeError0$;
       6: ifnonnull     21
       9: aload_0
      10: new           #33                 // class scalaz/syntax/Syntaxes$applicativeError0$
      13: dup
      14: aload_0
      15: invokespecial #1391               // Method scalaz/syntax/Syntaxes$applicativeError0$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1163               // Field applicativeError0$module:Lscalaz/syntax/Syntaxes$applicativeError0$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void applicativeError$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1170               // Field applicativeError$module:Lscalaz/syntax/Syntaxes$applicativeError$;
       6: ifnonnull     21
       9: aload_0
      10: new           #30                 // class scalaz/syntax/Syntaxes$applicativeError$
      13: dup
      14: aload_0
      15: invokespecial #1392               // Method scalaz/syntax/Syntaxes$applicativeError$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1170               // Field applicativeError$module:Lscalaz/syntax/Syntaxes$applicativeError$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void monadTrans$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1177               // Field monadTrans$module:Lscalaz/syntax/Syntaxes$monadTrans$;
       6: ifnonnull     21
       9: aload_0
      10: new           #222                // class scalaz/syntax/Syntaxes$monadTrans$
      13: dup
      14: aload_0
      15: invokespecial #1393               // Method scalaz/syntax/Syntaxes$monadTrans$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1177               // Field monadTrans$module:Lscalaz/syntax/Syntaxes$monadTrans$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void id$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1184               // Field id$module:Lscalaz/syntax/Syntaxes$id$;
       6: ifnonnull     21
       9: aload_0
      10: new           #171                // class scalaz/syntax/Syntaxes$id$
      13: dup
      14: aload_0
      15: invokespecial #1394               // Method scalaz/syntax/Syntaxes$id$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1184               // Field id$module:Lscalaz/syntax/Syntaxes$id$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void tree$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1191               // Field tree$module:Lscalaz/syntax/Syntaxes$tree$;
       6: ifnonnull     21
       9: aload_0
      10: new           #309                // class scalaz/syntax/Syntaxes$tree$
      13: dup
      14: aload_0
      15: invokespecial #1395               // Method scalaz/syntax/Syntaxes$tree$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1191               // Field tree$module:Lscalaz/syntax/Syntaxes$tree$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void strictTree$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1198               // Field strictTree$module:Lscalaz/syntax/Syntaxes$strictTree$;
       6: ifnonnull     21
       9: aload_0
      10: new           #282                // class scalaz/syntax/Syntaxes$strictTree$
      13: dup
      14: aload_0
      15: invokespecial #1396               // Method scalaz/syntax/Syntaxes$strictTree$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1198               // Field strictTree$module:Lscalaz/syntax/Syntaxes$strictTree$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void reducer$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1205               // Field reducer$module:Lscalaz/syntax/Syntaxes$reducer$;
       6: ifnonnull     21
       9: aload_0
      10: new           #264                // class scalaz/syntax/Syntaxes$reducer$
      13: dup
      14: aload_0
      15: invokespecial #1397               // Method scalaz/syntax/Syntaxes$reducer$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1205               // Field reducer$module:Lscalaz/syntax/Syntaxes$reducer$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void writer$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1212               // Field writer$module:Lscalaz/syntax/Syntaxes$writer$;
       6: ifnonnull     21
       9: aload_0
      10: new           #321                // class scalaz/syntax/Syntaxes$writer$
      13: dup
      14: aload_0
      15: invokespecial #1398               // Method scalaz/syntax/Syntaxes$writer$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1212               // Field writer$module:Lscalaz/syntax/Syntaxes$writer$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void state$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1219               // Field state$module:Lscalaz/syntax/Syntaxes$state$;
       6: ifnonnull     21
       9: aload_0
      10: new           #279                // class scalaz/syntax/Syntaxes$state$
      13: dup
      14: aload_0
      15: invokespecial #1399               // Method scalaz/syntax/Syntaxes$state$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1219               // Field state$module:Lscalaz/syntax/Syntaxes$state$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void validation$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1226               // Field validation$module:Lscalaz/syntax/Syntaxes$validation$;
       6: ifnonnull     21
       9: aload_0
      10: new           #318                // class scalaz/syntax/Syntaxes$validation$
      13: dup
      14: aload_0
      15: invokespecial #1400               // Method scalaz/syntax/Syntaxes$validation$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1226               // Field validation$module:Lscalaz/syntax/Syntaxes$validation$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void kleisli$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1233               // Field kleisli$module:Lscalaz/syntax/Syntaxes$kleisli$;
       6: ifnonnull     21
       9: aload_0
      10: new           #186                // class scalaz/syntax/Syntaxes$kleisli$
      13: dup
      14: aload_0
      15: invokespecial #1401               // Method scalaz/syntax/Syntaxes$kleisli$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1233               // Field kleisli$module:Lscalaz/syntax/Syntaxes$kleisli$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void either$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1240               // Field either$module:Lscalaz/syntax/Syntaxes$either$;
       6: ifnonnull     21
       9: aload_0
      10: new           #141                // class scalaz/syntax/Syntaxes$either$
      13: dup
      14: aload_0
      15: invokespecial #1402               // Method scalaz/syntax/Syntaxes$either$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1240               // Field either$module:Lscalaz/syntax/Syntaxes$either$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void eithert$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1247               // Field eithert$module:Lscalaz/syntax/Syntaxes$eithert$;
       6: ifnonnull     21
       9: aload_0
      10: new           #144                // class scalaz/syntax/Syntaxes$eithert$
      13: dup
      14: aload_0
      15: invokespecial #1403               // Method scalaz/syntax/Syntaxes$eithert$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1247               // Field eithert$module:Lscalaz/syntax/Syntaxes$eithert$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void nel$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1254               // Field nel$module:Lscalaz/syntax/Syntaxes$nel$;
       6: ifnonnull     21
       9: aload_0
      10: new           #228                // class scalaz/syntax/Syntaxes$nel$
      13: dup
      14: aload_0
      15: invokespecial #1404               // Method scalaz/syntax/Syntaxes$nel$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1254               // Field nel$module:Lscalaz/syntax/Syntaxes$nel$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void these$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1261               // Field these$module:Lscalaz/syntax/Syntaxes$these$;
       6: ifnonnull     21
       9: aload_0
      10: new           #294                // class scalaz/syntax/Syntaxes$these$
      13: dup
      14: aload_0
      15: invokespecial #1405               // Method scalaz/syntax/Syntaxes$these$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1261               // Field these$module:Lscalaz/syntax/Syntaxes$these$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void maybe$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1268               // Field maybe$module:Lscalaz/syntax/Syntaxes$maybe$;
       6: ifnonnull     21
       9: aload_0
      10: new           #189                // class scalaz/syntax/Syntaxes$maybe$
      13: dup
      14: aload_0
      15: invokespecial #1406               // Method scalaz/syntax/Syntaxes$maybe$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1268               // Field maybe$module:Lscalaz/syntax/Syntaxes$maybe$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void tag$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1275               // Field tag$module:Lscalaz/syntax/Syntaxes$tag$;
       6: ifnonnull     21
       9: aload_0
      10: new           #291                // class scalaz/syntax/Syntaxes$tag$
      13: dup
      14: aload_0
      15: invokespecial #1407               // Method scalaz/syntax/Syntaxes$tag$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1275               // Field tag$module:Lscalaz/syntax/Syntaxes$tag$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void contT$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1282               // Field contT$module:Lscalaz/syntax/Syntaxes$contT$;
       6: ifnonnull     21
       9: aload_0
      10: new           #126                // class scalaz/syntax/Syntaxes$contT$
      13: dup
      14: aload_0
      15: invokespecial #1408               // Method scalaz/syntax/Syntaxes$contT$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1282               // Field contT$module:Lscalaz/syntax/Syntaxes$contT$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void const$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1289               // Field const$module:Lscalaz/syntax/Syntaxes$const$;
       6: ifnonnull     21
       9: aload_0
      10: new           #123                // class scalaz/syntax/Syntaxes$const$
      13: dup
      14: aload_0
      15: invokespecial #1409               // Method scalaz/syntax/Syntaxes$const$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1289               // Field const$module:Lscalaz/syntax/Syntaxes$const$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private final void all$lzycompute$1();
    Code:
       0: aload_0
       1: monitorenter
       2: aload_0
       3: getfield      #1296               // Field all$module:Lscalaz/syntax/Syntaxes$all$;
       6: ifnonnull     21
       9: aload_0
      10: new           #15                 // class scalaz/syntax/Syntaxes$all$
      13: dup
      14: aload_0
      15: invokespecial #1410               // Method scalaz/syntax/Syntaxes$all$."<init>":(Lscalaz/syntax/Syntaxes;)V
      18: putfield      #1296               // Field all$module:Lscalaz/syntax/Syntaxes$all$;
      21: aload_0
      22: monitorexit
      23: return
      24: aload_0
      25: monitorexit
      26: athrow
    Exception table:
       from    to  target type
           2    21    24   any

  private scalaz.syntax.package$();
    Code:
       0: aload_0
       1: invokespecial #1411               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #1413               // Field MODULE$:Lscalaz/syntax/package$;
       8: aload_0
       9: invokestatic  #1416               // InterfaceMethod scalaz/syntax/Syntaxes.$init$:(Lscalaz/syntax/Syntaxes;)V
      12: return
}
