Compiled from "StreamOps.scala"
public final class scalaz.syntax.std.StreamOps$ {
  public static scalaz.syntax.std.StreamOps$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/std/StreamOps$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public final <A> scala.collection.immutable.Stream<A> interleave$extension(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: aload_2
       5: invokevirtual #30                 // Method scalaz/std/stream$.interleave:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       8: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #38                 // Method scalaz/std/stream$.toZipper:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       7: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #42                 // Method scalaz/std/stream$.zipperEnd:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       7: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> heads$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #48                 // Method scalaz/std/stream$.heads:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       7: areturn

  public final <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> tails$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: invokevirtual #52                 // Method scalaz/std/stream$.tails:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       7: areturn

  public final <B, C, A> scala.collection.immutable.Stream<scala.Function1<B, C>> zapp$extension(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: aload_2
       5: invokevirtual #58                 // Method scalaz/std/stream$.zapp:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       8: areturn

  public final <B, A> scala.collection.immutable.Stream<scalaz.Tree<B>> unfoldForest$extension(scala.collection.immutable.Stream<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.Stream<A>>>>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_3
      10: aload_1
      11: aload_3
      12: aload_2
      13: invokedynamic #87,  0             // InvokeDynamic #0:apply:(Lscalaz/std/StreamFunctions;Lscala/Function1;)Lscala/Function1;
      18: getstatic     #92                 // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      21: invokevirtual #96                 // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      24: invokevirtual #102                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      27: checkcast     #98                 // class scala/collection/immutable/Stream
      30: areturn

  public final <B, M, A> M unfoldForestM$extension(scala.collection.immutable.Stream<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_3
      10: aload_2
      11: invokedynamic #117,  0            // InvokeDynamic #1:apply:(Lscalaz/std/StreamFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: astore        4
      18: aload_1
      19: getstatic     #122                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: invokedynamic #133,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      33: invokeinterface #139,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      38: aload_3
      39: aload         4
      41: invokedynamic #149,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      46: invokevirtual #153                // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      49: areturn

  public final <A> scala.collection.immutable.Stream<A> intersperse$extension(scala.collection.immutable.Stream<A>, A);
    Code:
       0: getstatic     #27                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: aload_1
       4: aload_2
       5: invokevirtual #164                // Method scalaz/std/stream$.intersperse:(Lscala/collection/immutable/Stream;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       8: areturn

  public final <A> int hashCode$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_1
       1: invokevirtual #172                // Method scala/collection/immutable/Stream.hashCode:()I
       4: ireturn

  public final <A> boolean equals$extension(scala.collection.immutable.Stream<A>, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #178                // class scalaz/syntax/std/StreamOps
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          67
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          33
      26: aload_2
      27: checkcast     #178                // class scalaz/syntax/std/StreamOps
      30: invokevirtual #181                // Method scalaz/syntax/std/StreamOps.scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
      33: astore        4
      35: aload_1
      36: dup
      37: ifnonnull     49
      40: pop
      41: aload         4
      43: ifnull        57
      46: goto          61
      49: aload         4
      51: invokevirtual #185                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn

  private scalaz.syntax.std.StreamOps$();
    Code:
       0: aload_0
       1: invokespecial #186                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #188                // Field MODULE$:Lscalaz/syntax/std/StreamOps$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #200,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
