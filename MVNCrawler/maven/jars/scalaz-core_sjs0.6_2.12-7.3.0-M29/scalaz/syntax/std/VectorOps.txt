Compiled from "VectorOps.scala"
public final class scalaz.syntax.std.VectorOps<A> {
  private final scala.collection.immutable.Vector<A> scalaz$syntax$std$VectorOps$$self;

  public static <A> boolean equals$extension(scala.collection.immutable.Vector<A>, java.lang.Object);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method scalaz/syntax/std/VectorOps$.equals$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Z
       8: ireturn

  public static <A> int hashCode$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #35                 // Method scalaz/syntax/std/VectorOps$.hashCode$extension:(Lscala/collection/immutable/Vector;)I
       7: ireturn

  public static <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #40                 // Method scalaz/syntax/std/VectorOps$.adjacentPairs$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #43                 // Method scalaz/syntax/std/VectorOps$.allPairs$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #47                 // Method scalaz/syntax/std/VectorOps$.initz$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #50                 // Method scalaz/syntax/std/VectorOps$.tailz$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_0
      19: new           #62                 // class scala/Tuple2
      22: dup
      23: aload_1
      24: aload_3
      25: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      30: invokespecial #72                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      33: aload_2
      34: invokedynamic #96,  0             // InvokeDynamic #0:apply:(Lscala/Function2;)Lscala/Function2;
      39: invokevirtual #102                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      42: checkcast     #62                 // class scala/Tuple2
      45: areturn

  public static <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_0
      19: new           #62                 // class scala/Tuple2
      22: dup
      23: aload_1
      24: aload_3
      25: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      30: invokespecial #72                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      33: aload_2
      34: invokedynamic #112,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      39: invokevirtual #115                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      42: checkcast     #62                 // class scala/Tuple2
      45: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      25: astore        4
      27: astore_3
      28: aload_3
      29: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      32: ifne          180
      35: aload_3
      36: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      39: aload_3
      40: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      43: aload_2
      44: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      49: astore        9
      51: astore        8
      53: astore        7
      55: aload         7
      57: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      60: ifeq          72
      63: aload_2
      64: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      69: goto          133
      72: aload         7
      74: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      77: astore        10
      79: aload         7
      81: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      84: astore        11
      86: aload_1
      87: aload         8
      89: aload         10
      91: invokeinterface #135,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: invokestatic  #141                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      99: ifeq          131
     102: aload         11
     104: aload         10
     106: aload         9
     108: aload         10
     110: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     113: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     116: invokevirtual #154                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     119: checkcast     #98                 // class scala/collection/immutable/Vector
     122: astore        9
     124: astore        8
     126: astore        7
     128: goto          55
     131: aload         7
     133: astore        12
     135: aload         9
     137: astore        5
     139: aload         12
     141: aload         4
     143: aload_3
     144: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     147: astore        6
     149: aload         5
     151: aload         6
     153: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     156: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     159: invokevirtual #157                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     162: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     165: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     168: invokevirtual #154                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     171: checkcast     #98                 // class scala/collection/immutable/Vector
     174: astore        4
     176: astore_3
     177: goto          28
     180: aload         4
     182: areturn

  public static <M, A> M groupWhenM$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_0
      19: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      22: ifeq          46
      25: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload_2
      34: aload_3
      35: invokedynamic #186,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      40: invokeinterface #192,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      45: areturn
      46: aload_2
      47: aload_1
      48: invokedynamic #204,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      53: astore        4
      55: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      58: ifnonnull     63
      61: aconst_null
      62: athrow
      63: aload_2
      64: aload_0
      65: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      68: getstatic     #209                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      71: aload_2
      72: invokevirtual #213                // Method scalaz/IndexedStateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      75: astore        6
      77: astore        5
      79: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      82: ifnonnull     87
      85: aconst_null
      86: athrow
      87: aload         6
      89: aload_3
      90: aload         6
      92: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      97: aload_3
      98: aload         6
     100: aload         4
     102: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
     107: astore        8
     109: astore        7
     111: iconst_m1
     112: istore        9
     114: iload         9
     116: aload         5
     118: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
     121: iconst_1
     122: isub
     123: if_icmplt     135
     126: aload_3
     127: aload         6
     129: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     132: goto          173
     135: aload         5
     137: iload         9
     139: iconst_1
     140: iadd
     141: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     144: iload         9
     146: aload         5
     148: aload         7
     150: aload         8
     152: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     157: astore        11
     159: astore        10
     161: aload_3
     162: aload         6
     164: aload         4
     166: aload         10
     168: aload         11
     170: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     173: aload         5
     175: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     180: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     185: checkcast     #263                // class scalaz/IndexedStateT
     188: aload_0
     189: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     192: aload_2
     193: invokevirtual #267                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     196: aload_3
     197: aload_2
     198: aload_1
     199: aload_0
     200: invokedynamic #277,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     205: invokeinterface #280,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     210: areturn

  public static <M, A> M breakM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_2
      19: aload_1
      20: invokedynamic #310,  0            // InvokeDynamic #9:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      25: astore        4
      27: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: aload_2
      36: aload_3
      37: aload_2
      38: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      43: aload_3
      44: aload_2
      45: aload         4
      47: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      52: astore        6
      54: astore        5
      56: iconst_m1
      57: istore        7
      59: iload         7
      61: aload_0
      62: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      65: iconst_1
      66: isub
      67: if_icmplt     78
      70: aload_3
      71: aload_2
      72: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      75: goto          113
      78: aload_0
      79: iload         7
      81: iconst_1
      82: iadd
      83: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      86: iload         7
      88: aload_0
      89: aload         5
      91: aload         6
      93: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      98: astore        9
     100: astore        8
     102: aload_3
     103: aload_2
     104: aload         4
     106: aload         8
     108: aload         9
     110: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     113: aload_0
     114: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     119: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     124: areturn

  public static <M, A> M spanM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: aload_2
      27: aload_3
      28: aload_2
      29: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      34: aload_3
      35: aload_2
      36: aload_1
      37: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      42: astore        5
      44: astore        4
      46: iconst_m1
      47: istore        6
      49: iload         6
      51: aload_0
      52: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      55: iconst_1
      56: isub
      57: if_icmplt     68
      60: aload_3
      61: aload_2
      62: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      65: goto          102
      68: aload_0
      69: iload         6
      71: iconst_1
      72: iadd
      73: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      76: iload         6
      78: aload_0
      79: aload         4
      81: aload         5
      83: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      88: astore        8
      90: astore        7
      92: aload_3
      93: aload_2
      94: aload_1
      95: aload         7
      97: aload         8
      99: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     102: aload_0
     103: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     108: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     113: areturn

  public static <M, A> M partitionM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_3
      19: aload_2
      20: invokedynamic #333,  0            // InvokeDynamic #10:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      25: aload_2
      26: aload_1
      27: invokedynamic #341,  0            // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      32: astore        5
      34: astore        4
      36: iconst_m1
      37: istore        6
      39: iload         6
      41: aload_0
      42: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      45: iconst_1
      46: isub
      47: if_icmplt     56
      50: aload_3
      51: aload_2
      52: invokestatic  #329                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      55: areturn
      56: aload_0
      57: iload         6
      59: iconst_1
      60: iadd
      61: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      64: iload         6
      66: aload_0
      67: aload         4
      69: aload         5
      71: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      76: astore        8
      78: astore        7
      80: aload_2
      81: aload_1
      82: aload         7
      84: aload         8
      86: invokestatic  #337                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      89: areturn

  public static <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #350                // Method scalaz/syntax/std/VectorOps$.powerset$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public static <M, A> M findM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_2
      17: invokedynamic #360,  0            // InvokeDynamic #12:apply:(Lscalaz/Monad;)Lscala/Function0;
      22: aload_2
      23: aload_1
      24: invokedynamic #368,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      29: astore        4
      31: astore_3
      32: iconst_m1
      33: istore        5
      35: iload         5
      37: aload_0
      38: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      41: iconst_1
      42: isub
      43: if_icmplt     51
      46: aload_2
      47: invokestatic  #356                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      50: areturn
      51: aload_0
      52: iload         5
      54: iconst_1
      55: iadd
      56: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      59: iload         5
      61: aload_0
      62: aload_3
      63: aload         4
      65: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      70: astore        7
      72: astore        6
      74: aload_2
      75: aload_1
      76: aload         6
      78: aload         7
      80: invokestatic  #364                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$3:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      83: areturn

  public static <M, A> M filterM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_3
      19: aload_2
      20: invokedynamic #378,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      25: aload_2
      26: aload_1
      27: invokedynamic #383,  0            // InvokeDynamic #15:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      32: astore        5
      34: astore        4
      36: iconst_m1
      37: istore        6
      39: iload         6
      41: aload_0
      42: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      45: iconst_1
      46: isub
      47: if_icmplt     56
      50: aload_3
      51: aload_2
      52: invokestatic  #376                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      55: areturn
      56: aload_0
      57: iload         6
      59: iconst_1
      60: iadd
      61: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      64: iload         6
      66: aload_0
      67: aload         4
      69: aload         5
      71: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      76: astore        8
      78: astore        7
      80: aload_2
      81: aload_1
      82: aload         7
      84: aload         8
      86: invokestatic  #381                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      89: areturn

  public static <M, A> M takeUntilM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_2
      19: aload_1
      20: invokedynamic #394,  0            // InvokeDynamic #16:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      25: astore        4
      27: aload_3
      28: aload_2
      29: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      34: aload_3
      35: aload_2
      36: aload         4
      38: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      43: astore        6
      45: astore        5
      47: iconst_m1
      48: istore        7
      50: iload         7
      52: aload_0
      53: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      56: iconst_1
      57: isub
      58: if_icmplt     67
      61: aload_3
      62: aload_2
      63: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      66: areturn
      67: aload_0
      68: iload         7
      70: iconst_1
      71: iadd
      72: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      75: iload         7
      77: aload_0
      78: aload         5
      80: aload         6
      82: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      87: astore        9
      89: astore        8
      91: aload_3
      92: aload_2
      93: aload         4
      95: aload         8
      97: aload         9
      99: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     102: areturn

  public static <M, A> M takeWhileM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_3
      18: aload_3
      19: aload_2
      20: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      25: aload_3
      26: aload_2
      27: aload_1
      28: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      33: astore        5
      35: astore        4
      37: iconst_m1
      38: istore        6
      40: iload         6
      42: aload_0
      43: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      46: iconst_1
      47: isub
      48: if_icmplt     57
      51: aload_3
      52: aload_2
      53: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      56: areturn
      57: aload_0
      58: iload         6
      60: iconst_1
      61: iadd
      62: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      65: iload         6
      67: aload_0
      68: aload         4
      70: aload         5
      72: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      77: astore        8
      79: astore        7
      81: aload_3
      82: aload_2
      83: aload_1
      84: aload         7
      86: aload         8
      88: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      91: areturn

  public static <B, A> B $less$up$greater$extension(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_0
      17: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      20: ifeq          38
      23: getstatic     #414                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload_2
      32: invokeinterface #419,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      37: areturn
      38: aload_1
      39: getstatic     #424                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      42: aload_0
      43: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      46: getstatic     #429                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      49: aload_0
      50: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      53: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      56: invokevirtual #433                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      59: invokevirtual #437                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      62: invokevirtual #441                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      65: invokeinterface #443,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #448                // Method scalaz/syntax/std/VectorOps$.zipperEnd$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #451                // Method scalaz/syntax/std/VectorOps$.toZipper$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #455                // Method scalaz/syntax/std/VectorOps$.toNel$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public static <A> scala.collection.immutable.Vector<A> intersperse$extension(scala.collection.immutable.Vector<A>, A);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #461                // Method scalaz/syntax/std/VectorOps$.intersperse$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       8: areturn

  public scala.collection.immutable.Vector<A> scalaz$syntax$std$VectorOps$$self();
    Code:
       0: aload_0
       1: getfield      #464                // Field scalaz$syntax$std$VectorOps$$self:Lscala/collection/immutable/Vector;
       4: areturn

  public final scala.collection.immutable.Vector<A> intersperse(A);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: aload_1
       8: invokevirtual #461                // Method scalaz/syntax/std/VectorOps$.intersperse$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
      11: areturn

  public final scalaz.Maybe<scalaz.NonEmptyList<A>> toNel();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #455                // Method scalaz/syntax/std/VectorOps$.toNel$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      10: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> toZipper();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #451                // Method scalaz/syntax/std/VectorOps$.toZipper$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      10: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> zipperEnd();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #448                // Method scalaz/syntax/std/VectorOps$.zipperEnd$extension:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
      10: areturn

  public final <B> B $less$up$greater(scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_3
      22: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      25: ifeq          43
      28: getstatic     #414                // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      31: ifnonnull     36
      34: aconst_null
      35: athrow
      36: aload_2
      37: invokeinterface #419,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      42: areturn
      43: aload_1
      44: getstatic     #424                // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      47: aload_3
      48: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      51: getstatic     #429                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      54: aload_3
      55: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      58: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      61: invokevirtual #433                // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      64: invokevirtual #437                // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      67: invokevirtual #441                // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      70: invokeinterface #443,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: areturn

  public final <M> M takeWhileM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload         4
      26: aload_2
      27: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      32: aload         4
      34: aload_2
      35: aload_1
      36: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      41: astore        6
      43: astore        5
      45: iconst_m1
      46: istore        7
      48: iload         7
      50: aload_3
      51: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      54: iconst_1
      55: isub
      56: if_icmplt     66
      59: aload         4
      61: aload_2
      62: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      65: areturn
      66: aload_3
      67: iload         7
      69: iconst_1
      70: iadd
      71: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      74: iload         7
      76: aload_3
      77: aload         5
      79: aload         6
      81: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      86: astore        9
      88: astore        8
      90: aload         4
      92: aload_2
      93: aload_1
      94: aload         8
      96: aload         9
      98: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     101: areturn

  public final <M> M takeUntilM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload_2
      25: aload_1
      26: invokedynamic #394,  0            // InvokeDynamic #16:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: aload         4
      35: aload_2
      36: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      41: aload         4
      43: aload_2
      44: aload         5
      46: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      51: astore        7
      53: astore        6
      55: iconst_m1
      56: istore        8
      58: iload         8
      60: aload_3
      61: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      64: iconst_1
      65: isub
      66: if_icmplt     76
      69: aload         4
      71: aload_2
      72: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      75: areturn
      76: aload_3
      77: iload         8
      79: iconst_1
      80: iadd
      81: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      84: iload         8
      86: aload_3
      87: aload         6
      89: aload         7
      91: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      96: astore        10
      98: astore        9
     100: aload         4
     102: aload_2
     103: aload         5
     105: aload         9
     107: aload         10
     109: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     112: areturn

  public final <M> M filterM(scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload         4
      26: aload_2
      27: invokedynamic #378,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      32: aload_2
      33: aload_1
      34: invokedynamic #383,  0            // InvokeDynamic #15:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      39: astore        6
      41: astore        5
      43: iconst_m1
      44: istore        7
      46: iload         7
      48: aload_3
      49: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      52: iconst_1
      53: isub
      54: if_icmplt     64
      57: aload         4
      59: aload_2
      60: invokestatic  #376                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      63: areturn
      64: aload_3
      65: iload         7
      67: iconst_1
      68: iadd
      69: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      72: iload         7
      74: aload_3
      75: aload         5
      77: aload         6
      79: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      84: astore        9
      86: astore        8
      88: aload_2
      89: aload_1
      90: aload         8
      92: aload         9
      94: invokestatic  #381                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      97: areturn

  public final <M> M findM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_2
      22: invokedynamic #360,  0            // InvokeDynamic #12:apply:(Lscalaz/Monad;)Lscala/Function0;
      27: aload_2
      28: aload_1
      29: invokedynamic #368,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      34: astore        5
      36: astore        4
      38: iconst_m1
      39: istore        6
      41: iload         6
      43: aload_3
      44: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      47: iconst_1
      48: isub
      49: if_icmplt     57
      52: aload_2
      53: invokestatic  #356                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      56: areturn
      57: aload_3
      58: iload         6
      60: iconst_1
      61: iadd
      62: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      65: iload         6
      67: aload_3
      68: aload         4
      70: aload         5
      72: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      77: astore        8
      79: astore        7
      81: aload_2
      82: aload_1
      83: aload         7
      85: aload         8
      87: invokestatic  #364                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$3:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      90: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #350                // Method scalaz/syntax/std/VectorOps$.powerset$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      10: areturn

  public final <M> M partitionM(scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload         4
      26: aload_2
      27: invokedynamic #333,  0            // InvokeDynamic #10:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      32: aload_2
      33: aload_1
      34: invokedynamic #341,  0            // InvokeDynamic #11:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      39: astore        6
      41: astore        5
      43: iconst_m1
      44: istore        7
      46: iload         7
      48: aload_3
      49: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      52: iconst_1
      53: isub
      54: if_icmplt     64
      57: aload         4
      59: aload_2
      60: invokestatic  #329                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      63: areturn
      64: aload_3
      65: iload         7
      67: iconst_1
      68: iadd
      69: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      72: iload         7
      74: aload_3
      75: aload         5
      77: aload         6
      79: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      84: astore        9
      86: astore        8
      88: aload_2
      89: aload_1
      90: aload         8
      92: aload         9
      94: invokestatic  #337                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      97: areturn

  public final <M> M spanM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      27: ifnonnull     32
      30: aconst_null
      31: athrow
      32: aload_2
      33: aload         4
      35: aload_2
      36: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      41: aload         4
      43: aload_2
      44: aload_1
      45: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      50: astore        6
      52: astore        5
      54: iconst_m1
      55: istore        7
      57: iload         7
      59: aload_3
      60: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      63: iconst_1
      64: isub
      65: if_icmplt     77
      68: aload         4
      70: aload_2
      71: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      74: goto          112
      77: aload_3
      78: iload         7
      80: iconst_1
      81: iadd
      82: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      85: iload         7
      87: aload_3
      88: aload         5
      90: aload         6
      92: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      97: astore        9
      99: astore        8
     101: aload         4
     103: aload_2
     104: aload_1
     105: aload         8
     107: aload         9
     109: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     112: aload_3
     113: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     118: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     123: areturn

  public final <M> M breakM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload_2
      25: aload_1
      26: invokedynamic #310,  0            // InvokeDynamic #9:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      31: astore        5
      33: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: aload_2
      42: aload         4
      44: aload_2
      45: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      50: aload         4
      52: aload_2
      53: aload         5
      55: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      60: astore        7
      62: astore        6
      64: iconst_m1
      65: istore        8
      67: iload         8
      69: aload_3
      70: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
      73: iconst_1
      74: isub
      75: if_icmplt     87
      78: aload         4
      80: aload_2
      81: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      84: goto          123
      87: aload_3
      88: iload         8
      90: iconst_1
      91: iadd
      92: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      95: iload         8
      97: aload_3
      98: aload         6
     100: aload         7
     102: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     107: astore        10
     109: astore        9
     111: aload         4
     113: aload_2
     114: aload         5
     116: aload         9
     118: aload         10
     120: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     123: aload_3
     124: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     129: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     134: areturn

  public final <M> M groupWhenM(scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload_3
      25: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      28: ifeq          53
      31: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: aload_2
      40: aload         4
      42: invokedynamic #186,  0            // InvokeDynamic #2:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      47: invokeinterface #192,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      52: areturn
      53: aload_2
      54: aload_1
      55: invokedynamic #204,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      60: astore        5
      62: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      65: ifnonnull     70
      68: aconst_null
      69: athrow
      70: aload_2
      71: aload_3
      72: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      75: getstatic     #209                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      78: aload_2
      79: invokevirtual #213                // Method scalaz/IndexedStateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      82: astore        7
      84: astore        6
      86: getstatic     #176                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      89: ifnonnull     94
      92: aconst_null
      93: athrow
      94: aload         7
      96: aload         4
      98: aload         7
     100: invokedynamic #222,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
     105: aload         4
     107: aload         7
     109: aload         5
     111: invokedynamic #232,  0            // InvokeDynamic #5:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
     116: astore        9
     118: astore        8
     120: iconst_m1
     121: istore        10
     123: iload         10
     125: aload         6
     127: invokevirtual #236                // Method scala/collection/immutable/Vector.length:()I
     130: iconst_1
     131: isub
     132: if_icmplt     145
     135: aload         4
     137: aload         7
     139: invokestatic  #217                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     142: goto          184
     145: aload         6
     147: iload         10
     149: iconst_1
     150: iadd
     151: invokevirtual #239                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     154: iload         10
     156: aload         6
     158: aload         8
     160: aload         9
     162: invokedynamic #247,  0            // InvokeDynamic #6:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     167: astore        12
     169: astore        11
     171: aload         4
     173: aload         7
     175: aload         5
     177: aload         11
     179: aload         12
     181: invokestatic  #226                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     184: aload         6
     186: invokedynamic #257,  0            // InvokeDynamic #7:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     191: invokeinterface #261,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     196: checkcast     #263                // class scalaz/IndexedStateT
     199: aload_3
     200: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     203: aload_2
     204: invokevirtual #267                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     207: aload         4
     209: aload_2
     210: aload_1
     211: aload_3
     212: invokedynamic #277,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     217: invokeinterface #280,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     222: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen(scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_2
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore_3
      23: aload_2
      24: aload_3
      25: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      30: astore        5
      32: astore        4
      34: aload         4
      36: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      39: ifne          191
      42: aload         4
      44: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      47: aload         4
      49: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      52: aload_3
      53: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      58: astore        10
      60: astore        9
      62: astore        8
      64: aload         8
      66: invokevirtual #124                // Method scala/collection/immutable/Vector.isEmpty:()Z
      69: ifeq          81
      72: aload_3
      73: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      78: goto          142
      81: aload         8
      83: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      86: astore        11
      88: aload         8
      90: invokevirtual #127                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      93: astore        12
      95: aload_1
      96: aload         9
      98: aload         11
     100: invokeinterface #135,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: invokestatic  #141                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     108: ifeq          140
     111: aload         12
     113: aload         11
     115: aload         10
     117: aload         11
     119: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     122: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     125: invokevirtual #154                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     128: checkcast     #98                 // class scala/collection/immutable/Vector
     131: astore        10
     133: astore        9
     135: astore        8
     137: goto          64
     140: aload         8
     142: astore        13
     144: aload         10
     146: astore        6
     148: aload         13
     150: aload         5
     152: aload         4
     154: invokevirtual #131                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     157: astore        7
     159: aload         6
     161: aload         7
     163: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     166: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     169: invokevirtual #157                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     172: getstatic     #146                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     175: invokevirtual #150                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     178: invokevirtual #154                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     181: checkcast     #98                 // class scala/collection/immutable/Vector
     184: astore        5
     186: astore        4
     188: goto          34
     191: aload         5
     193: areturn

  public final <B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft(C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload_3
      25: new           #62                 // class scala/Tuple2
      28: dup
      29: aload_1
      30: aload         4
      32: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      37: invokespecial #72                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_2
      41: invokedynamic #112,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function2;
      46: invokevirtual #115                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      49: checkcast     #62                 // class scala/Tuple2
      52: areturn

  public final <B, C> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight(C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #60                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore        4
      24: aload_3
      25: new           #62                 // class scala/Tuple2
      28: dup
      29: aload_1
      30: aload         4
      32: invokeinterface #68,  1           // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      37: invokespecial #72                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_2
      41: invokedynamic #96,  0             // InvokeDynamic #0:apply:(Lscala/Function2;)Lscala/Function2;
      46: invokevirtual #102                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      49: checkcast     #62                 // class scala/Tuple2
      52: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #50                 // Method scalaz/syntax/std/VectorOps$.tailz$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      10: areturn

  public final scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #47                 // Method scalaz/syntax/std/VectorOps$.initz$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      10: areturn

  public final scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #43                 // Method scalaz/syntax/std/VectorOps$.allPairs$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      10: areturn

  public final scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #40                 // Method scalaz/syntax/std/VectorOps$.adjacentPairs$extension:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
      10: areturn

  public int hashCode();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: invokevirtual #35                 // Method scalaz/syntax/std/VectorOps$.hashCode$extension:(Lscala/collection/immutable/Vector;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/VectorOps$.MODULE$:Lscalaz/syntax/std/VectorOps$;
       3: aload_0
       4: invokevirtual #471                // Method scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
       7: aload_1
       8: invokevirtual #30                 // Method scalaz/syntax/std/VectorOps$.equals$extension:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Z
      11: ireturn

  public scalaz.syntax.std.VectorOps(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #464                // Field scalaz$syntax$std$VectorOps$$self:Lscala/collection/immutable/Vector;
       5: aload_0
       6: invokespecial #530                // Method java/lang/Object."<init>":()V
       9: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #542,  0            // InvokeDynamic #17:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
