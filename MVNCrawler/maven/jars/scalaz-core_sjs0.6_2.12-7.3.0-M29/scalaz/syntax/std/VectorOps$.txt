Compiled from "VectorOps.scala"
public final class scalaz.syntax.std.VectorOps$ {
  public static scalaz.syntax.std.VectorOps$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/std/VectorOps$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public final <A> scala.collection.immutable.Vector<A> intersperse$extension(scala.collection.immutable.Vector<A>, A);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: aload_2
       5: invokevirtual #30                 // Method scalaz/std/vector$.intersperse:(Lscala/collection/immutable/Vector;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       8: areturn

  public final <A> scalaz.Maybe<scalaz.NonEmptyList<A>> toNel$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #39                 // Method scalaz/std/vector$.toNel:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #44                 // Method scalaz/std/vector$.toZipper:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #48                 // Method scalaz/std/vector$.zipperEnd:(Lscala/collection/immutable/Vector;)Lscalaz/Maybe;
       7: areturn

  public final <B, A> B $less$up$greater$extension(scala.collection.immutable.Vector<A>, scala.Function1<scalaz.NonEmptyList<A>, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: invokevirtual #59                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      12: ifeq          30
      15: getstatic     #64                 // Field scalaz/Monoid$.MODULE$:Lscalaz/Monoid$;
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload_3
      24: invokeinterface #70,  1           // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      29: areturn
      30: aload_2
      31: getstatic     #75                 // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      34: aload_1
      35: invokevirtual #78                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      38: getstatic     #83                 // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      41: aload_1
      42: invokevirtual #87                 // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      45: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
      48: invokevirtual #91                 // Method scalaz/std/vector$.vectorInstance:()Lscalaz/Traverse;
      51: invokevirtual #95                 // Method scalaz/IList$.fromFoldable:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/IList;
      54: invokevirtual #99                 // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      57: invokeinterface #105,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: areturn

  public final <M, A> M takeWhileM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload         4
      13: aload_3
      14: invokedynamic #134,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      19: aload         4
      21: aload_3
      22: aload_2
      23: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      28: astore        6
      30: astore        5
      32: iconst_m1
      33: istore        7
      35: iload         7
      37: aload_1
      38: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      41: iconst_1
      42: isub
      43: if_icmplt     53
      46: aload         4
      48: aload_3
      49: invokestatic  #119                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      52: areturn
      53: aload_1
      54: iload         7
      56: iconst_1
      57: iadd
      58: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      61: iload         7
      63: aload_1
      64: aload         5
      66: aload         6
      68: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      73: astore        9
      75: astore        8
      77: aload         4
      79: aload_3
      80: aload_2
      81: aload         8
      83: aload         9
      85: invokestatic  #140                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      88: areturn

  public final <M, A> M takeUntilM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload_3
      12: aload_2
      13: invokedynamic #187,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      18: astore        5
      20: aload         4
      22: aload_3
      23: invokedynamic #134,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      28: aload         4
      30: aload_3
      31: aload         5
      33: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      38: astore        7
      40: astore        6
      42: iconst_m1
      43: istore        8
      45: iload         8
      47: aload_1
      48: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      51: iconst_1
      52: isub
      53: if_icmplt     63
      56: aload         4
      58: aload_3
      59: invokestatic  #119                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      62: areturn
      63: aload_1
      64: iload         8
      66: iconst_1
      67: iadd
      68: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      71: iload         8
      73: aload_1
      74: aload         6
      76: aload         7
      78: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      83: astore        10
      85: astore        9
      87: aload         4
      89: aload_3
      90: aload         5
      92: aload         9
      94: aload         10
      96: invokestatic  #140                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      99: areturn

  public final <M, A> M filterM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload         4
      13: aload_3
      14: invokedynamic #204,  0            // InvokeDynamic #4:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      19: aload_3
      20: aload_2
      21: invokedynamic #212,  0            // InvokeDynamic #5:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      26: astore        6
      28: astore        5
      30: iconst_m1
      31: istore        7
      33: iload         7
      35: aload_1
      36: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      39: iconst_1
      40: isub
      41: if_icmplt     51
      44: aload         4
      46: aload_3
      47: invokestatic  #200                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      50: areturn
      51: aload_1
      52: iload         7
      54: iconst_1
      55: iadd
      56: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      59: iload         7
      61: aload_1
      62: aload         5
      64: aload         6
      66: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      71: astore        9
      73: astore        8
      75: aload_3
      76: aload_2
      77: aload         8
      79: aload         9
      81: invokestatic  #208                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$filterM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      84: areturn

  public final <M, A> M findM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_3
       9: invokedynamic #229,  0            // InvokeDynamic #6:apply:(Lscalaz/Monad;)Lscala/Function0;
      14: aload_3
      15: aload_2
      16: invokedynamic #237,  0            // InvokeDynamic #7:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      21: astore        5
      23: astore        4
      25: iconst_m1
      26: istore        6
      28: iload         6
      30: aload_1
      31: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      34: iconst_1
      35: isub
      36: if_icmplt     44
      39: aload_3
      40: invokestatic  #225                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$1:(Lscalaz/Monad;)Ljava/lang/Object;
      43: areturn
      44: aload_1
      45: iload         6
      47: iconst_1
      48: iadd
      49: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      52: iload         6
      54: aload_1
      55: aload         4
      57: aload         5
      59: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      64: astore        8
      66: astore        7
      68: aload_3
      69: aload_2
      70: aload         7
      72: aload         8
      74: invokestatic  #233                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$findM$3:(Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      77: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> powerset$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #246                // Method scalaz/std/vector$.powerset:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <M, A> M partitionM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload         4
      13: aload_3
      14: invokedynamic #253,  0            // InvokeDynamic #8:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Lscala/Function0;
      19: aload_3
      20: aload_2
      21: invokedynamic #258,  0            // InvokeDynamic #9:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function2;
      26: astore        6
      28: astore        5
      30: iconst_m1
      31: istore        7
      33: iload         7
      35: aload_1
      36: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      39: iconst_1
      40: isub
      41: if_icmplt     51
      44: aload         4
      46: aload_3
      47: invokestatic  #251                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Applicative;)Ljava/lang/Object;
      50: areturn
      51: aload_1
      52: iload         7
      54: iconst_1
      55: iadd
      56: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      59: iload         7
      61: aload_1
      62: aload         5
      64: aload         6
      66: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      71: astore        9
      73: astore        8
      75: aload_3
      76: aload_2
      77: aload         8
      79: aload         9
      81: invokestatic  #256                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$partitionM$3:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      84: areturn

  public final <M, A> M spanM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: getstatic     #269                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_3
      20: aload         4
      22: aload_3
      23: invokedynamic #134,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      28: aload         4
      30: aload_3
      31: aload_2
      32: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      37: astore        6
      39: astore        5
      41: iconst_m1
      42: istore        7
      44: iload         7
      46: aload_1
      47: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      50: iconst_1
      51: isub
      52: if_icmplt     64
      55: aload         4
      57: aload_3
      58: invokestatic  #119                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      61: goto          99
      64: aload_1
      65: iload         7
      67: iconst_1
      68: iadd
      69: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      72: iload         7
      74: aload_1
      75: aload         5
      77: aload         6
      79: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      84: astore        9
      86: astore        8
      88: aload         4
      90: aload_3
      91: aload_2
      92: aload         8
      94: aload         9
      96: invokestatic  #140                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      99: aload_1
     100: invokedynamic #279,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     105: invokeinterface #283,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     110: areturn

  public final <M, A> M breakM$extension(scala.collection.immutable.Vector<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload_3
      12: aload_2
      13: invokedynamic #294,  0            // InvokeDynamic #11:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      18: astore        5
      20: getstatic     #269                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload_3
      29: aload         4
      31: aload_3
      32: invokedynamic #134,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      37: aload         4
      39: aload_3
      40: aload         5
      42: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      47: astore        7
      49: astore        6
      51: iconst_m1
      52: istore        8
      54: iload         8
      56: aload_1
      57: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
      60: iconst_1
      61: isub
      62: if_icmplt     74
      65: aload         4
      67: aload_3
      68: invokestatic  #119                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
      71: goto          110
      74: aload_1
      75: iload         8
      77: iconst_1
      78: iadd
      79: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
      82: iload         8
      84: aload_1
      85: aload         6
      87: aload         7
      89: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
      94: astore        10
      96: astore        9
      98: aload         4
     100: aload_3
     101: aload         5
     103: aload         9
     105: aload         10
     107: invokestatic  #140                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     110: aload_1
     111: invokedynamic #279,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     116: invokeinterface #283,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     121: areturn

  public final <M, A> M groupWhenM$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload_1
      12: invokevirtual #59                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      15: ifeq          40
      18: getstatic     #269                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: aload_3
      27: aload         4
      29: invokedynamic #312,  0            // InvokeDynamic #12:apply:(Lscalaz/std/VectorFunctions;)Lscala/Function0;
      34: invokeinterface #316,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      39: areturn
      40: aload_3
      41: aload_2
      42: invokedynamic #326,  0            // InvokeDynamic #13:apply:(Lscalaz/Monad;Lscala/Function2;)Lscala/Function1;
      47: astore        5
      49: getstatic     #269                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: aload_3
      58: aload_1
      59: invokevirtual #87                 // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      62: getstatic     #331                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      65: aload_3
      66: invokevirtual #335                // Method scalaz/IndexedStateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      69: astore        7
      71: astore        6
      73: getstatic     #269                // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      76: ifnonnull     81
      79: aconst_null
      80: athrow
      81: aload         7
      83: aload         4
      85: aload         7
      87: invokedynamic #134,  0            // InvokeDynamic #0:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Lscala/Function0;
      92: aload         4
      94: aload         7
      96: aload         5
      98: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
     103: astore        9
     105: astore        8
     107: iconst_m1
     108: istore        10
     110: iload         10
     112: aload         6
     114: invokevirtual #151                // Method scala/collection/immutable/Vector.length:()I
     117: iconst_1
     118: isub
     119: if_icmplt     132
     122: aload         4
     124: aload         7
     126: invokestatic  #119                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$1:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;)Ljava/lang/Object;
     129: goto          171
     132: aload         6
     134: iload         10
     136: iconst_1
     137: iadd
     138: invokevirtual #154                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
     141: iload         10
     143: aload         6
     145: aload         8
     147: aload         9
     149: invokedynamic #162,  0            // InvokeDynamic #2:apply:(ILscala/collection/immutable/Vector;Lscala/Function0;Lscala/Function2;)Lscala/Function0;
     154: astore        12
     156: astore        11
     158: aload         4
     160: aload         7
     162: aload         5
     164: aload         11
     166: aload         12
     168: invokestatic  #140                // InterfaceMethod scalaz/std/VectorFunctions.$anonfun$takeWhileM$3:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function1;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     171: aload         6
     173: invokedynamic #279,  0            // InvokeDynamic #10:apply:(Lscala/collection/immutable/Vector;)Lscala/Function1;
     178: invokeinterface #283,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     183: checkcast     #337                // class scalaz/IndexedStateT
     186: aload_1
     187: invokevirtual #78                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     190: aload_3
     191: invokevirtual #341                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
     194: aload         4
     196: aload_3
     197: aload_2
     198: aload_1
     199: invokedynamic #351,  0            // InvokeDynamic #14:apply:(Lscalaz/std/VectorFunctions;Lscalaz/Monad;Lscala/Function2;Lscala/collection/immutable/Vector;)Lscala/Function1;
     204: invokeinterface #354,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     209: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> groupWhen$extension(scala.collection.immutable.Vector<A>, scala.Function2<A, A, java.lang.Object>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_3
      10: aload_1
      11: aload_3
      12: invokeinterface #369,  1          // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      17: astore        5
      19: astore        4
      21: aload         4
      23: invokevirtual #59                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      26: ifne          178
      29: aload         4
      31: invokevirtual #87                 // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      34: aload         4
      36: invokevirtual #78                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      39: aload_3
      40: invokeinterface #369,  1          // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      45: astore        10
      47: astore        9
      49: astore        8
      51: aload         8
      53: invokevirtual #59                 // Method scala/collection/immutable/Vector.isEmpty:()Z
      56: ifeq          68
      59: aload_3
      60: invokeinterface #369,  1          // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      65: goto          129
      68: aload         8
      70: invokevirtual #78                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
      73: astore        11
      75: aload         8
      77: invokevirtual #87                 // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
      80: astore        12
      82: aload_2
      83: aload         9
      85: aload         11
      87: invokeinterface #371,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: invokestatic  #377                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      95: ifeq          127
      98: aload         12
     100: aload         11
     102: aload         10
     104: aload         11
     106: getstatic     #382                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     109: invokevirtual #386                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     112: invokevirtual #390                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     115: checkcast     #55                 // class scala/collection/immutable/Vector
     118: astore        10
     120: astore        9
     122: astore        8
     124: goto          51
     127: aload         8
     129: astore        13
     131: aload         10
     133: astore        6
     135: aload         13
     137: aload         5
     139: aload         4
     141: invokevirtual #78                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
     144: astore        7
     146: aload         6
     148: aload         7
     150: getstatic     #382                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     153: invokevirtual #386                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     156: invokevirtual #393                // Method scala/collection/immutable/Vector.$plus$colon:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     159: getstatic     #382                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
     162: invokevirtual #386                // Method scala/collection/immutable/Vector$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     165: invokevirtual #390                // Method scala/collection/immutable/Vector.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     168: checkcast     #55                 // class scala/collection/immutable/Vector
     171: astore        5
     173: astore        4
     175: goto          21
     178: aload         5
     180: areturn

  public final <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumLeft$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload_1
      12: new           #408                // class scala/Tuple2
      15: dup
      16: aload_2
      17: aload         4
      19: invokeinterface #369,  1          // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      24: invokespecial #411                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_3
      28: invokedynamic #421,  0            // InvokeDynamic #15:apply:(Lscala/Function2;)Lscala/Function2;
      33: invokevirtual #425                // Method scala/collection/immutable/Vector.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      36: checkcast     #408                // class scala/Tuple2
      39: areturn

  public final <B, C, A> scala.Tuple2<C, scala.collection.immutable.Vector<B>> mapAccumRight$extension(scala.collection.immutable.Vector<A>, C, scala.Function2<C, A, scala.Tuple2<C, B>>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore        4
      11: aload_1
      12: new           #408                // class scala/Tuple2
      15: dup
      16: aload_2
      17: aload         4
      19: invokeinterface #369,  1          // InterfaceMethod scalaz/std/VectorFunctions.empty:()Lscala/collection/immutable/Vector;
      24: invokespecial #411                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_3
      28: invokedynamic #435,  0            // InvokeDynamic #16:apply:(Lscala/Function2;)Lscala/Function2;
      33: invokevirtual #438                // Method scala/collection/immutable/Vector.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      36: checkcast     #408                // class scala/Tuple2
      39: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> tailz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #443                // Method scalaz/std/vector$.tailz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.collection.immutable.Vector<A>> initz$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #447                // Method scalaz/std/vector$.initz:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> allPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #452                // Method scalaz/std/vector$.allPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> scala.collection.immutable.Vector<scala.Tuple2<A, A>> adjacentPairs$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: getstatic     #27                 // Field scalaz/std/vector$.MODULE$:Lscalaz/std/vector$;
       3: aload_1
       4: invokevirtual #456                // Method scalaz/std/vector$.adjacentPairs:(Lscala/collection/immutable/Vector;)Lscala/collection/immutable/Vector;
       7: areturn

  public final <A> int hashCode$extension(scala.collection.immutable.Vector<A>);
    Code:
       0: aload_1
       1: invokevirtual #462                // Method scala/collection/immutable/Vector.hashCode:()I
       4: ireturn

  public final <A> boolean equals$extension(scala.collection.immutable.Vector<A>, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #468                // class scalaz/syntax/std/VectorOps
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          67
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          33
      26: aload_2
      27: checkcast     #468                // class scalaz/syntax/std/VectorOps
      30: invokevirtual #471                // Method scalaz/syntax/std/VectorOps.scalaz$syntax$std$VectorOps$$self:()Lscala/collection/immutable/Vector;
      33: astore        4
      35: aload_1
      36: dup
      37: ifnonnull     49
      40: pop
      41: aload         4
      43: ifnull        57
      46: goto          61
      49: aload         4
      51: invokevirtual #474                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn

  private scalaz.syntax.std.VectorOps$();
    Code:
       0: aload_0
       1: invokespecial #475                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #477                // Field MODULE$:Lscalaz/syntax/std/VectorOps$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #489,  0            // InvokeDynamic #17:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
