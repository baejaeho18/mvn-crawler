Compiled from "StreamOps.scala"
public final class scalaz.syntax.std.StreamOps<A> {
  private final scala.collection.immutable.Stream<A> scalaz$syntax$std$StreamOps$$self;

  public static <A> boolean equals$extension(scala.collection.immutable.Stream<A>, java.lang.Object);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method scalaz/syntax/std/StreamOps$.equals$extension:(Lscala/collection/immutable/Stream;Ljava/lang/Object;)Z
       8: ireturn

  public static <A> int hashCode$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #35                 // Method scalaz/syntax/std/StreamOps$.hashCode$extension:(Lscala/collection/immutable/Stream;)I
       7: ireturn

  public static <A> scala.collection.immutable.Stream<A> intersperse$extension(scala.collection.immutable.Stream<A>, A);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #41                 // Method scalaz/syntax/std/StreamOps$.intersperse$extension:(Lscala/collection/immutable/Stream;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       8: areturn

  public static <B, M, A> M unfoldForestM$extension(scala.collection.immutable.Stream<A>, scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #51                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload_2
      18: aload_1
      19: invokedynamic #75,  0             // InvokeDynamic #0:apply:(Lscalaz/std/StreamFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      24: astore_3
      25: aload_0
      26: getstatic     #80                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: aload_2
      35: invokedynamic #92,  0             // InvokeDynamic #1:apply:()Lscala/Function0;
      40: invokeinterface #98,  2           // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      45: aload_2
      46: aload_3
      47: invokedynamic #108,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      52: invokevirtual #114                // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      55: areturn

  public static <B, A> scala.collection.immutable.Stream<scalaz.Tree<B>> unfoldForest$extension(scala.collection.immutable.Stream<A>, scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.Stream<A>>>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #51                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      11: dup
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: astore_2
      18: aload_0
      19: aload_2
      20: aload_1
      21: invokedynamic #131,  0            // InvokeDynamic #3:apply:(Lscalaz/std/StreamFunctions;Lscala/Function1;)Lscala/Function1;
      26: getstatic     #136                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      29: invokevirtual #140                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      32: invokevirtual #144                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #110                // class scala/collection/immutable/Stream
      38: areturn

  public static <B, C, A> scala.collection.immutable.Stream<scala.Function1<B, C>> zapp$extension(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #150                // Method scalaz/syntax/std/StreamOps$.zapp$extension:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       8: areturn

  public static <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> tails$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #155                // Method scalaz/syntax/std/StreamOps$.tails$extension:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       7: areturn

  public static <A> scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> heads$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #158                // Method scalaz/syntax/std/StreamOps$.heads$extension:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> zipperEnd$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #163                // Method scalaz/syntax/std/StreamOps$.zipperEnd$extension:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<scalaz.Zipper<A>> toZipper$extension(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #166                // Method scalaz/syntax/std/StreamOps$.toZipper$extension:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
       7: areturn

  public static <A> scala.collection.immutable.Stream<A> interleave$extension(scala.collection.immutable.Stream<A>, scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: aload_1
       5: invokevirtual #171                // Method scalaz/syntax/std/StreamOps$.interleave$extension:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
       8: areturn

  public scala.collection.immutable.Stream<A> scalaz$syntax$std$StreamOps$$self();
    Code:
       0: aload_0
       1: getfield      #174                // Field scalaz$syntax$std$StreamOps$$self:Lscala/collection/immutable/Stream;
       4: areturn

  public final scala.collection.immutable.Stream<A> interleave(scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: invokevirtual #171                // Method scalaz/syntax/std/StreamOps$.interleave$extension:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      11: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> toZipper();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: invokevirtual #166                // Method scalaz/syntax/std/StreamOps$.toZipper$extension:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
      10: areturn

  public final scalaz.Maybe<scalaz.Zipper<A>> zipperEnd();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: invokevirtual #163                // Method scalaz/syntax/std/StreamOps$.zipperEnd$extension:(Lscala/collection/immutable/Stream;)Lscalaz/Maybe;
      10: areturn

  public final scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> heads();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: invokevirtual #158                // Method scalaz/syntax/std/StreamOps$.heads$extension:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      10: areturn

  public final scala.collection.immutable.Stream<scala.collection.immutable.Stream<A>> tails();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: invokevirtual #155                // Method scalaz/syntax/std/StreamOps$.tails$extension:(Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      10: areturn

  public final <B, C> scala.collection.immutable.Stream<scala.Function1<B, C>> zapp(scala.collection.immutable.Stream<scala.Function1<A, scala.Function1<B, C>>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: invokevirtual #150                // Method scalaz/syntax/std/StreamOps$.zapp$extension:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      11: areturn

  public final <B> scala.collection.immutable.Stream<scalaz.Tree<B>> unfoldForest(scala.Function1<A, scala.Tuple2<B, scala.Function0<scala.collection.immutable.Stream<A>>>>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: astore_2
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #51                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore_3
      23: aload_2
      24: aload_3
      25: aload_1
      26: invokedynamic #131,  0            // InvokeDynamic #3:apply:(Lscalaz/std/StreamFunctions;Lscala/Function1;)Lscala/Function1;
      31: getstatic     #136                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      34: invokevirtual #140                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      37: invokevirtual #144                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      40: checkcast     #110                // class scala/collection/immutable/Stream
      43: areturn

  public final <B, M> M unfoldForestM(scala.Function1<A, M>, scalaz.Monad<M>);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #51                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_2
      23: aload_1
      24: invokedynamic #75,  0             // InvokeDynamic #0:apply:(Lscalaz/std/StreamFunctions;Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      29: astore        4
      31: aload_3
      32: getstatic     #80                 // Field scalaz/Monad$.MODULE$:Lscalaz/Monad$;
      35: ifnonnull     40
      38: aconst_null
      39: athrow
      40: aload_2
      41: invokedynamic #92,  0             // InvokeDynamic #1:apply:()Lscala/Function0;
      46: invokeinterface #98,  2           // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      51: aload_2
      52: aload         4
      54: invokedynamic #108,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function2;
      59: invokevirtual #114                // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      62: areturn

  public final scala.collection.immutable.Stream<A> intersperse(A);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: invokevirtual #41                 // Method scalaz/syntax/std/StreamOps$.intersperse$extension:(Lscala/collection/immutable/Stream;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      11: areturn

  public int hashCode();
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: invokevirtual #35                 // Method scalaz/syntax/std/StreamOps$.hashCode$extension:(Lscala/collection/immutable/Stream;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #28                 // Field scalaz/syntax/std/StreamOps$.MODULE$:Lscalaz/syntax/std/StreamOps$;
       3: aload_0
       4: invokevirtual #180                // Method scalaz$syntax$std$StreamOps$$self:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: invokevirtual #30                 // Method scalaz/syntax/std/StreamOps$.equals$extension:(Lscala/collection/immutable/Stream;Ljava/lang/Object;)Z
      11: ireturn

  public scalaz.syntax.std.StreamOps(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #174                // Field scalaz$syntax$std$StreamOps$$self:Lscala/collection/immutable/Stream;
       5: aload_0
       6: invokespecial #213                // Method java/lang/Object."<init>":()V
       9: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #225,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
