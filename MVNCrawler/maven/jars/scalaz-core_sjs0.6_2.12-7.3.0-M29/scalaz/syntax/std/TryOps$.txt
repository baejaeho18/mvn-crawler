Compiled from "TryOps.scala"
public final class scalaz.syntax.std.TryOps$ {
  public static scalaz.syntax.std.TryOps$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/syntax/std/TryOps$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public final <B, A> B cata$extension(scala.util.Try<A>, scala.Function1<A, B>, scala.Function1<java.lang.Throwable, B>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/try$.MODULE$:Lscalaz/std/try$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: instanceof    #25                 // class scala/util/Success
      12: ifeq          37
      15: aload_1
      16: checkcast     #25                 // class scala/util/Success
      19: invokevirtual #29                 // Method scala/util/Success.value:()Ljava/lang/Object;
      22: astore        5
      24: aload_2
      25: aload         5
      27: invokeinterface #35,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: astore        4
      34: goto          75
      37: aload_1
      38: instanceof    #37                 // class scala/util/Failure
      41: ifeq          66
      44: aload_1
      45: checkcast     #37                 // class scala/util/Failure
      48: invokevirtual #41                 // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      51: astore        6
      53: aload_3
      54: aload         6
      56: invokeinterface #35,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      61: astore        4
      63: goto          75
      66: new           #43                 // class scala/MatchError
      69: dup
      70: aload_1
      71: invokespecial #46                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      74: athrow
      75: aload         4
      77: areturn

  public final <A> scalaz.$bslash$div<java.lang.Throwable, A> toDisjunction$extension(scala.util.Try<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/try$.MODULE$:Lscalaz/std/try$;
       3: aload_1
       4: invokevirtual #59                 // Method scalaz/std/try$.toDisjunction:(Lscala/util/Try;)Lscalaz/$bslash$div;
       7: areturn

  public final <A> scalaz.Validation<java.lang.Throwable, A> toValidation$extension(scala.util.Try<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/try$.MODULE$:Lscalaz/std/try$;
       3: aload_1
       4: invokevirtual #65                 // Method scalaz/std/try$.toValidation:(Lscala/util/Try;)Lscalaz/Validation;
       7: areturn

  public final <A> scalaz.Validation<scalaz.NonEmptyList<java.lang.Throwable>, A> toValidationNel$extension(scala.util.Try<A>);
    Code:
       0: getstatic     #23                 // Field scalaz/std/try$.MODULE$:Lscalaz/std/try$;
       3: aload_1
       4: invokevirtual #70                 // Method scalaz/std/try$.toValidationNel:(Lscala/util/Try;)Lscalaz/Validation;
       7: areturn

  public final <A> int hashCode$extension(scala.util.Try<A>);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method scala/util/Try.hashCode:()I
       4: ireturn

  public final <A> boolean equals$extension(scala.util.Try<A>, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #85                 // class scalaz/syntax/std/TryOps
       4: ifeq          12
       7: iconst_1
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: iload_3
      15: ifeq          67
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          33
      26: aload_2
      27: checkcast     #85                 // class scalaz/syntax/std/TryOps
      30: invokevirtual #89                 // Method scalaz/syntax/std/TryOps.scalaz$syntax$std$TryOps$$self:()Lscala/util/Try;
      33: astore        4
      35: aload_1
      36: dup
      37: ifnonnull     49
      40: pop
      41: aload         4
      43: ifnull        57
      46: goto          61
      49: aload         4
      51: invokevirtual #93                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn

  private scalaz.syntax.std.TryOps$();
    Code:
       0: aload_0
       1: invokespecial #94                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #96                 // Field MODULE$:Lscalaz/syntax/std/TryOps$;
       8: return
}
