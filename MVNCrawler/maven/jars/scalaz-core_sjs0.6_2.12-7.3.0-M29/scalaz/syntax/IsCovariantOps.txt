Compiled from "IsCovariantSyntax.scala"
public final class scalaz.syntax.IsCovariantOps<F, A> implements scalaz.syntax.Ops<F> {
  private final F self;

  private final scalaz.IsCovariant<F> F;

  public F self();
    Code:
       0: aload_0
       1: getfield      #21                 // Field self:Ljava/lang/Object;
       4: areturn

  public scalaz.IsCovariant<F> F();
    Code:
       0: aload_0
       1: getfield      #27                 // Field F:Lscalaz/IsCovariant;
       4: areturn

  public <B> F widen(scalaz.Liskov<A, B>);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method F:()Lscalaz/IsCovariant;
       4: aload_0
       5: invokevirtual #35                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #40,  3           // InterfaceMethod scalaz/IsCovariant.widen:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
      14: areturn

  public scalaz.syntax.IsCovariantOps(F, scalaz.IsCovariant<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field self:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #27                 // Field F:Lscalaz/IsCovariant;
      10: aload_0
      11: invokespecial #47                 // Method java/lang/Object."<init>":()V
      14: return
}
