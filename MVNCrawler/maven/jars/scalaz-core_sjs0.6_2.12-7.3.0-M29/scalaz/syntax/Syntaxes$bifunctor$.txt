Compiled from "Syntax.scala"
public class scalaz.syntax.Syntaxes$bifunctor$ implements scalaz.syntax.ToBifunctorOps<scalaz.Bifunctor> {
  public <F, A, B> scalaz.syntax.BifunctorOps<F, A, B> ToBifunctorOps(F, scalaz.Bifunctor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorOps$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <G, F, A, B> scalaz.syntax.BifunctorOps<?, A, B> ToBifunctorVFromKleisliLike(F, scalaz.Bifunctor<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // InterfaceMethod scalaz/syntax/ToBifunctorOps0.ToBifunctorVFromKleisliLike$:(Lscalaz/syntax/ToBifunctorOps0;Ljava/lang/Object;Lscalaz/Bifunctor;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public <FA> scalaz.syntax.BifunctorOps<java.lang.Object, java.lang.Object, java.lang.Object> ToBifunctorOpsUnapply(FA, scalaz.Unapply2<scalaz.Bifunctor, FA>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // InterfaceMethod scalaz/syntax/ToBifunctorOpsU.ToBifunctorOpsUnapply$:(Lscalaz/syntax/ToBifunctorOpsU;Ljava/lang/Object;Lscalaz/Unapply2;)Lscalaz/syntax/BifunctorOps;
       6: areturn

  public scalaz.syntax.Syntaxes$bifunctor$(scalaz.syntax.Syntaxes);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #51                 // InterfaceMethod scalaz/syntax/ToBifunctorOpsU.$init$:(Lscalaz/syntax/ToBifunctorOpsU;)V
       8: aload_0
       9: invokestatic  #54                 // InterfaceMethod scalaz/syntax/ToBifunctorOps0.$init$:(Lscalaz/syntax/ToBifunctorOps0;)V
      12: return
}
