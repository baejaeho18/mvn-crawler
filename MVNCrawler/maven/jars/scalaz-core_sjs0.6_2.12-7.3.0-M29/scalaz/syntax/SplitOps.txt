Compiled from "SplitSyntax.scala"
public final class scalaz.syntax.SplitOps<F, A, B> implements scalaz.syntax.Ops<F> {
  private final F self;

  private final scalaz.Split<F> F;

  public F self();
    Code:
       0: aload_0
       1: getfield      #21                 // Field self:Ljava/lang/Object;
       4: areturn

  public scalaz.Split<F> F();
    Code:
       0: aload_0
       1: getfield      #27                 // Field F:Lscalaz/Split;
       4: areturn

  public final <C, D> F $minus$times$minus(F);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method F:()Lscalaz/Split;
       4: aload_0
       5: invokevirtual #35                 // Method self:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #41,  3           // InterfaceMethod scalaz/Split.split:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public scalaz.syntax.SplitOps(F, scalaz.Split<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field self:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: putfield      #27                 // Field F:Lscalaz/Split;
      10: aload_0
      11: invokespecial #47                 // Method java/lang/Object."<init>":()V
      14: return
}
