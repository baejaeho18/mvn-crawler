Compiled from "OptionT.scala"
public final class scalaz.OptionT<F, A> implements scala.Product, scala.Serializable {
  private final F run;

  public static <F, A> scala.Option<F> unapply(scalaz.OptionT<F, A>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #33                 // Method scalaz/OptionT$.unapply:(Lscalaz/OptionT;)Lscala/Option;
       7: areturn

  public static <F, A> scalaz.OptionT<F, A> apply(F);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #38                 // Method scalaz/OptionT$.apply:(Ljava/lang/Object;)Lscalaz/OptionT;
       7: areturn

  public static <F, W, A> scalaz.MonadListen<?, W> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #44                 // Method scalaz/OptionT$.monadListen:(Lscalaz/MonadListen;)Lscalaz/MonadListen;
       7: areturn

  public static <F, W, A> scalaz.MonadTell<?, W> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #50                 // Method scalaz/OptionT$.monadTell:(Lscalaz/MonadTell;)Lscalaz/MonadTell;
       7: areturn

  public static <M, A> scalaz.OptionT<M, A> none(scalaz.Applicative<M>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #56                 // Method scalaz/OptionT$.none:(Lscalaz/Applicative;)Lscalaz/OptionT;
       7: areturn

  public static <M, A> scalaz.OptionT<M, A> some(scala.Function0<A>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #64                 // Method scalaz/OptionT$.optionT:()Lscalaz/NaturalTransformation;
      12: aload_1
      13: aload_0
      14: invokedynamic #85,  0             // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      19: invokeinterface #91,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: invokeinterface #96,  2           // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #2                  // class scalaz/OptionT
      32: areturn

  public static <M> scalaz.NaturalTransformation<?, ?> optionT();
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: invokevirtual #64                 // Method scalaz/OptionT$.optionT:()Lscalaz/NaturalTransformation;
       6: areturn

  public static <F> scalaz.Decidable<?> optionTDecidable(scalaz.Divisible<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #103                // Method scalaz/OptionT$.optionTDecidable:(Lscalaz/Divisible;)Lscalaz/Decidable;
       7: areturn

  public static <F, A> scalaz.Show<scalaz.OptionT<F, A>> optionTShow(scalaz.Show<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #108                // Method scalaz/OptionT$.optionTShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <F, A> scalaz.Equal<scalaz.OptionT<F, A>> optionTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #113                // Method scalaz/OptionT$.optionTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F> scalaz.Traverse<?> optionTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #118                // Method scalaz/OptionT$.optionTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static scalaz.Hoist<scalaz.OptionT> optionTMonadTrans();
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: invokevirtual #123                // Method scalaz/OptionT$.optionTMonadTrans:()Lscalaz/Hoist;
       6: areturn

  public static <F> scalaz.MonadPlus<?> optionTMonadPlus(scalaz.Monad<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #128                // Method scalaz/OptionT$.optionTMonadPlus:(Lscalaz/Monad;)Lscalaz/MonadPlus;
       7: areturn

  public static <F> scalaz.Alt<?> optionTAlt(scalaz.Monad<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #133                // Method scalaz/OptionT$.optionTAlt:(Lscalaz/Monad;)Lscalaz/Alt;
       7: areturn

  public static <F, E> scalaz.MonadError<?, E> optionTMonadError(scalaz.MonadError<F, E>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #138                // Method scalaz/OptionT$.optionTMonadError:(Lscalaz/MonadError;)Lscalaz/MonadError;
       7: areturn

  public static <F> scalaz.Foldable<?> optionTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #143                // Method scalaz/OptionT$.optionTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F> scalaz.BindRec<?> optionTBindRec(scalaz.Monad<F>, scalaz.BindRec<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #149                // Method scalaz/OptionT$.optionTBindRec:(Lscalaz/Monad;Lscalaz/BindRec;)Lscalaz/BindRec;
       8: areturn

  public static <F> scalaz.Functor<?> optionTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #31                 // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_0
       4: invokevirtual #154                // Method scalaz/OptionT$.optionTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #157                // Field run:Ljava/lang/Object;
       4: areturn

  public <B> scalaz.OptionT<F, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_1
       5: invokedynamic #175,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      10: astore_3
      11: aload_2
      12: aload_0
      13: invokevirtual #177                // Method run:()Ljava/lang/Object;
      16: aload_3
      17: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      25: areturn

  public <G, B> scalaz.OptionT<G, B> mapT(scala.Function1<F, G>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: invokeinterface #195,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      17: areturn

  public <B> scalaz.OptionT<F, B> flatMap(scala.Function1<A, scalaz.OptionT<F, B>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #208,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <B> scalaz.OptionT<F, B> mapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #221,  0            // InvokeDynamic #3:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <B> scalaz.OptionT<F, B> flatMapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #227,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <Z> Z foldRight(scala.Function0<Z>, scala.Function2<A, scala.Function0<Z>, Z>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #177                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokedynamic #243,  0            // InvokeDynamic #5:apply:(Lscala/Function2;)Lscala/Function2;
      12: invokeinterface #248,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      17: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_0
       3: invokevirtual #177                // Method run:()Ljava/lang/Object;
       6: aload_1
       7: aload_3
       8: invokedynamic #263,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      13: aload_3
      14: invokeinterface #268,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #276,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
      24: invokeinterface #277,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <B> scalaz.OptionT<F, B> ap(scala.Function0<scalaz.OptionT<F, scala.Function1<A, B>>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_1
       6: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: checkcast     #2                  // class scalaz/OptionT
      14: invokevirtual #177                // Method run:()Ljava/lang/Object;
      17: aload_0
      18: aload_2
      19: invokedynamic #294,  0            // InvokeDynamic #8:apply:(Lscalaz/OptionT;Lscalaz/Monad;)Lscala/Function1;
      24: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      32: areturn

  public <B> scalaz.OptionT<F, B> app(scala.Function0<scalaz.OptionT<F, scala.Function1<A, B>>>, scalaz.Apply<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #303,  0            // InvokeDynamic #9:apply:(Lscala/Function0;)Lscala/Function0;
      11: aload_0
      12: invokedynamic #311,  0            // InvokeDynamic #10:apply:(Lscalaz/OptionT;)Lscala/Function0;
      17: invokedynamic #320,  0            // InvokeDynamic #11:apply:()Lscala/Function2;
      22: invokeinterface #326,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      30: areturn

  public F isDefined(scalaz.Functor<F>);
    Code:
       0: invokedynamic #335,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #177                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isEmpty(scalaz.Functor<F>);
    Code:
       0: invokedynamic #341,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #177                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public scalaz.OptionT<F, A> filter(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #348,  0            // InvokeDynamic #14:apply:(Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      23: areturn

  public <X> F fold(scala.Function1<A, X>, scala.Function0<X>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_1
       2: invokedynamic #359,  0            // InvokeDynamic #15:apply:(Lscala/Function0;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: aload_3
      10: aload_0
      11: invokevirtual #177                // Method run:()Ljava/lang/Object;
      14: aload         4
      16: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public F getOrElse(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #371,  0            // InvokeDynamic #16:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #177                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F $bar(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #371,  0            // InvokeDynamic #16:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #177                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F getOrElseF(scala.Function0<F>, scalaz.Monad<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #177                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokedynamic #384,  0            // InvokeDynamic #17:apply:(Lscala/Function0;Lscalaz/Monad;)Lscala/Function1;
      12: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F orZero(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_2
       1: invokedynamic #396,  0            // InvokeDynamic #18:apply:(Lscalaz/Monoid;)Lscala/Function0;
       6: invokedynamic #371,  0            // InvokeDynamic #16:apply:(Lscala/Function0;)Lscala/Function1;
      11: astore_3
      12: aload_1
      13: aload_0
      14: invokevirtual #177                // Method run:()Ljava/lang/Object;
      17: aload_3
      18: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public F unary_$tilde(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #400                // Method orZero:(Lscalaz/Functor;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public F exists(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #409,  0            // InvokeDynamic #19:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #177                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F forall(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #415,  0            // InvokeDynamic #20:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #177                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public scalaz.OptionT<F, A> orElse(scala.Function0<scalaz.OptionT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokedynamic #423,  0            // InvokeDynamic #21:apply:(Lscala/Function0;Lscalaz/Monad;)Lscala/Function1;
      16: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public scalaz.OptionT<F, A> $bar$bar$bar(scala.Function0<scalaz.OptionT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokedynamic #423,  0            // InvokeDynamic #21:apply:(Lscala/Function0;Lscalaz/Monad;)Lscala/Function1;
      16: invokeinterface #213,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <E> scalaz.EitherT<E, F, A> toRight(scala.Function0<E>, scalaz.Functor<F>);
    Code:
       0: new           #430                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #438,  0            // InvokeDynamic #22:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #439                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public scalaz.ListT<F, A> toListT(scalaz.Functor<F>);
    Code:
       0: new           #444                // class scalaz/ListT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: invokedynamic #451,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
      14: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokespecial #452                // Method scalaz/ListT."<init>":(Ljava/lang/Object;)V
      22: areturn

  public <B> scalaz.EitherT<A, F, B> toLeft(scala.Function0<B>, scalaz.Functor<F>);
    Code:
       0: new           #430                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #177                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #460,  0            // InvokeDynamic #24:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #439                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  private <B> F mapO(scala.Function1<scala.Option<A>, B>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #177                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokeinterface #182,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <F, A> scalaz.OptionT<F, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_1
       5: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #177                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #469                // String OptionT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #177                // Method run:()Ljava/lang/Object;
      24: areturn
      25: new           #476                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #482                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #485                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #488                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #497                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #501                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/OptionT
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #497                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #508                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #497                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #512                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/OptionT
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/OptionT
      27: astore_3
      28: aload_0
      29: invokevirtual #177                // Method run:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #177                // Method run:()Ljava/lang/Object;
      36: invokestatic  #516                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public static final scala.Option $anonfun$map$1(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #522                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       5: areturn

  public static final scala.Option $anonfun$flatMap$2();
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scalaz.Monad, scala.Function1, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_0
      11: invokedynamic #542,  0            // InvokeDynamic #25:apply:()Lscala/Function0;
      16: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      21: astore_3
      22: goto          68
      25: aload_2
      26: instanceof    #545                // class scala/Some
      29: ifeq          59
      32: aload_2
      33: checkcast     #545                // class scala/Some
      36: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      39: astore        4
      41: aload_1
      42: aload         4
      44: invokeinterface #195,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #2                  // class scalaz/OptionT
      52: invokevirtual #177                // Method run:()Ljava/lang/Object;
      55: astore_3
      56: goto          68
      59: new           #550                // class scala/MatchError
      62: dup
      63: aload_2
      64: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: aload_3
      69: areturn

  public static final scala.Option $anonfun$mapF$2();
    Code:
       0: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #559                // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  public static final scala.Option $anonfun$mapF$3(java.lang.Object);
    Code:
       0: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: aload_0
       4: invokevirtual #563                // Method scalaz/std/option$.some:(Ljava/lang/Object;)Lscala/Option;
       7: areturn

  public static final java.lang.Object $anonfun$mapF$1(scalaz.Monad, scala.Function1, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_0
      11: invokedynamic #569,  0            // InvokeDynamic #26:apply:()Lscala/Function0;
      16: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      21: astore_3
      22: goto          73
      25: aload_2
      26: instanceof    #545                // class scala/Some
      29: ifeq          64
      32: aload_2
      33: checkcast     #545                // class scala/Some
      36: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      39: astore        4
      41: aload_0
      42: aload_1
      43: aload         4
      45: invokeinterface #195,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      50: invokedynamic #574,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
      55: invokeinterface #575,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      60: astore_3
      61: goto          73
      64: new           #550                // class scala/MatchError
      67: dup
      68: aload_2
      69: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      72: athrow
      73: aload_3
      74: areturn

  public static final scala.Option $anonfun$flatMapF$2();
    Code:
       0: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #559                // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  public static final java.lang.Object $anonfun$flatMapF$1(scalaz.Monad, scala.Function1, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_0
      11: invokedynamic #582,  0            // InvokeDynamic #28:apply:()Lscala/Function0;
      16: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      21: astore_3
      22: goto          62
      25: aload_2
      26: instanceof    #545                // class scala/Some
      29: ifeq          53
      32: aload_2
      33: checkcast     #545                // class scala/Some
      36: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      39: astore        4
      41: aload_1
      42: aload         4
      44: invokeinterface #195,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore_3
      50: goto          62
      53: new           #550                // class scala/MatchError
      56: dup
      57: aload_2
      58: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      61: athrow
      62: aload_3
      63: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, scala.Option, scala.Function0);
    Code:
       0: getstatic     #588                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       6: invokevirtual #592                // Method scalaz/std/option$.optionInstance:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_1
      17: aload_2
      18: aload_0
      19: invokeinterface #248,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public static final java.lang.Object $anonfun$traverse$1(scala.Function1, scalaz.Applicative, scala.Option);
    Code:
       0: getstatic     #600                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       6: invokevirtual #592                // Method scalaz/std/option$.optionInstance:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_2
      17: aload_0
      18: aload_1
      19: invokeinterface #268,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.OptionT $anonfun$traverse$2(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/OptionT
       3: dup
       4: aload_0
       5: invokespecial #186                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scala.None$ $anonfun$ap$2();
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final scala.Option $anonfun$ap$3(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #522                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       5: areturn

  public static final java.lang.Object $anonfun$ap$1(scalaz.OptionT, scalaz.Monad, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_1
      11: invokedynamic #613,  0            // InvokeDynamic #29:apply:()Lscala/Function0;
      16: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      21: astore_3
      22: goto          74
      25: aload_2
      26: instanceof    #545                // class scala/Some
      29: ifeq          65
      32: aload_2
      33: checkcast     #545                // class scala/Some
      36: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      39: checkcast     #194                // class scala/Function1
      42: astore        4
      44: aload_1
      45: aload_0
      46: invokevirtual #177                // Method run:()Ljava/lang/Object;
      49: aload         4
      51: invokedynamic #617,  0            // InvokeDynamic #30:apply:(Lscala/Function1;)Lscala/Function1;
      56: invokeinterface #575,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      61: astore_3
      62: goto          74
      65: new           #550                // class scala/MatchError
      68: dup
      69: aload_2
      70: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      73: athrow
      74: aload_3
      75: areturn

  public static final java.lang.Object $anonfun$app$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/OptionT
       9: invokevirtual #177                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$app$2(scalaz.OptionT);
    Code:
       0: aload_0
       1: invokevirtual #177                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scala.Option $anonfun$app$4(scala.Option);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Option $anonfun$app$5(scala.Option);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Option $anonfun$app$3(scala.Option, scala.Option);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: astore_3
       4: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       7: invokevirtual #592                // Method scalaz/std/option$.optionInstance:()Lscalaz/Traverse;
      10: checkcast     #626                // class scalaz/Bind
      13: aload_3
      14: invokedynamic #632,  0            // InvokeDynamic #31:apply:(Lscala/Option;)Lscala/Function0;
      19: aload_2
      20: invokedynamic #636,  0            // InvokeDynamic #32:apply:(Lscala/Option;)Lscala/Function0;
      25: invokeinterface #639,  3          // InterfaceMethod scalaz/Bind.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      30: checkcast     #519                // class scala/Option
      33: areturn

  public static final boolean $anonfun$isDefined$1(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #646                // Method scala/Option.isDefined:()Z
       4: ireturn

  public static final boolean $anonfun$isEmpty$1(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #650                // Method scala/Option.isEmpty:()Z
       4: ireturn

  public static final scala.Option $anonfun$filter$1(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #654                // Method scala/Option.filter:(Lscala/Function1;)Lscala/Option;
       5: areturn

  public static final java.lang.Object $anonfun$fold$1(scala.Function0, scala.Function1, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: aload_0
      11: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: astore_3
      17: goto          57
      20: aload_2
      21: instanceof    #545                // class scala/Some
      24: ifeq          48
      27: aload_2
      28: checkcast     #545                // class scala/Some
      31: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      34: astore        4
      36: aload_1
      37: aload         4
      39: invokeinterface #195,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      44: astore_3
      45: goto          57
      48: new           #550                // class scala/MatchError
      51: dup
      52: aload_2
      53: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      56: athrow
      57: aload_3
      58: areturn

  public static final java.lang.Object $anonfun$getOrElse$1(scala.Function0, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #660                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$getOrElseF$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$getOrElseF$1(scala.Function0, scalaz.Monad, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: aload_0
      11: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: astore_3
      17: goto          62
      20: aload_2
      21: instanceof    #545                // class scala/Some
      24: ifeq          53
      27: aload_2
      28: checkcast     #545                // class scala/Some
      31: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      34: astore        4
      36: aload_1
      37: aload         4
      39: invokedynamic #670,  0            // InvokeDynamic #33:apply:(Ljava/lang/Object;)Lscala/Function0;
      44: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      49: astore_3
      50: goto          62
      53: new           #550                // class scala/MatchError
      56: dup
      57: aload_2
      58: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      61: athrow
      62: aload_3
      63: areturn

  public static final java.lang.Object $anonfun$orZero$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #676,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final boolean $anonfun$exists$1(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #683                // Method scala/Option.exists:(Lscala/Function1;)Z
       5: ireturn

  public static final boolean $anonfun$forall$1(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #688                // Method scala/Option.forall:(Lscala/Function1;)Z
       5: ireturn

  public static final scala.Some $anonfun$orElse$2(scala.Some);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$orElse$1(scala.Function0, scalaz.Monad, scala.Option);
    Code:
       0: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
       3: aload_2
       4: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          26
      10: aload_0
      11: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #2                  // class scalaz/OptionT
      19: invokevirtual #177                // Method run:()Ljava/lang/Object;
      22: astore_3
      23: goto          65
      26: aload_2
      27: instanceof    #545                // class scala/Some
      30: ifeq          56
      33: aload_2
      34: checkcast     #545                // class scala/Some
      37: astore        4
      39: aload_1
      40: aload         4
      42: invokedynamic #700,  0            // InvokeDynamic #34:apply:(Lscala/Some;)Lscala/Function0;
      47: invokeinterface #543,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      52: astore_3
      53: goto          65
      56: new           #550                // class scala/MatchError
      59: dup
      60: aload_2
      61: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload_3
      66: areturn

  public static final scalaz.$bslash$div $anonfun$toRight$1(scala.Function0, scala.Option);
    Code:
       0: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: instanceof    #545                // class scala/Some
      12: ifeq          34
      15: aload_1
      16: checkcast     #545                // class scala/Some
      19: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      22: astore_3
      23: getstatic     #707                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      26: aload_3
      27: invokevirtual #710                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      30: astore_2
      31: goto          69
      34: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
      37: aload_1
      38: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          60
      44: getstatic     #715                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      47: aload_0
      48: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      53: invokevirtual #716                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      56: astore_2
      57: goto          69
      60: new           #550                // class scala/MatchError
      63: dup
      64: aload_1
      65: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: aload_2
      70: areturn

  public static final scalaz.IList $anonfun$toListT$1(scala.Option);
    Code:
       0: getstatic     #724                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       3: aload_0
       4: invokevirtual #727                // Method scalaz/IList$.fromOption:(Lscala/Option;)Lscalaz/IList;
       7: areturn

  public static final scalaz.$bslash$div $anonfun$toLeft$1(scala.Function0, scala.Option);
    Code:
       0: getstatic     #557                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: instanceof    #545                // class scala/Some
      12: ifeq          34
      15: aload_1
      16: checkcast     #545                // class scala/Some
      19: invokevirtual #548                // Method scala/Some.value:()Ljava/lang/Object;
      22: astore_3
      23: getstatic     #715                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      26: aload_3
      27: invokevirtual #716                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      30: astore_2
      31: goto          69
      34: getstatic     #530                // Field scala/None$.MODULE$:Lscala/None$;
      37: aload_1
      38: invokevirtual #535                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          60
      44: getstatic     #707                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      47: aload_0
      48: invokeinterface #286,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      53: invokevirtual #710                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      56: astore_2
      57: goto          69
      60: new           #550                // class scala/MatchError
      63: dup
      64: aload_1
      65: invokespecial #551                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: aload_2
      70: areturn

  public scalaz.OptionT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #734                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #738                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  public static final java.lang.Object $anonfun$isDefined$1$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #740                // Method $anonfun$isDefined$1:(Lscala/Option;)Z
       4: invokestatic  #744                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isEmpty$1$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #746                // Method $anonfun$isEmpty$1:(Lscala/Option;)Z
       4: invokestatic  #744                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$exists$1$adapted(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #683                // Method scala/Option.exists:(Lscala/Function1;)Z
       5: invokestatic  #744                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public static final java.lang.Object $anonfun$forall$1$adapted(scala.Function1, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #688                // Method scala/Option.forall:(Lscala/Function1;)Z
       5: invokestatic  #744                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #758,  0            // InvokeDynamic #35:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
