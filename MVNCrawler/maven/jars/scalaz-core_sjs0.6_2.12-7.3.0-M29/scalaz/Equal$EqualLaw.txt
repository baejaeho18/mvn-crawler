Compiled from "Equal.scala"
public interface scalaz.Equal$EqualLaw {
  public static boolean commutative$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #22                 // InterfaceMethod commutative:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean commutative(F, F);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: aload_0
      14: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      19: aload_2
      20: aload_1
      21: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public static boolean reflexive$(scalaz.Equal$EqualLaw, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // InterfaceMethod reflexive:(Ljava/lang/Object;)Z
       5: ireturn

  public default boolean reflexive(F);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_1
       8: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ireturn

  public static boolean transitive$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #48                 // InterfaceMethod transitive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public default boolean transitive(F, F, F);
    Code:
       0: getstatic     #55                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: aload_0
       4: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       9: aload_1
      10: aload_2
      11: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      16: ifeq          39
      19: aload_0
      20: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
      25: aload_2
      26: aload_3
      27: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore        4
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: iload         4
      49: ifeq          61
      52: aload_0
      53: aload_1
      54: aload_3
      55: invokestatic  #58                 // InterfaceMethod $anonfun$transitive$1:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: iconst_0
      64: ireturn

  public static boolean naturality$(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #64                 // InterfaceMethod naturality:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public default boolean naturality(F, F);
    Code:
       0: getstatic     #55                 // Field scalaz/std/boolean$.MODULE$:Lscalaz/std/boolean$;
       3: aload_0
       4: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       9: invokeinterface #68,  1           // InterfaceMethod scalaz/Equal.equalIsNatural:()Z
      14: istore_3
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: iload_3
      21: ifeq          33
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokestatic  #71                 // InterfaceMethod $anonfun$naturality$1:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: iconst_0
      36: ireturn

  public abstract scalaz.Equal scalaz$Equal$EqualLaw$$$outer();

  public static boolean $anonfun$transitive$1(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ireturn

  public static boolean $anonfun$naturality$1(scalaz.Equal$EqualLaw, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod scalaz$Equal$EqualLaw$$$outer:()Lscalaz/Equal;
       6: aload_1
       7: aload_2
       8: invokeinterface #32,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public static void $init$(scalaz.Equal<F>.EqualLaw);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #97,  0             // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
