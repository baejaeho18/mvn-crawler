Compiled from "Divide.scala"
public final class scalaz.Divide$$anon$2 implements scalaz.syntax.DivideSyntax<F> {
  private final scalaz.Divide $outer;

  public <A> scalaz.syntax.DivideOps<F, A> ToDivideOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // InterfaceMethod scalaz/syntax/DivideSyntax.ToDivideOps$:(Lscalaz/syntax/DivideSyntax;Ljava/lang/Object;)Lscalaz/syntax/DivideOps;
       5: areturn

  public <A> scalaz.syntax.ContravariantOps<F, A> ToContravariantOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // InterfaceMethod scalaz/syntax/ContravariantSyntax.ToContravariantOps$:(Lscalaz/syntax/ContravariantSyntax;Ljava/lang/Object;)Lscalaz/syntax/ContravariantOps;
       5: areturn

  public <A> scalaz.syntax.InvariantFunctorOps<F, A> ToInvariantFunctorOps(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.ToInvariantFunctorOps$:(Lscalaz/syntax/InvariantFunctorSyntax;Ljava/lang/Object;)Lscalaz/syntax/InvariantFunctorOps;
       5: areturn

  public scalaz.Divide<F> F();
    Code:
       0: aload_0
       1: getfield      #46                 // Field $outer:Lscalaz/Divide;
       4: areturn

  public scalaz.InvariantFunctor F();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method F:()Lscalaz/Divide;
       4: areturn

  public scalaz.Contravariant F();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method F:()Lscalaz/Divide;
       4: areturn

  public scalaz.Divide$$anon$2(scalaz.Divide<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #46                 // Field $outer:Lscalaz/Divide;
      11: aload_0
      12: invokespecial #56                 // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #60                 // InterfaceMethod scalaz/syntax/InvariantFunctorSyntax.$init$:(Lscalaz/syntax/InvariantFunctorSyntax;)V
      19: aload_0
      20: invokestatic  #63                 // InterfaceMethod scalaz/syntax/ContravariantSyntax.$init$:(Lscalaz/syntax/ContravariantSyntax;)V
      23: aload_0
      24: invokestatic  #66                 // InterfaceMethod scalaz/syntax/DivideSyntax.$init$:(Lscalaz/syntax/DivideSyntax;)V
      27: return
}
