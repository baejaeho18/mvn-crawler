Compiled from "MaybeT.scala"
public final class scalaz.MaybeT<F, A> implements scala.Product, scala.Serializable {
  private final F run;

  public static <F, A> scala.Option<F> unapply(scalaz.MaybeT<F, A>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #41                 // Method scalaz/MaybeT$.unapply:(Lscalaz/MaybeT;)Lscala/Option;
       7: areturn

  public static <F, A> scalaz.MaybeT<F, A> apply(F);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #46                 // Method scalaz/MaybeT$.apply:(Ljava/lang/Object;)Lscalaz/MaybeT;
       7: areturn

  public static <F, W, A> scalaz.MonadListen<?, W> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #52                 // Method scalaz/MaybeT$.monadListen:(Lscalaz/MonadListen;)Lscalaz/MonadListen;
       7: areturn

  public static <F, W, A> scalaz.MonadTell<?, W> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #58                 // Method scalaz/MaybeT$.monadTell:(Lscalaz/MonadTell;)Lscalaz/MonadTell;
       7: areturn

  public static <M, A> scalaz.MaybeT<M, A> empty(scalaz.Applicative<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #64                 // Method scalaz/MaybeT$.empty:(Lscalaz/Applicative;)Lscalaz/MaybeT;
       7: areturn

  public static <M, A> scalaz.MaybeT<M, A> just(scala.Function0<A>, scalaz.Applicative<M>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #72                 // Method scalaz/MaybeT$.maybeT:()Lscalaz/NaturalTransformation;
      12: aload_1
      13: aload_0
      14: invokedynamic #93,  0             // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      19: invokeinterface #99,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: invokeinterface #104,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #2                  // class scalaz/MaybeT
      32: areturn

  public static <M> scalaz.NaturalTransformation<?, ?> maybeT();
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: invokevirtual #72                 // Method scalaz/MaybeT$.maybeT:()Lscalaz/NaturalTransformation;
       6: areturn

  public static <F> scalaz.Decidable<?> maybeTDecidable(scalaz.Divisible<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #111                // Method scalaz/MaybeT$.maybeTDecidable:(Lscalaz/Divisible;)Lscalaz/Decidable;
       7: areturn

  public static <F, A> scalaz.Show<scalaz.MaybeT<F, A>> maybeTShow(scalaz.Show<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #116                // Method scalaz/MaybeT$.maybeTShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <F, A> scalaz.Equal<scalaz.MaybeT<F, A>> maybeTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #121                // Method scalaz/MaybeT$.maybeTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F> scalaz.Traverse<?> maybeTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #126                // Method scalaz/MaybeT$.maybeTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static scalaz.Hoist<scalaz.MaybeT> maybeTMonadTrans();
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: invokevirtual #131                // Method scalaz/MaybeT$.maybeTMonadTrans:()Lscalaz/Hoist;
       6: areturn

  public static <F> scalaz.MonadPlus<?> maybeTMonadPlus(scalaz.Monad<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #136                // Method scalaz/MaybeT$.maybeTMonadPlus:(Lscalaz/Monad;)Lscalaz/MonadPlus;
       7: areturn

  public static <F> scalaz.BindRec<?> maybeTBindRec(scalaz.BindRec<F>, scalaz.Monad<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #142                // Method scalaz/MaybeT$.maybeTBindRec:(Lscalaz/BindRec;Lscalaz/Monad;)Lscalaz/BindRec;
       8: areturn

  public static <F> scalaz.Foldable<?> maybeTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #147                // Method scalaz/MaybeT$.maybeTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F, E> scalaz.MonadError<?, E> maybeTMonadError(scalaz.MonadError<F, E>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #152                // Method scalaz/MaybeT$.maybeTMonadError:(Lscalaz/MonadError;)Lscalaz/MonadError;
       7: areturn

  public static <F> scalaz.Functor<?> maybeTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #39                 // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_0
       4: invokevirtual #157                // Method scalaz/MaybeT$.maybeTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #160                // Field run:Ljava/lang/Object;
       4: areturn

  public <B> scalaz.MaybeT<F, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: invokedynamic #178,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      10: astore_3
      11: aload_2
      12: aload_0
      13: invokevirtual #180                // Method run:()Ljava/lang/Object;
      16: aload_3
      17: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      25: areturn

  public <B> scalaz.MaybeT<F, B> mapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #205,  0            // InvokeDynamic #2:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <G, B> scalaz.MaybeT<G, B> mapT(scala.Function1<F, G>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      17: areturn

  public <B> scalaz.MaybeT<F, B> flatMap(scala.Function1<A, scalaz.MaybeT<F, B>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokedynamic #227,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lscalaz/Monad;)Lscala/Function1;
      16: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <B> scalaz.MaybeT<F, B> flatMapF(scala.Function1<A, F>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #233,  0            // InvokeDynamic #4:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      16: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <Z> Z foldRight(scala.Function0<Z>, scala.Function2<A, scala.Function0<Z>, Z>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #180                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokedynamic #249,  0            // InvokeDynamic #5:apply:(Lscala/Function2;)Lscala/Function2;
      12: invokeinterface #254,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      17: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_0
       3: invokevirtual #180                // Method run:()Ljava/lang/Object;
       6: aload_1
       7: aload_3
       8: invokedynamic #269,  0            // InvokeDynamic #6:apply:(Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      13: aload_3
      14: invokeinterface #274,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #282,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
      24: invokeinterface #283,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <B> scalaz.MaybeT<F, B> ap(scala.Function0<scalaz.MaybeT<F, scala.Function1<A, B>>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_1
       6: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: checkcast     #2                  // class scalaz/MaybeT
      14: invokevirtual #180                // Method run:()Ljava/lang/Object;
      17: aload_0
      18: aload_2
      19: invokedynamic #300,  0            // InvokeDynamic #8:apply:(Lscalaz/MaybeT;Lscalaz/Monad;)Lscala/Function1;
      24: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      32: areturn

  public <B> scalaz.MaybeT<F, B> app(scala.Function0<scalaz.MaybeT<F, scala.Function1<A, B>>>, scalaz.Apply<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #309,  0            // InvokeDynamic #9:apply:(Lscala/Function0;)Lscala/Function0;
      11: aload_0
      12: invokedynamic #317,  0            // InvokeDynamic #10:apply:(Lscalaz/MaybeT;)Lscala/Function0;
      17: invokedynamic #326,  0            // InvokeDynamic #11:apply:()Lscala/Function2;
      22: invokeinterface #332,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      30: areturn

  public F isJust(scalaz.Functor<F>);
    Code:
       0: invokedynamic #341,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #180                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isDefined(scalaz.Functor<F>);
    Code:
       0: invokedynamic #347,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #180                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isEmpty(scalaz.Functor<F>);
    Code:
       0: invokedynamic #353,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       5: astore_2
       6: aload_1
       7: aload_0
       8: invokevirtual #180                // Method run:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public scalaz.MaybeT<F, A> filter(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #360,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      23: areturn

  public <X> F cata(scala.Function1<A, X>, scala.Function0<X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #371,  0            // InvokeDynamic #16:apply:(Lscala/Function1;Lscala/Function0;)Lscala/Function1;
       7: astore        4
       9: aload_3
      10: aload_0
      11: invokevirtual #180                // Method run:()Ljava/lang/Object;
      14: aload         4
      16: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: areturn

  public F getOrElse(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #383,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F $bar(scala.Function0<A>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #383,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F getOrElseF(scala.Function0<F>, scalaz.Monad<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #180                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: aload_1
       7: invokedynamic #396,  0            // InvokeDynamic #18:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      12: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F orZero(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_2
       1: invokedynamic #408,  0            // InvokeDynamic #19:apply:(Lscalaz/Monoid;)Lscala/Function0;
       6: invokedynamic #383,  0            // InvokeDynamic #17:apply:(Lscala/Function0;)Lscala/Function1;
      11: astore_3
      12: aload_1
      13: aload_0
      14: invokevirtual #180                // Method run:()Ljava/lang/Object;
      17: aload_3
      18: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public F unary_$tilde(scalaz.Functor<F>, scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #412                // Method orZero:(Lscalaz/Functor;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public F exists(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #421,  0            // InvokeDynamic #20:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public F forall(scala.Function1<A, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #427,  0            // InvokeDynamic #21:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: aload_2
       8: aload_0
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: aload_3
      13: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: areturn

  public scalaz.MaybeT<F, A> orElse(scala.Function0<scalaz.MaybeT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #435,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      16: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public scalaz.MaybeT<F, A> $bar$bar$bar(scala.Function0<scalaz.MaybeT<F, A>>, scalaz.Monad<F>);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_2
      10: aload_1
      11: invokedynamic #435,  0            // InvokeDynamic #22:apply:(Lscalaz/Monad;Lscala/Function0;)Lscala/Function1;
      16: invokeinterface #210,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
      24: areturn

  public <E> scalaz.EitherT<E, F, A> toRight(scala.Function0<E>, scalaz.Functor<F>);
    Code:
       0: new           #442                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #450,  0            // InvokeDynamic #23:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #451                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  public <B> scalaz.EitherT<A, F, B> toLeft(scala.Function0<B>, scalaz.Functor<F>);
    Code:
       0: new           #442                // class scalaz/EitherT
       3: dup
       4: aload_2
       5: aload_0
       6: invokevirtual #180                // Method run:()Ljava/lang/Object;
       9: aload_1
      10: invokedynamic #459,  0            // InvokeDynamic #24:apply:(Lscala/Function0;)Lscala/Function1;
      15: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokespecial #451                // Method scalaz/EitherT."<init>":(Ljava/lang/Object;)V
      23: areturn

  private <B> F mapO(scala.Function1<scalaz.Maybe<A>, B>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #180                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokeinterface #185,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <F, A> scalaz.MaybeT<F, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #180                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #468                // String MaybeT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #180                // Method run:()Ljava/lang/Object;
      24: areturn
      25: new           #475                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #481                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #484                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #487                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #496                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #500                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/MaybeT
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #496                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #507                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #496                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #511                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/MaybeT
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/MaybeT
      27: astore_3
      28: aload_0
      29: invokevirtual #180                // Method run:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #180                // Method run:()Ljava/lang/Object;
      36: invokestatic  #515                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public static final scalaz.Maybe $anonfun$map$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: invokedynamic #522,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
      12: invokeinterface #525,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      17: astore_2
      18: aload_1
      19: instanceof    #25                 // class scalaz/Maybe$Just
      22: ifeq          46
      25: aload_1
      26: checkcast     #25                 // class scalaz/Maybe$Just
      29: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: astore_3
      43: goto          69
      46: aload_1
      47: instanceof    #20                 // class scalaz/Maybe$Empty
      50: ifeq          60
      53: invokestatic  #531                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      56: astore_3
      57: goto          69
      60: new           #533                // class scala/MatchError
      63: dup
      64: aload_1
      65: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: aload_3
      70: checkcast     #22                 // class scalaz/Maybe
      73: areturn

  public static final scalaz.Maybe $anonfun$mapF$2();
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #545                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final scalaz.Maybe $anonfun$mapF$3(java.lang.Object);
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #548                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final java.lang.Object $anonfun$mapF$1(scalaz.Monad, scala.Function1, scalaz.Maybe);
    Code:
       0: aload_2
       1: instanceof    #20                 // class scalaz/Maybe$Empty
       4: ifeq          22
       7: aload_0
       8: invokedynamic #557,  0            // InvokeDynamic #26:apply:()Lscala/Function0;
      13: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      18: astore_3
      19: goto          70
      22: aload_2
      23: instanceof    #25                 // class scalaz/Maybe$Just
      26: ifeq          61
      29: aload_2
      30: checkcast     #25                 // class scalaz/Maybe$Just
      33: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      36: astore        4
      38: aload_0
      39: aload_1
      40: aload         4
      42: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: invokedynamic #562,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
      52: invokeinterface #563,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      57: astore_3
      58: goto          70
      61: new           #533                // class scala/MatchError
      64: dup
      65: aload_2
      66: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow
      70: aload_3
      71: areturn

  public static final java.lang.Object $anonfun$flatMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class scalaz/MaybeT
      10: invokevirtual #180                // Method run:()Ljava/lang/Object;
      13: areturn

  public static final scalaz.Maybe $anonfun$flatMap$4();
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #545                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$flatMap$3(scalaz.Monad);
    Code:
       0: aload_0
       1: invokedynamic #575,  0            // InvokeDynamic #28:apply:()Lscala/Function0;
       6: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scala.Function1, scalaz.Monad, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokestatic  #578                // Method $anonfun$flatMap$2:(Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          56
      32: aload_2
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          47
      39: aload_1
      40: invokestatic  #580                // Method $anonfun$flatMap$3:(Lscalaz/Monad;)Ljava/lang/Object;
      43: astore_3
      44: goto          56
      47: new           #533                // class scala/MatchError
      50: dup
      51: aload_2
      52: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow
      56: aload_3
      57: areturn

  public static final scalaz.Maybe $anonfun$flatMapF$2();
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #545                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$flatMapF$1(scalaz.Monad, scala.Function1, scalaz.Maybe);
    Code:
       0: aload_2
       1: instanceof    #20                 // class scalaz/Maybe$Empty
       4: ifeq          22
       7: aload_0
       8: invokedynamic #588,  0            // InvokeDynamic #29:apply:()Lscala/Function0;
      13: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      18: astore_3
      19: goto          59
      22: aload_2
      23: instanceof    #25                 // class scalaz/Maybe$Just
      26: ifeq          50
      29: aload_2
      30: checkcast     #25                 // class scalaz/Maybe$Just
      33: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore_3
      47: goto          59
      50: new           #533                // class scala/MatchError
      53: dup
      54: aload_2
      55: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, scalaz.Maybe, scala.Function0);
    Code:
       0: getstatic     #594                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       6: invokevirtual #598                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_1
      17: aload_2
      18: aload_0
      19: invokeinterface #254,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public static final java.lang.Object $anonfun$traverse$1(scala.Function1, scalaz.Applicative, scalaz.Maybe);
    Code:
       0: getstatic     #606                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       6: invokevirtual #598                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: aload_2
      17: aload_0
      18: aload_1
      19: invokeinterface #274,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      24: areturn

  public static final scalaz.MaybeT $anonfun$traverse$2(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/MaybeT
       3: dup
       4: aload_0
       5: invokespecial #189                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scalaz.Maybe $anonfun$ap$3(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: invokedynamic #522,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
      12: invokeinterface #525,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      17: astore_2
      18: aload_1
      19: instanceof    #25                 // class scalaz/Maybe$Just
      22: ifeq          46
      25: aload_1
      26: checkcast     #25                 // class scalaz/Maybe$Just
      29: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: astore_3
      43: goto          69
      46: aload_1
      47: instanceof    #20                 // class scalaz/Maybe$Empty
      50: ifeq          60
      53: invokestatic  #531                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      56: astore_3
      57: goto          69
      60: new           #533                // class scala/MatchError
      63: dup
      64: aload_1
      65: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: aload_3
      70: checkcast     #22                 // class scalaz/Maybe
      73: areturn

  public static final java.lang.Object $anonfun$ap$2(scalaz.MaybeT, scalaz.Monad, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #180                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #618,  0            // InvokeDynamic #30:apply:(Lscala/Function1;)Lscala/Function1;
      11: invokeinterface #563,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final scalaz.Maybe $anonfun$ap$5();
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #545                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final java.lang.Object $anonfun$ap$4(scalaz.Monad);
    Code:
       0: aload_0
       1: invokedynamic #624,  0            // InvokeDynamic #31:apply:()Lscala/Function0;
       6: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$ap$1(scalaz.MaybeT, scalaz.Monad, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          36
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: checkcast     #216                // class scala/Function1
      23: astore        4
      25: aload_0
      26: aload_1
      27: aload         4
      29: invokestatic  #627                // Method $anonfun$ap$2:(Lscalaz/MaybeT;Lscalaz/Monad;Lscala/Function1;)Ljava/lang/Object;
      32: astore_3
      33: goto          60
      36: aload_2
      37: instanceof    #20                 // class scalaz/Maybe$Empty
      40: ifeq          51
      43: aload_1
      44: invokestatic  #629                // Method $anonfun$ap$4:(Lscalaz/Monad;)Ljava/lang/Object;
      47: astore_3
      48: goto          60
      51: new           #533                // class scala/MatchError
      54: dup
      55: aload_2
      56: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow
      60: aload_3
      61: areturn

  public static final java.lang.Object $anonfun$app$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/MaybeT
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$app$2(scalaz.MaybeT);
    Code:
       0: aload_0
       1: invokevirtual #180                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.Maybe $anonfun$app$4(scalaz.Maybe);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$app$5(scalaz.Maybe);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Maybe $anonfun$app$3(scalaz.Maybe, scalaz.Maybe);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: astore_3
       4: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       7: invokevirtual #598                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      10: checkcast     #637                // class scalaz/Bind
      13: aload_3
      14: invokedynamic #643,  0            // InvokeDynamic #32:apply:(Lscalaz/Maybe;)Lscala/Function0;
      19: aload_2
      20: invokedynamic #647,  0            // InvokeDynamic #33:apply:(Lscalaz/Maybe;)Lscala/Function0;
      25: invokeinterface #650,  3          // InterfaceMethod scalaz/Bind.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      30: checkcast     #22                 // class scalaz/Maybe
      33: areturn

  public static final boolean $anonfun$isJust$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #657                // Method scalaz/Maybe.isJust:()Z
       4: ireturn

  public static final boolean $anonfun$isDefined$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #657                // Method scalaz/Maybe.isJust:()Z
       4: ireturn

  public static final boolean $anonfun$isEmpty$1(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokevirtual #663                // Method scalaz/Maybe.isEmpty:()Z
       4: ireturn

  public static final scalaz.Maybe $anonfun$filter$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          31
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_1
      22: aload_0
      23: aload_3
      24: invokestatic  #668                // Method scalaz/Maybe.$anonfun$filter$1:(Lscalaz/Maybe;Lscala/Function1;Ljava/lang/Object;)Lscalaz/Maybe;
      27: astore_2
      28: goto          54
      31: aload_1
      32: instanceof    #20                 // class scalaz/Maybe$Empty
      35: ifeq          45
      38: invokestatic  #670                // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      41: astore_2
      42: goto          54
      45: new           #533                // class scala/MatchError
      48: dup
      49: aload_1
      50: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow
      54: aload_2
      55: areturn

  public static final java.lang.Object $anonfun$cata$1(scala.Function1, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          34
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: astore_3
      31: goto          60
      34: aload_2
      35: instanceof    #20                 // class scalaz/Maybe$Empty
      38: ifeq          51
      41: aload_1
      42: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      47: astore_3
      48: goto          60
      51: new           #533                // class scala/MatchError
      54: dup
      55: aload_2
      56: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow
      60: aload_3
      61: areturn

  public static final java.lang.Object $anonfun$getOrElse$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          27
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: invokestatic  #678                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: goto          53
      27: aload_1
      28: instanceof    #20                 // class scalaz/Maybe$Empty
      31: ifeq          44
      34: aload_0
      35: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      40: astore_2
      41: goto          53
      44: new           #533                // class scala/MatchError
      47: dup
      48: aload_1
      49: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow
      53: aload_2
      54: areturn

  public static final java.lang.Object $anonfun$getOrElseF$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$getOrElseF$2(scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #690,  0            // InvokeDynamic #34:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$getOrElseF$1(scalaz.Monad, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokestatic  #694                // Method $anonfun$getOrElseF$2:(Lscalaz/Monad;Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #533                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: areturn

  public static final java.lang.Object $anonfun$orZero$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #700,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final boolean $anonfun$exists$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: goto          58
      32: aload_1
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: invokestatic  #706                // Method scalaz/Maybe.$anonfun$exists$1:()Z
      42: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: astore_2
      46: goto          58
      49: new           #533                // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: invokestatic  #713                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      62: ireturn

  public static final boolean $anonfun$forall$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: goto          58
      32: aload_1
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: invokestatic  #719                // Method scalaz/Maybe.$anonfun$forall$1:()Z
      42: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: astore_2
      46: goto          58
      49: new           #533                // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: invokestatic  #713                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      62: ireturn

  public static final scalaz.Maybe $anonfun$orElse$3(java.lang.Object);
    Code:
       0: getstatic     #543                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #548                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final java.lang.Object $anonfun$orElse$2(scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #728,  0            // InvokeDynamic #35:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #558,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orElse$4(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #292,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/MaybeT
       9: invokevirtual #180                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orElse$1(scalaz.Monad, scala.Function0, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_2
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokestatic  #733                // Method $anonfun$orElse$2:(Lscalaz/Monad;Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          56
      32: aload_2
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          47
      39: aload_1
      40: invokestatic  #735                // Method $anonfun$orElse$4:(Lscala/Function0;)Ljava/lang/Object;
      43: astore_3
      44: goto          56
      47: new           #533                // class scala/MatchError
      50: dup
      51: aload_2
      52: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      55: athrow
      56: aload_3
      57: areturn

  public static final scalaz.$bslash$div $anonfun$toRight$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #742                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       9: invokevirtual #745                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
      12: astore_2
      13: aload_1
      14: instanceof    #25                 // class scalaz/Maybe$Just
      17: ifeq          41
      20: aload_1
      21: checkcast     #25                 // class scalaz/Maybe$Just
      24: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      27: astore        4
      29: aload_2
      30: aload         4
      32: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: astore_3
      38: goto          65
      41: aload_1
      42: instanceof    #20                 // class scalaz/Maybe$Empty
      45: ifeq          56
      48: aload_0
      49: invokestatic  #748                // Method scalaz/Maybe.$anonfun$toRight$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      52: astore_3
      53: goto          65
      56: new           #533                // class scala/MatchError
      59: dup
      60: aload_1
      61: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload_3
      66: checkcast     #750                // class scalaz/$bslash$div
      69: areturn

  public static final scalaz.$bslash$div $anonfun$toLeft$1(scala.Function0, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #742                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       9: invokevirtual #757                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
      12: astore_2
      13: aload_1
      14: instanceof    #25                 // class scalaz/Maybe$Just
      17: ifeq          41
      20: aload_1
      21: checkcast     #25                 // class scalaz/Maybe$Just
      24: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      27: astore        4
      29: aload_2
      30: aload         4
      32: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: astore_3
      38: goto          65
      41: aload_1
      42: instanceof    #20                 // class scalaz/Maybe$Empty
      45: ifeq          56
      48: aload_0
      49: invokestatic  #759                // Method scalaz/Maybe.$anonfun$toLeft$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      52: astore_3
      53: goto          65
      56: new           #533                // class scala/MatchError
      59: dup
      60: aload_1
      61: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload_3
      66: checkcast     #750                // class scalaz/$bslash$div
      69: areturn

  public scalaz.MaybeT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #765                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #769                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  public static final java.lang.Object $anonfun$isJust$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #771                // Method $anonfun$isJust$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isDefined$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #773                // Method $anonfun$isDefined$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isEmpty$1$adapted(scalaz.Maybe);
    Code:
       0: aload_0
       1: invokestatic  #775                // Method $anonfun$isEmpty$1:(Lscalaz/Maybe;)Z
       4: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$exists$1$adapted(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: goto          58
      32: aload_1
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: invokestatic  #706                // Method scalaz/Maybe.$anonfun$exists$1:()Z
      42: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: astore_2
      46: goto          58
      49: new           #533                // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: invokestatic  #713                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      62: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      65: areturn

  public static final java.lang.Object $anonfun$forall$1$adapted(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: instanceof    #25                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_1
      14: checkcast     #25                 // class scalaz/Maybe$Just
      17: invokevirtual #528                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #217,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: goto          58
      32: aload_1
      33: instanceof    #20                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: invokestatic  #719                // Method scalaz/Maybe.$anonfun$forall$1:()Z
      42: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: astore_2
      46: goto          58
      49: new           #533                // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: invokestatic  #713                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      62: invokestatic  #710                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      65: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #804,  0            // InvokeDynamic #36:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
