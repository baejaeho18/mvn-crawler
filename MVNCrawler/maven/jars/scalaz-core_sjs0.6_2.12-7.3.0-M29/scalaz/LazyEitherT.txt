Compiled from "LazyEitherT.scala"
public final class scalaz.LazyEitherT<F, A, B> implements scala.Product, scala.Serializable {
  private final F run;

  public static <F, A, B> scala.Option<F> unapply(scalaz.LazyEitherT<F, A, B>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #49                 // Method scalaz/LazyEitherT$.unapply:(Lscalaz/LazyEitherT;)Lscala/Option;
       7: areturn

  public static <F, A, B> scalaz.LazyEitherT<F, A, B> apply(F);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #54                 // Method scalaz/LazyEitherT$.apply:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
       7: areturn

  public static <F, L> scalaz.MonadPlus<?> lazyEitherTMonadPlus(scalaz.Monad<F>, scalaz.Monoid<L>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #61                 // Method scalaz/LazyEitherT$.lazyEitherTMonadPlus:(Lscalaz/Monad;Lscalaz/Monoid;)Lscalaz/MonadPlus;
       8: areturn

  public static <F> scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, ?, ?> lazyEitherTLeftProjectionIso2();
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: invokevirtual #66                 // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionIso2:()Lscalaz/Isomorphisms$Iso3;
       6: areturn

  public static <F, E> scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, ?, ?> lazyEitherTLeftProjectionEIso2();
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: invokevirtual #71                 // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionEIso2:()Lscalaz/Isomorphisms$Iso2;
       6: areturn

  public static <F, A, B> scalaz.LazyEitherT<F, A, B> lazyRightT(scala.Function0<B>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_1
      10: aload_0
      11: invokedynamic #97,  0             // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      16: invokeinterface #103,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      21: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      24: areturn

  public static <F, A, B> scalaz.LazyEitherT<F, A, B> lazyLeftT(scala.Function0<A>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: aload_1
      10: aload_0
      11: invokedynamic #114,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      16: invokeinterface #103,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      21: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      24: areturn

  public static <FAB, AB, A0, B0> scalaz.LazyEitherT<java.lang.Object, A0, B0> lazyEitherTU(FAB, scalaz.Unapply<scalaz.Functor, FAB>, scalaz.Unapply2<scalaz.Bifunctor, AB>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, AB, scalaz.LazyEither<A0, B0>>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #123                // Method scalaz/LazyEitherT$.lazyEitherTU:(Ljava/lang/Object;Lscalaz/Unapply;Lscalaz/Unapply2;Lscalaz/Leibniz;)Lscalaz/LazyEitherT;
      10: areturn

  public static <F, A, B> scalaz.LazyEitherT<F, A, B> lazyEitherT(F);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
       7: areturn

  public static <A> scalaz.Hoist<?> lazyEitherTHoist();
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: invokevirtual #128                // Method scalaz/LazyEitherT$.lazyEitherTHoist:()Lscalaz/Hoist;
       6: areturn

  public static <F, L> scalaz.Traverse<?> lazyEitherTLeftProjectionTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #133                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static <F, L> scalaz.Traverse<?> lazyEitherTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #136                // Method scalaz/LazyEitherT$.lazyEitherTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static <F> scalaz.Bitraverse<?> lazyEitherTLeftProjectionBitraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #141                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionBitraverse:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       7: areturn

  public static <F> scalaz.Bitraverse<?> lazyEitherTBitraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #144                // Method scalaz/LazyEitherT$.lazyEitherTBitraverse:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       7: areturn

  public static <F, L> scalaz.BindRec<?> lazyEitherTBindRec(scalaz.Monad<F>, scalaz.BindRec<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #150                // Method scalaz/LazyEitherT$.lazyEitherTBindRec:(Lscalaz/Monad;Lscalaz/BindRec;)Lscalaz/BindRec;
       8: areturn

  public static <F, L> scalaz.Foldable<?> lazyEitherTLeftProjectionFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #155                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F, L> scalaz.Foldable<?> lazyEitherTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #158                // Method scalaz/LazyEitherT$.lazyEitherTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F, L> scalaz.Monad<?> lazyEitherTLeftProjectionMonad(scalaz.Monad<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #163                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionMonad:(Lscalaz/Monad;)Lscalaz/Monad;
       7: areturn

  public static <F, L> scalaz.Monad<?> lazyEitherTMonad(scalaz.Monad<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #166                // Method scalaz/LazyEitherT$.lazyEitherTMonad:(Lscalaz/Monad;)Lscalaz/Monad;
       7: areturn

  public static <F> scalaz.Bifunctor<?> lazyEitherTLeftProjectionBifunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #171                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
       7: areturn

  public static <F> scalaz.Bifoldable<?> lazyEitherTBifoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #176                // Method scalaz/LazyEitherT$.lazyEitherTBifoldable:(Lscalaz/Foldable;)Lscalaz/Bifoldable;
       7: areturn

  public static <F> scalaz.Bifunctor<?> lazyEitherTBifunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #179                // Method scalaz/LazyEitherT$.lazyEitherTBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
       7: areturn

  public static <F, L> scalaz.Alt<?> lazyEitherTAlt(scalaz.Monad<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #184                // Method scalaz/LazyEitherT$.lazyEitherTAlt:(Lscalaz/Monad;)Lscalaz/Alt;
       7: areturn

  public static <F, L> scalaz.Plus<?> lazyEitherTPlus(scalaz.Monad<F>, scalaz.Semigroup<L>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #189                // Method scalaz/LazyEitherT$.lazyEitherTPlus:(Lscalaz/Monad;Lscalaz/Semigroup;)Lscalaz/Plus;
       8: areturn

  public static <F, L> scalaz.MonadError<?, L> lazyEitherTMonadError(scalaz.Monad<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #194                // Method scalaz/LazyEitherT$.lazyEitherTMonadError:(Lscalaz/Monad;)Lscalaz/MonadError;
       7: areturn

  public static <F, L> scalaz.Functor<?> lazyEitherTLeftProjectionFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #199                // Method scalaz/LazyEitherT$.lazyEitherTLeftProjectionFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <F, L> scalaz.Functor<?> lazyEitherTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_0
       4: invokevirtual #202                // Method scalaz/LazyEitherT$.lazyEitherTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #205                // Field run:Ljava/lang/Object;
       4: areturn

  public <X> F $qmark(scala.Function0<X>, scala.Function0<X>, scalaz.Functor<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: aload_2
       7: invokedynamic #227,  0            // InvokeDynamic #2:apply:(Lscala/Function0;Lscala/Function0;)Lscala/Function1;
      12: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public F isLeft(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #245,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F isRight(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #251,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F swap(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #259,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F getOrElse(scala.Function0<B>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokedynamic #271,  0            // InvokeDynamic #6:apply:(Lscala/Function0;)Lscala/Function1;
      11: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public F $bar(scala.Function0<B>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokedynamic #271,  0            // InvokeDynamic #6:apply:(Lscala/Function0;)Lscala/Function1;
      11: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public F exists(scala.Function1<scala.Function0<B>, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokedynamic #284,  0            // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
      11: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public F forall(scala.Function1<scala.Function0<B>, java.lang.Object>, scalaz.Functor<F>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_1
       6: invokedynamic #291,  0            // InvokeDynamic #8:apply:(Lscala/Function1;)Lscala/Function1;
      11: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public scalaz.LazyEitherT<F, A, B> orElse(scala.Function0<scalaz.LazyEitherT<F, A, B>>, scalaz.Bind<F>);
    Code:
       0: aload_0
       1: invokevirtual #215                // Method run:()Ljava/lang/Object;
       4: astore_3
       5: new           #2                  // class scalaz/LazyEitherT
       8: dup
       9: aload_2
      10: aload_3
      11: aload_1
      12: aload_3
      13: invokedynamic #304,  0            // InvokeDynamic #9:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      18: invokeinterface #309,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
      26: areturn

  public scalaz.LazyEitherT<F, A, B> $bar$bar$bar(scala.Function0<scalaz.LazyEitherT<F, A, B>>, scalaz.Bind<F>);
    Code:
       0: aload_0
       1: invokevirtual #215                // Method run:()Ljava/lang/Object;
       4: astore_3
       5: new           #2                  // class scalaz/LazyEitherT
       8: dup
       9: aload_2
      10: aload_3
      11: aload_1
      12: aload_3
      13: invokedynamic #304,  0            // InvokeDynamic #9:apply:(Lscala/Function0;Ljava/lang/Object;)Lscala/Function1;
      18: invokeinterface #309,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
      26: areturn

  public scalaz.LazyOptionT<F, B> toLazyOption(scalaz.Functor<F>);
    Code:
       0: getstatic     #325                // Field scalaz/LazyOptionT$.MODULE$:Lscalaz/LazyOptionT$;
       3: aload_1
       4: aload_0
       5: invokevirtual #215                // Method run:()Ljava/lang/Object;
       8: invokedynamic #332,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
      13: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: invokevirtual #336                // Method scalaz/LazyOptionT$.lazyOptionT:(Ljava/lang/Object;)Lscalaz/LazyOptionT;
      21: areturn

  public scalaz.OptionT<F, B> toOption(scalaz.Functor<F>);
    Code:
       0: getstatic     #344                // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: invokevirtual #348                // Method scalaz/OptionT$.optionT:()Lscalaz/NaturalTransformation;
       6: aload_1
       7: aload_0
       8: invokevirtual #215                // Method run:()Ljava/lang/Object;
      11: invokedynamic #355,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
      16: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokeinterface #359,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #361                // class scalaz/OptionT
      29: areturn

  public scalaz.MaybeT<F, B> toMaybe(scalaz.Functor<F>);
    Code:
       0: getstatic     #369                // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: invokevirtual #372                // Method scalaz/MaybeT$.maybeT:()Lscalaz/NaturalTransformation;
       6: aload_1
       7: aload_0
       8: invokevirtual #215                // Method run:()Ljava/lang/Object;
      11: invokedynamic #379,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
      16: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokeinterface #359,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #381                // class scalaz/MaybeT
      29: areturn

  public F toList(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #389,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F toIList(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #397,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F toStream(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: invokedynamic #405,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
      10: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public <C> scalaz.LazyEitherT<F, A, C> map(scala.Function1<scala.Function0<B>, C>, scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #215                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: invokedynamic #413,  0            // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      14: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      22: areturn

  public <C> scalaz.LazyEitherT<F, A, C> flatMap(scala.Function1<scala.Function0<B>, scalaz.LazyEitherT<F, A, C>>, scalaz.Monad<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #215                // Method run:()Ljava/lang/Object;
       8: aload_2
       9: aload_1
      10: invokedynamic #425,  0            // InvokeDynamic #17:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #428,  3          // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      23: areturn

  public <C, D> scalaz.LazyEitherT<F, C, D> bimap(scala.Function1<scala.Function0<A>, C>, scala.Function1<scala.Function0<B>, D>, scalaz.Functor<F>);
    Code:
       0: getstatic     #47                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_3
       4: aload_0
       5: invokevirtual #215                // Method run:()Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #413,  0            // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      14: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #106                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      22: invokevirtual #435                // Method left:()Lscalaz/LazyEitherT$LeftProjectionT;
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: astore        4
      33: new           #2                  // class scalaz/LazyEitherT
      36: dup
      37: aload_3
      38: aload         4
      40: invokevirtual #438                // Method scalaz/LazyEitherT$LeftProjectionT.lazyEitherT:()Lscalaz/LazyEitherT;
      43: invokevirtual #215                // Method run:()Ljava/lang/Object;
      46: aload_1
      47: invokedynamic #443,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      52: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      57: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
      60: areturn

  public <C> scalaz.LazyEitherT<F, C, B> leftMap(scala.Function1<scala.Function0<A>, C>, scalaz.Functor<F>);
    Code:
       0: aload_0
       1: invokevirtual #435                // Method left:()Lscalaz/LazyEitherT$LeftProjectionT;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_3
      11: new           #2                  // class scalaz/LazyEitherT
      14: dup
      15: aload_2
      16: aload_3
      17: invokevirtual #438                // Method scalaz/LazyEitherT$LeftProjectionT.lazyEitherT:()Lscalaz/LazyEitherT;
      20: invokevirtual #215                // Method run:()Ljava/lang/Object;
      23: aload_1
      24: invokedynamic #443,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      29: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
      37: areturn

  public <G, C, D> G bitraverse(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #456                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload         4
      10: aload_3
      11: aload_0
      12: invokevirtual #215                // Method run:()Ljava/lang/Object;
      15: getstatic     #461                // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
      18: getstatic     #466                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
      21: invokevirtual #470                // Method scalaz/LazyEither$.lazyEitherBitraverse:()Lscalaz/Bitraverse;
      24: astore        5
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         5
      33: aload_1
      34: aload_2
      35: aload         4
      37: invokeinterface #476,  4          // InterfaceMethod scalaz/Bitraverse.bitraverseF:(Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      42: aload         4
      44: invokeinterface #482,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      49: invokedynamic #488,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
      54: invokeinterface #489,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      59: areturn

  public <G, C> G traverse(scala.Function1<B, G>, scalaz.Traverse<F>, scalaz.Applicative<G>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_0
       3: invokevirtual #215                // Method run:()Ljava/lang/Object;
       6: aload_1
       7: aload_3
       8: invokedynamic #503,  0            // InvokeDynamic #20:apply:(Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      13: aload_3
      14: invokeinterface #482,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #508,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
      24: invokeinterface #489,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <Z> Z foldRight(scala.Function0<Z>, scala.Function2<B, scala.Function0<Z>, Z>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #215                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #522,  0            // InvokeDynamic #22:apply:(Lscala/Function2;)Lscala/Function1;
      11: astore        5
      13: astore        4
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_3
      21: aload         4
      23: aload_1
      24: aload         5
      26: invokedynamic #536,  0            // InvokeDynamic #23:apply:(Lscala/Function1;)Lscala/Function2;
      31: invokeinterface #539,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      36: areturn

  public <C> scalaz.LazyEitherT<F, A, C> app(scala.Function0<scalaz.LazyEitherT<F, A, scala.Function1<B, C>>>, scalaz.Apply<F>);
    Code:
       0: new           #2                  // class scalaz/LazyEitherT
       3: dup
       4: aload_2
       5: aload_1
       6: invokedynamic #552,  0            // InvokeDynamic #24:apply:(Lscala/Function0;)Lscala/Function0;
      11: aload_0
      12: invokedynamic #560,  0            // InvokeDynamic #25:apply:(Lscalaz/LazyEitherT;)Lscala/Function0;
      17: invokedynamic #569,  0            // InvokeDynamic #26:apply:()Lscala/Function2;
      22: invokeinterface #575,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
      30: areturn

  public scalaz.LazyEitherT$LeftProjectionT<F, A, B> left();
    Code:
       0: new           #33                 // class scalaz/LazyEitherT$LeftProjectionT
       3: dup
       4: aload_0
       5: invokespecial #580                // Method scalaz/LazyEitherT$LeftProjectionT."<init>":(Lscalaz/LazyEitherT;)V
       8: areturn

  public <F, A, B> scalaz.LazyEitherT<F, A, B> copy(F);
    Code:
       0: new           #2                  // class scalaz/LazyEitherT
       3: dup
       4: aload_1
       5: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A, B> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #215                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #587                // String LazyEitherT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #215                // Method run:()Ljava/lang/Object;
      24: areturn
      25: new           #594                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #600                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #603                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #606                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #615                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #619                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/LazyEitherT
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #615                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #626                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #615                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #630                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/LazyEitherT
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/LazyEitherT
      27: astore_3
      28: aload_0
      29: invokevirtual #215                // Method run:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #215                // Method run:()Ljava/lang/Object;
      36: invokestatic  #634                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public static final java.lang.Object $anonfun$$qmark$2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #642,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$$qmark$3(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #642,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$$qmark$1(scala.Function0, scala.Function0, scalaz.LazyEither);
    Code:
       0: aload_2
       1: aload_0
       2: invokedynamic #650,  0            // InvokeDynamic #27:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_1
       8: invokedynamic #654,  0            // InvokeDynamic #28:apply:(Lscala/Function0;)Lscala/Function1;
      13: invokevirtual #658                // Method scalaz/LazyEither.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final boolean $anonfun$isLeft$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #665                // Method scalaz/LazyEither.isLeft:()Z
       4: ireturn

  public static final boolean $anonfun$isRight$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #669                // Method scalaz/LazyEither.isRight:()Z
       4: ireturn

  public static final scalaz.LazyEither $anonfun$swap$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #672                // Method scalaz/LazyEither.swap:()Lscalaz/LazyEither;
       4: areturn

  public static final java.lang.Object $anonfun$getOrElse$1(scala.Function0, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #676                // Method scalaz/LazyEither.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public static final boolean $anonfun$exists$1(scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #683                // Method scalaz/LazyEither.exists:(Lscala/Function1;)Z
       5: ireturn

  public static final boolean $anonfun$forall$1(scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #688                // Method scalaz/LazyEither.forall:(Lscala/Function1;)Z
       5: ireturn

  public static final java.lang.Object $anonfun$orElse$2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #642,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/LazyEitherT
       9: invokevirtual #215                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orElse$3(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$orElse$1(scala.Function0, java.lang.Object, scalaz.LazyEither);
    Code:
       0: aload_2
       1: aload_0
       2: invokedynamic #699,  0            // InvokeDynamic #29:apply:(Lscala/Function0;)Lscala/Function1;
       7: aload_1
       8: invokedynamic #705,  0            // InvokeDynamic #30:apply:(Ljava/lang/Object;)Lscala/Function1;
      13: invokevirtual #658                // Method scalaz/LazyEither.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final scalaz.LazyOption $anonfun$toLazyOption$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #709                // Method scalaz/LazyEither.toLazyOption:()Lscalaz/LazyOption;
       4: areturn

  public static final scala.Option $anonfun$toOption$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #713                // Method scalaz/LazyEither.toOption:()Lscala/Option;
       4: areturn

  public static final scalaz.Maybe $anonfun$toMaybe$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #717                // Method scalaz/LazyEither.toMaybe:()Lscalaz/Maybe;
       4: areturn

  public static final scala.collection.immutable.List $anonfun$toList$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #721                // Method scalaz/LazyEither.toList:()Lscala/collection/immutable/List;
       4: areturn

  public static final scalaz.IList $anonfun$toIList$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #725                // Method scalaz/LazyEither.toIList:()Lscalaz/IList;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$toStream$1(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokevirtual #729                // Method scalaz/LazyEither.toStream:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scalaz.LazyEither $anonfun$map$1(scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #734                // Method scalaz/LazyEither.map:(Lscala/Function1;)Lscalaz/LazyEither;
       5: areturn

  public static final scalaz.LazyEither $anonfun$flatMap$3(scala.Function0);
    Code:
       0: getstatic     #466                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
       3: invokevirtual #740                // Method scalaz/LazyEither$.lazyLeft:()Lscalaz/LazyEither$LazyLeftConstruct;
       6: aload_0
       7: invokevirtual #742                // Method scalaz/LazyEither$LazyLeftConstruct.apply:(Lscala/Function0;)Lscalaz/LazyEither;
      10: areturn

  public static final java.lang.Object $anonfun$flatMap$2(scalaz.Monad, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #749,  0            // InvokeDynamic #31:apply:(Lscala/Function0;)Lscala/Function0;
       7: invokeinterface #750,  2          // InterfaceMethod scalaz/Monad.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$flatMap$4(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #754,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class scalaz/LazyEitherT
      10: invokevirtual #215                // Method run:()Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scalaz.Monad, scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_2
       1: aload_0
       2: invokedynamic #761,  0            // InvokeDynamic #32:apply:(Lscalaz/Monad;)Lscala/Function1;
       7: aload_1
       8: invokedynamic #765,  0            // InvokeDynamic #33:apply:(Lscala/Function1;)Lscala/Function1;
      13: invokevirtual #658                // Method scalaz/LazyEither.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final scalaz.LazyEitherT $anonfun$bitraverse$1(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/LazyEitherT
       3: dup
       4: aload_0
       5: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final java.lang.Object $anonfun$traverse$1(scala.Function1, scalaz.Applicative, scalaz.LazyEither);
    Code:
       0: getstatic     #466                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
       3: invokevirtual #773                // Method scalaz/LazyEither$.lazyEitherInstance:()Lscalaz/Traverse;
       6: aload_2
       7: aload_0
       8: aload_1
       9: invokeinterface #482,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      14: areturn

  public static final scalaz.LazyEitherT $anonfun$traverse$2(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/LazyEitherT
       3: dup
       4: aload_0
       5: invokespecial #313                // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final java.lang.Object $anonfun$foldRight$2(scalaz.LazyEither, scala.Function2, scala.Function0);
    Code:
       0: getstatic     #466                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
       3: invokevirtual #773                // Method scalaz/LazyEither$.lazyEitherInstance:()Lscalaz/Traverse;
       6: aload_0
       7: aload_2
       8: aload_1
       9: invokeinterface #779,  4          // InterfaceMethod scalaz/Traverse.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      14: areturn

  public static final scala.Function1 $anonfun$foldRight$1(scala.Function2, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #785,  0            // InvokeDynamic #34:apply:(Lscalaz/LazyEither;Lscala/Function2;)Lscala/Function1;
       7: areturn

  public static final java.lang.Object $anonfun$app$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #642,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/LazyEitherT
       9: invokevirtual #215                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$app$2(scalaz.LazyEitherT);
    Code:
       0: aload_0
       1: invokevirtual #215                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final scalaz.LazyEither $anonfun$app$4(scalaz.LazyEither);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.LazyEither $anonfun$app$5(scalaz.LazyEither);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.LazyEither $anonfun$app$3(scalaz.LazyEither, scalaz.LazyEither);
    Code:
       0: getstatic     #466                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
       3: invokevirtual #773                // Method scalaz/LazyEither$.lazyEitherInstance:()Lscalaz/Traverse;
       6: checkcast     #306                // class scalaz/Bind
       9: aload_1
      10: invokedynamic #799,  0            // InvokeDynamic #35:apply:(Lscalaz/LazyEither;)Lscala/Function0;
      15: aload_0
      16: invokedynamic #803,  0            // InvokeDynamic #36:apply:(Lscalaz/LazyEither;)Lscala/Function0;
      21: invokeinterface #806,  3          // InterfaceMethod scalaz/Bind.ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      26: checkcast     #30                 // class scalaz/LazyEither
      29: areturn

  public scalaz.LazyEitherT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #205                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #810                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #814                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  public static final java.lang.Object $anonfun$isLeft$1$adapted(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokestatic  #816                // Method $anonfun$isLeft$1:(Lscalaz/LazyEither;)Z
       4: invokestatic  #820                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isRight$1$adapted(scalaz.LazyEither);
    Code:
       0: aload_0
       1: invokestatic  #822                // Method $anonfun$isRight$1:(Lscalaz/LazyEither;)Z
       4: invokestatic  #820                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$exists$1$adapted(scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #683                // Method scalaz/LazyEither.exists:(Lscala/Function1;)Z
       5: invokestatic  #820                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public static final java.lang.Object $anonfun$forall$1$adapted(scala.Function1, scalaz.LazyEither);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #688                // Method scalaz/LazyEither.forall:(Lscala/Function1;)Z
       5: invokestatic  #820                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #834,  0            // InvokeDynamic #37:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
