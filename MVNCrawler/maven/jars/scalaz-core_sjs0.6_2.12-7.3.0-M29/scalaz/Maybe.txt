Compiled from "Maybe.scala"
public abstract class scalaz.Maybe<A> {
  public static <T> scalaz.Maybe<T> attempt(scala.Function0<T>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      20: areturn
      21: astore_3
      22: getstatic     #58                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      25: aload_3
      26: invokevirtual #62                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      29: invokevirtual #68                 // Method scala/Option.isEmpty:()Z
      32: ifne          43
      35: aload_1
      36: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      39: astore_2
      40: goto          45
      43: aload_3
      44: athrow
      45: aload_2
      46: areturn
    Exception table:
       from    to  target type
          10    20    21   Class java/lang/Throwable

  public static <T> scalaz.Maybe<T> fromTryCatchNonFatal(scala.Function0<T>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      20: areturn
      21: astore_3
      22: getstatic     #58                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      25: aload_3
      26: invokevirtual #62                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      29: invokevirtual #68                 // Method scala/Option.isEmpty:()Z
      32: ifne          43
      35: aload_1
      36: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      39: astore_2
      40: goto          45
      43: aload_3
      44: athrow
      45: aload_2
      46: areturn
    Exception table:
       from    to  target type
          10    20    21   Class java/lang/Throwable

  public static <T, E extends java.lang.Throwable> scalaz.Maybe<T> fromTryCatchThrowable(scala.Function0<T>, scalaz.NotNothing<E>, scala.reflect.ClassTag<E>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: astore_3
      10: aload_3
      11: aload_0
      12: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      17: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      20: areturn
      21: astore        5
      23: aload_2
      24: invokeinterface #86,  1           // InterfaceMethod scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
      29: aload         5
      31: invokevirtual #92                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      34: ifeq          46
      37: aload_3
      38: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      41: astore        4
      43: goto          49
      46: aload         5
      48: athrow
      49: aload         4
      51: areturn
    Exception table:
       from    to  target type
          10    20    21   Class java/lang/Throwable

  public static <A> scalaz.Maybe<A> fromOption(scala.Option<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #101                // Method scalaz/Maybe$.fromOption:(Lscala/Option;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<A> just(A);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static <A> scalaz.Maybe<A> empty();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static <A> scalaz.Maybe<A> fromNullable(A);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #106                // Method scalaz/Maybe$.fromNullable:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scala.Option, scalaz.Maybe> optionMaybeIso();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #111                // Method scalaz/Maybe$.optionMaybeIso:()Lscalaz/Isomorphisms$Iso2;
       6: areturn

  public static scalaz.Traverse<scalaz.Maybe> maybeInstance();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #116                // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
       6: areturn

  public static scalaz.Monad<java.lang.Object> maybeMaxMonad();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #121                // Method scalaz/Maybe$.maybeMaxMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> maybeMaxOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #127                // Method scalaz/Maybe$.maybeMaxOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> maybeMaxShow(scalaz.Show<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #133                // Method scalaz/Maybe$.maybeMaxShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> maybeMax(scalaz.Order<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #139                // Method scalaz/Maybe$.maybeMax:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> maybeMinMonad();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #142                // Method scalaz/Maybe$.maybeMinMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> maybeMinOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #146                // Method scalaz/Maybe$.maybeMinOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> maybeMinShow(scalaz.Show<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #150                // Method scalaz/Maybe$.maybeMinShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> maybeMin(scalaz.Order<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #153                // Method scalaz/Maybe$.maybeMin:(Lscalaz/Order;)Lscalaz/Monoid;
       7: areturn

  public static scalaz.Monad<java.lang.Object> maybeLastMonad();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #156                // Method scalaz/Maybe$.maybeLastMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> maybeLastOrder(scalaz.Order<scalaz.Maybe<A>>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #161                // Method scalaz/Maybe$.maybeLastOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> maybeLastShow(scalaz.Show<scalaz.Maybe<A>>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #165                // Method scalaz/Maybe$.maybeLastShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> maybeLastMonoid();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #170                // Method scalaz/Maybe$.maybeLastMonoid:()Lscalaz/Monoid;
       6: areturn

  public static scalaz.Monad<java.lang.Object> maybeFirstMonad();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #173                // Method scalaz/Maybe$.maybeFirstMonad:()Lscalaz/Monad;
       6: areturn

  public static <A> scalaz.Order<java.lang.Object> maybeFirstOrder(scalaz.Order<scalaz.Maybe<A>>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #176                // Method scalaz/Maybe$.maybeFirstOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Show<java.lang.Object> maybeFirstShow(scalaz.Show<scalaz.Maybe<A>>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #179                // Method scalaz/Maybe$.maybeFirstShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Monoid<java.lang.Object> maybeFirstMonoid();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #182                // Method scalaz/Maybe$.maybeFirstMonoid:()Lscalaz/Monoid;
       6: areturn

  public static <A> scalaz.Monoid<scalaz.Maybe<A>> maybeMonoid(scalaz.Semigroup<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #188                // Method scalaz/Maybe$.maybeMonoid:(Lscalaz/Semigroup;)Lscalaz/Monoid;
       7: areturn

  public static <A> scalaz.Show<scalaz.Maybe<A>> maybeShow(scalaz.Show<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #192                // Method scalaz/Maybe$.maybeShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Order<scalaz.Maybe<A>> maybeOrder(scalaz.Order<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #197                // Method scalaz/Maybe$.maybeOrder:(Lscalaz/Order;)Lscalaz/Order;
       7: areturn

  public static <A> scalaz.Equal<scalaz.Maybe<A>> maybeEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #203                // Method scalaz/Maybe$.maybeEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <A> scalaz.SemiLattice<scalaz.Maybe<A>> maybeSemiLattice(scalaz.SemiLattice<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #208                // Method scalaz/Maybe$.maybeSemiLattice:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice;
       7: areturn

  public static <A> scalaz.Band<scalaz.Maybe<A>> maybeBand(scalaz.Band<A>);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #214                // Method scalaz/Maybe$.maybeBand:(Lscalaz/Band;)Lscalaz/Band;
       7: areturn

  public final <B> B cata(scala.Function1<A, B>, scala.Function0<B>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          28
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore        4
      16: aload_1
      17: aload         4
      19: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_3
      25: goto          54
      28: aload_0
      29: instanceof    #21                 // class scalaz/Maybe$Empty
      32: ifeq          45
      35: aload_2
      36: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      41: astore_3
      42: goto          54
      45: new           #229                // class scala/MatchError
      48: dup
      49: aload_0
      50: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow
      54: aload_3
      55: areturn

  public final A getOrElse(scala.Function0<A>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #244                // Method $anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: goto          47
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          38
      28: aload_1
      29: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: astore_2
      35: goto          47
      38: new           #229                // class scala/MatchError
      41: dup
      42: aload_0
      43: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_2
      48: areturn

  public final A $bar(scala.Function0<A>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #244                // Method $anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: goto          47
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          38
      28: aload_1
      29: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      34: astore_2
      35: goto          47
      38: new           #229                // class scala/MatchError
      41: dup
      42: aload_0
      43: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_2
      48: areturn

  public final <B> scalaz.Validation<A, B> toFailure(scala.Function0<B>);
    Code:
       0: getstatic     #253                // Field scalaz/Validation$.MODULE$:Lscalaz/Validation$;
       3: invokevirtual #257                // Method scalaz/Validation$.failure:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #261                // Method $anonfun$toFailure$1:(Lscala/Function0;)Lscalaz/Success;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #263                // class scalaz/Validation
      63: areturn

  public final <B> scalaz.Validation<B, A> toSuccess(scala.Function0<B>);
    Code:
       0: getstatic     #253                // Field scalaz/Validation$.MODULE$:Lscalaz/Validation$;
       3: invokevirtual #270                // Method scalaz/Validation$.success:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #274                // Method $anonfun$toSuccess$1:(Lscala/Function0;)Lscalaz/Failure;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #263                // class scalaz/Validation
      63: areturn

  public final <B> scalaz.$bslash$div<A, B> toLeft(scala.Function0<B>);
    Code:
       0: getstatic     #282                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: invokevirtual #285                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #288                // Method $anonfun$toLeft$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #290                // class scalaz/$bslash$div
      63: areturn

  public final <B> scalaz.$bslash$div<A, B> $less$bslash$div(scala.Function0<B>);
    Code:
       0: getstatic     #282                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: invokevirtual #285                // Method scalaz/$bslash$div$.left:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #288                // Method $anonfun$toLeft$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #290                // class scalaz/$bslash$div
      63: areturn

  public final <B> scalaz.$bslash$div<B, A> toRight(scala.Function0<B>);
    Code:
       0: getstatic     #282                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: invokevirtual #298                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #301                // Method $anonfun$toRight$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #290                // class scalaz/$bslash$div
      63: areturn

  public final <B> scalaz.$bslash$div<B, A> $bslash$div$greater(scala.Function0<B>);
    Code:
       0: getstatic     #282                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
       3: invokevirtual #298                // Method scalaz/$bslash$div$.right:()Lscala/Function1;
       6: astore_2
       7: aload_0
       8: instanceof    #27                 // class scalaz/Maybe$Just
      11: ifeq          35
      14: aload_0
      15: checkcast     #27                 // class scalaz/Maybe$Just
      18: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      21: astore        4
      23: aload_2
      24: aload         4
      26: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: goto          59
      35: aload_0
      36: instanceof    #21                 // class scalaz/Maybe$Empty
      39: ifeq          50
      42: aload_1
      43: invokestatic  #301                // Method $anonfun$toRight$1:(Lscala/Function0;)Lscalaz/$bslash$div;
      46: astore_3
      47: goto          59
      50: new           #229                // class scala/MatchError
      53: dup
      54: aload_0
      55: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: aload_3
      60: checkcast     #290                // class scalaz/$bslash$div
      63: areturn

  public final boolean isJust();
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #308                // Method $anonfun$isJust$1:(Ljava/lang/Object;)Z
      17: istore_1
      18: goto          44
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          35
      28: invokestatic  #311                // Method $anonfun$isJust$2:()Z
      31: istore_1
      32: goto          44
      35: new           #229                // class scala/MatchError
      38: dup
      39: aload_0
      40: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: iload_1
      45: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #314                // Method $anonfun$isEmpty$1:(Ljava/lang/Object;)Z
      17: istore_1
      18: goto          44
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          35
      28: invokestatic  #317                // Method $anonfun$isEmpty$2:()Z
      31: istore_1
      32: goto          44
      35: new           #229                // class scala/MatchError
      38: dup
      39: aload_0
      40: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: iload_1
      45: ireturn

  public final <B> scalaz.Maybe<B> map(scala.Function1<A, B>);
    Code:
       0: aload_1
       1: invokedynamic #339,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       6: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      11: astore_2
      12: aload_0
      13: instanceof    #27                 // class scalaz/Maybe$Just
      16: ifeq          40
      19: aload_0
      20: checkcast     #27                 // class scalaz/Maybe$Just
      23: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      26: astore        4
      28: aload_2
      29: aload         4
      31: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore_3
      37: goto          63
      40: aload_0
      41: instanceof    #21                 // class scalaz/Maybe$Empty
      44: ifeq          54
      47: invokestatic  #346                // Method $anonfun$map$2:()Lscalaz/Maybe;
      50: astore_3
      51: goto          63
      54: new           #229                // class scala/MatchError
      57: dup
      58: aload_0
      59: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: aload_3
      64: checkcast     #2                  // class scalaz/Maybe
      67: areturn

  public final <B> scalaz.Maybe<B> flatMap(scala.Function1<A, scalaz.Maybe<B>>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          26
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_2
      23: goto          49
      26: aload_0
      27: instanceof    #21                 // class scalaz/Maybe$Empty
      30: ifeq          40
      33: invokestatic  #351                // Method $anonfun$flatMap$1:()Lscalaz/Maybe;
      36: astore_2
      37: goto          49
      40: new           #229                // class scala/MatchError
      43: dup
      44: aload_0
      45: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow
      49: aload_2
      50: checkcast     #2                  // class scalaz/Maybe
      53: areturn

  public final scala.Option<A> toOption();
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #358                // Method $anonfun$toOption$1:(Ljava/lang/Object;)Lscala/Some;
      17: astore_1
      18: goto          44
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          35
      28: invokestatic  #362                // Method $anonfun$toOption$2:()Lscala/None$;
      31: astore_1
      32: goto          44
      35: new           #229                // class scala/MatchError
      38: dup
      39: aload_0
      40: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: aload_1
      45: checkcast     #64                 // class scala/Option
      48: areturn

  public final scalaz.Maybe<A> orElse(scala.Function0<scalaz.Maybe<A>>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          24
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: aload_3
      17: invokestatic  #368                // Method $anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
      20: astore_2
      21: goto          50
      24: aload_0
      25: instanceof    #21                 // class scalaz/Maybe$Empty
      28: ifeq          41
      31: aload_1
      32: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      37: astore_2
      38: goto          50
      41: new           #229                // class scala/MatchError
      44: dup
      45: aload_0
      46: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_2
      51: checkcast     #2                  // class scalaz/Maybe
      54: areturn

  public final <F> F getOrElseF(scala.Function0<F>, scalaz.Applicative<F>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          26
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore        4
      16: aload_2
      17: aload         4
      19: invokestatic  #377                // Method $anonfun$getOrElseF$1:(Lscalaz/Applicative;Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_3
      23: goto          52
      26: aload_0
      27: instanceof    #21                 // class scalaz/Maybe$Empty
      30: ifeq          43
      33: aload_1
      34: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      39: astore_3
      40: goto          52
      43: new           #229                // class scala/MatchError
      46: dup
      47: aload_0
      48: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_3
      53: areturn

  public final java.lang.Object first();
    Code:
       0: getstatic     #384                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #388                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_0
      13: invokevirtual #391                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public final java.lang.Object last();
    Code:
       0: getstatic     #384                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #388                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_0
      13: invokevirtual #391                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public final java.lang.Object min();
    Code:
       0: getstatic     #384                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #388                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_0
      13: invokevirtual #391                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public final java.lang.Object max();
    Code:
       0: getstatic     #384                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: dup
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: invokevirtual #388                // Method scalaz/Tag$.k:()Lscalaz/TagKind;
      12: aload_0
      13: invokevirtual #391                // Method scalaz/TagKind.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public final scalaz.Maybe<scalaz.Maybe<A>> cojoin();
    Code:
       0: invokedynamic #401,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       5: invokedynamic #339,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      10: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      15: astore_1
      16: aload_0
      17: instanceof    #27                 // class scalaz/Maybe$Just
      20: ifeq          42
      23: aload_0
      24: checkcast     #27                 // class scalaz/Maybe$Just
      27: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: astore_2
      39: goto          65
      42: aload_0
      43: instanceof    #21                 // class scalaz/Maybe$Empty
      46: ifeq          56
      49: invokestatic  #346                // Method $anonfun$map$2:()Lscalaz/Maybe;
      52: astore_2
      53: goto          65
      56: new           #229                // class scala/MatchError
      59: dup
      60: aload_0
      61: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload_2
      66: checkcast     #2                  // class scalaz/Maybe
      69: areturn

  public final <B> scalaz.Maybe<B> cobind(scala.Function1<scalaz.Maybe<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #414,  0            // InvokeDynamic #2:apply:(Lscalaz/Maybe;Lscala/Function1;)Lscala/Function1;
       7: invokedynamic #339,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      12: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      17: astore_2
      18: aload_0
      19: instanceof    #27                 // class scalaz/Maybe$Just
      22: ifeq          46
      25: aload_0
      26: checkcast     #27                 // class scalaz/Maybe$Just
      29: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: astore_3
      43: goto          69
      46: aload_0
      47: instanceof    #21                 // class scalaz/Maybe$Empty
      50: ifeq          60
      53: invokestatic  #346                // Method $anonfun$map$2:()Lscalaz/Maybe;
      56: astore_3
      57: goto          69
      60: new           #229                // class scala/MatchError
      63: dup
      64: aload_0
      65: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: aload_3
      70: checkcast     #2                  // class scalaz/Maybe
      73: areturn

  public final <B> scalaz.Maybe<scala.Tuple2<A, B>> zip(scalaz.Maybe<B>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          24
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokestatic  #421                // Method $anonfun$zip$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
      20: astore_2
      21: goto          47
      24: aload_0
      25: instanceof    #21                 // class scalaz/Maybe$Empty
      28: ifeq          38
      31: invokestatic  #351                // Method $anonfun$flatMap$1:()Lscalaz/Maybe;
      34: astore_2
      35: goto          47
      38: new           #229                // class scala/MatchError
      41: dup
      42: aload_0
      43: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      46: athrow
      47: aload_2
      48: areturn

  public final <B, C> scalaz.Maybe<C> zipWith(scalaz.Maybe<B>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          27
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore        4
      16: aload_1
      17: aload_2
      18: aload         4
      20: invokestatic  #429                // Method $anonfun$zipWith$1:(Lscalaz/Maybe;Lscala/Function2;Ljava/lang/Object;)Lscalaz/Maybe;
      23: astore_3
      24: goto          50
      27: aload_0
      28: instanceof    #21                 // class scalaz/Maybe$Empty
      31: ifeq          41
      34: invokestatic  #351                // Method $anonfun$flatMap$1:()Lscalaz/Maybe;
      37: astore_3
      38: goto          50
      41: new           #229                // class scala/MatchError
      44: dup
      45: aload_0
      46: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_3
      51: areturn

  public final scalaz.Maybe<A> filter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          25
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokestatic  #436                // Method $anonfun$filter$1:(Lscalaz/Maybe;Lscala/Function1;Ljava/lang/Object;)Lscalaz/Maybe;
      21: astore_2
      22: goto          48
      25: aload_0
      26: instanceof    #21                 // class scalaz/Maybe$Empty
      29: ifeq          39
      32: invokestatic  #351                // Method $anonfun$flatMap$1:()Lscalaz/Maybe;
      35: astore_2
      36: goto          48
      39: new           #229                // class scala/MatchError
      42: dup
      43: aload_0
      44: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow
      48: aload_2
      49: areturn

  public final scalaz.Maybe<A> filterNot(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #442,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       7: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      12: invokevirtual #444                // Method filter:(Lscala/Function1;)Lscalaz/Maybe;
      15: areturn

  public final boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          26
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_2
      23: goto          52
      26: aload_0
      27: instanceof    #21                 // class scalaz/Maybe$Empty
      30: ifeq          43
      33: invokestatic  #450                // Method $anonfun$forall$1:()Z
      36: invokestatic  #456                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      39: astore_2
      40: goto          52
      43: new           #229                // class scala/MatchError
      46: dup
      47: aload_0
      48: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_2
      53: invokestatic  #459                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      56: ireturn

  public final boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          26
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_2
      23: goto          52
      26: aload_0
      27: instanceof    #21                 // class scalaz/Maybe$Empty
      30: ifeq          43
      33: invokestatic  #463                // Method $anonfun$exists$1:()Z
      36: invokestatic  #456                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      39: astore_2
      40: goto          52
      43: new           #229                // class scala/MatchError
      46: dup
      47: aload_0
      48: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_2
      53: invokestatic  #459                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      56: ireturn

  public final A orZero(scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          21
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: invokestatic  #244                // Method $anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: goto          45
      21: aload_0
      22: instanceof    #21                 // class scalaz/Maybe$Empty
      25: ifeq          36
      28: aload_1
      29: invokestatic  #470                // Method $anonfun$orZero$1:(Lscalaz/Monoid;)Ljava/lang/Object;
      32: astore_2
      33: goto          45
      36: new           #229                // class scala/MatchError
      39: dup
      40: aload_0
      41: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      44: athrow
      45: aload_2
      46: areturn

  public final A unary_$tilde(scalaz.Monoid<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #475                // Method orZero:(Lscalaz/Monoid;)Ljava/lang/Object;
       5: areturn

  public final <F> F orEmpty(scalaz.ApplicativePlus<F>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          24
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokestatic  #482                // Method $anonfun$orEmpty$1:(Lscalaz/ApplicativePlus;Ljava/lang/Object;)Ljava/lang/Object;
      20: astore_2
      21: goto          48
      24: aload_0
      25: instanceof    #21                 // class scalaz/Maybe$Empty
      28: ifeq          39
      31: aload_1
      32: invokestatic  #485                // Method $anonfun$orEmpty$3:(Lscalaz/ApplicativePlus;)Ljava/lang/Object;
      35: astore_2
      36: goto          48
      39: new           #229                // class scala/MatchError
      42: dup
      43: aload_0
      44: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow
      48: aload_2
      49: areturn

  public final <F, E> F orError(E, scalaz.MonadError<F, E>);
    Code:
       0: aload_0
       1: instanceof    #27                 // class scalaz/Maybe$Just
       4: ifeq          26
       7: aload_0
       8: checkcast     #27                 // class scalaz/Maybe$Just
      11: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: astore        4
      16: aload_2
      17: aload         4
      19: invokestatic  #494                // Method $anonfun$orError$1:(Lscalaz/MonadError;Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_3
      23: goto          51
      26: aload_0
      27: instanceof    #21                 // class scalaz/Maybe$Empty
      30: ifeq          42
      33: aload_2
      34: aload_1
      35: invokestatic  #497                // Method $anonfun$orError$3:(Lscalaz/MonadError;Ljava/lang/Object;)Ljava/lang/Object;
      38: astore_3
      39: goto          51
      42: new           #229                // class scala/MatchError
      45: dup
      46: aload_0
      47: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      50: athrow
      51: aload_3
      52: areturn

  public static final java.lang.Object $anonfun$getOrElse$1(java.lang.Object);
    Code:
       0: getstatic     #504                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #507                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final scalaz.Success $anonfun$toFailure$1(scala.Function0);
    Code:
       0: new           #510                // class scalaz/Success
       3: dup
       4: aload_0
       5: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: invokespecial #511                // Method scalaz/Success."<init>":(Ljava/lang/Object;)V
      13: areturn

  public static final scalaz.Failure $anonfun$toSuccess$1(scala.Function0);
    Code:
       0: new           #514                // class scalaz/Failure
       3: dup
       4: aload_0
       5: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: invokespecial #515                // Method scalaz/Failure."<init>":(Ljava/lang/Object;)V
      13: areturn

  public static final scalaz.$bslash$div $anonfun$toLeft$1(scala.Function0);
    Code:
       0: getstatic     #521                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
       3: aload_0
       4: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #524                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      12: areturn

  public static final scalaz.$bslash$div $anonfun$toRight$1(scala.Function0);
    Code:
       0: getstatic     #530                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
       3: aload_0
       4: invokeinterface #49,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #531                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      12: areturn

  public static final boolean $anonfun$isJust$1(java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  public static final boolean $anonfun$isJust$2();
    Code:
       0: iconst_0
       1: ireturn

  public static final boolean $anonfun$isEmpty$1(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public static final boolean $anonfun$isEmpty$2();
    Code:
       0: iconst_1
       1: ireturn

  public static final scalaz.Maybe $anonfun$map$1(java.lang.Object);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final scalaz.Maybe $anonfun$map$2();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final scalaz.Maybe $anonfun$flatMap$1();
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  public static final scala.Some $anonfun$toOption$1(java.lang.Object);
    Code:
       0: new           #536                // class scala/Some
       3: dup
       4: aload_0
       5: invokespecial #537                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final scala.None$ $anonfun$toOption$2();
    Code:
       0: getstatic     #542                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final scalaz.Maybe $anonfun$orElse$1(scalaz.Maybe, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$getOrElseF$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$getOrElseF$1(scalaz.Applicative, java.lang.Object);
    Code:
       0: getstatic     #553                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: aload_1
      10: invokedynamic #560,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #565,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      20: areturn

  public static final scalaz.Maybe $anonfun$cojoin$1(java.lang.Object);
    Code:
       0: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       7: areturn

  public static final java.lang.Object $anonfun$cobind$1(scalaz.Maybe, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final scala.Tuple2 $anonfun$zip$2(java.lang.Object, java.lang.Object);
    Code:
       0: new           #572                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #575                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final scalaz.Maybe $anonfun$zip$1(scalaz.Maybe, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #584,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function1;
       7: astore_2
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_2
      14: invokedynamic #339,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      19: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      24: astore_3
      25: aload_0
      26: instanceof    #27                 // class scalaz/Maybe$Just
      29: ifeq          54
      32: aload_0
      33: checkcast     #27                 // class scalaz/Maybe$Just
      36: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      39: astore        5
      41: aload_3
      42: aload         5
      44: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore        4
      51: goto          78
      54: aload_0
      55: instanceof    #21                 // class scalaz/Maybe$Empty
      58: ifeq          69
      61: invokestatic  #346                // Method $anonfun$map$2:()Lscalaz/Maybe;
      64: astore        4
      66: goto          78
      69: new           #229                // class scala/MatchError
      72: dup
      73: aload_0
      74: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      77: athrow
      78: aload         4
      80: checkcast     #2                  // class scalaz/Maybe
      83: areturn

  public static final java.lang.Object $anonfun$zipWith$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #594,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static final scalaz.Maybe $anonfun$zipWith$1(scalaz.Maybe, scala.Function2, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #601,  0            // InvokeDynamic #6:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
       8: astore_3
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_3
      15: invokedynamic #339,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      20: invokeinterface #343,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      25: astore        4
      27: aload_0
      28: instanceof    #27                 // class scalaz/Maybe$Just
      31: ifeq          57
      34: aload_0
      35: checkcast     #27                 // class scalaz/Maybe$Just
      38: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      41: astore        6
      43: aload         4
      45: aload         6
      47: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: astore        5
      54: goto          81
      57: aload_0
      58: instanceof    #21                 // class scalaz/Maybe$Empty
      61: ifeq          72
      64: invokestatic  #346                // Method $anonfun$map$2:()Lscalaz/Maybe;
      67: astore        5
      69: goto          81
      72: new           #229                // class scala/MatchError
      75: dup
      76: aload_0
      77: invokespecial #233                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow
      81: aload         5
      83: checkcast     #2                  // class scalaz/Maybe
      86: areturn

  public static final scalaz.Maybe $anonfun$filter$1(scalaz.Maybe, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #227,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: invokestatic  #459                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      10: ifeq          15
      13: aload_0
      14: areturn
      15: getstatic     #43                 // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      18: invokevirtual #72                 // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      21: areturn

  public static final boolean $anonfun$filterNot$1(boolean);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: iconst_0
       7: ireturn

  public static final boolean $anonfun$forall$1();
    Code:
       0: iconst_1
       1: ireturn

  public static final boolean $anonfun$exists$1();
    Code:
       0: iconst_0
       1: ireturn

  public static final java.lang.Object $anonfun$orZero$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #612,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$orEmpty$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$orEmpty$1(scalaz.ApplicativePlus, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #620,  0            // InvokeDynamic #7:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #623,  2          // InterfaceMethod scalaz/ApplicativePlus.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orEmpty$3(scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: invokeinterface #625,  1          // InterfaceMethod scalaz/ApplicativePlus.empty:()Ljava/lang/Object;
       6: areturn

  public static final java.lang.Object $anonfun$orError$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$orError$1(scalaz.MonadError, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #633,  0            // InvokeDynamic #8:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #636,  2          // InterfaceMethod scalaz/MonadError.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$orError$3(scalaz.MonadError, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #640,  2          // InterfaceMethod scalaz/MonadError.raiseError:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public scalaz.Maybe();
    Code:
       0: aload_0
       1: invokespecial #643                // Method java/lang/Object."<init>":()V
       4: return

  public static final java.lang.Object $anonfun$isJust$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #308                // Method $anonfun$isJust$1:(Ljava/lang/Object;)Z
       4: invokestatic  #456                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isEmpty$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #314                // Method $anonfun$isEmpty$1:(Ljava/lang/Object;)Z
       4: invokestatic  #456                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$filterNot$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #459                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #647                // Method $anonfun$filterNot$1:(Z)Z
       7: invokestatic  #456                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #688,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
