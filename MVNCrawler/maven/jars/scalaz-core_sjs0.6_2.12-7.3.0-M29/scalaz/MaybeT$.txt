Compiled from "MaybeT.scala"
public final class scalaz.MaybeT$ extends scalaz.MaybeTInstances implements scala.Serializable {
  public static scalaz.MaybeT$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/MaybeT$
       3: invokespecial #25                 // Method "<init>":()V
       6: return

  public <M> scalaz.NaturalTransformation<?, ?> maybeT();
    Code:
       0: new           #18                 // class scalaz/MaybeT$$anon$9
       3: dup
       4: invokespecial #29                 // Method scalaz/MaybeT$$anon$9."<init>":()V
       7: areturn

  public <M, A> scalaz.MaybeT<M, A> just(scala.Function0<A>, scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method maybeT:()Lscalaz/NaturalTransformation;
       4: aload_2
       5: aload_1
       6: invokedynamic #59,  0             // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      11: invokeinterface #65,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      16: invokeinterface #70,  2           // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #72                 // class scalaz/MaybeT
      24: areturn

  public <M, A> scalaz.MaybeT<M, A> empty(scalaz.Applicative<M>);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method maybeT:()Lscalaz/NaturalTransformation;
       4: aload_1
       5: invokedynamic #84,  0             // InvokeDynamic #1:apply:()Lscala/Function0;
      10: invokeinterface #65,  2           // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      15: invokeinterface #70,  2           // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #72                 // class scalaz/MaybeT
      23: areturn

  public <F, W, A> scalaz.MonadTell<?, W> monadTell(scalaz.MonadTell<F, W>);
    Code:
       0: new           #14                 // class scalaz/MaybeT$$anon$10
       3: dup
       4: aload_1
       5: invokespecial #91                 // Method scalaz/MaybeT$$anon$10."<init>":(Lscalaz/MonadTell;)V
       8: areturn

  public <F, W, A> scalaz.MonadListen<?, W> monadListen(scalaz.MonadListen<F, W>);
    Code:
       0: new           #16                 // class scalaz/MaybeT$$anon$11
       3: dup
       4: aload_1
       5: invokespecial #99                 // Method scalaz/MaybeT$$anon$11."<init>":(Lscalaz/MonadListen;)V
       8: areturn

  public <F, A> scalaz.MaybeT<F, A> apply(F);
    Code:
       0: new           #72                 // class scalaz/MaybeT
       3: dup
       4: aload_1
       5: invokespecial #106                // Method scalaz/MaybeT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, A> scala.Option<F> unapply(scalaz.MaybeT<F, A>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #118                // class scala/Some
      11: dup
      12: aload_1
      13: invokevirtual #120                // Method scalaz/MaybeT.run:()Ljava/lang/Object;
      16: invokespecial #121                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      19: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #125                // Field MODULE$:Lscalaz/MaybeT$;
       3: areturn

  public static final scalaz.Maybe $anonfun$just$1(scala.Function0);
    Code:
       0: getstatic     #131                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_0
       4: invokeinterface #135,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: invokevirtual #138                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      12: areturn

  public static final scalaz.Maybe $anonfun$empty$1();
    Code:
       0: getstatic     #131                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: invokevirtual #140                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
       6: areturn

  private scalaz.MaybeT$();
    Code:
       0: aload_0
       1: invokespecial #141                // Method scalaz/MaybeTInstances."<init>":()V
       4: aload_0
       5: putstatic     #125                // Field MODULE$:Lscalaz/MaybeT$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #153,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
