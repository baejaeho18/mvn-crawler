Compiled from "LazyEitherT.scala"
public final class scalaz.LazyEitherTInstances$$anon$17 implements scalaz.LazyEitherTBitraverse<F> {
  private final scalaz.syntax.BitraverseSyntax<?> bitraverseSyntax;

  private final scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax;

  private final scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax;

  private final scalaz.Traverse F0$15;

  public <G, A, B, C, D> G bitraverseImpl(scalaz.LazyEitherT<F, A, B>, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #58                 // InterfaceMethod scalaz/LazyEitherTBitraverse.bitraverseImpl$:(Lscalaz/LazyEitherTBitraverse;Lscalaz/LazyEitherT;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public final <A, B, M> M bifoldMap(scalaz.LazyEitherT<F, A, B>, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #73                 // InterfaceMethod scalaz/LazyEitherTBifoldable.bifoldMap$:(Lscalaz/LazyEitherTBifoldable;Lscalaz/LazyEitherT;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object bifoldRight(java.lang.Object, scala.Function0, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #82                 // InterfaceMethod scalaz/Bifoldable$FromBifoldMap.bifoldRight$:(Lscalaz/Bifoldable$FromBifoldMap;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public final <A, B, C, D> scalaz.LazyEitherT<F, C, D> bimap(scalaz.LazyEitherT<F, A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #94                 // InterfaceMethod scalaz/LazyEitherTBifunctor.bimap$:(Lscalaz/LazyEitherTBifunctor;Lscalaz/LazyEitherT;Lscala/Function1;Lscala/Function1;)Lscalaz/LazyEitherT;
       7: areturn

  public <G> scalaz.Bitraverse<?> compose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/Bitraverse.compose$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> product(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Bitraverse.product$:(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G, A, B, C, D> scala.Function1<scalaz.LazyEitherT<F, A, B>, G> bitraverseF(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #115                // InterfaceMethod scalaz/Bitraverse.bitraverseF$:(Lscalaz/Bitraverse;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       7: areturn

  public <X> scalaz.Traverse<?> leftTraverse();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Bitraverse.leftTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <X> scalaz.Traverse<?> rightTraverse();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Bitraverse.rightTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public scalaz.Traverse<?> uTraverse();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Bitraverse.uTraverse$:(Lscalaz/Bitraverse;)Lscalaz/Traverse;
       4: areturn

  public <G> scalaz.Bitraverse<?>.Bitraversal<G> bitraversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod scalaz/Bitraverse.bitraversal$:(Lscalaz/Bitraverse;Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       5: areturn

  public <S> scalaz.Bitraverse<?>.Bitraversal<?> bitraversalS();
    Code:
       0: aload_0
       1: invokestatic  #146                // InterfaceMethod scalaz/Bitraverse.bitraversalS$:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse$Bitraversal;
       4: areturn

  public java.lang.Object bitraverse(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #152                // InterfaceMethod scalaz/Bitraverse.bitraverse$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT bitraverseS(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #158                // InterfaceMethod scalaz/Bitraverse.bitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public scala.Tuple2 runBitraverseS(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #165                // InterfaceMethod scalaz/Bitraverse.runBitraverseS$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
       9: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #171                // InterfaceMethod scalaz/Bitraverse.traverseSTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public scalaz.Kleisli bitraverseKTrampoline(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #178                // InterfaceMethod scalaz/Bitraverse.bitraverseKTrampoline$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       9: areturn

  public scala.Tuple2 bifoldLShape(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #184                // InterfaceMethod scalaz/Bitraverse.bifoldLShape$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public java.lang.Object bisequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #192                // InterfaceMethod scalaz/Bitraverse.bisequence$:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object bifoldLeft(java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #198                // InterfaceMethod scalaz/Bitraverse.bifoldLeft$:(Lscalaz/Bitraverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <G, H> scalaz.Bitraverse<?> embed(scalaz.Traverse<G>, scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #206                // InterfaceMethod scalaz/Bitraverse.embed$:(Lscalaz/Bitraverse;Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       6: areturn

  public <G> scalaz.Bitraverse<?> embedLeft(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // InterfaceMethod scalaz/Bitraverse.embedLeft$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <H> scalaz.Bitraverse<?> embedRight(scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // InterfaceMethod scalaz/Bitraverse.embedRight$:(Lscalaz/Bitraverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Bifoldable<?> compose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // InterfaceMethod scalaz/Bifoldable.compose$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> product(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #225                // InterfaceMethod scalaz/Bifoldable.product$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public scala.Option bifoldMap1(java.lang.Object, scala.Function1, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #232                // InterfaceMethod scalaz/Bifoldable.bifoldMap1$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       9: areturn

  public final java.lang.Object bifoldR(java.lang.Object, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #239                // InterfaceMethod scalaz/Bifoldable.bifoldR$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object bifoldL(java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #245                // InterfaceMethod scalaz/Bifoldable.bifoldL$:(Lscalaz/Bifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <X> scalaz.Foldable<?> leftFoldable();
    Code:
       0: aload_0
       1: invokestatic  #252                // InterfaceMethod scalaz/Bifoldable.leftFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <X> scalaz.Foldable<?> rightFoldable();
    Code:
       0: aload_0
       1: invokestatic  #256                // InterfaceMethod scalaz/Bifoldable.rightFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public scalaz.Foldable<?> uFoldable();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod scalaz/Bifoldable.uFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <G, H> scalaz.Bifoldable<?> embed(scalaz.Foldable<G>, scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #266                // InterfaceMethod scalaz/Bifoldable.embed$:(Lscalaz/Bifoldable;Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       6: areturn

  public <G> scalaz.Bifoldable<?> embedLeft(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod scalaz/Bifoldable.embedLeft$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public <H> scalaz.Bifoldable<?> embedRight(scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // InterfaceMethod scalaz/Bifoldable.embedRight$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public scalaz.Bifoldable<?>.BifoldableLaw bifoldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #282                // InterfaceMethod scalaz/Bifoldable.bifoldableLaw$:(Lscalaz/Bifoldable;)Lscalaz/Bifoldable$BifoldableLaw;
       4: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #299                // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object leftMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #305                // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #309                // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #314                // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public java.lang.Object rightMap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #318                // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object umap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #323                // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #328                // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #334                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #337                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public java.lang.Object widen(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BitraverseSyntax<?> bitraverseSyntax();
    Code:
       0: aload_0
       1: getfield      #347                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       4: areturn

  public void scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq(scalaz.syntax.BitraverseSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #347                // Field bitraverseSyntax:Lscalaz/syntax/BitraverseSyntax;
       5: return

  public scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax();
    Code:
       0: aload_0
       1: getfield      #355                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       4: areturn

  public void scalaz$Bifoldable$_setter_$bifoldableSyntax_$eq(scalaz.syntax.BifoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #355                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       5: return

  public scalaz.syntax.BifunctorSyntax<?> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #362                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #362                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Traverse<F> F();
    Code:
       0: aload_0
       1: getfield      #368                // Field F0$15:Lscalaz/Traverse;
       4: areturn

  public final java.lang.Object bimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #35                 // class scalaz/LazyEitherT
       4: astore        4
       6: aload         4
       8: aload_3
       9: invokedynamic #392,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload_0
      15: invokeinterface #394,  1          // InterfaceMethod scalaz/LazyEitherTBifunctor.F:()Lscalaz/Functor;
      20: astore        6
      22: astore        5
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: getstatic     #400                // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
      32: aload         6
      34: aload         4
      36: invokevirtual #404                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      39: aload         5
      41: invokedynamic #412,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      46: invokeinterface #417,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      51: invokevirtual #421                // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      54: invokevirtual #425                // Method scalaz/LazyEitherT.left:()Lscalaz/LazyEitherT$LeftProjectionT;
      57: aload_2
      58: invokedynamic #430,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
      63: aload_0
      64: invokeinterface #394,  1          // InterfaceMethod scalaz/LazyEitherTBifunctor.F:()Lscalaz/Functor;
      69: astore        9
      71: astore        8
      73: dup
      74: ifnonnull     79
      77: aconst_null
      78: athrow
      79: astore        7
      81: new           #35                 // class scalaz/LazyEitherT
      84: dup
      85: aload         9
      87: aload         7
      89: invokevirtual #433                // Method scalaz/LazyEitherT$LeftProjectionT.lazyEitherT:()Lscalaz/LazyEitherT;
      92: invokevirtual #404                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      95: aload         8
      97: invokedynamic #438,  0            // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function1;
     102: invokeinterface #417,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     107: invokespecial #442                // Method scalaz/LazyEitherT."<init>":(Ljava/lang/Object;)V
     110: areturn

  public final java.lang.Object bifoldMap(java.lang.Object, scala.Function1, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #35                 // class scalaz/LazyEitherT
       4: astore        5
       6: aload_0
       7: invokeinterface #452,  1          // InterfaceMethod scalaz/LazyEitherTBifoldable.F:()Lscalaz/Foldable;
      12: aload         5
      14: invokevirtual #404                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      17: aload_2
      18: aload_3
      19: aload         4
      21: invokedynamic #462,  0            // InvokeDynamic #4:apply:(Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
      26: aload         4
      28: invokeinterface #468,  4          // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      33: areturn

  public java.lang.Object bitraverseImpl(java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #35                 // class scalaz/LazyEitherT
       4: astore        5
       6: getstatic     #475                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload         4
      16: aload_0
      17: invokeinterface #477,  1          // InterfaceMethod scalaz/LazyEitherTBitraverse.F:()Lscalaz/Traverse;
      22: aload         5
      24: invokevirtual #404                // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      27: getstatic     #482                // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
      30: getstatic     #487                // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
      33: invokevirtual #491                // Method scalaz/LazyEither$.lazyEitherBitraverse:()Lscalaz/Bitraverse;
      36: astore        6
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: aload         6
      45: aload_2
      46: aload_3
      47: aload         4
      49: invokeinterface #493,  4          // InterfaceMethod scalaz/Bitraverse.bitraverseF:(Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      54: aload         4
      56: invokeinterface #499,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      61: invokedynamic #507,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      66: invokeinterface #510,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      71: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #512                // Method F:()Lscalaz/Traverse;
       4: areturn

  public scalaz.Foldable F();
    Code:
       0: aload_0
       1: invokevirtual #512                // Method F:()Lscalaz/Traverse;
       4: areturn

  public scalaz.LazyEitherTInstances$$anon$17(scalaz.LazyEitherTInstances, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #368                // Field F0$15:Lscalaz/Traverse;
       5: aload_0
       6: invokespecial #517                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #521                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      13: aload_0
      14: invokestatic  #524                // InterfaceMethod scalaz/Bifoldable.$init$:(Lscalaz/Bifoldable;)V
      17: aload_0
      18: invokestatic  #527                // InterfaceMethod scalaz/Bitraverse.$init$:(Lscalaz/Bitraverse;)V
      21: aload_0
      22: invokestatic  #530                // InterfaceMethod scalaz/LazyEitherTBifunctor.$init$:(Lscalaz/LazyEitherTBifunctor;)V
      25: aload_0
      26: invokestatic  #533                // InterfaceMethod scalaz/Bifoldable$FromBifoldMap.$init$:(Lscalaz/Bifoldable$FromBifoldMap;)V
      29: aload_0
      30: invokestatic  #536                // InterfaceMethod scalaz/LazyEitherTBifoldable.$init$:(Lscalaz/LazyEitherTBifoldable;)V
      33: aload_0
      34: invokestatic  #539                // InterfaceMethod scalaz/LazyEitherTBitraverse.$init$:(Lscalaz/LazyEitherTBitraverse;)V
      37: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #552,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
