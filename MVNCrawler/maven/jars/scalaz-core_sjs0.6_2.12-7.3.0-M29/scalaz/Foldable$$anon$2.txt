Compiled from "Foldable.scala"
public final class scalaz.Foldable$$anon$2 implements scalaz.CompositionFoldableBifoldable<F, G> {
  private final scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax;

  private final scalaz.Foldable $outer;

  private final scalaz.Bifoldable evidence$1$1;

  public <A, B, M> M bifoldMap(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #36                 // InterfaceMethod scalaz/CompositionFoldableBifoldable.bifoldMap$:(Lscalaz/CompositionFoldableBifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public <A, B, C> C bifoldRight(F, scala.Function0<C>, scala.Function2<A, scala.Function0<C>, C>, scala.Function2<B, scala.Function0<C>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #49                 // InterfaceMethod scalaz/CompositionFoldableBifoldable.bifoldRight$:(Lscalaz/CompositionFoldableBifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <A, B, C> C bifoldLeft(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #58                 // InterfaceMethod scalaz/CompositionFoldableBifoldable.bifoldLeft$:(Lscalaz/CompositionFoldableBifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <G> scalaz.Bifoldable<?> compose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // InterfaceMethod scalaz/Bifoldable.compose$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> product(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/Bifoldable.product$:(Lscalaz/Bifoldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <A, B, M> scala.Option<M> bifoldMap1(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Semigroup<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #77                 // InterfaceMethod scalaz/Bifoldable.bifoldMap1$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       9: areturn

  public final <A, B, C> C bifoldR(F, scala.Function0<C>, scala.Function1<A, scala.Function1<scala.Function0<C>, C>>, scala.Function1<B, scala.Function1<scala.Function0<C>, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #85                 // InterfaceMethod scalaz/Bifoldable.bifoldR$:(Lscalaz/Bifoldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public final <A, B, C> C bifoldL(F, C, scala.Function1<C, scala.Function1<A, C>>, scala.Function1<C, scala.Function1<B, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #92                 // InterfaceMethod scalaz/Bifoldable.bifoldL$:(Lscalaz/Bifoldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public <X> scalaz.Foldable<?> leftFoldable();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/Bifoldable.leftFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <X> scalaz.Foldable<?> rightFoldable();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scalaz/Bifoldable.rightFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public scalaz.Foldable<?> uFoldable();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Bifoldable.uFoldable$:(Lscalaz/Bifoldable;)Lscalaz/Foldable;
       4: areturn

  public <G, H> scalaz.Bifoldable<?> embed(scalaz.Foldable<G>, scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Bifoldable.embed$:(Lscalaz/Bifoldable;Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       6: areturn

  public <G> scalaz.Bifoldable<?> embedLeft(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // InterfaceMethod scalaz/Bifoldable.embedLeft$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public <H> scalaz.Bifoldable<?> embedRight(scalaz.Foldable<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod scalaz/Bifoldable.embedRight$:(Lscalaz/Bifoldable;Lscalaz/Foldable;)Lscalaz/Bifoldable;
       5: areturn

  public scalaz.Bifoldable<?>.BifoldableLaw bifoldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Bifoldable.bifoldableLaw$:(Lscalaz/Bifoldable;)Lscalaz/Bifoldable$BifoldableLaw;
       4: areturn

  public scalaz.syntax.BifoldableSyntax<?> bifoldableSyntax();
    Code:
       0: aload_0
       1: getfield      #139                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       4: areturn

  public void scalaz$Bifoldable$_setter_$bifoldableSyntax_$eq(scalaz.syntax.BifoldableSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field bifoldableSyntax:Lscalaz/syntax/BifoldableSyntax;
       5: return

  public scalaz.Foldable<F> F();
    Code:
       0: aload_0
       1: getfield      #146                // Field $outer:Lscalaz/Foldable;
       4: areturn

  public scalaz.Bifoldable<G> G();
    Code:
       0: getstatic     #155                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #157                // Field evidence$1$1:Lscalaz/Bifoldable;
       7: invokevirtual #161                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class scalaz/Bifoldable
      13: areturn

  public scalaz.Foldable$$anon$2(scalaz.Foldable<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #146                // Field $outer:Lscalaz/Foldable;
      11: aload_0
      12: aload_2
      13: putfield      #157                // Field evidence$1$1:Lscalaz/Bifoldable;
      16: aload_0
      17: invokespecial #167                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #171                // InterfaceMethod scalaz/Bifoldable.$init$:(Lscalaz/Bifoldable;)V
      24: aload_0
      25: invokestatic  #174                // InterfaceMethod scalaz/CompositionFoldableBifoldable.$init$:(Lscalaz/CompositionFoldableBifoldable;)V
      28: return
}
