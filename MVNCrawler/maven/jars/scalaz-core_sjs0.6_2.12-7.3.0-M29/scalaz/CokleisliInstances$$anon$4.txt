Compiled from "Cokleisli.scala"
public final class scalaz.CokleisliInstances$$anon$4 implements scalaz.CokleisliArrow<F> {
  private final scalaz.syntax.ProChoiceSyntax<?> proChoiceSyntax;

  private final scalaz.syntax.ArrowSyntax<?> arrowSyntax;

  private final scalaz.syntax.CategorySyntax<?> categorySyntax;

  private final scalaz.syntax.StrongSyntax<?> strongSyntax;

  private final scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax;

  private final scalaz.syntax.SplitSyntax<?> splitSyntax;

  private final scalaz.syntax.ComposeSyntax<?> composeSyntax;

  private final scalaz.Comonad F0$2;

  public <A, B, C> scalaz.Cokleisli<F, scalaz.$bslash$div<A, C>, scalaz.$bslash$div<B, C>> left(scalaz.Cokleisli<F, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod scalaz/CokleisliArrow.left$:(Lscalaz/CokleisliArrow;Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       5: areturn

  public <A, B, C> scalaz.Cokleisli<F, scalaz.$bslash$div<C, A>, scalaz.$bslash$div<C, B>> right(scalaz.Cokleisli<F, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // InterfaceMethod scalaz/CokleisliArrow.right$:(Lscalaz/CokleisliArrow;Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       5: areturn

  public <A, B> scalaz.Cokleisli<F, A, B> arr(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scalaz/CokleisliArrow.arr$:(Lscalaz/CokleisliArrow;Lscala/Function1;)Lscalaz/Cokleisli;
       5: areturn

  public <A> scalaz.Cokleisli<F, A, A> id();
    Code:
       0: aload_0
       1: invokestatic  #93                 // InterfaceMethod scalaz/CokleisliArrow.id$:(Lscalaz/CokleisliArrow;)Lscalaz/Cokleisli;
       4: areturn

  public <A, B, C> scalaz.Cokleisli<F, scala.Tuple2<A, C>, scala.Tuple2<B, C>> first(scalaz.Cokleisli<F, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // InterfaceMethod scalaz/CokleisliArrow.first$:(Lscalaz/CokleisliArrow;Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       5: areturn

  public <A, B, C> scalaz.Cokleisli<F, A, C> compose(scalaz.Cokleisli<F, B, C>, scalaz.Cokleisli<F, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/CokleisliCompose.compose$:(Lscalaz/CokleisliCompose;Lscalaz/Cokleisli;Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       6: areturn

  public <A, B, C, D> scalaz.Cokleisli<F, C, D> dimap(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #118                // InterfaceMethod scalaz/CokleisliProfunctor.dimap$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;Lscala/Function1;)Lscalaz/Cokleisli;
       7: areturn

  public final <A, B, C> scalaz.Cokleisli<F, C, B> mapfst(scalaz.Cokleisli<F, A, B>, scala.Function1<C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #125                // InterfaceMethod scalaz/CokleisliProfunctor.mapfst$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public final <A, B, C> scalaz.Cokleisli<F, A, C> mapsnd(scalaz.Cokleisli<F, A, B>, scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/CokleisliProfunctor.mapsnd$:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscalaz/Cokleisli;
       6: areturn

  public <C> scalaz.Applicative<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scalaz/Arrow.covariantInstance$:(Lscalaz/Arrow;)Lscalaz/Applicative;
       4: areturn

  public final java.lang.Object $less$less$less(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // InterfaceMethod scalaz/Arrow.$less$less$less$:(Lscalaz/Arrow;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object $greater$greater$greater(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/Arrow.$greater$greater$greater$:(Lscalaz/Arrow;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object swap();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scalaz/Arrow.swap$:(Lscalaz/Arrow;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object second(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // InterfaceMethod scalaz/Arrow.second$:(Lscalaz/Arrow;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object splitA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #168                // InterfaceMethod scalaz/Arrow.splitA$:(Lscalaz/Arrow;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object split(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #172                // InterfaceMethod scalaz/Arrow.split$:(Lscalaz/Arrow;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object product(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod scalaz/Arrow.product$:(Lscalaz/Arrow;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object combine(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #181                // InterfaceMethod scalaz/Arrow.combine$:(Lscalaz/Arrow;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.PlusEmpty<?> empty();
    Code:
       0: aload_0
       1: invokestatic  #188                // InterfaceMethod scalaz/Category.empty$:(Lscalaz/Category;)Lscalaz/PlusEmpty;
       4: areturn

  public <A> scalaz.Monoid<scalaz.Cokleisli<F, A, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #195                // InterfaceMethod scalaz/Category.monoid$:(Lscalaz/Category;)Lscalaz/Monoid;
       4: areturn

  public scalaz.Category<?>.CategoryLaw categoryLaw();
    Code:
       0: aload_0
       1: invokestatic  #202                // InterfaceMethod scalaz/Category.categoryLaw$:(Lscalaz/Category;)Lscalaz/Category$CategoryLaw;
       4: areturn

  public scalaz.Strong<?>.StrongLaws strongLaw();
    Code:
       0: aload_0
       1: invokestatic  #209                // InterfaceMethod scalaz/Strong.strongLaw$:(Lscalaz/Strong;)Lscalaz/Strong$StrongLaws;
       4: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #216                // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<?>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #230                // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.Plus<?> plus();
    Code:
       0: aload_0
       1: invokestatic  #237                // InterfaceMethod scalaz/Compose.plus$:(Lscalaz/Compose;)Lscalaz/Plus;
       4: areturn

  public <A> scalaz.Semigroup<scalaz.Cokleisli<F, A, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #244                // InterfaceMethod scalaz/Compose.semigroup$:(Lscalaz/Compose;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Compose<?>.ComposeLaw composeLaw();
    Code:
       0: aload_0
       1: invokestatic  #251                // InterfaceMethod scalaz/Compose.composeLaw$:(Lscalaz/Compose;)Lscalaz/Compose$ComposeLaw;
       4: areturn

  public scalaz.syntax.ProChoiceSyntax<?> proChoiceSyntax();
    Code:
       0: aload_0
       1: getfield      #255                // Field proChoiceSyntax:Lscalaz/syntax/ProChoiceSyntax;
       4: areturn

  public void scalaz$ProChoice$_setter_$proChoiceSyntax_$eq(scalaz.syntax.ProChoiceSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #255                // Field proChoiceSyntax:Lscalaz/syntax/ProChoiceSyntax;
       5: return

  public scalaz.syntax.ArrowSyntax<?> arrowSyntax();
    Code:
       0: aload_0
       1: getfield      #263                // Field arrowSyntax:Lscalaz/syntax/ArrowSyntax;
       4: areturn

  public void scalaz$Arrow$_setter_$arrowSyntax_$eq(scalaz.syntax.ArrowSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #263                // Field arrowSyntax:Lscalaz/syntax/ArrowSyntax;
       5: return

  public scalaz.syntax.CategorySyntax<?> categorySyntax();
    Code:
       0: aload_0
       1: getfield      #270                // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       4: areturn

  public void scalaz$Category$_setter_$categorySyntax_$eq(scalaz.syntax.CategorySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #270                // Field categorySyntax:Lscalaz/syntax/CategorySyntax;
       5: return

  public scalaz.syntax.StrongSyntax<?> strongSyntax();
    Code:
       0: aload_0
       1: getfield      #277                // Field strongSyntax:Lscalaz/syntax/StrongSyntax;
       4: areturn

  public void scalaz$Strong$_setter_$strongSyntax_$eq(scalaz.syntax.StrongSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #277                // Field strongSyntax:Lscalaz/syntax/StrongSyntax;
       5: return

  public scalaz.syntax.ProfunctorSyntax<?> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #284                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #284                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public scalaz.syntax.SplitSyntax<?> splitSyntax();
    Code:
       0: aload_0
       1: getfield      #291                // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       4: areturn

  public void scalaz$Split$_setter_$splitSyntax_$eq(scalaz.syntax.SplitSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #291                // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       5: return

  public scalaz.syntax.ComposeSyntax<?> composeSyntax();
    Code:
       0: aload_0
       1: getfield      #298                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       4: areturn

  public void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #298                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       5: return

  public scalaz.Comonad<F> F();
    Code:
       0: aload_0
       1: getfield      #306                // Field F0$2:Lscalaz/Comonad;
       4: areturn

  public scalaz.Functor covariantInstance();
    Code:
       0: aload_0
       1: invokevirtual #309                // Method covariantInstance:()Lscalaz/Applicative;
       4: areturn

  public final java.lang.Object mapsnd(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #312                // class scalaz/Cokleisli
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: new           #312                // class scalaz/Cokleisli
      14: dup
      15: aload_2
      16: aload_3
      17: invokevirtual #316                // Method scalaz/Cokleisli.run:()Lscala/Function1;
      20: invokeinterface #321,  2          // InterfaceMethod scala/Function1.compose:(Lscala/Function1;)Lscala/Function1;
      25: invokespecial #325                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      28: areturn

  public final java.lang.Object mapfst(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #312                // class scalaz/Cokleisli
       4: astore_3
       5: new           #312                // class scalaz/Cokleisli
       8: dup
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokedynamic #347,  0            // InvokeDynamic #0:apply:(Lscalaz/CokleisliProfunctor;Lscalaz/Cokleisli;Lscala/Function1;)Lscala/Function1;
      17: invokespecial #325                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      20: areturn

  public java.lang.Object dimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #312                // class scalaz/Cokleisli
       4: astore        4
       6: aload         4
       8: aload_0
       9: invokeinterface #351,  1          // InterfaceMethod scalaz/CokleisliProfunctor.F:()Lscalaz/Functor;
      14: astore        5
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: new           #312                // class scalaz/Cokleisli
      24: dup
      25: aload         4
      27: aload_3
      28: aload         5
      30: aload_2
      31: invokedynamic #359,  0            // InvokeDynamic #1:apply:(Lscalaz/Cokleisli;Lscala/Function1;Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
      36: invokespecial #325                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      39: areturn

  public java.lang.Object compose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #312                // class scalaz/Cokleisli
       5: aload_2
       6: checkcast     #312                // class scalaz/Cokleisli
       9: invokevirtual #366                // Method compose:(Lscalaz/Cokleisli;Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
      12: areturn

  public java.lang.Object first(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #312                // class scalaz/Cokleisli
       5: invokevirtual #368                // Method first:(Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       8: areturn

  public java.lang.Object id();
    Code:
       0: aload_0
       1: invokevirtual #370                // Method id:()Lscalaz/Cokleisli;
       4: areturn

  public java.lang.Object arr(scala.Function1);
    Code:
       0: new           #312                // class scalaz/Cokleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #379,  0            // InvokeDynamic #2:apply:(Lscalaz/CokleisliArrow;Lscala/Function1;)Lscala/Function1;
      11: invokespecial #325                // Method scalaz/Cokleisli."<init>":(Lscala/Function1;)V
      14: areturn

  public java.lang.Object right(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #312                // class scalaz/Cokleisli
       5: invokevirtual #381                // Method right:(Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       8: areturn

  public java.lang.Object left(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #312                // class scalaz/Cokleisli
       5: invokevirtual #383                // Method left:(Lscalaz/Cokleisli;)Lscalaz/Cokleisli;
       8: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #385                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.Cobind F();
    Code:
       0: aload_0
       1: invokevirtual #385                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.CokleisliInstances$$anon$4(scalaz.CokleisliInstances, scalaz.Comonad);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #306                // Field F0$2:Lscalaz/Comonad;
       5: aload_0
       6: invokespecial #391                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #395                // InterfaceMethod scalaz/Compose.$init$:(Lscalaz/Compose;)V
      13: aload_0
      14: invokestatic  #400                // InterfaceMethod scalaz/Split.$init$:(Lscalaz/Split;)V
      17: aload_0
      18: invokestatic  #403                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      21: aload_0
      22: invokestatic  #406                // InterfaceMethod scalaz/Strong.$init$:(Lscalaz/Strong;)V
      25: aload_0
      26: invokestatic  #409                // InterfaceMethod scalaz/Category.$init$:(Lscalaz/Category;)V
      29: aload_0
      30: invokestatic  #412                // InterfaceMethod scalaz/Arrow.$init$:(Lscalaz/Arrow;)V
      33: aload_0
      34: invokestatic  #417                // InterfaceMethod scalaz/ProChoice.$init$:(Lscalaz/ProChoice;)V
      37: aload_0
      38: invokestatic  #420                // InterfaceMethod scalaz/CokleisliProfunctor.$init$:(Lscalaz/CokleisliProfunctor;)V
      41: aload_0
      42: invokestatic  #423                // InterfaceMethod scalaz/CokleisliCompose.$init$:(Lscalaz/CokleisliCompose;)V
      45: aload_0
      46: invokestatic  #426                // InterfaceMethod scalaz/CokleisliArrow.$init$:(Lscalaz/CokleisliArrow;)V
      49: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #439,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
