Compiled from "Coproduct.scala"
public final class scalaz.CoproductInstances2$$anon$5 implements scalaz.CoproductContravariant<F, G> {
  private final scalaz.syntax.ContravariantSyntax<?> contravariantSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Contravariant F0$4;

  private final scalaz.Contravariant G0$4;

  public <A, B> scalaz.Coproduct<F, G, B> contramap(scalaz.Coproduct<F, G, A>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // InterfaceMethod scalaz/CoproductContravariant.contramap$:(Lscalaz/CoproductContravariant;Lscalaz/Coproduct;Lscala/Function1;)Lscalaz/Coproduct;
       6: areturn

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #63                 // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #72                 // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #94                 // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant<?>.ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #117                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ContravariantSyntax<?> contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #129                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #137                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #137                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Contravariant<F> F();
    Code:
       0: aload_0
       1: getfield      #145                // Field F0$4:Lscalaz/Contravariant;
       4: areturn

  public scalaz.Contravariant<G> G();
    Code:
       0: aload_0
       1: getfield      #149                // Field G0$4:Lscalaz/Contravariant;
       4: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #153                // class scalaz/Coproduct
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #155,  1          // InterfaceMethod scalaz/CoproductContravariant.F:()Lscalaz/Contravariant;
      12: aload_0
      13: invokeinterface #157,  1          // InterfaceMethod scalaz/CoproductContravariant.G:()Lscalaz/Contravariant;
      18: astore        5
      20: astore        4
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: new           #153                // class scalaz/Coproduct
      30: dup
      31: aload_3
      32: invokevirtual #161                // Method scalaz/Coproduct.run:()Lscalaz/$bslash$div;
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: astore        6
      43: aload         6
      45: instanceof    #163                // class scalaz/$minus$bslash$div
      48: ifeq          80
      51: aload         6
      53: checkcast     #163                // class scalaz/$minus$bslash$div
      56: invokevirtual #166                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      59: astore        8
      61: getstatic     #172                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      64: aload         4
      66: aload_2
      67: aload         8
      69: invokestatic  #176                // Method scalaz/Coproduct.$anonfun$contramap$1:(Lscalaz/Contravariant;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
      72: invokevirtual #180                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      75: astore        7
      77: goto          127
      80: aload         6
      82: instanceof    #182                // class scalaz/$bslash$div$minus
      85: ifeq          117
      88: aload         6
      90: checkcast     #182                // class scalaz/$bslash$div$minus
      93: invokevirtual #184                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      96: astore        9
      98: getstatic     #189                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     101: aload         5
     103: aload_2
     104: aload         9
     106: invokestatic  #192                // Method scalaz/Coproduct.$anonfun$contramap$2:(Lscalaz/Contravariant;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
     109: invokevirtual #193                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     112: astore        7
     114: goto          127
     117: new           #195                // class scala/MatchError
     120: dup
     121: aload         6
     123: invokespecial #199                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     126: athrow
     127: aload         7
     129: invokespecial #202                // Method scalaz/Coproduct."<init>":(Lscalaz/$bslash$div;)V
     132: areturn

  public scalaz.CoproductInstances2$$anon$5(scalaz.CoproductInstances2, scalaz.Contravariant, scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #145                // Field F0$4:Lscalaz/Contravariant;
       5: aload_0
       6: aload_3
       7: putfield      #149                // Field G0$4:Lscalaz/Contravariant;
      10: aload_0
      11: invokespecial #218                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #222                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      18: aload_0
      19: invokestatic  #225                // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      22: aload_0
      23: invokestatic  #228                // InterfaceMethod scalaz/CoproductContravariant.$init$:(Lscalaz/CoproductContravariant;)V
      26: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #243,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
