Compiled from "Name.scala"
public abstract class scalaz.Name<A> {
  public static scalaz.IsCovariant<scalaz.Name> covariant();
    Code:
       0: getstatic     #20                 // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: invokevirtual #22                 // Method scalaz/Name$.covariant:()Lscalaz/IsCovariant;
       6: areturn

  public static <A> scalaz.Equal<scalaz.Name<A>> nameEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: aload_0
       4: invokevirtual #28                 // Method scalaz/Name$.nameEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static scalaz.Monad<scalaz.Name> name();
    Code:
       0: getstatic     #20                 // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: invokevirtual #33                 // Method scalaz/Name$.name:()Lscalaz/Monad;
       6: areturn

  public static <A> scala.Option<A> unapply(scalaz.Name<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: aload_0
       4: invokevirtual #39                 // Method scalaz/Name$.unapply:(Lscalaz/Name;)Lscala/Option;
       7: areturn

  public static <A> scalaz.Name<A> apply(scala.Function0<A>);
    Code:
       0: getstatic     #20                 // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #11                 // class scalaz/Name$$anon$1
      11: dup
      12: aload_0
      13: invokespecial #47                 // Method scalaz/Name$$anon$1."<init>":(Lscala/Function0;)V
      16: areturn

  public abstract A value();

  public scalaz.Name();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: return
}
