Compiled from "Tree.scala"
public final class scalaz.TreeInstances$$anon$1 implements scalaz.Traverse1<scalaz.Tree>, scalaz.Monad<scalaz.Tree>, scalaz.Comonad<scalaz.Tree>, scalaz.Align<scalaz.Tree>, scalaz.Zip<scalaz.Tree> {
  private final scalaz.syntax.ZipSyntax<scalaz.Tree> zipSyntax;

  private final scalaz.syntax.AlignSyntax<scalaz.Tree> alignSyntax;

  private final scalaz.syntax.ComonadSyntax<scalaz.Tree> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<scalaz.Tree> cobindSyntax;

  private final scalaz.syntax.MonadSyntax<scalaz.Tree> monadSyntax;

  private final scalaz.syntax.BindSyntax<scalaz.Tree> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.Tree> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.Tree> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.Tree> applySyntax;

  private final scalaz.syntax.Traverse1Syntax<scalaz.Tree> traverse1Syntax;

  private final scalaz.syntax.Foldable1Syntax<scalaz.Tree> foldable1Syntax;

  private final scalaz.syntax.TraverseSyntax<scalaz.Tree> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.Tree> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.Tree> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.Tree> invariantFunctorSyntax;

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.Tree>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #184                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #205                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #214                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #221                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.Tree> ap(scalaz.Functor<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #229                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.Tree>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #236                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #249                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #257                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #264                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #273                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #278                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #282                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #286                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #290                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #294                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #298                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.Tree>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #312                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.Tree>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #319                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #325                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // InterfaceMethod scalaz/Cobind.cojoin$:(Lscalaz/Cobind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Cobind<scalaz.Tree>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #338                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #346                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #353                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #358                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #362                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #367                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #371                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #376                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.Tree>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #384                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #393                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #399                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #408                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #413                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #418                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.Tree>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #426                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #432                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #438                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #447                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #454                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #459                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #466                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #472                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #479                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #487                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #495                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #500                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #507                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #512                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #519                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #524                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #528                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #531                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.Tree> flip();
    Code:
       0: aload_0
       1: invokestatic  #536                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #545                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.Tree>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #552                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #559                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #565                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #571                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #577                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #583                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #589                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #596                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #601                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scalaz.Tree<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Tree<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #610                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #616                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #619                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.Tree<A>, scalaz.Tree<B>> apF(scala.Function0<scalaz.Tree<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #626                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #632                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #639                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #646                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #653                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #660                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #667                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #674                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #680                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #686                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #692                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #699                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #706                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #713                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #721                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #729                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #737                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #745                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #752                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #758                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #764                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #770                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #775                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #781                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #787                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #793                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #799                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #806                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #813                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #820                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #827                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #834                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<H>, scalaz.Tree<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #841                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<H>, scalaz.Tree<I>, scalaz.Tree<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #848                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<H>, scalaz.Tree<I>, scalaz.Tree<J>, scalaz.Tree<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<H>, scalaz.Tree<I>, scalaz.Tree<J>, scalaz.Tree<K>, scalaz.Tree<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #862                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>, scalaz.Tree<D>, scalaz.Tree<E>, scalaz.Tree<FF>, scalaz.Tree<G>, scalaz.Tree<H>, scalaz.Tree<I>, scalaz.Tree<J>, scalaz.Tree<K>, scalaz.Tree<L>, scalaz.Tree<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #869                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #873                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #877                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #882                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.Tree<A>, scalaz.Tree<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #890                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.Tree>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #897                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #902                // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #909                // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #911                // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #918                // InterfaceMethod scalaz/Traverse1.traverseImpl$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #924                // InterfaceMethod scalaz/Traverse1.foldMap1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #928                // InterfaceMethod scalaz/Traverse1.traverse1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #934                // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #941                // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.Tree>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #954                // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #959                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #962                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #968                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #974                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #978                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #983                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #989                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #995                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #999                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1003               // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1007               // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1015               // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1021               // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1028               // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1033               // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1038               // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1043               // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1048               // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1055               // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1062               // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1067               // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1072               // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1077               // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1082               // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1089               // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1095               // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1100               // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1104               // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1110               // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1117               // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1121               // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1126               // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1133               // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1139               // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1145               // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1151               // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1156               // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1163               // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1169               // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1173               // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.Tree>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #1180               // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1185               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1192               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1195               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1198               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.Tree>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1205               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.Tree>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1212               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1215               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1220               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1226               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1232               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1239               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1245               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1251               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1255               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1261               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1267               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1274               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1280               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1285               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1287               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1293               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1297               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1301               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1306               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1310               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1314               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1318               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.Tree>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1325               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1330               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1335               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1338               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1341               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1347               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1353               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1360               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1366               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1372               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1377               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1382               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1387               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1392               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1397               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1403               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1409               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1415               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1421               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1425               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1431               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1435               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1441               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1446               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1450               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1456               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1460               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1467               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1474               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1480               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1486               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1492               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1498               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1504               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1510               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1516               // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1520               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1524               // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1528               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1534               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1539               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1544               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1548               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1552               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1556               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1560               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1564               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1570               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1577               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1581               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1585               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1590               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1597               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1604               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1610               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1616               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1622               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1626               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1632               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1638               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1643               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1649               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.Tree>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1657               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1663               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1668               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Tree<A>, scalaz.Tree<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1675               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1680               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1684               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1688               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1693               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1697               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1701               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1707               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1713               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1720               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1726               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1729               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1736               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.Tree>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1744               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1751               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1759               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Tree>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1767               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ZipSyntax<scalaz.Tree> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1771               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1771               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scalaz.Tree> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1779               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1779               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.ComonadSyntax<scalaz.Tree> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #1786               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1786               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.Tree> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1793               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1793               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.Tree> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1800               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1800               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.Tree> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1807               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1807               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.Tree> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1814               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1814               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Tree> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1821               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1821               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.Tree> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1828               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1828               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.Traverse1Syntax<scalaz.Tree> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #1835               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1835               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.Tree> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #1842               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1842               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.Tree> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1849               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1849               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.Tree> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1856               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1856               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.Tree> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1863               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1863               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Tree> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1870               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Tree>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1870               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scalaz.Tree<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1880               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      11: invokedynamic #1905,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      16: astore_2
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #127                // class scalaz/Tree$Node$$anon$4
      25: dup
      26: aload_1
      27: aload_2
      28: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      31: areturn

  public <A, B> scalaz.Tree<B> cobind(scalaz.Tree<A>, scala.Function1<scalaz.Tree<A>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1920               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
       9: aload_2
      10: invokedynamic #1930,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      15: astore_3
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload_1
      22: astore        10
      24: aload_2
      25: aload         10
      27: invokestatic  #1925               // Method scalaz/Tree.$anonfun$cobind$1:(Lscala/Function1;Lscalaz/Tree;)Lscala/Tuple2;
      30: astore        4
      32: aload         4
      34: ifnull        97
      37: aload         4
      39: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      42: astore        5
      44: aload         4
      46: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #1912               // class scala/Function0
      52: astore        6
      54: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      57: aload         5
      59: invokedynamic #1946,  0           // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
      64: aload         6
      66: aload_3
      67: invokedynamic #1954,  0           // InvokeDynamic #3:apply:(Lscala/Function0;Lscala/Function1;)Lscala/Function0;
      72: astore        8
      74: astore        7
      76: ifnonnull     81
      79: aconst_null
      80: athrow
      81: new           #127                // class scalaz/Tree$Node$$anon$4
      84: dup
      85: aload         7
      87: aload         8
      89: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      92: astore        9
      94: goto          107
      97: new           #1956               // class scala/MatchError
     100: dup
     101: aload         4
     103: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     106: athrow
     107: aload         9
     109: areturn

  public <A> A copoint(scalaz.Tree<A>);
    Code:
       0: aload_1
       1: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
       4: areturn

  public <A, B> scalaz.Tree<B> map(scalaz.Tree<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
       9: aload_1
      10: aload_2
      11: invokedynamic #1983,  0           // InvokeDynamic #4:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      16: aload_1
      17: aload_2
      18: invokedynamic #1989,  0           // InvokeDynamic #5:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      23: astore        4
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: new           #127                // class scalaz/Tree$Node$$anon$4
      34: dup
      35: aload_3
      36: aload         4
      38: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      41: areturn

  public <A, B> scalaz.Tree<B> bind(scalaz.Tree<A>, scala.Function1<A, scalaz.Tree<B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: aload_1
       8: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      11: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #121                // class scalaz/Tree
      19: astore_3
      20: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      23: aload_3
      24: invokedynamic #2002,  0           // InvokeDynamic #6:apply:(Lscalaz/Tree;)Lscala/Function0;
      29: aload_1
      30: aload_3
      31: aload_2
      32: invokedynamic #2010,  0           // InvokeDynamic #7:apply:(Lscalaz/Tree;Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      37: astore        5
      39: astore        4
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: new           #127                // class scalaz/Tree$Node$$anon$4
      49: dup
      50: aload         4
      52: aload         5
      54: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      57: areturn

  public <G, A, B> G traverse1Impl(scalaz.Tree<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #2021               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_1
      15: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      18: astore        5
      20: getstatic     #2027               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      23: aload         5
      25: invokevirtual #2030               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          57
      31: aload_3
      32: aload_2
      33: aload_1
      34: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      37: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokedynamic #2039,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
      47: invokeinterface #2041,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: astore        4
      54: goto          151
      57: getstatic     #2044               // Field scala/collection/immutable/Stream$$hash$colon$colon$.MODULE$:Lscala/collection/immutable/Stream$$hash$colon$colon$;
      60: aload         5
      62: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      65: astore        6
      67: aload         6
      69: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      72: ifne          141
      75: aload         6
      77: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      80: checkcast     #1932               // class scala/Tuple2
      83: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      86: checkcast     #121                // class scalaz/Tree
      89: astore        7
      91: aload         6
      93: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      96: checkcast     #1932               // class scala/Tuple2
      99: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
     102: checkcast     #32                 // class scala/collection/immutable/Stream
     105: astore        8
     107: aload_3
     108: aload_1
     109: aload_2
     110: invokedynamic #2062,  0           // InvokeDynamic #9:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
     115: aload         7
     117: aload         8
     119: aload_2
     120: aload_3
     121: invokedynamic #2070,  0           // InvokeDynamic #10:apply:(Lscalaz/Tree;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     126: invokedynamic #2079,  0           // InvokeDynamic #11:apply:()Lscala/Function2;
     131: invokeinterface #2081,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     136: astore        4
     138: goto          151
     141: new           #1956               // class scala/MatchError
     144: dup
     145: aload         5
     147: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     150: athrow
     151: aload         4
     153: areturn

  public <A, B> B foldRight(scalaz.Tree<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #2092               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       9: getstatic     #2097               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      12: invokevirtual #2101               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      15: astore        4
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: aload_1
      25: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
      28: aload_2
      29: aload_3
      30: invokeinterface #2107,  4         // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      35: areturn

  public <A, B> B foldMapRight1(scalaz.Tree<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       4: invokevirtual #2112               // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
       7: astore        5
       9: getstatic     #2117               // Field scala/package$.MODULE$:Lscala/package$;
      12: invokevirtual #2121               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      15: aload         5
      17: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      20: astore        6
      22: aload         6
      24: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      27: ifne          79
      30: aload         6
      32: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      35: checkcast     #1932               // class scala/Tuple2
      38: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: astore        7
      43: aload         6
      45: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      48: checkcast     #1932               // class scala/Tuple2
      51: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      54: checkcast     #32                 // class scala/collection/immutable/Stream
      57: aload_2
      58: aload         7
      60: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: aload_3
      66: invokedynamic #2127,  0           // InvokeDynamic #12:apply:(Lscala/Function2;)Lscala/Function2;
      71: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      74: astore        4
      76: goto          89
      79: new           #1956               // class scala/MatchError
      82: dup
      83: aload         5
      85: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      88: athrow
      89: aload         4
      91: areturn

  public <A, B> B foldLeft(scalaz.Tree<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       4: aload_2
       5: aload_3
       6: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public <A, B> B foldMapLeft1(scalaz.Tree<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       4: astore        5
       6: getstatic     #2117               // Field scala/package$.MODULE$:Lscala/package$;
       9: invokevirtual #2121               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      12: aload         5
      14: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      17: astore        6
      19: aload         6
      21: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      24: ifne          71
      27: aload         6
      29: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      32: checkcast     #1932               // class scala/Tuple2
      35: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      38: astore        7
      40: aload         6
      42: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      45: checkcast     #1932               // class scala/Tuple2
      48: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      51: checkcast     #32                 // class scala/collection/immutable/Stream
      54: aload_2
      55: aload         7
      57: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      62: aload_3
      63: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      66: astore        4
      68: goto          81
      71: new           #1956               // class scala/MatchError
      74: dup
      75: aload         5
      77: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow
      81: aload         4
      83: areturn

  public <A, B> B foldMap(scalaz.Tree<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #2145               // Field scalaz/Trampoline$.MODULE$:Lscalaz/Trampoline$;
       9: aload_1
      10: aload_2
      11: invokedynamic #2150,  0           // InvokeDynamic #13:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      16: astore        5
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: aload         5
      25: invokedynamic #2160,  0           // InvokeDynamic #14:apply:(Lscala/Function0;)Lscala/Function0;
      30: astore        6
      32: getstatic     #2165               // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      35: dup
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: getfield      #2169               // Field scalaz/Free$.scalaz$Free$$pointUnitCache:Lscalaz/Free;
      44: astore        7
      46: aload         7
      48: aload         6
      50: invokedynamic #2178,  0           // InvokeDynamic #15:apply:(Lscala/Function0;)Lscala/Function1;
      55: astore        8
      57: ifnonnull     62
      60: aconst_null
      61: athrow
      62: new           #85                 // class scalaz/Free$Gosub
      65: dup
      66: aload         7
      68: aload         8
      70: invokespecial #2181               // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      73: astore        9
      75: aload_1
      76: aload_2
      77: aload_3
      78: invokedynamic #2190,  0           // InvokeDynamic #16:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
      83: astore        4
      85: new           #85                 // class scalaz/Free$Gosub
      88: dup
      89: aload         9
      91: aload         4
      93: invokespecial #2181               // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      96: getstatic     #2195               // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      99: invokevirtual #2199               // Method scalaz/Leibniz$.refl:()Lscalaz/Leibniz;
     102: invokevirtual #2203               // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
     105: areturn

  public <A, B, C> scala.Function2<scalaz.Tree<A>, scalaz.Tree<B>, scalaz.Tree<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2221,  0           // InvokeDynamic #17:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <A, B> scalaz.Tree<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.Tree<A>>, scala.Function0<scalaz.Tree<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2228,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #121                // class scalaz/Tree
       9: astore_3
      10: aload_2
      11: invokeinterface #2228,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #121                // class scalaz/Tree
      19: astore        4
      21: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      24: aload_3
      25: aload         4
      27: invokedynamic #2238,  0           // InvokeDynamic #18:apply:(Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      32: aload_0
      33: aload_3
      34: aload         4
      36: invokedynamic #2246,  0           // InvokeDynamic #19:apply:(Lscalaz/TreeInstances$$anon$1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      41: astore        6
      43: astore        5
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: new           #127                // class scalaz/Tree$Node$$anon$4
      53: dup
      54: aload         5
      56: aload         6
      58: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      61: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2251               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2228,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #121                // class scalaz/Tree
       9: astore_3
      10: aload_2
      11: invokeinterface #2228,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #121                // class scalaz/Tree
      19: astore        4
      21: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      24: aload_3
      25: aload         4
      27: invokedynamic #2238,  0           // InvokeDynamic #18:apply:(Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      32: aload_0
      33: aload_3
      34: aload         4
      36: invokedynamic #2246,  0           // InvokeDynamic #19:apply:(Lscalaz/TreeInstances$$anon$1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      41: astore        6
      43: astore        5
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: new           #127                // class scalaz/Tree$Node$$anon$4
      53: dup
      54: aload         5
      56: aload         6
      58: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      61: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #2145               // Field scalaz/Trampoline$.MODULE$:Lscalaz/Trampoline$;
      16: aload         4
      18: aload_2
      19: invokedynamic #2150,  0           // InvokeDynamic #13:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      24: astore        6
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         6
      33: invokedynamic #2160,  0           // InvokeDynamic #14:apply:(Lscala/Function0;)Lscala/Function0;
      38: astore        7
      40: getstatic     #2165               // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      43: dup
      44: ifnonnull     49
      47: aconst_null
      48: athrow
      49: getfield      #2169               // Field scalaz/Free$.scalaz$Free$$pointUnitCache:Lscalaz/Free;
      52: astore        8
      54: aload         8
      56: aload         7
      58: invokedynamic #2178,  0           // InvokeDynamic #15:apply:(Lscala/Function0;)Lscala/Function1;
      63: astore        9
      65: ifnonnull     70
      68: aconst_null
      69: athrow
      70: new           #85                 // class scalaz/Free$Gosub
      73: dup
      74: aload         8
      76: aload         9
      78: invokespecial #2181               // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
      81: astore        10
      83: aload         4
      85: aload_2
      86: aload_3
      87: invokedynamic #2190,  0           // InvokeDynamic #16:apply:(Lscalaz/Tree;Lscala/Function1;Lscalaz/Monoid;)Lscala/Function1;
      92: astore        5
      94: new           #85                 // class scalaz/Free$Gosub
      97: dup
      98: aload         10
     100: aload         5
     102: invokespecial #2181               // Method scalaz/Free$Gosub."<init>":(Lscalaz/Free;Lscala/Function1;)V
     105: getstatic     #2195               // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
     108: invokevirtual #2199               // Method scalaz/Leibniz$.refl:()Lscalaz/Leibniz;
     111: invokevirtual #2203               // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
     114: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       7: astore        5
       9: getstatic     #2117               // Field scala/package$.MODULE$:Lscala/package$;
      12: invokevirtual #2121               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      15: aload         5
      17: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      20: astore        6
      22: aload         6
      24: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      27: ifne          74
      30: aload         6
      32: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      35: checkcast     #1932               // class scala/Tuple2
      38: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      41: astore        7
      43: aload         6
      45: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      48: checkcast     #1932               // class scala/Tuple2
      51: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      54: checkcast     #32                 // class scala/collection/immutable/Stream
      57: aload_2
      58: aload         7
      60: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: aload_3
      66: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      69: astore        4
      71: goto          84
      74: new           #1956               // class scala/MatchError
      77: dup
      78: aload         5
      80: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload         4
      86: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       7: aload_2
       8: aload_3
       9: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
       7: invokevirtual #2112               // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      10: astore        5
      12: getstatic     #2117               // Field scala/package$.MODULE$:Lscala/package$;
      15: invokevirtual #2121               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      18: aload         5
      20: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      23: astore        6
      25: aload         6
      27: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      30: ifne          82
      33: aload         6
      35: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      38: checkcast     #1932               // class scala/Tuple2
      41: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      44: astore        7
      46: aload         6
      48: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      51: checkcast     #1932               // class scala/Tuple2
      54: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      57: checkcast     #32                 // class scala/collection/immutable/Stream
      60: aload_2
      61: aload         7
      63: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      68: aload_3
      69: invokedynamic #2127,  0           // InvokeDynamic #12:apply:(Lscala/Function2;)Lscala/Function2;
      74: invokevirtual #2130               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      77: astore        4
      79: goto          92
      82: new           #1956               // class scala/MatchError
      85: dup
      86: aload         5
      88: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: aload         4
      94: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #2092               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      16: getstatic     #2097               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      19: invokevirtual #2101               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      22: astore        5
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: aload         5
      31: aload         4
      33: invokevirtual #2104               // Method scalaz/Tree.flatten:()Lscala/collection/immutable/Stream;
      36: aload_2
      37: aload_3
      38: invokeinterface #2107,  4         // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      43: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #2021               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      16: ifnonnull     21
      19: aconst_null
      20: athrow
      21: aload         4
      23: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      26: astore        6
      28: getstatic     #2027               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      31: aload         6
      33: invokevirtual #2030               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          66
      39: aload_3
      40: aload_2
      41: aload         4
      43: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      46: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: invokedynamic #2039,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
      56: invokeinterface #2041,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      61: astore        5
      63: goto          161
      66: getstatic     #2044               // Field scala/collection/immutable/Stream$$hash$colon$colon$.MODULE$:Lscala/collection/immutable/Stream$$hash$colon$colon$;
      69: aload         6
      71: invokevirtual #2048               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      74: astore        7
      76: aload         7
      78: invokevirtual #2054               // Method scala/Option.isEmpty:()Z
      81: ifne          151
      84: aload         7
      86: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
      89: checkcast     #1932               // class scala/Tuple2
      92: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      95: checkcast     #121                // class scalaz/Tree
      98: astore        8
     100: aload         7
     102: invokevirtual #2057               // Method scala/Option.get:()Ljava/lang/Object;
     105: checkcast     #1932               // class scala/Tuple2
     108: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
     111: checkcast     #32                 // class scala/collection/immutable/Stream
     114: astore        9
     116: aload_3
     117: aload         4
     119: aload_2
     120: invokedynamic #2062,  0           // InvokeDynamic #9:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
     125: aload         8
     127: aload         9
     129: aload_2
     130: aload_3
     131: invokedynamic #2070,  0           // InvokeDynamic #10:apply:(Lscalaz/Tree;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     136: invokedynamic #2079,  0           // InvokeDynamic #11:apply:()Lscala/Function2;
     141: invokeinterface #2081,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     146: astore        5
     148: goto          161
     151: new           #1956               // class scala/MatchError
     154: dup
     155: aload         6
     157: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     160: athrow
     161: aload         5
     163: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_2
      12: aload_3
      13: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      16: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #121                // class scalaz/Tree
      24: astore        4
      26: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      29: aload         4
      31: invokedynamic #2002,  0           // InvokeDynamic #6:apply:(Lscalaz/Tree;)Lscala/Function0;
      36: aload_3
      37: aload         4
      39: aload_2
      40: invokedynamic #2010,  0           // InvokeDynamic #7:apply:(Lscalaz/Tree;Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      45: astore        6
      47: astore        5
      49: ifnonnull     54
      52: aconst_null
      53: athrow
      54: new           #127                // class scalaz/Tree$Node$$anon$4
      57: dup
      58: aload         5
      60: aload         6
      62: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      65: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      14: aload_3
      15: aload_2
      16: invokedynamic #1983,  0           // InvokeDynamic #4:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      21: aload_3
      22: aload_2
      23: invokedynamic #1989,  0           // InvokeDynamic #5:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      28: astore        5
      30: astore        4
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: new           #127                // class scalaz/Tree$Node$$anon$4
      40: dup
      41: aload         4
      43: aload         5
      45: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      48: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #121                // class scalaz/Tree
       5: invokevirtual #2277               // Method copoint:(Lscalaz/Tree;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #121                // class scalaz/Tree
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #1920               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
      14: aload_2
      15: invokedynamic #1930,  0           // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      20: astore        4
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload_3
      28: astore        11
      30: aload_2
      31: aload         11
      33: invokestatic  #1925               // Method scalaz/Tree.$anonfun$cobind$1:(Lscala/Function1;Lscalaz/Tree;)Lscala/Tuple2;
      36: astore        5
      38: aload         5
      40: ifnull        104
      43: aload         5
      45: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
      48: astore        6
      50: aload         5
      52: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
      55: checkcast     #1912               // class scala/Function0
      58: astore        7
      60: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      63: aload         6
      65: invokedynamic #1946,  0           // InvokeDynamic #2:apply:(Ljava/lang/Object;)Lscala/Function0;
      70: aload         7
      72: aload         4
      74: invokedynamic #1954,  0           // InvokeDynamic #3:apply:(Lscala/Function0;Lscala/Function1;)Lscala/Function0;
      79: astore        9
      81: astore        8
      83: ifnonnull     88
      86: aconst_null
      87: athrow
      88: new           #127                // class scalaz/Tree$Node$$anon$4
      91: dup
      92: aload         8
      94: aload         9
      96: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      99: astore        10
     101: goto          114
     104: new           #1956               // class scala/MatchError
     107: dup
     108: aload         5
     110: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload         10
     116: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #1880               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      11: invokedynamic #1905,  0           // InvokeDynamic #0:apply:()Lscala/Function0;
      16: astore_2
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #127                // class scalaz/Tree$Node$$anon$4
      25: dup
      26: aload_1
      27: aload_2
      28: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      31: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #2291,  0           // InvokeDynamic #20:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #2293,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$alignWith$1(scala.Function1, scalaz.Tree, scalaz.Tree);
    Code:
       0: aload_0
       1: getstatic     #2303               // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
       4: aload_1
       5: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      12: invokevirtual #2306               // Method scalaz/$bslash$amp$div$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/$bslash$amp$div;
      15: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public static final java.lang.Object $anonfun$alignWith$4(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #46                 // class scalaz/$bslash$amp$div$This
       4: dup
       5: aload_1
       6: invokespecial #2308               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$alignWith$5(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: new           #43                 // class scalaz/$bslash$amp$div$That
       4: dup
       5: aload_1
       6: invokespecial #2310               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
       9: invokeinterface #1995,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public static final scalaz.Tree $anonfun$alignWith$3(scala.Function1, scalaz.$bslash$amp$div);
    Code:
       0: aload_1
       1: instanceof    #46                 // class scalaz/$bslash$amp$div$This
       4: ifeq          75
       7: aload_1
       8: checkcast     #46                 // class scalaz/$bslash$amp$div$This
      11: invokevirtual #2315               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      14: checkcast     #121                // class scalaz/Tree
      17: astore_3
      18: aload_3
      19: aload_0
      20: invokedynamic #2319,  0           // InvokeDynamic #21:apply:(Lscala/Function1;)Lscala/Function1;
      25: astore        9
      27: ifnonnull     32
      30: aconst_null
      31: athrow
      32: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      35: aload_3
      36: aload         9
      38: invokedynamic #1983,  0           // InvokeDynamic #4:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      43: aload_3
      44: aload         9
      46: invokedynamic #1989,  0           // InvokeDynamic #5:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
      51: astore        11
      53: astore        10
      55: ifnonnull     60
      58: aconst_null
      59: athrow
      60: new           #127                // class scalaz/Tree$Node$$anon$4
      63: dup
      64: aload         10
      66: aload         11
      68: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      71: astore_2
      72: goto          273
      75: aload_1
      76: instanceof    #43                 // class scalaz/$bslash$amp$div$That
      79: ifeq          154
      82: aload_1
      83: checkcast     #43                 // class scalaz/$bslash$amp$div$That
      86: invokevirtual #2321               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      89: checkcast     #121                // class scalaz/Tree
      92: astore        4
      94: aload         4
      96: aload_0
      97: invokedynamic #2325,  0           // InvokeDynamic #22:apply:(Lscala/Function1;)Lscala/Function1;
     102: astore        12
     104: ifnonnull     109
     107: aconst_null
     108: athrow
     109: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
     112: aload         4
     114: aload         12
     116: invokedynamic #1983,  0           // InvokeDynamic #4:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
     121: aload         4
     123: aload         12
     125: invokedynamic #1989,  0           // InvokeDynamic #5:apply:(Lscalaz/Tree;Lscala/Function1;)Lscala/Function0;
     130: astore        14
     132: astore        13
     134: ifnonnull     139
     137: aconst_null
     138: athrow
     139: new           #127                // class scalaz/Tree$Node$$anon$4
     142: dup
     143: aload         13
     145: aload         14
     147: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
     150: astore_2
     151: goto          273
     154: aload_1
     155: instanceof    #38                 // class scalaz/$bslash$amp$div$Both
     158: ifeq          264
     161: aload_1
     162: checkcast     #38                 // class scalaz/$bslash$amp$div$Both
     165: astore        5
     167: getstatic     #2303               // Field scalaz/$bslash$amp$div$.MODULE$:Lscalaz/$bslash$amp$div$;
     170: aload         5
     172: invokevirtual #2328               // Method scalaz/$bslash$amp$div$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscala/Some;
     175: astore        6
     177: aload         6
     179: invokevirtual #2331               // Method scala/Some.isEmpty:()Z
     182: ifne          264
     185: aload         6
     187: invokevirtual #2332               // Method scala/Some.get:()Ljava/lang/Object;
     190: checkcast     #1932               // class scala/Tuple2
     193: invokevirtual #1935               // Method scala/Tuple2._1:()Ljava/lang/Object;
     196: checkcast     #121                // class scalaz/Tree
     199: astore        7
     201: aload         6
     203: invokevirtual #2332               // Method scala/Some.get:()Ljava/lang/Object;
     206: checkcast     #1932               // class scala/Tuple2
     209: invokevirtual #1938               // Method scala/Tuple2._2:()Ljava/lang/Object;
     212: checkcast     #121                // class scalaz/Tree
     215: astore        8
     217: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
     220: aload_0
     221: aload         7
     223: aload         8
     225: invokedynamic #2338,  0           // InvokeDynamic #23:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
     230: aload_0
     231: aload         7
     233: aload         8
     235: invokedynamic #2344,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
     240: astore        16
     242: astore        15
     244: ifnonnull     249
     247: aconst_null
     248: athrow
     249: new           #127                // class scalaz/Tree$Node$$anon$4
     252: dup
     253: aload         15
     255: aload         16
     257: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
     260: astore_2
     261: goto          273
     264: new           #1956               // class scala/MatchError
     267: dup
     268: aload_1
     269: invokespecial #1959               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     272: athrow
     273: aload_2
     274: areturn

  public static final scala.collection.immutable.Stream $anonfun$alignWith$2(scala.Function1, scalaz.Tree, scalaz.Tree);
    Code:
       0: getstatic     #2355               // Field scalaz/Align$.MODULE$:Lscalaz/Align$;
       3: getstatic     #2097               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       6: invokevirtual #2101               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
       9: checkcast     #13                 // class scalaz/Align
      12: astore_3
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: aload_3
      19: aload_0
      20: invokedynamic #2361,  0           // InvokeDynamic #25:apply:(Lscala/Function1;)Lscala/Function1;
      25: invokeinterface #2363,  2         // InterfaceMethod scalaz/Align.alignWith:(Lscala/Function1;)Lscala/Function2;
      30: aload_1
      31: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      34: aload_2
      35: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
      38: invokeinterface #2293,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #32                 // class scala/collection/immutable/Stream
      46: areturn

  private static final scalaz.Tree align$1(scalaz.Tree, scalaz.Tree, scala.Function1);
    Code:
       0: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
       3: aload_2
       4: aload_0
       5: aload_1
       6: invokedynamic #2338,  0           // InvokeDynamic #23:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      11: aload_2
      12: aload_0
      13: aload_1
      14: invokedynamic #2344,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      19: astore        4
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: new           #127                // class scalaz/Tree$Node$$anon$4
      30: dup
      31: aload_3
      32: aload         4
      34: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      37: areturn

  public static final scalaz.Tree $anonfun$alignWith$6(scala.Function1, scalaz.Tree, scalaz.Tree);
    Code:
       0: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #2338,  0           // InvokeDynamic #23:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokedynamic #2344,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      19: astore        4
      21: astore_3
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: new           #127                // class scalaz/Tree$Node$$anon$4
      30: dup
      31: aload_3
      32: aload         4
      34: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      37: areturn

  public static final scala.Tuple2 $anonfun$zip$1(scalaz.Tree, scalaz.Tree);
    Code:
       0: new           #1932               // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #1973               // Method scalaz/Tree.rootLabel:()Ljava/lang/Object;
      12: invokespecial #2372               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static final scala.collection.immutable.Stream $anonfun$zip$3(scalaz.Tree);
    Code:
       0: aload_0
       1: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$zip$4(scalaz.Tree);
    Code:
       0: aload_0
       1: invokevirtual #2024               // Method scalaz/Tree.subForest:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scalaz.Tree $anonfun$zip$6(scalaz.Tree);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Tree $anonfun$zip$7(scalaz.Tree);
    Code:
       0: aload_0
       1: areturn

  public static final scalaz.Tree $anonfun$zip$5(scalaz.TreeInstances$$anon$1, scalaz.Tree, scalaz.Tree);
    Code:
       0: aload_1
       1: invokestatic  #2387               // Method $anonfun$zip$6:(Lscalaz/Tree;)Lscalaz/Tree;
       4: astore_3
       5: aload_2
       6: invokestatic  #2389               // Method $anonfun$zip$7:(Lscalaz/Tree;)Lscalaz/Tree;
       9: astore        4
      11: getstatic     #1883               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      14: aload_3
      15: aload         4
      17: invokedynamic #2238,  0           // InvokeDynamic #18:apply:(Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      22: aload_0
      23: aload_3
      24: aload         4
      26: invokedynamic #2246,  0           // InvokeDynamic #19:apply:(Lscalaz/TreeInstances$$anon$1;Lscalaz/Tree;Lscalaz/Tree;)Lscala/Function0;
      31: astore        6
      33: astore        5
      35: ifnonnull     40
      38: aconst_null
      39: athrow
      40: new           #127                // class scalaz/Tree$Node$$anon$4
      43: dup
      44: aload         5
      46: aload         6
      48: invokespecial #1909               // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      51: areturn

  public static final scala.collection.immutable.Stream $anonfun$zip$2(scalaz.TreeInstances$$anon$1, scalaz.Tree, scalaz.Tree);
    Code:
       0: getstatic     #2394               // Field scalaz/Zip$.MODULE$:Lscalaz/Zip$;
       3: getstatic     #2097               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       6: invokevirtual #2101               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
       9: checkcast     #15                 // class scalaz/Zip
      12: astore_3
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: aload_3
      19: aload_1
      20: invokedynamic #2398,  0           // InvokeDynamic #26:apply:(Lscalaz/Tree;)Lscala/Function0;
      25: aload_2
      26: invokedynamic #2402,  0           // InvokeDynamic #27:apply:(Lscalaz/Tree;)Lscala/Function0;
      31: aload_0
      32: invokedynamic #2408,  0           // InvokeDynamic #28:apply:(Lscalaz/TreeInstances$$anon$1;)Lscala/Function2;
      37: getstatic     #2097               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      40: invokevirtual #2101               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      43: invokeinterface #2410,  5         // InterfaceMethod scalaz/Zip.zipWith:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
      48: checkcast     #32                 // class scala/collection/immutable/Stream
      51: areturn

  public scalaz.TreeInstances$$anon$1(scalaz.TreeInstances);
    Code:
       0: aload_0
       1: invokespecial #2415               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2419               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2422               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2425               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2428               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2431               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      24: aload_0
      25: invokestatic  #2434               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      28: aload_0
      29: invokestatic  #2437               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      32: aload_0
      33: invokestatic  #2440               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      36: aload_0
      37: invokestatic  #2443               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      40: aload_0
      41: invokestatic  #2446               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      44: aload_0
      45: invokestatic  #2449               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      48: aload_0
      49: invokestatic  #2452               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      52: aload_0
      53: invokestatic  #2455               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      56: aload_0
      57: invokestatic  #2458               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      60: aload_0
      61: invokestatic  #2461               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      64: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2476,  0           // InvokeDynamic #29:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
