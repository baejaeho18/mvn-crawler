Compiled from "Diev.scala"
public final class scalaz.DievInstances$$anon$1 implements scalaz.Monoid<scalaz.Diev<A>> {
  private final scalaz.syntax.MonoidSyntax<scalaz.Diev<A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.Diev<A>> semigroupSyntax;

  private final scalaz.DievInstances $outer;

  private final scalaz.Enum evidence$2$1;

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #47                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #68                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #77                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #82                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #94                 // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.Diev<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #120                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Diev<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Diev<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Diev<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Diev<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #139                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #146                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Diev<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #153                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.Diev<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #157                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.Diev<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #157                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Diev<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #165                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Diev<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #165                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Diev<A> append(scalaz.Diev<A>, scala.Function0<scalaz.Diev<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #178,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #180                // class scalaz/Diev
      10: invokevirtual #184                // Method scalaz/Diev.$plus$plus:(Lscalaz/Diev;)Lscalaz/Diev;
      13: areturn

  public scalaz.Diev<A> zero();
    Code:
       0: new           #15                 // class scalaz/DievImplementation$DieVector
       3: dup
       4: aload_0
       5: getfield      #190                // Field $outer:Lscalaz/DievInstances;
       8: aload_0
       9: getfield      #190                // Field $outer:Lscalaz/DievInstances;
      12: invokevirtual #193                // Method scalaz/DievInstances.DieVector:()Lscalaz/DievImplementation$DieVector$;
      15: invokevirtual #197                // Method scalaz/DievImplementation$DieVector$.$lessinit$greater$default$1:()Lscala/collection/immutable/Vector;
      18: aload_0
      19: getfield      #199                // Field evidence$2$1:Lscalaz/Enum;
      22: invokespecial #203                // Method scalaz/DievImplementation$DieVector."<init>":(Lscalaz/DievImplementation;Lscala/collection/immutable/Vector;Lscalaz/Enum;)V
      25: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #205                // Method zero:()Lscalaz/Diev;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #180                // class scalaz/Diev
       4: aload_2
       5: invokeinterface #178,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #180                // class scalaz/Diev
      13: invokevirtual #184                // Method scalaz/Diev.$plus$plus:(Lscalaz/Diev;)Lscalaz/Diev;
      16: areturn

  public scalaz.DievInstances$$anon$1(scalaz.DievInstances, scalaz.Enum);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #190                // Field $outer:Lscalaz/DievInstances;
      11: aload_0
      12: aload_2
      13: putfield      #199                // Field evidence$2$1:Lscalaz/Enum;
      16: aload_0
      17: invokespecial #210                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #214                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      24: aload_0
      25: invokestatic  #217                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      28: return
}
