Compiled from "StrictTree.scala"
public class scalaz.StrictTree$BottomUpStackElem<A, B> implements scala.collection.Iterator<scalaz.StrictTree<A>>, scala.Product, scala.Serializable {
  private final scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> parent;

  private final scalaz.StrictTree<A> tree;

  private final scala.collection.immutable.VectorIterator<scalaz.StrictTree<A>> subIterator;

  private final scala.collection.mutable.Buffer<B> mappedSubForest;

  public scala.collection.Iterator<scalaz.StrictTree<A>> seq();
    Code:
       0: aload_0
       1: invokestatic  #42                 // InterfaceMethod scala/collection/Iterator.seq$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #50                 // InterfaceMethod scala/collection/Iterator.isEmpty$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scala/collection/Iterator.isTraversableAgain$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #58                 // InterfaceMethod scala/collection/Iterator.hasDefiniteSize$:(Lscala/collection/Iterator;)Z
       4: ireturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #66                 // InterfaceMethod scala/collection/Iterator.take$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #71                 // InterfaceMethod scala/collection/Iterator.drop$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #80                 // InterfaceMethod scala/collection/Iterator.slice$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> sliceIterator(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #84                 // InterfaceMethod scala/collection/Iterator.sliceIterator$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> map(scala.Function1<scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // InterfaceMethod scala/collection/Iterator.map$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> $plus$plus(scala.Function0<scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // InterfaceMethod scala/collection/Iterator.$plus$plus$:(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> flatMap(scala.Function1<scalaz.StrictTree<A>, scala.collection.GenTraversableOnce<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scala/collection/Iterator.flatMap$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> filter(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // InterfaceMethod scala/collection/Iterator.filter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> boolean corresponds(scala.collection.GenTraversableOnce<B>, scala.Function2<scalaz.StrictTree<A>, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // InterfaceMethod scala/collection/Iterator.corresponds$:(Lscala/collection/Iterator;Lscala/collection/GenTraversableOnce;Lscala/Function2;)Z
       6: ireturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> withFilter(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #126                // InterfaceMethod scala/collection/Iterator.withFilter$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> filterNot(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #130                // InterfaceMethod scala/collection/Iterator.filterNot$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> collect(scala.PartialFunction<scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // InterfaceMethod scala/collection/Iterator.collect$:(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<B> scanLeft(B, scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scala/collection/Iterator.scanLeft$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public <B> scala.collection.Iterator<B> scanRight(B, scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #154                // InterfaceMethod scala/collection/Iterator.scanRight$:(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> takeWhile(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod scala/collection/Iterator.takeWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> partition(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // InterfaceMethod scala/collection/Iterator.partition$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> span(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // InterfaceMethod scala/collection/Iterator.span$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> dropWhile(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod scala/collection/Iterator.dropWhile$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;
       5: areturn

  public <B> scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, B>> zip(scala.collection.Iterator<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // InterfaceMethod scala/collection/Iterator.zip$:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;
       5: areturn

  public <A1> scala.collection.Iterator<A1> padTo(int, A1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #189                // InterfaceMethod scala/collection/Iterator.padTo$:(Lscala/collection/Iterator;ILjava/lang/Object;)Lscala/collection/Iterator;
       6: areturn

  public scala.collection.Iterator<scala.Tuple2<scalaz.StrictTree<A>, java.lang.Object>> zipWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #194                // InterfaceMethod scala/collection/Iterator.zipWithIndex$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public <B, A1, B1> scala.collection.Iterator<scala.Tuple2<A1, B1>> zipAll(scala.collection.Iterator<B>, A1, B1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #203                // InterfaceMethod scala/collection/Iterator.zipAll$:(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;
       7: areturn

  public <U> void foreach(scala.Function1<scalaz.StrictTree<A>, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod scala/collection/Iterator.foreach$:(Lscala/collection/Iterator;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // InterfaceMethod scala/collection/Iterator.forall$:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // InterfaceMethod scala/collection/Iterator.exists$:(Lscala/collection/Iterator;Lscala/Function1;)Z
       5: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #227                // InterfaceMethod scala/collection/Iterator.contains$:(Lscala/collection/Iterator;Ljava/lang/Object;)Z
       5: ireturn

  public scala.Option<scalaz.StrictTree<A>> find(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scala/collection/Iterator.find$:(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;
       5: areturn

  public int indexWhere(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #241                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #246                // InterfaceMethod scala/collection/Iterator.indexWhere$:(Lscala/collection/Iterator;Lscala/Function1;I)I
       6: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #258                // InterfaceMethod scala/collection/Iterator.indexOf$:(Lscala/collection/Iterator;Ljava/lang/Object;I)I
       6: ireturn

  public scala.collection.BufferedIterator<scalaz.StrictTree<A>> buffered();
    Code:
       0: aload_0
       1: invokestatic  #265                // InterfaceMethod scala/collection/Iterator.buffered$:(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;
       4: areturn

  public <B> scala.collection.Iterator<scalaz.StrictTree<A>>.GroupedIterator<B> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #273                // InterfaceMethod scala/collection/Iterator.grouped$:(Lscala/collection/Iterator;I)Lscala/collection/Iterator$GroupedIterator;
       5: areturn

  public <B> scala.collection.Iterator<scalaz.StrictTree<A>>.GroupedIterator<B> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #281                // InterfaceMethod scala/collection/Iterator.sliding$:(Lscala/collection/Iterator;II)Lscala/collection/Iterator$GroupedIterator;
       6: areturn

  public <B> int sliding$default$2();
    Code:
       0: aload_0
       1: invokestatic  #288                // InterfaceMethod scala/collection/Iterator.sliding$default$2$:(Lscala/collection/Iterator;)I
       4: ireturn

  public int length();
    Code:
       0: aload_0
       1: invokestatic  #292                // InterfaceMethod scala/collection/Iterator.length$:(Lscala/collection/Iterator;)I
       4: ireturn

  public scala.Tuple2<scala.collection.Iterator<scalaz.StrictTree<A>>, scala.collection.Iterator<scalaz.StrictTree<A>>> duplicate();
    Code:
       0: aload_0
       1: invokestatic  #299                // InterfaceMethod scala/collection/Iterator.duplicate$:(Lscala/collection/Iterator;)Lscala/Tuple2;
       4: areturn

  public <B> scala.collection.Iterator<B> patch(int, scala.collection.Iterator<B>, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #308                // InterfaceMethod scala/collection/Iterator.patch$:(Lscala/collection/Iterator;ILscala/collection/Iterator;I)Lscala/collection/Iterator;
       7: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #317                // InterfaceMethod scala/collection/Iterator.copyToArray$:(Lscala/collection/Iterator;Ljava/lang/Object;II)V
       7: return

  public boolean sameElements(scala.collection.Iterator<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #323                // InterfaceMethod scala/collection/Iterator.sameElements$:(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z
       5: ireturn

  public scala.collection.Traversable<scalaz.StrictTree<A>> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #330                // InterfaceMethod scala/collection/Iterator.toTraversable$:(Lscala/collection/Iterator;)Lscala/collection/Traversable;
       4: areturn

  public scala.collection.Iterator<scalaz.StrictTree<A>> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #334                // InterfaceMethod scala/collection/Iterator.toIterator$:(Lscala/collection/Iterator;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.immutable.Stream<scalaz.StrictTree<A>> toStream();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod scala/collection/Iterator.toStream$:(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #347                // InterfaceMethod scala/collection/Iterator.toString$:(Lscala/collection/Iterator;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.List<scalaz.StrictTree<A>> reversed();
    Code:
       0: aload_0
       1: invokestatic  #356                // InterfaceMethod scala/collection/TraversableOnce.reversed$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #360                // InterfaceMethod scala/collection/TraversableOnce.size$:(Lscala/collection/TraversableOnce;)I
       4: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #365                // InterfaceMethod scala/collection/TraversableOnce.nonEmpty$:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<scalaz.StrictTree<A>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod scala/collection/TraversableOnce.count$:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // InterfaceMethod scala/collection/TraversableOnce.collectFirst$:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #384                // InterfaceMethod scala/collection/TraversableOnce.$div$colon$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // InterfaceMethod scala/collection/TraversableOnce.$colon$bslash$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #393                // InterfaceMethod scala/collection/TraversableOnce.foldLeft$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldRight(B, scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #397                // InterfaceMethod scala/collection/TraversableOnce.foldRight$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod scala/collection/TraversableOnce.reduceLeft$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> B reduceRight(scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #409                // InterfaceMethod scala/collection/TraversableOnce.reduceRight$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, scalaz.StrictTree<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod scala/collection/TraversableOnce.reduceLeftOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<scalaz.StrictTree<A>, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #421                // InterfaceMethod scala/collection/TraversableOnce.reduceRightOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #426                // InterfaceMethod scala/collection/TraversableOnce.reduce$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod scala/collection/TraversableOnce.reduceOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #436                // InterfaceMethod scala/collection/TraversableOnce.fold$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, scalaz.StrictTree<A>, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #445                // InterfaceMethod scala/collection/TraversableOnce.aggregate$:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #453                // InterfaceMethod scala/collection/TraversableOnce.sum$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #458                // InterfaceMethod scala/collection/TraversableOnce.product$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object min(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #465                // InterfaceMethod scala/collection/TraversableOnce.min$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object max(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #470                // InterfaceMethod scala/collection/TraversableOnce.max$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object maxBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #476                // InterfaceMethod scala/collection/TraversableOnce.maxBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #480                // InterfaceMethod scala/collection/TraversableOnce.minBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #488                // InterfaceMethod scala/collection/TraversableOnce.copyToBuffer$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #493                // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #498                // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #506                // InterfaceMethod scala/collection/TraversableOnce.toArray$:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<scalaz.StrictTree<A>> toList();
    Code:
       0: aload_0
       1: invokestatic  #511                // InterfaceMethod scala/collection/TraversableOnce.toList$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.Iterable<scalaz.StrictTree<A>> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #518                // InterfaceMethod scala/collection/TraversableOnce.toIterable$:(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Seq<scalaz.StrictTree<A>> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #525                // InterfaceMethod scala/collection/TraversableOnce.toSeq$:(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<scalaz.StrictTree<A>> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #532                // InterfaceMethod scala/collection/TraversableOnce.toIndexedSeq$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public <B> scala.collection.mutable.Buffer<B> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #539                // InterfaceMethod scala/collection/TraversableOnce.toBuffer$:(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #546                // InterfaceMethod scala/collection/TraversableOnce.toSet$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<scalaz.StrictTree<A>> toVector();
    Code:
       0: aload_0
       1: invokestatic  #553                // InterfaceMethod scala/collection/TraversableOnce.toVector$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, scalaz.StrictTree<A>, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #561                // InterfaceMethod scala/collection/TraversableOnce.to$:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<scalaz.StrictTree<A>, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #570                // InterfaceMethod scala/collection/TraversableOnce.toMap$:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #579                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #584                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #587                // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #594                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #599                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #603                // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public int sizeHintIfCheap();
    Code:
       0: aload_0
       1: invokestatic  #610                // InterfaceMethod scala/collection/GenTraversableOnce.sizeHintIfCheap$:(Lscala/collection/GenTraversableOnce;)I
       4: ireturn

  public scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> parent();
    Code:
       0: aload_0
       1: getfield      #614                // Field parent:Lscala/Option;
       4: areturn

  public scalaz.StrictTree<A> tree();
    Code:
       0: aload_0
       1: getfield      #618                // Field tree:Lscalaz/StrictTree;
       4: areturn

  public A rootLabel();
    Code:
       0: aload_0
       1: invokevirtual #623                // Method tree:()Lscalaz/StrictTree;
       4: invokevirtual #625                // Method scalaz/StrictTree.rootLabel:()Ljava/lang/Object;
       7: areturn

  public scala.collection.mutable.Buffer<B> mappedSubForest();
    Code:
       0: aload_0
       1: getfield      #628                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #631                // Field subIterator:Lscala/collection/immutable/VectorIterator;
       4: invokevirtual #635                // Method scala/collection/immutable/VectorIterator.hasNext:()Z
       7: ireturn

  public scalaz.StrictTree<A> next();
    Code:
       0: aload_0
       1: getfield      #631                // Field subIterator:Lscala/collection/immutable/VectorIterator;
       4: invokevirtual #638                // Method scala/collection/immutable/VectorIterator.next:()Ljava/lang/Object;
       7: checkcast     #22                 // class scalaz/StrictTree
      10: areturn

  public <A, B> scalaz.StrictTree$BottomUpStackElem<A, B> copy(scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>>, scalaz.StrictTree<A>);
    Code:
       0: new           #2                  // class scalaz/StrictTree$BottomUpStackElem
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #645                // Method "<init>":(Lscala/Option;Lscalaz/StrictTree;)V
       9: areturn

  public <A, B> scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #649                // Method parent:()Lscala/Option;
       4: areturn

  public <A, B> scalaz.StrictTree<A> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #623                // Method tree:()Lscalaz/StrictTree;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #653                // String BottomUpStackElem
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 1
                     0: 24
                     1: 29
               default: 34
          }
      24: aload_0
      25: invokevirtual #649                // Method parent:()Lscala/Option;
      28: areturn
      29: aload_0
      30: invokevirtual #623                // Method tree:()Lscalaz/StrictTree;
      33: areturn
      34: new           #659                // class java/lang/IndexOutOfBoundsException
      37: dup
      38: iload_1
      39: invokestatic  #665                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: invokevirtual #667                // Method java/lang/Object.toString:()Ljava/lang/String;
      45: invokespecial #670                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      48: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #678                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #682                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/StrictTree$BottomUpStackElem
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #678                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #688                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     106
       5: aload_1
       6: instanceof    #2                  // class scalaz/StrictTree$BottomUpStackElem
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          108
      23: aload_1
      24: checkcast     #2                  // class scalaz/StrictTree$BottomUpStackElem
      27: astore_3
      28: aload_0
      29: invokevirtual #649                // Method parent:()Lscala/Option;
      32: aload_3
      33: invokevirtual #649                // Method parent:()Lscala/Option;
      36: astore        4
      38: dup
      39: ifnonnull     51
      42: pop
      43: aload         4
      45: ifnull        59
      48: goto          102
      51: aload         4
      53: invokevirtual #691                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          102
      59: aload_0
      60: invokevirtual #623                // Method tree:()Lscalaz/StrictTree;
      63: aload_3
      64: invokevirtual #623                // Method tree:()Lscalaz/StrictTree;
      67: astore        5
      69: dup
      70: ifnonnull     82
      73: pop
      74: aload         5
      76: ifnull        90
      79: goto          102
      82: aload         5
      84: invokevirtual #691                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          102
      90: aload_3
      91: aload_0
      92: invokevirtual #693                // Method canEqual:(Ljava/lang/Object;)Z
      95: ifeq          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: ifeq          108
     106: iconst_1
     107: ireturn
     108: iconst_0
     109: ireturn

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #698                // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #701                // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #704                // Method toSeq:()Lscala/collection/Seq;
       4: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #707                // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #710                // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #713                // Method seq:()Lscala/collection/Iterator;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #715                // Method next:()Lscalaz/StrictTree;
       4: areturn

  public scalaz.StrictTree$BottomUpStackElem(scala.Option<scalaz.StrictTree$BottomUpStackElem<A, B>>, scalaz.StrictTree<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #614                // Field parent:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #618                // Field tree:Lscalaz/StrictTree;
      10: aload_0
      11: invokespecial #719                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #723                // InterfaceMethod scala/collection/GenTraversableOnce.$init$:(Lscala/collection/GenTraversableOnce;)V
      18: aload_0
      19: invokestatic  #726                // InterfaceMethod scala/collection/TraversableOnce.$init$:(Lscala/collection/TraversableOnce;)V
      22: aload_0
      23: invokestatic  #729                // InterfaceMethod scala/collection/Iterator.$init$:(Lscala/collection/Iterator;)V
      26: aload_0
      27: invokestatic  #732                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      30: aload_0
      31: aload_2
      32: invokevirtual #735                // Method scalaz/StrictTree.subForest:()Lscala/collection/immutable/Vector;
      35: invokevirtual #741                // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/immutable/VectorIterator;
      38: putfield      #631                // Field subIterator:Lscala/collection/immutable/VectorIterator;
      41: aload_0
      42: getstatic     #746                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      45: invokevirtual #749                // Method scala/collection/mutable/Buffer$.empty:()Lscala/collection/GenTraversable;
      48: checkcast     #751                // class scala/collection/mutable/Buffer
      51: putfield      #628                // Field mappedSubForest:Lscala/collection/mutable/Buffer;
      54: return
}
