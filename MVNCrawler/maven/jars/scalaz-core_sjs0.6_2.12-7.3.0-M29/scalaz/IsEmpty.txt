Compiled from "IsEmpty.scala"
public interface scalaz.IsEmpty<F> extends scalaz.PlusEmpty<F> {
  public static <F, G> scalaz.IsEmpty<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.IsEmpty<G>);
    Code:
       0: getstatic     #34                 // Field scalaz/IsEmpty$.MODULE$:Lscalaz/IsEmpty$;
       3: aload_0
       4: aload_1
       5: invokevirtual #36                 // Method scalaz/IsEmpty$.fromIso:(Lscalaz/Isomorphisms$Iso2;Lscalaz/IsEmpty;)Lscalaz/IsEmpty;
       8: areturn

  public static <F> scalaz.IsEmpty<F> apply(scalaz.IsEmpty<F>);
    Code:
       0: getstatic     #34                 // Field scalaz/IsEmpty$.MODULE$:Lscalaz/IsEmpty$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: areturn

  public abstract void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<F>);

  public abstract <A> boolean isEmpty(F);

  public static scalaz.IsEmpty$IsEmptyLaw isEmptyLaw$(scalaz.IsEmpty);
    Code:
       0: aload_0
       1: invokespecial #55                 // InterfaceMethod isEmptyLaw:()Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public default scalaz.IsEmpty<F>.IsEmptyLaw isEmptyLaw();
    Code:
       0: new           #13                 // class scalaz/IsEmpty$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #61                 // Method scalaz/IsEmpty$$anon$1."<init>":(Lscalaz/IsEmpty;)V
       8: areturn

  public abstract scalaz.syntax.IsEmptySyntax<F> isEmptySyntax();

  public static void $init$(scalaz.IsEmpty);
    Code:
       0: aload_0
       1: new           #15                 // class scalaz/IsEmpty$$anon$2
       4: dup
       5: aload_0
       6: invokespecial #67                 // Method scalaz/IsEmpty$$anon$2."<init>":(Lscalaz/IsEmpty;)V
       9: invokeinterface #69,  2           // InterfaceMethod scalaz$IsEmpty$_setter_$isEmptySyntax_$eq:(Lscalaz/syntax/IsEmptySyntax;)V
      14: return
}
