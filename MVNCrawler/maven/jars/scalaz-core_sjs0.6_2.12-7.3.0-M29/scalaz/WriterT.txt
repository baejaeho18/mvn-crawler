Compiled from "WriterT.scala"
public final class scalaz.WriterT<W, F, A> implements scala.Product, scala.Serializable {
  private final F run;

  public static <W, F, A> scala.Option<F> unapply(scalaz.WriterT<W, F, A>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #40                 // Method scalaz/WriterT$.unapply:(Lscalaz/WriterT;)Lscala/Option;
       7: areturn

  public static <W, F, A> scalaz.WriterT<W, F, A> apply(F);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #45                 // Method scalaz/WriterT$.apply:(Ljava/lang/Object;)Lscalaz/WriterT;
       7: areturn

  public static <F, W, A> scalaz.WriterT<W, F, A> putWith(F, scala.Function1<A, W>, scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/WriterT
      11: dup
      12: aload_2
      13: aload_0
      14: aload_1
      15: invokedynamic #74,  0             // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      20: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: invokespecial #84                 // Method "<init>":(Ljava/lang/Object;)V
      28: areturn

  public static <F, W, A> scalaz.WriterT<W, F, A> put(F, W, scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #89                 // Method scalaz/WriterT$.put:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/WriterT;
       9: areturn

  public static <W> scalaz.WriterT<W, java.lang.Object, scala.runtime.BoxedUnit> tell(W);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #93                 // Method scalaz/WriterT$.tell:(Ljava/lang/Object;)Lscalaz/WriterT;
       7: areturn

  public static <W, A> scalaz.WriterT<W, java.lang.Object, A> writer(scala.Tuple2<W, A>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #99                 // Method scalaz/WriterT$.writer:(Lscala/Tuple2;)Lscalaz/WriterT;
       7: areturn

  public static <FAB, AB, A0, B0> scalaz.WriterT<A0, java.lang.Object, B0> writerTU(FAB, scalaz.Unapply<scalaz.Functor, FAB>, scalaz.Unapply2<scalaz.Bifunctor, AB>, scalaz.Leibniz<scala.runtime.Nothing$, java.lang.Object, AB, scala.Tuple2<A0, B0>>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #108                // Method scalaz/WriterT$.writerTU:(Ljava/lang/Object;Lscalaz/Unapply;Lscalaz/Unapply2;Lscalaz/Leibniz;)Lscalaz/WriterT;
      10: areturn

  public static <F, W, A> scalaz.WriterT<W, F, A> writerT(F);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
       7: areturn

  public static <F, W, A> scalaz.Show<scalaz.WriterT<W, F, A>> writerTShow(scalaz.Show<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #118                // Method scalaz/WriterT$.writerTShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <W> scalaz.Hoist<?> writerTHoist(scalaz.Monoid<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #124                // Method scalaz/WriterT$.writerTHoist:(Lscalaz/Monoid;)Lscalaz/Hoist;
       7: areturn

  public static <W, F> scalaz.MonadListen<?, W> writerTMonadListen(scalaz.Monad<F>, scalaz.Monoid<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #129                // Method scalaz/WriterT$.writerTMonadListen:(Lscalaz/Monad;Lscalaz/Monoid;)Lscalaz/MonadListen;
       8: areturn

  public static <W> scalaz.Traverse<?> writerTraverse();
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: invokevirtual #134                // Method scalaz/WriterT$.writerTraverse:()Lscalaz/Traverse;
       6: areturn

  public static <F> scalaz.Bitraverse<?> writerTBitraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #139                // Method scalaz/WriterT$.writerTBitraverse:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       7: areturn

  public static <W, F> scalaz.Traverse<?> writerTTraverse(scalaz.Traverse<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #144                // Method scalaz/WriterT$.writerTTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse;
       7: areturn

  public static scalaz.Bitraverse<scalaz.WriterT> writerBitraverse();
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: invokevirtual #149                // Method scalaz/WriterT$.writerBitraverse:()Lscalaz/Bitraverse;
       6: areturn

  public static <W> scalaz.Comonad<?> writerComonad();
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: invokevirtual #154                // Method scalaz/WriterT$.writerComonad:()Lscalaz/Comonad;
       6: areturn

  public static <W, F> scalaz.MonadPlus<?> writerTMonadPlus(scalaz.Monoid<W>, scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #159                // Method scalaz/WriterT$.writerTMonadPlus:(Lscalaz/Monoid;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       8: areturn

  public static <W, A> scalaz.Equal<scalaz.WriterT<W, java.lang.Object, A>> writerEqual(scalaz.Equal<scala.Tuple2<W, A>>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #165                // Method scalaz/WriterT$.writerEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <W, F> scalaz.Foldable<?> writerTFoldable(scalaz.Foldable<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #170                // Method scalaz/WriterT$.writerTFoldable:(Lscalaz/Foldable;)Lscalaz/Foldable;
       7: areturn

  public static <F> scalaz.Bifunctor<?> writerTBifunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #175                // Method scalaz/WriterT$.writerTBifunctor:(Lscalaz/Functor;)Lscalaz/Bifunctor;
       7: areturn

  public static <F, E, W> scalaz.MonadError<?, E> writerTMonadError(scalaz.MonadError<F, E>, scalaz.Monoid<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #180                // Method scalaz/WriterT$.writerTMonadError:(Lscalaz/MonadError;Lscalaz/Monoid;)Lscalaz/MonadError;
       8: areturn

  public static <F, W, A> scalaz.Equal<scalaz.WriterT<W, F, A>> writerTEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #184                // Method scalaz/WriterT$.writerTEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <W> scalaz.Foldable<?> writerFoldable();
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: invokevirtual #189                // Method scalaz/WriterT$.writerFoldable:()Lscalaz/Foldable;
       6: areturn

  public static <W, F> scalaz.Monad<?> writerTMonad(scalaz.Monoid<W>, scalaz.Monad<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #194                // Method scalaz/WriterT$.writerTMonad:(Lscalaz/Monoid;Lscalaz/Monad;)Lscalaz/Monad;
       8: areturn

  public static <W> scalaz.Monad<?> writerMonad(scalaz.Monoid<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #199                // Method scalaz/WriterT$.writerMonad:(Lscalaz/Monoid;)Lscalaz/Monad;
       7: areturn

  public static <W> scalaz.BindRec<?> writerBindRec(scalaz.Semigroup<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #204                // Method scalaz/WriterT$.writerBindRec:(Lscalaz/Semigroup;)Lscalaz/BindRec;
       7: areturn

  public static <W, F> scalaz.Applicative<?> writerTApplicative(scalaz.Monoid<W>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #209                // Method scalaz/WriterT$.writerTApplicative:(Lscalaz/Monoid;Lscalaz/Applicative;)Lscalaz/Applicative;
       8: areturn

  public static <W, F> scalaz.Bind<?> writerTBind(scalaz.Semigroup<W>, scalaz.Bind<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #214                // Method scalaz/WriterT$.writerTBind:(Lscalaz/Semigroup;Lscalaz/Bind;)Lscalaz/Bind;
       8: areturn

  public static <W, F> scalaz.Apply<?> writerTApply(scalaz.Semigroup<W>, scalaz.Apply<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: invokevirtual #219                // Method scalaz/WriterT$.writerTApply:(Lscalaz/Semigroup;Lscalaz/Apply;)Lscalaz/Apply;
       8: areturn

  public static <W, F> scalaz.BindRec<?> writerTBindRec(scalaz.Semigroup<W>, scalaz.BindRec<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #225                // Method scalaz/WriterT$.writerTBindRec:(Lscalaz/Semigroup;Lscalaz/BindRec;Lscalaz/Applicative;)Lscalaz/BindRec;
       9: areturn

  public static <W> scalaz.Bind<?> writerBind(scalaz.Semigroup<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #230                // Method scalaz/WriterT$.writerBind:(Lscalaz/Semigroup;)Lscalaz/Bind;
       7: areturn

  public static <W, F> scalaz.Functor<?> writerTFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #235                // Method scalaz/WriterT$.writerTFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <W, F> scalaz.PlusEmpty<?> writerTPlusEmpty(scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #240                // Method scalaz/WriterT$.writerTPlusEmpty:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       7: areturn

  public static <W> scalaz.Functor<?> writerFunctor();
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: invokevirtual #245                // Method scalaz/WriterT$.writerFunctor:()Lscalaz/Functor;
       6: areturn

  public static <F, W, A> scalaz.Decidable<?> writerTDecidable(scalaz.Decidable<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #250                // Method scalaz/WriterT$.writerTDecidable:(Lscalaz/Decidable;)Lscalaz/Decidable;
       7: areturn

  public static <W, F> scalaz.Plus<?> writerTPlus(scalaz.Plus<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #255                // Method scalaz/WriterT$.writerTPlus:(Lscalaz/Plus;)Lscalaz/Plus;
       7: areturn

  public static <W, F, A> scalaz.Monoid<scalaz.WriterT<W, F, A>> writerTMonoid(scalaz.Monoid<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #261                // Method scalaz/WriterT$.writerTMonoid:(Lscalaz/Monoid;)Lscalaz/Monoid;
       7: areturn

  public static <F, W, A> scalaz.Divisible<?> writerTDivisible(scalaz.Divisible<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #266                // Method scalaz/WriterT$.writerTDivisible:(Lscalaz/Divisible;)Lscalaz/Divisible;
       7: areturn

  public F run();
    Code:
       0: aload_0
       1: getfield      #270                // Field run:Ljava/lang/Object;
       4: areturn

  public scalaz.UnwriterT<F, W, A> off();
    Code:
       0: new           #277                // class scalaz/UnwriterT
       3: dup
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: invokespecial #280                // Method scalaz/UnwriterT."<init>":(Ljava/lang/Object;)V
      11: areturn

  public scalaz.UnwriterT<F, W, A> unary_$minus();
    Code:
       0: new           #277                // class scalaz/UnwriterT
       3: dup
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: invokespecial #280                // Method scalaz/UnwriterT."<init>":(Ljava/lang/Object;)V
      11: areturn

  public <X, B> scalaz.WriterT<X, F, B> mapValue(scala.Function1<scala.Tuple2<W, A>, scala.Tuple2<X, B>>, scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      17: areturn

  public <X> scalaz.WriterT<X, F, A> mapWritten(scala.Function1<W, X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #297,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      10: aload_2
      11: aload_0
      12: invokevirtual #279                // Method run:()Ljava/lang/Object;
      15: aload_3
      16: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      24: areturn

  public <W2, G, B> scalaz.WriterT<W2, G, B> mapT(scala.Function1<F, G>);
    Code:
       0: new           #2                  // class scalaz/WriterT
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #279                // Method run:()Ljava/lang/Object;
       9: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokespecial #84                 // Method "<init>":(Ljava/lang/Object;)V
      17: areturn

  public F written(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #279                // Method run:()Ljava/lang/Object;
       5: invokedynamic #317,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      10: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public F value(scalaz.Functor<F>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #279                // Method run:()Ljava/lang/Object;
       5: invokedynamic #322,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      10: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      15: areturn

  public scalaz.WriterT<A, F, W> swap(scalaz.Functor<F>);
    Code:
       0: invokedynamic #330,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       5: astore_2
       6: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       9: aload_1
      10: aload_0
      11: invokevirtual #279                // Method run:()Ljava/lang/Object;
      14: aload_2
      15: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      23: areturn

  public scalaz.WriterT<W, F, A> $colon$plus$plus$greater(scala.Function0<W>, scalaz.Functor<F>, scalaz.Semigroup<W>);
    Code:
       0: aload_3
       1: aload_1
       2: invokedynamic #343,  0            // InvokeDynamic #5:apply:(Lscalaz/Semigroup;Lscala/Function0;)Lscala/Function1;
       7: invokedynamic #297,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      12: astore        4
      14: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      17: aload_2
      18: aload_0
      19: invokevirtual #279                // Method run:()Ljava/lang/Object;
      22: aload         4
      24: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      32: areturn

  public scalaz.WriterT<W, F, A> $colon$plus$plus$greater$greater(scala.Function1<A, W>, scalaz.Functor<F>, scalaz.Semigroup<W>);
    Code:
       0: aload_3
       1: aload_1
       2: invokedynamic #357,  0            // InvokeDynamic #6:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      12: aload_2
      13: aload_0
      14: invokevirtual #279                // Method run:()Ljava/lang/Object;
      17: aload         4
      19: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      27: areturn

  public scalaz.WriterT<W, F, A> $less$plus$plus$colon(W, scalaz.Functor<F>, scalaz.Semigroup<W>);
    Code:
       0: aload_3
       1: aload_1
       2: invokedynamic #368,  0            // InvokeDynamic #7:apply:(Lscalaz/Semigroup;Ljava/lang/Object;)Lscala/Function1;
       7: invokedynamic #297,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      12: astore        4
      14: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      17: aload_2
      18: aload_0
      19: invokevirtual #279                // Method run:()Ljava/lang/Object;
      22: aload         4
      24: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      32: areturn

  public scalaz.WriterT<W, F, A> $less$less$plus$plus$colon(scala.Function1<A, W>, scalaz.Functor<F>, scalaz.Semigroup<W>);
    Code:
       0: aload_3
       1: aload_1
       2: invokedynamic #375,  0            // InvokeDynamic #8:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function1;
       7: astore        4
       9: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      12: aload_2
      13: aload_0
      14: invokevirtual #279                // Method run:()Ljava/lang/Object;
      17: aload         4
      19: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      27: areturn

  public scalaz.WriterT<W, F, A> reset(scalaz.Monoid<W>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #387,  0            // InvokeDynamic #9:apply:(Lscalaz/Monoid;)Lscala/Function1;
       6: invokedynamic #297,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      11: astore_3
      12: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      15: aload_2
      16: aload_0
      17: invokevirtual #279                // Method run:()Ljava/lang/Object;
      20: aload_3
      21: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      29: areturn

  public <B> scalaz.WriterT<W, F, B> map(scala.Function1<A, B>, scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: invokedynamic #394,  0            // InvokeDynamic #10:apply:(Lscala/Function1;)Lscala/Function1;
      14: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      22: areturn

  public <B> scalaz.WriterT<W, F, B> mapF(scala.Function1<A, F>, scalaz.Bind<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_2
       9: aload_1
      10: invokedynamic #405,  0            // InvokeDynamic #11:apply:(Lscalaz/Bind;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #410,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      23: areturn

  public <B> scalaz.WriterT<W, F, B> ap(scala.Function0<scalaz.WriterT<W, F, scala.Function1<A, B>>>, scalaz.Apply<F>, scalaz.Semigroup<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_2
       4: aload_1
       5: invokedynamic #423,  0            // InvokeDynamic #12:apply:(Lscala/Function0;)Lscala/Function0;
      10: aload_0
      11: invokedynamic #431,  0            // InvokeDynamic #13:apply:(Lscalaz/WriterT;)Lscala/Function0;
      16: aload_3
      17: invokedynamic #443,  0            // InvokeDynamic #14:apply:(Lscalaz/Semigroup;)Lscala/Function2;
      22: invokeinterface #449,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      27: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      30: areturn

  public <B> scalaz.WriterT<W, F, B> flatMap(scala.Function1<A, scalaz.WriterT<W, F, B>>, scalaz.Bind<F>, scalaz.Semigroup<W>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #459,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
       7: invokeinterface #462,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      12: aload_2
      13: aload_3
      14: invokevirtual #465                // Method flatMapF:(Lscala/Function1;Lscalaz/Bind;Lscalaz/Semigroup;)Lscalaz/WriterT;
      17: areturn

  public <B> scalaz.WriterT<W, F, B> flatMapF(scala.Function1<A, F>, scalaz.Bind<F>, scalaz.Semigroup<W>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_2
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #474,  0            // InvokeDynamic #16:apply:(Lscala/Function1;Lscalaz/Bind;Lscalaz/Semigroup;)Lscala/Function1;
      16: invokeinterface #410,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      24: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Traverse<F>);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: invokevirtual #279                // Method run:()Ljava/lang/Object;
       6: aload_2
       7: aload_1
       8: invokedynamic #486,  0            // InvokeDynamic #17:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      13: aload_2
      14: invokeinterface #491,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      19: invokedynamic #497,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
      24: invokeinterface #500,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      29: areturn

  public <B> B foldRight(scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>, scalaz.Foldable<F>);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #279                // Method run:()Ljava/lang/Object;
       5: aload_2
       6: invokedynamic #516,  0            // InvokeDynamic #19:apply:(Lscala/Function2;)Lscala/Function1;
      11: astore        5
      13: astore        4
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload_3
      21: aload         4
      23: aload_1
      24: aload         5
      26: invokedynamic #528,  0            // InvokeDynamic #20:apply:(Lscala/Function1;)Lscala/Function2;
      31: invokeinterface #531,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      36: areturn

  public <C, D> scalaz.WriterT<C, F, D> bimap(scala.Function1<W, C>, scala.Function1<A, D>, scalaz.Functor<F>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_3
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_1
       9: aload_2
      10: invokedynamic #547,  0            // InvokeDynamic #21:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      23: areturn

  public <C> scalaz.WriterT<C, F, A> leftMap(scala.Function1<W, C>, scalaz.Functor<F>);
    Code:
       0: invokedynamic #554,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
       5: astore_3
       6: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       9: aload_2
      10: aload_0
      11: invokevirtual #279                // Method run:()Ljava/lang/Object;
      14: aload_1
      15: aload_3
      16: invokedynamic #547,  0            // InvokeDynamic #21:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      21: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      26: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      29: areturn

  public <G, C, D> G bitraverse(scala.Function1<W, G>, scala.Function1<A, G>, scalaz.Applicative<G>, scalaz.Traverse<F>);
    Code:
       0: aload_3
       1: aload         4
       3: aload_0
       4: invokevirtual #279                // Method run:()Ljava/lang/Object;
       7: aload_3
       8: aload_1
       9: aload_2
      10: invokedynamic #566,  0            // InvokeDynamic #23:apply:(Lscalaz/Applicative;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      15: aload_3
      16: invokeinterface #491,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: invokedynamic #571,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
      26: invokeinterface #500,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      31: areturn

  public <R, S> scalaz.IndexedReaderWriterStateT<R, W, S, S, F, A> rwst(scalaz.Functor<F>);
    Code:
       0: getstatic     #577                // Field scalaz/package$ReaderWriterStateT$.MODULE$:Lscalaz/package$ReaderWriterStateT$;
       3: aload_0
       4: aload_1
       5: invokedynamic #585,  0            // InvokeDynamic #25:apply:(Lscalaz/WriterT;Lscalaz/Functor;)Lscala/Function2;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #590                // Field scalaz/IndexedReaderWriterStateT$.MODULE$:Lscalaz/IndexedReaderWriterStateT$;
      19: aload_2
      20: invokedynamic #598,  0            // InvokeDynamic #26:apply:(Lscala/Function2;)Lscala/Function2;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: new           #20                 // class scalaz/IndexedReaderWriterStateT$$anon$1
      34: dup
      35: aload_3
      36: invokespecial #601                // Method scalaz/IndexedReaderWriterStateT$$anon$1."<init>":(Lscala/Function2;)V
      39: areturn

  public <G> scalaz.WriterT<G, F, A> wpoint(scalaz.Functor<F>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_1
       4: aload_0
       5: invokevirtual #279                // Method run:()Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #617,  0            // InvokeDynamic #27:apply:(Lscalaz/Applicative;)Lscala/Function1;
      14: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      22: areturn

  public <X> scalaz.WriterT<X, F, A> colocal(scala.Function1<W, X>, scalaz.Functor<F>);
    Code:
       0: aload_1
       1: invokedynamic #297,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       6: astore_3
       7: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
      10: aload_2
      11: aload_0
      12: invokevirtual #279                // Method run:()Ljava/lang/Object;
      15: aload_3
      16: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      21: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
      24: areturn

  public <W, F, A> scalaz.WriterT<W, F, A> copy(F);
    Code:
       0: new           #2                  // class scalaz/WriterT
       3: dup
       4: aload_1
       5: invokespecial #84                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <W, F, A> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #279                // Method run:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #625                // String WriterT
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #279                // Method run:()Ljava/lang/Object;
      24: areturn
      25: new           #632                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #638                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #641                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #644                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #653                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #657                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/WriterT
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #653                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #664                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #653                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #668                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/WriterT
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/WriterT
      27: astore_3
      28: aload_0
      29: invokevirtual #279                // Method run:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #279                // Method run:()Ljava/lang/Object;
      36: invokestatic  #672                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public static final scala.Tuple2 $anonfun$mapWritten$1(scala.Function1, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       9: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_1
      15: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn

  public static final java.lang.Object $anonfun$written$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$value$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$swap$1(scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       8: aload_0
       9: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
      12: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static final java.lang.Object $anonfun$$colon$plus$plus$greater$1(scalaz.Semigroup, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$$colon$plus$plus$greater$greater$2(scala.Function1, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       5: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final scala.Tuple2 $anonfun$$colon$plus$plus$greater$greater$1(scalaz.Semigroup, scala.Function1, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_2
       6: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       9: aload_1
      10: aload_2
      11: invokedynamic #706,  0            // InvokeDynamic #28:apply:(Lscala/Function1;Lscala/Tuple2;)Lscala/Function0;
      16: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      21: aload_2
      22: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      25: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      28: areturn

  public static final java.lang.Object $anonfun$$less$plus$plus$colon$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$$less$plus$plus$colon$1(scalaz.Semigroup, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #717,  0            // InvokeDynamic #29:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$$less$less$plus$plus$colon$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$$less$less$plus$plus$colon$1(scalaz.Semigroup, scala.Function1, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: aload_2
      16: invokedynamic #727,  0            // InvokeDynamic #30:apply:(Lscala/Tuple2;)Lscala/Function0;
      21: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      26: aload_2
      27: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      30: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      33: areturn

  public static final java.lang.Object $anonfun$reset$1(scalaz.Monoid, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #734,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static final scala.Tuple2 $anonfun$map$1(scala.Function1, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_1
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: aload_0
       9: aload_1
      10: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: areturn

  public static final scala.Tuple2 $anonfun$mapF$2(scala.Tuple2, java.lang.Object);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: aload_1
       9: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      12: areturn

  public static final java.lang.Object $anonfun$mapF$1(scalaz.Bind, scala.Function1, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       6: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_2
      12: invokedynamic #746,  0            // InvokeDynamic #31:apply:(Lscala/Tuple2;)Lscala/Function1;
      17: invokeinterface #747,  3          // InterfaceMethod scalaz/Bind.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static final java.lang.Object $anonfun$ap$1(scala.Function0);
    Code:
       0: aload_0
       1: invokeinterface #752,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2                  // class scalaz/WriterT
       9: invokevirtual #279                // Method run:()Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$ap$2(scalaz.WriterT);
    Code:
       0: aload_0
       1: invokevirtual #279                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$ap$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Tuple2 $anonfun$ap$3(scalaz.Semigroup, scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        4
      11: aload_1
      12: astore        5
      14: aload_2
      15: astore        6
      17: aload         5
      19: ifnull        93
      22: aload         5
      24: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: astore        7
      29: aload         5
      31: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      34: checkcast     #303                // class scala/Function1
      37: astore        8
      39: aload         6
      41: ifnull        93
      44: aload         6
      46: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
      49: astore        9
      51: aload         6
      53: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      56: astore        10
      58: new           #676                // class scala/Tuple2
      61: dup
      62: aload_0
      63: aload         7
      65: aload         9
      67: invokedynamic #762,  0            // InvokeDynamic #32:apply:(Ljava/lang/Object;)Lscala/Function0;
      72: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      77: aload         8
      79: aload         10
      81: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      89: astore_3
      90: goto          103
      93: new           #764                // class scala/MatchError
      96: dup
      97: aload         4
      99: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     102: athrow
     103: aload_3
     104: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scalaz.WriterT);
    Code:
       0: aload_0
       1: invokevirtual #279                // Method run:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$flatMapF$3(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$flatMapF$2(scalaz.Semigroup, scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       9: aload_2
      10: invokedynamic #778,  0            // InvokeDynamic #33:apply:(Lscala/Tuple2;)Lscala/Function0;
      15: invokeinterface #695,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      20: aload_2
      21: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      24: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      27: areturn

  public static final java.lang.Object $anonfun$flatMapF$1(scala.Function1, scalaz.Bind, scalaz.Semigroup, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       5: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload_1
      13: aload         4
      15: aload_2
      16: aload_3
      17: invokedynamic #786,  0            // InvokeDynamic #34:apply:(Lscalaz/Semigroup;Lscala/Tuple2;)Lscala/Function1;
      22: invokeinterface #747,  3          // InterfaceMethod scalaz/Bind.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: areturn

  public static final scala.Tuple2 $anonfun$traverse$2(java.lang.Object, java.lang.Object);
    Code:
       0: new           #676                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final java.lang.Object $anonfun$traverse$1(scalaz.Applicative, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        41
       4: aload_2
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: aload_0
      17: aload_1
      18: aload         5
      20: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload         4
      27: invokedynamic #798,  0            // InvokeDynamic #35:apply:(Ljava/lang/Object;)Lscala/Function1;
      32: invokeinterface #500,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      37: astore_3
      38: goto          50
      41: new           #764                // class scala/MatchError
      44: dup
      45: aload_2
      46: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: aload_3
      51: areturn

  public static final scalaz.WriterT $anonfun$traverse$3(java.lang.Object);
    Code:
       0: new           #2                  // class scalaz/WriterT
       3: dup
       4: aload_0
       5: invokespecial #84                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public static final java.lang.Object $anonfun$foldRight$2(scala.Function2, scala.Tuple2, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
       5: aload_2
       6: invokeinterface #805,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static final scala.Function1 $anonfun$foldRight$1(scala.Function2, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #811,  0            // InvokeDynamic #36:apply:(Lscala/Function2;Lscala/Tuple2;)Lscala/Function1;
       7: areturn

  public static final scala.Tuple2 $anonfun$bimap$1(scala.Function1, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        43
       4: aload_2
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: new           #676                // class scala/Tuple2
      19: dup
      20: aload_0
      21: aload         4
      23: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_1
      29: aload         5
      31: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      39: astore_3
      40: goto          52
      43: new           #764                // class scala/MatchError
      46: dup
      47: aload_2
      48: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_3
      53: areturn

  public static final java.lang.Object $anonfun$leftMap$1(java.lang.Object);
    Code:
       0: getstatic     #819                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #822                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #305,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$bitraverse$1(scalaz.Applicative, scala.Function1, scala.Function1, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        43
       4: aload_3
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        5
      10: aload_3
      11: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        6
      16: aload_0
      17: aload_1
      18: aload         5
      20: invokedynamic #836,  0            // InvokeDynamic #37:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      25: aload_2
      26: aload         6
      28: invokedynamic #840,  0            // InvokeDynamic #38:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      33: invokeinterface #844,  3          // InterfaceMethod scalaz/Applicative.tuple2:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      38: astore        4
      40: goto          52
      43: new           #764                // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload         4
      54: areturn

  public static final scalaz.WriterT $anonfun$bitraverse$4(java.lang.Object);
    Code:
       0: getstatic     #38                 // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_0
       4: invokevirtual #112                // Method scalaz/WriterT$.writerT:(Ljava/lang/Object;)Lscalaz/WriterT;
       7: areturn

  public static final scala.Tuple3 $anonfun$rwst$2(java.lang.Object, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_1
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #850                // class scala/Tuple3
      18: dup
      19: aload_3
      20: aload         4
      22: aload_0
      23: invokespecial #853                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      26: astore_2
      27: goto          39
      30: new           #764                // class scala/MatchError
      33: dup
      34: aload_1
      35: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      38: athrow
      39: aload_2
      40: areturn

  public static final java.lang.Object $anonfun$rwst$1(scalaz.WriterT, scalaz.Functor, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #279                // Method run:()Ljava/lang/Object;
       5: aload_3
       6: invokedynamic #861,  0            // InvokeDynamic #39:apply:(Ljava/lang/Object;)Lscala/Function1;
      11: invokeinterface #80,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      16: areturn

  public static final java.lang.Object $anonfun$wpoint$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Tuple2 $anonfun$wpoint$1(scalaz.Applicative, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        40
       4: aload_1
       5: invokevirtual #679                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #682                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #676                // class scala/Tuple2
      18: dup
      19: aload_0
      20: aload_3
      21: invokedynamic #868,  0            // InvokeDynamic #40:apply:(Ljava/lang/Object;)Lscala/Function0;
      26: invokeinterface #871,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      31: aload         4
      33: invokespecial #685                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      36: astore_2
      37: goto          49
      40: new           #764                // class scala/MatchError
      43: dup
      44: aload_1
      45: invokespecial #765                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      48: athrow
      49: aload_2
      50: areturn

  public scalaz.WriterT(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #270                // Field run:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #875                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #879                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #891,  0            // InvokeDynamic #41:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
