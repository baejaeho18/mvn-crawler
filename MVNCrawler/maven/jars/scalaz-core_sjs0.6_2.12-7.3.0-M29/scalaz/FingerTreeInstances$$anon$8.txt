Compiled from "FingerTree.scala"
public final class scalaz.FingerTreeInstances$$anon$8 implements scalaz.Equal<scalaz.FingerTree<V, A>> {
  private final scalaz.syntax.EqualSyntax<scalaz.FingerTree<V, A>> equalSyntax;

  private final scalaz.Equal evidence$9$1;

  public <G> scalaz.Equal<G> contramap(scala.Function1<G, scalaz.FingerTree<V, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // InterfaceMethod scalaz/Equal.contramap$:(Lscalaz/Equal;Lscala/Function1;)Lscalaz/Equal;
       5: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.FingerTree<V, A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #45                 // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.EqualSyntax<scalaz.FingerTree<V, A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #49                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.FingerTree<V, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public boolean equal(scalaz.FingerTree<V, A>, scalaz.FingerTree<V, A>);
    Code:
       0: getstatic     #64                 // Field scalaz/Equal$.MODULE$:Lscalaz/Equal$;
       3: getstatic     #69                 // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       6: aload_0
       7: getfield      #71                 // Field evidence$9$1:Lscalaz/Equal;
      10: invokevirtual #74                 // Method scalaz/std/stream$.streamEqual:(Lscalaz/Equal;)Lscalaz/Equal;
      13: astore_3
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_3
      20: aload_1
      21: invokevirtual #80                 // Method scalaz/FingerTree.toStream:()Lscala/collection/immutable/Stream;
      24: aload_2
      25: invokevirtual #80                 // Method scalaz/FingerTree.toStream:()Lscala/collection/immutable/Stream;
      28: invokeinterface #83,  3           // InterfaceMethod scalaz/Equal.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ireturn

  public boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #76                 // class scalaz/FingerTree
       5: aload_2
       6: checkcast     #76                 // class scalaz/FingerTree
       9: invokevirtual #88                 // Method equal:(Lscalaz/FingerTree;Lscalaz/FingerTree;)Z
      12: ireturn

  public scalaz.FingerTreeInstances$$anon$8(scalaz.FingerTreeInstances, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #71                 // Field evidence$9$1:Lscalaz/Equal;
       5: aload_0
       6: invokespecial #95                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #99                 // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
      13: return
}
