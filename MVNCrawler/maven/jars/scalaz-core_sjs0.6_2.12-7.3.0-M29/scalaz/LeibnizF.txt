Compiled from "LeibnizF.scala"
public abstract class scalaz.LeibnizF<A, B> {
  public static <A, B> scalaz.LeibnizF<B, A> symm(scalaz.LeibnizF<A, B>);
    Code:
       0: getstatic     #19                 // Field scalaz/LeibnizF$.MODULE$:Lscalaz/LeibnizF$;
       3: aload_0
       4: invokevirtual #21                 // Method scalaz/LeibnizF$.symm:(Lscalaz/LeibnizF;)Lscalaz/LeibnizF;
       7: areturn

  public static <A, B, C> scalaz.LeibnizF<A, C> trans(scalaz.LeibnizF<B, C>, scalaz.LeibnizF<A, B>);
    Code:
       0: getstatic     #19                 // Field scalaz/LeibnizF$.MODULE$:Lscalaz/LeibnizF$;
       3: aload_0
       4: aload_1
       5: invokevirtual #27                 // Method scalaz/LeibnizF$.trans:(Lscalaz/LeibnizF;Lscalaz/LeibnizF;)Lscalaz/LeibnizF;
       8: areturn

  public static <A> scalaz.LeibnizF<A, A> refl();
    Code:
       0: getstatic     #19                 // Field scalaz/LeibnizF$.MODULE$:Lscalaz/LeibnizF$;
       3: invokevirtual #32                 // Method scalaz/LeibnizF$.refl:()Lscalaz/LeibnizF;
       6: areturn

  public <X> B apply(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method subst:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public abstract <F> F subst(F);

  public scalaz.LeibnizF();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: return
}
