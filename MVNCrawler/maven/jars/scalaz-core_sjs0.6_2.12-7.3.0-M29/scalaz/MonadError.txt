Compiled from "MonadError.scala"
public interface scalaz.MonadError<F, S> extends scalaz.Monad<F>, scalaz.ApplicativeError<F, S> {
  public static <F, G, E> scalaz.MonadError<F, E> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.MonadError<G, E>);
    Code:
       0: getstatic     #41                 // Field scalaz/MonadError$.MODULE$:Lscalaz/MonadError$;
       3: aload_0
       4: aload_1
       5: invokevirtual #43                 // Method scalaz/MonadError$.fromIso:(Lscalaz/Isomorphisms$Iso2;Lscalaz/MonadError;)Lscalaz/MonadError;
       8: areturn

  public abstract void scalaz$MonadError$_setter_$monadErrorSyntax_$eq(scalaz.syntax.MonadErrorSyntax<F, S>);

  public static java.lang.Object emap$(scalaz.MonadError, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #56                 // InterfaceMethod emap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F emap(F, scala.Function1<A, scalaz.$bslash$div<S, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokedynamic #82,  0             // InvokeDynamic #0:apply:(Lscalaz/MonadError;Lscala/Function1;)Lscala/Function1;
       9: invokeinterface #85,  3           // InterfaceMethod bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static scalaz.MonadError$MonadErrorLaw monadErrorLaw$(scalaz.MonadError);
    Code:
       0: aload_0
       1: invokespecial #92                 // InterfaceMethod monadErrorLaw:()Lscalaz/MonadError$MonadErrorLaw;
       4: areturn

  public default scalaz.MonadError<F, S>.MonadErrorLaw monadErrorLaw();
    Code:
       0: new           #25                 // class scalaz/MonadError$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #97                 // Method scalaz/MonadError$$anon$1."<init>":(Lscalaz/MonadError;)V
       8: areturn

  public abstract scalaz.syntax.MonadErrorSyntax<F, S> monadErrorSyntax();

  public static java.lang.Object $anonfun$emap$2(scalaz.MonadError, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #105,  2          // InterfaceMethod raiseError:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$emap$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$emap$3(scalaz.MonadError, java.lang.Object);
    Code:
       0: aload_1
       1: invokedynamic #117,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;)Lscala/Function0;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokeinterface #123,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$emap$1(scalaz.MonadError, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #131,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #133                // class scalaz/$bslash$div
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: astore_3
      17: aload_3
      18: instanceof    #135                // class scalaz/$minus$bslash$div
      21: ifeq          44
      24: aload_3
      25: checkcast     #135                // class scalaz/$minus$bslash$div
      28: invokevirtual #137                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      31: astore        5
      33: aload_0
      34: aload         5
      36: invokestatic  #139                // InterfaceMethod $anonfun$emap$2:(Lscalaz/MonadError;Ljava/lang/Object;)Ljava/lang/Object;
      39: astore        4
      41: goto          80
      44: aload_3
      45: instanceof    #141                // class scalaz/$bslash$div$minus
      48: ifeq          71
      51: aload_3
      52: checkcast     #141                // class scalaz/$bslash$div$minus
      55: invokevirtual #144                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      58: astore        6
      60: aload_0
      61: aload         6
      63: invokestatic  #146                // InterfaceMethod $anonfun$emap$3:(Lscalaz/MonadError;Ljava/lang/Object;)Ljava/lang/Object;
      66: astore        4
      68: goto          80
      71: new           #148                // class scala/MatchError
      74: dup
      75: aload_3
      76: invokespecial #151                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow
      80: aload         4
      82: areturn

  public static void $init$(scalaz.MonadError);
    Code:
       0: aload_0
       1: new           #27                 // class scalaz/MonadError$$anon$2
       4: dup
       5: aload_0
       6: invokespecial #157                // Method scalaz/MonadError$$anon$2."<init>":(Lscalaz/MonadError;)V
       9: invokeinterface #159,  2          // InterfaceMethod scalaz$MonadError$_setter_$monadErrorSyntax_$eq:(Lscalaz/syntax/MonadErrorSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #173,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
