Compiled from "Reducer.scala"
public interface scalaz.Reducer<C, M> {
  public static <C, M> scalaz.Reducer<C, M> apply(scala.Function1<C, M>, scala.Function2<C, M, M>, scala.Function2<M, C, M>, scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #31                 // class scalaz/ReducerInstances$$anon$5
      11: dup
      12: aconst_null
      13: aload_3
      14: aload_0
      15: aload_2
      16: aload_1
      17: invokespecial #54                 // Method scalaz/ReducerInstances$$anon$5."<init>":(Lscalaz/ReducerInstances;Lscalaz/Semigroup;Lscala/Function1;Lscala/Function2;Lscala/Function2;)V
      20: areturn

  public static <M> scalaz.Reducer<M, M> identityReducer(scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: aload_0
       4: invokevirtual #60                 // Method scalaz/Reducer$.identityReducer:(Lscalaz/Semigroup;)Lscalaz/Reducer;
       7: areturn

  public static <C, M> scalaz.Reducer<C, M> unitLazyConsReducer(scala.Function1<C, M>, scala.Function2<C, scala.Function0<M>, M>, scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #37                 // class scalaz/ReducerInstances$$anon$8
      11: dup
      12: aconst_null
      13: aload_2
      14: aload_0
      15: aload_1
      16: invokespecial #67                 // Method scalaz/ReducerInstances$$anon$8."<init>":(Lscalaz/ReducerInstances;Lscalaz/Semigroup;Lscala/Function1;Lscala/Function2;)V
      19: areturn

  public static <C, M> scalaz.Reducer<C, M> unitConsReducer(scala.Function1<C, M>, scala.Function2<C, M, M>, scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #35                 // class scalaz/ReducerInstances$$anon$7
      11: dup
      12: aconst_null
      13: aload_2
      14: aload_0
      15: aload_1
      16: invokespecial #70                 // Method scalaz/ReducerInstances$$anon$7."<init>":(Lscalaz/ReducerInstances;Lscalaz/Semigroup;Lscala/Function1;Lscala/Function2;)V
      19: areturn

  public static <C, M> scalaz.Reducer<C, M> unitReducer(scala.Function1<C, M>, scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #33                 // class scalaz/ReducerInstances$$anon$6
      11: dup
      12: aconst_null
      13: aload_1
      14: aload_0
      15: invokespecial #76                 // Method scalaz/ReducerInstances$$anon$6."<init>":(Lscalaz/ReducerInstances;Lscalaz/Semigroup;Lscala/Function1;)V
      18: areturn

  public static <F, A, B> B foldReduce(F, scalaz.Monoid<B>, scalaz.Foldable<F>, scalaz.Reducer<A, B>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #85                 // Method scalaz/Reducer$.foldReduce:(Ljava/lang/Object;Lscalaz/Monoid;Lscalaz/Foldable;Lscalaz/Reducer;)Ljava/lang/Object;
      10: areturn

  public static <C, M> scalaz.Reducer<C, M> reducer(scala.Function1<C, M>, scala.Function2<C, M, M>, scala.Function2<M, C, M>, scalaz.Semigroup<M>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #31                 // class scalaz/ReducerInstances$$anon$5
      11: dup
      12: aconst_null
      13: aload_3
      14: aload_0
      15: aload_2
      16: aload_1
      17: invokespecial #54                 // Method scalaz/ReducerInstances$$anon$5."<init>":(Lscalaz/ReducerInstances;Lscalaz/Semigroup;Lscala/Function1;Lscala/Function2;Lscala/Function2;)V
      20: areturn

  public static <A> scalaz.Reducer<scala.Option<A>, java.lang.Object> LastOptionReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #91                 // Method scalaz/Reducer$.LastOptionReducer:()Lscalaz/Reducer;
       6: areturn

  public static <A> scalaz.Reducer<A, java.lang.Object> LastReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #95                 // Method scalaz/Reducer$.LastReducer:()Lscalaz/Reducer;
       6: areturn

  public static <A> scalaz.Reducer<scala.Option<A>, java.lang.Object> FirstOptionReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #98                 // Method scalaz/Reducer$.FirstOptionReducer:()Lscalaz/Reducer;
       6: areturn

  public static <A> scalaz.Reducer<A, java.lang.Object> FirstReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #101                // Method scalaz/Reducer$.FirstReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<scala.math.BigInt, java.lang.Object> BigIntProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #105                // Method scalaz/Reducer$.BigIntProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> ShortProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #109                // Method scalaz/Reducer$.ShortProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> LongProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #112                // Method scalaz/Reducer$.LongProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> ByteProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #115                // Method scalaz/Reducer$.ByteProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> CharProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #118                // Method scalaz/Reducer$.CharProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> IntProductReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #121                // Method scalaz/Reducer$.IntProductReducer:()Lscalaz/Reducer;
       6: areturn

  public static <A> scalaz.Reducer<A, java.lang.Object> DualReducer(scalaz.Semigroup<A>);
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: aload_0
       4: invokevirtual #126                // Method scalaz/Reducer$.DualReducer:(Lscalaz/Semigroup;)Lscalaz/Reducer;
       7: areturn

  public static <A> scalaz.Reducer<scala.Function1<A, A>, scalaz.Endo<A>> EndoReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #130                // Method scalaz/Reducer$.EndoReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> AllReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #133                // Method scalaz/Reducer$.AllReducer:()Lscalaz/Reducer;
       6: areturn

  public static scalaz.Reducer<java.lang.Object, java.lang.Object> AnyReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #136                // Method scalaz/Reducer$.AnyReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scala.collection.immutable.Vector<C>> VectorReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #140                // Method scalaz/Reducer$.VectorReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scala.runtime.BoxedUnit> UnitReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #144                // Method scalaz/Reducer$.UnitReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scala.collection.immutable.Stream<C>> StreamReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #148                // Method scalaz/Reducer$.StreamReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scalaz.NonEmptyList<C>> ReverseNonEmptyListReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #152                // Method scalaz/Reducer$.ReverseNonEmptyListReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scalaz.NonEmptyList<C>> NonEmptyListReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #155                // Method scalaz/Reducer$.NonEmptyListReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scalaz.IList<C>> IListReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #159                // Method scalaz/Reducer$.IListReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scala.collection.immutable.List<C>> ReverseListReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #163                // Method scalaz/Reducer$.ReverseListReducer:()Lscalaz/Reducer;
       6: areturn

  public static <C> scalaz.Reducer<C, scala.collection.immutable.List<C>> ListReducer();
    Code:
       0: getstatic     #50                 // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
       3: invokevirtual #166                // Method scalaz/Reducer$.ListReducer:()Lscalaz/Reducer;
       6: areturn

  public abstract scalaz.Semigroup<M> semigroup();

  public abstract M unit(C);

  public abstract M snoc(M, C);

  public abstract M cons(C, M);

  public static java.lang.Object append$(scalaz.Reducer, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #188                // InterfaceMethod append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default M append(M, scala.Function0<M>);
    Code:
       0: aload_0
       1: invokeinterface #194,  1          // InterfaceMethod semigroup:()Lscalaz/Semigroup;
       6: aload_1
       7: aload_2
       8: invokeinterface #197,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static scalaz.Reducer compose$(scalaz.Reducer, scalaz.Reducer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #204                // InterfaceMethod compose:(Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public default <N> scalaz.Reducer<C, scala.Tuple2<M, N>> compose(scalaz.Reducer<C, N>);
    Code:
       0: aload_0
       1: invokeinterface #194,  1          // InterfaceMethod semigroup:()Lscalaz/Semigroup;
       6: astore_2
       7: aload_1
       8: invokeinterface #194,  1          // InterfaceMethod semigroup:()Lscalaz/Semigroup;
      13: astore_3
      14: new           #24                 // class scalaz/Reducer$$anon$1
      17: dup
      18: aload_0
      19: aload_2
      20: aload_3
      21: aload_1
      22: invokespecial #208                // Method scalaz/Reducer$$anon$1."<init>":(Lscalaz/Reducer;Lscalaz/Semigroup;Lscalaz/Semigroup;Lscalaz/Reducer;)V
      25: areturn

  public static scalaz.Maybe unfoldlOpt$(scalaz.Reducer, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #217                // InterfaceMethod unfoldlOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public default <B> scalaz.Maybe<M> unfoldlOpt(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<B, C>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: aload_0
      11: aload_2
      12: invokedynamic #245,  0            // InvokeDynamic #0:apply:(Lscalaz/Reducer;Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: dup
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: astore_3
      26: aload         4
      28: invokedynamic #254,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      33: invokeinterface #258,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      38: astore        5
      40: aload_3
      41: instanceof    #21                 // class scalaz/Maybe$Just
      44: ifeq          70
      47: aload_3
      48: checkcast     #21                 // class scalaz/Maybe$Just
      51: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: astore        7
      56: aload         5
      58: aload         7
      60: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore        6
      67: goto          94
      70: aload_3
      71: instanceof    #16                 // class scalaz/Maybe$Empty
      74: ifeq          85
      77: invokestatic  #266                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      80: astore        6
      82: goto          94
      85: new           #268                // class scala/MatchError
      88: dup
      89: aload_3
      90: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         6
      96: checkcast     #18                 // class scalaz/Maybe
      99: areturn

  public static scalaz.Maybe scalaz$Reducer$$defaultUnfoldlOpt$(scalaz.Reducer, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #280                // InterfaceMethod scalaz$Reducer$$defaultUnfoldlOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public default <B> scalaz.Maybe<M> scalaz$Reducer$$defaultUnfoldlOpt(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<B, C>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: aload_0
      11: aload_2
      12: invokedynamic #245,  0            // InvokeDynamic #0:apply:(Lscalaz/Reducer;Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: dup
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: astore_3
      26: aload         4
      28: invokedynamic #254,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      33: invokeinterface #258,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      38: astore        5
      40: aload_3
      41: instanceof    #21                 // class scalaz/Maybe$Just
      44: ifeq          70
      47: aload_3
      48: checkcast     #21                 // class scalaz/Maybe$Just
      51: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: astore        7
      56: aload         5
      58: aload         7
      60: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore        6
      67: goto          94
      70: aload_3
      71: instanceof    #16                 // class scalaz/Maybe$Empty
      74: ifeq          85
      77: invokestatic  #266                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      80: astore        6
      82: goto          94
      85: new           #268                // class scala/MatchError
      88: dup
      89: aload_3
      90: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         6
      96: checkcast     #18                 // class scalaz/Maybe
      99: areturn

  public static java.lang.Object unfoldl$(scalaz.Reducer, java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #290                // InterfaceMethod unfoldl:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <B> M unfoldl(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<B, C>>>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #217,  3          // InterfaceMethod unfoldlOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       8: dup
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: astore        4
      16: aload         4
      18: instanceof    #21                 // class scalaz/Maybe$Just
      21: ifeq          40
      24: aload         4
      26: checkcast     #21                 // class scalaz/Maybe$Just
      29: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      32: invokestatic  #295                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        5
      37: goto          67
      40: aload         4
      42: instanceof    #16                 // class scalaz/Maybe$Empty
      45: ifeq          57
      48: aload_3
      49: invokestatic  #299                // InterfaceMethod $anonfun$unfoldl$1:(Lscalaz/Monoid;)Ljava/lang/Object;
      52: astore        5
      54: goto          67
      57: new           #268                // class scala/MatchError
      60: dup
      61: aload         4
      63: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         5
      69: areturn

  public static scalaz.Maybe unfoldrOpt$(scalaz.Reducer, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #304                // InterfaceMethod unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public default <B> scalaz.Maybe<M> unfoldrOpt(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<C, B>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: aload_0
      11: aload_2
      12: invokedynamic #310,  0            // InvokeDynamic #2:apply:(Lscalaz/Reducer;Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: dup
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: astore_3
      26: aload         4
      28: invokedynamic #254,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      33: invokeinterface #258,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      38: astore        5
      40: aload_3
      41: instanceof    #21                 // class scalaz/Maybe$Just
      44: ifeq          70
      47: aload_3
      48: checkcast     #21                 // class scalaz/Maybe$Just
      51: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: astore        7
      56: aload         5
      58: aload         7
      60: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore        6
      67: goto          94
      70: aload_3
      71: instanceof    #16                 // class scalaz/Maybe$Empty
      74: ifeq          85
      77: invokestatic  #266                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      80: astore        6
      82: goto          94
      85: new           #268                // class scala/MatchError
      88: dup
      89: aload_3
      90: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         6
      96: checkcast     #18                 // class scalaz/Maybe
      99: areturn

  public static scalaz.Maybe scalaz$Reducer$$defaultUnfoldrOpt$(scalaz.Reducer, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #318                // InterfaceMethod scalaz$Reducer$$defaultUnfoldrOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public default <B> scalaz.Maybe<M> scalaz$Reducer$$defaultUnfoldrOpt(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<C, B>>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: aload_0
      11: aload_2
      12: invokedynamic #310,  0            // InvokeDynamic #2:apply:(Lscalaz/Reducer;Lscala/Function1;)Lscala/Function1;
      17: astore        4
      19: dup
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: astore_3
      26: aload         4
      28: invokedynamic #254,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      33: invokeinterface #258,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      38: astore        5
      40: aload_3
      41: instanceof    #21                 // class scalaz/Maybe$Just
      44: ifeq          70
      47: aload_3
      48: checkcast     #21                 // class scalaz/Maybe$Just
      51: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: astore        7
      56: aload         5
      58: aload         7
      60: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: astore        6
      67: goto          94
      70: aload_3
      71: instanceof    #16                 // class scalaz/Maybe$Empty
      74: ifeq          85
      77: invokestatic  #266                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      80: astore        6
      82: goto          94
      85: new           #268                // class scala/MatchError
      88: dup
      89: aload_3
      90: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         6
      96: checkcast     #18                 // class scalaz/Maybe
      99: areturn

  public static java.lang.Object unfoldr$(scalaz.Reducer, java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #322                // InterfaceMethod unfoldr:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public default <B> M unfoldr(B, scala.Function1<B, scalaz.Maybe<scala.Tuple2<C, B>>>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #304,  3          // InterfaceMethod unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       8: dup
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: astore        4
      16: aload         4
      18: instanceof    #21                 // class scalaz/Maybe$Just
      21: ifeq          40
      24: aload         4
      26: checkcast     #21                 // class scalaz/Maybe$Just
      29: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      32: invokestatic  #295                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        5
      37: goto          67
      40: aload         4
      42: instanceof    #16                 // class scalaz/Maybe$Empty
      45: ifeq          57
      48: aload_3
      49: invokestatic  #326                // InterfaceMethod $anonfun$unfoldr$1:(Lscalaz/Monoid;)Ljava/lang/Object;
      52: astore        5
      54: goto          67
      57: new           #268                // class scala/MatchError
      60: dup
      61: aload         4
      63: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload         5
      69: areturn

  public static scalaz.Reducer$ReducerLaw reducerLaw$(scalaz.Reducer);
    Code:
       0: aload_0
       1: invokespecial #332                // InterfaceMethod reducerLaw:()Lscalaz/Reducer$ReducerLaw;
       4: areturn

  public default scalaz.Reducer<C, M>.ReducerLaw reducerLaw();
    Code:
       0: new           #26                 // class scalaz/Reducer$$anon$2
       3: dup
       4: aload_0
       5: invokespecial #336                // Method scalaz/Reducer$$anon$2."<init>":(Lscalaz/Reducer;)V
       8: areturn

  private java.lang.Object rec$1(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: astore        4
      12: aload         4
      14: instanceof    #21                 // class scalaz/Maybe$Just
      17: ifeq          68
      20: aload         4
      22: checkcast     #21                 // class scalaz/Maybe$Just
      25: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      28: checkcast     #342                // class scala/Tuple2
      31: astore        5
      33: aload         5
      35: ifnull        68
      38: aload         5
      40: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: astore        6
      45: aload         5
      47: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: astore        7
      52: aload         6
      54: aload_0
      55: aload         7
      57: aload_2
      58: invokeinterface #350,  3          // InterfaceMethod cons:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore_2
      64: astore_1
      65: goto          0
      68: aload_2
      69: areturn

  public static java.lang.Object $anonfun$defaultUnfoldlOpt$1(scalaz.Reducer, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        100
       4: aload_2
       5: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: aload_3
      16: aload_0
      17: aload         4
      19: invokeinterface #354,  2          // InterfaceMethod unit:(Ljava/lang/Object;)Ljava/lang/Object;
      24: astore        6
      26: astore        5
      28: aload_1
      29: aload         5
      31: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #18                 // class scalaz/Maybe
      39: astore        7
      41: aload         7
      43: instanceof    #21                 // class scalaz/Maybe$Just
      46: ifeq          109
      49: aload         7
      51: checkcast     #21                 // class scalaz/Maybe$Just
      54: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      57: checkcast     #342                // class scala/Tuple2
      60: astore        8
      62: aload         8
      64: ifnull        109
      67: aload         8
      69: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
      72: astore        9
      74: aload         8
      76: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      79: astore        10
      81: aload         9
      83: aload_0
      84: aload         10
      86: aload         6
      88: invokeinterface #350,  3          // InterfaceMethod cons:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: astore        6
      95: astore        5
      97: goto          28
     100: new           #268                // class scala/MatchError
     103: dup
     104: aload_2
     105: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         6
     111: areturn

  public static java.lang.Object $anonfun$unfoldl$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #365,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  private java.lang.Object rec$2(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_3
       1: aload_2
       2: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #18                 // class scalaz/Maybe
      10: astore        4
      12: aload         4
      14: instanceof    #21                 // class scalaz/Maybe$Just
      17: ifeq          68
      20: aload         4
      22: checkcast     #21                 // class scalaz/Maybe$Just
      25: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      28: checkcast     #342                // class scala/Tuple2
      31: astore        5
      33: aload         5
      35: ifnull        68
      38: aload         5
      40: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
      43: astore        6
      45: aload         5
      47: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      50: astore        7
      52: aload_0
      53: aload_1
      54: aload         6
      56: invokeinterface #369,  3          // InterfaceMethod snoc:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: aload         7
      63: astore_2
      64: astore_1
      65: goto          0
      68: aload_1
      69: areturn

  public static java.lang.Object $anonfun$defaultUnfoldrOpt$1(scalaz.Reducer, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        100
       4: aload_2
       5: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: aload_0
      16: aload_3
      17: invokeinterface #354,  2          // InterfaceMethod unit:(Ljava/lang/Object;)Ljava/lang/Object;
      22: aload         4
      24: astore        6
      26: astore        5
      28: aload_1
      29: aload         6
      31: invokeinterface #223,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #18                 // class scalaz/Maybe
      39: astore        7
      41: aload         7
      43: instanceof    #21                 // class scalaz/Maybe$Just
      46: ifeq          109
      49: aload         7
      51: checkcast     #21                 // class scalaz/Maybe$Just
      54: invokevirtual #262                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      57: checkcast     #342                // class scala/Tuple2
      60: astore        8
      62: aload         8
      64: ifnull        109
      67: aload         8
      69: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
      72: astore        9
      74: aload         8
      76: invokevirtual #348                // Method scala/Tuple2._2:()Ljava/lang/Object;
      79: astore        10
      81: aload_0
      82: aload         5
      84: aload         9
      86: invokeinterface #369,  3          // InterfaceMethod snoc:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: aload         10
      93: astore        6
      95: astore        5
      97: goto          28
     100: new           #268                // class scala/MatchError
     103: dup
     104: aload_2
     105: invokespecial #271                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         5
     111: areturn

  public static java.lang.Object $anonfun$unfoldr$1(scalaz.Monoid);
    Code:
       0: aload_0
       1: invokeinterface #365,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       6: areturn

  public static void $init$(scalaz.Reducer);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #391,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
