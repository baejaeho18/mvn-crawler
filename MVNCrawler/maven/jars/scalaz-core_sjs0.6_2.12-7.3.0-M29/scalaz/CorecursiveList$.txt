Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$ extends scalaz.CorecursiveListInstances {
  public static scalaz.CorecursiveList$ MODULE$;

  private final scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.EphemeralStream, scalaz.CorecursiveList> ephemeralStreamIso;

  private final scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scala.collection.immutable.Stream, scalaz.CorecursiveList> streamIso;

  private final scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, scalaz.CorecursiveList> fromList;

  private final scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, scalaz.CorecursiveList> fromVector;

  private final scalaz.MonadPlus<scalaz.CorecursiveList> covariantInstance;

  public static {};
    Code:
       0: new           #2                  // class scalaz/CorecursiveList$
       3: invokespecial #63                 // Method "<init>":()V
       6: return

  public <S, A> scalaz.CorecursiveList<A> apply(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, A>>>);
    Code:
       0: new           #24                 // class scalaz/CorecursiveList$CorecursiveListImpl
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #71                 // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
       9: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scalaz.EphemeralStream, scalaz.CorecursiveList> ephemeralStreamIso();
    Code:
       0: aload_0
       1: getfield      #78                 // Field ephemeralStreamIso:Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, scala.collection.immutable.Stream, scalaz.CorecursiveList> streamIso();
    Code:
       0: aload_0
       1: getfield      #81                 // Field streamIso:Lscalaz/Isomorphisms$Iso2;
       4: areturn

  public scalaz.NaturalTransformation<scala.collection.immutable.LinearSeq, scalaz.CorecursiveList> fromList();
    Code:
       0: aload_0
       1: getfield      #85                 // Field fromList:Lscalaz/NaturalTransformation;
       4: areturn

  public scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, scalaz.CorecursiveList> fromVector();
    Code:
       0: aload_0
       1: getfield      #88                 // Field fromVector:Lscalaz/NaturalTransformation;
       4: areturn

  public <A> scalaz.CorecursiveList<A> fromStream(scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method streamIso:()Lscalaz/Isomorphisms$Iso2;
       4: invokeinterface #98,  1           // InterfaceMethod scalaz/Isomorphisms$Iso2.to:()Ljava/lang/Object;
       9: checkcast     #100                // class scalaz/NaturalTransformation
      12: aload_1
      13: invokeinterface #103,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #26                 // class scalaz/CorecursiveList
      21: areturn

  public <A> scalaz.CorecursiveList<A> cons(A, scalaz.CorecursiveList<A>);
    Code:
       0: getstatic     #112                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       3: invokevirtual #115                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
       6: aload_2
       7: aload_1
       8: invokedynamic #137,  0            // InvokeDynamic #0:apply:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscala/Function1;
      13: astore        4
      15: astore_3
      16: new           #24                 // class scalaz/CorecursiveList$CorecursiveListImpl
      19: dup
      20: aload_3
      21: aload         4
      23: invokespecial #71                 // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      26: areturn

  public scalaz.MonadPlus<scalaz.CorecursiveList> covariantInstance();
    Code:
       0: aload_0
       1: getfield      #144                // Field covariantInstance:Lscalaz/MonadPlus;
       4: areturn

  public <A> scalaz.Monoid<scalaz.CorecursiveList<A>> monoidInstance();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method covariantInstance:()Lscalaz/MonadPlus;
       4: invokeinterface #154,  1          // InterfaceMethod scalaz/MonadPlus.monoid:()Lscalaz/Monoid;
       9: areturn

  public <A> scalaz.Order<scalaz.CorecursiveList<A>> orderInstance(scalaz.Order<A>);
    Code:
       0: new           #22                 // class scalaz/CorecursiveList$$anon$6
       3: dup
       4: aload_1
       5: invokespecial #161                // Method scalaz/CorecursiveList$$anon$6."<init>":(Lscalaz/Order;)V
       8: areturn

  public static final scala.Tuple2 $anonfun$cons$3(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        33
       4: aload_0
       5: invokevirtual #170                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokevirtual #173                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #167                // class scala/Tuple2
      17: dup
      18: getstatic     #178                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      21: aload_2
      22: invokevirtual #182                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      25: aload_3
      26: invokespecial #185                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: astore_1
      30: goto          42
      33: new           #187                // class scala/MatchError
      36: dup
      37: aload_0
      38: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      41: athrow
      42: aload_1
      43: areturn

  public static final scalaz.Maybe $anonfun$cons$2(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #200                // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #203,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class scalaz/Maybe
      13: invokedynamic #209,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      18: astore_3
      19: dup
      20: ifnonnull     25
      23: aconst_null
      24: athrow
      25: astore_2
      26: aload_3
      27: invokedynamic #215,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      32: invokeinterface #219,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      37: astore        4
      39: aload_2
      40: instanceof    #42                 // class scalaz/Maybe$Just
      43: ifeq          69
      46: aload_2
      47: checkcast     #42                 // class scalaz/Maybe$Just
      50: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      53: astore        6
      55: aload         4
      57: aload         6
      59: invokeinterface #203,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      64: astore        5
      66: goto          93
      69: aload_2
      70: instanceof    #34                 // class scalaz/Maybe$Empty
      73: ifeq          84
      76: invokestatic  #225                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      79: astore        5
      81: goto          93
      84: new           #187                // class scala/MatchError
      87: dup
      88: aload_2
      89: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      92: athrow
      93: aload         5
      95: checkcast     #36                 // class scalaz/Maybe
      98: areturn

  public static final scalaz.Maybe $anonfun$cons$4(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: getstatic     #178                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: new           #167                // class scala/Tuple2
       6: dup
       7: getstatic     #178                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      10: aload_0
      11: invokevirtual #234                // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      14: invokevirtual #182                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      17: aload_1
      18: invokespecial #185                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      21: invokevirtual #182                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      24: areturn

  public static final scalaz.Maybe $anonfun$cons$1(scalaz.CorecursiveList, java.lang.Object, scalaz.Maybe);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_2
       7: instanceof    #42                 // class scalaz/Maybe$Just
      10: ifeq          32
      13: aload_2
      14: checkcast     #42                 // class scalaz/Maybe$Just
      17: invokevirtual #222                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokestatic  #237                // Method $anonfun$cons$2:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscalaz/Maybe;
      28: astore_3
      29: goto          57
      32: aload_2
      33: instanceof    #34                 // class scalaz/Maybe$Empty
      36: ifeq          48
      39: aload_0
      40: aload_1
      41: invokestatic  #239                // Method $anonfun$cons$4:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscalaz/Maybe;
      44: astore_3
      45: goto          57
      48: new           #187                // class scala/MatchError
      51: dup
      52: aload_2
      53: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      56: athrow
      57: aload_3
      58: areturn

  private scalaz.CorecursiveList$();
    Code:
       0: aload_0
       1: invokespecial #241                // Method scalaz/CorecursiveListInstances."<init>":()V
       4: aload_0
       5: putstatic     #243                // Field MODULE$:Lscalaz/CorecursiveList$;
       8: aload_0
       9: new           #12                 // class scalaz/CorecursiveList$$anon$1
      12: dup
      13: invokespecial #244                // Method scalaz/CorecursiveList$$anon$1."<init>":()V
      16: putfield      #78                 // Field ephemeralStreamIso:Lscalaz/Isomorphisms$Iso2;
      19: aload_0
      20: new           #14                 // class scalaz/CorecursiveList$$anon$2
      23: dup
      24: invokespecial #245                // Method scalaz/CorecursiveList$$anon$2."<init>":()V
      27: putfield      #81                 // Field streamIso:Lscalaz/Isomorphisms$Iso2;
      30: aload_0
      31: new           #16                 // class scalaz/CorecursiveList$$anon$3
      34: dup
      35: invokespecial #246                // Method scalaz/CorecursiveList$$anon$3."<init>":()V
      38: putfield      #85                 // Field fromList:Lscalaz/NaturalTransformation;
      41: aload_0
      42: new           #18                 // class scalaz/CorecursiveList$$anon$4
      45: dup
      46: invokespecial #247                // Method scalaz/CorecursiveList$$anon$4."<init>":()V
      49: putfield      #88                 // Field fromVector:Lscalaz/NaturalTransformation;
      52: aload_0
      53: new           #20                 // class scalaz/CorecursiveList$$anon$5
      56: dup
      57: invokespecial #248                // Method scalaz/CorecursiveList$$anon$5."<init>":()V
      60: putfield      #144                // Field covariantInstance:Lscalaz/MonadPlus;
      63: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #263,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
