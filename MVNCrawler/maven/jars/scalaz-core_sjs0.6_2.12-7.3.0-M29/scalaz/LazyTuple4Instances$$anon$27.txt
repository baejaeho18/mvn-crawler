Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple4Instances$$anon$27 implements scalaz.LazyTuple4Monoid<A1, A2, A3, A4> {
  private final scalaz.syntax.MonoidSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> semigroupSyntax;

  private final scalaz.Monoid A1$16;

  private final scalaz.Monoid A2$15;

  private final scalaz.Monoid A3$10;

  private final scalaz.Monoid A4$5;

  public scalaz.LazyTuple4<A1, A2, A3, A4> zero();
    Code:
       0: aload_0
       1: invokestatic  #48                 // InterfaceMethod scalaz/LazyTuple4Monoid.zero$:(Lscalaz/LazyTuple4Monoid;)Lscalaz/LazyTuple4;
       4: areturn

  public scalaz.LazyTuple4<A1, A2, A3, A4> append(scalaz.LazyTuple4<A1, A2, A3, A4>, scala.Function0<scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/LazyTuple4Semigroup.append$:(Lscalaz/LazyTuple4Semigroup;Lscalaz/LazyTuple4;Lscala/Function0;)Lscalaz/LazyTuple4;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #90                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #98                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #102                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #109                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.LazyTuple4<A1, A2, A3, A4>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #140                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple4<A1, A2, A3, A4>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.LazyTuple4<A1, A2, A3, A4>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #147                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple4<A1, A2, A3, A4>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyTuple4<A1, A2, A3, A4>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #152                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.LazyTuple4<A1, A2, A3, A4>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #177                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #185                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #185                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Monoid<A1> _1();
    Code:
       0: aload_0
       1: getfield      #193                // Field A1$16:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A2> _2();
    Code:
       0: aload_0
       1: getfield      #197                // Field A2$15:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A3> _3();
    Code:
       0: aload_0
       1: getfield      #201                // Field A3$10:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A4> _4();
    Code:
       0: aload_0
       1: getfield      #205                // Field A4$5:Lscalaz/Monoid;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #208                // class scalaz/LazyTuple4
       4: astore_3
       5: getstatic     #214                // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       8: aload_0
       9: aload_3
      10: aload_2
      11: invokedynamic #235,  0            // InvokeDynamic #0:apply:(Lscalaz/LazyTuple4Semigroup;Lscalaz/LazyTuple4;Lscala/Function0;)Lscala/Function0;
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokedynamic #240,  0            // InvokeDynamic #1:apply:(Lscalaz/LazyTuple4Semigroup;Lscalaz/LazyTuple4;Lscala/Function0;)Lscala/Function0;
      24: aload_0
      25: aload_3
      26: aload_2
      27: invokedynamic #245,  0            // InvokeDynamic #2:apply:(Lscalaz/LazyTuple4Semigroup;Lscalaz/LazyTuple4;Lscala/Function0;)Lscala/Function0;
      32: aload_0
      33: aload_3
      34: aload_2
      35: invokedynamic #250,  0            // InvokeDynamic #3:apply:(Lscalaz/LazyTuple4Semigroup;Lscalaz/LazyTuple4;Lscala/Function0;)Lscala/Function0;
      40: astore        7
      42: astore        6
      44: astore        5
      46: astore        4
      48: ifnonnull     53
      51: aconst_null
      52: athrow
      53: new           #20                 // class scalaz/LazyTuple4$$anon$3
      56: dup
      57: aload         4
      59: aload         5
      61: aload         6
      63: aload         7
      65: invokespecial #254                // Method scalaz/LazyTuple4$$anon$3."<init>":(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)V
      68: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #263                // Method zero:()Lscalaz/LazyTuple4;
       4: areturn

  public scalaz.Semigroup _4();
    Code:
       0: aload_0
       1: invokevirtual #266                // Method _4:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _3();
    Code:
       0: aload_0
       1: invokevirtual #268                // Method _3:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _2();
    Code:
       0: aload_0
       1: invokevirtual #270                // Method _2:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _1();
    Code:
       0: aload_0
       1: invokevirtual #272                // Method _1:()Lscalaz/Monoid;
       4: areturn

  public scalaz.LazyTuple4Instances$$anon$27(scalaz.LazyTuple4Instances, scalaz.Monoid, scalaz.Monoid, scalaz.Monoid, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #193                // Field A1$16:Lscalaz/Monoid;
       5: aload_0
       6: aload_3
       7: putfield      #197                // Field A2$15:Lscalaz/Monoid;
      10: aload_0
      11: aload         4
      13: putfield      #201                // Field A3$10:Lscalaz/Monoid;
      16: aload_0
      17: aload         5
      19: putfield      #205                // Field A4$5:Lscalaz/Monoid;
      22: aload_0
      23: invokespecial #277                // Method java/lang/Object."<init>":()V
      26: aload_0
      27: invokestatic  #281                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      30: aload_0
      31: invokestatic  #284                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      34: aload_0
      35: invokestatic  #287                // InterfaceMethod scalaz/LazyTuple4Semigroup.$init$:(Lscalaz/LazyTuple4Semigroup;)V
      38: aload_0
      39: invokestatic  #290                // InterfaceMethod scalaz/LazyTuple4Monoid.$init$:(Lscalaz/LazyTuple4Monoid;)V
      42: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #303,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
