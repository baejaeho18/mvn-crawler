Compiled from "Ap.scala"
public final class scalaz.ApInstances$$anon$2 implements scalaz.ApMonoid<F, A> {
  private final scalaz.Applicative<F> F;

  private final scalaz.Monoid<A> A;

  private final scalaz.syntax.MonoidSyntax<scalaz.Ap<F, A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.Ap<F, A>> semigroupSyntax;

  public scalaz.Ap<F, A> zero();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scalaz/ApMonoid.zero$:(Lscalaz/ApMonoid;)Lscalaz/Ap;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #57                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #76                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #85                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #89                 // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #101                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.Ap<F, A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #122                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public scalaz.Ap<F, A> append(scalaz.Ap<F, A>, scala.Function0<scalaz.Ap<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #133                // InterfaceMethod scalaz/ApSemigroup.append$:(Lscalaz/ApSemigroup;Lscalaz/Ap;Lscala/Function0;)Lscalaz/Ap;
       6: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #139                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Ap<F, A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Ap<F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.Ap<F, A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Ap<F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #158                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.Ap<F, A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #172                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.Ap<F, A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.Ap<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #176                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.Ap<F, A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #184                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.Ap<F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #184                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Applicative<F> F();
    Code:
       0: aload_0
       1: getfield      #190                // Field F:Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<A> A();
    Code:
       0: aload_0
       1: getfield      #194                // Field A:Lscalaz/Monoid;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #197                // class scalaz/Ap
       4: astore_3
       5: new           #197                // class scalaz/Ap
       8: dup
       9: aload_0
      10: invokeinterface #199,  1          // InterfaceMethod scalaz/ApSemigroup.F:()Lscalaz/Apply;
      15: aload_3
      16: invokedynamic #220,  0            // InvokeDynamic #0:apply:(Lscalaz/Ap;)Lscala/Function0;
      21: aload_2
      22: invokedynamic #228,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      27: aload_0
      28: invokedynamic #238,  0            // InvokeDynamic #2:apply:(Lscalaz/ApSemigroup;)Lscala/Function2;
      33: invokeinterface #244,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      38: invokespecial #248                // Method scalaz/Ap."<init>":(Ljava/lang/Object;)V
      41: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method zero:()Lscalaz/Ap;
       4: areturn

  public scalaz.Semigroup A();
    Code:
       0: aload_0
       1: invokevirtual #254                // Method A:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Apply F();
    Code:
       0: aload_0
       1: invokevirtual #256                // Method F:()Lscalaz/Applicative;
       4: areturn

  public scalaz.ApInstances$$anon$2(scalaz.ApInstances, scalaz.Applicative, scalaz.Monoid);
    Code:
       0: aload_0
       1: invokespecial #263                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #267                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
       8: aload_0
       9: invokestatic  #270                // InterfaceMethod scalaz/ApSemigroup.$init$:(Lscalaz/ApSemigroup;)V
      12: aload_0
      13: invokestatic  #273                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      16: aload_0
      17: invokestatic  #276                // InterfaceMethod scalaz/ApMonoid.$init$:(Lscalaz/ApMonoid;)V
      20: aload_0
      21: aload_2
      22: putfield      #190                // Field F:Lscalaz/Applicative;
      25: aload_0
      26: aload_3
      27: putfield      #194                // Field A:Lscalaz/Monoid;
      30: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
