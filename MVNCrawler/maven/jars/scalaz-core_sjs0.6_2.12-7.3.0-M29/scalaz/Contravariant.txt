Compiled from "Contravariant.scala"
public interface scalaz.Contravariant<F> extends scalaz.InvariantFunctor<F> {
  public static <F, G> scalaz.Contravariant<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Contravariant<G>);
    Code:
       0: getstatic     #45                 // Field scalaz/Contravariant$.MODULE$:Lscalaz/Contravariant$;
       3: aload_0
       4: aload_1
       5: invokevirtual #47                 // Method scalaz/Contravariant$.fromIso:(Lscalaz/Isomorphisms$Iso2;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       8: areturn

  public static <F> scalaz.Contravariant<F> apply(scalaz.Contravariant<F>);
    Code:
       0: getstatic     #45                 // Field scalaz/Contravariant$.MODULE$:Lscalaz/Contravariant$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: areturn

  public abstract void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax<F>);

  public abstract <A, B> F contramap(F, scala.Function1<B, A>);

  public static java.lang.Object narrow$(scalaz.Contravariant, java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #69                 // InterfaceMethod narrow:(Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F narrow(F, scalaz.Liskov<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lscalaz/Liskov;)Lscala/Function1;
       8: invokeinterface #96,  3           // InterfaceMethod contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object xmap$(scalaz.Contravariant, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #104                // InterfaceMethod xmap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <A, B> F xmap(F, scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokeinterface #96,  3           // InterfaceMethod contramap:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static scalaz.Functor compose$(scalaz.Contravariant, scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #113                // InterfaceMethod compose:(Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public default <G> scalaz.Functor<?> compose(scalaz.Contravariant<G>);
    Code:
       0: new           #18                 // class scalaz/Contravariant$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #118                // Method scalaz/Contravariant$$anon$1."<init>":(Lscalaz/Contravariant;Lscalaz/Contravariant;)V
       9: areturn

  public static scalaz.Contravariant icompose$(scalaz.Contravariant, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #124                // InterfaceMethod icompose:(Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public default <G> scalaz.Contravariant<?> icompose(scalaz.Functor<G>);
    Code:
       0: new           #20                 // class scalaz/Contravariant$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #129                // Method scalaz/Contravariant$$anon$2."<init>":(Lscalaz/Contravariant;Lscalaz/Functor;)V
       9: areturn

  public static scalaz.Contravariant product$(scalaz.Contravariant, scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #134                // InterfaceMethod product:(Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public default <G> scalaz.Contravariant<?> product(scalaz.Contravariant<G>);
    Code:
       0: new           #22                 // class scalaz/Contravariant$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #136                // Method scalaz/Contravariant$$anon$3."<init>":(Lscalaz/Contravariant;Lscalaz/Contravariant;)V
       9: areturn

  public static scalaz.Contravariant$ContravariantLaw contravariantLaw$(scalaz.Contravariant);
    Code:
       0: aload_0
       1: invokespecial #142                // InterfaceMethod contravariantLaw:()Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public default scalaz.Contravariant<F>.ContravariantLaw contravariantLaw();
    Code:
       0: new           #24                 // class scalaz/Contravariant$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #146                // Method scalaz/Contravariant$$anon$4."<init>":(Lscalaz/Contravariant;)V
       8: areturn

  public abstract scalaz.syntax.ContravariantSyntax<F> contravariantSyntax();

  public static java.lang.Object $anonfun$narrow$1(scalaz.Liskov, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #155                // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static void $init$(scalaz.Contravariant);
    Code:
       0: aload_0
       1: new           #26                 // class scalaz/Contravariant$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #157                // Method scalaz/Contravariant$$anon$5."<init>":(Lscalaz/Contravariant;)V
       9: invokeinterface #159,  2          // InterfaceMethod scalaz$Contravariant$_setter_$contravariantSyntax_$eq:(Lscalaz/syntax/ContravariantSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #171,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
