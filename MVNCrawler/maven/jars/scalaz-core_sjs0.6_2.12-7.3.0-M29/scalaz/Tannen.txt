Compiled from "Tannen.scala"
public final class scalaz.Tannen<F, G, A, B> implements scala.Product, scala.Serializable {
  private final F f;

  public static <F, G, A, B> scala.Option<F> unapply(scalaz.Tannen<F, G, A, B>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: invokevirtual #28                 // Method scalaz/Tannen$.unapply:(Lscalaz/Tannen;)Lscala/Option;
       7: areturn

  public static <F, G, A, B> scalaz.Tannen<F, G, A, B> apply(F);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: invokevirtual #33                 // Method scalaz/Tannen$.apply:(Ljava/lang/Object;)Lscalaz/Tannen;
       7: areturn

  public static <F, G, A, B> scalaz.Equal<scalaz.Tannen<F, G, A, B>> TannenEqual(scalaz.Equal<F>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: invokevirtual #39                 // Method scalaz/Tannen$.TannenEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static <F, G> scalaz.Bitraverse<?> TannenBitraverse(scalaz.Traverse<F>, scalaz.Bitraverse<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #45                 // Method scalaz/Tannen$.TannenBitraverse:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       8: areturn

  public static <F, G, E> scalaz.Traverse<?> TannenTraverse(scalaz.Traverse<F>, scalaz.Bitraverse<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #50                 // Method scalaz/Tannen$.TannenTraverse:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Traverse;
       8: areturn

  public static <F, G> scalaz.Bifunctor<?> TannenBifunctor(scalaz.Functor<F>, scalaz.Bifunctor<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method scalaz/Tannen$.TannenBifunctor:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       8: areturn

  public static <F, G> scalaz.Bifoldable<?> TannenBifoldable(scalaz.Foldable<F>, scalaz.Bifoldable<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #60                 // Method scalaz/Tannen$.TannenBifoldable:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       8: areturn

  public static <F, G, E> scalaz.Functor<?> TannenFunctor(scalaz.Functor<F>, scalaz.Bifunctor<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #65                 // Method scalaz/Tannen$.TannenFunctor:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Functor;
       8: areturn

  public static <F, G, E> scalaz.Foldable<?> TannenFoldable(scalaz.Foldable<F>, scalaz.Bifoldable<G>);
    Code:
       0: getstatic     #26                 // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #70                 // Method scalaz/Tannen$.TannenFoldable:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Foldable;
       8: areturn

  public F f();
    Code:
       0: aload_0
       1: getfield      #74                 // Field f:Ljava/lang/Object;
       4: areturn

  public <F, G, A, B> scalaz.Tannen<F, G, A, B> copy(F);
    Code:
       0: new           #2                  // class scalaz/Tannen
       3: dup
       4: aload_1
       5: invokespecial #81                 // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public <F, G, A, B> F copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method f:()Ljava/lang/Object;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #89                 // String Tannen
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #85                 // Method f:()Ljava/lang/Object;
      24: areturn
      25: new           #96                 // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #102                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #105                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #108                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #117                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #121                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/Tannen
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #117                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #128                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #117                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #132                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     50
       5: aload_1
       6: instanceof    #2                  // class scalaz/Tannen
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          52
      23: aload_1
      24: checkcast     #2                  // class scalaz/Tannen
      27: astore_3
      28: aload_0
      29: invokevirtual #85                 // Method f:()Ljava/lang/Object;
      32: aload_3
      33: invokevirtual #85                 // Method f:()Ljava/lang/Object;
      36: invokestatic  #136                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  public scalaz.Tannen(F);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field f:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #140                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #144                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return
}
