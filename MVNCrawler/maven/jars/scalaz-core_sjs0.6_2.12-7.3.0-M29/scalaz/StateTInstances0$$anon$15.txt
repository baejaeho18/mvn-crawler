Compiled from "StateT.scala"
public final class scalaz.StateTInstances0$$anon$15 implements scalaz.Comonad<?> {
  private final scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Monoid S$1;

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #111                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.IndexedStateT<S, S, ?, A>, scalaz.IndexedStateT<S, S, ?, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #135                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #139                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #148                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #196                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #204                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #211                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #219                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #231                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #231                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #239                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #239                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #246                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #246                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #253                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #253                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> A copoint(scalaz.IndexedStateT<S, S, java.lang.Object, A>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #261                // Field S$1:Lscalaz/Monoid;
       5: invokeinterface #267,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      10: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      13: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      16: checkcast     #279                // class scalaz/Bind
      19: invokevirtual #283                // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      22: areturn

  public <A> scalaz.IndexedStateT<S, S, java.lang.Object, scalaz.IndexedStateT<S, S, java.lang.Object, A>> cojoin(scalaz.IndexedStateT<S, S, java.lang.Object, A>);
    Code:
       0: getstatic     #290                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       3: aload_0
       4: aload_1
       5: invokedynamic #312,  0            // InvokeDynamic #0:apply:(Lscalaz/StateTInstances0$$anon$15;Lscalaz/IndexedStateT;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #315                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: getstatic     #320                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      27: ifnonnull     32
      30: aconst_null
      31: athrow
      32: new           #38                 // class scalaz/IndexedStateT$Wrap
      35: dup
      36: aload_2
      37: invokespecial #324                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      40: areturn

  public <A, B> scalaz.IndexedStateT<S, S, java.lang.Object, B> map(scalaz.IndexedStateT<S, S, java.lang.Object, A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       4: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
       7: checkcast     #332                // class scalaz/Applicative
      10: astore_3
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_3
      17: aload_2
      18: invokedynamic #342,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      23: invokedynamic #353,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      28: astore        4
      30: new           #33                 // class scalaz/IndexedStateT$FlatMap
      33: dup
      34: aload_1
      35: aload         4
      37: invokespecial #356                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      40: areturn

  public <A, B> scalaz.IndexedStateT<S, S, java.lang.Object, B> cobind(scalaz.IndexedStateT<S, S, java.lang.Object, A>, scala.Function1<scalaz.IndexedStateT<S, S, ?, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #364                // Method cojoin:(Lscalaz/IndexedStateT;)Lscalaz/IndexedStateT;
       5: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       8: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      11: checkcast     #332                // class scalaz/Applicative
      14: astore        4
      16: dup
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: astore_3
      23: aload         4
      25: aload_2
      26: invokedynamic #342,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      31: invokedynamic #353,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      36: astore        5
      38: new           #33                 // class scalaz/IndexedStateT$FlatMap
      41: dup
      42: aload_3
      43: aload         5
      45: invokespecial #356                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      48: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #35                 // class scalaz/IndexedStateT
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #364                // Method cojoin:(Lscalaz/IndexedStateT;)Lscalaz/IndexedStateT;
      10: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      13: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      16: checkcast     #332                // class scalaz/Applicative
      19: astore        5
      21: dup
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: astore        4
      29: aload         5
      31: aload_2
      32: invokedynamic #342,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      37: invokedynamic #353,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      42: astore        6
      44: new           #33                 // class scalaz/IndexedStateT$FlatMap
      47: dup
      48: aload         4
      50: aload         6
      52: invokespecial #356                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      55: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #35                 // class scalaz/IndexedStateT
       4: astore_3
       5: aload_3
       6: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       9: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      12: checkcast     #332                // class scalaz/Applicative
      15: astore        4
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: aload_2
      25: invokedynamic #342,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function1;
      30: invokedynamic #353,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
      35: astore        5
      37: new           #33                 // class scalaz/IndexedStateT$FlatMap
      40: dup
      41: aload_3
      42: aload         5
      44: invokespecial #356                // Method scalaz/IndexedStateT$FlatMap."<init>":(Lscalaz/IndexedStateT;Lscala/Function2;)V
      47: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: invokevirtual #364                // Method cojoin:(Lscalaz/IndexedStateT;)Lscalaz/IndexedStateT;
       8: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class scalaz/IndexedStateT
       5: invokevirtual #374                // Method copoint:(Lscalaz/IndexedStateT;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$cojoin$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final scala.Tuple2 $anonfun$cojoin$2(scalaz.StateTInstances0$$anon$15, scalaz.IndexedStateT, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #261                // Field S$1:Lscalaz/Monoid;
       5: aload_2
       6: aload_3
       7: invokedynamic #390,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;)Lscala/Function0;
      12: invokeinterface #394,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      17: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      20: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      23: checkcast     #279                // class scalaz/Bind
      26: invokevirtual #397                // Method scalaz/IndexedStateT.run:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      29: checkcast     #399                // class scala/Tuple2
      32: areturn

  public static final scala.Tuple2 $anonfun$cojoin$1(scalaz.StateTInstances0$$anon$15, scalaz.IndexedStateT, java.lang.Object);
    Code:
       0: new           #399                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: getstatic     #273                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       9: invokevirtual #277                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      12: checkcast     #279                // class scalaz/Bind
      15: invokevirtual #403                // Method scalaz/IndexedStateT.exec:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      18: getstatic     #290                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokedynamic #409,  0            // InvokeDynamic #4:apply:(Lscalaz/StateTInstances0$$anon$15;Lscalaz/IndexedStateT;Ljava/lang/Object;)Lscala/Function1;
      29: astore_3
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: getstatic     #315                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: getstatic     #320                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      46: ifnonnull     51
      49: aconst_null
      50: athrow
      51: new           #38                 // class scalaz/IndexedStateT$Wrap
      54: dup
      55: aload_3
      56: invokespecial #324                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      59: invokespecial #412                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      62: areturn

  public scalaz.StateTInstances0$$anon$15(scalaz.StateTInstances0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #261                // Field S$1:Lscalaz/Monoid;
       5: aload_0
       6: invokespecial #417                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #421                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #424                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #427                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      21: aload_0
      22: invokestatic  #430                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #443,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
