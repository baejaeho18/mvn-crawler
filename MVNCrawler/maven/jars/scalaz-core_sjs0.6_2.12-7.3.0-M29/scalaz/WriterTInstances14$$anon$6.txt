Compiled from "WriterT.scala"
public final class scalaz.WriterTInstances14$$anon$6 implements scalaz.WriterTPlusEmpty<F, W> {
  private final scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.PlusEmpty F0$4;

  public final <A> scalaz.WriterT<W, F, A> empty();
    Code:
       0: aload_0
       1: invokestatic  #43                 // InterfaceMethod scalaz/WriterTPlusEmpty.empty$:(Lscalaz/WriterTPlusEmpty;)Lscalaz/WriterT;
       4: areturn

  public final <A> scalaz.WriterT<W, F, A> plus(scalaz.WriterT<W, F, A>, scala.Function0<scalaz.WriterT<W, F, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/WriterTPlus.plus$:(Lscalaz/WriterTPlus;Lscalaz/WriterT;Lscala/Function0;)Lscalaz/WriterT;
       6: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #78                 // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.WriterT<W, F, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.WriterT<W, F, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.WriterT<W, F, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.WriterT<W, F, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.WriterT<W, F, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #111                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.WriterT<W, F, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #135                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #135                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #143                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.PlusEmpty<F> F();
    Code:
       0: aload_0
       1: getfield      #150                // Field F0$4:Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public final java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #156                // class scalaz/WriterT
       4: astore_3
       5: new           #156                // class scalaz/WriterT
       8: dup
       9: aload_0
      10: invokeinterface #158,  1          // InterfaceMethod scalaz/WriterTPlus.F:()Lscalaz/Plus;
      15: aload_3
      16: invokevirtual #162                // Method scalaz/WriterT.run:()Ljava/lang/Object;
      19: aload_2
      20: invokedynamic #183,  0            // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      25: invokeinterface #185,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      30: invokespecial #189                // Method scalaz/WriterT."<init>":(Ljava/lang/Object;)V
      33: areturn

  public final java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method empty:()Lscalaz/WriterT;
       4: areturn

  public scalaz.Plus F();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method F:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.WriterTInstances14$$anon$6(scalaz.WriterTInstances14, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #150                // Field F0$4:Lscalaz/PlusEmpty;
       5: aload_0
       6: invokespecial #199                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #203                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      13: aload_0
      14: invokestatic  #206                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      17: aload_0
      18: invokestatic  #209                // InterfaceMethod scalaz/WriterTPlus.$init$:(Lscalaz/WriterTPlus;)V
      21: aload_0
      22: invokestatic  #212                // InterfaceMethod scalaz/WriterTPlusEmpty.$init$:(Lscalaz/WriterTPlusEmpty;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #225,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
