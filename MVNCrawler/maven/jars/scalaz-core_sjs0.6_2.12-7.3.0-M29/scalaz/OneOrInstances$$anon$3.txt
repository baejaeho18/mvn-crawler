Compiled from "OneOr.scala"
public final class scalaz.OneOrInstances$$anon$3 implements scalaz.OneOrComonad<F> {
  private final scalaz.syntax.ComonadSyntax<?> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<?> cobindSyntax;

  private final scalaz.syntax.FunctorSyntax<?> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax;

  private final scalaz.Comonad evidence$3$1;

  public <A> A copoint(scalaz.OneOr<F, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // InterfaceMethod scalaz/OneOrComonad.copoint$:(Lscalaz/OneOrComonad;Lscalaz/OneOr;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #75                 // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<?>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #83                 // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final <A, B> scalaz.OneOr<F, B> cobind(scalaz.OneOr<F, A>, scala.Function1<scalaz.OneOr<F, A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/OneOrCobind.cobind$:(Lscalaz/OneOrCobind;Lscalaz/OneOr;Lscala/Function1;)Lscalaz/OneOr;
       6: areturn

  public final <A, B> scalaz.OneOr<F, B> map(scalaz.OneOr<F, A>, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #102                // InterfaceMethod scalaz/OneOrFunctor.map$:(Lscalaz/OneOrFunctor;Lscalaz/OneOr;Lscala/Function1;)Lscalaz/OneOr;
       6: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #108                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #113                // InterfaceMethod scalaz/Cobind.cojoin$:(Lscalaz/Cobind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Cobind<?>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #127                // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.OneOr<F, A>, scalaz.OneOr<F, B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #155                // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #164                // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #168                // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #174                // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #200                // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #212                // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<?>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #220                // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #227                // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #235                // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<?>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<?> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #247                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #247                // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<?> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #255                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #255                // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<?> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #262                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #262                // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<?> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #269                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #269                // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public scalaz.Comonad<F> F();
    Code:
       0: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #283                // Field evidence$3$1:Lscalaz/Comonad;
       7: invokevirtual #286                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class scalaz/Comonad
      13: areturn

  public final java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #288                // class scalaz/OneOr
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #291,  1          // InterfaceMethod scalaz/OneOrFunctor.F:()Lscalaz/Functor;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: new           #288                // class scalaz/OneOr
      22: dup
      23: aload_3
      24: invokevirtual #295                // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
      27: aload         4
      29: aload_2
      30: invokeinterface #297,  2          // InterfaceMethod scalaz/Functor.lift:(Lscala/Function1;)Lscala/Function1;
      35: astore        6
      37: dup
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: astore        5
      45: aload         5
      47: instanceof    #299                // class scalaz/$minus$bslash$div
      50: ifeq          83
      53: aload         5
      55: checkcast     #299                // class scalaz/$minus$bslash$div
      58: invokevirtual #302                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      61: astore        8
      63: getstatic     #307                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      66: aload         6
      68: aload         8
      70: invokeinterface #311,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: invokevirtual #314                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      78: astore        7
      80: goto          130
      83: aload         5
      85: instanceof    #316                // class scalaz/$bslash$div$minus
      88: ifeq          120
      91: aload         5
      93: checkcast     #316                // class scalaz/$bslash$div$minus
      96: invokevirtual #318                // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      99: astore        9
     101: getstatic     #323                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     104: aload_2
     105: aload         9
     107: invokeinterface #311,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     112: invokevirtual #324                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     115: astore        7
     117: goto          130
     120: new           #326                // class scala/MatchError
     123: dup
     124: aload         5
     126: invokespecial #330                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     129: athrow
     130: aload         7
     132: invokespecial #333                // Method scalaz/OneOr."<init>":(Lscalaz/$bslash$div;)V
     135: areturn

  public final java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #288                // class scalaz/OneOr
       4: astore_3
       5: aload_3
       6: aload_0
       7: invokeinterface #344,  1          // InterfaceMethod scalaz/OneOrCobind.F:()Lscalaz/Cobind;
      12: astore        4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: new           #288                // class scalaz/OneOr
      22: dup
      23: aload_3
      24: invokevirtual #295                // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
      27: astore        6
      29: aload         6
      31: instanceof    #316                // class scalaz/$bslash$div$minus
      34: ifeq          55
      37: getstatic     #323                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      40: aload_2
      41: aload_3
      42: invokeinterface #311,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: invokevirtual #324                // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      50: astore        5
      52: goto          109
      55: aload         6
      57: instanceof    #299                // class scalaz/$minus$bslash$div
      60: ifeq          99
      63: aload         6
      65: checkcast     #299                // class scalaz/$minus$bslash$div
      68: invokevirtual #302                // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      71: astore        7
      73: getstatic     #307                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      76: aload         4
      78: aload         7
      80: aload_2
      81: invokedynamic #363,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      86: invokeinterface #365,  3          // InterfaceMethod scalaz/Cobind.cobind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      91: invokevirtual #314                // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      94: astore        5
      96: goto          109
      99: new           #326                // class scala/MatchError
     102: dup
     103: aload         6
     105: invokespecial #330                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload         5
     111: invokespecial #333                // Method scalaz/OneOr."<init>":(Lscalaz/$bslash$div;)V
     114: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #288                // class scalaz/OneOr
       5: invokevirtual #371                // Method copoint:(Lscalaz/OneOr;)Ljava/lang/Object;
       8: areturn

  public scalaz.Functor F();
    Code:
       0: aload_0
       1: invokevirtual #373                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.Cobind F();
    Code:
       0: aload_0
       1: invokevirtual #373                // Method F:()Lscalaz/Comonad;
       4: areturn

  public scalaz.OneOrInstances$$anon$3(scalaz.OneOrInstances, scalaz.Comonad);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #283                // Field evidence$3$1:Lscalaz/Comonad;
       5: aload_0
       6: invokespecial #378                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #382                // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
      13: aload_0
      14: invokestatic  #385                // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      17: aload_0
      18: invokestatic  #388                // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      21: aload_0
      22: invokestatic  #391                // InterfaceMethod scalaz/OneOrFunctor.$init$:(Lscalaz/OneOrFunctor;)V
      25: aload_0
      26: invokestatic  #394                // InterfaceMethod scalaz/OneOrCobind.$init$:(Lscalaz/OneOrCobind;)V
      29: aload_0
      30: invokestatic  #397                // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      33: aload_0
      34: invokestatic  #400                // InterfaceMethod scalaz/OneOrComonad.$init$:(Lscalaz/OneOrComonad;)V
      37: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #413,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
