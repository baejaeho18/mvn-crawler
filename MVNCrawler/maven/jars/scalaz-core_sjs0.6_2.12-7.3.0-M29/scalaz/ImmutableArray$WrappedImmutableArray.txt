Compiled from "ImmutableArray.scala"
public abstract class scalaz.ImmutableArray$WrappedImmutableArray<A> implements scala.collection.immutable.IndexedSeq<A> {
  private final scalaz.ImmutableArray<A> value;

  public scala.collection.generic.GenericCompanion<scala.collection.immutable.IndexedSeq> companion();
    Code:
       0: aload_0
       1: invokestatic  #26                 // InterfaceMethod scala/collection/immutable/IndexedSeq.companion$:(Lscala/collection/immutable/IndexedSeq;)Lscala/collection/generic/GenericCompanion;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> toIndexedSeq();
    Code:
       0: aload_0
       1: invokestatic  #35                 // InterfaceMethod scala/collection/immutable/IndexedSeq.toIndexedSeq$:(Lscala/collection/immutable/IndexedSeq;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.IndexedSeq<A> seq();
    Code:
       0: aload_0
       1: invokestatic  #39                 // InterfaceMethod scala/collection/immutable/IndexedSeq.seq$:(Lscala/collection/immutable/IndexedSeq;)Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scala/collection/IndexedSeqLike.hashCode$:(Lscala/collection/IndexedSeqLike;)I
       4: ireturn

  public scala.collection.IndexedSeq<A> thisCollection();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scala/collection/IndexedSeqLike.thisCollection$:(Lscala/collection/IndexedSeqLike;)Lscala/collection/IndexedSeq;
       4: areturn

  public scala.collection.IndexedSeq toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // InterfaceMethod scala/collection/IndexedSeqLike.toCollection$:(Lscala/collection/IndexedSeqLike;Ljava/lang/Object;)Lscala/collection/IndexedSeq;
       5: areturn

  public scala.collection.Iterator<A> iterator();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod scala/collection/IndexedSeqLike.iterator$:(Lscala/collection/IndexedSeqLike;)Lscala/collection/Iterator;
       4: areturn

  public <A1> scala.collection.mutable.Buffer<A1> toBuffer();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scala/collection/IndexedSeqLike.toBuffer$:(Lscala/collection/IndexedSeqLike;)Lscala/collection/mutable/Buffer;
       4: areturn

  public int sizeHintIfCheap();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod scala/collection/IndexedSeqLike.sizeHintIfCheap$:(Lscala/collection/IndexedSeqLike;)I
       4: ireturn

  public scala.collection.immutable.Seq<A> toSeq();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod scala/collection/immutable/Seq.toSeq$:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.parallel.Combiner<A, scala.collection.parallel.immutable.ParSeq<A>> parCombiner();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scala/collection/immutable/Seq.parCombiner$:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/Combiner;
       4: areturn

  public int lengthCompare(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #105                // InterfaceMethod scala/collection/SeqLike.lengthCompare$:(Lscala/collection/SeqLike;I)I
       5: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod scala/collection/SeqLike.isEmpty$:(Lscala/collection/SeqLike;)Z
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scala/collection/SeqLike.size$:(Lscala/collection/SeqLike;)I
       4: ireturn

  public int segmentLength(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #126                // InterfaceMethod scala/collection/SeqLike.segmentLength$:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #131                // InterfaceMethod scala/collection/SeqLike.indexWhere$:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #136                // InterfaceMethod scala/collection/SeqLike.lastIndexWhere$:(Lscala/collection/SeqLike;Lscala/Function1;I)I
       6: ireturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> permutations();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod scala/collection/SeqLike.permutations$:(Lscala/collection/SeqLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> combinations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #150                // InterfaceMethod scala/collection/SeqLike.combinations$:(Lscala/collection/SeqLike;I)Lscala/collection/Iterator;
       5: areturn

  public java.lang.Object reverse();
    Code:
       0: aload_0
       1: invokestatic  #156                // InterfaceMethod scala/collection/SeqLike.reverse$:(Lscala/collection/SeqLike;)Ljava/lang/Object;
       4: areturn

  public <B, That> That reverseMap(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #165                // InterfaceMethod scala/collection/SeqLike.reverseMap$:(Lscala/collection/SeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.collection.Iterator<A> reverseIterator();
    Code:
       0: aload_0
       1: invokestatic  #170                // InterfaceMethod scala/collection/SeqLike.reverseIterator$:(Lscala/collection/SeqLike;)Lscala/collection/Iterator;
       4: areturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #179                // InterfaceMethod scala/collection/SeqLike.startsWith$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)Z
       6: ireturn

  public <B> boolean endsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod scala/collection/SeqLike.endsWith$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scala/collection/SeqLike.indexOfSlice$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int indexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #199                // InterfaceMethod scala/collection/SeqLike.indexOfSlice$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod scala/collection/SeqLike.lastIndexOfSlice$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)I
       5: ireturn

  public <B> int lastIndexOfSlice(scala.collection.GenSeq<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #205                // InterfaceMethod scala/collection/SeqLike.lastIndexOfSlice$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;I)I
       6: ireturn

  public <B> boolean containsSlice(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #209                // InterfaceMethod scala/collection/SeqLike.containsSlice$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public <A1> boolean contains(A1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #217                // InterfaceMethod scala/collection/SeqLike.contains$:(Lscala/collection/SeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public <B, That> That union(scala.collection.GenSeq<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #224                // InterfaceMethod scala/collection/SeqLike.union$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object diff(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #230                // InterfaceMethod scala/collection/SeqLike.diff$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object intersect(scala.collection.GenSeq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod scala/collection/SeqLike.intersect$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object distinct();
    Code:
       0: aload_0
       1: invokestatic  #238                // InterfaceMethod scala/collection/SeqLike.distinct$:(Lscala/collection/SeqLike;)Ljava/lang/Object;
       4: areturn

  public <B, That> That patch(int, scala.collection.GenSeq<B>, int, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #246                // InterfaceMethod scala/collection/SeqLike.patch$:(Lscala/collection/SeqLike;ILscala/collection/GenSeq;ILscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <B, That> That updated(int, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #254                // InterfaceMethod scala/collection/SeqLike.updated$:(Lscala/collection/SeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That $plus$colon(B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #261                // InterfaceMethod scala/collection/SeqLike.$plus$colon$:(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $colon$plus(B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #265                // InterfaceMethod scala/collection/SeqLike.$colon$plus$:(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That padTo(int, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #269                // InterfaceMethod scala/collection/SeqLike.padTo$:(Lscala/collection/SeqLike;ILjava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B> boolean corresponds(scala.collection.GenSeq<B>, scala.Function2<A, B, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #276                // InterfaceMethod scala/collection/SeqLike.corresponds$:(Lscala/collection/SeqLike;Lscala/collection/GenSeq;Lscala/Function2;)Z
       6: ireturn

  public java.lang.Object sortWith(scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #284                // InterfaceMethod scala/collection/SeqLike.sortWith$:(Lscala/collection/SeqLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object sortBy(scala.Function1, scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #291                // InterfaceMethod scala/collection/SeqLike.sortBy$:(Lscala/collection/SeqLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sorted(scala.math.Ordering);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #298                // InterfaceMethod scala/collection/SeqLike.sorted$:(Lscala/collection/SeqLike;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.Range indices();
    Code:
       0: aload_0
       1: invokestatic  #304                // InterfaceMethod scala/collection/SeqLike.indices$:(Lscala/collection/SeqLike;)Lscala/collection/immutable/Range;
       4: areturn

  public scala.collection.SeqView<A, scala.collection.immutable.IndexedSeq<A>> view();
    Code:
       0: aload_0
       1: invokestatic  #311                // InterfaceMethod scala/collection/SeqLike.view$:(Lscala/collection/SeqLike;)Lscala/collection/SeqView;
       4: areturn

  public scala.collection.SeqView<A, scala.collection.immutable.IndexedSeq<A>> view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #317                // InterfaceMethod scala/collection/SeqLike.view$:(Lscala/collection/SeqLike;II)Lscala/collection/SeqView;
       6: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #323                // InterfaceMethod scala/collection/SeqLike.toString$:(Lscala/collection/SeqLike;)Ljava/lang/String;
       4: areturn

  public boolean isDefinedAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #332                // InterfaceMethod scala/collection/GenSeqLike.isDefinedAt$:(Lscala/collection/GenSeqLike;I)Z
       5: ireturn

  public int prefixLength(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // InterfaceMethod scala/collection/GenSeqLike.prefixLength$:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public int indexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // InterfaceMethod scala/collection/GenSeqLike.indexWhere$:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> int indexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // InterfaceMethod scala/collection/GenSeqLike.indexOf$:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int indexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #353                // InterfaceMethod scala/collection/GenSeqLike.indexOf$:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public <B> int lastIndexOf(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #357                // InterfaceMethod scala/collection/GenSeqLike.lastIndexOf$:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)I
       5: ireturn

  public <B> int lastIndexOf(B, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #359                // InterfaceMethod scala/collection/GenSeqLike.lastIndexOf$:(Lscala/collection/GenSeqLike;Ljava/lang/Object;I)I
       6: ireturn

  public int lastIndexWhere(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod scala/collection/GenSeqLike.lastIndexWhere$:(Lscala/collection/GenSeqLike;Lscala/Function1;)I
       5: ireturn

  public <B> boolean startsWith(scala.collection.GenSeq<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // InterfaceMethod scala/collection/GenSeqLike.startsWith$:(Lscala/collection/GenSeqLike;Lscala/collection/GenSeq;)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // InterfaceMethod scala/collection/GenSeqLike.equals$:(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z
       5: ireturn

  public <A1, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #378                // InterfaceMethod scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.Object, C> andThen(scala.Function1<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.Object, scala.Option<A>> lift();
    Code:
       0: aload_0
       1: invokestatic  #394                // InterfaceMethod scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #402                // InterfaceMethod scala/PartialFunction.applyOrElse$:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <U> scala.Function1<java.lang.Object, java.lang.Object> runWith(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #410                // InterfaceMethod scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #419                // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #426                // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #432                // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #438                // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #444                // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #450                // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #456                // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #463                // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #469                // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #475                // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #481                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #487                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #492                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #498                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #504                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #508                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #514                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #520                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #526                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #533                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #539                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #545                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #551                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #557                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, A> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #564                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <U> void foreach(scala.Function1<A, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #573                // InterfaceMethod scala/collection/IterableLike.foreach$:(Lscala/collection/IterableLike;Lscala/Function1;)V
       5: return

  public boolean forall(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // InterfaceMethod scala/collection/IterableLike.forall$:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public boolean exists(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #584                // InterfaceMethod scala/collection/IterableLike.exists$:(Lscala/collection/IterableLike;Lscala/Function1;)Z
       5: ireturn

  public scala.Option<A> find(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #591                // InterfaceMethod scala/collection/IterableLike.find$:(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;
       5: areturn

  public <B> B foldRight(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #600                // InterfaceMethod scala/collection/IterableLike.foldRight$:(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceRight(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #606                // InterfaceMethod scala/collection/IterableLike.reduceRight$:(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterable<A> toIterable();
    Code:
       0: aload_0
       1: invokestatic  #613                // InterfaceMethod scala/collection/IterableLike.toIterable$:(Lscala/collection/IterableLike;)Lscala/collection/Iterable;
       4: areturn

  public scala.collection.Iterator<A> toIterator();
    Code:
       0: aload_0
       1: invokestatic  #618                // InterfaceMethod scala/collection/IterableLike.toIterator$:(Lscala/collection/IterableLike;)Lscala/collection/Iterator;
       4: areturn

  public A head();
    Code:
       0: aload_0
       1: invokestatic  #624                // InterfaceMethod scala/collection/IterableLike.head$:(Lscala/collection/IterableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object slice(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #630                // InterfaceMethod scala/collection/IterableLike.slice$:(Lscala/collection/IterableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object take(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #636                // InterfaceMethod scala/collection/IterableLike.take$:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object drop(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #640                // InterfaceMethod scala/collection/IterableLike.drop$:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object takeWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #646                // InterfaceMethod scala/collection/IterableLike.takeWhile$:(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> grouped(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #651                // InterfaceMethod scala/collection/IterableLike.grouped$:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> sliding(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #655                // InterfaceMethod scala/collection/IterableLike.sliding$:(Lscala/collection/IterableLike;I)Lscala/collection/Iterator;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> sliding(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #661                // InterfaceMethod scala/collection/IterableLike.sliding$:(Lscala/collection/IterableLike;II)Lscala/collection/Iterator;
       6: areturn

  public java.lang.Object takeRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #665                // InterfaceMethod scala/collection/IterableLike.takeRight$:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public java.lang.Object dropRight(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #669                // InterfaceMethod scala/collection/IterableLike.dropRight$:(Lscala/collection/IterableLike;I)Ljava/lang/Object;
       5: areturn

  public <B> void copyToArray(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #678                // InterfaceMethod scala/collection/IterableLike.copyToArray$:(Lscala/collection/IterableLike;Ljava/lang/Object;II)V
       7: return

  public <A1, B, That> That zip(scala.collection.GenIterable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #685                // InterfaceMethod scala/collection/IterableLike.zip$:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, A1, That> That zipAll(scala.collection.GenIterable<B>, A1, B, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, scala.Tuple2<A1, B>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #695                // InterfaceMethod scala/collection/IterableLike.zipAll$:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       9: areturn

  public <A1, That> That zipWithIndex(scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, scala.Tuple2<A1, java.lang.Object>, That>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #702                // InterfaceMethod scala/collection/IterableLike.zipWithIndex$:(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public <B> boolean sameElements(scala.collection.GenIterable<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #709                // InterfaceMethod scala/collection/IterableLike.sameElements$:(Lscala/collection/IterableLike;Lscala/collection/GenIterable;)Z
       5: ireturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokestatic  #716                // InterfaceMethod scala/collection/IterableLike.toStream$:(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;
       4: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #721                // InterfaceMethod scala/collection/IterableLike.canEqual$:(Lscala/collection/IterableLike;Ljava/lang/Object;)Z
       5: ireturn

  public scala.collection.mutable.Builder<A, scala.collection.immutable.IndexedSeq<A>> newBuilder();
    Code:
       0: aload_0
       1: invokestatic  #730                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.newBuilder$:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <B> scala.collection.mutable.Builder<B, scala.collection.immutable.IndexedSeq<B>> genericBuilder();
    Code:
       0: aload_0
       1: invokestatic  #735                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.genericBuilder$:(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;
       4: areturn

  public <A1, A2> scala.Tuple2<scala.collection.immutable.IndexedSeq<A1>, scala.collection.immutable.IndexedSeq<A2>> unzip(scala.Function1<A, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #743                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.unzip$:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <A1, A2, A3> scala.Tuple3<scala.collection.immutable.IndexedSeq<A1>, scala.collection.immutable.IndexedSeq<A2>, scala.collection.immutable.IndexedSeq<A3>> unzip3(scala.Function1<A, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #751                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.unzip3$:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;
       5: areturn

  public scala.collection.GenTraversable flatten(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #758                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten$:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public scala.collection.GenTraversable transpose(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #762                // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.transpose$:(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;
       5: areturn

  public java.lang.Object repr();
    Code:
       0: aload_0
       1: invokestatic  #768                // InterfaceMethod scala/collection/TraversableLike.repr$:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public final boolean isTraversableAgain();
    Code:
       0: aload_0
       1: invokestatic  #773                // InterfaceMethod scala/collection/TraversableLike.isTraversableAgain$:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public boolean hasDefiniteSize();
    Code:
       0: aload_0
       1: invokestatic  #777                // InterfaceMethod scala/collection/TraversableLike.hasDefiniteSize$:(Lscala/collection/TraversableLike;)Z
       4: ireturn

  public <B, That> That $plus$plus(scala.collection.GenTraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #784                // InterfaceMethod scala/collection/TraversableLike.$plus$plus$:(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.TraversableOnce<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #792                // InterfaceMethod scala/collection/TraversableLike.$plus$plus$colon$:(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That $plus$plus$colon(scala.collection.Traversable<B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #798                // InterfaceMethod scala/collection/TraversableLike.$plus$plus$colon$:(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That map(scala.Function1<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #804                // InterfaceMethod scala/collection/TraversableLike.map$:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public <B, That> That flatMap(scala.Function1<A, scala.collection.GenTraversableOnce<B>>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #809                // InterfaceMethod scala/collection/TraversableLike.flatMap$:(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterImpl(scala.Function1, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #816                // InterfaceMethod scala/collection/TraversableLike.filterImpl$:(Lscala/collection/TraversableLike;Lscala/Function1;Z)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filter(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // InterfaceMethod scala/collection/TraversableLike.filter$:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object filterNot(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #826                // InterfaceMethod scala/collection/TraversableLike.filterNot$:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public <B, That> That collect(scala.PartialFunction<A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #834                // InterfaceMethod scala/collection/TraversableLike.collect$:(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> partition(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #840                // InterfaceMethod scala/collection/TraversableLike.partition$:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public <K> scala.collection.immutable.Map<K, scala.collection.immutable.IndexedSeq<A>> groupBy(scala.Function1<A, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #847                // InterfaceMethod scala/collection/TraversableLike.groupBy$:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public <B, That> That scan(B, scala.Function2<B, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #855                // InterfaceMethod scala/collection/TraversableLike.scan$:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanLeft(B, scala.Function2<B, A, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #860                // InterfaceMethod scala/collection/TraversableLike.scanLeft$:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public <B, That> That scanRight(B, scala.Function2<A, B, B>, scala.collection.generic.CanBuildFrom<scala.collection.immutable.IndexedSeq<A>, B, That>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #865                // InterfaceMethod scala/collection/TraversableLike.scanRight$:(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       7: areturn

  public scala.Option<A> headOption();
    Code:
       0: aload_0
       1: invokestatic  #872                // InterfaceMethod scala/collection/TraversableLike.headOption$:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object tail();
    Code:
       0: aload_0
       1: invokestatic  #876                // InterfaceMethod scala/collection/TraversableLike.tail$:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public A last();
    Code:
       0: aload_0
       1: invokestatic  #880                // InterfaceMethod scala/collection/TraversableLike.last$:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public scala.Option<A> lastOption();
    Code:
       0: aload_0
       1: invokestatic  #884                // InterfaceMethod scala/collection/TraversableLike.lastOption$:(Lscala/collection/TraversableLike;)Lscala/Option;
       4: areturn

  public java.lang.Object init();
    Code:
       0: aload_0
       1: invokestatic  #888                // InterfaceMethod scala/collection/TraversableLike.init$:(Lscala/collection/TraversableLike;)Ljava/lang/Object;
       4: areturn

  public java.lang.Object sliceWithKnownDelta(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #895                // InterfaceMethod scala/collection/TraversableLike.sliceWithKnownDelta$:(Lscala/collection/TraversableLike;III)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sliceWithKnownBound(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #900                // InterfaceMethod scala/collection/TraversableLike.sliceWithKnownBound$:(Lscala/collection/TraversableLike;II)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dropWhile(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #904                // InterfaceMethod scala/collection/TraversableLike.dropWhile$:(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> span(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #908                // InterfaceMethod scala/collection/TraversableLike.span$:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<scala.collection.immutable.IndexedSeq<A>, scala.collection.immutable.IndexedSeq<A>> splitAt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #915                // InterfaceMethod scala/collection/TraversableLike.splitAt$:(Lscala/collection/TraversableLike;I)Lscala/Tuple2;
       5: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> tails();
    Code:
       0: aload_0
       1: invokestatic  #920                // InterfaceMethod scala/collection/TraversableLike.tails$:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator<scala.collection.immutable.IndexedSeq<A>> inits();
    Code:
       0: aload_0
       1: invokestatic  #924                // InterfaceMethod scala/collection/TraversableLike.inits$:(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Traversable<A> toTraversable();
    Code:
       0: aload_0
       1: invokestatic  #931                // InterfaceMethod scala/collection/TraversableLike.toTraversable$:(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;
       4: areturn

  public <Col> Col to(scala.collection.generic.CanBuildFrom<scala.runtime.Nothing$, A, Col>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #937                // InterfaceMethod scala/collection/TraversableLike.to$:(Lscala/collection/TraversableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
       5: areturn

  public java.lang.String stringPrefix();
    Code:
       0: aload_0
       1: invokestatic  #942                // InterfaceMethod scala/collection/TraversableLike.stringPrefix$:(Lscala/collection/TraversableLike;)Ljava/lang/String;
       4: areturn

  public scala.collection.generic.FilterMonadic<A, scala.collection.immutable.IndexedSeq<A>> withFilter(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #949                // InterfaceMethod scala/collection/TraversableLike.withFilter$:(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
       5: areturn

  public scala.collection.Parallel par();
    Code:
       0: aload_0
       1: invokestatic  #957                // InterfaceMethod scala/collection/Parallelizable.par$:(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;
       4: areturn

  public scala.collection.immutable.List<A> reversed();
    Code:
       0: aload_0
       1: invokestatic  #966                // InterfaceMethod scala/collection/TraversableOnce.reversed$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #971                // InterfaceMethod scala/collection/TraversableOnce.nonEmpty$:(Lscala/collection/TraversableOnce;)Z
       4: ireturn

  public int count(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #976                // InterfaceMethod scala/collection/TraversableOnce.count$:(Lscala/collection/TraversableOnce;Lscala/Function1;)I
       5: ireturn

  public <B> scala.Option<B> collectFirst(scala.PartialFunction<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #983                // InterfaceMethod scala/collection/TraversableOnce.collectFirst$:(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;
       5: areturn

  public <B> B $div$colon(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #989                // InterfaceMethod scala/collection/TraversableOnce.$div$colon$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B $colon$bslash(B, scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #993                // InterfaceMethod scala/collection/TraversableOnce.$colon$bslash$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #997                // InterfaceMethod scala/collection/TraversableOnce.foldLeft$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B reduceLeft(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1003               // InterfaceMethod scala/collection/TraversableOnce.reduceLeft$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <B> scala.Option<B> reduceLeftOption(scala.Function2<B, A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1010               // InterfaceMethod scala/collection/TraversableOnce.reduceLeftOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <B> scala.Option<B> reduceRightOption(scala.Function2<A, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1015               // InterfaceMethod scala/collection/TraversableOnce.reduceRightOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 reduce(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1020               // InterfaceMethod scala/collection/TraversableOnce.reduce$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;
       5: areturn

  public <A1> scala.Option<A1> reduceOption(scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1025               // InterfaceMethod scala/collection/TraversableOnce.reduceOption$:(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;
       5: areturn

  public <A1> A1 fold(A1, scala.Function2<A1, A1, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1030               // InterfaceMethod scala/collection/TraversableOnce.fold$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public <B> B aggregate(scala.Function0<B>, scala.Function2<B, A, B>, scala.Function2<B, B, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1039               // InterfaceMethod scala/collection/TraversableOnce.aggregate$:(Lscala/collection/TraversableOnce;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public <B> B sum(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // InterfaceMethod scala/collection/TraversableOnce.sum$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> B product(scala.math.Numeric<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1053               // InterfaceMethod scala/collection/TraversableOnce.product$:(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;
       5: areturn

  public <B> A min(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1060               // InterfaceMethod scala/collection/TraversableOnce.min$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A max(scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1064               // InterfaceMethod scala/collection/TraversableOnce.max$:(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;
       5: areturn

  public <B> A maxBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1070               // InterfaceMethod scala/collection/TraversableOnce.maxBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> A minBy(scala.Function1<A, B>, scala.math.Ordering<B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1074               // InterfaceMethod scala/collection/TraversableOnce.minBy$:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       6: areturn

  public <B> void copyToBuffer(scala.collection.mutable.Buffer<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1082               // InterfaceMethod scala/collection/TraversableOnce.copyToBuffer$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V
       5: return

  public <B> void copyToArray(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1088               // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;I)V
       6: return

  public <B> void copyToArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1093               // InterfaceMethod scala/collection/TraversableOnce.copyToArray$:(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V
       5: return

  public <B> java.lang.Object toArray(scala.reflect.ClassTag<B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1101               // InterfaceMethod scala/collection/TraversableOnce.toArray$:(Lscala/collection/TraversableOnce;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       5: areturn

  public scala.collection.immutable.List<A> toList();
    Code:
       0: aload_0
       1: invokestatic  #1106               // InterfaceMethod scala/collection/TraversableOnce.toList$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;
       4: areturn

  public <B> scala.collection.immutable.Set<B> toSet();
    Code:
       0: aload_0
       1: invokestatic  #1113               // InterfaceMethod scala/collection/TraversableOnce.toSet$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Vector<A> toVector();
    Code:
       0: aload_0
       1: invokestatic  #1120               // InterfaceMethod scala/collection/TraversableOnce.toVector$:(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Vector;
       4: areturn

  public <T, U> scala.collection.immutable.Map<T, U> toMap(scala.Predef$$less$colon$less<A, scala.Tuple2<T, U>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1128               // InterfaceMethod scala/collection/TraversableOnce.toMap$:(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String mkString(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1136               // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public java.lang.String mkString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1141               // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String mkString();
    Code:
       0: aload_0
       1: invokestatic  #1144               // InterfaceMethod scala/collection/TraversableOnce.mkString$:(Lscala/collection/TraversableOnce;)Ljava/lang/String;
       4: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1151               // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       9: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1156               // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       6: areturn

  public scala.collection.mutable.StringBuilder addString(scala.collection.mutable.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1160               // InterfaceMethod scala/collection/TraversableOnce.addString$:(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
       5: areturn

  public scalaz.ImmutableArray<A> value();
    Code:
       0: aload_0
       1: getfield      #1164               // Field value:Lscalaz/ImmutableArray;
       4: areturn

  public A apply(int);
    Code:
       0: aload_0
       1: invokevirtual #1168               // Method value:()Lscalaz/ImmutableArray;
       4: iload_1
       5: invokevirtual #1170               // Method scalaz/ImmutableArray.apply:(I)Ljava/lang/Object;
       8: areturn

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #1168               // Method value:()Lscalaz/ImmutableArray;
       4: invokevirtual #1173               // Method scalaz/ImmutableArray.length:()I
       7: ireturn

  public abstract scala.collection.mutable.Builder<A, scalaz.ImmutableArray<A>> arrayBuilder();

  public scala.collection.GenMap toMap(scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1178               // Method toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenSet toSet();
    Code:
       0: aload_0
       1: invokevirtual #1181               // Method toSet:()Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.GenTraversable toTraversable();
    Code:
       0: aload_0
       1: invokevirtual #1184               // Method toTraversable:()Lscala/collection/Traversable;
       4: areturn

  public scala.collection.GenMap groupBy(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1187               // Method groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.GenIterable toIterable();
    Code:
       0: aload_0
       1: invokevirtual #1190               // Method toIterable:()Lscala/collection/Iterable;
       4: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1192               // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1197               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1199               // Method isDefinedAt:(I)Z
       8: ireturn

  public scala.collection.TraversableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1202               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.IterableView view(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #1202               // Method view:(II)Lscala/collection/SeqView;
       6: areturn

  public scala.collection.TraversableView view();
    Code:
       0: aload_0
       1: invokevirtual #1206               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.IterableView view();
    Code:
       0: aload_0
       1: invokevirtual #1206               // Method view:()Lscala/collection/SeqView;
       4: areturn

  public scala.collection.GenSeq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1210               // Method toSeq:()Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.Seq toSeq();
    Code:
       0: aload_0
       1: invokevirtual #1210               // Method toSeq:()Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.Traversable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1214               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/IndexedSeq;
       5: areturn

  public scala.collection.Iterable toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1214               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/IndexedSeq;
       5: areturn

  public scala.collection.Seq toCollection(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1214               // Method toCollection:(Ljava/lang/Object;)Lscala/collection/IndexedSeq;
       5: areturn

  public scala.collection.Traversable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1218               // Method thisCollection:()Lscala/collection/IndexedSeq;
       4: areturn

  public scala.collection.Iterable thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1218               // Method thisCollection:()Lscala/collection/IndexedSeq;
       4: areturn

  public scala.collection.Seq thisCollection();
    Code:
       0: aload_0
       1: invokevirtual #1218               // Method thisCollection:()Lscala/collection/IndexedSeq;
       4: areturn

  public scala.collection.TraversableOnce seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Traversable seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Iterable seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.Seq seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.immutable.Seq seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public scala.collection.IndexedSeq seq();
    Code:
       0: aload_0
       1: invokevirtual #1221               // Method seq:()Lscala/collection/immutable/IndexedSeq;
       4: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1197               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokevirtual #1225               // Method apply:(I)Ljava/lang/Object;
       8: areturn

  public scalaz.ImmutableArray$WrappedImmutableArray(scalaz.ImmutableArray<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1164               // Field value:Lscalaz/ImmutableArray;
       5: aload_0
       6: invokespecial #1231               // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #1237               // InterfaceMethod scala/collection/GenTraversableOnce.$init$:(Lscala/collection/GenTraversableOnce;)V
      13: aload_0
      14: invokestatic  #1240               // InterfaceMethod scala/collection/TraversableOnce.$init$:(Lscala/collection/TraversableOnce;)V
      17: aload_0
      18: invokestatic  #1243               // InterfaceMethod scala/collection/Parallelizable.$init$:(Lscala/collection/Parallelizable;)V
      21: aload_0
      22: invokestatic  #1246               // InterfaceMethod scala/collection/TraversableLike.$init$:(Lscala/collection/TraversableLike;)V
      25: aload_0
      26: invokestatic  #1249               // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.$init$:(Lscala/collection/generic/GenericTraversableTemplate;)V
      29: aload_0
      30: invokestatic  #1254               // InterfaceMethod scala/collection/GenTraversable.$init$:(Lscala/collection/GenTraversable;)V
      33: aload_0
      34: invokestatic  #1259               // InterfaceMethod scala/collection/Traversable.$init$:(Lscala/collection/Traversable;)V
      37: aload_0
      38: invokestatic  #1264               // InterfaceMethod scala/collection/immutable/Traversable.$init$:(Lscala/collection/immutable/Traversable;)V
      41: aload_0
      42: invokestatic  #1269               // InterfaceMethod scala/collection/GenIterable.$init$:(Lscala/collection/GenIterable;)V
      45: aload_0
      46: invokestatic  #1272               // InterfaceMethod scala/collection/IterableLike.$init$:(Lscala/collection/IterableLike;)V
      49: aload_0
      50: invokestatic  #1277               // InterfaceMethod scala/collection/Iterable.$init$:(Lscala/collection/Iterable;)V
      53: aload_0
      54: invokestatic  #1282               // InterfaceMethod scala/collection/immutable/Iterable.$init$:(Lscala/collection/immutable/Iterable;)V
      57: aload_0
      58: invokestatic  #1284               // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
      61: aload_0
      62: invokestatic  #1287               // InterfaceMethod scala/PartialFunction.$init$:(Lscala/PartialFunction;)V
      65: aload_0
      66: invokestatic  #1290               // InterfaceMethod scala/collection/GenSeqLike.$init$:(Lscala/collection/GenSeqLike;)V
      69: aload_0
      70: invokestatic  #1295               // InterfaceMethod scala/collection/GenSeq.$init$:(Lscala/collection/GenSeq;)V
      73: aload_0
      74: invokestatic  #1298               // InterfaceMethod scala/collection/SeqLike.$init$:(Lscala/collection/SeqLike;)V
      77: aload_0
      78: invokestatic  #1303               // InterfaceMethod scala/collection/Seq.$init$:(Lscala/collection/Seq;)V
      81: aload_0
      82: invokestatic  #1306               // InterfaceMethod scala/collection/immutable/Seq.$init$:(Lscala/collection/immutable/Seq;)V
      85: aload_0
      86: invokestatic  #1309               // InterfaceMethod scala/collection/IndexedSeqLike.$init$:(Lscala/collection/IndexedSeqLike;)V
      89: aload_0
      90: invokestatic  #1314               // InterfaceMethod scala/collection/IndexedSeq.$init$:(Lscala/collection/IndexedSeq;)V
      93: aload_0
      94: invokestatic  #1317               // InterfaceMethod scala/collection/immutable/IndexedSeq.$init$:(Lscala/collection/immutable/IndexedSeq;)V
      97: return
}
