Compiled from "LazyTuple.scala"
public final class scalaz.LazyTuple2Instances$$anon$13 implements scalaz.LazyTuple2Monoid<A1, A2> {
  private final scalaz.syntax.MonoidSyntax<scalaz.LazyTuple2<A1, A2>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple2<A1, A2>> semigroupSyntax;

  private final scalaz.Monoid A1$4;

  private final scalaz.Monoid A2$4;

  public scalaz.LazyTuple2<A1, A2> zero();
    Code:
       0: aload_0
       1: invokestatic  #46                 // InterfaceMethod scalaz/LazyTuple2Monoid.zero$:(Lscalaz/LazyTuple2Monoid;)Lscalaz/LazyTuple2;
       4: areturn

  public scalaz.LazyTuple2<A1, A2> append(scalaz.LazyTuple2<A1, A2>, scala.Function0<scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/LazyTuple2Semigroup.append$:(Lscalaz/LazyTuple2Semigroup;Lscalaz/LazyTuple2;Lscala/Function0;)Lscalaz/LazyTuple2;
       6: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #88                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #96                 // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #100                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #107                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #112                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.LazyTuple2<A1, A2>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #138                // InterfaceMethod scalaz/Semigroup.multiply1$:(Lscalaz/Semigroup;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple2<A1, A2>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.LazyTuple2<A1, A2>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #145                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.LazyTuple2<A1, A2>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.LazyTuple2<A1, A2>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #150                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.LazyTuple2<A1, A2>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.MonoidSyntax<scalaz.LazyTuple2<A1, A2>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #175                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #175                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple2<A1, A2>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.LazyTuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #183                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.Monoid<A1> _1();
    Code:
       0: aload_0
       1: getfield      #191                // Field A1$4:Lscalaz/Monoid;
       4: areturn

  public scalaz.Monoid<A2> _2();
    Code:
       0: aload_0
       1: getfield      #195                // Field A2$4:Lscalaz/Monoid;
       4: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #198                // class scalaz/LazyTuple2
       4: astore_3
       5: getstatic     #204                // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       8: aload_0
       9: aload_3
      10: aload_2
      11: invokedynamic #225,  0            // InvokeDynamic #0:apply:(Lscalaz/LazyTuple2Semigroup;Lscalaz/LazyTuple2;Lscala/Function0;)Lscala/Function0;
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokedynamic #230,  0            // InvokeDynamic #1:apply:(Lscalaz/LazyTuple2Semigroup;Lscalaz/LazyTuple2;Lscala/Function0;)Lscala/Function0;
      24: astore        5
      26: astore        4
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: new           #20                 // class scalaz/LazyTuple2$$anon$1
      36: dup
      37: aload         4
      39: aload         5
      41: invokespecial #234                // Method scalaz/LazyTuple2$$anon$1."<init>":(Lscala/Function0;Lscala/Function0;)V
      44: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method zero:()Lscalaz/LazyTuple2;
       4: areturn

  public scalaz.Semigroup _2();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method _2:()Lscalaz/Monoid;
       4: areturn

  public scalaz.Semigroup _1();
    Code:
       0: aload_0
       1: invokevirtual #246                // Method _1:()Lscalaz/Monoid;
       4: areturn

  public scalaz.LazyTuple2Instances$$anon$13(scalaz.LazyTuple2Instances, scalaz.Monoid, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #191                // Field A1$4:Lscalaz/Monoid;
       5: aload_0
       6: aload_3
       7: putfield      #195                // Field A2$4:Lscalaz/Monoid;
      10: aload_0
      11: invokespecial #251                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #255                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      18: aload_0
      19: invokestatic  #258                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      22: aload_0
      23: invokestatic  #261                // InterfaceMethod scalaz/LazyTuple2Semigroup.$init$:(Lscalaz/LazyTuple2Semigroup;)V
      26: aload_0
      27: invokestatic  #264                // InterfaceMethod scalaz/LazyTuple2Monoid.$init$:(Lscalaz/LazyTuple2Monoid;)V
      30: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #277,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
