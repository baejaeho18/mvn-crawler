Compiled from "ISet.scala"
public final class scalaz.ISetInstances$$anon$3 implements scalaz.Monoid<scalaz.ISet<A>>, scalaz.SemiLattice<scalaz.ISet<A>> {
  private final scalaz.syntax.SemiLatticeSyntax<scalaz.ISet<A>> semiLatticeSyntax;

  private final scalaz.syntax.BandSyntax<scalaz.ISet<A>> bandSyntax;

  private final scalaz.syntax.MonoidSyntax<scalaz.ISet<A>> monoidSyntax;

  private final scalaz.syntax.SemigroupSyntax<scalaz.ISet<A>> semigroupSyntax;

  private final scalaz.Order evidence$4$1;

  public scalaz.SemiLattice<scalaz.ISet<A>>.SemiLatticeLaw semiLatticeLaw();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod scalaz/SemiLattice.semiLatticeLaw$:(Lscalaz/SemiLattice;)Lscalaz/SemiLattice$SemiLatticeLaw;
       4: areturn

  public java.lang.Object multiply1(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #62                 // InterfaceMethod scalaz/Band.multiply1$:(Lscalaz/Band;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public scalaz.Band<scalaz.ISet<A>>.BandLaw bandLaw();
    Code:
       0: aload_0
       1: invokestatic  #71                 // InterfaceMethod scalaz/Band.bandLaw$:(Lscalaz/Band;)Lscalaz/Band$BandLaw;
       4: areturn

  public java.lang.Object multiply(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #76                 // InterfaceMethod scalaz/Monoid.multiply$:(Lscalaz/Monoid;Ljava/lang/Object;I)Ljava/lang/Object;
       6: areturn

  public boolean isMZero(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #84                 // InterfaceMethod scalaz/Monoid.isMZero$:(Lscalaz/Monoid;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public final java.lang.Object ifEmpty(java.lang.Object, scala.Function0, scala.Function0, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #93                 // InterfaceMethod scalaz/Monoid.ifEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;Lscalaz/Equal;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onNotEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #102                // InterfaceMethod scalaz/Monoid.onNotEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object onEmpty(java.lang.Object, scala.Function0, scalaz.Equal, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #107                // InterfaceMethod scalaz/Monoid.onEmpty$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function0;Lscalaz/Equal;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object unfoldlSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #114                // InterfaceMethod scalaz/Monoid.unfoldlSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrSum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // InterfaceMethod scalaz/Monoid.unfoldrSum$:(Lscalaz/Monoid;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public final scalaz.Category<?> category();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scalaz/Monoid.category$:(Lscalaz/Monoid;)Lscalaz/Category;
       4: areturn

  public final scalaz.Applicative<?> applicative();
    Code:
       0: aload_0
       1: invokestatic  #133                // InterfaceMethod scalaz/Monoid.applicative$:(Lscalaz/Monoid;)Lscalaz/Applicative;
       4: areturn

  public scalaz.Monoid<scalaz.ISet<A>>.MonoidLaw monoidLaw();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod scalaz/Monoid.monoidLaw$:(Lscalaz/Monoid;)Lscalaz/Monoid$MonoidLaw;
       4: areturn

  public <S> scalaz.Maybe<scalaz.ISet<A>> unfoldlSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.ISet<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #147                // InterfaceMethod scalaz/Semigroup.unfoldlSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S> scalaz.Maybe<scalaz.ISet<A>> unfoldrSumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.ISet<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #152                // InterfaceMethod scalaz/Semigroup.unfoldrSumOpt$:(Lscalaz/Semigroup;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public final scalaz.Compose<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/Semigroup.compose$:(Lscalaz/Semigroup;)Lscalaz/Compose;
       4: areturn

  public final scalaz.Apply<?> apply();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod scalaz/Semigroup.apply$:(Lscalaz/Semigroup;)Lscalaz/Apply;
       4: areturn

  public scalaz.Semigroup<scalaz.ISet<A>>.SemigroupLaw semigroupLaw();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod scalaz/Semigroup.semigroupLaw$:(Lscalaz/Semigroup;)Lscalaz/Semigroup$SemigroupLaw;
       4: areturn

  public scalaz.syntax.SemiLatticeSyntax<scalaz.ISet<A>> semiLatticeSyntax();
    Code:
       0: aload_0
       1: getfield      #177                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       4: areturn

  public void scalaz$SemiLattice$_setter_$semiLatticeSyntax_$eq(scalaz.syntax.SemiLatticeSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #177                // Field semiLatticeSyntax:Lscalaz/syntax/SemiLatticeSyntax;
       5: return

  public scalaz.syntax.BandSyntax<scalaz.ISet<A>> bandSyntax();
    Code:
       0: aload_0
       1: getfield      #185                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       4: areturn

  public void scalaz$Band$_setter_$bandSyntax_$eq(scalaz.syntax.BandSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #185                // Field bandSyntax:Lscalaz/syntax/BandSyntax;
       5: return

  public scalaz.syntax.MonoidSyntax<scalaz.ISet<A>> monoidSyntax();
    Code:
       0: aload_0
       1: getfield      #192                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       4: areturn

  public void scalaz$Monoid$_setter_$monoidSyntax_$eq(scalaz.syntax.MonoidSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #192                // Field monoidSyntax:Lscalaz/syntax/MonoidSyntax;
       5: return

  public scalaz.syntax.SemigroupSyntax<scalaz.ISet<A>> semigroupSyntax();
    Code:
       0: aload_0
       1: getfield      #199                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       4: areturn

  public void scalaz$Semigroup$_setter_$semigroupSyntax_$eq(scalaz.syntax.SemigroupSyntax<scalaz.ISet<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #199                // Field semigroupSyntax:Lscalaz/syntax/SemigroupSyntax;
       5: return

  public scalaz.ISet<A> zero();
    Code:
       0: getstatic     #211                // Field scalaz/ISet$.MODULE$:Lscalaz/ISet$;
       3: invokevirtual #214                // Method scalaz/ISet$.empty:()Lscalaz/ISet;
       6: areturn

  public scalaz.ISet<A> append(scalaz.ISet<A>, scala.Function0<scalaz.ISet<A>>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #223,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #225                // class scalaz/ISet
      10: aload_0
      11: getfield      #227                // Field evidence$4$1:Lscalaz/Order;
      14: invokevirtual #231                // Method scalaz/ISet.union:(Lscalaz/ISet;Lscalaz/Order;)Lscalaz/ISet;
      17: areturn

  public java.lang.Object append(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #225                // class scalaz/ISet
       4: aload_2
       5: invokeinterface #223,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #225                // class scalaz/ISet
      13: aload_0
      14: getfield      #227                // Field evidence$4$1:Lscalaz/Order;
      17: invokevirtual #231                // Method scalaz/ISet.union:(Lscalaz/ISet;Lscalaz/Order;)Lscalaz/ISet;
      20: areturn

  public java.lang.Object zero();
    Code:
       0: aload_0
       1: invokevirtual #237                // Method zero:()Lscalaz/ISet;
       4: areturn

  public scalaz.ISetInstances$$anon$3(scalaz.ISetInstances, scalaz.Order);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #227                // Field evidence$4$1:Lscalaz/Order;
       5: aload_0
       6: invokespecial #243                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #247                // InterfaceMethod scalaz/Semigroup.$init$:(Lscalaz/Semigroup;)V
      13: aload_0
      14: invokestatic  #250                // InterfaceMethod scalaz/Monoid.$init$:(Lscalaz/Monoid;)V
      17: aload_0
      18: invokestatic  #253                // InterfaceMethod scalaz/Band.$init$:(Lscalaz/Band;)V
      21: aload_0
      22: invokestatic  #256                // InterfaceMethod scalaz/SemiLattice.$init$:(Lscalaz/SemiLattice;)V
      25: return
}
