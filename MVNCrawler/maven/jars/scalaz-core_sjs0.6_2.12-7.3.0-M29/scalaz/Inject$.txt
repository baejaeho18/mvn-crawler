Compiled from "Inject.scala"
public final class scalaz.Inject$ extends scalaz.InjectInstances {
  public static scalaz.Inject$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Inject$
       3: invokespecial #19                 // Method "<init>":()V
       6: return

  public <F, G> scalaz.Inject<F, G> instance(scalaz.NaturalTransformation<F, G>, scalaz.NaturalTransformation<G, ?>);
    Code:
       0: new           #12                 // class scalaz/Inject$$anon$4
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #27                 // Method scalaz/Inject$$anon$4."<init>":(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)V
       9: areturn

  public <F, G, A> scalaz.Free<F, A> inject(G, scalaz.Inject<G, F>);
    Code:
       0: getstatic     #39                 // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       3: aload_2
       4: aload_1
       5: invokevirtual #45                 // Method scalaz/Inject.inj:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokevirtual #49                 // Method scalaz/Free$.apply:(Ljava/lang/Object;)Lscalaz/Free;
      11: areturn

  public <F, G, A> scala.Option<G> match_(scalaz.Free<F, A>, scalaz.Functor<F>, scalaz.Inject<G, F>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #62                 // Method scalaz/Free.resume:(Lscalaz/Functor;)Lscalaz/$bslash$div;
       5: dup
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: astore        4
      13: aload         4
      15: instanceof    #64                 // class scalaz/$minus$bslash$div
      18: ifeq          42
      21: aload         4
      23: checkcast     #64                 // class scalaz/$minus$bslash$div
      26: invokevirtual #68                 // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      29: astore        6
      31: aload_3
      32: aload         6
      34: invokestatic  #72                 // Method $anonfun$match_$1:(Lscalaz/Inject;Ljava/lang/Object;)Lscala/Option;
      37: astore        5
      39: goto          76
      42: aload         4
      44: instanceof    #74                 // class scalaz/$bslash$div$minus
      47: ifeq          66
      50: aload         4
      52: checkcast     #74                 // class scalaz/$bslash$div$minus
      55: invokevirtual #77                 // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
      58: invokestatic  #81                 // Method $anonfun$match_$2:(Ljava/lang/Object;)Lscala/Option;
      61: astore        5
      63: goto          76
      66: new           #83                 // class scala/MatchError
      69: dup
      70: aload         4
      72: invokespecial #86                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: aload         5
      78: areturn

  public <F, G> scalaz.Inject<F, G> apply(scalaz.Inject<F, G>);
    Code:
       0: aload_1
       1: areturn

  public static final scala.Option $anonfun$match_$1(scalaz.Inject, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #101                // Method scalaz/Inject.prj:(Ljava/lang/Object;)Lscala/Option;
       5: areturn

  public static final scala.Option $anonfun$match_$2(java.lang.Object);
    Code:
       0: getstatic     #107                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       3: invokevirtual #111                // Method scalaz/std/option$.none:()Lscala/Option;
       6: areturn

  private scalaz.Inject$();
    Code:
       0: aload_0
       1: invokespecial #112                // Method scalaz/InjectInstances."<init>":()V
       4: aload_0
       5: putstatic     #114                // Field MODULE$:Lscalaz/Inject$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #128,  0            // InvokeDynamic #0:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
