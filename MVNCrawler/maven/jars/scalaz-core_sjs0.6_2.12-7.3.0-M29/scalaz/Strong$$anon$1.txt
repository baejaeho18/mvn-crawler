Compiled from "Strong.scala"
public final class scalaz.Strong$$anon$1 implements scalaz.Strong<$eq$greater$colon>.StrongLaws {
  private final scalaz.Strong $outer;

  public <A, B, C> boolean firstIsSwappedSecond($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // InterfaceMethod scalaz/Strong$StrongLaws.firstIsSwappedSecond$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean secondIsSwappedFirst($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // InterfaceMethod scalaz/Strong$StrongLaws.secondIsSwappedFirst$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean mapfstEqualsFirstAndThenMapsnd($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/Strong$StrongLaws.mapfstEqualsFirstAndThenMapsnd$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C> boolean mapfstEqualsSecondAndThenMapsnd($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // InterfaceMethod scalaz/Strong$StrongLaws.mapfstEqualsSecondAndThenMapsnd$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C, D> boolean dinaturalityFirst($eq$greater$colon, scala.Function1<C, D>, scalaz.Equal<$eq$greater$colon>, scalaz.Strong<scala.Function1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #55                 // InterfaceMethod scalaz/Strong$StrongLaws.dinaturalityFirst$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;Lscalaz/Strong;)Z
       9: ireturn

  public <A, B, C, D> boolean dinaturalitySecond($eq$greater$colon, scala.Function1<C, D>, scalaz.Equal<$eq$greater$colon>, scalaz.Strong<scala.Function1>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #60                 // InterfaceMethod scalaz/Strong$StrongLaws.dinaturalitySecond$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;Lscalaz/Strong;)Z
       9: ireturn

  public <A, B, C, D> boolean firstFirstIsDimap($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #65                 // InterfaceMethod scalaz/Strong$StrongLaws.firstFirstIsDimap$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C, D> boolean secondSecondIsDimap($eq$greater$colon, scalaz.Equal<$eq$greater$colon>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod scalaz/Strong$StrongLaws.secondSecondIsDimap$:(Lscalaz/Strong$StrongLaws;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B> boolean identity(java.lang.Object, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #76                 // InterfaceMethod scalaz/Profunctor$ProfunctorLaw.identity$:(Lscalaz/Profunctor$ProfunctorLaw;Ljava/lang/Object;Lscalaz/Equal;)Z
       6: ireturn

  public <A, B, C, D, E, F> boolean composite(java.lang.Object, scala.Function1<C, B>, scala.Function1<B, A>, scala.Function1<D, E>, scala.Function1<E, F>, scalaz.Equal<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #88                 // InterfaceMethod scalaz/Profunctor$ProfunctorLaw.composite$:(Lscalaz/Profunctor$ProfunctorLaw;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscalaz/Equal;)Z
      13: ireturn

  public scalaz.Strong scalaz$Strong$StrongLaws$$$outer();
    Code:
       0: aload_0
       1: getfield      #92                 // Field $outer:Lscalaz/Strong;
       4: areturn

  public scalaz.Profunctor scalaz$Profunctor$ProfunctorLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #92                 // Field $outer:Lscalaz/Strong;
       4: areturn

  public scalaz.Strong$$anon$1(scalaz.Strong<$eq$greater$colon>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #92                 // Field $outer:Lscalaz/Strong;
      11: aload_0
      12: invokespecial #100                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #104                // InterfaceMethod scalaz/Profunctor$ProfunctorLaw.$init$:(Lscalaz/Profunctor$ProfunctorLaw;)V
      19: aload_0
      20: invokestatic  #107                // InterfaceMethod scalaz/Strong$StrongLaws.$init$:(Lscalaz/Strong$StrongLaws;)V
      23: return
}
