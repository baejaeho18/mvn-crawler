Compiled from "NullArgument.scala"
public final class scalaz.NullArgumentInstances$$anon$4 implements scalaz.Split<scalaz.NullArgument>, scalaz.Profunctor<scalaz.NullArgument> {
  private final scalaz.syntax.ProfunctorSyntax<scalaz.NullArgument> profunctorSyntax;

  private final scalaz.syntax.SplitSyntax<scalaz.NullArgument> splitSyntax;

  private final scalaz.syntax.ComposeSyntax<scalaz.NullArgument> composeSyntax;

  public java.lang.Object dimap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #43                 // InterfaceMethod scalaz/Profunctor.dimap$:(Lscalaz/Profunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #54                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #61                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<scalaz.NullArgument>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.Plus<?> plus();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/Compose.plus$:(Lscalaz/Compose;)Lscalaz/Plus;
       4: areturn

  public <A> scalaz.Semigroup<scalaz.NullArgument<A, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod scalaz/Compose.semigroup$:(Lscalaz/Compose;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Compose<scalaz.NullArgument>.ComposeLaw composeLaw();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod scalaz/Compose.composeLaw$:(Lscalaz/Compose;)Lscalaz/Compose$ComposeLaw;
       4: areturn

  public scalaz.syntax.ProfunctorSyntax<scalaz.NullArgument> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #100                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<scalaz.NullArgument>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public scalaz.syntax.SplitSyntax<scalaz.NullArgument> splitSyntax();
    Code:
       0: aload_0
       1: getfield      #108                // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       4: areturn

  public void scalaz$Split$_setter_$splitSyntax_$eq(scalaz.syntax.SplitSyntax<scalaz.NullArgument>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field splitSyntax:Lscalaz/syntax/SplitSyntax;
       5: return

  public scalaz.syntax.ComposeSyntax<scalaz.NullArgument> composeSyntax();
    Code:
       0: aload_0
       1: getfield      #115                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       4: areturn

  public void scalaz$Compose$_setter_$composeSyntax_$eq(scalaz.syntax.ComposeSyntax<scalaz.NullArgument>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field composeSyntax:Lscalaz/syntax/ComposeSyntax;
       5: return

  public <A, B, C> scalaz.NullArgument<A, C> compose(scalaz.NullArgument<B, C>, scalaz.NullArgument<A, B>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #126                // Method scalaz/NullArgument.compose:(Lscalaz/NullArgument;)Lscalaz/NullArgument;
       5: areturn

  public <A, B, C, D> scalaz.NullArgument<scala.Tuple2<A, C>, scala.Tuple2<B, D>> split(scalaz.NullArgument<A, B>, scalaz.NullArgument<C, D>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #132                // Method scalaz/NullArgument.$times$times$times:(Lscalaz/NullArgument;)Lscalaz/NullArgument;
       5: areturn

  public <A, B, C> scalaz.NullArgument<C, B> mapfst(scalaz.NullArgument<A, B>, scala.Function1<C, A>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #142                // Field scalaz/NullArgument$.MODULE$:Lscalaz/NullArgument$;
       9: aload_1
      10: aload_2
      11: invokedynamic #166,  0            // InvokeDynamic #0:apply:(Lscalaz/NullArgument;Lscala/Function1;)Lscala/Function1;
      16: astore_3
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: new           #123                // class scalaz/NullArgument
      25: dup
      26: aload_3
      27: invokespecial #170                // Method scalaz/NullArgument."<init>":(Lscala/Function1;)V
      30: areturn

  public <A, B, C> scalaz.NullArgument<A, C> mapsnd(scalaz.NullArgument<A, B>, scala.Function1<B, C>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #179                // Method scalaz/NullArgument.map:(Lscala/Function1;)Lscalaz/NullArgument;
       5: areturn

  public java.lang.Object mapsnd(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #123                // class scalaz/NullArgument
       4: aload_2
       5: invokevirtual #179                // Method scalaz/NullArgument.map:(Lscala/Function1;)Lscalaz/NullArgument;
       8: areturn

  public java.lang.Object mapfst(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #123                // class scalaz/NullArgument
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #142                // Field scalaz/NullArgument$.MODULE$:Lscalaz/NullArgument$;
      14: aload_3
      15: aload_2
      16: invokedynamic #166,  0            // InvokeDynamic #0:apply:(Lscalaz/NullArgument;Lscala/Function1;)Lscala/Function1;
      21: astore        4
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: new           #123                // class scalaz/NullArgument
      31: dup
      32: aload         4
      34: invokespecial #170                // Method scalaz/NullArgument."<init>":(Lscala/Function1;)V
      37: areturn

  public java.lang.Object split(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #123                // class scalaz/NullArgument
       5: aload_2
       6: checkcast     #123                // class scalaz/NullArgument
       9: invokevirtual #185                // Method split:(Lscalaz/NullArgument;Lscalaz/NullArgument;)Lscalaz/NullArgument;
      12: areturn

  public java.lang.Object compose(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #123                // class scalaz/NullArgument
       5: aload_2
       6: checkcast     #123                // class scalaz/NullArgument
       9: invokevirtual #187                // Method compose:(Lscalaz/NullArgument;Lscalaz/NullArgument;)Lscalaz/NullArgument;
      12: areturn

  public scalaz.NullArgumentInstances$$anon$4(scalaz.NullArgumentInstances);
    Code:
       0: aload_0
       1: invokespecial #192                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #196                // InterfaceMethod scalaz/Compose.$init$:(Lscalaz/Compose;)V
       8: aload_0
       9: invokestatic  #199                // InterfaceMethod scalaz/Split.$init$:(Lscalaz/Split;)V
      12: aload_0
      13: invokestatic  #202                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      16: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #215,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
