Compiled from "NonEmptyList.scala"
public final class scalaz.NonEmptyListInstances$$anon$1 implements scalaz.Traverse1<scalaz.NonEmptyList>, scalaz.Monad<scalaz.NonEmptyList>, scalaz.Alt<scalaz.NonEmptyList>, scalaz.BindRec<scalaz.NonEmptyList>, scalaz.Plus<scalaz.NonEmptyList>, scalaz.Comonad<scalaz.NonEmptyList>, scalaz.Zip<scalaz.NonEmptyList>, scalaz.Unzip<scalaz.NonEmptyList>, scalaz.Align<scalaz.NonEmptyList> {
  private final scalaz.syntax.AlignSyntax<scalaz.NonEmptyList> alignSyntax;

  private final scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList> unzipSyntax;

  private final scalaz.syntax.ZipSyntax<scalaz.NonEmptyList> zipSyntax;

  private final scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<scalaz.NonEmptyList> cobindSyntax;

  private final scalaz.syntax.PlusSyntax<scalaz.NonEmptyList> plusSyntax;

  private final scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList> bindRecSyntax;

  private final scalaz.syntax.AltSyntax<scalaz.NonEmptyList> altSyntax;

  private final scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList> invariantAltSyntax;

  private final scalaz.syntax.MonadSyntax<scalaz.NonEmptyList> monadSyntax;

  private final scalaz.syntax.BindSyntax<scalaz.NonEmptyList> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.NonEmptyList> applySyntax;

  private final scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList> traverse1Syntax;

  private final scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList> foldable1Syntax;

  private final scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList> invariantFunctorSyntax;

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #205                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #231                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #236                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #240                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #244                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #248                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #256                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.NonEmptyList>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public java.lang.Object firsts(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #269                // InterfaceMethod scalaz/Unzip.firsts$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object seconds(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #273                // InterfaceMethod scalaz/Unzip.seconds$:(Lscalaz/Unzip;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Unzip<?> compose(scalaz.Functor<scalaz.NonEmptyList>, scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #281                // InterfaceMethod scalaz/Unzip.compose$:(Lscalaz/Unzip;Lscalaz/Functor;Lscalaz/Unzip;)Lscalaz/Unzip;
       6: areturn

  public <G> scalaz.Unzip<?> product(scalaz.Unzip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #288                // InterfaceMethod scalaz/Unzip.product$:(Lscalaz/Unzip;Lscalaz/Unzip;)Lscalaz/Unzip;
       5: areturn

  public scala.Tuple3 unzip3(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod scalaz/Unzip.unzip3$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple3;
       5: areturn

  public scala.Tuple4 unzip4(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #301                // InterfaceMethod scalaz/Unzip.unzip4$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple4;
       5: areturn

  public scala.Tuple5 unzip5(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // InterfaceMethod scalaz/Unzip.unzip5$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple5;
       5: areturn

  public scala.Tuple6 unzip6(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // InterfaceMethod scalaz/Unzip.unzip6$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple6;
       5: areturn

  public scala.Tuple7 unzip7(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // InterfaceMethod scalaz/Unzip.unzip7$:(Lscalaz/Unzip;Ljava/lang/Object;)Lscala/Tuple7;
       5: areturn

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.NonEmptyList>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #324                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #339                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #346                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #353                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.NonEmptyList> ap(scalaz.Functor<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.NonEmptyList>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #368                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #374                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.NonEmptyList>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #381                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #387                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.NonEmptyList>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #395                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.NonEmptyList<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.NonEmptyList<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #403                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.NonEmptyList<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.NonEmptyList<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #408                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #413                // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.NonEmptyList<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #425                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.NonEmptyList>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #432                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #437                // InterfaceMethod scalaz/BindRec.forever$:(Lscalaz/BindRec;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.BindRec<?> product(scalaz.BindRec<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #442                // InterfaceMethod scalaz/BindRec.product$:(Lscalaz/BindRec;Lscalaz/BindRec;)Lscalaz/BindRec;
       5: areturn

  public scalaz.BindRec<scalaz.NonEmptyList>.BindRecLaw bindRecLaw();
    Code:
       0: aload_0
       1: invokestatic  #450                // InterfaceMethod scalaz/BindRec.bindRecLaw$:(Lscalaz/BindRec;)Lscalaz/BindRec$BindRecLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #467                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #474                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #481                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #486                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #492                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #498                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #504                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #510                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #517                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #523                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #529                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #535                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.NonEmptyList>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #542                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #550                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #556                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #562                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #568                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #573                // InterfaceMethod scalaz/Monad.map$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #581                // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #588                // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #593                // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #597                // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #601                // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #605                // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #610                // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.NonEmptyList>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #618                // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #621                // InterfaceMethod scalaz/Bind.ap$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #627                // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #633                // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #642                // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #647                // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #652                // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.NonEmptyList>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #660                // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #666                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #672                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #681                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #688                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #693                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #698                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #704                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #710                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #717                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #725                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #730                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #737                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #742                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #749                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #754                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #758                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #761                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.NonEmptyList> flip();
    Code:
       0: aload_0
       1: invokestatic  #766                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #774                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.NonEmptyList>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #781                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #788                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #793                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #799                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #805                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #811                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #817                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #824                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public <S, A, B> scalaz.Maybe<scalaz.NonEmptyList<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.NonEmptyList<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #832                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #838                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #841                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> apF(scala.Function0<scalaz.NonEmptyList<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #848                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #854                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #861                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #868                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #875                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #882                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #889                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #896                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #902                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #908                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #914                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #921                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #928                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #935                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #943                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #951                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #959                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #967                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #973                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #979                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #985                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #991                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #996                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1002               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1008               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1014               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1020               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1027               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1034               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1041               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1055               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1062               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1069               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1076               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<K>, scalaz.NonEmptyList<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1083               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>, scalaz.NonEmptyList<D>, scalaz.NonEmptyList<E>, scalaz.NonEmptyList<FF>, scalaz.NonEmptyList<G>, scalaz.NonEmptyList<H>, scalaz.NonEmptyList<I>, scalaz.NonEmptyList<J>, scalaz.NonEmptyList<K>, scalaz.NonEmptyList<L>, scalaz.NonEmptyList<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1090               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1094               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1098               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1103               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1111               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.NonEmptyList>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1118               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1123               // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1130               // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1132               // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1139               // InterfaceMethod scalaz/Traverse1.traverseImpl$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1145               // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1152               // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1158               // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.NonEmptyList>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #1165               // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1170               // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1173               // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1179               // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1185               // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1191               // InterfaceMethod scalaz/Foldable1.foldRight$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1195               // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1200               // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1206               // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1212               // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1216               // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1220               // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1224               // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1232               // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1238               // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1245               // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1250               // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1255               // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1260               // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1265               // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1272               // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1279               // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1284               // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1289               // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1294               // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1299               // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1306               // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1312               // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1317               // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1321               // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1327               // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1331               // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1336               // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1343               // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1349               // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1355               // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1361               // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1366               // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1373               // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1377               // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.NonEmptyList>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #1384               // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1389               // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1396               // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1399               // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1402               // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.NonEmptyList>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1409               // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.NonEmptyList>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #1416               // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1419               // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1424               // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1430               // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1436               // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1443               // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1449               // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1455               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1459               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1465               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1471               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1478               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1484               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1489               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1491               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1497               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1501               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1505               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1510               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1514               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1518               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1522               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.NonEmptyList>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1529               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1534               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1539               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1542               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1545               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1551               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1557               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1564               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1570               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1576               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1581               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1586               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1591               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1596               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1601               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1607               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1613               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1619               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1625               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1629               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1635               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1639               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1645               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1650               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1656               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1663               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1670               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1676               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1682               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1688               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1694               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1700               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1704               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1708               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1714               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1719               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1724               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1728               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1732               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1736               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1740               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1744               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1750               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1757               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1761               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1765               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1770               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1777               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1784               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1790               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1796               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1802               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1806               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1812               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1818               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1823               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1829               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.NonEmptyList>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1837               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1843               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1848               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1855               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1860               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1864               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1868               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1873               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1877               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1881               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1887               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1893               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1900               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1906               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1909               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1916               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.NonEmptyList>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1924               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1931               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1939               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.NonEmptyList>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1947               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.AlignSyntax<scalaz.NonEmptyList> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1951               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1951               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList> unzipSyntax();
    Code:
       0: aload_0
       1: getfield      #1959               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       4: areturn

  public void scalaz$Unzip$_setter_$unzipSyntax_$eq(scalaz.syntax.UnzipSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1959               // Field unzipSyntax:Lscalaz/syntax/UnzipSyntax;
       5: return

  public scalaz.syntax.ZipSyntax<scalaz.NonEmptyList> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1966               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1966               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #1973               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1973               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.NonEmptyList> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1980               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1980               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.NonEmptyList> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1987               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1987               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList> bindRecSyntax();
    Code:
       0: aload_0
       1: getfield      #1994               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       4: areturn

  public void scalaz$BindRec$_setter_$bindRecSyntax_$eq(scalaz.syntax.BindRecSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1994               // Field bindRecSyntax:Lscalaz/syntax/BindRecSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.NonEmptyList> altSyntax();
    Code:
       0: aload_0
       1: getfield      #2001               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2001               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #2008               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2008               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.NonEmptyList> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #2015               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2015               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.NonEmptyList> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #2022               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2022               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2029               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2029               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #2036               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2036               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.NonEmptyList> applySyntax();
    Code:
       0: aload_0
       1: getfield      #2043               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2043               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #2050               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2050               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #2057               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2057               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #2064               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2064               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #2071               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2071               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #2078               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2078               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #2085               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.NonEmptyList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2085               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scala.Option<A> findLeft(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          28
      16: new           #2108               // class scala/Some
      19: dup
      20: aload_1
      21: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      24: invokespecial #2112               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      27: areturn
      28: aload_1
      29: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      32: aload_2
      33: invokevirtual #2122               // Method scalaz/IList.find:(Lscala/Function1;)Lscalaz/Maybe;
      36: invokevirtual #2126               // Method scalaz/Maybe.toOption:()Lscala/Option;
      39: areturn

  public <A, B> B foldMap(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       6: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       9: astore        4
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload         4
      18: aload_1
      19: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      22: aload_2
      23: aload_3
      24: invokeinterface #2151,  4         // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      29: areturn

  public <F, A, B> F traverse1(scalaz.NonEmptyList<A>, scala.Function1<A, F>, scalaz.Apply<F>);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       5: aload_2
       6: invokedynamic #2174,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      11: getstatic     #2179               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      14: invokevirtual #2183               // Method scalaz/Reducer$.ReverseNonEmptyListReducer:()Lscalaz/Reducer;
      17: invokeinterface #2185,  4         // InterfaceMethod scalaz/Apply.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      22: astore        4
      24: aload         4
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload         4
      33: instanceof    #105                // class scalaz/Maybe$Just
      36: ifeq          55
      39: aload         4
      41: checkcast     #105                // class scalaz/Maybe$Just
      44: invokevirtual #2188               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      47: invokestatic  #2191               // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      50: astore        5
      52: goto          77
      55: aload         4
      57: instanceof    #100                // class scalaz/Maybe$Empty
      60: ifeq          67
      63: invokestatic  #2195               // Method $anonfun$traverse1$6:()Lscala/runtime/Nothing$;
      66: athrow
      67: new           #2197               // class scala/MatchError
      70: dup
      71: aload         4
      73: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      76: athrow
      77: aload_3
      78: aload         5
      80: invokedynamic #2207,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      85: invokeinterface #2209,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      90: areturn

  public <G, A, B> G traverse1Impl(scalaz.NonEmptyList<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      10: astore        5
      12: aload         5
      14: instanceof    #2215               // class scalaz/INil
      17: ifeq          46
      20: aload_3
      21: aload_2
      22: aload_1
      23: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      26: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      31: invokedynamic #2222,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      36: invokeinterface #2209,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      41: astore        4
      43: goto          119
      46: aload         5
      48: instanceof    #2224               // class scalaz/ICons
      51: ifeq          109
      54: aload         5
      56: checkcast     #2224               // class scalaz/ICons
      59: astore        6
      61: aload         6
      63: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      66: astore        7
      68: aload         6
      70: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      73: astore        8
      75: aload_3
      76: aload_1
      77: aload_2
      78: invokedynamic #2236,  0           // InvokeDynamic #3:apply:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscala/Function0;
      83: aload         7
      85: aload         8
      87: aload_2
      88: aload_3
      89: invokedynamic #2244,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
      94: invokedynamic #2253,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
      99: invokeinterface #2255,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     104: astore        4
     106: goto          119
     109: new           #2197               // class scala/MatchError
     112: dup
     113: aload         5
     115: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload         4
     121: areturn

  public <A, B> B foldMapRight1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #2263               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
       4: astore        4
       6: aload         4
       8: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: aload_2
      12: aload         4
      14: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      17: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: aload_3
      23: invokedynamic #2269,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      28: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      31: areturn

  public <A, B> B foldMapLeft1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_2
       5: aload_1
       6: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       9: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_3
      15: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      18: areturn

  public <A, B> B foldMap1(scalaz.NonEmptyList<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_1
       1: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_2
       5: aload_1
       6: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       9: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_3
      15: aload_2
      16: invokedynamic #2286,  0           // InvokeDynamic #7:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
      21: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      24: areturn

  public <A, B, G> G psumMap1(scalaz.NonEmptyList<A>, scala.Function1<A, G>, scalaz.Plus<G>);
    Code:
       0: aload_1
       1: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: astore        5
       6: aload         5
       8: instanceof    #2215               // class scalaz/INil
      11: ifeq          29
      14: aload_2
      15: aload_1
      16: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      19: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: astore        4
      26: goto          101
      29: aload         5
      31: instanceof    #2224               // class scalaz/ICons
      34: ifeq          91
      37: aload         5
      39: checkcast     #2224               // class scalaz/ICons
      42: astore        6
      44: aload         6
      46: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      49: astore        7
      51: aload         6
      53: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      56: astore        8
      58: aload_3
      59: aload_2
      60: aload_1
      61: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      64: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: aload_0
      70: aload         7
      72: aload         8
      74: aload_2
      75: aload_3
      76: invokedynamic #2297,  0           // InvokeDynamic #8:apply:(Lscalaz/NonEmptyListInstances$$anon$1;Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Plus;)Lscala/Function0;
      81: invokeinterface #2300,  3         // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      86: astore        4
      88: goto          101
      91: new           #2197               // class scala/MatchError
      94: dup
      95: aload         5
      97: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     100: athrow
     101: aload         4
     103: areturn

  public <A, B> B foldLeft(scalaz.NonEmptyList<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
       4: aload_3
       5: aload_2
       6: aload_1
       7: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      10: invokeinterface #2308,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: aload_3
      16: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      19: areturn

  public <A, B> scalaz.NonEmptyList<B> bind(scalaz.NonEmptyList<A>, scala.Function1<A, scalaz.NonEmptyList<B>>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #2263               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      10: astore_3
      11: aload_3
      12: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      15: aload_2
      16: aload_3
      17: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      20: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload_2
      26: invokedynamic #2321,  0           // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
      31: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      34: checkcast     #2093               // class scalaz/NonEmptyList
      37: areturn

  public <A> scalaz.NonEmptyList<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_1
       4: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: astore_2
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_2
      17: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      20: invokevirtual #2336               // Method scalaz/IList$.empty:()Lscalaz/IList;
      23: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      26: areturn

  public <A> scalaz.NonEmptyList<A> plus(scalaz.NonEmptyList<A>, scala.Function0<scalaz.NonEmptyList<A>>);
    Code:
       0: aload_1
       1: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       4: astore_3
       5: aload_2
       6: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: checkcast     #2093               // class scalaz/NonEmptyList
      14: aload_3
      15: invokevirtual #2347               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      18: areturn

  public <A> scalaz.NonEmptyList<A> alt(scala.Function0<scalaz.NonEmptyList<A>>, scala.Function0<scalaz.NonEmptyList<A>>);
    Code:
       0: aload_1
       1: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scalaz/NonEmptyList
       9: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      12: astore_3
      13: aload_2
      14: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: checkcast     #2093               // class scalaz/NonEmptyList
      22: aload_3
      23: invokevirtual #2347               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      26: areturn

  public <A> A copoint(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       4: areturn

  public <A, B> scalaz.NonEmptyList<B> cobind(scalaz.NonEmptyList<A>, scala.Function1<scalaz.NonEmptyList<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2358               // Method cojoin:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_0
       9: aload_2
      10: invokedynamic #2366,  0           // InvokeDynamic #10:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      15: invokeinterface #2368,  3         // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      20: checkcast     #2093               // class scalaz/NonEmptyList
      23: areturn

  public <A> scalaz.NonEmptyList<scalaz.NonEmptyList<A>> cojoin(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2373               // Method scalaz/NonEmptyList.tails:()Lscalaz/NonEmptyList;
       4: areturn

  public <A, B> scalaz.NonEmptyList<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.NonEmptyList<A>>, scala.Function0<scalaz.NonEmptyList<B>>);
    Code:
       0: aload_1
       1: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scalaz/NonEmptyList
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_2
      17: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      22: checkcast     #2093               // class scalaz/NonEmptyList
      25: astore        4
      27: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      30: new           #2377               // class scala/Tuple2
      33: dup
      34: aload_3
      35: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      38: aload         4
      40: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      43: invokespecial #2380               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      46: aload_3
      47: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      50: aload         4
      52: invokedynamic #2389,  0           // InvokeDynamic #11:apply:(Lscalaz/NonEmptyList;)Lscala/Function0;
      57: invokevirtual #2392               // Method scalaz/IList.zip:(Lscala/Function0;)Lscalaz/IList;
      60: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      63: areturn

  public <A, B> scala.Tuple2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>> unzip(scalaz.NonEmptyList<scala.Tuple2<A, B>>);
    Code:
       0: aload_1
       1: getstatic     #2402               // Field scalaz/Liskov$.MODULE$:Lscalaz/Liskov$;
       4: invokevirtual #2406               // Method scalaz/Liskov$.refl:()Lscalaz/Liskov;
       7: invokevirtual #2409               // Method scalaz/NonEmptyList.unzip:(Lscalaz/Liskov;)Lscala/Tuple2;
      10: areturn

  public <A, B, C> scala.Function2<scalaz.NonEmptyList<A>, scalaz.NonEmptyList<B>, scalaz.NonEmptyList<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2419,  0           // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <A> int length(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2426               // Method scalaz/NonEmptyList.size:()I
       4: ireturn

  public <A> scalaz.NonEmptyList<A> toNel(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: areturn

  public <A> scalaz.IList<A> toIList(scalaz.NonEmptyList<A>);
    Code:
       0: aload_1
       1: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       4: areturn

  public <A> boolean all(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          47
      16: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      19: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      22: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload_3
      32: aload_1
      33: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      36: aload_2
      37: invokeinterface #2436,  3         // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn

  public <A> boolean any(scalaz.NonEmptyList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       5: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifne          45
      16: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      19: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      22: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: aload_3
      32: aload_1
      33: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      36: aload_2
      37: invokeinterface #2439,  3         // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn

  public <A, B> scalaz.NonEmptyList<B> tailrecM(A, scala.Function1<A, scalaz.NonEmptyList<scalaz.$bslash$div<A, B>>>);
    Code:
       0: getstatic     #2447               // Field scalaz/BindRec$.MODULE$:Lscalaz/BindRec$;
       3: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       6: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       9: checkcast     #13                 // class scalaz/BindRec
      12: astore        8
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload         8
      21: aload_1
      22: aload_2
      23: invokedynamic #2455,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
      28: invokeinterface #2457,  3         // InterfaceMethod scalaz/BindRec.tailrecM:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      33: checkcast     #2118               // class scalaz/IList
      36: astore        4
      38: aload         4
      40: instanceof    #2224               // class scalaz/ICons
      43: ifeq          81
      46: aload         4
      48: checkcast     #2224               // class scalaz/ICons
      51: astore        5
      53: aload         5
      55: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      58: astore        6
      60: aload         5
      62: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      65: astore        7
      67: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      70: aload         6
      72: aload         7
      74: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      77: astore_3
      78: goto          91
      81: new           #2197               // class scala/MatchError
      84: dup
      85: aload         4
      87: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload_3
      92: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2461               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object tailrecM(java.lang.Object, scala.Function1);
    Code:
       0: getstatic     #2447               // Field scalaz/BindRec$.MODULE$:Lscalaz/BindRec$;
       3: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       6: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       9: checkcast     #13                 // class scalaz/BindRec
      12: astore        8
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload         8
      21: aload_1
      22: aload_2
      23: invokedynamic #2455,  0           // InvokeDynamic #13:apply:(Lscala/Function1;)Lscala/Function1;
      28: invokeinterface #2457,  3         // InterfaceMethod scalaz/BindRec.tailrecM:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      33: checkcast     #2118               // class scalaz/IList
      36: astore        4
      38: aload         4
      40: instanceof    #2224               // class scalaz/ICons
      43: ifeq          81
      46: aload         4
      48: checkcast     #2224               // class scalaz/ICons
      51: astore        5
      53: aload         5
      55: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      58: astore        6
      60: aload         5
      62: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      65: astore        7
      67: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      70: aload         6
      72: aload         7
      74: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      77: astore_3
      78: goto          91
      81: new           #2197               // class scala/MatchError
      84: dup
      85: aload         4
      87: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload_3
      92: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      10: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifne          52
      21: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      24: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      27: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      30: astore        4
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: aload         4
      39: aload_3
      40: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      43: aload_2
      44: invokeinterface #2439,  3         // InterfaceMethod scalaz/Foldable.any:(Ljava/lang/Object;Lscala/Function1;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: iconst_0
      55: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      10: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifeq          54
      21: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      24: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      27: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      30: astore        4
      32: ifnonnull     37
      35: aconst_null
      36: athrow
      37: aload         4
      39: aload_3
      40: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      43: aload_2
      44: invokeinterface #2436,  3         // InterfaceMethod scalaz/Foldable.all:(Ljava/lang/Object;Lscala/Function1;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: iconst_0
      55: ireturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2467               // Method toIList:(Lscalaz/NonEmptyList;)Lscalaz/IList;
       8: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2469               // Method toNel:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
       8: areturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2471               // Method length:(Lscalaz/NonEmptyList;)I
       8: ireturn

  public scala.Tuple2 unzip(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2474               // Method unzip:(Lscalaz/NonEmptyList;)Lscala/Tuple2;
       8: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scalaz/NonEmptyList
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_2
      17: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      22: checkcast     #2093               // class scalaz/NonEmptyList
      25: astore        4
      27: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
      30: new           #2377               // class scala/Tuple2
      33: dup
      34: aload_3
      35: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      38: aload         4
      40: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      43: invokespecial #2380               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      46: aload_3
      47: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      50: aload         4
      52: invokedynamic #2389,  0           // InvokeDynamic #11:apply:(Lscalaz/NonEmptyList;)Lscala/Function0;
      57: invokevirtual #2392               // Method scalaz/IList.zip:(Lscala/Function0;)Lscalaz/IList;
      60: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      63: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2358               // Method cojoin:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #2358               // Method cojoin:(Lscalaz/NonEmptyList;)Lscalaz/NonEmptyList;
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_0
      16: aload_2
      17: invokedynamic #2366,  0           // InvokeDynamic #10:apply:(Lscalaz/Monad;Lscala/Function1;)Lscala/Function1;
      22: invokeinterface #2368,  3         // InterfaceMethod scalaz/Monad.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: checkcast     #2093               // class scalaz/NonEmptyList
      30: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2093               // class scalaz/NonEmptyList
       5: invokevirtual #2480               // Method copoint:(Lscalaz/NonEmptyList;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #2093               // class scalaz/NonEmptyList
       9: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      12: astore_3
      13: aload_2
      14: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: checkcast     #2093               // class scalaz/NonEmptyList
      22: aload_3
      23: invokevirtual #2347               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      26: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
       7: astore_3
       8: aload_2
       9: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      14: checkcast     #2093               // class scalaz/NonEmptyList
      17: aload_3
      18: invokevirtual #2347               // Method scalaz/NonEmptyList.$less$colon$colon$colon:(Lscalaz/IList;)Lscalaz/NonEmptyList;
      21: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_1
       4: invokeinterface #2334,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       9: astore_2
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload_2
      17: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      20: invokevirtual #2336               // Method scalaz/IList$.empty:()Lscalaz/IList;
      23: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      26: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_3
      12: invokevirtual #2263               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
      15: astore        4
      17: aload         4
      19: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      22: aload_2
      23: aload         4
      25: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      28: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_2
      34: invokedynamic #2321,  0           // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function2;
      39: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      42: checkcast     #2093               // class scalaz/NonEmptyList
      45: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload         4
       8: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: aload_3
      12: aload_2
      13: aload         4
      15: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      18: invokeinterface #2308,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: aload_3
      24: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload         4
       8: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: astore        6
      13: aload         6
      15: instanceof    #2215               // class scalaz/INil
      18: ifeq          37
      21: aload_2
      22: aload         4
      24: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      27: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: astore        5
      34: goto          110
      37: aload         6
      39: instanceof    #2224               // class scalaz/ICons
      42: ifeq          100
      45: aload         6
      47: checkcast     #2224               // class scalaz/ICons
      50: astore        7
      52: aload         7
      54: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      57: astore        8
      59: aload         7
      61: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      64: astore        9
      66: aload_3
      67: aload_2
      68: aload         4
      70: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      73: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      78: aload_0
      79: aload         8
      81: aload         9
      83: aload_2
      84: aload_3
      85: invokedynamic #2297,  0           // InvokeDynamic #8:apply:(Lscalaz/NonEmptyListInstances$$anon$1;Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Plus;)Lscala/Function0;
      90: invokeinterface #2300,  3         // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      95: astore        5
      97: goto          110
     100: new           #2197               // class scala/MatchError
     103: dup
     104: aload         6
     106: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     109: athrow
     110: aload         5
     112: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload         4
       8: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: aload_2
      12: aload         4
      14: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      17: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: aload_3
      23: aload_2
      24: invokedynamic #2286,  0           // InvokeDynamic #7:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
      29: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      32: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload         4
       8: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: aload_2
      12: aload         4
      14: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      17: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: aload_3
      23: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      26: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: invokevirtual #2263               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
       7: astore        4
       9: aload         4
      11: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      14: aload_2
      15: aload         4
      17: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      20: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aload_3
      26: invokedynamic #2269,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      31: invokevirtual #2272               // Method scalaz/IList.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      34: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload         4
      15: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      18: astore        6
      20: aload         6
      22: instanceof    #2215               // class scalaz/INil
      25: ifeq          55
      28: aload_3
      29: aload_2
      30: aload         4
      32: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      35: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: invokedynamic #2222,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
      45: invokeinterface #2209,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      50: astore        5
      52: goto          129
      55: aload         6
      57: instanceof    #2224               // class scalaz/ICons
      60: ifeq          119
      63: aload         6
      65: checkcast     #2224               // class scalaz/ICons
      68: astore        7
      70: aload         7
      72: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      75: astore        8
      77: aload         7
      79: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      82: astore        9
      84: aload_3
      85: aload         4
      87: aload_2
      88: invokedynamic #2236,  0           // InvokeDynamic #3:apply:(Lscalaz/NonEmptyList;Lscala/Function1;)Lscala/Function0;
      93: aload         8
      95: aload         9
      97: aload_2
      98: aload_3
      99: invokedynamic #2244,  0           // InvokeDynamic #4:apply:(Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     104: invokedynamic #2253,  0           // InvokeDynamic #5:apply:()Lscala/Function2;
     109: invokeinterface #2255,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     114: astore        5
     116: goto          129
     119: new           #2197               // class scala/MatchError
     122: dup
     123: aload         6
     125: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     128: athrow
     129: aload         5
     131: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: aload_3
       7: aload         4
       9: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      12: aload_2
      13: invokedynamic #2174,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      18: getstatic     #2179               // Field scalaz/Reducer$.MODULE$:Lscalaz/Reducer$;
      21: invokevirtual #2183               // Method scalaz/Reducer$.ReverseNonEmptyListReducer:()Lscalaz/Reducer;
      24: invokeinterface #2185,  4         // InterfaceMethod scalaz/Apply.unfoldrOpt:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: aload         5
      40: instanceof    #105                // class scalaz/Maybe$Just
      43: ifeq          62
      46: aload         5
      48: checkcast     #105                // class scalaz/Maybe$Just
      51: invokevirtual #2188               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: invokestatic  #2191               // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      57: astore        6
      59: goto          84
      62: aload         5
      64: instanceof    #100                // class scalaz/Maybe$Empty
      67: ifeq          74
      70: invokestatic  #2195               // Method $anonfun$traverse1$6:()Lscala/runtime/Nothing$;
      73: athrow
      74: new           #2197               // class scala/MatchError
      77: dup
      78: aload         5
      80: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload_3
      85: aload         6
      87: invokedynamic #2207,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      92: invokeinterface #2209,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      97: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore        4
       6: getstatic     #2136               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       9: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      12: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      15: astore        5
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         5
      24: aload         4
      26: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      29: aload_2
      30: aload_3
      31: invokeinterface #2151,  4         // InterfaceMethod scalaz/Foldable.foldMap:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      36: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #2093               // class scalaz/NonEmptyList
       4: astore_3
       5: aload_2
       6: aload_3
       7: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      10: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokestatic  #2106               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      18: ifeq          33
      21: new           #2108               // class scala/Some
      24: dup
      25: aload_3
      26: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      29: invokespecial #2112               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      32: areturn
      33: aload_3
      34: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      37: aload_2
      38: invokevirtual #2122               // Method scalaz/IList.find:(Lscala/Function1;)Lscalaz/Maybe;
      41: invokevirtual #2126               // Method scalaz/Maybe.toOption:()Lscala/Option;
      44: areturn

  public static final scalaz.Maybe $anonfun$traverse1$5(scala.Function1, scalaz.IList);
    Code:
       0: aload_1
       1: instanceof    #2224               // class scalaz/ICons
       4: ifeq          51
       7: aload_1
       8: checkcast     #2224               // class scalaz/ICons
      11: astore_3
      12: aload_3
      13: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      16: astore        4
      18: aload_3
      19: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      22: astore        5
      24: getstatic     #2508               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      27: new           #2377               // class scala/Tuple2
      30: dup
      31: aload_0
      32: aload         4
      34: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: aload         5
      41: invokespecial #2380               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      44: invokevirtual #2512               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      47: astore_2
      48: goto          77
      51: aload_1
      52: instanceof    #2215               // class scalaz/INil
      55: ifeq          68
      58: getstatic     #2508               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      61: invokevirtual #2515               // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      64: astore_2
      65: goto          77
      68: new           #2197               // class scala/MatchError
      71: dup
      72: aload_1
      73: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      76: athrow
      77: aload_2
      78: areturn

  public static final scala.runtime.Nothing$ $anonfun$traverse1$6();
    Code:
       0: getstatic     #2520               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       3: ldc_w         #2522               // String Head cannot be empty
       6: invokevirtual #2526               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       9: areturn

  public static final scalaz.NonEmptyList $anonfun$traverse1$7(scalaz.NonEmptyList);
    Code:
       0: aload_0
       1: invokevirtual #2263               // Method scalaz/NonEmptyList.reverse:()Lscalaz/NonEmptyList;
       4: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #2536,  0           // InvokeDynamic #14:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #2308,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldMap1$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$1(scalaz.Semigroup, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2546,  0           // InvokeDynamic #15:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #2551,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$psumMap1$1(scalaz.NonEmptyListInstances$$anon$1, java.lang.Object, scalaz.IList, scala.Function1, scalaz.Plus);
    Code:
       0: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
       8: astore        5
      10: aload         5
      12: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      15: astore        7
      17: aload         7
      19: instanceof    #2215               // class scalaz/INil
      22: ifeq          41
      25: aload_3
      26: aload         5
      28: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      31: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore        6
      38: goto          116
      41: aload         7
      43: instanceof    #2224               // class scalaz/ICons
      46: ifeq          106
      49: aload         7
      51: checkcast     #2224               // class scalaz/ICons
      54: astore        8
      56: aload         8
      58: invokevirtual #2225               // Method scalaz/ICons.head:()Ljava/lang/Object;
      61: astore        9
      63: aload         8
      65: invokevirtual #2226               // Method scalaz/ICons.tail:()Lscalaz/IList;
      68: astore        10
      70: aload         4
      72: aload_3
      73: aload         5
      75: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      78: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      83: aload_0
      84: aload         9
      86: aload         10
      88: aload_3
      89: aload         4
      91: invokedynamic #2297,  0           // InvokeDynamic #8:apply:(Lscalaz/NonEmptyListInstances$$anon$1;Ljava/lang/Object;Lscalaz/IList;Lscala/Function1;Lscalaz/Plus;)Lscala/Function0;
      96: invokeinterface #2300,  3         // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
     101: astore        6
     103: goto          116
     106: new           #2197               // class scala/MatchError
     109: dup
     110: aload         7
     112: invokespecial #2198               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     115: athrow
     116: aload         6
     118: areturn

  public static final scalaz.NonEmptyList $anonfun$alignWith$1(scala.Function1, scalaz.NonEmptyList, scalaz.NonEmptyList);
    Code:
       0: getstatic     #2330               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_0
       4: new           #38                 // class scalaz/$bslash$amp$div$Both
       7: dup
       8: aload_1
       9: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      12: aload_2
      13: invokevirtual #2097               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
      16: invokespecial #2558               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: getstatic     #2563               // Field scalaz/Align$.MODULE$:Lscalaz/Align$;
      27: getstatic     #2141               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      30: invokevirtual #2145               // Method scalaz/IList$.instances:()Lscalaz/Traverse;
      33: checkcast     #23                 // class scalaz/Align
      36: astore_3
      37: ifnonnull     42
      40: aconst_null
      41: athrow
      42: aload_3
      43: aload_0
      44: invokeinterface #2565,  2         // InterfaceMethod scalaz/Align.alignWith:(Lscala/Function1;)Lscala/Function2;
      49: aload_1
      50: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      53: aload_2
      54: invokevirtual #2116               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      57: invokeinterface #2308,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #2118               // class scalaz/IList
      65: invokevirtual #2340               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
      68: areturn

  public static final scalaz.IList $anonfun$tailrecM$1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2101,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2093               // class scalaz/NonEmptyList
      10: invokevirtual #2148               // Method scalaz/NonEmptyList.list:()Lscalaz/IList;
      13: areturn

  public scalaz.NonEmptyListInstances$$anon$1(scalaz.NonEmptyListInstances);
    Code:
       0: aload_0
       1: invokespecial #2571               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2575               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2578               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2581               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2584               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2587               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      24: aload_0
      25: invokestatic  #2590               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      28: aload_0
      29: invokestatic  #2593               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      32: aload_0
      33: invokestatic  #2596               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      36: aload_0
      37: invokestatic  #2599               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      40: aload_0
      41: invokestatic  #2602               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      44: aload_0
      45: invokestatic  #2605               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      48: aload_0
      49: invokestatic  #2608               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      52: aload_0
      53: invokestatic  #2611               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      56: aload_0
      57: invokestatic  #2614               // InterfaceMethod scalaz/BindRec.$init$:(Lscalaz/BindRec;)V
      60: aload_0
      61: invokestatic  #2617               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      64: aload_0
      65: invokestatic  #2620               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      68: aload_0
      69: invokestatic  #2623               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      72: aload_0
      73: invokestatic  #2626               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: aload_0
      77: invokestatic  #2629               // InterfaceMethod scalaz/Unzip.$init$:(Lscalaz/Unzip;)V
      80: aload_0
      81: invokestatic  #2632               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      84: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2647,  0           // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
