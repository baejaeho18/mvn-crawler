Compiled from "Profunctor.scala"
public final class scalaz.Profunctor$$anon$6 implements scalaz.IsomorphismProfunctor<F, G> {
  private final scalaz.syntax.ProfunctorSyntax<F> profunctorSyntax;

  private final scalaz.Profunctor E$1;

  private final scalaz.Isomorphisms$Iso3 D$1;

  public <A, B, C> F mapfst(F, scala.Function1<C, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #39                 // InterfaceMethod scalaz/IsomorphismProfunctor.mapfst$:(Lscalaz/IsomorphismProfunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> F mapsnd(F, scala.Function1<B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // InterfaceMethod scalaz/IsomorphismProfunctor.mapsnd$:(Lscalaz/IsomorphismProfunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B, C, D> F dimap(F, scala.Function1<C, A>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #56                 // InterfaceMethod scalaz/Profunctor.dimap$:(Lscalaz/Profunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.InvariantFunctor<?> invariantFunctor();
    Code:
       0: aload_0
       1: invokestatic  #63                 // InterfaceMethod scalaz/Profunctor.invariantFunctor$:(Lscalaz/Profunctor;)Lscalaz/InvariantFunctor;
       4: areturn

  public <C> scalaz.Functor<?> covariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #70                 // InterfaceMethod scalaz/Profunctor.covariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Functor;
       4: areturn

  public <C> scalaz.Contravariant<?> contravariantInstance();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod scalaz/Profunctor.contravariantInstance$:(Lscalaz/Profunctor;)Lscalaz/Contravariant;
       4: areturn

  public scalaz.Profunctor<F>.ProfunctorLaw profunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod scalaz/Profunctor.profunctorLaw$:(Lscalaz/Profunctor;)Lscalaz/Profunctor$ProfunctorLaw;
       4: areturn

  public scalaz.syntax.ProfunctorSyntax<F> profunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #88                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       4: areturn

  public void scalaz$Profunctor$_setter_$profunctorSyntax_$eq(scalaz.syntax.ProfunctorSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field profunctorSyntax:Lscalaz/syntax/ProfunctorSyntax;
       5: return

  public scalaz.Profunctor<G> G();
    Code:
       0: aload_0
       1: getfield      #97                 // Field E$1:Lscalaz/Profunctor;
       4: areturn

  public scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #102                // Field D$1:Lscalaz/Isomorphisms$Iso3;
       4: areturn

  public scalaz.Profunctor$$anon$6(scalaz.Profunctor, scalaz.Isomorphisms$Iso3);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field E$1:Lscalaz/Profunctor;
       5: aload_0
       6: aload_2
       7: putfield      #102                // Field D$1:Lscalaz/Isomorphisms$Iso3;
      10: aload_0
      11: invokespecial #107                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #111                // InterfaceMethod scalaz/Profunctor.$init$:(Lscalaz/Profunctor;)V
      18: aload_0
      19: invokestatic  #114                // InterfaceMethod scalaz/IsomorphismProfunctor.$init$:(Lscalaz/IsomorphismProfunctor;)V
      22: return
}
