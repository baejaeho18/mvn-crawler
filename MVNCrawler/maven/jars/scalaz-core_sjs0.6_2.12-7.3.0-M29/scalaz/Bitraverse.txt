Compiled from "Bitraverse.scala"
public interface scalaz.Bitraverse<F> extends scalaz.Bifunctor<F>, scalaz.Bifoldable<F> {
  public static <F, G> scalaz.Bitraverse<F> fromIso(scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G>, scalaz.Bitraverse<G>);
    Code:
       0: getstatic     #64                 // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
       3: aload_0
       4: aload_1
       5: invokevirtual #66                 // Method scalaz/Bitraverse$.fromIso:(Lscalaz/Isomorphisms$Iso3;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       8: areturn

  public static <F> scalaz.Bitraverse<F> apply(scalaz.Bitraverse<F>);
    Code:
       0: getstatic     #64                 // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_0
       9: areturn

  public abstract void scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq(scalaz.syntax.BitraverseSyntax<F>);

  public abstract <G, A, B, C, D> G bitraverseImpl(F, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);

  public static scalaz.Bitraverse compose$(scalaz.Bitraverse, scalaz.Bitraverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #88                 // InterfaceMethod compose:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> compose(scalaz.Bitraverse<G>);
    Code:
       0: new           #20                 // class scalaz/Bitraverse$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #94                 // Method scalaz/Bitraverse$$anon$1."<init>":(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)V
       9: areturn

  public static scalaz.Bitraverse product$(scalaz.Bitraverse, scalaz.Bitraverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #99                 // InterfaceMethod product:(Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> product(scalaz.Bitraverse<G>);
    Code:
       0: new           #22                 // class scalaz/Bitraverse$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #100                // Method scalaz/Bitraverse$$anon$2."<init>":(Lscalaz/Bitraverse;Lscalaz/Bitraverse;)V
       9: areturn

  public static scala.Function1 bitraverseF$(scalaz.Bitraverse, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #107                // InterfaceMethod bitraverseF:(Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       7: areturn

  public default <G, A, B, C, D> scala.Function1<F, G> bitraverseF(scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #130,  0            // InvokeDynamic #0:apply:(Lscalaz/Bitraverse;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
       9: areturn

  public static java.lang.Object bimap$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #136                // InterfaceMethod bimap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C, D> F bimap(F, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       7: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      10: checkcast     #149                // class scalaz/Applicative
      13: invokeinterface #151,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      18: areturn

  public static scalaz.Traverse leftTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #157                // InterfaceMethod leftTraverse:()Lscalaz/Traverse;
       4: areturn

  public default <X> scalaz.Traverse<?> leftTraverse();
    Code:
       0: new           #24                 // class scalaz/Bitraverse$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #161                // Method scalaz/Bitraverse$$anon$3."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Traverse rightTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #165                // InterfaceMethod rightTraverse:()Lscalaz/Traverse;
       4: areturn

  public default <X> scalaz.Traverse<?> rightTraverse();
    Code:
       0: new           #26                 // class scalaz/Bitraverse$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #166                // Method scalaz/Bitraverse$$anon$4."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Traverse uTraverse$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #170                // InterfaceMethod uTraverse:()Lscalaz/Traverse;
       4: areturn

  public default scalaz.Traverse<?> uTraverse();
    Code:
       0: new           #28                 // class scalaz/Bitraverse$$anon$5
       3: dup
       4: aload_0
       5: invokespecial #172                // Method scalaz/Bitraverse$$anon$5."<init>":(Lscalaz/Bitraverse;)V
       8: areturn

  public static scalaz.Bitraverse$Bitraversal bitraversal$(scalaz.Bitraverse, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #179                // InterfaceMethod bitraversal:(Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       5: areturn

  public default <G> scalaz.Bitraverse<F>.Bitraversal<G> bitraversal(scalaz.Applicative<G>);
    Code:
       0: new           #34                 // class scalaz/Bitraverse$Bitraversal
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #183                // Method scalaz/Bitraverse$Bitraversal."<init>":(Lscalaz/Bitraverse;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Bitraverse$Bitraversal bitraversalS$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: invokespecial #189                // InterfaceMethod bitraversalS:()Lscalaz/Bitraverse$Bitraversal;
       4: areturn

  public default <S> scalaz.Bitraverse<F>.Bitraversal<?> bitraversalS();
    Code:
       0: new           #34                 // class scalaz/Bitraverse$Bitraversal
       3: dup
       4: aload_0
       5: getstatic     #193                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
       8: invokevirtual #197                // Method scalaz/package$StateT$.stateMonad:()Lscalaz/MonadState;
      11: invokespecial #183                // Method scalaz/Bitraverse$Bitraversal."<init>":(Lscalaz/Bitraverse;Lscalaz/Applicative;)V
      14: areturn

  public static java.lang.Object bitraverse$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #204                // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public default <G, A, B, C, D> G bitraverse(F, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload         4
       3: invokeinterface #179,  2          // InterfaceMethod bitraversal:(Lscalaz/Applicative;)Lscalaz/Bitraverse$Bitraversal;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #207                // Method scalaz/Bitraverse$Bitraversal.run:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static scalaz.IndexedStateT bitraverseS$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #213                // InterfaceMethod bitraverseS:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  public default <S, A, B, C, D> scalaz.IndexedStateT<S, S, java.lang.Object, F> bitraverseS(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, C>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, D>>);
    Code:
       0: aload_0
       1: invokeinterface #189,  1          // InterfaceMethod bitraversalS:()Lscalaz/Bitraverse$Bitraversal;
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #207                // Method scalaz/Bitraverse$Bitraversal.run:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      12: checkcast     #39                 // class scalaz/IndexedStateT
      15: areturn

  public static scala.Tuple2 runBitraverseS$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #221                // InterfaceMethod runBitraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
       9: areturn

  public default <S, A, B, C, D> scala.Tuple2<S, F> runBitraverseS(F, S, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, C>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokeinterface #213,  4          // InterfaceMethod bitraverseS:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscalaz/IndexedStateT;
      10: aload_2
      11: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      14: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      17: checkcast     #224                // class scalaz/Bind
      20: invokevirtual #227                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      23: checkcast     #229                // class scala/Tuple2
      26: areturn

  public static scalaz.IndexedStateT traverseSTrampoline$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #236                // InterfaceMethod traverseSTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       9: areturn

  public default <S, G, A, B, C, D> scalaz.IndexedStateT<S, S, java.lang.Object, G> traverseSTrampoline(F, scala.Function1<A, scalaz.IndexedStateT<S, S, ?, G>>, scala.Function1<B, scalaz.IndexedStateT<S, S, ?, G>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #193                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
       3: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       6: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
       9: invokevirtual #250                // Method scalaz/package$StateT$.stateTMonadState:(Lscalaz/Applicative;)Lscalaz/MonadState;
      12: getstatic     #255                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload         4
      22: invokeinterface #260,  2          // InterfaceMethod scalaz/MonadState.compose:(Lscalaz/Applicative;)Lscalaz/Applicative;
      27: astore        5
      29: getstatic     #263                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
      32: aload_0
      33: aload_1
      34: aload_2
      35: aload_3
      36: aload         5
      38: invokedynamic #274,  0            // InvokeDynamic #1:apply:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      43: astore        6
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: getstatic     #193                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      53: ifnonnull     58
      56: aconst_null
      57: athrow
      58: getstatic     #279                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      61: ifnonnull     66
      64: aconst_null
      65: athrow
      66: new           #37                 // class scalaz/IndexedStateT$Wrap
      69: dup
      70: aload         6
      72: invokespecial #282                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      75: areturn

  public static scalaz.Kleisli bitraverseKTrampoline$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #293                // InterfaceMethod bitraverseKTrampoline:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       9: areturn

  public default <S, G, A, B, C, D> scalaz.Kleisli<G, S, F> bitraverseKTrampoline(F, scala.Function1<A, scalaz.Kleisli<G, S, C>>, scala.Function1<B, scalaz.Kleisli<G, S, D>>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #299                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       6: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
       9: invokevirtual #303                // Method scalaz/Kleisli$.kleisliMonadReader:(Lscalaz/Monad;)Lscalaz/MonadReader;
      12: getstatic     #255                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload         4
      22: invokeinterface #306,  2          // InterfaceMethod scalaz/MonadReader.compose:(Lscalaz/Applicative;)Lscalaz/Applicative;
      27: astore        5
      29: new           #308                // class scalaz/Kleisli
      32: dup
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload_3
      37: aload         5
      39: invokedynamic #314,  0            // InvokeDynamic #2:apply:(Lscalaz/Bitraverse;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      44: invokespecial #315                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      47: areturn

  public static scala.Tuple2 bifoldLShape$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #322                // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
       9: areturn

  public default <A, B, C> scala.Tuple2<C, F> bifoldLShape(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #334,  0            // InvokeDynamic #3:apply:(Lscala/Function2;)Lscala/Function1;
       9: aload         4
      11: invokedynamic #339,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function1;
      16: invokeinterface #221,  5          // InterfaceMethod runBitraverseS:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Lscala/Tuple2;
      21: areturn

  public static java.lang.Object bisequence$(scalaz.Bitraverse, java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #347                // InterfaceMethod bisequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public default <G, A, B> G bisequence(F, scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #355,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       7: invokedynamic #360,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      12: aload_2
      13: invokeinterface #151,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      18: areturn

  public static java.lang.Object bifoldLeft$(scalaz.Bitraverse, java.lang.Object, java.lang.Object, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #366                // InterfaceMethod bifoldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public default <A, B, C> C bifoldLeft(F, C, scala.Function2<C, A, C>, scala.Function2<C, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #322,  5          // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
      11: invokevirtual #371                // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: areturn

  public static java.lang.Object bifoldMap$(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #377                // InterfaceMethod bifoldMap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       9: areturn

  public default <A, B, M> M bifoldMap(F, scala.Function1<A, M>, scala.Function1<B, M>, scalaz.Monoid<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokeinterface #384,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       9: aload         4
      11: aload_2
      12: invokedynamic #394,  0            // InvokeDynamic #7:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      17: aload         4
      19: aload_3
      20: invokedynamic #399,  0            // InvokeDynamic #8:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      25: invokeinterface #322,  5          // InterfaceMethod bifoldLShape:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Lscala/Tuple2;
      30: invokevirtual #371                // Method scala/Tuple2._1:()Ljava/lang/Object;
      33: areturn

  public static java.lang.Object bifoldRight$(scalaz.Bitraverse, java.lang.Object, scala.Function0, scala.Function2, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #405                // InterfaceMethod bifoldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public default <A, B, C> C bifoldRight(F, scala.Function0<C>, scala.Function2<A, scala.Function0<C>, C>, scala.Function2<B, scala.Function0<C>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #415,  0            // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function1;
       8: aload         4
      10: invokedynamic #420,  0            // InvokeDynamic #10:apply:(Lscala/Function2;)Lscala/Function1;
      15: getstatic     #425                // Field scalaz/EndoByName$.MODULE$:Lscalaz/EndoByName$;
      18: invokevirtual #429                // Method scalaz/EndoByName$.endoInstance:()Lscalaz/Monoid;
      21: invokeinterface #377,  5          // InterfaceMethod bifoldMap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
      26: checkcast     #431                // class scalaz/EndoByName
      29: dup
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: invokevirtual #433                // Method scalaz/EndoByName.run:()Lscala/Function1;
      38: aload_2
      39: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn

  public static scalaz.Bitraverse embed$(scalaz.Bitraverse, scalaz.Traverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #442                // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
       6: areturn

  public default <G, H> scalaz.Bitraverse<?> embed(scalaz.Traverse<G>, scalaz.Traverse<H>);
    Code:
       0: new           #30                 // class scalaz/Bitraverse$$anon$6
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #447                // Method scalaz/Bitraverse$$anon$6."<init>":(Lscalaz/Bitraverse;Lscalaz/Traverse;Lscalaz/Traverse;)V
      10: areturn

  public static scalaz.Bitraverse embedLeft$(scalaz.Bitraverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #453                // InterfaceMethod embedLeft:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <G> scalaz.Bitraverse<?> embedLeft(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       5: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
       8: invokeinterface #442,  3          // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
      13: areturn

  public static scalaz.Bitraverse embedRight$(scalaz.Bitraverse, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #458                // InterfaceMethod embedRight:(Lscalaz/Traverse;)Lscalaz/Bitraverse;
       5: areturn

  public default <H> scalaz.Bitraverse<?> embedRight(scalaz.Traverse<H>);
    Code:
       0: aload_0
       1: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
       4: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
       7: aload_1
       8: invokeinterface #442,  3          // InterfaceMethod embed:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Bitraverse;
      13: areturn

  public abstract scalaz.syntax.BitraverseSyntax<F> bitraverseSyntax();

  public static java.lang.Object $anonfun$bitraverseF$1(scalaz.Bitraverse, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokeinterface #151,  5          // InterfaceMethod bitraverseImpl:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      11: areturn

  public static scalaz.IndexedStateT $anonfun$traverseSTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #39                 // class scalaz/IndexedStateT
      10: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      13: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      16: checkcast     #224                // class scalaz/Bind
      19: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      22: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
      25: invokevirtual #473                // Method scalaz/IndexedStateT.lift:(Lscalaz/Bind;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      28: areturn

  public static scalaz.IndexedStateT $anonfun$traverseSTrampoline$3(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #39                 // class scalaz/IndexedStateT
      10: getstatic     #143                // Field scalaz/package$.MODULE$:Lscalaz/package$;
      13: invokevirtual #147                // Method scalaz/package$.idInstance:()Lscalaz/Traverse1;
      16: checkcast     #224                // class scalaz/Bind
      19: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      22: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
      25: invokevirtual #473                // Method scalaz/IndexedStateT.lift:(Lscalaz/Bind;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      28: areturn

  public static scala.Tuple2 $anonfun$traverseSTrampoline$1(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #485,  0            // InvokeDynamic #11:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokedynamic #489,  0            // InvokeDynamic #12:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload         4
      16: invokeinterface #204,  5          // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: checkcast     #39                 // class scalaz/IndexedStateT
      24: aload         5
      26: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      29: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
      32: invokevirtual #227                // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      35: checkcast     #491                // class scalaz/Free
      38: getstatic     #496                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      41: invokevirtual #500                // Method scalaz/Leibniz$.refl:()Lscalaz/Leibniz;
      44: invokevirtual #503                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      47: checkcast     #229                // class scala/Tuple2
      50: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$3(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #299                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #308                // class scalaz/Kleisli
      13: invokevirtual #512                // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  public static scalaz.Kleisli $anonfun$bitraverseKTrampoline$2(scala.Function1, java.lang.Object);
    Code:
       0: new           #308                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #520,  0            // InvokeDynamic #13:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: invokespecial #315                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      14: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      17: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
      20: invokevirtual #523                // Method scalaz/Kleisli.lift:(Lscalaz/Applicative;)Lscalaz/Kleisli;
      23: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$5(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #299                // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #308                // class scalaz/Kleisli
      13: invokevirtual #512                // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
      16: aload_2
      17: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  public static scalaz.Kleisli $anonfun$bitraverseKTrampoline$4(scala.Function1, java.lang.Object);
    Code:
       0: new           #308                // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #531,  0            // InvokeDynamic #14:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      11: invokespecial #315                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      14: getstatic     #242                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
      17: invokevirtual #246                // Method scalaz/Free$.freeMonad:()Lscalaz/Monad;
      20: invokevirtual #523                // Method scalaz/Kleisli.lift:(Lscalaz/Applicative;)Lscalaz/Kleisli;
      23: areturn

  public static java.lang.Object $anonfun$bitraverseKTrampoline$1(scalaz.Bitraverse, java.lang.Object, scala.Function1, scala.Function1, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #539,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
       8: aload_3
       9: invokedynamic #543,  0            // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      14: aload         4
      16: invokeinterface #204,  5          // InterfaceMethod bitraverse:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      21: checkcast     #308                // class scalaz/Kleisli
      24: invokevirtual #544                // Method scalaz/Kleisli.run:()Lscala/Function1;
      27: aload         5
      29: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #491                // class scalaz/Free
      37: getstatic     #496                // Field scalaz/Leibniz$.MODULE$:Lscalaz/Leibniz$;
      40: invokevirtual #500                // Method scalaz/Leibniz$.refl:()Lscalaz/Leibniz;
      43: invokevirtual #503                // Method scalaz/Free.run:(Lscalaz/Leibniz;)Ljava/lang/Object;
      46: areturn

  public static java.lang.Object $anonfun$bifoldLShape$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #553,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.IndexedStateT $anonfun$bifoldLShape$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #263                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       3: aload_0
       4: aload_1
       5: invokedynamic #560,  0            // InvokeDynamic #17:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #263                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
      19: aload_2
      20: invokedynamic #568,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: getstatic     #193                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: getstatic     #279                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: new           #37                 // class scalaz/IndexedStateT$Wrap
      50: dup
      51: aload_3
      52: invokespecial #282                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      55: areturn

  public static java.lang.Object $anonfun$bifoldLShape$4(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #553,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.IndexedStateT $anonfun$bifoldLShape$3(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #263                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
       3: aload_0
       4: aload_1
       5: invokedynamic #579,  0            // InvokeDynamic #19:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #263                // Field scalaz/package$State$.MODULE$:Lscalaz/package$State$;
      19: aload_2
      20: invokedynamic #568,  0            // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
      25: astore_3
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: getstatic     #193                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
      34: ifnonnull     39
      37: aconst_null
      38: athrow
      39: getstatic     #279                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      42: ifnonnull     47
      45: aconst_null
      46: athrow
      47: new           #37                 // class scalaz/IndexedStateT$Wrap
      50: dup
      51: aload_3
      52: invokespecial #282                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      55: areturn

  public static java.lang.Object $anonfun$bisequence$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$bisequence$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$bifoldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$bifoldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #593,  0            // InvokeDynamic #20:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #597,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$bifoldMap$4(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object $anonfun$bifoldMap$3(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #604,  0            // InvokeDynamic #21:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #597,  3          // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object $anonfun$bifoldRight$2(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #553,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.EndoByName $anonfun$bifoldRight$1(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #614                // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: aload_0
       4: aload_1
       5: invokedynamic #620,  0            // InvokeDynamic #22:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #431                // class scalaz/EndoByName
      19: dup
      20: aload_2
      21: invokespecial #621                // Method scalaz/EndoByName."<init>":(Lscala/Function1;)V
      24: areturn

  public static java.lang.Object $anonfun$bifoldRight$4(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #553,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scalaz.EndoByName $anonfun$bifoldRight$3(scala.Function2, java.lang.Object);
    Code:
       0: getstatic     #614                // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: aload_0
       4: aload_1
       5: invokedynamic #630,  0            // InvokeDynamic #23:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #431                // class scalaz/EndoByName
      19: dup
      20: aload_2
      21: invokespecial #621                // Method scalaz/EndoByName."<init>":(Lscala/Function1;)V
      24: areturn

  public static void $init$(scalaz.Bitraverse);
    Code:
       0: aload_0
       1: new           #32                 // class scalaz/Bitraverse$$anon$7
       4: dup
       5: aload_0
       6: invokespecial #632                // Method scalaz/Bitraverse$$anon$7."<init>":(Lscalaz/Bitraverse;)V
       9: invokeinterface #634,  2          // InterfaceMethod scalaz$Bitraverse$_setter_$bitraverseSyntax_$eq:(Lscalaz/syntax/BitraverseSyntax;)V
      14: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #646,  0            // InvokeDynamic #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
