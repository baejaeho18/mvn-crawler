Compiled from "package.scala"
public final class scalaz.package$ {
  public static scalaz.package$ MODULE$;

  private final scalaz.Traverse1<java.lang.Object> idInstance;

  private final scalaz.IndexedReaderWriterStateT$ IRWST;

  private final scalaz.package$IndexedReaderWriterState$ IRWS;

  private final scalaz.package$ReaderWriterStateT$ RWST;

  private final scalaz.package$ReaderWriterState$ RWS;

  private final scalaz.$eq$eq$greater$greater$ IMap;

  private final scalaz.$bslash$div$ Disjunction;

  private final scalaz.$minus$bslash$div$ DLeft;

  private final scalaz.$bslash$div$minus$ DRight;

  private final scalaz.EitherT$ DisjunctionT;

  public static {};
    Code:
       0: new           #2                  // class scalaz/package$
       3: invokespecial #44                 // Method "<init>":()V
       6: return

  public scalaz.Traverse1<java.lang.Object> idInstance();
    Code:
       0: aload_0
       1: getfield      #48                 // Field idInstance:Lscalaz/Traverse1;
       4: areturn

  public <A, B> scalaz.TracedT<java.lang.Object, A, B> Traced(scala.Function1<A, B>);
    Code:
       0: new           #55                 // class scalaz/TracedT
       3: dup
       4: aload_1
       5: invokespecial #58                 // Method scalaz/TracedT."<init>":(Ljava/lang/Object;)V
       8: areturn

  public scalaz.IndexedReaderWriterStateT$ IRWST();
    Code:
       0: aload_0
       1: getfield      #62                 // Field IRWST:Lscalaz/IndexedReaderWriterStateT$;
       4: areturn

  public scalaz.package$IndexedReaderWriterState$ IRWS();
    Code:
       0: aload_0
       1: getfield      #65                 // Field IRWS:Lscalaz/package$IndexedReaderWriterState$;
       4: areturn

  public scalaz.package$ReaderWriterStateT$ RWST();
    Code:
       0: aload_0
       1: getfield      #68                 // Field RWST:Lscalaz/package$ReaderWriterStateT$;
       4: areturn

  public scalaz.package$ReaderWriterState$ RWS();
    Code:
       0: aload_0
       1: getfield      #71                 // Field RWS:Lscalaz/package$ReaderWriterState$;
       4: areturn

  public scalaz.$eq$eq$greater$greater$ IMap();
    Code:
       0: aload_0
       1: getfield      #74                 // Field IMap:Lscalaz/$eq$eq$greater$greater$;
       4: areturn

  public scalaz.$bslash$div$ Disjunction();
    Code:
       0: aload_0
       1: getfield      #77                 // Field Disjunction:Lscalaz/$bslash$div$;
       4: areturn

  public scalaz.$minus$bslash$div$ DLeft();
    Code:
       0: aload_0
       1: getfield      #80                 // Field DLeft:Lscalaz/$minus$bslash$div$;
       4: areturn

  public scalaz.$bslash$div$minus$ DRight();
    Code:
       0: aload_0
       1: getfield      #83                 // Field DRight:Lscalaz/$bslash$div$minus$;
       4: areturn

  public scalaz.EitherT$ DisjunctionT();
    Code:
       0: aload_0
       1: getfield      #86                 // Field DisjunctionT:Lscalaz/EitherT$;
       4: areturn

  private scalaz.package$();
    Code:
       0: aload_0
       1: invokespecial #87                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #89                 // Field MODULE$:Lscalaz/package$;
       8: aload_0
       9: getstatic     #94                 // Field scalaz/Id$.MODULE$:Lscalaz/Id$;
      12: invokevirtual #97                 // Method scalaz/Id$.id:()Lscalaz/Traverse1;
      15: putfield      #48                 // Field idInstance:Lscalaz/Traverse1;
      18: aload_0
      19: getstatic     #101                // Field scalaz/IndexedReaderWriterStateT$.MODULE$:Lscalaz/IndexedReaderWriterStateT$;
      22: putfield      #62                 // Field IRWST:Lscalaz/IndexedReaderWriterStateT$;
      25: aload_0
      26: getstatic     #103                // Field scalaz/package$IndexedReaderWriterState$.MODULE$:Lscalaz/package$IndexedReaderWriterState$;
      29: putfield      #65                 // Field IRWS:Lscalaz/package$IndexedReaderWriterState$;
      32: aload_0
      33: getstatic     #105                // Field scalaz/package$ReaderWriterStateT$.MODULE$:Lscalaz/package$ReaderWriterStateT$;
      36: putfield      #68                 // Field RWST:Lscalaz/package$ReaderWriterStateT$;
      39: aload_0
      40: getstatic     #107                // Field scalaz/package$ReaderWriterState$.MODULE$:Lscalaz/package$ReaderWriterState$;
      43: putfield      #71                 // Field RWS:Lscalaz/package$ReaderWriterState$;
      46: aload_0
      47: getstatic     #111                // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
      50: putfield      #74                 // Field IMap:Lscalaz/$eq$eq$greater$greater$;
      53: aload_0
      54: getstatic     #115                // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      57: putfield      #77                 // Field Disjunction:Lscalaz/$bslash$div$;
      60: aload_0
      61: getstatic     #119                // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      64: putfield      #80                 // Field DLeft:Lscalaz/$minus$bslash$div$;
      67: aload_0
      68: getstatic     #123                // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      71: putfield      #83                 // Field DRight:Lscalaz/$bslash$div$minus$;
      74: aload_0
      75: getstatic     #127                // Field scalaz/EitherT$.MODULE$:Lscalaz/EitherT$;
      78: putfield      #86                 // Field DisjunctionT:Lscalaz/EitherT$;
      81: return
}
