Compiled from "Adjunction.scala"
public final class scalaz.Adjunction$$anon$1 implements scalaz.Zap<F, G> {
  private final scalaz.Adjunction $outer;

  public <A, B> B zap(F, G);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // InterfaceMethod scalaz/Zap.zap$:(Lscalaz/Zap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Zap<G, F> flip();
    Code:
       0: aload_0
       1: invokestatic  #36                 // InterfaceMethod scalaz/Zap.flip$:(Lscalaz/Zap;)Lscalaz/Zap;
       4: areturn

  public <A, B, C> C zapWith(F, G, scala.Function2<A, B, C>);
    Code:
       0: aload_3
       1: invokeinterface #47,  1           // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
       6: aload_0
       7: getfield      #49                 // Field $outer:Lscalaz/Adjunction;
      10: aload_0
      11: getfield      #49                 // Field $outer:Lscalaz/Adjunction;
      14: invokevirtual #53                 // Method scalaz/Adjunction.F:()Lscalaz/Functor;
      17: aload_0
      18: getfield      #49                 // Field $outer:Lscalaz/Adjunction;
      21: invokevirtual #53                 // Method scalaz/Adjunction.F:()Lscalaz/Functor;
      24: aload_1
      25: aload_2
      26: invokeinterface #58,  3           // InterfaceMethod scalaz/Functor.strengthR:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: aload_0
      32: invokedynamic #82,  0             // InvokeDynamic #0:apply:(Lscalaz/Adjunction$$anon$1;)Lscala/Function1;
      37: invokeinterface #86,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      42: invokevirtual #89                 // Method scalaz/Adjunction.counit:(Ljava/lang/Object;)Ljava/lang/Object;
      45: invokeinterface #93,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      50: areturn

  public static final java.lang.Object $anonfun$zapWith$1(scalaz.Adjunction$$anon$1, scala.Tuple2);
    Code:
       0: aload_0
       1: getfield      #49                 // Field $outer:Lscalaz/Adjunction;
       4: invokevirtual #99                 // Method scalaz/Adjunction.G:()Lscalaz/Functor;
       7: aload_1
       8: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #108                // Method scala/Tuple2._2:()Ljava/lang/Object;
      15: invokeinterface #111,  3          // InterfaceMethod scalaz/Functor.strengthL:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public scalaz.Adjunction$$anon$1(scalaz.Adjunction<F, G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #49                 // Field $outer:Lscalaz/Adjunction;
      11: aload_0
      12: invokespecial #118                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #122                // InterfaceMethod scalaz/Zap.$init$:(Lscalaz/Zap;)V
      19: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #134,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
