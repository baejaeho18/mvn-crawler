Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$4 implements scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, scalaz.CorecursiveList> {
  public <E> scalaz.NaturalTransformation<E, scalaz.CorecursiveList> compose(scalaz.NaturalTransformation<E, scala.collection.immutable.IndexedSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // InterfaceMethod scalaz/NaturalTransformation.compose$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, H> andThen(scalaz.NaturalTransformation<scalaz.CorecursiveList, H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/NaturalTransformation.andThen$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <H> scalaz.NaturalTransformation<?, scalaz.CorecursiveList> or(scalaz.NaturalTransformation<H, scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod scalaz/NaturalTransformation.or$:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/NaturalTransformation;
       5: areturn

  public <GG> scalaz.NaturalTransformation<scala.collection.immutable.IndexedSeq, GG> widen(scalaz.LiskovF<scalaz.CorecursiveList, GG>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // InterfaceMethod scalaz/NaturalTransformation.widen$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <FF> scalaz.NaturalTransformation<FF, scalaz.CorecursiveList> narrow(scalaz.LiskovF<FF, scala.collection.immutable.IndexedSeq>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // InterfaceMethod scalaz/NaturalTransformation.narrow$:(Lscalaz/NaturalTransformation;Lscalaz/LiskovF;)Lscalaz/NaturalTransformation;
       5: areturn

  public <A> scalaz.CorecursiveList<A> apply(scala.collection.immutable.IndexedSeq<A>);
    Code:
       0: getstatic     #69                 // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: iconst_0
       4: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: aload_1
       8: invokedynamic #98,  0             // InvokeDynamic #0:apply:(Lscala/collection/immutable/IndexedSeq;)Lscala/Function1;
      13: astore_3
      14: astore_2
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #17                 // class scalaz/CorecursiveList$CorecursiveListImpl
      23: dup
      24: aload_2
      25: aload_3
      26: invokespecial #102                // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      29: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #113                // class scala/collection/immutable/IndexedSeq
       5: invokevirtual #115                // Method apply:(Lscala/collection/immutable/IndexedSeq;)Lscalaz/CorecursiveList;
       8: areturn

  public static final scalaz.Maybe $anonfun$apply$2(scala.collection.immutable.IndexedSeq, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokeinterface #123,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.length:()I
       7: if_icmpge     37
      10: getstatic     #128                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      13: new           #130                // class scala/Tuple2
      16: dup
      17: iload_1
      18: iconst_1
      19: iadd
      20: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      23: aload_0
      24: iload_1
      25: invokeinterface #133,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
      30: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      33: invokevirtual #139                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      36: areturn
      37: getstatic     #142                // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      40: invokevirtual #145                // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      43: areturn

  public scalaz.CorecursiveList$$anon$4();
    Code:
       0: aload_0
       1: invokespecial #149                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #153                // InterfaceMethod scalaz/NaturalTransformation.$init$:(Lscalaz/NaturalTransformation;)V
       8: return

  public static final scalaz.Maybe $anonfun$apply$2$adapted(scala.collection.immutable.IndexedSeq, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #157                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #159                // Method $anonfun$apply$2:(Lscala/collection/immutable/IndexedSeq;I)Lscalaz/Maybe;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #171,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
