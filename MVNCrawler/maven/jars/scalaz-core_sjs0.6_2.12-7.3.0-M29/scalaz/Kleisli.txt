Compiled from "Kleisli.scala"
public final class scalaz.Kleisli<M, A, B> implements scala.Product, scala.Serializable {
  private final scala.Function1<A, M> run;

  public static <M, A, B> scala.Option<scala.Function1<A, M>> unapply(scalaz.Kleisli<M, A, B>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #53                 // Method scalaz/Kleisli$.unapply:(Lscalaz/Kleisli;)Lscala/Option;
       7: areturn

  public static <M, A, B> scalaz.Kleisli<M, A, B> apply(scala.Function1<A, M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/Kleisli
      11: dup
      12: aload_0
      13: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      16: areturn

  public static <D, I, O> scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, D, ?> iso(scalaz.NaturalTransformation<?, D>, scalaz.NaturalTransformation<D, ?>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokevirtual #67                 // Method scalaz/Kleisli$.iso:(Lscalaz/NaturalTransformation;Lscalaz/NaturalTransformation;)Lscalaz/Isomorphisms$Iso2;
       8: areturn

  public static <M, A> scalaz.Kleisli<M, A, A> ask(scalaz.Applicative<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #73                 // Method scalaz/Kleisli$.ask:(Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public static <M, A, B> scala.Function1<A, M> kleisliFn(scalaz.Kleisli<M, A, B>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #79                 // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
       7: areturn

  public static <A, MB> scalaz.Kleisli<java.lang.Object, A, java.lang.Object> kleisliU(scala.Function1<A, MB>, scalaz.Unapply<scalaz.Bind, MB>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/Kleisli
      11: dup
      12: aload_1
      13: invokeinterface #90,  1           // InterfaceMethod scalaz/Unapply.leibniz:()Lscalaz/Leibniz;
      18: dup
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: aload_0
      25: invokevirtual #96                 // Method scalaz/Leibniz.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #98                 // class scala/Function1
      31: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      34: areturn

  public static <M, A, B> scalaz.Kleisli<M, A, B> kleisli(scala.Function1<A, M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/Kleisli
      11: dup
      12: aload_0
      13: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      16: areturn

  public static <F, A> scalaz.Catchable<?> kleisliCatchable(scalaz.Catchable<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #105                // Method scalaz/Kleisli$.kleisliCatchable:(Lscalaz/Catchable;)Lscalaz/Catchable;
       7: areturn

  public static <R> scalaz.Hoist<?> kleisliMonadTrans();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #110                // Method scalaz/Kleisli$.kleisliMonadTrans:()Lscalaz/Hoist;
       6: areturn

  public static <F, A, B> scalaz.Monoid<scalaz.Kleisli<F, A, B>> kleisliMonoid(scalaz.Monoid<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #116                // Method scalaz/Kleisli$.kleisliMonoid:(Lscalaz/Monoid;)Lscalaz/Monoid;
       7: areturn

  public static <R> scalaz.MonadReader<?, R> kleisliIdMonadReader();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #121                // Method scalaz/Kleisli$.kleisliIdMonadReader:()Lscalaz/MonadReader;
       6: areturn

  public static <F, A> scalaz.Contravariant<?> kleisliContravariant();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #126                // Method scalaz/Kleisli$.kleisliContravariant:()Lscalaz/Contravariant;
       6: areturn

  public static <F> scalaz.Arrow<?> kleisliArrow(scalaz.Monad<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #131                // Method scalaz/Kleisli$.kleisliArrow:(Lscalaz/Monad;)Lscalaz/Arrow;
       7: areturn

  public static <F> scalaz.Compose<?> kleisliCompose(scalaz.Bind<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #136                // Method scalaz/Kleisli$.kleisliCompose:(Lscalaz/Bind;)Lscalaz/Compose;
       7: areturn

  public static <F> scalaz.ProChoice<?> kleisliProChoice(scalaz.Applicative<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #141                // Method scalaz/Kleisli$.kleisliProChoice:(Lscalaz/Applicative;)Lscalaz/ProChoice;
       7: areturn

  public static <R> scalaz.Apply<?> kleisliIdApply();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #146                // Method scalaz/Kleisli$.kleisliIdApply:()Lscalaz/Apply;
       6: areturn

  public static <F> scalaz.Strong<?> kleisliStrong(scalaz.Functor<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #152                // Method scalaz/Kleisli$.kleisliStrong:(Lscalaz/Functor;)Lscalaz/Strong;
       7: areturn

  public static <R> scalaz.Applicative<?> kleisliIdApplicative();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #157                // Method scalaz/Kleisli$.kleisliIdApplicative:()Lscalaz/Applicative;
       6: areturn

  public static <R> scalaz.Functor<?> kleisliIdFunctor();
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: invokevirtual #162                // Method scalaz/Kleisli$.kleisliIdFunctor:()Lscalaz/Functor;
       6: areturn

  public static <F, R> scalaz.MonadReader<?, R> kleisliMonadReader(scalaz.Monad<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #167                // Method scalaz/Kleisli$.kleisliMonadReader:(Lscalaz/Monad;)Lscalaz/MonadReader;
       7: areturn

  public static <F, A> scalaz.MonadPlus<?> kleisliMonadPlus(scalaz.MonadPlus<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #172                // Method scalaz/Kleisli$.kleisliMonadPlus:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       7: areturn

  public static <F, A> scalaz.Alt<?> kleisliAlt(scalaz.Alt<F>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokevirtual #179                // Method scalaz/Kleisli$.kleisliAlt:(Lscalaz/Alt;Lscalaz/Applicative;)Lscalaz/Alt;
       8: areturn

  public static <F, E, R> scalaz.MonadError<?, E> kleisliMonadError(scalaz.MonadError<F, E>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #184                // Method scalaz/Kleisli$.kleisliMonadError:(Lscalaz/MonadError;)Lscalaz/MonadError;
       7: areturn

  public static <F, A, B> scalaz.Semigroup<scalaz.Kleisli<F, A, B>> kleisliSemigroup(scalaz.Semigroup<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #189                // Method scalaz/Kleisli$.kleisliSemigroup:(Lscalaz/Semigroup;)Lscalaz/Semigroup;
       7: areturn

  public static <F, R> scalaz.ApplicativePlus<?> kleisliApplicativePlus(scalaz.ApplicativePlus<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #194                // Method scalaz/Kleisli$.kleisliApplicativePlus:(Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       7: areturn

  public static <F, A> scalaz.PlusEmpty<?> kleisliPlusEmpty(scalaz.PlusEmpty<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #199                // Method scalaz/Kleisli$.kleisliPlusEmpty:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       7: areturn

  public static <F, R> scalaz.BindRec<?> kleisliBindRec(scalaz.BindRec<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #204                // Method scalaz/Kleisli$.kleisliBindRec:(Lscalaz/BindRec;)Lscalaz/BindRec;
       7: areturn

  public static <F, A> scalaz.Plus<?> kleisliPlus(scalaz.Plus<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #209                // Method scalaz/Kleisli$.kleisliPlus:(Lscalaz/Plus;)Lscalaz/Plus;
       7: areturn

  public static <F, R> scalaz.Applicative<?> kleisliApplicative(scalaz.Applicative<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #214                // Method scalaz/Kleisli$.kleisliApplicative:(Lscalaz/Applicative;)Lscalaz/Applicative;
       7: areturn

  public static <F, R> scalaz.Zip<?> kleisliZip(scalaz.Zip<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #220                // Method scalaz/Kleisli$.kleisliZip:(Lscalaz/Zip;)Lscalaz/Zip;
       7: areturn

  public static <F, R> scalaz.Bind<?> kleisliBind(scalaz.Bind<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #225                // Method scalaz/Kleisli$.kleisliBind:(Lscalaz/Bind;)Lscalaz/Bind;
       7: areturn

  public static <F, R> scalaz.Distributive<?> kleisliDistributive(scalaz.Distributive<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #230                // Method scalaz/Kleisli$.kleisliDistributive:(Lscalaz/Distributive;)Lscalaz/Distributive;
       7: areturn

  public static <F, R> scalaz.Apply<?> kleisliApply(scalaz.Apply<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #235                // Method scalaz/Kleisli$.kleisliApply:(Lscalaz/Apply;)Lscalaz/Apply;
       7: areturn

  public static <F, R> scalaz.Functor<?> kleisliFunctor(scalaz.Functor<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #240                // Method scalaz/Kleisli$.kleisliFunctor:(Lscalaz/Functor;)Lscalaz/Functor;
       7: areturn

  public static <F, R> scalaz.Decidable<?> kleisliDecidable(scalaz.Decidable<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #245                // Method scalaz/Kleisli$.kleisliDecidable:(Lscalaz/Decidable;)Lscalaz/Decidable;
       7: areturn

  public static <F, R> scalaz.Divisible<?> kleisliDivisible(scalaz.Divisible<F>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #250                // Method scalaz/Kleisli$.kleisliDivisible:(Lscalaz/Divisible;)Lscalaz/Divisible;
       7: areturn

  public scala.Function1<A, M> run();
    Code:
       0: aload_0
       1: getfield      #254                // Field run:Lscala/Function1;
       4: areturn

  public <C, D> scalaz.Kleisli<M, C, D> dimap(scala.Function1<C, A>, scala.Function1<B, D>, scalaz.Functor<M>);
    Code:
       0: new           #2                  // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: invokedynamic #279,  0            // InvokeDynamic #0:apply:(Lscalaz/Kleisli;Lscalaz/Functor;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      13: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      16: areturn

  public <C> scalaz.Kleisli<M, A, C> $greater$eq$greater(scalaz.Kleisli<M, B, C>, scalaz.Bind<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #291,  0            // InvokeDynamic #1:apply:(Lscalaz/Kleisli;Lscalaz/Bind;Lscalaz/Kleisli;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2                  // class scalaz/Kleisli
      20: dup
      21: aload_3
      22: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      25: areturn

  public <C> scalaz.Kleisli<M, A, C> andThen(scalaz.Kleisli<M, B, C>, scalaz.Bind<M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
       6: areturn

  public <C> scalaz.Kleisli<M, A, C> $greater$eq$eq$greater(scala.Function1<B, M>, scalaz.Bind<M>);
    Code:
       0: aload_0
       1: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: new           #2                  // class scalaz/Kleisli
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      17: aload_2
      18: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      21: areturn

  public <C> scalaz.Kleisli<M, A, C> andThenK(scala.Function1<B, M>, scalaz.Bind<M>);
    Code:
       0: aload_0
       1: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       4: ifnonnull     9
       7: aconst_null
       8: athrow
       9: new           #2                  // class scalaz/Kleisli
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      17: aload_2
      18: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      21: areturn

  public <C> scalaz.Kleisli<M, C, B> $less$eq$less(scalaz.Kleisli<M, C, A>, scalaz.Bind<M>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
       6: areturn

  public <C> scalaz.Kleisli<M, C, B> compose(scalaz.Kleisli<M, C, A>, scalaz.Bind<M>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
       6: areturn

  public <C> scalaz.Kleisli<M, C, B> $less$eq$eq$less(scala.Function1<C, M>, scalaz.Bind<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/Kleisli
      11: dup
      12: aload_1
      13: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      16: aload_0
      17: aload_2
      18: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      21: areturn

  public <C> scalaz.Kleisli<M, C, B> composeK(scala.Function1<C, M>, scalaz.Bind<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #2                  // class scalaz/Kleisli
      11: dup
      12: aload_1
      13: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      16: aload_0
      17: aload_2
      18: invokevirtual #296                // Method $greater$eq$greater:(Lscalaz/Kleisli;Lscalaz/Bind;)Lscalaz/Kleisli;
      21: areturn

  public <F> M traverse(F, scalaz.Applicative<M>, scalaz.Traverse<F>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_0
       3: invokevirtual #312                // Method run:()Lscala/Function1;
       6: aload_2
       7: invokeinterface #317,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      12: areturn

  public M $eq$less$less(M, scalaz.Bind<M>);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #312                // Method run:()Lscala/Function1;
       6: invokeinterface #331,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public <C> scalaz.Kleisli<M, A, C> map(scala.Function1<B, C>, scalaz.Functor<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #342,  0            // InvokeDynamic #2:apply:(Lscalaz/Kleisli;Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2                  // class scalaz/Kleisli
      20: dup
      21: aload_3
      22: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      25: areturn

  public <N, C> scalaz.Kleisli<N, A, C> mapT(scala.Function1<M, N>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #312                // Method run:()Lscala/Function1;
       7: aload_1
       8: invokeinterface #347,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      13: invokevirtual #349                // Method scalaz/Kleisli$.kleisli:(Lscala/Function1;)Lscalaz/Kleisli;
      16: areturn

  public <N, C> scalaz.Kleisli<N, A, C> mapK(scala.Function1<M, N>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #312                // Method run:()Lscala/Function1;
       7: aload_1
       8: invokeinterface #347,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      13: invokevirtual #349                // Method scalaz/Kleisli$.kleisli:(Lscala/Function1;)Lscalaz/Kleisli;
      16: areturn

  public <C> scalaz.Kleisli<M, A, C> flatMapK(scala.Function1<B, M>, scalaz.Bind<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #359,  0            // InvokeDynamic #3:apply:(Lscalaz/Kleisli;Lscalaz/Bind;Lscala/Function1;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2                  // class scalaz/Kleisli
      20: dup
      21: aload_3
      22: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      25: areturn

  public <C> scalaz.Kleisli<M, A, C> flatMap(scala.Function1<B, scalaz.Kleisli<M, A, C>>, scalaz.Bind<M>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #366,  0            // InvokeDynamic #4:apply:(Lscalaz/Kleisli;Lscalaz/Bind;Lscala/Function1;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2                  // class scalaz/Kleisli
      20: dup
      21: aload_3
      22: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      25: areturn

  public <L> scalaz.Kleisli<?, A, B> lift(scalaz.Applicative<L>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokedynamic #377,  0            // InvokeDynamic #5:apply:(Lscalaz/Kleisli;Lscalaz/Applicative;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #2                  // class scalaz/Kleisli
      19: dup
      20: aload_2
      21: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      24: areturn

  public <N> scalaz.Kleisli<N, A, B> transform(scalaz.NaturalTransformation<M, N>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: invokedynamic #388,  0            // InvokeDynamic #6:apply:(Lscalaz/Kleisli;Lscalaz/NaturalTransformation;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: new           #2                  // class scalaz/Kleisli
      19: dup
      20: aload_2
      21: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      24: areturn

  public scalaz.Kleisli<M, A, M> lower(scalaz.Applicative<M>);
    Code:
       0: new           #2                  // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #396,  0            // InvokeDynamic #7:apply:(Lscalaz/Kleisli;Lscalaz/Applicative;)Lscala/Function1;
      11: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      14: areturn

  public <N, FF> scalaz.Kleisli<FF, A, B> unlift(scalaz.Comonad<N>, scalaz.Liskov<scalaz.Kleisli<M, A, B>, scalaz.Kleisli<?, A, B>>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #408,  0            // InvokeDynamic #8:apply:(Lscalaz/Kleisli;Lscalaz/Comonad;Lscalaz/Liskov;)Lscala/Function1;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: new           #2                  // class scalaz/Kleisli
      20: dup
      21: aload_3
      22: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      25: areturn

  public <N> scalaz.Kleisli<java.lang.Object, A, B> unliftId(scalaz.Comonad<N>, scalaz.Liskov<scalaz.Kleisli<M, A, B>, scalaz.Kleisli<?, A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #414                // Method unlift:(Lscalaz/Comonad;Lscalaz/Liskov;)Lscalaz/Kleisli;
       6: areturn

  public <W, S> scalaz.IndexedReaderWriterStateT<A, W, S, S, M, B> rwst(scalaz.Functor<M>, scalaz.Monoid<W>);
    Code:
       0: getstatic     #421                // Field scalaz/package$ReaderWriterStateT$.MODULE$:Lscalaz/package$ReaderWriterStateT$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #431,  0            // InvokeDynamic #9:apply:(Lscalaz/Kleisli;Lscalaz/Functor;Lscalaz/Monoid;)Lscala/Function2;
      11: astore_3
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: getstatic     #436                // Field scalaz/IndexedReaderWriterStateT$.MODULE$:Lscalaz/IndexedReaderWriterStateT$;
      20: aload_3
      21: invokedynamic #444,  0            // InvokeDynamic #10:apply:(Lscala/Function2;)Lscala/Function2;
      26: astore        4
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: new           #20                 // class scalaz/IndexedReaderWriterStateT$$anon$1
      36: dup
      37: aload         4
      39: invokespecial #447                // Method scalaz/IndexedReaderWriterStateT$$anon$1."<init>":(Lscala/Function2;)V
      42: areturn

  public scalaz.IndexedStateT<A, A, M, B> state(scalaz.Monad<M>);
    Code:
       0: getstatic     #459                // Field scalaz/package$StateT$.MODULE$:Lscalaz/package$StateT$;
       3: aload_0
       4: aload_1
       5: invokedynamic #467,  0            // InvokeDynamic #11:apply:(Lscalaz/Kleisli;Lscalaz/Monad;)Lscala/Function1;
      10: astore_2
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: getstatic     #472                // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: new           #22                 // class scalaz/IndexedStateT$Wrap
      27: dup
      28: aload_2
      29: invokespecial #473                // Method scalaz/IndexedStateT$Wrap."<init>":(Lscala/Function1;)V
      32: areturn

  public <T> scalaz.Kleisli<?, A, B> liftMK(scalaz.MonadTrans<T>, scalaz.Monad<M>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #486,  0            // InvokeDynamic #12:apply:(Lscalaz/MonadTrans;Lscalaz/Monad;)Lscala/Function1;
       7: astore_3
       8: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
      11: aload_0
      12: invokevirtual #312                // Method run:()Lscala/Function1;
      15: aload_3
      16: invokeinterface #347,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      21: invokevirtual #349                // Method scalaz/Kleisli$.kleisli:(Lscala/Function1;)Lscalaz/Kleisli;
      24: areturn

  public <AA> scalaz.Kleisli<M, AA, B> local(scala.Function1<AA, A>);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_1
       4: aload_0
       5: invokevirtual #312                // Method run:()Lscala/Function1;
       8: invokeinterface #347,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      13: invokevirtual #349                // Method scalaz/Kleisli$.kleisli:(Lscala/Function1;)Lscalaz/Kleisli;
      16: areturn

  public scalaz.Endomorphic<?, A> endo(scalaz.Functor<M>, scalaz.Liskov<B, A>);
    Code:
       0: new           #495                // class scalaz/Endomorphic
       3: dup
       4: aload_2
       5: invokedynamic #503,  0            // InvokeDynamic #13:apply:(Lscalaz/Liskov;)Lscala/Function1;
      10: astore_3
      11: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokedynamic #342,  0            // InvokeDynamic #2:apply:(Lscalaz/Kleisli;Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
      22: astore        4
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: new           #2                  // class scalaz/Kleisli
      32: dup
      33: aload         4
      35: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      38: invokespecial #506                // Method scalaz/Endomorphic."<init>":(Ljava/lang/Object;)V
      41: areturn

  public scalaz.Free<?, B> liftF();
    Code:
       0: getstatic     #520                // Field scalaz/Free$.MODULE$:Lscalaz/Free$;
       3: aload_0
       4: invokevirtual #523                // Method scalaz/Free$.liftF:(Ljava/lang/Object;)Lscalaz/Free;
       7: areturn

  public scalaz.Kleisli<M, A, A> tap(scalaz.Applicative<M>);
    Code:
       0: new           #2                  // class scalaz/Kleisli
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #530,  0            // InvokeDynamic #14:apply:(Lscalaz/Kleisli;Lscalaz/Applicative;)Lscala/Function1;
      11: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
      14: areturn

  public <M, A, B> scalaz.Kleisli<M, A, B> copy(scala.Function1<A, M>);
    Code:
       0: new           #2                  // class scalaz/Kleisli
       3: dup
       4: aload_1
       5: invokespecial #60                 // Method "<init>":(Lscala/Function1;)V
       8: areturn

  public <M, A, B> scala.Function1<A, M> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #312                // Method run:()Lscala/Function1;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #537                // String Kleisli
       3: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: aload_0
      21: invokevirtual #312                // Method run:()Lscala/Function1;
      24: areturn
      25: new           #544                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #550                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #553                // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #556                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #565                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #569                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/Kleisli
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #565                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #576                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #565                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #580                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     67
       5: aload_1
       6: instanceof    #2                  // class scalaz/Kleisli
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          69
      23: aload_1
      24: checkcast     #2                  // class scalaz/Kleisli
      27: astore_3
      28: aload_0
      29: invokevirtual #312                // Method run:()Lscala/Function1;
      32: aload_3
      33: invokevirtual #312                // Method run:()Lscala/Function1;
      36: astore        4
      38: dup
      39: ifnonnull     51
      42: pop
      43: aload         4
      45: ifnull        59
      48: goto          63
      51: aload         4
      53: invokevirtual #583                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ifeq          69
      67: iconst_1
      68: ireturn
      69: iconst_0
      70: ireturn

  public static final java.lang.Object $anonfun$dimap$1(scalaz.Kleisli, scalaz.Functor, scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_2
       6: aload         4
       8: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_3
      19: invokeinterface #592,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: areturn

  public static final java.lang.Object $anonfun$$greater$eq$greater$1(scalaz.Kleisli, scalaz.Bind, scalaz.Kleisli, java.lang.Object);
    Code:
       0: aload_1
       1: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       4: aload_0
       5: invokevirtual #79                 // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
       8: aload_3
       9: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_2
      15: invokevirtual #312                // Method run:()Lscala/Function1;
      18: invokeinterface #331,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public static final java.lang.Object $anonfun$map$1(scalaz.Kleisli, scalaz.Functor, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_3
       6: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #592,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public static final java.lang.Object $anonfun$flatMapK$1(scalaz.Kleisli, scalaz.Bind, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_3
       6: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #331,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      17: areturn

  public static final java.lang.Object $anonfun$flatMap$2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class scalaz/Kleisli
      10: invokevirtual #312                // Method run:()Lscala/Function1;
      13: aload_1
      14: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public static final java.lang.Object $anonfun$flatMap$1(scalaz.Kleisli, scalaz.Bind, scala.Function1, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_3
       6: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_2
      12: aload_3
      13: invokedynamic #610,  0            // InvokeDynamic #15:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      18: invokeinterface #331,  3          // InterfaceMethod scalaz/Bind.bind:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      23: areturn

  public static final java.lang.Object $anonfun$lift$2(scalaz.Kleisli, java.lang.Object);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #79                 // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
       7: aload_1
       8: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$lift$1(scalaz.Kleisli, scalaz.Applicative, java.lang.Object);
    Code:
       0: getstatic     #619                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: aload_0
      10: aload_2
      11: invokedynamic #627,  0            // InvokeDynamic #16:apply:(Lscalaz/Kleisli;Ljava/lang/Object;)Lscala/Function0;
      16: invokeinterface #633,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      21: areturn

  public static final java.lang.Object $anonfun$transform$1(scalaz.Kleisli, scalaz.NaturalTransformation, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_2
       6: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokeinterface #637,  2          // InterfaceMethod scalaz/NaturalTransformation.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public static final java.lang.Object $anonfun$lower$2(scalaz.Kleisli, java.lang.Object);
    Code:
       0: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_0
       4: invokevirtual #79                 // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
       7: aload_1
       8: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$lower$1(scalaz.Kleisli, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #644,  0            // InvokeDynamic #17:apply:(Lscalaz/Kleisli;Ljava/lang/Object;)Lscala/Function0;
       8: astore_3
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: aload_1
      15: aload_3
      16: invokeinterface #633,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      21: areturn

  public static final java.lang.Object $anonfun$unlift$1(scalaz.Kleisli, scalaz.Comonad, scalaz.Liskov, java.lang.Object);
    Code:
       0: getstatic     #655                // Field scalaz/Comonad$.MODULE$:Lscalaz/Comonad$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_1
       9: aload_2
      10: aload_0
      11: invokevirtual #656                // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #2                  // class scalaz/Kleisli
      17: invokevirtual #312                // Method run:()Lscala/Function1;
      20: aload_3
      21: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokeinterface #661,  2          // InterfaceMethod scalaz/Comonad.copoint:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn

  public static final scala.Tuple3 $anonfun$rwst$2(scalaz.Monoid, java.lang.Object, java.lang.Object);
    Code:
       0: new           #667                // class scala/Tuple3
       3: dup
       4: aload_0
       5: invokeinterface #672,  1          // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      10: aload_2
      11: aload_1
      12: invokespecial #675                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      15: areturn

  public static final java.lang.Object $anonfun$rwst$1(scalaz.Kleisli, scalaz.Functor, scalaz.Monoid, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: getstatic     #51                 // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       4: aload_0
       5: invokevirtual #79                 // Method scalaz/Kleisli$.kleisliFn:(Lscalaz/Kleisli;)Lscala/Function1;
       8: aload_3
       9: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_2
      15: aload         4
      17: invokedynamic #686,  0            // InvokeDynamic #18:apply:(Lscalaz/Monoid;Ljava/lang/Object;)Lscala/Function1;
      22: invokeinterface #592,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      27: areturn

  public static final scala.Tuple2 $anonfun$state$2(java.lang.Object, java.lang.Object);
    Code:
       0: new           #691                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #694                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final java.lang.Object $anonfun$state$1(scalaz.Kleisli, scalaz.Monad, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #312                // Method run:()Lscala/Function1;
       5: aload_2
       6: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload_2
      12: invokedynamic #703,  0            // InvokeDynamic #19:apply:(Ljava/lang/Object;)Lscala/Function1;
      17: invokeinterface #706,  3          // InterfaceMethod scalaz/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      22: areturn

  public static final java.lang.Object $anonfun$liftMK$1(scalaz.MonadTrans, scalaz.Monad, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #715,  3          // InterfaceMethod scalaz/MonadTrans.liftM:(Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$endo$1(scalaz.Liskov, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #656                // Method scalaz/Liskov.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public static final java.lang.Object $anonfun$tap$2(scalaz.Kleisli, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #312                // Method run:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #590,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$tap$4(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$tap$3(scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #728,  0            // InvokeDynamic #20:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: invokeinterface #633,  2          // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static final java.lang.Object $anonfun$tap$1(scalaz.Kleisli, scalaz.Applicative, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #732,  0            // InvokeDynamic #21:apply:(Lscalaz/Kleisli;Ljava/lang/Object;)Lscala/Function0;
       8: aload_1
       9: aload_2
      10: invokedynamic #738,  0            // InvokeDynamic #22:apply:(Lscalaz/Applicative;Ljava/lang/Object;)Lscala/Function0;
      15: invokeinterface #742,  3          // InterfaceMethod scalaz/Applicative.discardLeft:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      20: areturn

  public scalaz.Kleisli(scala.Function1<A, M>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #254                // Field run:Lscala/Function1;
       5: aload_0
       6: invokespecial #746                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #750                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #762,  0            // InvokeDynamic #23:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
