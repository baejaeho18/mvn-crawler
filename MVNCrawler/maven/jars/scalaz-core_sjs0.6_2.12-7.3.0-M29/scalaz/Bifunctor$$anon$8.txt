Compiled from "Bifunctor.scala"
public final class scalaz.Bifunctor$$anon$8 implements scalaz.IsomorphismBifunctor<F, G> {
  private final scalaz.syntax.BifunctorSyntax<F> bifunctorSyntax;

  private final scalaz.Bifunctor E$1;

  private final scalaz.Isomorphisms$Iso3 D$1;

  public <A, B, C, D> F bimap(F, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #35                 // InterfaceMethod scalaz/IsomorphismBifunctor.bimap$:(Lscalaz/IsomorphismBifunctor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public <G> scalaz.Bifunctor<?> compose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // InterfaceMethod scalaz/Bifunctor.compose$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Bifunctor<?> product(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // InterfaceMethod scalaz/Bifunctor.product$:(Lscalaz/Bifunctor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <X> scalaz.Functor<?> leftFunctor();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scalaz/Bifunctor.leftFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public <A, B, C> F leftMap(F, scala.Function1<A, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #67                 // InterfaceMethod scalaz/Bifunctor.leftMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <X> scalaz.Functor<?> rightFunctor();
    Code:
       0: aload_0
       1: invokestatic  #71                 // InterfaceMethod scalaz/Bifunctor.rightFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public scalaz.Functor<?> uFunctor();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod scalaz/Bifunctor.uFunctor$:(Lscalaz/Bifunctor;)Lscalaz/Functor;
       4: areturn

  public <A, B, D> F rightMap(F, scala.Function1<B, D>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #81                 // InterfaceMethod scalaz/Bifunctor.rightMap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> F umap(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #87                 // InterfaceMethod scalaz/Bifunctor.umap$:(Lscalaz/Bifunctor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G, H> scalaz.Bifunctor<?> embed(scalaz.Functor<G>, scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #95                 // InterfaceMethod scalaz/Bifunctor.embed$:(Lscalaz/Bifunctor;Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       6: areturn

  public <G> scalaz.Bifunctor<?> embedLeft(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // InterfaceMethod scalaz/Bifunctor.embedLeft$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <H> scalaz.Bifunctor<?> embedRight(scalaz.Functor<H>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #108                // InterfaceMethod scalaz/Bifunctor.embedRight$:(Lscalaz/Bifunctor;Lscalaz/Functor;)Lscalaz/Bifunctor;
       5: areturn

  public <A, B, C, D> F widen(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #115                // InterfaceMethod scalaz/Bifunctor.widen$:(Lscalaz/Bifunctor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.syntax.BifunctorSyntax<F> bifunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #119                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       4: areturn

  public void scalaz$Bifunctor$_setter_$bifunctorSyntax_$eq(scalaz.syntax.BifunctorSyntax<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field bifunctorSyntax:Lscalaz/syntax/BifunctorSyntax;
       5: return

  public scalaz.Bifunctor<G> G();
    Code:
       0: aload_0
       1: getfield      #128                // Field E$1:Lscalaz/Bifunctor;
       4: areturn

  public scalaz.Isomorphisms$Iso3<scalaz.BiNaturalTransformation, F, G> iso();
    Code:
       0: aload_0
       1: getfield      #133                // Field D$1:Lscalaz/Isomorphisms$Iso3;
       4: areturn

  public scalaz.Bifunctor$$anon$8(scalaz.Bifunctor, scalaz.Isomorphisms$Iso3);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #128                // Field E$1:Lscalaz/Bifunctor;
       5: aload_0
       6: aload_2
       7: putfield      #133                // Field D$1:Lscalaz/Isomorphisms$Iso3;
      10: aload_0
      11: invokespecial #138                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #142                // InterfaceMethod scalaz/Bifunctor.$init$:(Lscalaz/Bifunctor;)V
      18: aload_0
      19: invokestatic  #145                // InterfaceMethod scalaz/IsomorphismBifunctor.$init$:(Lscalaz/IsomorphismBifunctor;)V
      22: return
}
