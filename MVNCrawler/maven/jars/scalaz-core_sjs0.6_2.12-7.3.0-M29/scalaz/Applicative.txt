Compiled from "Applicative.scala"
public interface scalaz.Applicative<F> extends scalaz.Apply<F>, scalaz.InvariantApplicative<F> {
  public static <F, G> scalaz.Applicative<F> fromIso(scalaz.Isomorphisms$Iso2<scalaz.NaturalTransformation, F, G>, scalaz.Applicative<G>);
    Code:
       0: getstatic     #52                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: aload_0
       4: aload_1
       5: invokevirtual #54                 // Method scalaz/Applicative$.fromIso:(Lscalaz/Isomorphisms$Iso2;Lscalaz/Applicative;)Lscalaz/Applicative;
       8: areturn

  public abstract void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<F>);

  public abstract <A> F point(scala.Function0<A>);

  public static java.lang.Object pure$(scalaz.Applicative, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #68                 // InterfaceMethod pure:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public default <A> F pure(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object map$(scalaz.Applicative, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #81                 // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A, B> F map(F, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #106,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
       7: aload_0
       8: aload_2
       9: invokedynamic #114,  0            // InvokeDynamic #1:apply:(Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      14: invokeinterface #118,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      19: areturn

  public static java.lang.Object apply2$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #125                // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public default <A, B, C> F apply2(scala.Function0<F>, scala.Function0<F>, scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: aload_3
       5: invokedynamic #138,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function0;
      10: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      15: invokeinterface #142,  4          // InterfaceMethod ap2:(Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public static java.lang.Object traverse$(scalaz.Applicative, java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #150                // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public default <A, G, B> F traverse(G, scala.Function1<A, F>, scalaz.Traverse<G>);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokeinterface #157,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object sequence$(scalaz.Applicative, java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #165                // InterfaceMethod sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public default <A, G> F sequence(G, scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #174,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       7: aload_2
       8: invokeinterface #150,  4          // InterfaceMethod traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
      13: areturn

  public static scalaz.Applicative par$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #180                // InterfaceMethod par:()Lscalaz/Applicative;
       4: areturn

  public default scalaz.Applicative<?> par();
    Code:
       0: getstatic     #186                // Field scalaz/Tags$.MODULE$:Lscalaz/Tags$;
       3: invokevirtual #190                // Method scalaz/Tags$.Parallel:()Lscalaz/Tag$TagOf;
       6: aload_0
       7: invokevirtual #193                // Method scalaz/Tag$TagOf.subst1:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/Applicative
      13: areturn

  public static java.lang.Object xproduct0$(scalaz.Applicative, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #198                // InterfaceMethod xproduct0:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public default <Z> F xproduct0(scala.Function0<Z>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public static java.lang.Object xproduct1$(scalaz.Applicative, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #207                // InterfaceMethod xproduct1:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public default <Z, A1> F xproduct1(scala.Function0<F>, scala.Function1<A1, Z>, scala.Function1<Z, A1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #212,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_2
       8: aload_3
       9: invokeinterface #216,  4          // InterfaceMethod xmap:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: areturn

  public static java.lang.Object xproduct2$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #223                // InterfaceMethod xproduct2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public default <Z, A1, A2> F xproduct2(scala.Function0<F>, scala.Function0<F>, scala.Function2<A1, A2, Z>, scala.Function1<Z, scala.Tuple2<A1, A2>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #125,  4          // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       9: areturn

  public static java.lang.Object xproduct3$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #231                // InterfaceMethod xproduct3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public default <Z, A1, A2, A3> F xproduct3(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function3<A1, A2, A3, Z>, scala.Function1<Z, scala.Tuple3<A1, A2, A3>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #237,  5          // InterfaceMethod apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      11: areturn

  public static java.lang.Object xproduct4$(scalaz.Applicative, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #244                // InterfaceMethod xproduct4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public default <Z, A1, A2, A3, A4> F xproduct4(scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function0<F>, scala.Function4<A1, A2, A3, A4, Z>, scala.Function1<Z, scala.Tuple4<A1, A2, A3, A4>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokeinterface #250,  6          // InterfaceMethod apply4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      13: areturn

  public static java.lang.Object replicateM$(scalaz.Applicative, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #257                // InterfaceMethod replicateM:(ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A> F replicateM(int, F);
    Code:
       0: getstatic     #264                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: getstatic     #269                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       6: invokevirtual #273                // Method scalaz/IList$.instances:()Lscalaz/Traverse;
       9: astore_3
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: aload_3
      16: getstatic     #269                // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      19: iload_1
      20: aload_2
      21: invokevirtual #277                // Method scalaz/IList$.fill:(ILjava/lang/Object;)Lscalaz/IList;
      24: aload_0
      25: invokeinterface #280,  3          // InterfaceMethod scalaz/Traverse.sequence:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      30: areturn

  public static java.lang.Object replicateM_$(scalaz.Applicative, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #284                // InterfaceMethod replicateM_:(ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public default <A> F replicateM_(int, F);
    Code:
       0: getstatic     #289                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
       3: invokevirtual #292                // Method scalaz/std/list$.listInstance:()Lscalaz/Traverse;
       6: getstatic     #297                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       9: iload_1
      10: aload_2
      11: invokedynamic #302,  0            // InvokeDynamic #4:apply:(Ljava/lang/Object;)Lscala/Function0;
      16: invokevirtual #305                // Method scala/collection/immutable/List$.fill:(ILscala/Function0;)Lscala/collection/GenTraversable;
      19: aload_0
      20: invokeinterface #308,  3          // InterfaceMethod scalaz/Traverse.sequence_:(Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
      25: areturn

  public static java.lang.Object filterM$(scalaz.Applicative, scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #315                // InterfaceMethod filterM:(Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F filterM(scala.collection.immutable.List<A>, scala.Function1<A, F>);
    Code:
       0: getstatic     #322                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: aload_1
       4: invokevirtual #326                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_0
      11: invokedynamic #335,  0            // InvokeDynamic #5:apply:()Lscala/Function0;
      16: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      21: astore_3
      22: goto          89
      25: aload_1
      26: instanceof    #337                // class scala/collection/immutable/$colon$colon
      29: ifeq          80
      32: aload_1
      33: checkcast     #337                // class scala/collection/immutable/$colon$colon
      36: astore        4
      38: aload         4
      40: invokevirtual #340                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      43: astore        5
      45: aload         4
      47: invokevirtual #343                // Method scala/collection/immutable/$colon$colon.tl$access$1:()Lscala/collection/immutable/List;
      50: astore        6
      52: aload_0
      53: aload_0
      54: aload         6
      56: aload_2
      57: invokedynamic #350,  0            // InvokeDynamic #6:apply:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Lscala/Function0;
      62: aload_0
      63: aload_2
      64: aload         5
      66: invokedynamic #358,  0            // InvokeDynamic #7:apply:(Lscalaz/Applicative;Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      71: invokeinterface #118,  3          // InterfaceMethod ap:(Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      76: astore_3
      77: goto          89
      80: new           #360                // class scala/MatchError
      83: dup
      84: aload_1
      85: invokespecial #364                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      88: athrow
      89: aload_3
      90: areturn

  public static java.lang.Object filterM$(scalaz.Applicative, scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #370                // InterfaceMethod filterM:(Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public default <A> F filterM(scalaz.IList<A>, scala.Function1<A, F>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #377                // Method scalaz/IList.filterM:(Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public static java.lang.Object unlessM$(scalaz.Applicative, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #384                // InterfaceMethod unlessM:(ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F unlessM(boolean, scala.Function0<F>);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: invokedynamic #396,  0            // InvokeDynamic #8:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
      10: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      15: areturn
      16: aload_0
      17: aload_2
      18: invokeinterface #212,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      23: invokeinterface #399,  2          // InterfaceMethod void:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn

  public static java.lang.Object whenM$(scalaz.Applicative, boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #403                // InterfaceMethod whenM:(ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public default <A> F whenM(boolean, scala.Function0<F>);
    Code:
       0: iload_1
       1: ifeq          17
       4: aload_0
       5: aload_2
       6: invokeinterface #212,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      11: invokeinterface #399,  2          // InterfaceMethod void:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: invokedynamic #408,  0            // InvokeDynamic #9:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
      23: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      28: areturn

  public static scalaz.Applicative compose$(scalaz.Applicative, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #414                // InterfaceMethod compose:(Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public default <G> scalaz.Applicative<?> compose(scalaz.Applicative<G>);
    Code:
       0: new           #20                 // class scalaz/Applicative$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #418                // Method scalaz/Applicative$$anon$1."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Applicative product$(scalaz.Applicative, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #422                // InterfaceMethod product:(Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public default <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: new           #22                 // class scalaz/Applicative$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #423                // Method scalaz/Applicative$$anon$2."<init>":(Lscalaz/Applicative;Lscalaz/Applicative;)V
       9: areturn

  public static scalaz.Applicative flip$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #427                // InterfaceMethod flip:()Lscalaz/Applicative;
       4: areturn

  public default scalaz.Applicative<F> flip();
    Code:
       0: new           #24                 // class scalaz/Applicative$$anon$3
       3: dup
       4: aload_0
       5: invokespecial #431                // Method scalaz/Applicative$$anon$3."<init>":(Lscalaz/Applicative;)V
       8: areturn

  public static java.lang.Object plusA$(scalaz.Applicative, scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #440                // InterfaceMethod plusA:(Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public default <A> F plusA(scala.Function0<F>, scala.Function0<F>, scalaz.Semigroup<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #452,  0            // InvokeDynamic #10:apply:(Lscalaz/Semigroup;)Lscala/Function2;
       9: invokeinterface #125,  4          // InterfaceMethod apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      14: areturn

  public static scalaz.Applicative$ApplicativeLaw applicativeLaw$(scalaz.Applicative);
    Code:
       0: aload_0
       1: invokespecial #458                // InterfaceMethod applicativeLaw:()Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public default scalaz.Applicative<F>.ApplicativeLaw applicativeLaw();
    Code:
       0: new           #26                 // class scalaz/Applicative$$anon$4
       3: dup
       4: aload_0
       5: invokespecial #460                // Method scalaz/Applicative$$anon$4."<init>":(Lscalaz/Applicative;)V
       8: areturn

  public abstract scalaz.syntax.ApplicativeSyntax<F> applicativeSyntax();

  public static java.lang.Object $anonfun$map$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.Function1 $anonfun$map$3(scala.Function1);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$map$2(scalaz.Applicative, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #474,  0            // InvokeDynamic #11:apply:(Lscala/Function1;)Lscala/Function0;
       7: invokeinterface #72,  2           // InterfaceMethod point:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static scala.Function2 $anonfun$apply2$1(scala.Function2);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$sequence$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$replicateM_$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static scala.collection.immutable.List $anonfun$filterM$1();
    Code:
       0: getstatic     #322                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: areturn

  public static java.lang.Object $anonfun$filterM$2(scalaz.Applicative, scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #315,  3          // InterfaceMethod filterM:(Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       8: areturn

  public static scala.collection.immutable.List $anonfun$filterM$5(boolean, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: iload_0
       1: ifeq          10
       4: aload_2
       5: aload_1
       6: invokevirtual #488                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       9: areturn
      10: aload_2
      11: areturn

  public static scala.Function1 $anonfun$filterM$4(java.lang.Object, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: invokedynamic #499,  0            // InvokeDynamic #12:apply:(ZLjava/lang/Object;)Lscala/Function1;
       7: areturn

  public static java.lang.Object $anonfun$filterM$3(scalaz.Applicative, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #503,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokedynamic #512,  0            // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function1;
      14: invokeinterface #81,  3           // InterfaceMethod map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      19: areturn

  public static void $anonfun$unlessM$1();
    Code:
       0: return

  public static void $anonfun$whenM$1();
    Code:
       0: return

  public static java.lang.Object $anonfun$plusA$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.Object $anonfun$plusA$1(scalaz.Semigroup, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #521,  0            // InvokeDynamic #14:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #527,  3          // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      13: areturn

  public static void $init$(scalaz.Applicative);
    Code:
       0: aload_0
       1: new           #28                 // class scalaz/Applicative$$anon$5
       4: dup
       5: aload_0
       6: invokespecial #529                // Method scalaz/Applicative$$anon$5."<init>":(Lscalaz/Applicative;)V
       9: invokeinterface #531,  2          // InterfaceMethod scalaz$Applicative$_setter_$applicativeSyntax_$eq:(Lscalaz/syntax/ApplicativeSyntax;)V
      14: return

  public static scala.Function1 $anonfun$filterM$4$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #536                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokestatic  #538                // InterfaceMethod $anonfun$filterM$4:(Ljava/lang/Object;Z)Lscala/Function1;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #550,  0            // InvokeDynamic #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
