Compiled from "Heap.scala"
public final class scalaz.Heap$ extends scalaz.HeapInstances {
  public static scalaz.Heap$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class scalaz/Heap$
       3: invokespecial #37                 // Method "<init>":()V
       6: return

  public <F, A> scalaz.Heap<A> fromData(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: getstatic     #48                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_2
       9: aload_1
      10: getstatic     #51                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
      13: invokevirtual #55                 // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
      16: aload_3
      17: invokedynamic #78,  0             // InvokeDynamic #0:apply:(Lscalaz/Order;)Lscala/Function2;
      22: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #16                 // class scalaz/Heap
      30: areturn

  public <F, A> scalaz.Heap<A> fromCodata(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: getstatic     #48                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_2
       9: invokedynamic #101,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      14: aload_3
      15: invokedynamic #113,  0            // InvokeDynamic #2:apply:(Lscalaz/Order;)Lscala/Function1;
      20: astore        5
      22: astore        4
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: aload_2
      30: aload_1
      31: aload         4
      33: aload         5
      35: invokedynamic #123,  0            // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function2;
      40: invokeinterface #127,  4          // InterfaceMethod scalaz/Foldable.foldRight:(Ljava/lang/Object;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      45: checkcast     #16                 // class scalaz/Heap
      48: areturn

  public <F, A> scalaz.Heap<A> fromDataWith(scala.Function2<A, A, java.lang.Object>, F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #48                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_3
       9: aload_2
      10: getstatic     #51                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
      13: invokevirtual #55                 // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
      16: aload_1
      17: invokedynamic #148,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      22: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #16                 // class scalaz/Heap
      30: areturn

  public <F, A> scalaz.IList<A> sort(F, scalaz.Foldable<F>, scalaz.Order<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #157                // Method fromData:(Ljava/lang/Object;Lscalaz/Foldable;Lscalaz/Order;)Lscalaz/Heap;
       7: invokevirtual #161                // Method scalaz/Heap.toIList:()Lscalaz/IList;
      10: areturn

  public <F, A> scalaz.IList<A> sortWith(scala.Function2<A, A, java.lang.Object>, F, scalaz.Foldable<F>);
    Code:
       0: getstatic     #48                 // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: aload_3
       9: aload_2
      10: getstatic     #51                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
      13: invokevirtual #55                 // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
      16: aload_1
      17: invokedynamic #148,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      22: invokeinterface #84,  4           // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      27: checkcast     #16                 // class scalaz/Heap
      30: invokevirtual #161                // Method scalaz/Heap.toIList:()Lscalaz/IList;
      33: areturn

  public <A> scalaz.Heap<A> singleton(A, scalaz.Order<A>);
    Code:
       0: getstatic     #173                // Field scalaz/Heap$impl$.MODULE$:Lscalaz/Heap$impl$;
       3: getstatic     #178                // Field scalaz/Order$.MODULE$:Lscalaz/Order$;
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_2
      12: invokedynamic #185,  0            // InvokeDynamic #5:apply:(Lscalaz/Order;)Lscala/Function2;
      17: astore_3
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: getstatic     #187                // Field MODULE$:Lscalaz/Heap$;
      26: iconst_1
      27: getstatic     #190                // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      30: aload_1
      31: invokedynamic #200,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
      36: invokedynamic #207,  0            // InvokeDynamic #7:apply:()Lscala/Function0;
      41: astore        5
      43: astore        4
      45: ifnonnull     50
      48: aconst_null
      49: athrow
      50: new           #30                 // class scalaz/Tree$Node$$anon$4
      53: dup
      54: aload         4
      56: aload         5
      58: invokespecial #210                // Method scalaz/Tree$Node$$anon$4."<init>":(Lscala/Function0;Lscala/Function0;)V
      61: astore        6
      63: istore        7
      65: ifnonnull     70
      68: aconst_null
      69: athrow
      70: new           #12                 // class scalaz/Heap$$anon$2
      73: dup
      74: iload         7
      76: aload_3
      77: aload         6
      79: invokespecial #213                // Method scalaz/Heap$$anon$2."<init>":(ILscala/Function2;Lscalaz/Tree;)V
      82: areturn

  public <A> scalaz.Heap<A> replicate(A, int, scalaz.Order<A>);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmpge     14
       5: getstatic     #234                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       8: ldc           #236                // String Heap.replicate: negative length
      10: invokevirtual #240                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
      13: athrow
      14: iload_2
      15: iconst_0
      16: if_icmpne     26
      19: getstatic     #51                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
      22: invokevirtual #55                 // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
      25: areturn
      26: aload_0
      27: aload_0
      28: aload_1
      29: aload_3
      30: invokevirtual #242                // Method singleton:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
      33: iload_2
      34: invokespecial #246                // Method f$9:(Lscalaz/Heap;I)Lscalaz/Heap;
      37: areturn

  public <A> scalaz.Heap<A> apply(int, scala.Function2<A, A, java.lang.Object>, scalaz.Tree<scalaz.Heap$Ranked<A>>);
    Code:
       0: new           #12                 // class scalaz/Heap$$anon$2
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokespecial #213                // Method scalaz/Heap$$anon$2."<init>":(ILscala/Function2;Lscalaz/Tree;)V
      10: areturn

  public <A> scala.Option<scala.Tuple3<java.lang.Object, scala.Function2<A, A, java.lang.Object>, scalaz.Tree<scalaz.Heap$Ranked<A>>>> unapply(scalaz.Heap<A>);
    Code:
       0: aload_1
       1: invokedynamic #263,  0            // InvokeDynamic #8:apply:()Lscala/Function0;
       6: invokedynamic #274,  0            // InvokeDynamic #9:apply:()Lscala/Function3;
      11: invokevirtual #278                // Method scalaz/Heap.fold:(Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      14: checkcast     #280                // class scala/Option
      17: areturn

  public static final scalaz.Heap $anonfun$fromData$1(scalaz.Order, scalaz.Heap, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #286                // Method scalaz/Heap.insert:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
       6: areturn

  public static final scalaz.Heap $anonfun$fromCodata$1();
    Code:
       0: getstatic     #51                 // Field scalaz/Heap$Empty$.MODULE$:Lscalaz/Heap$Empty$;
       3: invokevirtual #55                 // Method scalaz/Heap$Empty$.apply:()Lscalaz/Heap;
       6: areturn

  public static final scalaz.Heap $anonfun$fromCodata$3(java.lang.Object, scalaz.Order, scala.Function0);
    Code:
       0: aload_2
       1: invokeinterface #293,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #16                 // class scalaz/Heap
       9: aload_0
      10: aload_1
      11: invokevirtual #286                // Method scalaz/Heap.insert:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/Heap;
      14: areturn

  public static final scala.Function1 $anonfun$fromCodata$2(scalaz.Order, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #302,  0            // InvokeDynamic #10:apply:(Ljava/lang/Object;Lscalaz/Order;)Lscala/Function1;
       7: areturn

  public static final scalaz.Heap $anonfun$fromDataWith$1(scala.Function2, scalaz.Heap, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: aload_0
       8: aload_2
       9: invokedynamic #311,  0            // InvokeDynamic #11:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function0;
      14: aload_0
      15: aload_2
      16: invokedynamic #321,  0            // InvokeDynamic #12:apply:(Lscala/Function2;Ljava/lang/Object;)Lscala/Function3;
      21: invokevirtual #278                // Method scalaz/Heap.fold:(Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      24: checkcast     #16                 // class scalaz/Heap
      27: areturn

  public static final boolean $anonfun$singleton$1(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #328,  3          // InterfaceMethod scalaz/Order.lessThanOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private final scalaz.Heap f$9(scalaz.Heap, int);
    Code:
       0: iload_2
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     20
       7: aload_1
       8: aload_1
       9: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      12: iload_2
      13: iconst_2
      14: idiv
      15: istore_2
      16: astore_1
      17: goto          0
      20: iload_2
      21: iconst_1
      22: if_icmpne     27
      25: aload_1
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_1
      30: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      33: iload_2
      34: iconst_1
      35: isub
      36: iconst_2
      37: idiv
      38: aload_1
      39: invokespecial #336                // Method g$1:(Lscalaz/Heap;ILscalaz/Heap;)Lscalaz/Heap;
      42: areturn

  private final scalaz.Heap g$1(scalaz.Heap, int, scalaz.Heap);
    Code:
       0: iload_2
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpne     22
       7: aload_1
       8: aload_1
       9: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      12: iload_2
      13: iconst_2
      14: idiv
      15: aload_3
      16: astore_3
      17: istore_2
      18: astore_1
      19: goto          0
      22: iload_2
      23: iconst_1
      24: if_icmpne     33
      27: aload_1
      28: aload_3
      29: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      32: areturn
      33: aload_1
      34: aload_1
      35: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      38: iload_2
      39: iconst_1
      40: isub
      41: iconst_2
      42: idiv
      43: aload_1
      44: aload_3
      45: invokevirtual #332                // Method scalaz/Heap.union:(Lscalaz/Heap;)Lscalaz/Heap;
      48: astore_3
      49: istore_2
      50: astore_1
      51: goto          0

  public static final scala.None$ $anonfun$unapply$3();
    Code:
       0: getstatic     #342                // Field scala/None$.MODULE$:Lscala/None$;
       3: areturn

  public static final scala.Some $anonfun$unapply$4(int, scala.Function2, scalaz.Tree);
    Code:
       0: new           #346                // class scala/Some
       3: dup
       4: new           #348                // class scala/Tuple3
       7: dup
       8: iload_0
       9: invokestatic  #354                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      12: aload_1
      13: aload_2
      14: invokespecial #357                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      17: invokespecial #360                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      20: areturn

  private scalaz.Heap$();
    Code:
       0: aload_0
       1: invokespecial #361                // Method scalaz/HeapInstances."<init>":()V
       4: aload_0
       5: putstatic     #187                // Field MODULE$:Lscalaz/Heap$;
       8: return

  public static final java.lang.Object $anonfun$singleton$1$adapted(scalaz.Order, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #363                // Method $anonfun$singleton$1:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: invokestatic  #367                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       9: areturn

  public static final scala.Some $anonfun$unapply$4$adapted(java.lang.Object, scala.Function2, scalaz.Tree);
    Code:
       0: aload_0
       1: invokestatic  #371                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       4: istore_3
       5: new           #346                // class scala/Some
       8: dup
       9: new           #348                // class scala/Tuple3
      12: dup
      13: iload_3
      14: invokestatic  #354                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      17: aload_1
      18: aload_2
      19: invokespecial #357                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokespecial #360                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      25: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #384,  0            // InvokeDynamic #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
