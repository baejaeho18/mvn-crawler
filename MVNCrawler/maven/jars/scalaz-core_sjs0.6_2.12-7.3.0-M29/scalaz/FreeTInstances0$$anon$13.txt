Compiled from "FreeT.scala"
public final class scalaz.FreeTInstances0$$anon$13 implements scalaz.FreeTPlus<S, M> {
  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.Applicative evidence$14$1;

  private final scalaz.BindRec evidence$15$1;

  private final scalaz.Plus evidence$16$1;

  public final <A> scalaz.FreeT<S, M, A> plus(scalaz.FreeT<S, M, A>, scala.Function0<scalaz.FreeT<S, M, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #46                 // InterfaceMethod scalaz/FreeTPlus.plus$:(Lscalaz/FreeTPlus;Lscalaz/FreeT;Lscala/Function0;)Lscalaz/FreeT;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.FreeT<S, M, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.FreeT<S, M, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.FreeT<S, M, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.FreeT<S, M, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.FreeT<S, M, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #98                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Applicative<M> M();
    Code:
       0: getstatic     #111                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #113                // Field evidence$14$1:Lscalaz/Applicative;
       7: invokevirtual #117                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #119                // class scalaz/Applicative
      13: areturn

  public scalaz.BindRec<M> M1();
    Code:
       0: getstatic     #111                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #124                // Field evidence$15$1:Lscalaz/BindRec;
       7: invokevirtual #117                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #126                // class scalaz/BindRec
      13: areturn

  public scalaz.Plus<M> M2();
    Code:
       0: getstatic     #111                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: getfield      #130                // Field evidence$16$1:Lscalaz/Plus;
       7: invokevirtual #117                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class scalaz/Plus
      13: areturn

  public final java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #22                 // class scalaz/FreeT
       4: astore_3
       5: getstatic     #136                // Field scalaz/FreeT$.MODULE$:Lscalaz/FreeT$;
       8: aload_0
       9: invokeinterface #138,  1          // InterfaceMethod scalaz/FreeTPlus.M2:()Lscalaz/Plus;
      14: aload_3
      15: aload_0
      16: invokeinterface #140,  1          // InterfaceMethod scalaz/FreeTPlus.M1:()Lscalaz/BindRec;
      21: aload_0
      22: invokeinterface #142,  1          // InterfaceMethod scalaz/FreeTPlus.M:()Lscalaz/Applicative;
      27: invokevirtual #146                // Method scalaz/FreeT.toM:(Lscalaz/BindRec;Lscalaz/Applicative;)Ljava/lang/Object;
      30: aload_0
      31: aload_2
      32: invokedynamic #168,  0            // InvokeDynamic #0:apply:(Lscalaz/FreeTPlus;Lscala/Function0;)Lscala/Function0;
      37: invokeinterface #170,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      42: aload_0
      43: invokeinterface #142,  1          // InterfaceMethod scalaz/FreeTPlus.M:()Lscalaz/Applicative;
      48: invokevirtual #174                // Method scalaz/FreeT$.liftM:(Ljava/lang/Object;Lscalaz/Functor;)Lscalaz/FreeT;
      51: invokedynamic #185,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      56: astore        5
      58: dup
      59: ifnonnull     64
      62: aconst_null
      63: athrow
      64: astore        4
      66: new           #20                 // class scalaz/FreeT$Gosub
      69: dup
      70: aload         4
      72: aload         5
      74: invokespecial #189                // Method scalaz/FreeT$Gosub."<init>":(Lscalaz/FreeT;Lscala/Function1;)V
      77: areturn

  public scalaz.FreeTInstances0$$anon$13(scalaz.FreeTInstances0, scalaz.Applicative, scalaz.BindRec, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #113                // Field evidence$14$1:Lscalaz/Applicative;
       5: aload_0
       6: aload_3
       7: putfield      #124                // Field evidence$15$1:Lscalaz/BindRec;
      10: aload_0
      11: aload         4
      13: putfield      #130                // Field evidence$16$1:Lscalaz/Plus;
      16: aload_0
      17: invokespecial #201                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #205                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      24: aload_0
      25: invokestatic  #208                // InterfaceMethod scalaz/FreeTPlus.$init$:(Lscalaz/FreeTPlus;)V
      28: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #221,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
