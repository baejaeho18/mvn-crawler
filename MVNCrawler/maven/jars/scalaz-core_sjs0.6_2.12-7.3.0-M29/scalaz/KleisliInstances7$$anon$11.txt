Compiled from "Kleisli.scala"
public final class scalaz.KleisliInstances7$$anon$11 implements scalaz.KleisliPlusEmpty<F, A> {
  private final scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.PlusEmpty F0$10;

  public <B> scalaz.Kleisli<F, A, B> empty();
    Code:
       0: aload_0
       1: invokestatic  #43                 // InterfaceMethod scalaz/KleisliPlusEmpty.empty$:(Lscalaz/KleisliPlusEmpty;)Lscalaz/Kleisli;
       4: areturn

  public <B> scalaz.Kleisli<F, A, B> plus(scalaz.Kleisli<F, A, B>, scala.Function0<scalaz.Kleisli<F, A, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/KleisliPlus.plus$:(Lscalaz/KleisliPlus;Lscalaz/Kleisli;Lscala/Function0;)Lscalaz/Kleisli;
       6: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #66                 // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #72                 // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #78                 // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.Kleisli<F, A, A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<?>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.Kleisli<F, A, A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.Kleisli<F, A, A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #106                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.Kleisli<F, A, A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Kleisli<F, A, A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #111                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.Kleisli<F, A, A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusEmptySyntax<?> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #135                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #135                // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #143                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.PlusEmpty<F> F();
    Code:
       0: aload_0
       1: getfield      #150                // Field F0$10:Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #158                // class scalaz/Kleisli
       4: astore_3
       5: new           #158                // class scalaz/Kleisli
       8: dup
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokedynamic #180,  0            // InvokeDynamic #0:apply:(Lscalaz/KleisliPlus;Lscalaz/Kleisli;Lscala/Function0;)Lscala/Function1;
      17: invokespecial #184                // Method scalaz/Kleisli."<init>":(Lscala/Function1;)V
      20: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #188                // Method empty:()Lscalaz/Kleisli;
       4: areturn

  public scalaz.Plus F();
    Code:
       0: aload_0
       1: invokevirtual #190                // Method F:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.KleisliInstances7$$anon$11(scalaz.KleisliInstances7, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #150                // Field F0$10:Lscalaz/PlusEmpty;
       5: aload_0
       6: invokespecial #195                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #199                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      13: aload_0
      14: invokestatic  #202                // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      17: aload_0
      18: invokestatic  #205                // InterfaceMethod scalaz/KleisliPlus.$init$:(Lscalaz/KleisliPlus;)V
      21: aload_0
      22: invokestatic  #208                // InterfaceMethod scalaz/KleisliPlusEmpty.$init$:(Lscalaz/KleisliPlusEmpty;)V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #221,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
