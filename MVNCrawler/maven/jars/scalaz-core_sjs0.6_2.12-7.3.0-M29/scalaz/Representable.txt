Compiled from "Representable.scala"
public abstract class scalaz.Representable<F, X> {
  private final scalaz.Functor<F> F;

  public static scalaz.Representable<scala.Function0, scala.runtime.BoxedUnit> f0Representable();
    Code:
       0: getstatic     #26                 // Field scalaz/Representable$.MODULE$:Lscalaz/Representable$;
       3: invokevirtual #28                 // Method scalaz/Representable$.f0Representable:()Lscalaz/Representable;
       6: areturn

  public static <E> scalaz.Representable<?, scala.Tuple2<E, scala.runtime.BoxedUnit>> curryRepresentable();
    Code:
       0: getstatic     #26                 // Field scalaz/Representable$.MODULE$:Lscalaz/Representable$;
       3: invokevirtual #32                 // Method scalaz/Representable$.curryRepresentable:()Lscalaz/Representable;
       6: areturn

  public static <E> scalaz.Representable<?, E> readerRepresentable();
    Code:
       0: getstatic     #26                 // Field scalaz/Representable$.MODULE$:Lscalaz/Representable$;
       3: invokevirtual #36                 // Method scalaz/Representable$.readerRepresentable:()Lscalaz/Representable;
       6: areturn

  public scalaz.Functor<F> F();
    Code:
       0: aload_0
       1: getfield      #40                 // Field F:Lscalaz/Functor;
       4: areturn

  public abstract <A> F rep(scala.Function1<X, A>);

  public abstract <A> scala.Function1<X, A> unrep(F);

  public scalaz.Representable<F, X>.RepresentableLaw representableLaw();
    Code:
       0: new           #11                 // class scalaz/Representable$$anon$1
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method scalaz/Representable$$anon$1."<init>":(Lscalaz/Representable;)V
       8: areturn

  public scalaz.Representable(scalaz.Functor<F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field F:Lscalaz/Functor;
       5: aload_0
       6: invokespecial #61                 // Method java/lang/Object."<init>":()V
       9: return
}
