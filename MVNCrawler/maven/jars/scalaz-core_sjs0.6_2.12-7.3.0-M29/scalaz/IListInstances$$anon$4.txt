Compiled from "IList.scala"
public final class scalaz.IListInstances$$anon$4 implements scalaz.IListOrder<A> {
  private final scalaz.Order<A> A;

  private final scalaz.syntax.OrderSyntax<scalaz.IList<A>> orderSyntax;

  private final scalaz.syntax.EqualSyntax<scalaz.IList<A>> equalSyntax;

  public final scalaz.Ordering order(scalaz.IList<A>, scalaz.IList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #42                 // InterfaceMethod scalaz/IListOrder.order$:(Lscalaz/IListOrder;Lscalaz/IList;Lscalaz/IList;)Lscalaz/Ordering;
       6: areturn

  public final boolean equal(scalaz.IList<A>, scalaz.IList<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/IListEqual.equal$:(Lscalaz/IListEqual;Lscalaz/IList;Lscalaz/IList;)Z
       6: ireturn

  public scalaz.Ordering apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Order.apply$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/Ordering;
       6: areturn

  public boolean lessThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #71                 // InterfaceMethod scalaz/Order.lessThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lessThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // InterfaceMethod scalaz/Order.lessThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThan(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #79                 // InterfaceMethod scalaz/Order.greaterThan$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean greaterThanOrEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #83                 // InterfaceMethod scalaz/Order.greaterThanOrEqual$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/Order.max$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #93                 // InterfaceMethod scalaz/Order.min$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 sort(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #99                 // InterfaceMethod scalaz/Order.sort$:(Lscalaz/Order;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       6: areturn

  public <B> scalaz.Order<B> contramap(scala.Function1<B, scalaz.IList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // InterfaceMethod scalaz/Order.contramap$:(Lscalaz/Order;Lscala/Function1;)Lscalaz/Order;
       5: areturn

  public scala.math.Ordering<scalaz.IList<A>> toScalaOrdering();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod scalaz/Order.toScalaOrdering$:(Lscalaz/Order;)Lscala/math/Ordering;
       4: areturn

  public scalaz.Order<scalaz.IList<A>> reverseOrder();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod scalaz/Order.reverseOrder$:(Lscalaz/Order;)Lscalaz/Order;
       4: areturn

  public scalaz.Order<scalaz.IList<A>>.OrderLaw orderLaw();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod scalaz/Order.orderLaw$:(Lscalaz/Order;)Lscalaz/Order$OrderLaw;
       4: areturn

  public boolean equalIsNatural();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod scalaz/Equal.equalIsNatural$:(Lscalaz/Equal;)Z
       4: ireturn

  public scalaz.Equal<scalaz.IList<A>>.EqualLaw equalLaw();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod scalaz/Equal.equalLaw$:(Lscalaz/Equal;)Lscalaz/Equal$EqualLaw;
       4: areturn

  public scalaz.syntax.OrderSyntax<scalaz.IList<A>> orderSyntax();
    Code:
       0: aload_0
       1: getfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       4: areturn

  public void scalaz$Order$_setter_$orderSyntax_$eq(scalaz.syntax.OrderSyntax<scalaz.IList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #145                // Field orderSyntax:Lscalaz/syntax/OrderSyntax;
       5: return

  public scalaz.syntax.EqualSyntax<scalaz.IList<A>> equalSyntax();
    Code:
       0: aload_0
       1: getfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       4: areturn

  public void scalaz$Equal$_setter_$equalSyntax_$eq(scalaz.syntax.EqualSyntax<scalaz.IList<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field equalSyntax:Lscalaz/syntax/EqualSyntax;
       5: return

  public scalaz.Order<A> A();
    Code:
       0: aload_0
       1: getfield      #159                // Field A:Lscalaz/Order;
       4: areturn

  public scalaz.Equal contramap(scala.Function1);
    Code:
       0: new           #20                 // class scalaz/Order$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #164                // Method scalaz/Order$$anon$1."<init>":(Lscalaz/Order;Lscala/Function1;)V
       9: areturn

  public final boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #166                // class scalaz/IList
       5: aload_2
       6: checkcast     #166                // class scalaz/IList
       9: invokevirtual #168                // Method equal:(Lscalaz/IList;Lscalaz/IList;)Z
      12: ireturn

  public final scalaz.Ordering order(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #166                // class scalaz/IList
       5: aload_2
       6: checkcast     #166                // class scalaz/IList
       9: invokevirtual #170                // Method order:(Lscalaz/IList;Lscalaz/IList;)Lscalaz/Ordering;
      12: areturn

  public scalaz.Equal A();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method A:()Lscalaz/Order;
       4: areturn

  public scalaz.IListInstances$$anon$4(scalaz.IListInstances, scalaz.Order);
    Code:
       0: aload_0
       1: invokespecial #179                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #183                // InterfaceMethod scalaz/Equal.$init$:(Lscalaz/Equal;)V
       8: aload_0
       9: invokestatic  #186                // InterfaceMethod scalaz/Order.$init$:(Lscalaz/Order;)V
      12: aload_0
      13: invokestatic  #189                // InterfaceMethod scalaz/IListEqual.$init$:(Lscalaz/IListEqual;)V
      16: aload_0
      17: invokestatic  #192                // InterfaceMethod scalaz/IListOrder.$init$:(Lscalaz/IListOrder;)V
      20: aload_0
      21: aload_2
      22: putfield      #159                // Field A:Lscalaz/Order;
      25: return
}
