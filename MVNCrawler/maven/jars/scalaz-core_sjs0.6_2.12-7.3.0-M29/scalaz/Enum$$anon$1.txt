Compiled from "Enum.scala"
public final class scalaz.Enum$$anon$1 implements scalaz.Enum<F>.EnumLaw {
  private final scalaz.Enum $outer;

  public boolean succpred(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // InterfaceMethod scalaz/Enum$EnumLaw.succpred$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean predsucc(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // InterfaceMethod scalaz/Enum$EnumLaw.predsucc$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean minmaxpred();
    Code:
       0: aload_0
       1: invokestatic  #47                 // InterfaceMethod scalaz/Enum$EnumLaw.minmaxpred$:(Lscalaz/Enum$EnumLaw;)Z
       4: ireturn

  public boolean minmaxsucc();
    Code:
       0: aload_0
       1: invokestatic  #51                 // InterfaceMethod scalaz/Enum$EnumLaw.minmaxsucc$:(Lscalaz/Enum$EnumLaw;)Z
       4: ireturn

  public boolean succn(F, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #59                 // InterfaceMethod scalaz/Enum$EnumLaw.succn$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;I)Z
       6: ireturn

  public boolean predn(F, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #64                 // InterfaceMethod scalaz/Enum$EnumLaw.predn$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;I)Z
       6: ireturn

  public boolean succorder(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // InterfaceMethod scalaz/Enum$EnumLaw.succorder$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean predorder(F);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #72                 // InterfaceMethod scalaz/Enum$EnumLaw.predorder$:(Lscalaz/Enum$EnumLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean antisymmetric(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #80                 // InterfaceMethod scalaz/Order$OrderLaw.antisymmetric$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean transitiveOrder(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #87                 // InterfaceMethod scalaz/Order$OrderLaw.transitiveOrder$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public boolean orderAndEqualConsistent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #91                 // InterfaceMethod scalaz/Order$OrderLaw.orderAndEqualConsistent$:(Lscalaz/Order$OrderLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean commutative(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #96                 // InterfaceMethod scalaz/Equal$EqualLaw.commutative$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean reflexive(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #102                // InterfaceMethod scalaz/Equal$EqualLaw.reflexive$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;)Z
       5: ireturn

  public boolean transitive(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #107                // InterfaceMethod scalaz/Equal$EqualLaw.transitive$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  public boolean naturality(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #111                // InterfaceMethod scalaz/Equal$EqualLaw.naturality$:(Lscalaz/Equal$EqualLaw;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public scalaz.Enum scalaz$Enum$EnumLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Enum;
       4: areturn

  public scalaz.Order scalaz$Order$OrderLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Enum;
       4: areturn

  public scalaz.Equal scalaz$Equal$EqualLaw$$$outer();
    Code:
       0: aload_0
       1: getfield      #115                // Field $outer:Lscalaz/Enum;
       4: areturn

  public scalaz.Enum$$anon$1(scalaz.Enum<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #115                // Field $outer:Lscalaz/Enum;
      11: aload_0
      12: invokespecial #125                // Method java/lang/Object."<init>":()V
      15: aload_0
      16: invokestatic  #129                // InterfaceMethod scalaz/Equal$EqualLaw.$init$:(Lscalaz/Equal$EqualLaw;)V
      19: aload_0
      20: invokestatic  #132                // InterfaceMethod scalaz/Order$OrderLaw.$init$:(Lscalaz/Order$OrderLaw;)V
      23: aload_0
      24: invokestatic  #135                // InterfaceMethod scalaz/Enum$EnumLaw.$init$:(Lscalaz/Enum$EnumLaw;)V
      27: return
}
