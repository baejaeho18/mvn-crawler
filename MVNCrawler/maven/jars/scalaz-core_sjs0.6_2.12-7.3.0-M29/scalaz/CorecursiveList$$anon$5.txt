Compiled from "CorecursiveList.scala"
public final class scalaz.CorecursiveList$$anon$5 implements scalaz.MonadPlus<scalaz.CorecursiveList>, scalaz.Alt<scalaz.CorecursiveList>, scalaz.Foldable$FromFoldr<scalaz.CorecursiveList>, scalaz.IsEmpty<scalaz.CorecursiveList>, scalaz.Align<scalaz.CorecursiveList>, scalaz.Zip<scalaz.CorecursiveList> {
  private final scalaz.syntax.ZipSyntax<scalaz.CorecursiveList> zipSyntax;

  private final scalaz.syntax.AlignSyntax<scalaz.CorecursiveList> alignSyntax;

  private final scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList> isEmptySyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList> foldableSyntax;

  private final scalaz.syntax.AltSyntax<scalaz.CorecursiveList> altSyntax;

  private final scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList> invariantAltSyntax;

  private final scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList> monadPlusSyntax;

  private final scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList> applicativePlusSyntax;

  private final scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList> plusEmptySyntax;

  private final scalaz.syntax.PlusSyntax<scalaz.CorecursiveList> plusSyntax;

  private final scalaz.syntax.MonadSyntax<scalaz.CorecursiveList> monadSyntax;

  private final scalaz.syntax.BindSyntax<scalaz.CorecursiveList> bindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.CorecursiveList> applySyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList> invariantFunctorSyntax;

  public <G> scalaz.Zip<?> compose(scalaz.Functor<scalaz.CorecursiveList>, scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #186                // InterfaceMethod scalaz/Zip.compose$:(Lscalaz/Zip;Lscalaz/Functor;Lscalaz/Zip;)Lscalaz/Zip;
       6: areturn

  public <G> scalaz.Zip<?> product(scalaz.Zip<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // InterfaceMethod scalaz/Zip.product$:(Lscalaz/Zip;Lscalaz/Zip;)Lscalaz/Zip;
       5: areturn

  public java.lang.Object zipWith(scala.Function0, scala.Function0, scala.Function2, scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #207                // InterfaceMethod scalaz/Zip.zipWith$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Functor;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apzip(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #216                // InterfaceMethod scalaz/Zip.apzip$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object apzipPL(scala.Function0, scala.Function0, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #223                // InterfaceMethod scalaz/Zip.apzipPL$:(Lscalaz/Zip;Lscala/Function0;Lscala/Function0;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scalaz.Apply<scalaz.CorecursiveList> ap(scalaz.Functor<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #231                // InterfaceMethod scalaz/Zip.ap$:(Lscalaz/Zip;Lscalaz/Functor;)Lscalaz/Apply;
       5: areturn

  public scalaz.Zip<scalaz.CorecursiveList>.ZipLaw zipLaw();
    Code:
       0: aload_0
       1: invokestatic  #238                // InterfaceMethod scalaz/Zip.zipLaw$:(Lscalaz/Zip;)Lscalaz/Zip$ZipLaw;
       4: areturn

  public <G> scalaz.Align<?> product(scalaz.Align<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #243                // InterfaceMethod scalaz/Align.product$:(Lscalaz/Align;Lscalaz/Align;)Lscalaz/Align;
       5: areturn

  public java.lang.Object align(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #251                // InterfaceMethod scalaz/Align.align$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> padWith(scala.Function2<scala.Option<A>, scala.Option<B>, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // InterfaceMethod scalaz/Align.padWith$:(Lscalaz/Align;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<scala.Tuple2<scala.Option<A>, scala.Option<B>>>> pad();
    Code:
       0: aload_0
       1: invokestatic  #266                // InterfaceMethod scalaz/Align.pad$:(Lscalaz/Align;)Lscala/Function2;
       4: areturn

  public java.lang.Object merge(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #275                // InterfaceMethod scalaz/Align.merge$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object alignSwap(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #280                // InterfaceMethod scalaz/Align.alignSwap$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignA(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #284                // InterfaceMethod scalaz/Align.alignA$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignB(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #288                // InterfaceMethod scalaz/Align.alignB$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThis(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #292                // InterfaceMethod scalaz/Align.alignThis$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignThat(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #296                // InterfaceMethod scalaz/Align.alignThat$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object alignBoth(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #300                // InterfaceMethod scalaz/Align.alignBoth$:(Lscalaz/Align;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scalaz.Align<scalaz.CorecursiveList>.AlignLaw alignLaw();
    Code:
       0: aload_0
       1: invokestatic  #307                // InterfaceMethod scalaz/Align.alignLaw$:(Lscalaz/Align;)Lscalaz/Align$AlignLaw;
       4: areturn

  public scalaz.IsEmpty<scalaz.CorecursiveList>.IsEmptyLaw isEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #314                // InterfaceMethod scalaz/IsEmpty.isEmptyLaw$:(Lscalaz/IsEmpty;)Lscalaz/IsEmpty$IsEmptyLaw;
       4: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #320                // InterfaceMethod scalaz/Foldable$FromFoldr.foldMap$:(Lscalaz/Foldable$FromFoldr;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #327                // InterfaceMethod scalaz/Foldable.foldMap1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #332                // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #341                // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #359                // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #366                // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #374                // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #382                // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #389                // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #395                // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #402                // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #409                // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #415                // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #422                // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #429                // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #435                // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #441                // InterfaceMethod scalaz/Foldable.foldMapRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #447                // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #453                // InterfaceMethod scalaz/Foldable.foldr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #459                // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #463                // InterfaceMethod scalaz/Foldable.foldMapLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #467                // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #471                // InterfaceMethod scalaz/Foldable.foldl1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #477                // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #481                // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #488                // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #492                // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #496                // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #502                // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #506                // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #513                // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #521                // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #527                // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #533                // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #539                // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #545                // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #557                // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #564                // InterfaceMethod scalaz/Foldable.all$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #568                // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #572                // InterfaceMethod scalaz/Foldable.any$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Z
       6: ireturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #576                // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #582                // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #589                // InterfaceMethod scalaz/Foldable.maximum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #597                // InterfaceMethod scalaz/Foldable.maximumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #602                // InterfaceMethod scalaz/Foldable.maximumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #607                // InterfaceMethod scalaz/Foldable.minimum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #612                // InterfaceMethod scalaz/Foldable.minimumOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #617                // InterfaceMethod scalaz/Foldable.minimumBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #622                // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #627                // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #632                // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #637                // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #641                // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #645                // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #649                // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #655                // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #662                // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #666                // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #670                // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #676                // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #683                // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #690                // InterfaceMethod scalaz/Foldable.empty$:(Lscalaz/Foldable;Ljava/lang/Object;)Z
       5: ireturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #697                // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #704                // InterfaceMethod scalaz/Foldable.intercalate$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #710                // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #717                // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #724                // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #728                // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #734                // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #740                // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #745                // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #752                // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.CorecursiveList>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #760                // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object optional(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #766                // InterfaceMethod scalaz/Alt.optional$:(Lscalaz/Alt;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object altly1(scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #772                // InterfaceMethod scalaz/Alt.altly1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object altly2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #778                // InterfaceMethod scalaz/Alt.altly2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object altly3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #785                // InterfaceMethod scalaz/Alt.altly3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object altly4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #792                // InterfaceMethod scalaz/Alt.altly4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object either2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #797                // InterfaceMethod scalaz/Alt.either2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #803                // InterfaceMethod scalaz/Alt.altlying1$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object altlying2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #809                // InterfaceMethod scalaz/Alt.altlying2$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object altlying3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #815                // InterfaceMethod scalaz/Alt.altlying3$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object altlying4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #821                // InterfaceMethod scalaz/Alt.altlying4$:(Lscalaz/Alt;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #828                // InterfaceMethod scalaz/Alt.xcoproduct1$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xcoproduct2(scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #834                // InterfaceMethod scalaz/Alt.xcoproduct2$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xcoproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #840                // InterfaceMethod scalaz/Alt.xcoproduct3$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xcoproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #846                // InterfaceMethod scalaz/Alt.xcoproduct4$:(Lscalaz/Alt;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Alt<scalaz.CorecursiveList>.AltLaw altLaw();
    Code:
       0: aload_0
       1: invokestatic  #853                // InterfaceMethod scalaz/Alt.altLaw$:(Lscalaz/Alt;)Lscalaz/Alt$AltLaw;
       4: areturn

  public final java.lang.Object xcoderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #861                // InterfaceMethod scalaz/InvariantAlt.xcoderiving1$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xcoderiving2(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #867                // InterfaceMethod scalaz/InvariantAlt.xcoderiving2$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xcoderiving3(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #873                // InterfaceMethod scalaz/InvariantAlt.xcoderiving3$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xcoderiving4(scala.Function1, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #879                // InterfaceMethod scalaz/InvariantAlt.xcoderiving4$:(Lscalaz/InvariantAlt;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object unite(java.lang.Object, scalaz.Foldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #887                // InterfaceMethod scalaz/MonadPlus.unite$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Foldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object lefts(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #893                // InterfaceMethod scalaz/MonadPlus.lefts$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object rights(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #897                // InterfaceMethod scalaz/MonadPlus.rights$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 separate(java.lang.Object, scalaz.Bifoldable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #903                // InterfaceMethod scalaz/MonadPlus.separate$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Bifoldable;)Lscala/Tuple2;
       6: areturn

  public final java.lang.Object uniteU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #908                // InterfaceMethod scalaz/MonadPlus.uniteU$:(Lscalaz/MonadPlus;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.MonadPlus<?> product(scalaz.MonadPlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #913                // InterfaceMethod scalaz/MonadPlus.product$:(Lscalaz/MonadPlus;Lscalaz/MonadPlus;)Lscalaz/MonadPlus;
       5: areturn

  public scalaz.MonadPlus<scalaz.CorecursiveList>.MonadPlusLaw monadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #921                // InterfaceMethod scalaz/MonadPlus.monadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$MonadPlusLaw;
       4: areturn

  public scalaz.MonadPlus<scalaz.CorecursiveList>.StrongMonadPlusLaw strongMonadPlusLaw();
    Code:
       0: aload_0
       1: invokestatic  #928                // InterfaceMethod scalaz/MonadPlus.strongMonadPlusLaw$:(Lscalaz/MonadPlus;)Lscalaz/MonadPlus$StrongMonadPlusLaw;
       4: areturn

  public <G> scalaz.ApplicativePlus<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #935                // InterfaceMethod scalaz/ApplicativePlus.compose$:(Lscalaz/ApplicativePlus;Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public <G> scalaz.ApplicativePlus<?> product(scalaz.ApplicativePlus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #940                // InterfaceMethod scalaz/ApplicativePlus.product$:(Lscalaz/ApplicativePlus;Lscalaz/ApplicativePlus;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object unfoldlPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #947                // InterfaceMethod scalaz/PlusEmpty.unfoldlPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unfoldrPsum(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #951                // InterfaceMethod scalaz/PlusEmpty.unfoldrPsum$:(Lscalaz/PlusEmpty;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.PlusEmpty<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #956                // InterfaceMethod scalaz/PlusEmpty.compose$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       4: areturn

  public <G> scalaz.PlusEmpty<?> product(scalaz.PlusEmpty<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #960                // InterfaceMethod scalaz/PlusEmpty.product$:(Lscalaz/PlusEmpty;Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty;
       5: areturn

  public <A> scalaz.Monoid<scalaz.CorecursiveList<A>> monoid();
    Code:
       0: aload_0
       1: invokestatic  #967                // InterfaceMethod scalaz/PlusEmpty.monoid$:(Lscalaz/PlusEmpty;)Lscalaz/Monoid;
       4: areturn

  public scalaz.PlusEmpty<scalaz.CorecursiveList>.EmptyLaw plusEmptyLaw();
    Code:
       0: aload_0
       1: invokestatic  #974                // InterfaceMethod scalaz/PlusEmpty.plusEmptyLaw$:(Lscalaz/PlusEmpty;)Lscalaz/PlusEmpty$EmptyLaw;
       4: areturn

  public <S, A> scalaz.Maybe<scalaz.CorecursiveList<A>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scalaz.CorecursiveList<A>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #981                // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scalaz.CorecursiveList<A>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.CorecursiveList<A>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #986                // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #991                // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scalaz.CorecursiveList<A>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #999                // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<scalaz.CorecursiveList>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #1006               // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public java.lang.Object whileM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1013               // InterfaceMethod scalaz/Monad.whileM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object whileM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1019               // InterfaceMethod scalaz/Monad.whileM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object untilM(java.lang.Object, scala.Function0, scalaz.MonadPlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1024               // InterfaceMethod scalaz/Monad.untilM$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;Lscalaz/MonadPlus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object untilM_(java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1028               // InterfaceMethod scalaz/Monad.untilM_$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateWhile(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1033               // InterfaceMethod scalaz/Monad.iterateWhile$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object iterateUntil(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1037               // InterfaceMethod scalaz/Monad.iterateUntil$:(Lscalaz/Monad;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Monad<?> product(scalaz.Monad<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1042               // InterfaceMethod scalaz/Monad.product$:(Lscalaz/Monad;Lscalaz/Monad;)Lscalaz/Monad;
       5: areturn

  public scalaz.Monad<scalaz.CorecursiveList>.MonadLaw monadLaw();
    Code:
       0: aload_0
       1: invokestatic  #1049               // InterfaceMethod scalaz/Monad.monadLaw$:(Lscalaz/Monad;)Lscalaz/Monad$MonadLaw;
       4: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1055               // InterfaceMethod scalaz/Bind.apply2$:(Lscalaz/Bind;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object join(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1060               // InterfaceMethod scalaz/Bind.join$:(Lscalaz/Bind;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object ifM(java.lang.Object, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1068               // InterfaceMethod scalaz/Bind.ifM$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object mproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1073               // InterfaceMethod scalaz/Bind.mproduct$:(Lscalaz/Bind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Bind<?> product(scalaz.Bind<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1078               // InterfaceMethod scalaz/Bind.product$:(Lscalaz/Bind;Lscalaz/Bind;)Lscalaz/Bind;
       5: areturn

  public scalaz.Bind<scalaz.CorecursiveList>.BindLaw bindLaw();
    Code:
       0: aload_0
       1: invokestatic  #1086               // InterfaceMethod scalaz/Bind.bindLaw$:(Lscalaz/Bind;)Lscalaz/Bind$BindLaw;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1092               // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1098               // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1106               // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #1113               // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1117               // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1122               // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1128               // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1134               // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1141               // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1149               // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1153               // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1160               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1165               // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1172               // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #1177               // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1181               // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.CorecursiveList> flip();
    Code:
       0: aload_0
       1: invokestatic  #1186               // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1194               // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.CorecursiveList>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #1201               // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1208               // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1213               // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1219               // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1225               // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1231               // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1237               // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1244               // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1249               // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scalaz.CorecursiveList<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.CorecursiveList<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1257               // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1263               // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1266               // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> apF(scala.Function0<scalaz.CorecursiveList<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1273               // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1279               // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1286               // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1293               // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1300               // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1307               // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1314               // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1321               // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1327               // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1333               // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #1339               // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1346               // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1353               // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1360               // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #1368               // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #1376               // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #1384               // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #1392               // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1398               // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1404               // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1410               // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1416               // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1421               // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1427               // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1433               // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1439               // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1445               // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1452               // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1466               // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1473               // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1480               // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1487               // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1494               // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1501               // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<K>, scalaz.CorecursiveList<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1508               // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>, scalaz.CorecursiveList<D>, scalaz.CorecursiveList<E>, scalaz.CorecursiveList<FF>, scalaz.CorecursiveList<G>, scalaz.CorecursiveList<H>, scalaz.CorecursiveList<I>, scalaz.CorecursiveList<J>, scalaz.CorecursiveList<K>, scalaz.CorecursiveList<L>, scalaz.CorecursiveList<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1515               // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1519               // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1523               // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #1528               // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1535               // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.CorecursiveList>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #1542               // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1548               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1553               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1560               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1565               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1569               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1573               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1578               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1582               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1586               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1592               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1598               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1605               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1611               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1614               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1621               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.CorecursiveList>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1629               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1636               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1644               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.CorecursiveList>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1652               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ZipSyntax<scalaz.CorecursiveList> zipSyntax();
    Code:
       0: aload_0
       1: getfield      #1656               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       4: areturn

  public void scalaz$Zip$_setter_$zipSyntax_$eq(scalaz.syntax.ZipSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1656               // Field zipSyntax:Lscalaz/syntax/ZipSyntax;
       5: return

  public scalaz.syntax.AlignSyntax<scalaz.CorecursiveList> alignSyntax();
    Code:
       0: aload_0
       1: getfield      #1664               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       4: areturn

  public void scalaz$Align$_setter_$alignSyntax_$eq(scalaz.syntax.AlignSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1664               // Field alignSyntax:Lscalaz/syntax/AlignSyntax;
       5: return

  public scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList> isEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1671               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       4: areturn

  public void scalaz$IsEmpty$_setter_$isEmptySyntax_$eq(scalaz.syntax.IsEmptySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1671               // Field isEmptySyntax:Lscalaz/syntax/IsEmptySyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1678               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1678               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.AltSyntax<scalaz.CorecursiveList> altSyntax();
    Code:
       0: aload_0
       1: getfield      #1685               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       4: areturn

  public void scalaz$Alt$_setter_$altSyntax_$eq(scalaz.syntax.AltSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1685               // Field altSyntax:Lscalaz/syntax/AltSyntax;
       5: return

  public scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList> invariantAltSyntax();
    Code:
       0: aload_0
       1: getfield      #1692               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       4: areturn

  public void scalaz$InvariantAlt$_setter_$invariantAltSyntax_$eq(scalaz.syntax.InvariantAltSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1692               // Field invariantAltSyntax:Lscalaz/syntax/InvariantAltSyntax;
       5: return

  public scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList> monadPlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1699               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       4: areturn

  public void scalaz$MonadPlus$_setter_$monadPlusSyntax_$eq(scalaz.syntax.MonadPlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1699               // Field monadPlusSyntax:Lscalaz/syntax/MonadPlusSyntax;
       5: return

  public scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList> applicativePlusSyntax();
    Code:
       0: aload_0
       1: getfield      #1706               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       4: areturn

  public void scalaz$ApplicativePlus$_setter_$applicativePlusSyntax_$eq(scalaz.syntax.ApplicativePlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1706               // Field applicativePlusSyntax:Lscalaz/syntax/ApplicativePlusSyntax;
       5: return

  public scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList> plusEmptySyntax();
    Code:
       0: aload_0
       1: getfield      #1713               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       4: areturn

  public void scalaz$PlusEmpty$_setter_$plusEmptySyntax_$eq(scalaz.syntax.PlusEmptySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1713               // Field plusEmptySyntax:Lscalaz/syntax/PlusEmptySyntax;
       5: return

  public scalaz.syntax.PlusSyntax<scalaz.CorecursiveList> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #1720               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1720               // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.syntax.MonadSyntax<scalaz.CorecursiveList> monadSyntax();
    Code:
       0: aload_0
       1: getfield      #1727               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       4: areturn

  public void scalaz$Monad$_setter_$monadSyntax_$eq(scalaz.syntax.MonadSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1727               // Field monadSyntax:Lscalaz/syntax/MonadSyntax;
       5: return

  public scalaz.syntax.BindSyntax<scalaz.CorecursiveList> bindSyntax();
    Code:
       0: aload_0
       1: getfield      #1734               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       4: areturn

  public void scalaz$Bind$_setter_$bindSyntax_$eq(scalaz.syntax.BindSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1734               // Field bindSyntax:Lscalaz/syntax/BindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1741               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1741               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1748               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1748               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.CorecursiveList> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1755               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1755               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1762               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1762               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1769               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.CorecursiveList>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1769               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A, B> scalaz.CorecursiveList<B> map(scalaz.CorecursiveList<A>, scala.Function1<A, B>);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: aload_1
       4: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      11: aload_2
      12: invokedynamic #1808,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      17: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      22: invokevirtual #1816               // Method scalaz/CorecursiveList$.apply:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/CorecursiveList;
      25: areturn

  public <A, B> scalaz.CorecursiveList<B> ap(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #66                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: new           #1827               // class scala/Tuple2
      27: dup
      28: aload_3
      29: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      32: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      35: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      38: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload         4
      43: aload_3
      44: invokedynamic #1848,  0           // InvokeDynamic #1:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function2;
      49: invokeinterface #1853,  1         // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
      54: invokevirtual #1816               // Method scalaz/CorecursiveList$.apply:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/CorecursiveList;
      57: areturn

  public <A, B> scalaz.CorecursiveList<B> bind(scalaz.CorecursiveList<A>, scala.Function1<A, scalaz.CorecursiveList<B>>);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: new           #1827               // class scala/Tuple2
       6: dup
       7: aload_1
       8: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      11: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      14: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      17: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      20: aload_1
      21: aload_2
      22: invokedynamic #1865,  0           // InvokeDynamic #2:apply:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      27: astore        4
      29: astore_3
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      38: dup
      39: aload_3
      40: aload         4
      42: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      45: areturn

  public <A> scalaz.CorecursiveList<A> filter(scalaz.CorecursiveList<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: aload_1
       4: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #1882,  0           // InvokeDynamic #3:apply:(Lscalaz/CorecursiveList$$anon$5;Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      15: astore        4
      17: astore_3
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      26: dup
      27: aload_3
      28: aload         4
      30: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      33: areturn

  public <A> scalaz.CorecursiveList<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: iconst_0
       4: invokestatic  #1891               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: aload_1
       8: invokedynamic #1898,  0           // InvokeDynamic #4:apply:(Lscala/Function0;)Lscala/Function1;
      13: astore_3
      14: astore_2
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      23: dup
      24: aload_2
      25: aload_3
      26: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      29: areturn

  public <A, B> B foldRight(scalaz.CorecursiveList<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       4: astore        4
       6: aload_1
       7: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      10: aload         4
      12: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #95                 // class scalaz/Maybe
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore        5
      28: aload         5
      30: instanceof    #101                // class scalaz/Maybe$Just
      33: ifeq          62
      36: aload         5
      38: checkcast     #101                // class scalaz/Maybe$Just
      41: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: checkcast     #1827               // class scala/Tuple2
      47: astore        7
      49: aload_3
      50: aload_1
      51: aload_2
      52: aload         7
      54: invokestatic  #1912               // Method $anonfun$foldRight$1:(Lscala/Function2;Lscalaz/CorecursiveList;Lscala/Function0;Lscala/Tuple2;)Ljava/lang/Object;
      57: astore        6
      59: goto          91
      62: aload         5
      64: instanceof    #93                 // class scalaz/Maybe$Empty
      67: ifeq          81
      70: aload_2
      71: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      76: astore        6
      78: goto          91
      81: new           #1914               // class scala/MatchError
      84: dup
      85: aload         5
      87: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload         6
      93: areturn

  public <A, B> B foldLeft(scalaz.CorecursiveList<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       5: astore        5
       7: astore        4
       9: aload_1
      10: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      13: aload         5
      15: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #95                 // class scalaz/Maybe
      23: astore        6
      25: aload         6
      27: instanceof    #93                 // class scalaz/Maybe$Empty
      30: ifne          102
      33: aload         6
      35: instanceof    #101                // class scalaz/Maybe$Just
      38: ifeq          92
      41: aload         6
      43: checkcast     #101                // class scalaz/Maybe$Just
      46: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      49: checkcast     #1827               // class scala/Tuple2
      52: astore        7
      54: aload         7
      56: ifnull        92
      59: aload         7
      61: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      64: astore        8
      66: aload         7
      68: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      71: astore        9
      73: aload_3
      74: aload         4
      76: aload         9
      78: invokeinterface #1931,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: aload         8
      85: astore        5
      87: astore        4
      89: goto          9
      92: new           #1914               // class scala/MatchError
      95: dup
      96: aload         6
      98: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow
     102: aload         4
     104: areturn

  public <A> scalaz.CorecursiveList<A> empty();
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: getstatic     #1942               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       6: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       9: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      12: invokedynamic #1952,  0           // InvokeDynamic #5:apply:(Lscalaz/Maybe;)Lscala/Function1;
      17: astore_2
      18: astore_1
      19: ifnonnull     24
      22: aconst_null
      23: athrow
      24: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      27: dup
      28: aload_1
      29: aload_2
      30: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      33: areturn

  public <A> scalaz.CorecursiveList<A> plus(scalaz.CorecursiveList<A>, scala.Function0<scalaz.CorecursiveList<A>>);
    Code:
       0: getstatic     #1962               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: ifnonnull     8
       6: aconst_null
       7: athrow
       8: new           #1964               // class scalaz/Need
      11: dup
      12: aload_2
      13: invokespecial #1967               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      16: astore_3
      17: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      20: getstatic     #1972               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      23: aload_1
      24: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      27: invokevirtual #1975               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      30: aload_1
      31: aload_3
      32: invokedynamic #1985,  0           // InvokeDynamic #6:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      37: astore        5
      39: astore        4
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      49: dup
      50: aload         4
      52: aload         5
      54: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      57: areturn

  public <A> scalaz.CorecursiveList<A> alt(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<A>>);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: getstatic     #1962               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: new           #1964               // class scalaz/Need
      21: dup
      22: aload_2
      23: invokespecial #1967               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      26: astore        4
      28: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      31: getstatic     #1972               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      34: aload_3
      35: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      38: invokevirtual #1975               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      41: aload_3
      42: aload         4
      44: invokedynamic #1985,  0           // InvokeDynamic #6:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      49: astore        6
      51: astore        5
      53: ifnonnull     58
      56: aconst_null
      57: athrow
      58: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      61: dup
      62: aload         5
      64: aload         6
      66: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      69: areturn

  public <A> boolean isEmpty(scalaz.CorecursiveList<A>);
    Code:
       0: aload_1
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       8: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #95                 // class scalaz/Maybe
      16: invokevirtual #1999               // Method scalaz/Maybe.isEmpty:()Z
      19: ireturn

  public <A, B, C> scala.Function2<scalaz.CorecursiveList<A>, scalaz.CorecursiveList<B>, scalaz.CorecursiveList<C>> alignWith(scala.Function1<scalaz.$bslash$amp$div<A, B>, C>);
    Code:
       0: aload_1
       1: invokedynamic #2011,  0           // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function2;
       6: areturn

  public <A, B> scalaz.CorecursiveList<scala.Tuple2<A, B>> zip(scala.Function0<scalaz.CorecursiveList<A>>, scala.Function0<scalaz.CorecursiveList<B>>);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #66                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: new           #1827               // class scala/Tuple2
      27: dup
      28: aload_3
      29: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      32: aload         4
      34: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      37: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_3
      41: aload         4
      43: invokedynamic #2021,  0           // InvokeDynamic #8:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function1;
      48: astore        6
      50: astore        5
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      60: dup
      61: aload         5
      63: aload         6
      65: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      68: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2026               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public scalaz.Plus compose();
    Code:
       0: aload_0
       1: invokevirtual #2029               // Method compose:()Lscalaz/PlusEmpty;
       4: areturn

  public scalaz.Applicative compose(scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2031               // Method compose:(Lscalaz/Applicative;)Lscalaz/ApplicativePlus;
       5: areturn

  public java.lang.Object zip(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #66                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: new           #1827               // class scala/Tuple2
      27: dup
      28: aload_3
      29: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      32: aload         4
      34: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      37: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_3
      41: aload         4
      43: invokedynamic #2021,  0           // InvokeDynamic #8:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function1;
      48: astore        6
      50: astore        5
      52: ifnonnull     57
      55: aconst_null
      56: athrow
      57: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      60: dup
      61: aload         5
      63: aload         6
      65: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      68: areturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #66                 // class scalaz/CorecursiveList
       5: invokevirtual #2037               // Method isEmpty:(Lscalaz/CorecursiveList;)Z
       8: ireturn

  public java.lang.Object alt(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: getstatic     #1962               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
      13: ifnonnull     18
      16: aconst_null
      17: athrow
      18: new           #1964               // class scalaz/Need
      21: dup
      22: aload_2
      23: invokespecial #1967               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      26: astore        4
      28: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      31: getstatic     #1972               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      34: aload_3
      35: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      38: invokevirtual #1975               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      41: aload_3
      42: aload         4
      44: invokedynamic #1985,  0           // InvokeDynamic #6:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      49: astore        6
      51: astore        5
      53: ifnonnull     58
      56: aconst_null
      57: athrow
      58: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      61: dup
      62: aload         5
      64: aload         6
      66: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      69: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore_3
       5: getstatic     #1962               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: new           #1964               // class scalaz/Need
      16: dup
      17: aload_2
      18: invokespecial #1967               // Method scalaz/Need."<init>":(Lscala/Function0;)V
      21: astore        4
      23: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      26: getstatic     #1972               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      29: aload_3
      30: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      33: invokevirtual #1975               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      36: aload_3
      37: aload         4
      39: invokedynamic #1985,  0           // InvokeDynamic #6:apply:(Lscalaz/CorecursiveList;Lscalaz/Need;)Lscala/Function1;
      44: astore        6
      46: astore        5
      48: ifnonnull     53
      51: aconst_null
      52: athrow
      53: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      56: dup
      57: aload         5
      59: aload         6
      61: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      64: areturn

  public java.lang.Object empty();
    Code:
       0: aload_0
       1: invokevirtual #2042               // Method empty:()Lscalaz/CorecursiveList;
       4: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore        4
       6: aload_2
       7: aload         4
       9: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      12: astore        6
      14: astore        5
      16: aload         4
      18: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      21: aload         6
      23: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #95                 // class scalaz/Maybe
      31: astore        7
      33: aload         7
      35: instanceof    #93                 // class scalaz/Maybe$Empty
      38: ifne          110
      41: aload         7
      43: instanceof    #101                // class scalaz/Maybe$Just
      46: ifeq          100
      49: aload         7
      51: checkcast     #101                // class scalaz/Maybe$Just
      54: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      57: checkcast     #1827               // class scala/Tuple2
      60: astore        8
      62: aload         8
      64: ifnull        100
      67: aload         8
      69: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      72: astore        9
      74: aload         8
      76: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      79: astore        10
      81: aload_3
      82: aload         5
      84: aload         10
      86: invokeinterface #1931,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: aload         9
      93: astore        6
      95: astore        5
      97: goto          16
     100: new           #1914               // class scala/MatchError
     103: dup
     104: aload         7
     106: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     109: athrow
     110: aload         5
     112: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore        4
       6: aload         4
       8: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      11: astore        5
      13: aload         4
      15: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      18: aload         5
      20: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #95                 // class scalaz/Maybe
      28: dup
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: astore        6
      36: aload         6
      38: instanceof    #101                // class scalaz/Maybe$Just
      41: ifeq          71
      44: aload         6
      46: checkcast     #101                // class scalaz/Maybe$Just
      49: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      52: checkcast     #1827               // class scala/Tuple2
      55: astore        8
      57: aload_3
      58: aload         4
      60: aload_2
      61: aload         8
      63: invokestatic  #1912               // Method $anonfun$foldRight$1:(Lscala/Function2;Lscalaz/CorecursiveList;Lscala/Function0;Lscala/Tuple2;)Ljava/lang/Object;
      66: astore        7
      68: goto          100
      71: aload         6
      73: instanceof    #93                 // class scalaz/Maybe$Empty
      76: ifeq          90
      79: aload_2
      80: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      85: astore        7
      87: goto          100
      90: new           #1914               // class scala/MatchError
      93: dup
      94: aload         6
      96: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      99: athrow
     100: aload         7
     102: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: iconst_0
       4: invokestatic  #1891               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: aload_1
       8: invokedynamic #1898,  0           // InvokeDynamic #4:apply:(Lscala/Function0;)Lscala/Function1;
      13: astore_3
      14: astore_2
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      23: dup
      24: aload_2
      25: aload_3
      26: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      29: areturn

  public java.lang.Object filter(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore_3
       5: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       8: aload_3
       9: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      12: aload_0
      13: aload_3
      14: aload_2
      15: invokedynamic #1882,  0           // InvokeDynamic #3:apply:(Lscalaz/CorecursiveList$$anon$5;Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      20: astore        5
      22: astore        4
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      32: dup
      33: aload         4
      35: aload         5
      37: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      40: areturn

  public java.lang.Object bind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore_3
       5: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       8: new           #1827               // class scala/Tuple2
      11: dup
      12: aload_3
      13: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      16: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      19: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      22: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      25: aload_3
      26: aload_2
      27: invokedynamic #1865,  0           // InvokeDynamic #2:apply:(Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      32: astore        5
      34: astore        4
      36: ifnonnull     41
      39: aconst_null
      40: athrow
      41: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      44: dup
      45: aload         4
      47: aload         5
      49: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      52: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #66                 // class scalaz/CorecursiveList
       9: astore_3
      10: aload_2
      11: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      16: checkcast     #66                 // class scalaz/CorecursiveList
      19: astore        4
      21: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      24: new           #1827               // class scala/Tuple2
      27: dup
      28: aload_3
      29: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      32: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      35: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      38: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload         4
      43: aload_3
      44: invokedynamic #1848,  0           // InvokeDynamic #1:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscala/Function2;
      49: invokeinterface #1853,  1         // InterfaceMethod scala/Function2.tupled:()Lscala/Function1;
      54: invokevirtual #1816               // Method scalaz/CorecursiveList$.apply:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/CorecursiveList;
      57: areturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #66                 // class scalaz/CorecursiveList
       4: astore_3
       5: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       8: aload_3
       9: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      12: aload_3
      13: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      16: aload_2
      17: invokedynamic #1808,  0           // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
      22: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      27: invokevirtual #1816               // Method scalaz/CorecursiveList$.apply:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/CorecursiveList;
      30: areturn

  public static final scala.Tuple2 $anonfun$map$2(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1827               // class scala/Tuple2
      18: dup
      19: aload_3
      20: aload_0
      21: aload         4
      23: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore_2
      32: goto          44
      35: new           #1914               // class scala/MatchError
      38: dup
      39: aload_1
      40: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      43: athrow
      44: aload_2
      45: areturn

  public static final scalaz.Maybe $anonfun$map$1(scala.Function1, scalaz.Maybe);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #2075,  0           // InvokeDynamic #9:apply:(Lscala/Function1;)Lscala/Function1;
       7: astore_2
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload_2
      14: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
      19: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      24: astore_3
      25: aload_1
      26: instanceof    #101                // class scalaz/Maybe$Just
      29: ifeq          54
      32: aload_1
      33: checkcast     #101                // class scalaz/Maybe$Just
      36: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      39: astore        5
      41: aload_3
      42: aload         5
      44: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore        4
      51: goto          78
      54: aload_1
      55: instanceof    #93                 // class scalaz/Maybe$Empty
      58: ifeq          69
      61: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      64: astore        4
      66: goto          78
      69: new           #1914               // class scala/MatchError
      72: dup
      73: aload_1
      74: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      77: athrow
      78: aload         4
      80: checkcast     #95                 // class scalaz/Maybe
      83: areturn

  public static final scalaz.Maybe $anonfun$ap$1(java.lang.Object, scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_0
       1: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       4: aload_3
       5: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       8: aload_1
       9: aload_2
      10: invokestatic  #2103               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
      13: areturn

  public static final scala.Tuple2 $anonfun$ap$2(scalaz.Maybe, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        45
       4: aload_2
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: new           #1827               // class scala/Tuple2
      19: dup
      20: new           #1827               // class scala/Tuple2
      23: dup
      24: aload         4
      26: aload_0
      27: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_1
      31: aload         5
      33: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      41: astore_3
      42: goto          54
      45: new           #1914               // class scala/MatchError
      48: dup
      49: aload_2
      50: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      53: athrow
      54: aload_3
      55: areturn

  public static final scalaz.Maybe $anonfun$ap$4(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
       4: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       7: aload_2
       8: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      11: aload_1
      12: aload_0
      13: invokestatic  #2103               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
      16: areturn

  public static final scalaz.Maybe $anonfun$ap$3(scalaz.CorecursiveList, java.lang.Object, scalaz.CorecursiveList);
    Code:
       0: aload_0
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: astore_3
      20: aload_3
      21: instanceof    #101                // class scalaz/Maybe$Just
      24: ifeq          51
      27: aload_3
      28: checkcast     #101                // class scalaz/Maybe$Just
      31: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      34: checkcast     #1827               // class scala/Tuple2
      37: astore        5
      39: aload_2
      40: aload_0
      41: aload         5
      43: invokestatic  #2113               // Method $anonfun$ap$4:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      46: astore        4
      48: goto          75
      51: aload_3
      52: instanceof    #93                 // class scalaz/Maybe$Empty
      55: ifeq          66
      58: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      61: astore        4
      63: goto          75
      66: new           #1914               // class scala/MatchError
      69: dup
      70: aload_3
      71: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      74: athrow
      75: aload         4
      77: areturn

  private static final scalaz.Maybe bstep$1(java.lang.Object, scalaz.Maybe, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: aload_1
       1: instanceof    #93                 // class scalaz/Maybe$Empty
       4: ifeq          98
       7: aload_2
       8: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      11: aload_2
      12: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      15: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #95                 // class scalaz/Maybe
      23: dup
      24: ifnonnull     29
      27: aconst_null
      28: athrow
      29: astore        8
      31: aload         8
      33: instanceof    #101                // class scalaz/Maybe$Just
      36: ifeq          65
      39: aload         8
      41: checkcast     #101                // class scalaz/Maybe$Just
      44: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      47: checkcast     #1827               // class scala/Tuple2
      50: astore        18
      52: aload_0
      53: aload_2
      54: aload_3
      55: aload         18
      57: invokestatic  #2120               // Method $anonfun$ap$1:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      60: astore        9
      62: goto          91
      65: aload         8
      67: instanceof    #93                 // class scalaz/Maybe$Empty
      70: ifeq          81
      73: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      76: astore        9
      78: goto          91
      81: new           #1914               // class scala/MatchError
      84: dup
      85: aload         8
      87: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload         9
      93: astore        4
      95: goto          332
      98: aload_1
      99: instanceof    #101                // class scalaz/Maybe$Just
     102: ifeq          323
     105: aload_1
     106: checkcast     #101                // class scalaz/Maybe$Just
     109: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     112: checkcast     #1827               // class scala/Tuple2
     115: astore        5
     117: aload         5
     119: ifnull        323
     122: aload         5
     124: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
     127: astore        6
     129: aload         5
     131: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
     134: checkcast     #1810               // class scala/Function1
     137: astore        7
     139: aload_3
     140: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     143: aload_0
     144: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #95                 // class scalaz/Maybe
     152: aload_1
     153: aload         7
     155: invokedynamic #2126,  0           // InvokeDynamic #11:apply:(Lscalaz/Maybe;Lscala/Function1;)Lscala/Function1;
     160: astore        11
     162: dup
     163: ifnonnull     168
     166: aconst_null
     167: athrow
     168: astore        10
     170: aload         11
     172: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     177: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     182: astore        12
     184: aload         10
     186: instanceof    #101                // class scalaz/Maybe$Just
     189: ifeq          216
     192: aload         10
     194: checkcast     #101                // class scalaz/Maybe$Just
     197: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     200: astore        14
     202: aload         12
     204: aload         14
     206: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     211: astore        13
     213: goto          242
     216: aload         10
     218: instanceof    #93                 // class scalaz/Maybe$Empty
     221: ifeq          232
     224: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     227: astore        13
     229: goto          242
     232: new           #1914               // class scala/MatchError
     235: dup
     236: aload         10
     238: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     241: athrow
     242: aload         13
     244: checkcast     #95                 // class scalaz/Maybe
     247: astore        15
     249: aload         15
     251: ifnonnull     256
     254: aconst_null
     255: athrow
     256: aload         15
     258: instanceof    #101                // class scalaz/Maybe$Just
     261: ifeq          286
     264: aload         15
     266: checkcast     #101                // class scalaz/Maybe$Just
     269: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     272: astore        17
     274: aload         15
     276: aload         17
     278: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     281: astore        16
     283: goto          316
     286: aload         15
     288: instanceof    #93                 // class scalaz/Maybe$Empty
     291: ifeq          306
     294: aload_2
     295: aload         6
     297: aload_3
     298: invokestatic  #2132               // Method $anonfun$ap$3:(Lscalaz/CorecursiveList;Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
     301: astore        16
     303: goto          316
     306: new           #1914               // class scala/MatchError
     309: dup
     310: aload         15
     312: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     315: athrow
     316: aload         16
     318: astore        4
     320: goto          332
     323: new           #1914               // class scala/MatchError
     326: dup
     327: aload_1
     328: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     331: athrow
     332: aload         4
     334: areturn

  public static final scalaz.Maybe $anonfun$ap$5(scalaz.CorecursiveList, scalaz.CorecursiveList, java.lang.Object, scalaz.Maybe);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: aload_1
       4: invokestatic  #2103               // Method bstep$1:(Ljava/lang/Object;Lscalaz/Maybe;Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;)Lscalaz/Maybe;
       7: areturn

  public static final scalaz.Maybe $anonfun$bind$1(scala.Function1, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        345
       4: aload_2
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      18: aload_0
      19: aload         4
      21: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      29: astore        5
      31: aload         5
      33: instanceof    #93                 // class scalaz/Maybe$Empty
      36: ifeq          126
      39: aload_1
      40: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      43: aload_3
      44: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #95                 // class scalaz/Maybe
      52: dup
      53: ifnonnull     58
      56: aconst_null
      57: athrow
      58: astore        8
      60: aload         8
      62: instanceof    #101                // class scalaz/Maybe$Just
      65: ifeq          93
      68: aload         8
      70: checkcast     #101                // class scalaz/Maybe$Just
      73: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      76: checkcast     #1827               // class scala/Tuple2
      79: astore        18
      81: aload_0
      82: aload_1
      83: aload         18
      85: invokestatic  #2141               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      88: astore        9
      90: goto          119
      93: aload         8
      95: instanceof    #93                 // class scalaz/Maybe$Empty
      98: ifeq          109
     101: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
     104: astore        9
     106: goto          119
     109: new           #1914               // class scala/MatchError
     112: dup
     113: aload         8
     115: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     118: athrow
     119: aload         9
     121: astore        6
     123: goto          354
     126: aload         5
     128: instanceof    #101                // class scalaz/Maybe$Just
     131: ifeq          335
     134: aload         5
     136: checkcast     #101                // class scalaz/Maybe$Just
     139: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     142: checkcast     #66                 // class scalaz/CorecursiveList
     145: astore        7
     147: aload         7
     149: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     152: aload         7
     154: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     157: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #95                 // class scalaz/Maybe
     165: aload_3
     166: aload         7
     168: invokedynamic #2149,  0           // InvokeDynamic #12:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     173: astore        11
     175: dup
     176: ifnonnull     181
     179: aconst_null
     180: athrow
     181: astore        10
     183: aload         11
     185: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     190: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     195: astore        12
     197: aload         10
     199: instanceof    #101                // class scalaz/Maybe$Just
     202: ifeq          229
     205: aload         10
     207: checkcast     #101                // class scalaz/Maybe$Just
     210: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     213: astore        14
     215: aload         12
     217: aload         14
     219: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     224: astore        13
     226: goto          255
     229: aload         10
     231: instanceof    #93                 // class scalaz/Maybe$Empty
     234: ifeq          245
     237: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     240: astore        13
     242: goto          255
     245: new           #1914               // class scala/MatchError
     248: dup
     249: aload         10
     251: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     254: athrow
     255: aload         13
     257: checkcast     #95                 // class scalaz/Maybe
     260: astore        15
     262: aload         15
     264: ifnonnull     269
     267: aconst_null
     268: athrow
     269: aload         15
     271: instanceof    #101                // class scalaz/Maybe$Just
     274: ifeq          299
     277: aload         15
     279: checkcast     #101                // class scalaz/Maybe$Just
     282: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     285: astore        17
     287: aload         15
     289: aload         17
     291: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     294: astore        16
     296: goto          328
     299: aload         15
     301: instanceof    #93                 // class scalaz/Maybe$Empty
     304: ifeq          318
     307: aload_3
     308: aload_1
     309: aload_0
     310: invokestatic  #2153               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     313: astore        16
     315: goto          328
     318: new           #1914               // class scala/MatchError
     321: dup
     322: aload         15
     324: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     327: athrow
     328: aload         16
     330: astore        6
     332: goto          354
     335: new           #1914               // class scala/MatchError
     338: dup
     339: aload         5
     341: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     344: athrow
     345: new           #1914               // class scala/MatchError
     348: dup
     349: aload_2
     350: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     353: athrow
     354: aload         6
     356: areturn

  public static final scala.Tuple2 $anonfun$bind$2(java.lang.Object, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        55
       4: aload_2
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: new           #1827               // class scala/Tuple2
      19: dup
      20: new           #1827               // class scala/Tuple2
      23: dup
      24: aload_0
      25: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      28: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
      31: aload         4
      33: aload_1
      34: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      37: invokevirtual #1816               // Method scalaz/CorecursiveList$.apply:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/CorecursiveList;
      40: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      43: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      46: aload         5
      48: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      51: astore_3
      52: goto          64
      55: new           #1914               // class scala/MatchError
      58: dup
      59: aload_2
      60: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow
      64: aload_3
      65: areturn

  public static final scalaz.Maybe $anonfun$bind$3(java.lang.Object, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       3: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
       6: astore_3
       7: aload_3
       8: instanceof    #93                 // class scalaz/Maybe$Empty
      11: ifeq          101
      14: aload_1
      15: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      18: aload_0
      19: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #95                 // class scalaz/Maybe
      27: dup
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: astore        6
      35: aload         6
      37: instanceof    #101                // class scalaz/Maybe$Just
      40: ifeq          68
      43: aload         6
      45: checkcast     #101                // class scalaz/Maybe$Just
      48: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      51: checkcast     #1827               // class scala/Tuple2
      54: astore        16
      56: aload_2
      57: aload_1
      58: aload         16
      60: invokestatic  #2141               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      63: astore        7
      65: goto          94
      68: aload         6
      70: instanceof    #93                 // class scalaz/Maybe$Empty
      73: ifeq          84
      76: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      79: astore        7
      81: goto          94
      84: new           #1914               // class scala/MatchError
      87: dup
      88: aload         6
      90: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         7
      96: astore        4
      98: goto          317
     101: aload_3
     102: instanceof    #101                // class scalaz/Maybe$Just
     105: ifeq          308
     108: aload_3
     109: checkcast     #101                // class scalaz/Maybe$Just
     112: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     115: checkcast     #66                 // class scalaz/CorecursiveList
     118: astore        5
     120: aload         5
     122: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     125: aload         5
     127: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     130: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #95                 // class scalaz/Maybe
     138: aload_0
     139: aload         5
     141: invokedynamic #2149,  0           // InvokeDynamic #12:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     146: astore        9
     148: dup
     149: ifnonnull     154
     152: aconst_null
     153: athrow
     154: astore        8
     156: aload         9
     158: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     163: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     168: astore        10
     170: aload         8
     172: instanceof    #101                // class scalaz/Maybe$Just
     175: ifeq          202
     178: aload         8
     180: checkcast     #101                // class scalaz/Maybe$Just
     183: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     186: astore        12
     188: aload         10
     190: aload         12
     192: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     197: astore        11
     199: goto          228
     202: aload         8
     204: instanceof    #93                 // class scalaz/Maybe$Empty
     207: ifeq          218
     210: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     213: astore        11
     215: goto          228
     218: new           #1914               // class scala/MatchError
     221: dup
     222: aload         8
     224: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     227: athrow
     228: aload         11
     230: checkcast     #95                 // class scalaz/Maybe
     233: astore        13
     235: aload         13
     237: ifnonnull     242
     240: aconst_null
     241: athrow
     242: aload         13
     244: instanceof    #101                // class scalaz/Maybe$Just
     247: ifeq          272
     250: aload         13
     252: checkcast     #101                // class scalaz/Maybe$Just
     255: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     258: astore        15
     260: aload         13
     262: aload         15
     264: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     267: astore        14
     269: goto          301
     272: aload         13
     274: instanceof    #93                 // class scalaz/Maybe$Empty
     277: ifeq          291
     280: aload_0
     281: aload_1
     282: aload_2
     283: invokestatic  #2153               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     286: astore        14
     288: goto          301
     291: new           #1914               // class scala/MatchError
     294: dup
     295: aload         13
     297: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     300: athrow
     301: aload         14
     303: astore        4
     305: goto          317
     308: new           #1914               // class scala/MatchError
     311: dup
     312: aload_3
     313: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     316: athrow
     317: aload         4
     319: areturn

  private static final scalaz.Maybe bstep$2(java.lang.Object, scalaz.Maybe, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: aload_1
       1: instanceof    #93                 // class scalaz/Maybe$Empty
       4: ifeq          94
       7: aload_2
       8: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      11: aload_0
      12: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #95                 // class scalaz/Maybe
      20: dup
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: astore        6
      28: aload         6
      30: instanceof    #101                // class scalaz/Maybe$Just
      33: ifeq          61
      36: aload         6
      38: checkcast     #101                // class scalaz/Maybe$Just
      41: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      44: checkcast     #1827               // class scala/Tuple2
      47: astore        16
      49: aload_3
      50: aload_2
      51: aload         16
      53: invokestatic  #2141               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      56: astore        7
      58: goto          87
      61: aload         6
      63: instanceof    #93                 // class scalaz/Maybe$Empty
      66: ifeq          77
      69: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      72: astore        7
      74: goto          87
      77: new           #1914               // class scala/MatchError
      80: dup
      81: aload         6
      83: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      86: athrow
      87: aload         7
      89: astore        4
      91: goto          310
      94: aload_1
      95: instanceof    #101                // class scalaz/Maybe$Just
      98: ifeq          301
     101: aload_1
     102: checkcast     #101                // class scalaz/Maybe$Just
     105: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     108: checkcast     #66                 // class scalaz/CorecursiveList
     111: astore        5
     113: aload         5
     115: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     118: aload         5
     120: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     123: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #95                 // class scalaz/Maybe
     131: aload_0
     132: aload         5
     134: invokedynamic #2149,  0           // InvokeDynamic #12:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     139: astore        9
     141: dup
     142: ifnonnull     147
     145: aconst_null
     146: athrow
     147: astore        8
     149: aload         9
     151: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     156: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     161: astore        10
     163: aload         8
     165: instanceof    #101                // class scalaz/Maybe$Just
     168: ifeq          195
     171: aload         8
     173: checkcast     #101                // class scalaz/Maybe$Just
     176: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     179: astore        12
     181: aload         10
     183: aload         12
     185: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     190: astore        11
     192: goto          221
     195: aload         8
     197: instanceof    #93                 // class scalaz/Maybe$Empty
     200: ifeq          211
     203: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     206: astore        11
     208: goto          221
     211: new           #1914               // class scala/MatchError
     214: dup
     215: aload         8
     217: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     220: athrow
     221: aload         11
     223: checkcast     #95                 // class scalaz/Maybe
     226: astore        13
     228: aload         13
     230: ifnonnull     235
     233: aconst_null
     234: athrow
     235: aload         13
     237: instanceof    #101                // class scalaz/Maybe$Just
     240: ifeq          265
     243: aload         13
     245: checkcast     #101                // class scalaz/Maybe$Just
     248: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     251: astore        15
     253: aload         13
     255: aload         15
     257: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     260: astore        14
     262: goto          294
     265: aload         13
     267: instanceof    #93                 // class scalaz/Maybe$Empty
     270: ifeq          284
     273: aload_0
     274: aload_2
     275: aload_3
     276: invokestatic  #2153               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     279: astore        14
     281: goto          294
     284: new           #1914               // class scala/MatchError
     287: dup
     288: aload         13
     290: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     293: athrow
     294: aload         14
     296: astore        4
     298: goto          310
     301: new           #1914               // class scala/MatchError
     304: dup
     305: aload_1
     306: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     309: athrow
     310: aload         4
     312: areturn

  public static final scalaz.Maybe $anonfun$bind$4(scalaz.CorecursiveList, scala.Function1, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        332
       4: aload_2
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_2
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #95                 // class scalaz/Maybe
      16: astore        4
      18: aload         4
      20: instanceof    #93                 // class scalaz/Maybe$Empty
      23: ifeq          113
      26: aload_0
      27: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      30: aload_3
      31: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #95                 // class scalaz/Maybe
      39: dup
      40: ifnonnull     45
      43: aconst_null
      44: athrow
      45: astore        7
      47: aload         7
      49: instanceof    #101                // class scalaz/Maybe$Just
      52: ifeq          80
      55: aload         7
      57: checkcast     #101                // class scalaz/Maybe$Just
      60: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      63: checkcast     #1827               // class scala/Tuple2
      66: astore        17
      68: aload_1
      69: aload_0
      70: aload         17
      72: invokestatic  #2141               // Method $anonfun$bind$1:(Lscala/Function1;Lscalaz/CorecursiveList;Lscala/Tuple2;)Lscalaz/Maybe;
      75: astore        8
      77: goto          106
      80: aload         7
      82: instanceof    #93                 // class scalaz/Maybe$Empty
      85: ifeq          96
      88: invokestatic  #2116               // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      91: astore        8
      93: goto          106
      96: new           #1914               // class scala/MatchError
      99: dup
     100: aload         7
     102: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow
     106: aload         8
     108: astore        5
     110: goto          341
     113: aload         4
     115: instanceof    #101                // class scalaz/Maybe$Just
     118: ifeq          322
     121: aload         4
     123: checkcast     #101                // class scalaz/Maybe$Just
     126: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     129: checkcast     #66                 // class scalaz/CorecursiveList
     132: astore        6
     134: aload         6
     136: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     139: aload         6
     141: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
     144: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #95                 // class scalaz/Maybe
     152: aload_3
     153: aload         6
     155: invokedynamic #2149,  0           // InvokeDynamic #12:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;)Lscala/Function1;
     160: astore        10
     162: dup
     163: ifnonnull     168
     166: aconst_null
     167: athrow
     168: astore        9
     170: aload         10
     172: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     177: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     182: astore        11
     184: aload         9
     186: instanceof    #101                // class scalaz/Maybe$Just
     189: ifeq          216
     192: aload         9
     194: checkcast     #101                // class scalaz/Maybe$Just
     197: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     200: astore        13
     202: aload         11
     204: aload         13
     206: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     211: astore        12
     213: goto          242
     216: aload         9
     218: instanceof    #93                 // class scalaz/Maybe$Empty
     221: ifeq          232
     224: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     227: astore        12
     229: goto          242
     232: new           #1914               // class scala/MatchError
     235: dup
     236: aload         9
     238: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     241: athrow
     242: aload         12
     244: checkcast     #95                 // class scalaz/Maybe
     247: astore        14
     249: aload         14
     251: ifnonnull     256
     254: aconst_null
     255: athrow
     256: aload         14
     258: instanceof    #101                // class scalaz/Maybe$Just
     261: ifeq          286
     264: aload         14
     266: checkcast     #101                // class scalaz/Maybe$Just
     269: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     272: astore        16
     274: aload         14
     276: aload         16
     278: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     281: astore        15
     283: goto          315
     286: aload         14
     288: instanceof    #93                 // class scalaz/Maybe$Empty
     291: ifeq          305
     294: aload_3
     295: aload_0
     296: aload_1
     297: invokestatic  #2153               // Method $anonfun$bind$3:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function1;)Lscalaz/Maybe;
     300: astore        15
     302: goto          315
     305: new           #1914               // class scala/MatchError
     308: dup
     309: aload         14
     311: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     314: athrow
     315: aload         15
     317: astore        5
     319: goto          341
     322: new           #1914               // class scala/MatchError
     325: dup
     326: aload         4
     328: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     331: athrow
     332: new           #1914               // class scala/MatchError
     335: dup
     336: aload_2
     337: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     340: athrow
     341: aload         5
     343: areturn

  private final scalaz.Maybe step$1(java.lang.Object, scalaz.CorecursiveList, scala.Function1);
    Code:
       0: aload_2
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: astore        5
      15: aload         5
      17: instanceof    #93                 // class scalaz/Maybe$Empty
      20: ifeq          34
      23: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      26: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      29: astore        4
      31: goto          118
      34: aload         5
      36: instanceof    #101                // class scalaz/Maybe$Just
      39: ifeq          108
      42: aload         5
      44: checkcast     #101                // class scalaz/Maybe$Just
      47: astore        6
      49: aload         6
      51: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      54: checkcast     #1827               // class scala/Tuple2
      57: astore        7
      59: aload         7
      61: ifnull        108
      64: aload         7
      66: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      69: astore        8
      71: aload         7
      73: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      76: astore        9
      78: aload_3
      79: aload         9
      81: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: invokestatic  #2174               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      89: ifeq          97
      92: aload         6
      94: goto          103
      97: aload         8
      99: astore_1
     100: goto          0
     103: astore        4
     105: goto          118
     108: new           #1914               // class scala/MatchError
     111: dup
     112: aload         5
     114: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow
     118: aload         4
     120: areturn

  public static final scalaz.Maybe $anonfun$filter$1(scalaz.CorecursiveList$$anon$5, scalaz.CorecursiveList, scala.Function1, java.lang.Object);
    Code:
       0: aload_3
       1: astore        4
       3: aload_1
       4: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       7: aload         4
       9: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #95                 // class scalaz/Maybe
      17: astore        6
      19: aload         6
      21: instanceof    #93                 // class scalaz/Maybe$Empty
      24: ifeq          38
      27: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      30: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      33: astore        5
      35: goto          123
      38: aload         6
      40: instanceof    #101                // class scalaz/Maybe$Just
      43: ifeq          113
      46: aload         6
      48: checkcast     #101                // class scalaz/Maybe$Just
      51: astore        7
      53: aload         7
      55: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      58: checkcast     #1827               // class scala/Tuple2
      61: astore        8
      63: aload         8
      65: ifnull        113
      68: aload         8
      70: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      73: astore        9
      75: aload         8
      77: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      80: astore        10
      82: aload_2
      83: aload         10
      85: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      90: invokestatic  #2174               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      93: ifeq          101
      96: aload         7
      98: goto          108
     101: aload         9
     103: astore        4
     105: goto          3
     108: astore        5
     110: goto          123
     113: new           #1914               // class scala/MatchError
     116: dup
     117: aload         6
     119: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     122: athrow
     123: aload         5
     125: areturn

  public static final scalaz.Maybe $anonfun$point$1(scala.Function0, boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
       7: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      10: areturn
      11: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      14: new           #1827               // class scala/Tuple2
      17: dup
      18: iconst_1
      19: invokestatic  #1891               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      22: aload_0
      23: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      28: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      34: areturn

  public static final java.lang.Object $anonfun$foldRight$2(java.lang.Object, scalaz.CorecursiveList, scala.Function2, scala.Function0);
    Code:
       0: aload_1
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_0
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: astore        4
      21: aload         4
      23: instanceof    #101                // class scalaz/Maybe$Just
      26: ifeq          55
      29: aload         4
      31: checkcast     #101                // class scalaz/Maybe$Just
      34: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      37: checkcast     #1827               // class scala/Tuple2
      40: astore        6
      42: aload_2
      43: aload_1
      44: aload_3
      45: aload         6
      47: invokestatic  #1912               // Method $anonfun$foldRight$1:(Lscala/Function2;Lscalaz/CorecursiveList;Lscala/Function0;Lscala/Tuple2;)Ljava/lang/Object;
      50: astore        5
      52: goto          84
      55: aload         4
      57: instanceof    #93                 // class scalaz/Maybe$Empty
      60: ifeq          74
      63: aload_3
      64: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      69: astore        5
      71: goto          84
      74: new           #1914               // class scala/MatchError
      77: dup
      78: aload         4
      80: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload         5
      86: areturn

  public static final java.lang.Object $anonfun$foldRight$1(scala.Function2, scalaz.CorecursiveList, scala.Function0, scala.Tuple2);
    Code:
       0: aload_3
       1: ifnull        39
       4: aload_3
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        5
      10: aload_3
      11: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        6
      16: aload_0
      17: aload         6
      19: aload         5
      21: aload_1
      22: aload_0
      23: aload_2
      24: invokedynamic #2195,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;Lscalaz/CorecursiveList;Lscala/Function2;Lscala/Function0;)Lscala/Function0;
      29: invokeinterface #1931,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        4
      36: goto          48
      39: new           #1914               // class scala/MatchError
      42: dup
      43: aload_3
      44: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow
      48: aload         4
      50: areturn

  private static final java.lang.Object rec$2(java.lang.Object, scalaz.CorecursiveList, scala.Function2, scala.Function0);
    Code:
       0: aload_1
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_0
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: dup
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: astore        4
      21: aload         4
      23: instanceof    #101                // class scalaz/Maybe$Just
      26: ifeq          55
      29: aload         4
      31: checkcast     #101                // class scalaz/Maybe$Just
      34: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      37: checkcast     #1827               // class scala/Tuple2
      40: astore        6
      42: aload_2
      43: aload_1
      44: aload_3
      45: aload         6
      47: invokestatic  #1912               // Method $anonfun$foldRight$1:(Lscala/Function2;Lscalaz/CorecursiveList;Lscala/Function0;Lscala/Tuple2;)Ljava/lang/Object;
      50: astore        5
      52: goto          84
      55: aload         4
      57: instanceof    #93                 // class scalaz/Maybe$Empty
      60: ifeq          74
      63: aload_3
      64: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      69: astore        5
      71: goto          84
      74: new           #1914               // class scala/MatchError
      77: dup
      78: aload         4
      80: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload         5
      86: areturn

  private final java.lang.Object rec$3(java.lang.Object, java.lang.Object, scalaz.CorecursiveList, scala.Function2);
    Code:
       0: aload_3
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_2
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: astore        5
      15: aload         5
      17: instanceof    #93                 // class scalaz/Maybe$Empty
      20: ifne          90
      23: aload         5
      25: instanceof    #101                // class scalaz/Maybe$Just
      28: ifeq          80
      31: aload         5
      33: checkcast     #101                // class scalaz/Maybe$Just
      36: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      39: checkcast     #1827               // class scala/Tuple2
      42: astore        6
      44: aload         6
      46: ifnull        80
      49: aload         6
      51: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      54: astore        7
      56: aload         6
      58: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      61: astore        8
      63: aload         4
      65: aload_1
      66: aload         8
      68: invokeinterface #1931,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: aload         7
      75: astore_2
      76: astore_1
      77: goto          0
      80: new           #1914               // class scala/MatchError
      83: dup
      84: aload         5
      86: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload_1
      91: areturn

  public static final scalaz.Maybe $anonfun$empty$1(scalaz.Maybe, scala.runtime.BoxedUnit);
    Code:
       0: getstatic     #2207               // Field scala/Function$.MODULE$:Lscala/Function$;
       3: aload_0
       4: aload_1
       5: invokevirtual #2210               // Method scala/Function$.const:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #95                 // class scalaz/Maybe
      11: areturn

  public static final scala.Tuple2 $anonfun$plus$1(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        33
       4: aload_0
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #1827               // class scala/Tuple2
      17: dup
      18: getstatic     #2216               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      21: aload_2
      22: invokevirtual #2217               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      25: aload_3
      26: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: astore_1
      30: goto          42
      33: new           #1914               // class scala/MatchError
      36: dup
      37: aload_0
      38: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      41: athrow
      42: aload_1
      43: areturn

  private static final scalaz.Maybe rightStep$1(java.lang.Object, scalaz.Need);
    Code:
       0: aload_1
       1: invokevirtual #2223               // Method scalaz/Need.value:()Ljava/lang/Object;
       4: checkcast     #66                 // class scalaz/CorecursiveList
       7: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      10: aload_0
      11: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #95                 // class scalaz/Maybe
      19: invokedynamic #2227,  0           // InvokeDynamic #14:apply:()Lscala/Function1;
      24: astore_3
      25: dup
      26: ifnonnull     31
      29: aconst_null
      30: athrow
      31: astore_2
      32: aload_3
      33: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
      38: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      43: astore        4
      45: aload_2
      46: instanceof    #101                // class scalaz/Maybe$Just
      49: ifeq          75
      52: aload_2
      53: checkcast     #101                // class scalaz/Maybe$Just
      56: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      59: astore        6
      61: aload         4
      63: aload         6
      65: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: astore        5
      72: goto          99
      75: aload_2
      76: instanceof    #93                 // class scalaz/Maybe$Empty
      79: ifeq          90
      82: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      85: astore        5
      87: goto          99
      90: new           #1914               // class scala/MatchError
      93: dup
      94: aload_2
      95: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      98: athrow
      99: aload         5
     101: checkcast     #95                 // class scalaz/Maybe
     104: areturn

  public static final scala.Tuple2 $anonfun$plus$3(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        33
       4: aload_0
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore_3
      14: new           #1827               // class scala/Tuple2
      17: dup
      18: getstatic     #1972               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      21: aload_2
      22: invokevirtual #1975               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      25: aload_3
      26: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      29: astore_1
      30: goto          42
      33: new           #1914               // class scala/MatchError
      36: dup
      37: aload_0
      38: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      41: athrow
      42: aload_1
      43: areturn

  public static final scalaz.Maybe $anonfun$plus$4(scalaz.Need);
    Code:
       0: aload_0
       1: invokevirtual #2223               // Method scalaz/Need.value:()Ljava/lang/Object;
       4: checkcast     #66                 // class scalaz/CorecursiveList
       7: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      10: aload_0
      11: invokestatic  #2234               // Method rightStep$1:(Ljava/lang/Object;Lscalaz/Need;)Lscalaz/Maybe;
      14: areturn

  public static final scalaz.Maybe $anonfun$plus$2(scalaz.CorecursiveList, scalaz.Need, scalaz.$bslash$div);
    Code:
       0: aload_2
       1: instanceof    #2237               // class scalaz/$minus$bslash$div
       4: ifeq          194
       7: aload_2
       8: checkcast     #2237               // class scalaz/$minus$bslash$div
      11: invokevirtual #2239               // Method scalaz/$minus$bslash$div.a:()Ljava/lang/Object;
      14: astore        4
      16: aload_0
      17: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      20: aload         4
      22: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #95                 // class scalaz/Maybe
      30: invokedynamic #2243,  0           // InvokeDynamic #15:apply:()Lscala/Function1;
      35: astore        6
      37: dup
      38: ifnonnull     43
      41: aconst_null
      42: athrow
      43: astore        5
      45: aload         6
      47: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
      52: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      57: astore        7
      59: aload         5
      61: instanceof    #101                // class scalaz/Maybe$Just
      64: ifeq          91
      67: aload         5
      69: checkcast     #101                // class scalaz/Maybe$Just
      72: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      75: astore        9
      77: aload         7
      79: aload         9
      81: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: astore        8
      88: goto          117
      91: aload         5
      93: instanceof    #93                 // class scalaz/Maybe$Empty
      96: ifeq          107
      99: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     102: astore        8
     104: goto          117
     107: new           #1914               // class scala/MatchError
     110: dup
     111: aload         5
     113: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     116: athrow
     117: aload         8
     119: checkcast     #95                 // class scalaz/Maybe
     122: astore        10
     124: aload         10
     126: ifnonnull     131
     129: aconst_null
     130: athrow
     131: aload         10
     133: instanceof    #101                // class scalaz/Maybe$Just
     136: ifeq          161
     139: aload         10
     141: checkcast     #101                // class scalaz/Maybe$Just
     144: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     147: astore        12
     149: aload         10
     151: aload         12
     153: invokestatic  #2130               // Method scalaz/Maybe.$anonfun$orElse$1:(Lscalaz/Maybe;Ljava/lang/Object;)Lscalaz/Maybe;
     156: astore        11
     158: goto          188
     161: aload         10
     163: instanceof    #93                 // class scalaz/Maybe$Empty
     166: ifeq          178
     169: aload_1
     170: invokestatic  #2245               // Method $anonfun$plus$4:(Lscalaz/Need;)Lscalaz/Maybe;
     173: astore        11
     175: goto          188
     178: new           #1914               // class scala/MatchError
     181: dup
     182: aload         10
     184: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     187: athrow
     188: aload         11
     190: astore_3
     191: goto          225
     194: aload_2
     195: instanceof    #2247               // class scalaz/$bslash$div$minus
     198: ifeq          216
     201: aload_2
     202: checkcast     #2247               // class scalaz/$bslash$div$minus
     205: invokevirtual #2249               // Method scalaz/$bslash$div$minus.b:()Ljava/lang/Object;
     208: aload_1
     209: invokestatic  #2234               // Method rightStep$1:(Ljava/lang/Object;Lscalaz/Need;)Lscalaz/Maybe;
     212: astore_3
     213: goto          225
     216: new           #1914               // class scala/MatchError
     219: dup
     220: aload_2
     221: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     224: athrow
     225: aload_3
     226: areturn

  public static final java.lang.Object $anonfun$alignWith$4(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$5(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$6(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final java.lang.Object $anonfun$alignWith$7(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: areturn

  public static final scala.Tuple2 $anonfun$alignWith$3(scala.Function1, scalaz.$bslash$amp$div);
    Code:
       0: new           #1827               // class scala/Tuple2
       3: dup
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: aload_1
      11: instanceof    #40                 // class scalaz/$bslash$amp$div$This
      14: ifeq          43
      17: aload_1
      18: checkcast     #40                 // class scalaz/$bslash$amp$div$This
      21: invokevirtual #2265               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
      24: astore_3
      25: new           #40                 // class scalaz/$bslash$amp$div$This
      28: dup
      29: aload_3
      30: checkcast     #1827               // class scala/Tuple2
      33: invokestatic  #2267               // Method $anonfun$alignWith$4:(Lscala/Tuple2;)Ljava/lang/Object;
      36: invokespecial #2268               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      39: astore_2
      40: goto          141
      43: aload_1
      44: instanceof    #37                 // class scalaz/$bslash$amp$div$That
      47: ifeq          78
      50: aload_1
      51: checkcast     #37                 // class scalaz/$bslash$amp$div$That
      54: invokevirtual #2271               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
      57: astore        4
      59: new           #37                 // class scalaz/$bslash$amp$div$That
      62: dup
      63: aload         4
      65: checkcast     #1827               // class scala/Tuple2
      68: invokestatic  #2273               // Method $anonfun$alignWith$5:(Lscala/Tuple2;)Ljava/lang/Object;
      71: invokespecial #2274               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      74: astore_2
      75: goto          141
      78: aload_1
      79: instanceof    #32                 // class scalaz/$bslash$amp$div$Both
      82: ifeq          132
      85: aload_1
      86: checkcast     #32                 // class scalaz/$bslash$amp$div$Both
      89: astore        5
      91: aload         5
      93: invokevirtual #2275               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      96: astore        6
      98: aload         5
     100: invokevirtual #2276               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     103: astore        7
     105: new           #32                 // class scalaz/$bslash$amp$div$Both
     108: dup
     109: aload         6
     111: checkcast     #1827               // class scala/Tuple2
     114: invokestatic  #2267               // Method $anonfun$alignWith$4:(Lscala/Tuple2;)Ljava/lang/Object;
     117: aload         7
     119: checkcast     #1827               // class scala/Tuple2
     122: invokestatic  #2273               // Method $anonfun$alignWith$5:(Lscala/Tuple2;)Ljava/lang/Object;
     125: invokespecial #2277               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     128: astore_2
     129: goto          141
     132: new           #1914               // class scala/MatchError
     135: dup
     136: aload_1
     137: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     140: athrow
     141: aload_2
     142: aload_0
     143: aload_1
     144: instanceof    #40                 // class scalaz/$bslash$amp$div$This
     147: ifeq          179
     150: aload_1
     151: checkcast     #40                 // class scalaz/$bslash$amp$div$This
     154: invokevirtual #2265               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     157: astore        9
     159: new           #40                 // class scalaz/$bslash$amp$div$This
     162: dup
     163: aload         9
     165: checkcast     #1827               // class scala/Tuple2
     168: invokestatic  #2279               // Method $anonfun$alignWith$6:(Lscala/Tuple2;)Ljava/lang/Object;
     171: invokespecial #2268               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
     174: astore        8
     176: goto          279
     179: aload_1
     180: instanceof    #37                 // class scalaz/$bslash$amp$div$That
     183: ifeq          215
     186: aload_1
     187: checkcast     #37                 // class scalaz/$bslash$amp$div$That
     190: invokevirtual #2271               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     193: astore        10
     195: new           #37                 // class scalaz/$bslash$amp$div$That
     198: dup
     199: aload         10
     201: checkcast     #1827               // class scala/Tuple2
     204: invokestatic  #2281               // Method $anonfun$alignWith$7:(Lscala/Tuple2;)Ljava/lang/Object;
     207: invokespecial #2274               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
     210: astore        8
     212: goto          279
     215: aload_1
     216: instanceof    #32                 // class scalaz/$bslash$amp$div$Both
     219: ifeq          270
     222: aload_1
     223: checkcast     #32                 // class scalaz/$bslash$amp$div$Both
     226: astore        11
     228: aload         11
     230: invokevirtual #2275               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
     233: astore        12
     235: aload         11
     237: invokevirtual #2276               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
     240: astore        13
     242: new           #32                 // class scalaz/$bslash$amp$div$Both
     245: dup
     246: aload         12
     248: checkcast     #1827               // class scala/Tuple2
     251: invokestatic  #2279               // Method $anonfun$alignWith$6:(Lscala/Tuple2;)Ljava/lang/Object;
     254: aload         13
     256: checkcast     #1827               // class scala/Tuple2
     259: invokestatic  #2281               // Method $anonfun$alignWith$7:(Lscala/Tuple2;)Ljava/lang/Object;
     262: invokespecial #2277               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     265: astore        8
     267: goto          279
     270: new           #1914               // class scala/MatchError
     273: dup
     274: aload_1
     275: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     278: athrow
     279: aload         8
     281: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     286: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     289: areturn

  public static final scala.Tuple2 $anonfun$alignWith$8(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_1
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1827               // class scala/Tuple2
      18: dup
      19: new           #40                 // class scalaz/$bslash$amp$div$This
      22: dup
      23: aload_3
      24: invokespecial #2268               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      27: aload_0
      28: new           #40                 // class scalaz/$bslash$amp$div$This
      31: dup
      32: aload         4
      34: invokespecial #2268               // Method scalaz/$bslash$amp$div$This."<init>":(Ljava/lang/Object;)V
      37: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      45: astore_2
      46: goto          58
      49: new           #1914               // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: areturn

  public static final scala.Tuple2 $anonfun$alignWith$9(scala.Function1, scala.Tuple2);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_1
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_3
       9: aload_1
      10: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: astore        4
      15: new           #1827               // class scala/Tuple2
      18: dup
      19: new           #37                 // class scalaz/$bslash$amp$div$That
      22: dup
      23: aload_3
      24: invokespecial #2274               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      27: aload_0
      28: new           #37                 // class scalaz/$bslash$amp$div$That
      31: dup
      32: aload         4
      34: invokespecial #2274               // Method scalaz/$bslash$amp$div$That."<init>":(Ljava/lang/Object;)V
      37: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      45: astore_2
      46: goto          58
      49: new           #1914               // class scala/MatchError
      52: dup
      53: aload_1
      54: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_2
      59: areturn

  public static final scalaz.Maybe $anonfun$alignWith$2(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Function1, scalaz.$bslash$amp$div);
    Code:
       0: aload_3
       1: instanceof    #32                 // class scalaz/$bslash$amp$div$Both
       4: ifeq          176
       7: aload_3
       8: checkcast     #32                 // class scalaz/$bslash$amp$div$Both
      11: astore        5
      13: aload         5
      15: invokevirtual #2275               // Method scalaz/$bslash$amp$div$Both.aa:()Ljava/lang/Object;
      18: astore        6
      20: aload         5
      22: invokevirtual #2276               // Method scalaz/$bslash$amp$div$Both.bb:()Ljava/lang/Object;
      25: astore        7
      27: getstatic     #2296               // Field scalaz/Align$.MODULE$:Lscalaz/Align$;
      30: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      33: invokevirtual #2300               // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      36: checkcast     #15                 // class scalaz/Align
      39: astore        10
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: aload         10
      48: aload_0
      49: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      52: aload         6
      54: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      59: aload_1
      60: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
      63: aload         7
      65: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      70: invokeinterface #2302,  3         // InterfaceMethod scalaz/Align.align:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #95                 // class scalaz/Maybe
      78: aload_2
      79: invokedynamic #2308,  0           // InvokeDynamic #16:apply:(Lscala/Function1;)Lscala/Function1;
      84: astore        12
      86: dup
      87: ifnonnull     92
      90: aconst_null
      91: athrow
      92: astore        11
      94: aload         12
      96: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     101: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     106: astore        13
     108: aload         11
     110: instanceof    #101                // class scalaz/Maybe$Just
     113: ifeq          140
     116: aload         11
     118: checkcast     #101                // class scalaz/Maybe$Just
     121: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     124: astore        15
     126: aload         13
     128: aload         15
     130: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     135: astore        14
     137: goto          166
     140: aload         11
     142: instanceof    #93                 // class scalaz/Maybe$Empty
     145: ifeq          156
     148: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     151: astore        14
     153: goto          166
     156: new           #1914               // class scala/MatchError
     159: dup
     160: aload         11
     162: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     165: athrow
     166: aload         14
     168: checkcast     #95                 // class scalaz/Maybe
     171: astore        4
     173: goto          441
     176: aload_3
     177: instanceof    #40                 // class scalaz/$bslash$amp$div$This
     180: ifeq          304
     183: aload_3
     184: checkcast     #40                 // class scalaz/$bslash$amp$div$This
     187: invokevirtual #2265               // Method scalaz/$bslash$amp$div$This.aa:()Ljava/lang/Object;
     190: astore        8
     192: aload_0
     193: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     196: aload         8
     198: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     203: checkcast     #95                 // class scalaz/Maybe
     206: aload_2
     207: invokedynamic #2312,  0           // InvokeDynamic #17:apply:(Lscala/Function1;)Lscala/Function1;
     212: astore        17
     214: dup
     215: ifnonnull     220
     218: aconst_null
     219: athrow
     220: astore        16
     222: aload         17
     224: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     229: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     234: astore        18
     236: aload         16
     238: instanceof    #101                // class scalaz/Maybe$Just
     241: ifeq          268
     244: aload         16
     246: checkcast     #101                // class scalaz/Maybe$Just
     249: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     252: astore        20
     254: aload         18
     256: aload         20
     258: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     263: astore        19
     265: goto          294
     268: aload         16
     270: instanceof    #93                 // class scalaz/Maybe$Empty
     273: ifeq          284
     276: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     279: astore        19
     281: goto          294
     284: new           #1914               // class scala/MatchError
     287: dup
     288: aload         16
     290: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     293: athrow
     294: aload         19
     296: checkcast     #95                 // class scalaz/Maybe
     299: astore        4
     301: goto          441
     304: aload_3
     305: instanceof    #37                 // class scalaz/$bslash$amp$div$That
     308: ifeq          432
     311: aload_3
     312: checkcast     #37                 // class scalaz/$bslash$amp$div$That
     315: invokevirtual #2271               // Method scalaz/$bslash$amp$div$That.bb:()Ljava/lang/Object;
     318: astore        9
     320: aload_1
     321: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
     324: aload         9
     326: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     331: checkcast     #95                 // class scalaz/Maybe
     334: aload_2
     335: invokedynamic #2316,  0           // InvokeDynamic #18:apply:(Lscala/Function1;)Lscala/Function1;
     340: astore        22
     342: dup
     343: ifnonnull     348
     346: aconst_null
     347: athrow
     348: astore        21
     350: aload         22
     352: invokedynamic #2080,  0           // InvokeDynamic #10:apply:()Lscala/Function1;
     357: invokeinterface #1813,  2         // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
     362: astore        23
     364: aload         21
     366: instanceof    #101                // class scalaz/Maybe$Just
     369: ifeq          396
     372: aload         21
     374: checkcast     #101                // class scalaz/Maybe$Just
     377: invokevirtual #1908               // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     380: astore        25
     382: aload         23
     384: aload         25
     386: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     391: astore        24
     393: goto          422
     396: aload         21
     398: instanceof    #93                 // class scalaz/Maybe$Empty
     401: ifeq          412
     404: invokestatic  #2082               // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
     407: astore        24
     409: goto          422
     412: new           #1914               // class scala/MatchError
     415: dup
     416: aload         21
     418: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     421: athrow
     422: aload         24
     424: checkcast     #95                 // class scalaz/Maybe
     427: astore        4
     429: goto          441
     432: new           #1914               // class scala/MatchError
     435: dup
     436: aload_3
     437: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     440: athrow
     441: aload         4
     443: areturn

  public static final scalaz.CorecursiveList $anonfun$alignWith$1(scala.Function1, scalaz.CorecursiveList, scalaz.CorecursiveList);
    Code:
       0: getstatic     #1779               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: new           #32                 // class scalaz/$bslash$amp$div$Both
       6: dup
       7: aload_1
       8: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      11: aload_2
      12: invokevirtual #1783               // Method scalaz/CorecursiveList.init:()Ljava/lang/Object;
      15: invokespecial #2277               // Method scalaz/$bslash$amp$div$Both."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokedynamic #2324,  0           // InvokeDynamic #19:apply:(Lscalaz/CorecursiveList;Lscalaz/CorecursiveList;Lscala/Function1;)Lscala/Function1;
      26: astore        4
      28: astore_3
      29: ifnonnull     34
      32: aconst_null
      33: athrow
      34: new           #64                 // class scalaz/CorecursiveList$CorecursiveListImpl
      37: dup
      38: aload_3
      39: aload         4
      41: invokespecial #1868               // Method scalaz/CorecursiveList$CorecursiveListImpl."<init>":(Ljava/lang/Object;Lscala/Function1;)V
      44: areturn

  public static final scalaz.Maybe $anonfun$zip$2(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: areturn

  public static final scalaz.Maybe $anonfun$zip$3(scalaz.CorecursiveList, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #1787               // Method scalaz/CorecursiveList.step:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #1905,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #95                 // class scalaz/Maybe
      13: areturn

  public static final scala.Tuple2 $anonfun$zip$4(scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #1827               // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: aload_0
      11: astore        4
      13: aload_1
      14: astore        5
      16: aload         4
      18: ifnull        87
      21: aload         4
      23: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      26: astore        6
      28: aload         4
      30: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      33: astore        7
      35: aload         5
      37: ifnull        87
      40: aload         5
      42: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
      45: astore        8
      47: aload         5
      49: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      52: astore        9
      54: new           #1827               // class scala/Tuple2
      57: dup
      58: new           #1827               // class scala/Tuple2
      61: dup
      62: aload         6
      64: aload         8
      66: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      69: new           #1827               // class scala/Tuple2
      72: dup
      73: aload         7
      75: aload         9
      77: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      80: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      83: astore_2
      84: goto          96
      87: new           #1914               // class scala/MatchError
      90: dup
      91: aload_3
      92: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      95: athrow
      96: aload_2
      97: areturn

  public static final scalaz.Maybe $anonfun$zip$1(scalaz.CorecursiveList, scalaz.CorecursiveList, scala.Tuple2);
    Code:
       0: aload_2
       1: ifnull        70
       4: aload_2
       5: invokevirtual #1926               // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokevirtual #1929               // Method scala/Tuple2._2:()Ljava/lang/Object;
      14: astore        5
      16: getstatic     #2339               // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
      19: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      22: invokevirtual #2300               // Method scalaz/Maybe$.maybeInstance:()Lscalaz/Traverse;
      25: checkcast     #56                 // class scalaz/Apply
      28: astore        6
      30: ifnonnull     35
      33: aconst_null
      34: athrow
      35: aload         6
      37: aload_0
      38: aload         4
      40: invokedynamic #2346,  0           // InvokeDynamic #20:apply:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscala/Function0;
      45: aload_1
      46: aload         5
      48: invokedynamic #2350,  0           // InvokeDynamic #21:apply:(Lscalaz/CorecursiveList;Ljava/lang/Object;)Lscala/Function0;
      53: invokedynamic #2356,  0           // InvokeDynamic #22:apply:()Lscala/Function2;
      58: invokeinterface #2358,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      63: checkcast     #95                 // class scalaz/Maybe
      66: astore_3
      67: goto          79
      70: new           #1914               // class scala/MatchError
      73: dup
      74: aload_2
      75: invokespecial #1917               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      78: athrow
      79: aload_3
      80: areturn

  public scalaz.CorecursiveList$$anon$5();
    Code:
       0: aload_0
       1: invokespecial #2361               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2365               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2368               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2371               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      16: aload_0
      17: invokestatic  #2374               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #2377               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      24: aload_0
      25: invokestatic  #2380               // InterfaceMethod scalaz/Bind.$init$:(Lscalaz/Bind;)V
      28: aload_0
      29: invokestatic  #2383               // InterfaceMethod scalaz/Monad.$init$:(Lscalaz/Monad;)V
      32: aload_0
      33: invokestatic  #2386               // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      36: aload_0
      37: invokestatic  #2389               // InterfaceMethod scalaz/PlusEmpty.$init$:(Lscalaz/PlusEmpty;)V
      40: aload_0
      41: invokestatic  #2392               // InterfaceMethod scalaz/ApplicativePlus.$init$:(Lscalaz/ApplicativePlus;)V
      44: aload_0
      45: invokestatic  #2395               // InterfaceMethod scalaz/MonadPlus.$init$:(Lscalaz/MonadPlus;)V
      48: aload_0
      49: invokestatic  #2398               // InterfaceMethod scalaz/InvariantAlt.$init$:(Lscalaz/InvariantAlt;)V
      52: aload_0
      53: invokestatic  #2401               // InterfaceMethod scalaz/Alt.$init$:(Lscalaz/Alt;)V
      56: aload_0
      57: invokestatic  #2404               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      60: aload_0
      61: invokestatic  #2407               // InterfaceMethod scalaz/Foldable$FromFoldr.$init$:(Lscalaz/Foldable$FromFoldr;)V
      64: aload_0
      65: invokestatic  #2410               // InterfaceMethod scalaz/IsEmpty.$init$:(Lscalaz/IsEmpty;)V
      68: aload_0
      69: invokestatic  #2413               // InterfaceMethod scalaz/Align.$init$:(Lscalaz/Align;)V
      72: aload_0
      73: invokestatic  #2416               // InterfaceMethod scalaz/Zip.$init$:(Lscalaz/Zip;)V
      76: return

  public static final scalaz.Maybe $anonfun$point$1$adapted(scala.Function0, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #2174               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: ifeq          14
       7: getstatic     #1830               // Field scalaz/Maybe$Empty$.MODULE$:Lscalaz/Maybe$Empty$;
      10: invokevirtual #1833               // Method scalaz/Maybe$Empty$.apply:()Lscalaz/Maybe;
      13: areturn
      14: getstatic     #2096               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      17: new           #1827               // class scala/Tuple2
      20: dup
      21: iconst_1
      22: invokestatic  #1891               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      25: aload_0
      26: invokeinterface #1825,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      31: invokespecial #1837               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      34: invokevirtual #2099               // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      37: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2442,  0           // InvokeDynamic #23:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
