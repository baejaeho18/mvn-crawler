Compiled from "Zipper.scala"
public final class scalaz.Zipper<A> implements scala.Product, scala.Serializable {
  private final scala.collection.immutable.Stream<A> lefts;

  private final A focus;

  private final scala.collection.immutable.Stream<A> rights;

  public static <A> scala.Option<scala.Tuple3<scala.collection.immutable.Stream<A>, A, scala.collection.immutable.Stream<A>>> unapply(scalaz.Zipper<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #62                 // Method scalaz/Zipper$.unapply:(Lscalaz/Zipper;)Lscala/Option;
       7: areturn

  public static <A> scalaz.Zipper<A> apply(scala.collection.immutable.Stream<A>, A, scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #67                 // Method scalaz/Zipper$.apply:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
       9: areturn

  public static <A> scalaz.Zipper<A> zipper(scala.collection.immutable.Stream<A>, A, scala.collection.immutable.Stream<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
       9: areturn

  public static scalaz.IsCovariant<scalaz.Zipper> covariant();
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: invokevirtual #78                 // Method scalaz/Zipper$.covariant:()Lscalaz/IsCovariant;
       6: areturn

  public static <A> scalaz.Show<scalaz.Zipper<A>> zipperShow(scalaz.Show<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #84                 // Method scalaz/Zipper$.zipperShow:(Lscalaz/Show;)Lscalaz/Show;
       7: areturn

  public static <A> scalaz.Equal<scalaz.Zipper<A>> zipperEqual(scalaz.Equal<A>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #90                 // Method scalaz/Zipper$.zipperEqual:(Lscalaz/Equal;)Lscalaz/Equal;
       7: areturn

  public static scalaz.Traverse1<scalaz.Zipper> zipperInstance();
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: invokevirtual #95                 // Method scalaz/Zipper$.zipperInstance:()Lscalaz/Traverse1;
       6: areturn

  public scala.collection.immutable.Stream<A> lefts();
    Code:
       0: aload_0
       1: getfield      #99                 // Field lefts:Lscala/collection/immutable/Stream;
       4: areturn

  public A focus();
    Code:
       0: aload_0
       1: getfield      #105                // Field focus:Ljava/lang/Object;
       4: areturn

  public scala.collection.immutable.Stream<A> rights();
    Code:
       0: aload_0
       1: getfield      #107                // Field rights:Lscala/collection/immutable/Stream;
       4: areturn

  public <B> scalaz.Zipper<B> map(scala.Function1<A, B>);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      11: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      14: invokevirtual #125                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      17: checkcast     #22                 // class scala/collection/immutable/Stream
      20: aload_1
      21: aload_0
      22: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      25: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: aload_0
      31: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      34: aload_1
      35: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      38: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      41: invokevirtual #125                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      44: checkcast     #22                 // class scala/collection/immutable/Stream
      47: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      50: areturn

  public scala.collection.immutable.Stream<A> toStream();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
       7: aload_0
       8: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      11: astore_1
      12: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      15: aload_0
      16: invokedynamic #158,  0            // InvokeDynamic #0:apply:(Lscalaz/Zipper;)Lscala/Function0;
      21: invokevirtual #162                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      24: aload_1
      25: invokevirtual #166                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      28: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      31: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      34: invokevirtual #170                // Method scala/collection/immutable/Stream.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      37: checkcast     #22                 // class scala/collection/immutable/Stream
      40: areturn

  public scalaz.Zipper<A> update(A);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       5: aload_1
       6: aload_0
       7: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      10: invokevirtual #176                // Method copy:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      13: areturn

  public scalaz.Zipper<A> modify(scala.Function1<A, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       6: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #180                // Method update:(Ljava/lang/Object;)Lscalaz/Zipper;
      14: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> next();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: astore_2
       5: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       8: aload_2
       9: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          25
      15: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      18: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      21: astore_1
      22: goto          115
      25: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      28: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      31: aload_2
      32: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      35: astore_3
      36: aload_3
      37: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      40: ifne          106
      43: aload_3
      44: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      47: checkcast     #220                // class scala/Tuple2
      50: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      53: astore        4
      55: aload_3
      56: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      59: checkcast     #220                // class scala/Tuple2
      62: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      65: checkcast     #22                 // class scala/collection/immutable/Stream
      68: astore        5
      70: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      73: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      76: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      79: aload_0
      80: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      83: aload_0
      84: invokedynamic #234,  0            // InvokeDynamic #1:apply:(Lscalaz/Zipper;)Lscala/Function0;
      89: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      92: aload         4
      94: aload         5
      96: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      99: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     102: astore_1
     103: goto          115
     106: new           #243                // class scala/MatchError
     109: dup
     110: aload_2
     111: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     114: athrow
     115: aload_1
     116: areturn

  public scalaz.Zipper<A> nextOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #254                // Method next:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> previous();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: astore_2
       5: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       8: aload_2
       9: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          25
      15: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      18: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      21: astore_1
      22: goto          115
      25: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      28: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      31: aload_2
      32: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      35: astore_3
      36: aload_3
      37: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      40: ifne          106
      43: aload_3
      44: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      47: checkcast     #220                // class scala/Tuple2
      50: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      53: astore        4
      55: aload_3
      56: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      59: checkcast     #220                // class scala/Tuple2
      62: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      65: checkcast     #22                 // class scala/collection/immutable/Stream
      68: astore        5
      70: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      73: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      76: aload         5
      78: aload         4
      80: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      83: aload_0
      84: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      87: aload_0
      88: invokedynamic #271,  0            // InvokeDynamic #2:apply:(Lscalaz/Zipper;)Lscala/Function0;
      93: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      96: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      99: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     102: astore_1
     103: goto          115
     106: new           #243                // class scala/MatchError
     109: dup
     110: aload_2
     111: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     114: athrow
     115: aload_1
     116: areturn

  public scalaz.Zipper<A> previousOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #275                // Method previous:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public scalaz.Zipper<A> tryPrevious();
    Code:
       0: aload_0
       1: invokevirtual #275                // Method previous:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_1
      11: aload_1
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_1
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: goto          52
      32: aload_1
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          43
      39: invokestatic  #282                // Method $anonfun$tryPrevious$1:()Lscala/runtime/Nothing$;
      42: athrow
      43: new           #243                // class scala/MatchError
      46: dup
      47: aload_1
      48: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_2
      53: checkcast     #2                  // class scalaz/Zipper
      56: areturn

  public scalaz.Zipper<A> insert(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #287                // Method insertRight:(Ljava/lang/Object;)Lscalaz/Zipper;
       5: areturn

  public scalaz.Zipper<A> insertLeft(A);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       7: aload_1
       8: aload_0
       9: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      12: astore_2
      13: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      16: aload_0
      17: invokedynamic #294,  0            // InvokeDynamic #3:apply:(Lscalaz/Zipper;)Lscala/Function0;
      22: invokevirtual #162                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      25: aload_2
      26: invokevirtual #166                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      29: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      32: areturn

  public scalaz.Zipper<A> insertRight(A);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       7: astore_2
       8: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      11: aload_0
      12: invokedynamic #299,  0            // InvokeDynamic #4:apply:(Lscalaz/Zipper;)Lscala/Function0;
      17: invokevirtual #162                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      20: aload_2
      21: invokevirtual #166                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      24: aload_1
      25: aload_0
      26: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      29: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      32: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> delete();
    Code:
       0: aload_0
       1: invokevirtual #303                // Method deleteRight:()Lscalaz/Maybe;
       4: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> deleteLeft();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: astore_3
       5: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
       8: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      11: aload_3
      12: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      15: astore        4
      17: aload         4
      19: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      22: ifne          78
      25: aload         4
      27: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      30: checkcast     #220                // class scala/Tuple2
      33: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: astore        5
      38: aload         4
      40: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #220                // class scala/Tuple2
      46: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #22                 // class scala/collection/immutable/Stream
      52: astore        6
      54: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      57: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      60: aload         6
      62: aload         5
      64: aload_0
      65: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      68: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      71: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      74: astore_1
      75: goto          218
      78: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      81: aload_3
      82: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          209
      88: aload_0
      89: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      92: astore        7
      94: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      97: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     100: aload         7
     102: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     105: astore        8
     107: aload         8
     109: invokevirtual #215                // Method scala/Option.isEmpty:()Z
     112: ifne          173
     115: aload         8
     117: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     120: checkcast     #220                // class scala/Tuple2
     123: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
     126: astore        9
     128: aload         8
     130: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     133: checkcast     #220                // class scala/Tuple2
     136: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
     139: checkcast     #22                 // class scala/collection/immutable/Stream
     142: astore        10
     144: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     147: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     150: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     153: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     156: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
     159: aload         9
     161: aload         10
     163: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     166: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     169: astore_2
     170: goto          204
     173: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     176: aload         7
     178: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     181: ifeq          194
     184: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     187: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     190: astore_2
     191: goto          204
     194: new           #243                // class scala/MatchError
     197: dup
     198: aload         7
     200: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     203: athrow
     204: aload_2
     205: astore_1
     206: goto          218
     209: new           #243                // class scala/MatchError
     212: dup
     213: aload_3
     214: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     217: athrow
     218: aload_1
     219: areturn

  public scalaz.Zipper<A> deleteLeftOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #313                // Method deleteLeft:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> deleteRight();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: astore_3
       5: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
       8: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      11: aload_3
      12: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      15: astore        4
      17: aload         4
      19: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      22: ifne          78
      25: aload         4
      27: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      30: checkcast     #220                // class scala/Tuple2
      33: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: astore        5
      38: aload         4
      40: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #220                // class scala/Tuple2
      46: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #22                 // class scala/collection/immutable/Stream
      52: astore        6
      54: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      57: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      60: aload_0
      61: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      64: aload         5
      66: aload         6
      68: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      71: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      74: astore_1
      75: goto          218
      78: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      81: aload_3
      82: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          209
      88: aload_0
      89: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      92: astore        7
      94: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      97: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     100: aload         7
     102: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     105: astore        8
     107: aload         8
     109: invokevirtual #215                // Method scala/Option.isEmpty:()Z
     112: ifne          173
     115: aload         8
     117: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     120: checkcast     #220                // class scala/Tuple2
     123: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
     126: astore        9
     128: aload         8
     130: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     133: checkcast     #220                // class scala/Tuple2
     136: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
     139: checkcast     #22                 // class scala/collection/immutable/Stream
     142: astore        10
     144: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     147: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     150: aload         10
     152: aload         9
     154: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     157: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     160: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
     163: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     166: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     169: astore_2
     170: goto          204
     173: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     176: aload         7
     178: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     181: ifeq          194
     184: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     187: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     190: astore_2
     191: goto          204
     194: new           #243                // class scala/MatchError
     197: dup
     198: aload         7
     200: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     203: athrow
     204: aload_2
     205: astore_1
     206: goto          218
     209: new           #243                // class scala/MatchError
     212: dup
     213: aload_3
     214: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     217: athrow
     218: aload_1
     219: areturn

  public scalaz.Zipper<A> deleteRightOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #303                // Method deleteRight:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public scalaz.Zipper<A> deleteOthers();
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       6: aload_0
       7: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      10: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      13: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      16: areturn

  public <B> B foldLeft(B, scala.Function2<B, A, B>);
    Code:
       0: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       3: aload_0
       4: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       7: aload_0
       8: invokedynamic #324,  0            // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      13: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      16: aload_0
      17: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      20: aload_1
      21: aload_2
      22: invokedynamic #335,  0            // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      27: invokevirtual #338                // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      30: aload_2
      31: invokevirtual #340                // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      34: areturn

  public <B> B foldRight(scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       7: aload_0
       8: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      11: aload_0
      12: invokedynamic #348,  0            // InvokeDynamic #7:apply:(Lscalaz/Zipper;)Lscala/Function0;
      17: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      20: aload_1
      21: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: aload_2
      27: invokedynamic #353,  0            // InvokeDynamic #8:apply:(Lscala/Function2;)Lscala/Function2;
      32: invokevirtual #354                // Method scala/collection/immutable/Stream$Cons.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      35: aload_2
      36: invokedynamic #359,  0            // InvokeDynamic #9:apply:(Lscala/Function2;)Lscala/Function2;
      41: invokevirtual #360                // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      44: areturn

  public int length();
    Code:
       0: iconst_0
       1: invokestatic  #368                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       4: invokedynamic #375,  0            // InvokeDynamic #10:apply:()Lscala/Function2;
       9: astore_2
      10: astore_1
      11: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      14: aload_0
      15: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      18: aload_0
      19: invokedynamic #324,  0            // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      24: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      27: aload_0
      28: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      31: aload_1
      32: aload_2
      33: invokedynamic #335,  0            // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      38: invokevirtual #338                // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      41: aload_2
      42: invokevirtual #340                // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      45: invokestatic  #379                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      48: ireturn

  public boolean atStart();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: invokevirtual #383                // Method scala/collection/immutable/Stream.isEmpty:()Z
       7: ireturn

  public boolean atEnd();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: invokevirtual #383                // Method scala/collection/immutable/Stream.isEmpty:()Z
       7: ireturn

  public scalaz.Zipper<scala.Tuple2<A, java.lang.Object>> withFocus();
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       7: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      10: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      13: invokedynamic #395,  0            // InvokeDynamic #11:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
      18: invokevirtual #399                // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      21: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      24: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      27: invokevirtual #403                // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      30: checkcast     #22                 // class scala/collection/immutable/Stream
      33: new           #220                // class scala/Tuple2
      36: dup
      37: aload_0
      38: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      41: iconst_1
      42: invokestatic  #407                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      45: invokespecial #410                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      48: aload_0
      49: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      52: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      55: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      58: invokedynamic #415,  0            // InvokeDynamic #12:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
      63: invokevirtual #399                // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      66: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      69: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      72: invokevirtual #403                // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      75: checkcast     #22                 // class scala/collection/immutable/Stream
      78: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      81: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> move(int);
    Code:
       0: aload_0
       1: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       4: aload_0
       5: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
       8: iload_1
       9: invokespecial #423                // Method move0$1:(Lscalaz/Maybe;I)Lscalaz/Maybe;
      12: areturn

  public scalaz.Zipper<A> start();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
       7: aload_0
       8: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      11: astore_2
      12: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      15: aload_0
      16: invokedynamic #430,  0            // InvokeDynamic #13:apply:(Lscalaz/Zipper;)Lscala/Function0;
      21: invokevirtual #162                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      24: aload_2
      25: invokevirtual #166                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      28: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      31: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      34: invokevirtual #170                // Method scala/collection/immutable/Stream.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      37: checkcast     #22                 // class scala/collection/immutable/Stream
      40: astore_1
      41: aload_0
      42: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      45: aload_1
      46: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      49: aload_1
      50: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      53: checkcast     #22                 // class scala/collection/immutable/Stream
      56: invokevirtual #176                // Method copy:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      59: areturn

  public scalaz.Zipper<A> end();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
       7: aload_0
       8: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      11: astore_2
      12: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      15: aload_0
      16: invokedynamic #442,  0            // InvokeDynamic #14:apply:(Lscalaz/Zipper;)Lscala/Function0;
      21: invokevirtual #162                // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      24: aload_2
      25: invokevirtual #166                // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      28: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      31: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      34: invokevirtual #170                // Method scala/collection/immutable/Stream.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      37: checkcast     #22                 // class scala/collection/immutable/Stream
      40: astore_1
      41: aload_0
      42: aload_1
      43: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      46: checkcast     #22                 // class scala/collection/immutable/Stream
      49: aload_1
      50: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      53: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      56: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      59: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
      62: invokevirtual #176                // Method copy:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      65: areturn

  public scalaz.Zipper<A> moveOr(int, scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #447                // Method move:(I)Lscalaz/Maybe;
       5: dup
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: astore_3
      12: aload_3
      13: instanceof    #42                 // class scalaz/Maybe$Just
      16: ifeq          34
      19: aload_3
      20: checkcast     #42                 // class scalaz/Maybe$Just
      23: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      26: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore        4
      31: goto          61
      34: aload_3
      35: instanceof    #37                 // class scalaz/Maybe$Empty
      38: ifeq          52
      41: aload_2
      42: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      47: astore        4
      49: goto          61
      52: new           #243                // class scala/MatchError
      55: dup
      56: aload_3
      57: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      60: athrow
      61: aload         4
      63: checkcast     #2                  // class scalaz/Zipper
      66: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> findZ(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       5: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      19: aload_0
      20: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      23: areturn
      24: aload_0
      25: invokevirtual #457                // Method positions:()Lscalaz/Zipper;
      28: astore_2
      29: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      32: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      35: aload_2
      36: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      39: aload_2
      40: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      43: invokevirtual #466                // Method scalaz/std/stream$.interleave:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      46: aload_1
      47: invokedynamic #477,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
      52: invokevirtual #481                // Method scala/collection/immutable/Stream.find:(Lscala/Function1;)Lscala/Option;
      55: invokevirtual #485                // Method scalaz/Maybe$.fromOption:(Lscala/Option;)Lscalaz/Maybe;
      58: areturn

  public scalaz.Zipper<A> findZor(scala.Function1<A, java.lang.Object>, scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       5: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ifeq          26
      16: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      19: aload_0
      20: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      23: goto          60
      26: aload_0
      27: invokevirtual #457                // Method positions:()Lscalaz/Zipper;
      30: astore_3
      31: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      34: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      37: aload_3
      38: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      41: aload_3
      42: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      45: invokevirtual #466                // Method scalaz/std/stream$.interleave:(Lscala/collection/immutable/Stream;Lscala/collection/immutable/Stream;)Lscala/collection/immutable/Stream;
      48: aload_1
      49: invokedynamic #477,  0            // InvokeDynamic #15:apply:(Lscala/Function1;)Lscala/Function1;
      54: invokevirtual #481                // Method scala/collection/immutable/Stream.find:(Lscala/Function1;)Lscala/Option;
      57: invokevirtual #485                // Method scalaz/Maybe$.fromOption:(Lscala/Option;)Lscalaz/Maybe;
      60: astore        4
      62: aload         4
      64: ifnonnull     69
      67: aconst_null
      68: athrow
      69: aload         4
      71: instanceof    #42                 // class scalaz/Maybe$Just
      74: ifeq          93
      77: aload         4
      79: checkcast     #42                 // class scalaz/Maybe$Just
      82: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      85: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      88: astore        5
      90: goto          122
      93: aload         4
      95: instanceof    #37                 // class scalaz/Maybe$Empty
      98: ifeq          112
     101: aload_2
     102: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     107: astore        5
     109: goto          122
     112: new           #243                // class scala/MatchError
     115: dup
     116: aload         4
     118: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     121: athrow
     122: aload         5
     124: checkcast     #2                  // class scalaz/Zipper
     127: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> findBy(scala.Function1<scalaz.Zipper<A>, scalaz.Maybe<scalaz.Zipper<A>>>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #39                 // class scalaz/Maybe
      10: astore_3
      11: aload_3
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          78
      18: aload_3
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: checkcast     #2                  // class scalaz/Zipper
      28: astore        5
      30: aload_2
      31: aload         5
      33: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      36: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      44: ifeq          58
      47: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      50: aload         5
      52: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      55: goto          73
      58: aload_1
      59: aload         5
      61: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #39                 // class scalaz/Maybe
      69: astore_3
      70: goto          11
      73: astore        4
      75: goto          105
      78: aload_3
      79: instanceof    #37                 // class scalaz/Maybe$Empty
      82: ifeq          96
      85: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      88: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      91: astore        4
      93: goto          105
      96: new           #243                // class scala/MatchError
      99: dup
     100: aload_3
     101: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     104: athrow
     105: aload         4
     107: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> findNext(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #500                // Method $anonfun$findNext$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
       4: astore_2
       5: aload_2
       6: instanceof    #42                 // class scalaz/Maybe$Just
       9: ifeq          65
      12: aload_2
      13: checkcast     #42                 // class scalaz/Maybe$Just
      16: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      19: checkcast     #2                  // class scalaz/Zipper
      22: astore        4
      24: aload_1
      25: aload         4
      27: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      30: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      38: ifeq          52
      41: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      44: aload         4
      46: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      49: goto          61
      52: aload         4
      54: invokestatic  #500                // Method $anonfun$findNext$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
      57: astore_2
      58: goto          5
      61: astore_3
      62: goto          91
      65: aload_2
      66: instanceof    #37                 // class scalaz/Maybe$Empty
      69: ifeq          82
      72: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      75: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      78: astore_3
      79: goto          91
      82: new           #243                // class scala/MatchError
      85: dup
      86: aload_2
      87: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload_3
      92: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> findPrevious(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #506                // Method $anonfun$findPrevious$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
       4: astore_2
       5: aload_2
       6: instanceof    #42                 // class scalaz/Maybe$Just
       9: ifeq          65
      12: aload_2
      13: checkcast     #42                 // class scalaz/Maybe$Just
      16: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      19: checkcast     #2                  // class scalaz/Zipper
      22: astore        4
      24: aload_1
      25: aload         4
      27: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      30: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      38: ifeq          52
      41: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      44: aload         4
      46: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      49: goto          61
      52: aload         4
      54: invokestatic  #506                // Method $anonfun$findPrevious$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
      57: astore_2
      58: goto          5
      61: astore_3
      62: goto          91
      65: aload_2
      66: instanceof    #37                 // class scalaz/Maybe$Empty
      69: ifeq          82
      72: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      75: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      78: astore_3
      79: goto          91
      82: new           #243                // class scala/MatchError
      85: dup
      86: aload_2
      87: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      90: athrow
      91: aload_3
      92: areturn

  public scalaz.Zipper<scalaz.Zipper<A>> positions();
    Code:
       0: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       3: invokedynamic #515,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
       8: astore_2
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_1
      16: aload_0
      17: invokestatic  #510                // Method $anonfun$positions$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
      20: astore        4
      22: aload         4
      24: instanceof    #37                 // class scalaz/Maybe$Empty
      27: ifeq          43
      30: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      33: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      36: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
      39: astore_3
      40: goto          114
      43: aload         4
      45: instanceof    #42                 // class scalaz/Maybe$Just
      48: ifeq          104
      51: aload         4
      53: checkcast     #42                 // class scalaz/Maybe$Just
      56: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      59: checkcast     #220                // class scala/Tuple2
      62: astore        5
      64: aload         5
      66: ifnull        104
      69: aload         5
      71: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      74: astore        6
      76: aload         5
      78: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      81: astore        7
      83: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      86: aload         6
      88: aload_1
      89: aload         7
      91: aload_2
      92: invokedynamic #525,  0            // InvokeDynamic #17:apply:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/Function0;
      97: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
     100: astore_3
     101: goto          114
     104: new           #243                // class scala/MatchError
     107: dup
     108: aload         4
     110: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
     117: invokedynamic #530,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
     122: astore        9
     124: dup
     125: ifnonnull     130
     128: aconst_null
     129: athrow
     130: astore        8
     132: aload_0
     133: invokestatic  #528                // Method $anonfun$positions$3:(Lscalaz/Zipper;)Lscalaz/Maybe;
     136: astore        11
     138: aload         11
     140: instanceof    #37                 // class scalaz/Maybe$Empty
     143: ifeq          160
     146: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     149: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     152: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
     155: astore        10
     157: goto          234
     160: aload         11
     162: instanceof    #42                 // class scalaz/Maybe$Just
     165: ifeq          224
     168: aload         11
     170: checkcast     #42                 // class scalaz/Maybe$Just
     173: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     176: checkcast     #220                // class scala/Tuple2
     179: astore        12
     181: aload         12
     183: ifnull        224
     186: aload         12
     188: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
     191: astore        13
     193: aload         12
     195: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
     198: astore        14
     200: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
     203: aload         13
     205: aload         8
     207: aload         14
     209: aload         9
     211: invokedynamic #525,  0            // InvokeDynamic #17:apply:(Lscalaz/std/StreamFunctions;Ljava/lang/Object;Lscala/Function1;)Lscala/Function0;
     216: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
     219: astore        10
     221: goto          234
     224: new           #243                // class scala/MatchError
     227: dup
     228: aload         11
     230: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     233: athrow
     234: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     237: aload_3
     238: aload_0
     239: aload         10
     241: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     244: areturn

  public int index();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: invokevirtual #537                // Method scala/collection/immutable/Stream.length:()I
       7: ireturn

  public scalaz.Zipper<A> nextC();
    Code:
       0: new           #220                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       8: aload_0
       9: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      12: astore        12
      14: astore        11
      16: aload         11
      18: aload         12
      20: invokespecial #410                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      23: astore_2
      24: aload         11
      26: astore_3
      27: aload         12
      29: astore        4
      31: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      34: aload_3
      35: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          57
      41: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      44: aload         4
      46: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          57
      52: aload_0
      53: astore_1
      54: goto          239
      57: aload         12
      59: astore        5
      61: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      64: aload         5
      66: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          146
      72: aload_0
      73: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      76: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      79: astore        6
      81: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      84: aload_0
      85: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      88: aload         6
      90: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
      93: aload         6
      95: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      98: checkcast     #22                 // class scala/collection/immutable/Stream
     101: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     104: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     107: getstatic     #543                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     110: iconst_1
     111: anewarray     #5                  // class java/lang/Object
     114: dup
     115: iconst_0
     116: aload_0
     117: invokevirtual #127                // Method focus:()Ljava/lang/Object;
     120: aastore
     121: invokevirtual #547                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     124: invokevirtual #550                // Method scala/collection/immutable/Stream$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
     127: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
     130: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     133: invokevirtual #170                // Method scala/collection/immutable/Stream.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     136: checkcast     #22                 // class scala/collection/immutable/Stream
     139: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     142: astore_1
     143: goto          239
     146: aload         12
     148: astore        7
     150: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     153: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     156: aload         7
     158: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     161: astore        8
     163: aload         8
     165: invokevirtual #215                // Method scala/Option.isEmpty:()Z
     168: ifne          230
     171: aload         8
     173: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     176: checkcast     #220                // class scala/Tuple2
     179: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
     182: astore        9
     184: aload         8
     186: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
     189: checkcast     #220                // class scala/Tuple2
     192: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
     195: checkcast     #22                 // class scala/collection/immutable/Stream
     198: astore        10
     200: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     203: getstatic     #229                // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
     206: aload_0
     207: invokevirtual #127                // Method focus:()Ljava/lang/Object;
     210: aload_0
     211: invokedynamic #555,  0            // InvokeDynamic #19:apply:(Lscalaz/Zipper;)Lscala/Function0;
     216: invokevirtual #237                // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
     219: aload         9
     221: aload         10
     223: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     226: astore_1
     227: goto          239
     230: new           #243                // class scala/MatchError
     233: dup
     234: aload_2
     235: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     238: athrow
     239: aload_1
     240: areturn

  public scalaz.Zipper<A> previousC();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: aload_0
       5: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       8: astore        7
      10: astore        6
      12: aload         6
      14: astore_2
      15: aload         7
      17: astore_3
      18: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      21: aload_2
      22: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          43
      28: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      31: aload_3
      32: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          43
      38: aload_0
      39: astore_1
      40: goto          137
      43: aload         6
      45: astore        4
      47: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      50: aload         4
      52: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          132
      58: aload_0
      59: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      62: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      65: astore        5
      67: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      70: aload         5
      72: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
      75: checkcast     #22                 // class scala/collection/immutable/Stream
      78: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      81: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      84: getstatic     #543                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      87: iconst_1
      88: anewarray     #5                  // class java/lang/Object
      91: dup
      92: iconst_0
      93: aload_0
      94: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      97: aastore
      98: invokevirtual #547                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     101: invokevirtual #550                // Method scala/collection/immutable/Stream$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/Stream;
     104: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
     107: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     110: invokevirtual #170                // Method scala/collection/immutable/Stream.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     113: checkcast     #22                 // class scala/collection/immutable/Stream
     116: aload         5
     118: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
     121: aload_0
     122: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
     125: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     128: astore_1
     129: goto          137
     132: aload_0
     133: invokevirtual #559                // Method tryPrevious:()Lscalaz/Zipper;
     136: astore_1
     137: aload_1
     138: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> deleteLeftC();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: astore_3
       5: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
       8: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      11: aload_3
      12: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      15: astore        4
      17: aload         4
      19: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      22: ifne          78
      25: aload         4
      27: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      30: checkcast     #220                // class scala/Tuple2
      33: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: astore        5
      38: aload         4
      40: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #220                // class scala/Tuple2
      46: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #22                 // class scala/collection/immutable/Stream
      52: astore        6
      54: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      57: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      60: aload         6
      62: aload         5
      64: aload_0
      65: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      68: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      71: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      74: astore_1
      75: goto          203
      78: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      81: aload_3
      82: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          194
      88: aload_0
      89: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      92: astore        7
      94: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      97: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     100: aload         7
     102: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     105: invokevirtual #215                // Method scala/Option.isEmpty:()Z
     108: ifne          158
     111: aload_0
     112: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
     115: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
     118: astore        8
     120: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     123: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     126: aload         8
     128: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
     131: checkcast     #22                 // class scala/collection/immutable/Stream
     134: aload         8
     136: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
     139: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     142: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     145: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
     148: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     151: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     154: astore_2
     155: goto          189
     158: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     161: aload         7
     163: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     166: ifeq          179
     169: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     172: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     175: astore_2
     176: goto          189
     179: new           #243                // class scala/MatchError
     182: dup
     183: aload         7
     185: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     188: athrow
     189: aload_2
     190: astore_1
     191: goto          203
     194: new           #243                // class scala/MatchError
     197: dup
     198: aload_3
     199: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     202: athrow
     203: aload_1
     204: areturn

  public scalaz.Zipper<A> deleteLeftCOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #564                // Method deleteLeftC:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> deleteRightC();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: astore_3
       5: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
       8: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      11: aload_3
      12: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      15: astore        4
      17: aload         4
      19: invokevirtual #215                // Method scala/Option.isEmpty:()Z
      22: ifne          78
      25: aload         4
      27: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      30: checkcast     #220                // class scala/Tuple2
      33: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
      36: astore        5
      38: aload         4
      40: invokevirtual #218                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #220                // class scala/Tuple2
      46: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #22                 // class scala/collection/immutable/Stream
      52: astore        6
      54: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      57: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      60: aload_0
      61: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      64: aload         5
      66: aload         6
      68: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      71: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      74: astore_1
      75: goto          203
      78: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      81: aload_3
      82: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          194
      88: aload_0
      89: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      92: astore        7
      94: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
      97: invokevirtual #206                // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     100: aload         7
     102: invokevirtual #209                // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     105: invokevirtual #215                // Method scala/Option.isEmpty:()Z
     108: ifne          158
     111: aload_0
     112: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
     115: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
     118: astore        8
     120: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     123: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     126: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
     129: invokevirtual #308                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
     132: invokevirtual #310                // Method scala/collection/immutable/Stream$.empty:()Lscala/collection/immutable/Stream;
     135: aload         8
     137: invokevirtual #433                // Method scala/collection/immutable/Stream.head:()Ljava/lang/Object;
     140: aload         8
     142: invokevirtual #436                // Method scala/collection/immutable/Stream.tail:()Ljava/lang/Object;
     145: checkcast     #22                 // class scala/collection/immutable/Stream
     148: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     151: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
     154: astore_2
     155: goto          189
     158: getstatic     #186                // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     161: aload         7
     163: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     166: ifeq          179
     169: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
     172: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
     175: astore_2
     176: goto          189
     179: new           #243                // class scala/MatchError
     182: dup
     183: aload         7
     185: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     188: athrow
     189: aload_2
     190: astore_1
     191: goto          203
     194: new           #243                // class scala/MatchError
     197: dup
     198: aload_3
     199: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     202: athrow
     203: aload_1
     204: areturn

  public scalaz.Maybe<scalaz.Zipper<A>> deleteC();
    Code:
       0: aload_0
       1: invokevirtual #569                // Method deleteRightC:()Lscalaz/Maybe;
       4: areturn

  public scalaz.Zipper<A> deleteRightCOr(scala.Function0<scalaz.Zipper<A>>);
    Code:
       0: aload_0
       1: invokevirtual #569                // Method deleteRightC:()Lscalaz/Maybe;
       4: dup
       5: ifnonnull     10
       8: aconst_null
       9: athrow
      10: astore_2
      11: aload_2
      12: instanceof    #42                 // class scalaz/Maybe$Just
      15: ifeq          32
      18: aload_2
      19: checkcast     #42                 // class scalaz/Maybe$Just
      22: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      25: invokestatic  #258                // Method scalaz/Maybe.$anonfun$getOrElse$1:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: goto          58
      32: aload_2
      33: instanceof    #37                 // class scalaz/Maybe$Empty
      36: ifeq          49
      39: aload_1
      40: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      45: astore_3
      46: goto          58
      49: new           #243                // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: aload_3
      59: checkcast     #2                  // class scalaz/Zipper
      62: areturn

  public <G, B> G traverse(scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: invokedynamic #584,  0            // InvokeDynamic #20:apply:()Lscala/Function3;
       5: invokeinterface #589,  1          // InterfaceMethod scala/Function3.curried:()Lscala/Function1;
      10: astore_3
      11: getstatic     #594                // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: aload_2
      20: aload_0
      21: aload_2
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokedynamic #602,  0            // InvokeDynamic #21:apply:(Lscalaz/Zipper;Lscalaz/Applicative;Lscala/Function1;Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      30: invokeinterface #608,  2          // InterfaceMethod scalaz/Applicative.apF:(Lscala/Function0;)Lscala/Function1;
      35: getstatic     #613                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
      38: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      41: invokevirtual #617                // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      44: astore        4
      46: ifnonnull     51
      49: aconst_null
      50: athrow
      51: aload         4
      53: aload_0
      54: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      57: aload_1
      58: aload_2
      59: invokeinterface #622,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      64: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn

  public <B> scalaz.Zipper<B> ap(scala.Function0<scalaz.Zipper<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: aload_1
       5: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      10: checkcast     #2                  // class scalaz/Zipper
      13: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      16: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      19: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      22: invokevirtual #403                // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      25: checkcast     #22                 // class scala/collection/immutable/Stream
      28: invokedynamic #632,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
      33: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      36: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #125                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #22                 // class scala/collection/immutable/Stream
      45: astore_2
      46: aload_0
      47: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      50: aload_1
      51: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      56: checkcast     #2                  // class scalaz/Zipper
      59: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      62: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      65: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      68: invokevirtual #403                // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      71: checkcast     #22                 // class scala/collection/immutable/Stream
      74: invokedynamic #637,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
      79: getstatic     #118                // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      82: invokevirtual #122                // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      85: invokevirtual #125                // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      88: checkcast     #22                 // class scala/collection/immutable/Stream
      91: astore_3
      92: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      95: aload_2
      96: aload_1
      97: invokeinterface #262,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     102: checkcast     #2                  // class scalaz/Zipper
     105: invokevirtual #127                // Method focus:()Ljava/lang/Object;
     108: checkcast     #129                // class scala/Function1
     111: aload_0
     112: invokevirtual #127                // Method focus:()Ljava/lang/Object;
     115: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     120: aload_3
     121: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     124: areturn

  public java.lang.String toString();
    Code:
       0: new           #641                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #642                // int 27
       7: invokespecial #645                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #647                // String Zipper(<lefts>,
      13: invokevirtual #651                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      20: invokevirtual #654                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: ldc_w         #656                // String , <rights>)
      26: invokevirtual #651                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #658                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public <A> scalaz.Zipper<A> copy(scala.collection.immutable.Stream<A>, A, scala.collection.immutable.Stream<A>);
    Code:
       0: new           #2                  // class scalaz/Zipper
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #661                // Method "<init>":(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)V
      10: areturn

  public <A> scala.collection.immutable.Stream<A> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: areturn

  public <A> A copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       4: areturn

  public <A> scala.collection.immutable.Stream<A> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #669                // String Zipper
       3: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      32: areturn
      33: aload_0
      34: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      37: areturn
      38: aload_0
      39: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      42: areturn
      43: new           #675                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #368                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #676                // Method java/lang/Object.toString:()Ljava/lang/String;
      54: invokespecial #679                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #687                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #691                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class scalaz/Zipper
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #687                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #697                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     112
       5: aload_1
       6: instanceof    #2                  // class scalaz/Zipper
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          114
      23: aload_1
      24: checkcast     #2                  // class scalaz/Zipper
      27: astore_3
      28: aload_0
      29: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      32: aload_3
      33: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      36: astore        4
      38: dup
      39: ifnonnull     51
      42: pop
      43: aload         4
      45: ifnull        59
      48: goto          108
      51: aload         4
      53: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          108
      59: aload_0
      60: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      63: aload_3
      64: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      67: invokestatic  #700                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      70: ifeq          108
      73: aload_0
      74: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      77: aload_3
      78: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
      81: astore        5
      83: dup
      84: ifnonnull     96
      87: pop
      88: aload         5
      90: ifnull        104
      93: goto          108
      96: aload         5
      98: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ifeq          114
     112: iconst_1
     113: ireturn
     114: iconst_0
     115: ireturn

  public static final scala.collection.immutable.Stream $anonfun$toStream$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$next$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$previous$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.runtime.Nothing$ $anonfun$tryPrevious$1();
    Code:
       0: getstatic     #706                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       3: ldc_w         #708                // String cannot move to previous element
       6: invokevirtual #712                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       9: areturn

  public static final scala.collection.immutable.Stream $anonfun$insertLeft$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$insertRight$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$foldLeft$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final java.lang.Object $anonfun$foldLeft$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokeinterface #717,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static final scala.collection.immutable.Stream $anonfun$foldRight$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final java.lang.Object $anonfun$foldRight$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #726,  0            // InvokeDynamic #24:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #717,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldRight$5(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldRight$4(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #732,  0            // InvokeDynamic #25:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #717,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final int $anonfun$length$1(int, java.lang.Object);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: ireturn

  public static final boolean $anonfun$withFocus$1();
    Code:
       0: iconst_0
       1: ireturn

  public static final boolean $anonfun$withFocus$2();
    Code:
       0: iconst_0
       1: ireturn

  public static final scalaz.Maybe $anonfun$move$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #254                // Method next:()Lscalaz/Maybe;
       4: areturn

  public static final scalaz.Maybe $anonfun$move$2(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #275                // Method previous:()Lscalaz/Maybe;
       4: areturn

  private final scalaz.Maybe move0$1(scalaz.Maybe, int);
    Code:
       0: iload_2
       1: iconst_0
       2: if_icmple     15
       5: aload_0
       6: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       9: invokevirtual #383                // Method scala/collection/immutable/Stream.isEmpty:()Z
      12: ifne          30
      15: iload_2
      16: iconst_0
      17: if_icmpge     37
      20: aload_0
      21: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      24: invokevirtual #383                // Method scala/collection/immutable/Stream.isEmpty:()Z
      27: ifeq          37
      30: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      33: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      36: areturn
      37: iload_2
      38: iconst_0
      39: if_icmpne     44
      42: aload_1
      43: areturn
      44: iload_2
      45: iconst_0
      46: if_icmple     111
      49: aload_1
      50: ifnonnull     55
      53: aconst_null
      54: athrow
      55: aload_1
      56: instanceof    #42                 // class scalaz/Maybe$Just
      59: ifeq          79
      62: aload_1
      63: checkcast     #42                 // class scalaz/Maybe$Just
      66: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      69: checkcast     #2                  // class scalaz/Zipper
      72: invokestatic  #741                // Method $anonfun$move$1:(Lscalaz/Zipper;)Lscalaz/Maybe;
      75: astore_3
      76: goto          102
      79: aload_1
      80: instanceof    #37                 // class scalaz/Maybe$Empty
      83: ifeq          93
      86: invokestatic  #744                // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
      89: astore_3
      90: goto          102
      93: new           #243                // class scala/MatchError
      96: dup
      97: aload_1
      98: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     101: athrow
     102: aload_3
     103: iload_2
     104: iconst_1
     105: isub
     106: istore_2
     107: astore_1
     108: goto          0
     111: aload_1
     112: ifnonnull     117
     115: aconst_null
     116: athrow
     117: aload_1
     118: instanceof    #42                 // class scalaz/Maybe$Just
     121: ifeq          142
     124: aload_1
     125: checkcast     #42                 // class scalaz/Maybe$Just
     128: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
     131: checkcast     #2                  // class scalaz/Zipper
     134: invokestatic  #746                // Method $anonfun$move$2:(Lscalaz/Zipper;)Lscalaz/Maybe;
     137: astore        4
     139: goto          166
     142: aload_1
     143: instanceof    #37                 // class scalaz/Maybe$Empty
     146: ifeq          157
     149: invokestatic  #744                // Method scalaz/Maybe.$anonfun$flatMap$1:()Lscalaz/Maybe;
     152: astore        4
     154: goto          166
     157: new           #243                // class scala/MatchError
     160: dup
     161: aload_1
     162: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     165: athrow
     166: aload         4
     168: iload_2
     169: iconst_1
     170: iadd
     171: istore_2
     172: astore_1
     173: goto          0

  public static final scala.collection.immutable.Stream $anonfun$start$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #134                // Method rights:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scala.collection.immutable.Stream $anonfun$end$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final boolean $anonfun$findZ$1(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       5: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: ireturn

  private final scalaz.Maybe go$1(scalaz.Maybe, scala.Function1, scala.Function1);
    Code:
       0: aload_1
       1: instanceof    #42                 // class scalaz/Maybe$Just
       4: ifeq          67
       7: aload_1
       8: checkcast     #42                 // class scalaz/Maybe$Just
      11: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      14: checkcast     #2                  // class scalaz/Zipper
      17: astore        5
      19: aload_2
      20: aload         5
      22: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      25: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      33: ifeq          47
      36: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      39: aload         5
      41: invokevirtual #241                // Method scalaz/Maybe$.just:(Ljava/lang/Object;)Lscalaz/Maybe;
      44: goto          62
      47: aload_3
      48: aload         5
      50: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #39                 // class scalaz/Maybe
      58: astore_1
      59: goto          0
      62: astore        4
      64: goto          94
      67: aload_1
      68: instanceof    #37                 // class scalaz/Maybe$Empty
      71: ifeq          85
      74: getstatic     #195                // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
      77: invokevirtual #198                // Method scalaz/Maybe$.empty:()Lscalaz/Maybe;
      80: astore        4
      82: goto          94
      85: new           #243                // class scala/MatchError
      88: dup
      89: aload_1
      90: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: aload         4
      96: areturn

  public static final scalaz.Maybe $anonfun$findNext$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #254                // Method next:()Lscalaz/Maybe;
       4: areturn

  public static final scalaz.Maybe $anonfun$findPrevious$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #275                // Method previous:()Lscalaz/Maybe;
       4: areturn

  public static final scala.Tuple2 $anonfun$positions$2(scalaz.Zipper);
    Code:
       0: new           #220                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #410                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final scalaz.Maybe $anonfun$positions$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #275                // Method previous:()Lscalaz/Maybe;
       4: invokedynamic #763,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
       9: astore_2
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: astore_1
      17: aload_2
      18: invokedynamic #769,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
      23: invokeinterface #772,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      28: astore_3
      29: aload_1
      30: instanceof    #42                 // class scalaz/Maybe$Just
      33: ifeq          58
      36: aload_1
      37: checkcast     #42                 // class scalaz/Maybe$Just
      40: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      53: astore        4
      55: goto          82
      58: aload_1
      59: instanceof    #37                 // class scalaz/Maybe$Empty
      62: ifeq          73
      65: invokestatic  #775                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      68: astore        4
      70: goto          82
      73: new           #243                // class scala/MatchError
      76: dup
      77: aload_1
      78: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aload         4
      84: checkcast     #39                 // class scalaz/Maybe
      87: areturn

  public static final scala.Tuple2 $anonfun$positions$4(scalaz.Zipper);
    Code:
       0: new           #220                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #410                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  public static final scalaz.Maybe $anonfun$positions$3(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #254                // Method next:()Lscalaz/Maybe;
       4: invokedynamic #785,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
       9: astore_2
      10: dup
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: astore_1
      17: aload_2
      18: invokedynamic #769,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
      23: invokeinterface #772,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
      28: astore_3
      29: aload_1
      30: instanceof    #42                 // class scalaz/Maybe$Just
      33: ifeq          58
      36: aload_1
      37: checkcast     #42                 // class scalaz/Maybe$Just
      40: invokevirtual #255                // Method scalaz/Maybe$Just.get:()Ljava/lang/Object;
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      53: astore        4
      55: goto          82
      58: aload_1
      59: instanceof    #37                 // class scalaz/Maybe$Empty
      62: ifeq          73
      65: invokestatic  #775                // Method scalaz/Maybe.$anonfun$map$2:()Lscalaz/Maybe;
      68: astore        4
      70: goto          82
      73: new           #243                // class scala/MatchError
      76: dup
      77: aload_1
      78: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aload         4
      84: checkcast     #39                 // class scalaz/Maybe
      87: areturn

  public static final scala.collection.immutable.Stream $anonfun$nextC$1(scalaz.Zipper);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
       4: areturn

  public static final scalaz.Zipper $anonfun$traverse$1(scala.collection.immutable.Stream, java.lang.Object, scala.collection.immutable.Stream);
    Code:
       0: getstatic     #60                 // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #73                 // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
       9: areturn

  public static final scala.Function1 $anonfun$traverse$4(scala.Function1, scala.collection.immutable.Stream);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
       5: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #129                // class scala/Function1
      13: areturn

  public static final java.lang.Object $anonfun$traverse$3(scalaz.Zipper, scalaz.Applicative, scala.Function1, scalaz.Applicative, scala.Function1);
    Code:
       0: aload_1
       1: getstatic     #613                // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       4: getstatic     #462                // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       7: invokevirtual #617                // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      10: astore        5
      12: ifnonnull     17
      15: aconst_null
      16: athrow
      17: aload         5
      19: aload_0
      20: invokevirtual #113                // Method lefts:()Lscala/collection/immutable/Stream;
      23: invokevirtual #139                // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      26: aload_2
      27: aload_3
      28: invokeinterface #622,  4          // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      33: aload         4
      35: invokedynamic #802,  0            // InvokeDynamic #29:apply:(Lscala/Function1;)Lscala/Function1;
      40: invokeinterface #805,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      45: areturn

  public static final java.lang.Object $anonfun$traverse$2(scalaz.Zipper, scalaz.Applicative, scala.Function1, scalaz.Applicative, scala.Function1);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #809,  0            // InvokeDynamic #30:apply:(Lscalaz/Zipper;Lscalaz/Applicative;Lscala/Function1;Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      12: invokeinterface #608,  2          // InterfaceMethod scalaz/Applicative.apF:(Lscala/Function0;)Lscala/Function1;
      17: aload_2
      18: aload_0
      19: invokevirtual #127                // Method focus:()Ljava/lang/Object;
      22: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: areturn

  public static final java.lang.Object $anonfun$ap$1(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #129                // class scala/Function1
      16: aload_2
      17: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_1
      23: goto          35
      26: new           #243                // class scala/MatchError
      29: dup
      30: aload_0
      31: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      34: athrow
      35: aload_1
      36: areturn

  public static final java.lang.Object $anonfun$ap$2(scala.Tuple2);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
       8: astore_2
       9: aload_0
      10: invokevirtual #226                // Method scala/Tuple2._2:()Ljava/lang/Object;
      13: checkcast     #129                // class scala/Function1
      16: aload_2
      17: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_1
      23: goto          35
      26: new           #243                // class scala/MatchError
      29: dup
      30: aload_0
      31: invokespecial #247                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      34: athrow
      35: aload_1
      36: areturn

  public scalaz.Zipper(scala.collection.immutable.Stream<A>, A, scala.collection.immutable.Stream<A>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #99                 // Field lefts:Lscala/collection/immutable/Stream;
       5: aload_0
       6: aload_2
       7: putfield      #105                // Field focus:Ljava/lang/Object;
      10: aload_0
      11: aload_3
      12: putfield      #107                // Field rights:Lscala/collection/immutable/Stream;
      15: aload_0
      16: invokespecial #817                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #821                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      23: return

  public static final java.lang.Object $anonfun$length$1$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #379                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       4: aload_1
       5: invokestatic  #823                // Method $anonfun$length$1:(ILjava/lang/Object;)I
       8: invokestatic  #368                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: areturn

  public static final java.lang.Object $anonfun$findZ$1$adapted(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method focus:()Ljava/lang/Object;
       5: invokeinterface #132,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #454                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      13: invokestatic  #407                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      16: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #843,  0            // InvokeDynamic #31:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
