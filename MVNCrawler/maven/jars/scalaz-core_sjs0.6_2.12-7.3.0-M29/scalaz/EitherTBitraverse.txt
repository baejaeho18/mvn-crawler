Compiled from "EitherT.scala"
public interface scalaz.EitherTBitraverse<F> extends scalaz.Bitraverse<?>, scalaz.EitherTBifunctor<F>, scalaz.EitherTBifoldable<F> {
  public abstract scalaz.Traverse<F> F();

  public static java.lang.Object bitraverseImpl$(scalaz.EitherTBitraverse, scalaz.EitherT, scala.Function1, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #34                 // InterfaceMethod bitraverseImpl:(Lscalaz/EitherT;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       9: areturn

  public default <G, A, B, C, D> G bitraverseImpl(scalaz.EitherT<A, F, B>, scala.Function1<A, G>, scala.Function1<B, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #41,  1           // InterfaceMethod F:()Lscalaz/Traverse;
       7: astore        5
       9: ifnonnull     14
      12: aconst_null
      13: athrow
      14: getstatic     #47                 // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         4
      24: aload         5
      26: aload_1
      27: invokevirtual #53                 // Method scalaz/EitherT.run:()Ljava/lang/Object;
      30: getstatic     #58                 // Field scalaz/Bitraverse$.MODULE$:Lscalaz/Bitraverse$;
      33: getstatic     #63                 // Field scalaz/$bslash$div$.MODULE$:Lscalaz/$bslash$div$;
      36: invokevirtual #67                 // Method scalaz/$bslash$div$.DisjunctionInstances2:()Lscalaz/Bitraverse;
      39: astore        6
      41: ifnonnull     46
      44: aconst_null
      45: athrow
      46: aload         6
      48: aload_2
      49: aload_3
      50: aload         4
      52: invokeinterface #71,  4           // InterfaceMethod scalaz/Bitraverse.bitraverseF:(Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;)Lscala/Function1;
      57: aload         4
      59: invokeinterface #77,  4           // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      64: invokedynamic #100,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      69: invokeinterface #106,  3          // InterfaceMethod scalaz/Applicative.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      74: areturn

  public static void $init$(scalaz.EitherTBitraverse);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #125,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
