Compiled from "Zipper.scala"
public final class scalaz.ZipperInstances$$anon$1 implements scalaz.Traverse1<scalaz.Zipper>, scalaz.Applicative<scalaz.Zipper>, scalaz.Comonad<scalaz.Zipper> {
  private final scalaz.syntax.ComonadSyntax<scalaz.Zipper> comonadSyntax;

  private final scalaz.syntax.CobindSyntax<scalaz.Zipper> cobindSyntax;

  private final scalaz.syntax.ApplicativeSyntax<scalaz.Zipper> applicativeSyntax;

  private final scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper> invariantApplicativeSyntax;

  private final scalaz.syntax.ApplySyntax<scalaz.Zipper> applySyntax;

  private final scalaz.syntax.Traverse1Syntax<scalaz.Zipper> traverse1Syntax;

  private final scalaz.syntax.Foldable1Syntax<scalaz.Zipper> foldable1Syntax;

  private final scalaz.syntax.TraverseSyntax<scalaz.Zipper> traverseSyntax;

  private final scalaz.syntax.FoldableSyntax<scalaz.Zipper> foldableSyntax;

  private final scalaz.syntax.FunctorSyntax<scalaz.Zipper> functorSyntax;

  private final scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper> invariantFunctorSyntax;

  public final java.lang.Object copure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // InterfaceMethod scalaz/Comonad.copure$:(Lscalaz/Comonad;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scalaz.Comonad<scalaz.Zipper>.ComonadLaws comonadLaw();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod scalaz/Comonad.comonadLaw$:(Lscalaz/Comonad;)Lscalaz/Comonad$ComonadLaws;
       4: areturn

  public final java.lang.Object extend(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #151                // InterfaceMethod scalaz/Cobind.extend$:(Lscalaz/Cobind;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scalaz.Cobind<scalaz.Zipper>.CobindLaws cobindLaw();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod scalaz/Cobind.cobindLaw$:(Lscalaz/Cobind;)Lscalaz/Cobind$CobindLaws;
       4: areturn

  public final java.lang.Object pure(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod scalaz/Applicative.pure$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object apply2(scala.Function0, scala.Function0, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #174                // InterfaceMethod scalaz/Applicative.apply2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #183                // InterfaceMethod scalaz/Applicative.traverse$:(Lscalaz/Applicative;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Traverse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #192                // InterfaceMethod scalaz/Applicative.sequence$:(Lscalaz/Applicative;Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> par();
    Code:
       0: aload_0
       1: invokestatic  #199                // InterfaceMethod scalaz/Applicative.par$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // InterfaceMethod scalaz/Applicative.xproduct0$:(Lscalaz/Applicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #212                // InterfaceMethod scalaz/Applicative.xproduct1$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #219                // InterfaceMethod scalaz/Applicative.xproduct2$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #226                // InterfaceMethod scalaz/Applicative.xproduct3$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #234                // InterfaceMethod scalaz/Applicative.xproduct4$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object replicateM(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #242                // InterfaceMethod scalaz/Applicative.replicateM$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object replicateM_(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #247                // InterfaceMethod scalaz/Applicative.replicateM_$:(Lscalaz/Applicative;ILjava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scala.collection.immutable.List, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #254                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscala/collection/immutable/List;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object filterM(scalaz.IList, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #259                // InterfaceMethod scalaz/Applicative.filterM$:(Lscalaz/Applicative;Lscalaz/IList;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object unlessM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #267                // InterfaceMethod scalaz/Applicative.unlessM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object whenM(boolean, scala.Function0);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #272                // InterfaceMethod scalaz/Applicative.whenM$:(Lscalaz/Applicative;ZLscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <G> scalaz.Applicative<?> compose(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod scalaz/Applicative.compose$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public <G> scalaz.Applicative<?> product(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #284                // InterfaceMethod scalaz/Applicative.product$:(Lscalaz/Applicative;Lscalaz/Applicative;)Lscalaz/Applicative;
       5: areturn

  public scalaz.Applicative<scalaz.Zipper> flip();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod scalaz/Applicative.flip$:(Lscalaz/Applicative;)Lscalaz/Applicative;
       4: areturn

  public java.lang.Object plusA(scala.Function0, scala.Function0, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #298                // InterfaceMethod scalaz/Applicative.plusA$:(Lscalaz/Applicative;Lscala/Function0;Lscala/Function0;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public scalaz.Applicative<scalaz.Zipper>.ApplicativeLaw applicativeLaw();
    Code:
       0: aload_0
       1: invokestatic  #306                // InterfaceMethod scalaz/Applicative.applicativeLaw$:(Lscalaz/Applicative;)Lscalaz/Applicative$ApplicativeLaw;
       4: areturn

  public final java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #313                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #319                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #325                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #331                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public final java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #337                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #343                // InterfaceMethod scalaz/Apply.traverse1$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Traverse1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Traverse1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #350                // InterfaceMethod scalaz/Apply.sequence1$:(Lscalaz/Apply;Ljava/lang/Object;Lscalaz/Traverse1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object forever(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #355                // InterfaceMethod scalaz/Apply.forever$:(Lscalaz/Apply;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public <S, A, B> scalaz.Maybe<scalaz.Zipper<B>> unfoldrOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scalaz.Zipper<A>, S>>>, scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #364                // InterfaceMethod scalaz/Apply.unfoldrOpt$:(Lscalaz/Apply;Ljava/lang/Object;Lscala/Function1;Lscalaz/Reducer;)Lscalaz/Maybe;
       7: areturn

  public <G> scalaz.Apply<?> compose(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod scalaz/Apply.compose$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <G> scalaz.Apply<?> product(scalaz.Apply<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #373                // InterfaceMethod scalaz/Apply.product$:(Lscalaz/Apply;Lscalaz/Apply;)Lscalaz/Apply;
       5: areturn

  public <A, B> scala.Function1<scalaz.Zipper<A>, scalaz.Zipper<B>> apF(scala.Function0<scalaz.Zipper<scala.Function1<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // InterfaceMethod scalaz/Apply.apF$:(Lscalaz/Apply;Lscala/Function0;)Lscala/Function1;
       5: areturn

  public java.lang.Object ap2(scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #386                // InterfaceMethod scalaz/Apply.ap2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object ap3(scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #393                // InterfaceMethod scalaz/Apply.ap3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object ap4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #400                // InterfaceMethod scalaz/Apply.ap4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object ap5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #407                // InterfaceMethod scalaz/Apply.ap5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object ap6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #414                // InterfaceMethod scalaz/Apply.ap6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object ap7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #421                // InterfaceMethod scalaz/Apply.ap7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object ap8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #428                // InterfaceMethod scalaz/Apply.ap8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply3(scala.Function0, scala.Function0, scala.Function0, scala.Function3);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #434                // InterfaceMethod scalaz/Apply.apply3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #440                // InterfaceMethod scalaz/Apply.apply4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object apply5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function5);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #446                // InterfaceMethod scalaz/Apply.apply5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function5;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object apply6(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function6);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #453                // InterfaceMethod scalaz/Apply.apply6$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function6;)Ljava/lang/Object;
      15: areturn

  public java.lang.Object apply7(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function7);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #460                // InterfaceMethod scalaz/Apply.apply7$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function7;)Ljava/lang/Object;
      17: areturn

  public java.lang.Object apply8(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function8);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #467                // InterfaceMethod scalaz/Apply.apply8$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function8;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object apply9(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function9);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: invokestatic  #475                // InterfaceMethod scalaz/Apply.apply9$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function9;)Ljava/lang/Object;
      21: areturn

  public java.lang.Object apply10(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function10);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: invokestatic  #483                // InterfaceMethod scalaz/Apply.apply10$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function10;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object apply11(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function11);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: invokestatic  #491                // InterfaceMethod scalaz/Apply.apply11$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function11;)Ljava/lang/Object;
      25: areturn

  public java.lang.Object apply12(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function12);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aload         11
      20: aload         12
      22: aload         13
      24: invokestatic  #499                // InterfaceMethod scalaz/Apply.apply12$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function12;)Ljava/lang/Object;
      27: areturn

  public final java.lang.Object applying1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #506                // InterfaceMethod scalaz/Apply.applying1$:(Lscalaz/Apply;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object applying2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #512                // InterfaceMethod scalaz/Apply.applying2$:(Lscalaz/Apply;Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object applying3(scala.Function3, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #518                // InterfaceMethod scalaz/Apply.applying3$:(Lscalaz/Apply;Lscala/Function3;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object applying4(scala.Function4, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #524                // InterfaceMethod scalaz/Apply.applying4$:(Lscalaz/Apply;Lscala/Function4;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #530                // InterfaceMethod scalaz/Apply.tuple2$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object tuple3(scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #536                // InterfaceMethod scalaz/Apply.tuple3$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object tuple4(scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #542                // InterfaceMethod scalaz/Apply.tuple4$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object tuple5(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #548                // InterfaceMethod scalaz/Apply.tuple5$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      11: areturn

  public <A, B, C> scala.Function2<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>> lift2(scala.Function2<A, B, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #555                // InterfaceMethod scalaz/Apply.lift2$:(Lscalaz/Apply;Lscala/Function2;)Lscala/Function2;
       5: areturn

  public <A, B, C, D> scala.Function3<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>> lift3(scala.Function3<A, B, C, D>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #562                // InterfaceMethod scalaz/Apply.lift3$:(Lscalaz/Apply;Lscala/Function3;)Lscala/Function3;
       5: areturn

  public <A, B, C, D, E> scala.Function4<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>> lift4(scala.Function4<A, B, C, D, E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #569                // InterfaceMethod scalaz/Apply.lift4$:(Lscalaz/Apply;Lscala/Function4;)Lscala/Function4;
       5: areturn

  public <A, B, C, D, E, R> scala.Function5<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<R>> lift5(scala.Function5<A, B, C, D, E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #576                // InterfaceMethod scalaz/Apply.lift5$:(Lscalaz/Apply;Lscala/Function5;)Lscala/Function5;
       5: areturn

  public <A, B, C, D, E, FF, R> scala.Function6<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<R>> lift6(scala.Function6<A, B, C, D, E, FF, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #583                // InterfaceMethod scalaz/Apply.lift6$:(Lscalaz/Apply;Lscala/Function6;)Lscala/Function6;
       5: areturn

  public <A, B, C, D, E, FF, G, R> scala.Function7<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<R>> lift7(scala.Function7<A, B, C, D, E, FF, G, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // InterfaceMethod scalaz/Apply.lift7$:(Lscalaz/Apply;Lscala/Function7;)Lscala/Function7;
       5: areturn

  public <A, B, C, D, E, FF, G, H, R> scala.Function8<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<H>, scalaz.Zipper<R>> lift8(scala.Function8<A, B, C, D, E, FF, G, H, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #597                // InterfaceMethod scalaz/Apply.lift8$:(Lscalaz/Apply;Lscala/Function8;)Lscala/Function8;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, R> scala.Function9<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<R>> lift9(scala.Function9<A, B, C, D, E, FF, G, H, I, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #604                // InterfaceMethod scalaz/Apply.lift9$:(Lscalaz/Apply;Lscala/Function9;)Lscala/Function9;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, R> scala.Function10<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<R>> lift10(scala.Function10<A, B, C, D, E, FF, G, H, I, J, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #611                // InterfaceMethod scalaz/Apply.lift10$:(Lscalaz/Apply;Lscala/Function10;)Lscala/Function10;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, R> scala.Function11<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<K>, scalaz.Zipper<R>> lift11(scala.Function11<A, B, C, D, E, FF, G, H, I, J, K, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #618                // InterfaceMethod scalaz/Apply.lift11$:(Lscalaz/Apply;Lscala/Function11;)Lscala/Function11;
       5: areturn

  public <A, B, C, D, E, FF, G, H, I, J, K, L, R> scala.Function12<scalaz.Zipper<A>, scalaz.Zipper<B>, scalaz.Zipper<C>, scalaz.Zipper<D>, scalaz.Zipper<E>, scalaz.Zipper<FF>, scalaz.Zipper<G>, scalaz.Zipper<H>, scalaz.Zipper<I>, scalaz.Zipper<J>, scalaz.Zipper<K>, scalaz.Zipper<L>, scalaz.Zipper<R>> lift12(scala.Function12<A, B, C, D, E, FF, G, H, I, J, K, L, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #625                // InterfaceMethod scalaz/Apply.lift12$:(Lscalaz/Apply;Lscala/Function12;)Lscala/Function12;
       5: areturn

  public java.lang.Object discardLeft(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #629                // InterfaceMethod scalaz/Apply.discardLeft$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object discardRight(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #633                // InterfaceMethod scalaz/Apply.discardRight$:(Lscalaz/Apply;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public scalaz.Applicative<?> applyApplicative();
    Code:
       0: aload_0
       1: invokestatic  #638                // InterfaceMethod scalaz/Apply.applyApplicative$:(Lscalaz/Apply;)Lscalaz/Applicative;
       4: areturn

  public <A, B> scalaz.Reducer<scalaz.Zipper<A>, scalaz.Zipper<B>> liftReducer(scalaz.Reducer<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #646                // InterfaceMethod scalaz/Apply.liftReducer$:(Lscalaz/Apply;Lscalaz/Reducer;)Lscalaz/Reducer;
       5: areturn

  public scalaz.Apply<scalaz.Zipper>.ApplyLaw applyLaw();
    Code:
       0: aload_0
       1: invokestatic  #653                // InterfaceMethod scalaz/Apply.applyLaw$:(Lscalaz/Apply;)Lscalaz/Apply$ApplyLaw;
       4: areturn

  public <G> scalaz.Traverse1<?> product(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #658                // InterfaceMethod scalaz/Traverse1.product$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #665                // InterfaceMethod scalaz/Traverse1.product0$:(Lscalaz/Traverse1;Lscalaz/Traverse;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse1<?> compose(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #667                // InterfaceMethod scalaz/Traverse1.compose$:(Lscalaz/Traverse1;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public java.lang.Object traverse1(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #671                // InterfaceMethod scalaz/Traverse1.traverse1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverse1U(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #677                // InterfaceMethod scalaz/Traverse1.traverse1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object sequence1(java.lang.Object, scalaz.Apply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #684                // InterfaceMethod scalaz/Traverse1.sequence1$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Apply;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object sequence1U(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #690                // InterfaceMethod scalaz/Traverse1.sequence1U$:(Lscalaz/Traverse1;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public scalaz.Traverse1<scalaz.Zipper>.Traverse1Law traverse1Law();
    Code:
       0: aload_0
       1: invokestatic  #697                // InterfaceMethod scalaz/Traverse1.traverse1Law$:(Lscalaz/Traverse1;)Lscalaz/Traverse1$Traverse1Law;
       4: areturn

  public <G> scalaz.Foldable1<?> product(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #702                // InterfaceMethod scalaz/Foldable1.product$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public <G> scalaz.Foldable1<?> compose(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #705                // InterfaceMethod scalaz/Foldable1.compose$:(Lscalaz/Foldable1;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public scala.Option foldMap1Opt(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #712                // InterfaceMethod scalaz/Foldable1.foldMap1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Semigroup;)Lscala/Option;
       7: areturn

  public java.lang.Object foldRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #718                // InterfaceMethod scalaz/Foldable1.foldRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object foldLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod scalaz/Foldable1.foldLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object foldr1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #727                // InterfaceMethod scalaz/Foldable1.foldr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapRight1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #733                // InterfaceMethod scalaz/Foldable1.foldMapRight1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldr1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #739                // InterfaceMethod scalaz/Foldable1.foldr1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #743                // InterfaceMethod scalaz/Foldable1.foldl1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public scala.Option foldMapLeft1Opt(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #747                // InterfaceMethod scalaz/Foldable1.foldMapLeft1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
       7: areturn

  public scala.Option foldl1Opt(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #751                // InterfaceMethod scalaz/Foldable1.foldl1Opt$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public java.lang.Object fold1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #759                // InterfaceMethod scalaz/Foldable1.fold1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #766                // InterfaceMethod scalaz/Foldable1.maximum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object maximumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #773                // InterfaceMethod scalaz/Foldable1.maximumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object maximumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #778                // InterfaceMethod scalaz/Foldable1.maximumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimum1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #783                // InterfaceMethod scalaz/Foldable1.minimum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object minimumOf1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #788                // InterfaceMethod scalaz/Foldable1.minimumOf1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object minimumBy1(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #793                // InterfaceMethod scalaz/Foldable1.minimumBy1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Ljava/lang/Object;
       7: areturn

  public scala.Option maximum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #800                // InterfaceMethod scalaz/Foldable1.maximum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option maximumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #807                // InterfaceMethod scalaz/Foldable1.maximumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option maximumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #812                // InterfaceMethod scalaz/Foldable1.maximumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimum(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #817                // InterfaceMethod scalaz/Foldable1.minimum$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option minimumOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #822                // InterfaceMethod scalaz/Foldable1.minimumOf$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option minimumBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #827                // InterfaceMethod scalaz/Foldable1.minimumBy$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scalaz.NonEmptyList distinct1(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #834                // InterfaceMethod scalaz/Foldable1.distinct1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList distinctE1(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #840                // InterfaceMethod scalaz/Foldable1.distinctE1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/NonEmptyList;
       6: areturn

  public java.lang.Object sumr1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #845                // InterfaceMethod scalaz/Foldable1.sumr1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object suml1(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #849                // InterfaceMethod scalaz/Foldable1.suml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psum1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #855                // InterfaceMethod scalaz/Foldable1.psum1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object psumMap1(java.lang.Object, scala.Function1, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #862                // InterfaceMethod scalaz/Foldable1.psumMap1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Plus;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object msuml1(java.lang.Object, scalaz.Plus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #866                // InterfaceMethod scalaz/Foldable1.msuml1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Plus;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object intercalate1(java.lang.Object, java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #872                // InterfaceMethod scalaz/Foldable1.intercalate1$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object intercalate(java.lang.Object, java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #879                // InterfaceMethod scalaz/Foldable1.intercalate$:(Lscalaz/Foldable1;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object traverse1_(java.lang.Object, scala.Function1, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #886                // InterfaceMethod scalaz/Foldable1.traverse1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object sequence1_(java.lang.Object, scalaz.Apply, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #892                // InterfaceMethod scalaz/Foldable1.sequence1_$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscalaz/Apply;Lscalaz/Semigroup;)Ljava/lang/Object;
       7: areturn

  public final boolean empty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #898                // InterfaceMethod scalaz/Foldable1.empty$:(Lscalaz/Foldable1;Ljava/lang/Object;)Z
       5: ireturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #903                // InterfaceMethod scalaz/Foldable1.product0$:(Lscalaz/Foldable1;Lscalaz/Foldable;)Lscalaz/Foldable1;
       5: areturn

  public scalaz.NonEmptyList toNel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #910                // InterfaceMethod scalaz/Foldable1.toNel$:(Lscalaz/Foldable1;Ljava/lang/Object;)Lscalaz/NonEmptyList;
       5: areturn

  public scalaz.NonEmptyList scanLeft1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #916                // InterfaceMethod scalaz/Foldable1.scanLeft1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.NonEmptyList scanRight1(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #920                // InterfaceMethod scalaz/Foldable1.scanRight1$:(Lscalaz/Foldable1;Ljava/lang/Object;Lscala/Function2;)Lscalaz/NonEmptyList;
       6: areturn

  public scalaz.Foldable1<scalaz.Zipper>.Foldable1Law foldable1Law();
    Code:
       0: aload_0
       1: invokestatic  #927                // InterfaceMethod scalaz/Foldable1.foldable1Law$:(Lscalaz/Foldable1;)Lscalaz/Foldable1$Foldable1Law;
       4: areturn

  public <G> scalaz.Traverse<?> compose(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #932                // InterfaceMethod scalaz/Traverse.compose$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Bitraverse<?> bicompose(scalaz.Bitraverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #939                // InterfaceMethod scalaz/Traverse.bicompose$:(Lscalaz/Traverse;Lscalaz/Bitraverse;)Lscalaz/Bitraverse;
       5: areturn

  public <G> scalaz.Traverse<?> product(scalaz.Traverse<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #942                // InterfaceMethod scalaz/Traverse.product$:(Lscalaz/Traverse;Lscalaz/Traverse;)Lscalaz/Traverse;
       5: areturn

  public <G> scalaz.Traverse1<?> product0(scalaz.Traverse1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #945                // InterfaceMethod scalaz/Traverse.product0$:(Lscalaz/Traverse;Lscalaz/Traverse1;)Lscalaz/Traverse1;
       5: areturn

  public <G> scalaz.Traverse<scalaz.Zipper>.Traversal<G> traversal(scalaz.Applicative<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #952                // InterfaceMethod scalaz/Traverse.traversal$:(Lscalaz/Traverse;Lscalaz/Applicative;)Lscalaz/Traverse$Traversal;
       5: areturn

  public <S> scalaz.Traverse<scalaz.Zipper>.Traversal<?> traversalS();
    Code:
       0: aload_0
       1: invokestatic  #959                // InterfaceMethod scalaz/Traverse.traversalS$:(Lscalaz/Traverse;)Lscalaz/Traverse$Traversal;
       4: areturn

  public java.lang.Object traverse(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #963                // InterfaceMethod scalaz/Traverse.traverse$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #968                // InterfaceMethod scalaz/Traverse.traverseU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseM(java.lang.Object, scala.Function1, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #974                // InterfaceMethod scalaz/Traverse.traverseM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       9: areturn

  public scalaz.IndexedStateT traverseS(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #981                // InterfaceMethod scalaz/Traverse.traverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public scala.Tuple2 runTraverseS(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #988                // InterfaceMethod scalaz/Traverse.runTraverseS$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
       7: areturn

  public scalaz.IndexedStateT traverseSTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #994                // InterfaceMethod scalaz/Traverse.traverseSTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
       7: areturn

  public scalaz.Kleisli traverseKTrampoline(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1000               // InterfaceMethod scalaz/Traverse.traverseKTrampoline$:(Lscalaz/Traverse;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Lscalaz/Kleisli;
       7: areturn

  public java.lang.Object sequence(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1004               // InterfaceMethod scalaz/Traverse.sequence$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1010               // InterfaceMethod scalaz/Traverse.sequenceS$:(Lscalaz/Traverse;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public final java.lang.Object sequenceU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1016               // InterfaceMethod scalaz/Traverse.sequenceU$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object sequenceM(java.lang.Object, scalaz.Applicative, scalaz.Bind);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1023               // InterfaceMethod scalaz/Traverse.sequenceM$:(Lscalaz/Traverse;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Bind;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 foldLShape(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1029               // InterfaceMethod scalaz/Traverse.foldLShape$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object reverse(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1034               // InterfaceMethod scalaz/Traverse.reverse$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public scala.Tuple2 zipWith(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1038               // InterfaceMethod scalaz/Traverse.zipWith$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public java.lang.Object zipWithL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1044               // InterfaceMethod scalaz/Traverse.zipWithL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object zipWithR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1048               // InterfaceMethod scalaz/Traverse.zipWithR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object indexed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1052               // InterfaceMethod scalaz/Traverse.indexed$:(Lscalaz/Traverse;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object zipL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1058               // InterfaceMethod scalaz/Traverse.zipL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object zipR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1062               // InterfaceMethod scalaz/Traverse.zipR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.Tuple2 mapAccumL(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1066               // InterfaceMethod scalaz/Traverse.mapAccumL$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scala.Tuple2 mapAccumR(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1070               // InterfaceMethod scalaz/Traverse.mapAccumR$:(Lscalaz/Traverse;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Lscala/Tuple2;
       7: areturn

  public scalaz.Traverse<scalaz.Zipper>.TraverseLaw traverseLaw();
    Code:
       0: aload_0
       1: invokestatic  #1077               // InterfaceMethod scalaz/Traverse.traverseLaw$:(Lscalaz/Traverse;)Lscalaz/Traverse$TraverseLaw;
       4: areturn

  public <G> scalaz.Foldable<?> compose(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1082               // InterfaceMethod scalaz/Foldable.compose$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Bifoldable<?> bicompose(scalaz.Bifoldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1087               // InterfaceMethod scalaz/Foldable.bicompose$:(Lscalaz/Foldable;Lscalaz/Bifoldable;)Lscalaz/Bifoldable;
       5: areturn

  public <G> scalaz.Foldable<?> product(scalaz.Foldable<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1090               // InterfaceMethod scalaz/Foldable.product$:(Lscalaz/Foldable;Lscalaz/Foldable;)Lscalaz/Foldable;
       5: areturn

  public <G> scalaz.Foldable1<?> product0(scalaz.Foldable1<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1093               // InterfaceMethod scalaz/Foldable.product0$:(Lscalaz/Foldable;Lscalaz/Foldable1;)Lscalaz/Foldable1;
       5: areturn

  public java.lang.Object foldRightM(java.lang.Object, scala.Function0, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1100               // InterfaceMethod scalaz/Foldable.foldRightM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldLeftM(java.lang.Object, java.lang.Object, scala.Function2, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1107               // InterfaceMethod scalaz/Foldable.foldLeftM$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object foldMapM(java.lang.Object, scala.Function1, scalaz.Monoid, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1114               // InterfaceMethod scalaz/Foldable.foldMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monoid;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object fold(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1120               // InterfaceMethod scalaz/Foldable.fold$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option fold1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1126               // InterfaceMethod scalaz/Foldable.fold1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object traverse_(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1131               // InterfaceMethod scalaz/Foldable.traverse_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
       7: areturn

  public final java.lang.Object traverseU_(java.lang.Object, scala.Function1, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1136               // InterfaceMethod scalaz/Foldable.traverseU_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Unapply;)Ljava/lang/Object;
       7: areturn

  public scalaz.IndexedStateT traverseS_(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1141               // InterfaceMethod scalaz/Foldable.traverseS_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
       6: areturn

  public java.lang.Object sequence_(java.lang.Object, scalaz.Applicative);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1146               // InterfaceMethod scalaz/Foldable.sequence_$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Applicative;)Ljava/lang/Object;
       6: areturn

  public scalaz.IndexedStateT sequenceS_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1151               // InterfaceMethod scalaz/Foldable.sequenceS_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IndexedStateT;
       5: areturn

  public scalaz.Free sequenceF_(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1158               // InterfaceMethod scalaz/Foldable.sequenceF_$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/Free;
       5: areturn

  public final java.lang.Object foldr(java.lang.Object, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1164               // InterfaceMethod scalaz/Foldable.foldr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldRight1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1170               // InterfaceMethod scalaz/Foldable.foldRight1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldl(java.lang.Object, java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1176               // InterfaceMethod scalaz/Foldable.foldl$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scala.Option foldLeft1Opt(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1180               // InterfaceMethod scalaz/Foldable.foldLeft1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscala/Option;
       6: areturn

  public final java.lang.Object foldrM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1186               // InterfaceMethod scalaz/Foldable.foldrM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object foldlM(java.lang.Object, scala.Function0, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1190               // InterfaceMethod scalaz/Foldable.foldlM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       9: areturn

  public final java.lang.Object findMapM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1196               // InterfaceMethod scalaz/Foldable.findMapM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public scala.Option findLeft(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1201               // InterfaceMethod scalaz/Foldable.findLeft$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public scala.Option findRight(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1205               // InterfaceMethod scalaz/Foldable.findRight$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
       6: areturn

  public final int count(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1211               // InterfaceMethod scalaz/Foldable.count$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public int length(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1215               // InterfaceMethod scalaz/Foldable.length$:(Lscalaz/Foldable;Ljava/lang/Object;)I
       5: ireturn

  public scala.Option index(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1222               // InterfaceMethod scalaz/Foldable.index$:(Lscalaz/Foldable;Ljava/lang/Object;I)Lscala/Option;
       6: areturn

  public java.lang.Object indexOr(java.lang.Object, scala.Function0, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1229               // InterfaceMethod scalaz/Foldable.indexOr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function0;I)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.List toList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1235               // InterfaceMethod scalaz/Foldable.toList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  public scala.collection.immutable.Vector toVector(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1241               // InterfaceMethod scalaz/Foldable.toVector$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Vector;
       5: areturn

  public scala.collection.immutable.Set toSet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1247               // InterfaceMethod scalaz/Foldable.toSet$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Set;
       5: areturn

  public scala.collection.immutable.Stream toStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1253               // InterfaceMethod scalaz/Foldable.toStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscala/collection/immutable/Stream;
       5: areturn

  public scalaz.IList toIList(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1259               // InterfaceMethod scalaz/Foldable.toIList$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/IList;
       5: areturn

  public scalaz.EphemeralStream toEphemeralStream(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1265               // InterfaceMethod scalaz/Foldable.toEphemeralStream$:(Lscalaz/Foldable;Ljava/lang/Object;)Lscalaz/EphemeralStream;
       5: areturn

  public java.lang.Object allM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1269               // InterfaceMethod scalaz/Foldable.allM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object anyM(java.lang.Object, scala.Function1, scalaz.Monad);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1273               // InterfaceMethod scalaz/Foldable.anyM$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Monad;)Ljava/lang/Object;
       7: areturn

  public int filterLength(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1279               // InterfaceMethod scalaz/Foldable.filterLength$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)I
       6: ireturn

  public scala.Option extrema(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1284               // InterfaceMethod scalaz/Foldable.extrema$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscala/Option;
       6: areturn

  public scala.Option extremaOf(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1289               // InterfaceMethod scalaz/Foldable.extremaOf$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public scala.Option extremaBy(java.lang.Object, scala.Function1, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1293               // InterfaceMethod scalaz/Foldable.extremaBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Order;)Lscala/Option;
       7: areturn

  public java.lang.Object sumr(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1297               // InterfaceMethod scalaz/Foldable.sumr$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option sumr1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1301               // InterfaceMethod scalaz/Foldable.sumr1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object suml(java.lang.Object, scalaz.Monoid);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1305               // InterfaceMethod scalaz/Foldable.suml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Monoid;)Ljava/lang/Object;
       6: areturn

  public scala.Option suml1Opt(java.lang.Object, scalaz.Semigroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1309               // InterfaceMethod scalaz/Foldable.suml1Opt$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Semigroup;)Lscala/Option;
       6: areturn

  public java.lang.Object psumMap(java.lang.Object, scala.Function1, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1315               // InterfaceMethod scalaz/Foldable.psumMap$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object psum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1322               // InterfaceMethod scalaz/Foldable.psum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public final java.lang.Object asum(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1326               // InterfaceMethod scalaz/Foldable.asum$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msuml(java.lang.Object, scalaz.PlusEmpty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1330               // InterfaceMethod scalaz/Foldable.msuml$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/PlusEmpty;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object msumlU(java.lang.Object, scalaz.Unapply);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1335               // InterfaceMethod scalaz/Foldable.msumlU$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Unapply;)Ljava/lang/Object;
       6: areturn

  public long longDigits(java.lang.Object, scala.Predef$$less$colon$less);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1342               // InterfaceMethod scalaz/Foldable.longDigits$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Predef$$less$colon$less;)J
       6: lreturn

  public boolean element(java.lang.Object, java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1349               // InterfaceMethod scalaz/Foldable.element$:(Lscalaz/Foldable;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Equal;)Z
       7: ireturn

  public scala.collection.immutable.List splitWith(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1355               // InterfaceMethod scalaz/Foldable.splitWith$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList splitBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1361               // InterfaceMethod scalaz/Foldable.splitBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public scalaz.IList splitByRelation(java.lang.Object, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1367               // InterfaceMethod scalaz/Foldable.splitByRelation$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function2;)Lscalaz/IList;
       6: areturn

  public scala.collection.immutable.List selectSplit(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1371               // InterfaceMethod scalaz/Foldable.selectSplit$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/List;
       6: areturn

  public scalaz.IList distinct(java.lang.Object, scalaz.Order);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1377               // InterfaceMethod scalaz/Foldable.distinct$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Order;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctE(java.lang.Object, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1383               // InterfaceMethod scalaz/Foldable.distinctE$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/Equal;)Lscalaz/IList;
       6: areturn

  public scalaz.IList distinctBy(java.lang.Object, scala.Function1, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1388               // InterfaceMethod scalaz/Foldable.distinctBy$:(Lscalaz/Foldable;Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Lscalaz/IList;
       7: areturn

  public java.lang.Object collapse(java.lang.Object, scalaz.ApplicativePlus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1394               // InterfaceMethod scalaz/Foldable.collapse$:(Lscalaz/Foldable;Ljava/lang/Object;Lscalaz/ApplicativePlus;)Ljava/lang/Object;
       6: areturn

  public scalaz.Foldable<scalaz.Zipper>.FoldableLaw foldableLaw();
    Code:
       0: aload_0
       1: invokestatic  #1402               // InterfaceMethod scalaz/Foldable.foldableLaw$:(Lscalaz/Foldable;)Lscalaz/Foldable$FoldableLaw;
       4: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1408               // InterfaceMethod scalaz/Functor.xmap$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object apply(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1413               // InterfaceMethod scalaz/Functor.apply$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public <A, B> scala.Function1<scalaz.Zipper<A>, scalaz.Zipper<B>> lift(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1420               // InterfaceMethod scalaz/Functor.lift$:(Lscalaz/Functor;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.Object strengthL(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1425               // InterfaceMethod scalaz/Functor.strengthL$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object strengthR(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1430               // InterfaceMethod scalaz/Functor.strengthR$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object mapply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1434               // InterfaceMethod scalaz/Functor.mapply$:(Lscalaz/Functor;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object fpair(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1439               // InterfaceMethod scalaz/Functor.fpair$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fproduct(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1443               // InterfaceMethod scalaz/Functor.fproduct$:(Lscalaz/Functor;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object void(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1447               // InterfaceMethod scalaz/Functor.void$:(Lscalaz/Functor;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object counzip(scalaz.$bslash$div);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1453               // InterfaceMethod scalaz/Functor.counzip$:(Lscalaz/Functor;Lscalaz/$bslash$div;)Ljava/lang/Object;
       5: areturn

  public <G> scalaz.Functor<?> compose(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1459               // InterfaceMethod scalaz/Functor.compose$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public <G> scalaz.Contravariant<?> icompose(scalaz.Contravariant<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1467               // InterfaceMethod scalaz/Functor.icompose$:(Lscalaz/Functor;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public <G> scalaz.Bifunctor<?> bicompose(scalaz.Bifunctor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1473               // InterfaceMethod scalaz/Functor.bicompose$:(Lscalaz/Functor;Lscalaz/Bifunctor;)Lscalaz/Bifunctor;
       5: areturn

  public <G> scalaz.Functor<?> product(scalaz.Functor<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1476               // InterfaceMethod scalaz/Functor.product$:(Lscalaz/Functor;Lscalaz/Functor;)Lscalaz/Functor;
       5: areturn

  public java.lang.Object widen(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1483               // InterfaceMethod scalaz/Functor.widen$:(Lscalaz/Functor;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public scalaz.Functor<scalaz.Zipper>.FunctorLaw functorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1491               // InterfaceMethod scalaz/Functor.functorLaw$:(Lscalaz/Functor;)Lscalaz/Functor$FunctorLaw;
       4: areturn

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1498               // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1506               // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor<scalaz.Zipper>.InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #1514               // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ComonadSyntax<scalaz.Zipper> comonadSyntax();
    Code:
       0: aload_0
       1: getfield      #1518               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       4: areturn

  public void scalaz$Comonad$_setter_$comonadSyntax_$eq(scalaz.syntax.ComonadSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1518               // Field comonadSyntax:Lscalaz/syntax/ComonadSyntax;
       5: return

  public scalaz.syntax.CobindSyntax<scalaz.Zipper> cobindSyntax();
    Code:
       0: aload_0
       1: getfield      #1526               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       4: areturn

  public void scalaz$Cobind$_setter_$cobindSyntax_$eq(scalaz.syntax.CobindSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1526               // Field cobindSyntax:Lscalaz/syntax/CobindSyntax;
       5: return

  public scalaz.syntax.ApplicativeSyntax<scalaz.Zipper> applicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1533               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       4: areturn

  public void scalaz$Applicative$_setter_$applicativeSyntax_$eq(scalaz.syntax.ApplicativeSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1533               // Field applicativeSyntax:Lscalaz/syntax/ApplicativeSyntax;
       5: return

  public scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper> invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #1540               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1540               // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public scalaz.syntax.ApplySyntax<scalaz.Zipper> applySyntax();
    Code:
       0: aload_0
       1: getfield      #1547               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       4: areturn

  public void scalaz$Apply$_setter_$applySyntax_$eq(scalaz.syntax.ApplySyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1547               // Field applySyntax:Lscalaz/syntax/ApplySyntax;
       5: return

  public scalaz.syntax.Traverse1Syntax<scalaz.Zipper> traverse1Syntax();
    Code:
       0: aload_0
       1: getfield      #1554               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       4: areturn

  public void scalaz$Traverse1$_setter_$traverse1Syntax_$eq(scalaz.syntax.Traverse1Syntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1554               // Field traverse1Syntax:Lscalaz/syntax/Traverse1Syntax;
       5: return

  public scalaz.syntax.Foldable1Syntax<scalaz.Zipper> foldable1Syntax();
    Code:
       0: aload_0
       1: getfield      #1561               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       4: areturn

  public void scalaz$Foldable1$_setter_$foldable1Syntax_$eq(scalaz.syntax.Foldable1Syntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1561               // Field foldable1Syntax:Lscalaz/syntax/Foldable1Syntax;
       5: return

  public scalaz.syntax.TraverseSyntax<scalaz.Zipper> traverseSyntax();
    Code:
       0: aload_0
       1: getfield      #1568               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       4: areturn

  public void scalaz$Traverse$_setter_$traverseSyntax_$eq(scalaz.syntax.TraverseSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1568               // Field traverseSyntax:Lscalaz/syntax/TraverseSyntax;
       5: return

  public scalaz.syntax.FoldableSyntax<scalaz.Zipper> foldableSyntax();
    Code:
       0: aload_0
       1: getfield      #1575               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       4: areturn

  public void scalaz$Foldable$_setter_$foldableSyntax_$eq(scalaz.syntax.FoldableSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1575               // Field foldableSyntax:Lscalaz/syntax/FoldableSyntax;
       5: return

  public scalaz.syntax.FunctorSyntax<scalaz.Zipper> functorSyntax();
    Code:
       0: aload_0
       1: getfield      #1582               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       4: areturn

  public void scalaz$Functor$_setter_$functorSyntax_$eq(scalaz.syntax.FunctorSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1582               // Field functorSyntax:Lscalaz/syntax/FunctorSyntax;
       5: return

  public scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper> invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #1589               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax<scalaz.Zipper>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1589               // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public <A> scalaz.Zipper<scalaz.Zipper<A>> cojoin(scalaz.Zipper<A>);
    Code:
       0: aload_1
       1: invokevirtual #1601               // Method scalaz/Zipper.positions:()Lscalaz/Zipper;
       4: areturn

  public <A, B> scalaz.Zipper<B> cobind(scalaz.Zipper<A>, scala.Function1<scalaz.Zipper<A>, B>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1607               // Method cojoin:(Lscalaz/Zipper;)Lscalaz/Zipper;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: athrow
      12: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      15: aload_3
      16: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      19: aload_2
      20: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      23: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      26: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      29: checkcast     #28                 // class scala/collection/immutable/Stream
      32: aload_2
      33: aload_3
      34: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      37: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      42: aload_3
      43: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      46: aload_2
      47: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      50: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      53: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      56: checkcast     #28                 // class scala/collection/immutable/Stream
      59: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      62: areturn

  public <A> A copoint(scalaz.Zipper<A>);
    Code:
       0: aload_1
       1: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       4: areturn

  public <G, A, B> G traverseImpl(scalaz.Zipper<A>, scala.Function1<A, G>, scalaz.Applicative<G>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: invokedynamic #1674,  0           // InvokeDynamic #0:apply:()Lscala/Function3;
      11: invokeinterface #1680,  1         // InterfaceMethod scala/Function3.curried:()Lscala/Function1;
      16: astore        4
      18: getstatic     #1685               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      21: ifnonnull     26
      24: aconst_null
      25: athrow
      26: aload_3
      27: aload_1
      28: aload_3
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokedynamic #1695,  0           // InvokeDynamic #1:apply:(Lscalaz/Zipper;Lscalaz/Applicative;Lscala/Function1;Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      38: invokeinterface #1697,  2         // InterfaceMethod scalaz/Applicative.apF:(Lscala/Function0;)Lscala/Function1;
      43: getstatic     #1702               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
      46: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      49: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      52: astore        5
      54: ifnonnull     59
      57: aconst_null
      58: athrow
      59: aload         5
      61: aload_1
      62: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      65: aload_2
      66: aload_3
      67: invokeinterface #1713,  4         // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      72: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      77: areturn

  public <A, B> B foldRight(scalaz.Zipper<A>, scala.Function0<B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_1
       7: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      10: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      13: aload_1
      14: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      17: aload_1
      18: invokedynamic #1729,  0           // InvokeDynamic #2:apply:(Lscalaz/Zipper;)Lscala/Function0;
      23: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      26: aload_2
      27: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      32: aload_3
      33: invokedynamic #1743,  0           // InvokeDynamic #3:apply:(Lscala/Function2;)Lscala/Function2;
      38: invokevirtual #1745               // Method scala/collection/immutable/Stream$Cons.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      41: aload_3
      42: invokedynamic #1750,  0           // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      47: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      50: areturn

  public <A, B> B foldLeft(scalaz.Zipper<A>, B, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
       9: aload_1
      10: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      13: aload_1
      14: invokedynamic #1760,  0           // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      19: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      22: aload_1
      23: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      26: aload_2
      27: aload_3
      28: invokedynamic #1765,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      33: invokevirtual #1766               // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      36: aload_3
      37: invokevirtual #1767               // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      40: areturn

  public <A, B> B foldMap(scalaz.Zipper<A>, scala.Function1<A, B>, scalaz.Monoid<B>);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #1775,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
       7: aload_3
       8: aload_2
       9: invokedynamic #1783,  0           // InvokeDynamic #7:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      14: astore        5
      16: astore        4
      18: ifnonnull     23
      21: aconst_null
      22: athrow
      23: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      26: aload_1
      27: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      30: aload_1
      31: invokedynamic #1760,  0           // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      36: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      39: aload_1
      40: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      43: aload         4
      45: aload         5
      47: invokedynamic #1765,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      52: invokevirtual #1766               // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      55: aload         5
      57: invokevirtual #1767               // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      60: areturn

  public <A> scalaz.Zipper<A> point(scala.Function0<A>);
    Code:
       0: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
       6: invokevirtual #1799               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
       9: aload_1
      10: invokevirtual #1803               // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      13: aload_1
      14: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
      22: invokevirtual #1799               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      25: aload_1
      26: invokevirtual #1803               // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      29: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      32: areturn

  public <A, B> scalaz.Zipper<B> ap(scala.Function0<scalaz.Zipper<A>>, scala.Function0<scalaz.Zipper<scala.Function1<A, B>>>);
    Code:
       0: aload_1
       1: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1597               // class scalaz/Zipper
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      20: aload_2
      21: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: checkcast     #1597               // class scalaz/Zipper
      29: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      32: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      35: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #1810               // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #28                 // class scala/collection/immutable/Stream
      44: invokedynamic #1819,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
      49: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      52: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      55: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      58: checkcast     #28                 // class scala/collection/immutable/Stream
      61: astore        4
      63: aload_3
      64: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      67: aload_2
      68: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      73: checkcast     #1597               // class scalaz/Zipper
      76: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      79: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      82: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      85: invokevirtual #1810               // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      88: checkcast     #28                 // class scala/collection/immutable/Stream
      91: invokedynamic #1824,  0           // InvokeDynamic #9:apply:()Lscala/Function1;
      96: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      99: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     102: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     105: checkcast     #28                 // class scala/collection/immutable/Stream
     108: astore        5
     110: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     113: aload         4
     115: aload_2
     116: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     121: checkcast     #1597               // class scalaz/Zipper
     124: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     127: checkcast     #1636               // class scala/Function1
     130: aload_3
     131: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     134: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     139: aload         5
     141: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     144: areturn

  public <A, B> scalaz.Zipper<B> map(scalaz.Zipper<A>, scala.Function1<A, B>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       9: aload_1
      10: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      13: aload_2
      14: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      17: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      20: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      23: checkcast     #28                 // class scala/collection/immutable/Stream
      26: aload_2
      27: aload_1
      28: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      31: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aload_1
      37: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      40: aload_2
      41: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      44: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      47: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      50: checkcast     #28                 // class scala/collection/immutable/Stream
      53: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      56: areturn

  public <A> boolean all(scalaz.Zipper<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
       4: aload_2
       5: invokevirtual #1836               // Method scala/collection/immutable/Stream.forall:(Lscala/Function1;)Z
       8: ifeq          40
      11: aload_2
      12: aload_1
      13: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      16: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: invokestatic  #1841               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      24: ifeq          40
      27: aload_1
      28: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      31: aload_2
      32: invokevirtual #1836               // Method scala/collection/immutable/Stream.forall:(Lscala/Function1;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  public <A> boolean any(scalaz.Zipper<A>, scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
       4: aload_2
       5: invokevirtual #1845               // Method scala/collection/immutable/Stream.exists:(Lscala/Function1;)Z
       8: ifne          38
      11: aload_2
      12: aload_1
      13: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      16: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: invokestatic  #1841               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      24: ifne          38
      27: aload_1
      28: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      31: aload_2
      32: invokevirtual #1845               // Method scala/collection/immutable/Stream.exists:(Lscala/Function1;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iconst_0
      41: ireturn

  public <A, B> B foldMap1(scalaz.Zipper<A>, scala.Function1<A, B>, scalaz.Semigroup<B>);
    Code:
       0: aload_1
       1: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
       4: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       7: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      10: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      13: astore        7
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload         7
      22: aload_1
      23: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      26: aload_2
      27: aload_3
      28: aload_2
      29: invokedynamic #1863,  0           // InvokeDynamic #10:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
      34: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      39: astore        5
      41: aload         5
      43: instanceof    #1867               // class scala/Some
      46: ifeq          79
      49: aload         5
      51: checkcast     #1867               // class scala/Some
      54: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      57: astore        6
      59: aload_3
      60: aload         6
      62: aload_2
      63: aload_1
      64: invokedynamic #1877,  0           // InvokeDynamic #11:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
      69: invokeinterface #1882,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      74: astore        4
      76: goto          115
      79: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
      82: aload         5
      84: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          105
      90: aload_2
      91: aload_1
      92: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      95: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     100: astore        4
     102: goto          115
     105: new           #1892               // class scala/MatchError
     108: dup
     109: aload         5
     111: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     114: athrow
     115: aload         4
     117: aload_3
     118: aload_2
     119: invokedynamic #1902,  0           // InvokeDynamic #12:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
     124: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     127: areturn

  public <A, B> B foldMapRight1(scalaz.Zipper<A>, scala.Function1<A, B>, scala.Function2<A, scala.Function0<B>, B>);
    Code:
       0: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       3: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       6: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
       9: astore        7
      11: ifnonnull     16
      14: aconst_null
      15: athrow
      16: aload         7
      18: aload_1
      19: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      22: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      25: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      28: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      31: astore        8
      33: ifnonnull     38
      36: aconst_null
      37: athrow
      38: aload         8
      40: aload_1
      41: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      44: aload_2
      45: aload_3
      46: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      51: astore        5
      53: aload         5
      55: instanceof    #1867               // class scala/Some
      58: ifeq          93
      61: aload         5
      63: checkcast     #1867               // class scala/Some
      66: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      69: astore        6
      71: aload_3
      72: aload_1
      73: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      76: aload         6
      78: invokedynamic #1914,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function0;
      83: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: astore        4
      90: goto          129
      93: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
      96: aload         5
      98: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     101: ifeq          119
     104: aload_2
     105: aload_1
     106: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     109: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     114: astore        4
     116: goto          129
     119: new           #1892               // class scala/MatchError
     122: dup
     123: aload         5
     125: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     128: athrow
     129: aload         4
     131: aload_3
     132: invokedynamic #1921,  0           // InvokeDynamic #14:apply:(Lscala/Function2;)Lscala/Function2;
     137: invokeinterface #1923,  4         // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     142: areturn

  public <A, B> B foldMapLeft1(scalaz.Zipper<A>, scala.Function1<A, B>, scala.Function2<B, A, B>);
    Code:
       0: aload_1
       1: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
       4: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       7: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      10: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      13: astore        7
      15: ifnonnull     20
      18: aconst_null
      19: athrow
      20: aload         7
      22: aload_1
      23: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      26: aload_2
      27: aload_3
      28: invokedynamic #1931,  0           // InvokeDynamic #15:apply:(Lscala/Function2;)Lscala/Function2;
      33: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      38: astore        5
      40: aload         5
      42: instanceof    #1867               // class scala/Some
      45: ifeq          75
      48: aload         5
      50: checkcast     #1867               // class scala/Some
      53: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      56: astore        6
      58: aload_3
      59: aload         6
      61: aload_1
      62: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      65: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: astore        4
      72: goto          111
      75: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
      78: aload         5
      80: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      83: ifeq          101
      86: aload_2
      87: aload_1
      88: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      91: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      96: astore        4
      98: goto          111
     101: new           #1892               // class scala/MatchError
     104: dup
     105: aload         5
     107: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     110: athrow
     111: aload         4
     113: aload_3
     114: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     117: areturn

  public <G, A, B> G traverse1Impl(scalaz.Zipper<A>, scala.Function1<A, G>, scalaz.Apply<G>);
    Code:
       0: getstatic     #1939               // Field scalaz/Traverse1$.MODULE$:Lscalaz/Traverse1$;
       3: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       6: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
       9: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      12: invokevirtual #1947               // Method scalaz/OneAnd$.oneAndTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse1;
      15: astore        20
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_1
      23: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      26: invokevirtual #1949               // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      29: astore        7
      31: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
      34: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      37: aload         7
      39: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      42: astore        8
      44: aload         8
      46: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
      49: ifne          270
      52: aload         8
      54: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
      57: checkcast     #1966               // class scala/Tuple2
      60: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
      63: astore        9
      65: aload         8
      67: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
      70: checkcast     #1966               // class scala/Tuple2
      73: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
      76: checkcast     #28                 // class scala/collection/immutable/Stream
      79: astore        10
      81: aload_3
      82: aload         20
      84: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      87: aload         9
      89: aload         10
      91: invokevirtual #1975               // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
      94: aload_2
      95: aload_3
      96: invokeinterface #1977,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
     101: invokedynamic #1984,  0           // InvokeDynamic #16:apply:()Lscala/Function1;
     106: invokeinterface #1986,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     111: astore        11
     113: aload_1
     114: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
     117: astore        12
     119: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
     122: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     125: aload         12
     127: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     130: astore        13
     132: aload         13
     134: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
     137: ifne          212
     140: aload         13
     142: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     145: checkcast     #1966               // class scala/Tuple2
     148: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
     151: astore        14
     153: aload         13
     155: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     158: checkcast     #1966               // class scala/Tuple2
     161: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
     164: checkcast     #28                 // class scala/collection/immutable/Stream
     167: astore        15
     169: aload_3
     170: aload         11
     172: invokedynamic #1991,  0           // InvokeDynamic #17:apply:(Ljava/lang/Object;)Lscala/Function0;
     177: aload_2
     178: aload_1
     179: invokedynamic #1996,  0           // InvokeDynamic #18:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     184: aload         20
     186: aload         14
     188: aload         15
     190: aload_2
     191: aload_3
     192: invokedynamic #2004,  0           // InvokeDynamic #19:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     197: invokedynamic #2011,  0           // InvokeDynamic #20:apply:()Lscala/Function3;
     202: invokeinterface #2013,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     207: astore        6
     209: goto          263
     212: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     215: aload         12
     217: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     220: ifeq          253
     223: aload_3
     224: aload         11
     226: invokedynamic #2021,  0           // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function0;
     231: aload_2
     232: aload_1
     233: invokedynamic #2026,  0           // InvokeDynamic #22:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     238: invokedynamic #2035,  0           // InvokeDynamic #23:apply:()Lscala/Function2;
     243: invokeinterface #2037,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     248: astore        6
     250: goto          263
     253: new           #1892               // class scala/MatchError
     256: dup
     257: aload         12
     259: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     262: athrow
     263: aload         6
     265: astore        4
     267: goto          437
     270: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     273: aload         7
     275: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     278: ifeq          427
     281: aload_1
     282: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
     285: astore        16
     287: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
     290: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     293: aload         16
     295: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     298: astore        17
     300: aload         17
     302: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
     305: ifne          373
     308: aload         17
     310: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     313: checkcast     #1966               // class scala/Tuple2
     316: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
     319: astore        18
     321: aload         17
     323: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     326: checkcast     #1966               // class scala/Tuple2
     329: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
     332: checkcast     #28                 // class scala/collection/immutable/Stream
     335: astore        19
     337: aload_3
     338: aload_2
     339: aload_1
     340: invokedynamic #2042,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     345: aload         20
     347: aload         18
     349: aload         19
     351: aload_2
     352: aload_3
     353: invokedynamic #2047,  0           // InvokeDynamic #25:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     358: invokedynamic #2054,  0           // InvokeDynamic #26:apply:()Lscala/Function2;
     363: invokeinterface #2037,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     368: astore        5
     370: goto          420
     373: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     376: aload         16
     378: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     381: ifeq          410
     384: aload_3
     385: aload_2
     386: aload_1
     387: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     390: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     395: invokedynamic #2061,  0           // InvokeDynamic #27:apply:()Lscala/Function1;
     400: invokeinterface #1986,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     405: astore        5
     407: goto          420
     410: new           #1892               // class scala/MatchError
     413: dup
     414: aload         16
     416: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     419: athrow
     420: aload         5
     422: astore        4
     424: goto          437
     427: new           #1892               // class scala/MatchError
     430: dup
     431: aload         7
     433: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     436: athrow
     437: aload         4
     439: areturn

  public scalaz.Apply flip();
    Code:
       0: aload_0
       1: invokevirtual #2068               // Method flip:()Lscalaz/Applicative;
       4: areturn

  public java.lang.Object traverse1Impl(java.lang.Object, scala.Function1, scalaz.Apply);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: getstatic     #1939               // Field scalaz/Traverse1$.MODULE$:Lscalaz/Traverse1$;
       9: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      12: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      15: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      18: invokevirtual #1947               // Method scalaz/OneAnd$.oneAndTraverse:(Lscalaz/Traverse;)Lscalaz/Traverse1;
      21: astore        21
      23: ifnonnull     28
      26: aconst_null
      27: athrow
      28: aload         4
      30: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      33: invokevirtual #1949               // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      36: astore        8
      38: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
      41: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
      44: aload         8
      46: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
      49: astore        9
      51: aload         9
      53: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
      56: ifne          280
      59: aload         9
      61: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
      64: checkcast     #1966               // class scala/Tuple2
      67: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
      70: astore        10
      72: aload         9
      74: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
      77: checkcast     #1966               // class scala/Tuple2
      80: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
      83: checkcast     #28                 // class scala/collection/immutable/Stream
      86: astore        11
      88: aload_3
      89: aload         21
      91: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
      94: aload         10
      96: aload         11
      98: invokevirtual #1975               // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
     101: aload_2
     102: aload_3
     103: invokeinterface #1977,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
     108: invokedynamic #1984,  0           // InvokeDynamic #16:apply:()Lscala/Function1;
     113: invokeinterface #1986,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     118: astore        12
     120: aload         4
     122: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
     125: astore        13
     127: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
     130: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     133: aload         13
     135: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     138: astore        14
     140: aload         14
     142: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
     145: ifne          221
     148: aload         14
     150: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     153: checkcast     #1966               // class scala/Tuple2
     156: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
     159: astore        15
     161: aload         14
     163: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     166: checkcast     #1966               // class scala/Tuple2
     169: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
     172: checkcast     #28                 // class scala/collection/immutable/Stream
     175: astore        16
     177: aload_3
     178: aload         12
     180: invokedynamic #1991,  0           // InvokeDynamic #17:apply:(Ljava/lang/Object;)Lscala/Function0;
     185: aload_2
     186: aload         4
     188: invokedynamic #1996,  0           // InvokeDynamic #18:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     193: aload         21
     195: aload         15
     197: aload         16
     199: aload_2
     200: aload_3
     201: invokedynamic #2004,  0           // InvokeDynamic #19:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     206: invokedynamic #2011,  0           // InvokeDynamic #20:apply:()Lscala/Function3;
     211: invokeinterface #2013,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
     216: astore        7
     218: goto          273
     221: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     224: aload         13
     226: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     229: ifeq          263
     232: aload_3
     233: aload         12
     235: invokedynamic #2021,  0           // InvokeDynamic #21:apply:(Ljava/lang/Object;)Lscala/Function0;
     240: aload_2
     241: aload         4
     243: invokedynamic #2026,  0           // InvokeDynamic #22:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     248: invokedynamic #2035,  0           // InvokeDynamic #23:apply:()Lscala/Function2;
     253: invokeinterface #2037,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     258: astore        7
     260: goto          273
     263: new           #1892               // class scala/MatchError
     266: dup
     267: aload         13
     269: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     272: athrow
     273: aload         7
     275: astore        5
     277: goto          450
     280: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     283: aload         8
     285: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     288: ifeq          440
     291: aload         4
     293: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
     296: astore        17
     298: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
     301: invokevirtual #1953               // Method scala/package$.$hash$colon$colon:()Lscala/collection/immutable/Stream$$hash$colon$colon$;
     304: aload         17
     306: invokevirtual #1957               // Method scala/collection/immutable/Stream$$hash$colon$colon$.unapply:(Lscala/collection/immutable/Stream;)Lscala/Option;
     309: astore        18
     311: aload         18
     313: invokevirtual #1961               // Method scala/Option.isEmpty:()Z
     316: ifne          385
     319: aload         18
     321: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     324: checkcast     #1966               // class scala/Tuple2
     327: invokevirtual #1969               // Method scala/Tuple2._1:()Ljava/lang/Object;
     330: astore        19
     332: aload         18
     334: invokevirtual #1964               // Method scala/Option.get:()Ljava/lang/Object;
     337: checkcast     #1966               // class scala/Tuple2
     340: invokevirtual #1972               // Method scala/Tuple2._2:()Ljava/lang/Object;
     343: checkcast     #28                 // class scala/collection/immutable/Stream
     346: astore        20
     348: aload_3
     349: aload_2
     350: aload         4
     352: invokedynamic #2042,  0           // InvokeDynamic #24:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
     357: aload         21
     359: aload         19
     361: aload         20
     363: aload_2
     364: aload_3
     365: invokedynamic #2047,  0           // InvokeDynamic #25:apply:(Lscalaz/Traverse1;Ljava/lang/Object;Lscala/collection/immutable/Stream;Lscala/Function1;Lscalaz/Apply;)Lscala/Function0;
     370: invokedynamic #2054,  0           // InvokeDynamic #26:apply:()Lscala/Function2;
     375: invokeinterface #2037,  4         // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     380: astore        6
     382: goto          433
     385: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
     388: aload         17
     390: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     393: ifeq          423
     396: aload_3
     397: aload_2
     398: aload         4
     400: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     403: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     408: invokedynamic #2061,  0           // InvokeDynamic #27:apply:()Lscala/Function1;
     413: invokeinterface #1986,  3         // InterfaceMethod scalaz/Apply.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     418: astore        6
     420: goto          433
     423: new           #1892               // class scala/MatchError
     426: dup
     427: aload         17
     429: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     432: athrow
     433: aload         6
     435: astore        5
     437: goto          450
     440: new           #1892               // class scala/MatchError
     443: dup
     444: aload         8
     446: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     449: athrow
     450: aload         5
     452: areturn

  public java.lang.Object foldMapLeft1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      11: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      14: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      17: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      20: astore        8
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload         8
      29: aload         4
      31: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      34: aload_2
      35: aload_3
      36: invokedynamic #1931,  0           // InvokeDynamic #15:apply:(Lscala/Function2;)Lscala/Function2;
      41: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      46: astore        6
      48: aload         6
      50: instanceof    #1867               // class scala/Some
      53: ifeq          84
      56: aload         6
      58: checkcast     #1867               // class scala/Some
      61: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      64: astore        7
      66: aload_3
      67: aload         7
      69: aload         4
      71: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      74: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: astore        5
      81: goto          121
      84: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
      87: aload         6
      89: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          111
      95: aload_2
      96: aload         4
      98: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     101: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     106: astore        5
     108: goto          121
     111: new           #1892               // class scala/MatchError
     114: dup
     115: aload         6
     117: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow
     121: aload         5
     123: aload_3
     124: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     127: areturn

  public java.lang.Object foldMapRight1(java.lang.Object, scala.Function1, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
       9: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      12: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      15: astore        8
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload         8
      24: aload         4
      26: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      29: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      32: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      35: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      38: astore        9
      40: ifnonnull     45
      43: aconst_null
      44: athrow
      45: aload         9
      47: aload         4
      49: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      52: aload_2
      53: aload_3
      54: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      59: astore        6
      61: aload         6
      63: instanceof    #1867               // class scala/Some
      66: ifeq          102
      69: aload         6
      71: checkcast     #1867               // class scala/Some
      74: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      77: astore        7
      79: aload_3
      80: aload         4
      82: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      85: aload         7
      87: invokedynamic #1914,  0           // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function0;
      92: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: astore        5
      99: goto          139
     102: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
     105: aload         6
     107: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     110: ifeq          129
     113: aload_2
     114: aload         4
     116: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     119: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     124: astore        5
     126: goto          139
     129: new           #1892               // class scala/MatchError
     132: dup
     133: aload         6
     135: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     138: athrow
     139: aload         5
     141: aload_3
     142: invokedynamic #1921,  0           // InvokeDynamic #14:apply:(Lscala/Function2;)Lscala/Function2;
     147: invokeinterface #1923,  4         // InterfaceMethod scalaz/Foldable.foldLeft:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     152: areturn

  public java.lang.Object foldMap1(java.lang.Object, scala.Function1, scalaz.Semigroup);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      11: getstatic     #1853               // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      14: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      17: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      20: astore        8
      22: ifnonnull     27
      25: aconst_null
      26: athrow
      27: aload         8
      29: aload         4
      31: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      34: aload_2
      35: aload_3
      36: aload_2
      37: invokedynamic #1863,  0           // InvokeDynamic #10:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
      42: invokeinterface #1865,  4         // InterfaceMethod scalaz/Foldable.foldMapRight1Opt:(Ljava/lang/Object;Lscala/Function1;Lscala/Function2;)Lscala/Option;
      47: astore        6
      49: aload         6
      51: instanceof    #1867               // class scala/Some
      54: ifeq          88
      57: aload         6
      59: checkcast     #1867               // class scala/Some
      62: invokevirtual #1869               // Method scala/Some.value:()Ljava/lang/Object;
      65: astore        7
      67: aload_3
      68: aload         7
      70: aload_2
      71: aload         4
      73: invokedynamic #1877,  0           // InvokeDynamic #11:apply:(Lscala/Function1;Lscalaz/Zipper;)Lscala/Function0;
      78: invokeinterface #1882,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      83: astore        5
      85: goto          125
      88: getstatic     #1887               // Field scala/None$.MODULE$:Lscala/None$;
      91: aload         6
      93: invokevirtual #1890               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      96: ifeq          115
      99: aload_2
     100: aload         4
     102: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     105: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     110: astore        5
     112: goto          125
     115: new           #1892               // class scala/MatchError
     118: dup
     119: aload         6
     121: invokespecial #1896               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     124: athrow
     125: aload         5
     127: aload_3
     128: aload_2
     129: invokedynamic #1902,  0           // InvokeDynamic #12:apply:(Lscalaz/Semigroup;Lscala/Function1;)Lscala/Function2;
     134: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     137: areturn

  public boolean any(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore_3
       5: aload_3
       6: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
       9: aload_2
      10: invokevirtual #1845               // Method scala/collection/immutable/Stream.exists:(Lscala/Function1;)Z
      13: ifne          43
      16: aload_2
      17: aload_3
      18: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      21: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokestatic  #1841               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      29: ifne          43
      32: aload_3
      33: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      36: aload_2
      37: invokevirtual #1845               // Method scala/collection/immutable/Stream.exists:(Lscala/Function1;)Z
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: iconst_0
      46: ireturn

  public boolean all(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore_3
       5: aload_3
       6: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
       9: aload_2
      10: invokevirtual #1836               // Method scala/collection/immutable/Stream.forall:(Lscala/Function1;)Z
      13: ifeq          45
      16: aload_2
      17: aload_3
      18: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      21: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokestatic  #1841               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
      29: ifeq          45
      32: aload_3
      33: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      36: aload_2
      37: invokevirtual #1836               // Method scala/collection/immutable/Stream.forall:(Lscala/Function1;)Z
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: iconst_0
      46: ireturn

  public java.lang.Object map(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore_3
       5: aload_3
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      14: aload_3
      15: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      18: aload_2
      19: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      22: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      25: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      28: checkcast     #28                 // class scala/collection/immutable/Stream
      31: aload_2
      32: aload_3
      33: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      36: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      41: aload_3
      42: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      45: aload_2
      46: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      49: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      52: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      55: checkcast     #28                 // class scala/collection/immutable/Stream
      58: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      61: areturn

  public java.lang.Object ap(scala.Function0, scala.Function0);
    Code:
       0: aload_1
       1: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       6: checkcast     #1597               // class scalaz/Zipper
       9: dup
      10: ifnonnull     15
      13: aconst_null
      14: athrow
      15: astore_3
      16: aload_3
      17: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      20: aload_2
      21: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      26: checkcast     #1597               // class scalaz/Zipper
      29: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      32: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      35: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #1810               // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #28                 // class scala/collection/immutable/Stream
      44: invokedynamic #1819,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
      49: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      52: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      55: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      58: checkcast     #28                 // class scala/collection/immutable/Stream
      61: astore        4
      63: aload_3
      64: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      67: aload_2
      68: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      73: checkcast     #1597               // class scalaz/Zipper
      76: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      79: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      82: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      85: invokevirtual #1810               // Method scala/collection/immutable/Stream.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      88: checkcast     #28                 // class scala/collection/immutable/Stream
      91: invokedynamic #1824,  0           // InvokeDynamic #9:apply:()Lscala/Function1;
      96: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      99: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     102: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     105: checkcast     #28                 // class scala/collection/immutable/Stream
     108: astore        5
     110: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
     113: aload         4
     115: aload_2
     116: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     121: checkcast     #1597               // class scalaz/Zipper
     124: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     127: checkcast     #1636               // class scala/Function1
     130: aload_3
     131: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
     134: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     139: aload         5
     141: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
     144: areturn

  public java.lang.Object point(scala.Function0);
    Code:
       0: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
       6: invokevirtual #1799               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
       9: aload_1
      10: invokevirtual #1803               // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      13: aload_1
      14: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      19: getstatic     #1795               // Field scala/package$.MODULE$:Lscala/package$;
      22: invokevirtual #1799               // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
      25: aload_1
      26: invokevirtual #1803               // Method scala/collection/immutable/Stream$.continually:(Lscala/Function0;)Lscala/collection/immutable/Stream;
      29: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      32: areturn

  public java.lang.Object foldMap(java.lang.Object, scala.Function1, scalaz.Monoid);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: aload_3
       9: invokeinterface #1775,  1         // InterfaceMethod scalaz/Monoid.zero:()Ljava/lang/Object;
      14: aload_3
      15: aload_2
      16: invokedynamic #1783,  0           // InvokeDynamic #7:apply:(Lscalaz/Monoid;Lscala/Function1;)Lscala/Function2;
      21: astore        6
      23: astore        5
      25: ifnonnull     30
      28: aconst_null
      29: athrow
      30: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      33: aload         4
      35: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      38: aload         4
      40: invokedynamic #1760,  0           // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      45: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      48: aload         4
      50: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      53: aload         5
      55: aload         6
      57: invokedynamic #1765,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      62: invokevirtual #1766               // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      65: aload         6
      67: invokevirtual #1767               // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      70: areturn

  public java.lang.Object foldLeft(java.lang.Object, java.lang.Object, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      16: aload         4
      18: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      21: aload         4
      23: invokedynamic #1760,  0           // InvokeDynamic #5:apply:(Lscalaz/Zipper;)Lscala/Function0;
      28: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      31: aload         4
      33: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      36: aload_2
      37: aload_3
      38: invokedynamic #1765,  0           // InvokeDynamic #6:apply:(Lscala/Function2;)Lscala/Function2;
      43: invokevirtual #1766               // Method scala/collection/immutable/Stream.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      46: aload_3
      47: invokevirtual #1767               // Method scala/collection/immutable/Stream$Cons.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      50: areturn

  public java.lang.Object foldRight(java.lang.Object, scala.Function0, scala.Function2);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: aload         4
      15: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      18: getstatic     #1720               // Field scala/collection/immutable/Stream$cons$.MODULE$:Lscala/collection/immutable/Stream$cons$;
      21: aload         4
      23: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      26: aload         4
      28: invokedynamic #1729,  0           // InvokeDynamic #2:apply:(Lscalaz/Zipper;)Lscala/Function0;
      33: invokevirtual #1732               // Method scala/collection/immutable/Stream$cons$.apply:(Ljava/lang/Object;Lscala/Function0;)Lscala/collection/immutable/Stream$Cons;
      36: aload_2
      37: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      42: aload_3
      43: invokedynamic #1743,  0           // InvokeDynamic #3:apply:(Lscala/Function2;)Lscala/Function2;
      48: invokevirtual #1745               // Method scala/collection/immutable/Stream$Cons.foldRight:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      51: aload_3
      52: invokedynamic #1750,  0           // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
      57: invokevirtual #1753               // Method scala/collection/immutable/Stream.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      60: areturn

  public java.lang.Object traverseImpl(java.lang.Object, scala.Function1, scalaz.Applicative);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore        4
       6: aload         4
       8: ifnonnull     13
      11: aconst_null
      12: athrow
      13: invokedynamic #1674,  0           // InvokeDynamic #0:apply:()Lscala/Function3;
      18: invokeinterface #1680,  1         // InterfaceMethod scala/Function3.curried:()Lscala/Function1;
      23: astore        5
      25: getstatic     #1685               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      28: ifnonnull     33
      31: aconst_null
      32: athrow
      33: aload_3
      34: aload         4
      36: aload_3
      37: aload_2
      38: aload_3
      39: aload         5
      41: invokedynamic #1695,  0           // InvokeDynamic #1:apply:(Lscalaz/Zipper;Lscalaz/Applicative;Lscala/Function1;Lscalaz/Applicative;Lscala/Function1;)Lscala/Function0;
      46: invokeinterface #1697,  2         // InterfaceMethod scalaz/Applicative.apF:(Lscala/Function0;)Lscala/Function1;
      51: getstatic     #1702               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
      54: getstatic     #1707               // Field scalaz/std/stream$.MODULE$:Lscalaz/std/stream$;
      57: invokevirtual #1711               // Method scalaz/std/stream$.streamInstance:()Lscalaz/Traverse;
      60: astore        6
      62: ifnonnull     67
      65: aconst_null
      66: athrow
      67: aload         6
      69: aload         4
      71: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      74: aload_2
      75: aload_3
      76: invokeinterface #1713,  4         // InterfaceMethod scalaz/Traverse.traverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Applicative;)Ljava/lang/Object;
      81: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      86: areturn

  public java.lang.Object copoint(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1597               // class scalaz/Zipper
       5: invokevirtual #2099               // Method copoint:(Lscalaz/Zipper;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object cobind(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: checkcast     #1597               // class scalaz/Zipper
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #1607               // Method cojoin:(Lscalaz/Zipper;)Lscalaz/Zipper;
      10: astore        4
      12: aload         4
      14: ifnonnull     19
      17: aconst_null
      18: athrow
      19: getstatic     #1613               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
      22: aload         4
      24: invokevirtual #1617               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/Stream;
      27: aload_2
      28: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      31: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      34: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      37: checkcast     #28                 // class scala/collection/immutable/Stream
      40: aload_2
      41: aload         4
      43: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      46: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: aload         4
      53: invokevirtual #1641               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/Stream;
      56: aload_2
      57: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      60: invokevirtual #1626               // Method scala/collection/immutable/Stream$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      63: invokevirtual #1630               // Method scala/collection/immutable/Stream.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      66: checkcast     #28                 // class scala/collection/immutable/Stream
      69: invokevirtual #1645               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)Lscalaz/Zipper;
      72: areturn

  public java.lang.Object cojoin(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1597               // class scalaz/Zipper
       5: invokevirtual #1607               // Method cojoin:(Lscalaz/Zipper;)Lscalaz/Zipper;
       8: areturn

  public static final java.lang.Object $anonfun$foldMap$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap$1(scalaz.Monoid, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2111,  0           // InvokeDynamic #28:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #2112,  3         // InterfaceMethod scalaz/Monoid.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMap1$2(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$1(scalaz.Semigroup, scala.Function1, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_1
       8: aload_2
       9: invokedynamic #2120,  0           // InvokeDynamic #29:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
      14: invokeinterface #1882,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      19: areturn

  public static final java.lang.Object $anonfun$foldMap1$3(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$foldMap1$5(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.Object $anonfun$foldMap1$4(scalaz.Semigroup, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload_3
       4: invokedynamic #2127,  0           // InvokeDynamic #30:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
       9: invokeinterface #1882,  3         // InterfaceMethod scalaz/Semigroup.append:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      14: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$1(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$foldMapRight1$2(scala.Function2, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #2135,  0           // InvokeDynamic #31:apply:(Ljava/lang/Object;)Lscala/Function0;
       8: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final java.lang.Object $anonfun$foldMapLeft1$1(scala.Function2, java.lang.Object, scala.Function0);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1736,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #1916,  3         // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverse1Impl$2(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2143               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #28                 // class scala/collection/immutable/Stream
       7: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverse1Impl$1(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2147               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       4: astore_1
       5: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
       8: aload_0
       9: invokedynamic #2153,  0           // InvokeDynamic #32:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      14: invokevirtual #2157               // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      17: aload_1
      18: invokevirtual #2159               // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      21: invokevirtual #1949               // Method scala/collection/immutable/Stream.reverse:()Lscala/collection/immutable/Stream;
      24: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$3(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$4(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$5(scalaz.Traverse1, java.lang.Object, scala.collection.immutable.Stream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       4: aload_1
       5: aload_2
       6: invokevirtual #1975               // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       9: aload_3
      10: aload         4
      12: invokeinterface #1977,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      17: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverse1Impl$7(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2143               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #28                 // class scala/collection/immutable/Stream
       7: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$6(scala.collection.immutable.Stream, java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1597               // class scalaz/Zipper
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #2147               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      10: astore_3
      11: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      14: aload_2
      15: invokedynamic #2172,  0           // InvokeDynamic #33:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      20: invokevirtual #2157               // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      23: aload_3
      24: invokevirtual #2159               // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      27: invokespecial #2175               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)V
      30: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$8(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$9(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$10(scala.collection.immutable.Stream, java.lang.Object);
    Code:
       0: new           #1597               // class scalaz/Zipper
       3: dup
       4: aload_0
       5: aload_1
       6: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       9: invokespecial #2175               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)V
      12: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$11(scala.Function1, scalaz.Zipper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1634               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
       5: invokeinterface #1638,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static final java.lang.Object $anonfun$traverse1Impl$12(scalaz.Traverse1, java.lang.Object, scala.collection.immutable.Stream, scala.Function1, scalaz.Apply);
    Code:
       0: aload_0
       1: getstatic     #1944               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       4: aload_1
       5: aload_2
       6: invokevirtual #1975               // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       9: aload_3
      10: aload         4
      12: invokeinterface #1977,  4         // InterfaceMethod scalaz/Traverse1.traverse1:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Apply;)Ljava/lang/Object;
      17: areturn

  public static final scala.collection.immutable.Stream $anonfun$traverse1Impl$14(scalaz.OneAnd);
    Code:
       0: aload_0
       1: invokevirtual #2143               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
       4: checkcast     #28                 // class scala/collection/immutable/Stream
       7: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$13(java.lang.Object, scalaz.OneAnd);
    Code:
       0: new           #1597               // class scalaz/Zipper
       3: dup
       4: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       7: aload_0
       8: aload_1
       9: invokevirtual #2147               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
      12: astore_2
      13: getstatic     #1622               // Field scala/collection/immutable/Stream$.MODULE$:Lscala/collection/immutable/Stream$;
      16: aload_1
      17: invokedynamic #2183,  0           // InvokeDynamic #34:apply:(Lscalaz/OneAnd;)Lscala/Function0;
      22: invokevirtual #2157               // Method scala/collection/immutable/Stream$.consWrapper:(Lscala/Function0;)Lscala/collection/immutable/Stream$ConsWrapper;
      25: aload_2
      26: invokevirtual #2159               // Method scala/collection/immutable/Stream$ConsWrapper.$hash$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/Stream;
      29: invokespecial #2175               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)V
      32: areturn

  public static final scalaz.Zipper $anonfun$traverse1Impl$15(java.lang.Object);
    Code:
       0: new           #1597               // class scalaz/Zipper
       3: dup
       4: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
       7: aload_0
       8: getstatic     #2016               // Field scala/collection/immutable/Stream$Empty$.MODULE$:Lscala/collection/immutable/Stream$Empty$;
      11: invokespecial #2175               // Method scalaz/Zipper."<init>":(Lscala/collection/immutable/Stream;Ljava/lang/Object;Lscala/collection/immutable/Stream;)V
      14: areturn

  public scalaz.ZipperInstances$$anon$1(scalaz.ZipperInstances);
    Code:
       0: aload_0
       1: invokespecial #2188               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2192               // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #2195               // InterfaceMethod scalaz/Functor.$init$:(Lscalaz/Functor;)V
      12: aload_0
      13: invokestatic  #2198               // InterfaceMethod scalaz/Foldable.$init$:(Lscalaz/Foldable;)V
      16: aload_0
      17: invokestatic  #2201               // InterfaceMethod scalaz/Traverse.$init$:(Lscalaz/Traverse;)V
      20: aload_0
      21: invokestatic  #2204               // InterfaceMethod scalaz/Foldable1.$init$:(Lscalaz/Foldable1;)V
      24: aload_0
      25: invokestatic  #2207               // InterfaceMethod scalaz/Traverse1.$init$:(Lscalaz/Traverse1;)V
      28: aload_0
      29: invokestatic  #2210               // InterfaceMethod scalaz/Apply.$init$:(Lscalaz/Apply;)V
      32: aload_0
      33: invokestatic  #2213               // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      36: aload_0
      37: invokestatic  #2216               // InterfaceMethod scalaz/Applicative.$init$:(Lscalaz/Applicative;)V
      40: aload_0
      41: invokestatic  #2219               // InterfaceMethod scalaz/Cobind.$init$:(Lscalaz/Cobind;)V
      44: aload_0
      45: invokestatic  #2222               // InterfaceMethod scalaz/Comonad.$init$:(Lscalaz/Comonad;)V
      48: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2235,  0           // InvokeDynamic #35:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
