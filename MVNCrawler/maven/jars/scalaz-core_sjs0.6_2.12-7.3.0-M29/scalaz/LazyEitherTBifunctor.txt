Compiled from "LazyEitherT.scala"
public interface scalaz.LazyEitherTBifunctor<F> extends scalaz.Bifunctor<?> {
  public abstract scalaz.Functor<F> F();

  public static scalaz.LazyEitherT bimap$(scalaz.LazyEitherTBifunctor, scalaz.LazyEitherT, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #34                 // InterfaceMethod bimap:(Lscalaz/LazyEitherT;Lscala/Function1;Lscala/Function1;)Lscalaz/LazyEitherT;
       7: areturn

  public default <A, B, C, D> scalaz.LazyEitherT<F, C, D> bimap(scalaz.LazyEitherT<F, A, B>, scala.Function1<A, C>, scala.Function1<B, D>);
    Code:
       0: aload_1
       1: aload_3
       2: invokedynamic #62,  0             // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
       7: aload_0
       8: invokeinterface #64,  1           // InterfaceMethod F:()Lscalaz/Functor;
      13: astore        5
      15: astore        4
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: getstatic     #70                 // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
      25: aload         5
      27: aload_1
      28: invokevirtual #74                 // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      31: aload         4
      33: invokedynamic #82,  0             // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      38: invokeinterface #88,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      43: invokevirtual #92                 // Method scalaz/LazyEitherT$.lazyEitherT:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
      46: invokevirtual #96                 // Method scalaz/LazyEitherT.left:()Lscalaz/LazyEitherT$LeftProjectionT;
      49: aload_2
      50: invokedynamic #101,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
      55: aload_0
      56: invokeinterface #64,  1           // InterfaceMethod F:()Lscalaz/Functor;
      61: astore        8
      63: astore        7
      65: dup
      66: ifnonnull     71
      69: aconst_null
      70: athrow
      71: astore        6
      73: new           #20                 // class scalaz/LazyEitherT
      76: dup
      77: aload         8
      79: aload         6
      81: invokevirtual #104                // Method scalaz/LazyEitherT$LeftProjectionT.lazyEitherT:()Lscalaz/LazyEitherT;
      84: invokevirtual #74                 // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
      87: aload         7
      89: invokedynamic #109,  0            // InvokeDynamic #3:apply:(Lscala/Function1;)Lscala/Function1;
      94: invokeinterface #88,  3           // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      99: invokespecial #113                // Method scalaz/LazyEitherT."<init>":(Ljava/lang/Object;)V
     102: areturn

  public static java.lang.Object $anonfun$bimap$1(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #127,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #129,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static java.lang.Object $anonfun$bimap$2(scala.Function1, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #127,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #129,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static void $init$(scalaz.LazyEitherTBifunctor);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #145,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
