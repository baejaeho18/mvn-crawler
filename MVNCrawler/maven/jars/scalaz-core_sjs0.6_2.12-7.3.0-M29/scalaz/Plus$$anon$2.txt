Compiled from "Plus.scala"
public final class scalaz.Plus$$anon$2 implements scalaz.ProductPlus<F, G> {
  private final scalaz.syntax.PlusSyntax<?> plusSyntax;

  private final scalaz.Plus $outer;

  private final scalaz.Plus G0$1;

  public <A> scala.Tuple2<F, G> plus(scala.Tuple2<F, G>, scala.Function0<scala.Tuple2<F, G>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // InterfaceMethod scalaz/ProductPlus.plus$:(Lscalaz/ProductPlus;Lscala/Tuple2;Lscala/Function0;)Lscala/Tuple2;
       6: areturn

  public <S, A> scalaz.Maybe<scala.Tuple2<F, G>> unfoldlPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<S, scala.Tuple2<F, G>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // InterfaceMethod scalaz/Plus.unfoldlPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <S, A> scalaz.Maybe<scala.Tuple2<F, G>> unfoldrPsumOpt(S, scala.Function1<S, scalaz.Maybe<scala.Tuple2<scala.Tuple2<F, G>, S>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // InterfaceMethod scalaz/Plus.unfoldrPsumOpt$:(Lscalaz/Plus;Ljava/lang/Object;Lscala/Function1;)Lscalaz/Maybe;
       6: areturn

  public <G> scalaz.Plus<?> compose();
    Code:
       0: aload_0
       1: invokestatic  #62                 // InterfaceMethod scalaz/Plus.compose$:(Lscalaz/Plus;)Lscalaz/Plus;
       4: areturn

  public <G> scalaz.Plus<?> product(scalaz.Plus<G>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // InterfaceMethod scalaz/Plus.product$:(Lscalaz/Plus;Lscalaz/Plus;)Lscalaz/Plus;
       5: areturn

  public <A> scalaz.Semigroup<scala.Tuple2<F, G>> semigroup();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod scalaz/Plus.semigroup$:(Lscalaz/Plus;)Lscalaz/Semigroup;
       4: areturn

  public scalaz.Plus<?>.PlusLaw plusLaw();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod scalaz/Plus.plusLaw$:(Lscalaz/Plus;)Lscalaz/Plus$PlusLaw;
       4: areturn

  public scalaz.syntax.PlusSyntax<?> plusSyntax();
    Code:
       0: aload_0
       1: getfield      #86                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       4: areturn

  public void scalaz$Plus$_setter_$plusSyntax_$eq(scalaz.syntax.PlusSyntax<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field plusSyntax:Lscalaz/syntax/PlusSyntax;
       5: return

  public scalaz.Plus<F> F();
    Code:
       0: aload_0
       1: getfield      #94                 // Field $outer:Lscalaz/Plus;
       4: areturn

  public scalaz.Plus<G> G();
    Code:
       0: aload_0
       1: getfield      #98                 // Field G0$1:Lscalaz/Plus;
       4: areturn

  public java.lang.Object plus(java.lang.Object, scala.Function0);
    Code:
       0: aload_1
       1: checkcast     #101                // class scala/Tuple2
       4: astore_3
       5: new           #101                // class scala/Tuple2
       8: dup
       9: aload_0
      10: invokeinterface #103,  1          // InterfaceMethod scalaz/ProductPlus.F:()Lscalaz/Plus;
      15: aload_3
      16: invokevirtual #107                // Method scala/Tuple2._1:()Ljava/lang/Object;
      19: aload_2
      20: invokedynamic #128,  0            // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
      25: invokeinterface #130,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      30: aload_0
      31: invokeinterface #132,  1          // InterfaceMethod scalaz/ProductPlus.G:()Lscalaz/Plus;
      36: aload_3
      37: invokevirtual #135                // Method scala/Tuple2._2:()Ljava/lang/Object;
      40: aload_2
      41: invokedynamic #140,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
      46: invokeinterface #130,  3          // InterfaceMethod scalaz/Plus.plus:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      51: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      54: areturn

  public scalaz.Plus$$anon$2(scalaz.Plus<F>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #94                 // Field $outer:Lscalaz/Plus;
      11: aload_0
      12: aload_2
      13: putfield      #98                 // Field G0$1:Lscalaz/Plus;
      16: aload_0
      17: invokespecial #150                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #154                // InterfaceMethod scalaz/Plus.$init$:(Lscalaz/Plus;)V
      24: aload_0
      25: invokestatic  #157                // InterfaceMethod scalaz/ProductPlus.$init$:(Lscalaz/ProductPlus;)V
      28: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #169,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
