Compiled from "Crc32cLongChecksum.java"
public class com.scurrilous.circe.checksum.Crc32cLongChecksum {
  private static final org.slf4j.Logger log;

  static final com.scurrilous.circe.IncrementalIntHash CRC32C_HASH;

  public com.scurrilous.circe.checksum.Crc32cLongChecksum();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long computeChecksum(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       4: ifeq          43
       7: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      10: instanceof    #4                  // class com/scurrilous/circe/crc/Sse42Crc32C
      13: ifeq          43
      16: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      19: aload_0
      20: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      23: aload_0
      24: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      27: i2l
      28: ladd
      29: aload_0
      30: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      33: i2l
      34: invokeinterface #8,  5            // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:(JJ)I
      39: istore_1
      40: goto          92
      43: aload_0
      44: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.hasArray:()Z
      47: ifeq          79
      50: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      53: aload_0
      54: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.array:()[B
      57: aload_0
      58: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      61: aload_0
      62: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      65: iadd
      66: aload_0
      67: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      70: invokeinterface #12,  4           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:([BII)I
      75: istore_1
      76: goto          92
      79: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      82: aload_0
      83: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      86: invokeinterface #14,  2           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:(Ljava/nio/ByteBuffer;)I
      91: istore_1
      92: iload_1
      93: i2l
      94: ldc2_w        #15                 // long 4294967295l
      97: land
      98: lreturn

  public static long resumeChecksum(long, io.netty.buffer.ByteBuf);
    Code:
       0: lload_0
       1: l2i
       2: istore_3
       3: aload_2
       4: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       7: ifeq          47
      10: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      13: instanceof    #4                  // class com/scurrilous/circe/crc/Sse42Crc32C
      16: ifeq          47
      19: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      22: iload_3
      23: aload_2
      24: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      27: aload_2
      28: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      31: i2l
      32: ladd
      33: aload_2
      34: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      37: i2l
      38: invokeinterface #17,  6           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(IJJ)I
      43: istore_3
      44: goto          98
      47: aload_2
      48: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.hasArray:()Z
      51: ifeq          84
      54: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      57: iload_3
      58: aload_2
      59: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.array:()[B
      62: aload_2
      63: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      66: aload_2
      67: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      70: iadd
      71: aload_2
      72: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      75: invokeinterface #18,  5           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(I[BII)I
      80: istore_3
      81: goto          98
      84: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      87: iload_3
      88: aload_2
      89: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      92: invokeinterface #19,  3           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(ILjava/nio/ByteBuffer;)I
      97: istore_3
      98: iload_3
      99: i2l
     100: ldc2_w        #15                 // long 4294967295l
     103: land
     104: lreturn

  static {};
    Code:
       0: ldc           #20                 // class com/scurrilous/circe/checksum/Crc32cLongChecksum
       2: invokestatic  #21                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field log:Lorg/slf4j/Logger;
       8: invokestatic  #23                 // Method com/scurrilous/circe/crc/Sse42Crc32C.isSupported:()Z
      11: ifeq          54
      14: new           #24                 // class com/scurrilous/circe/checksum/Crc32cSse42Provider
      17: dup
      18: invokespecial #25                 // Method com/scurrilous/circe/checksum/Crc32cSse42Provider."<init>":()V
      21: getstatic     #26                 // Field com/scurrilous/circe/params/CrcParameters.CRC32C:Lcom/scurrilous/circe/params/CrcParameters;
      24: invokevirtual #27                 // Method com/scurrilous/circe/checksum/Crc32cSse42Provider.getIncrementalInt:(Lcom/scurrilous/circe/HashParameters;)Lcom/scurrilous/circe/IncrementalIntHash;
      27: putstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      30: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
      33: invokeinterface #28,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          80
      41: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
      44: ldc           #29                 // String SSE4.2 CRC32C provider initialized
      46: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      51: goto          80
      54: new           #31                 // class com/scurrilous/circe/crc/StandardCrcProvider
      57: dup
      58: invokespecial #32                 // Method com/scurrilous/circe/crc/StandardCrcProvider."<init>":()V
      61: getstatic     #26                 // Field com/scurrilous/circe/params/CrcParameters.CRC32C:Lcom/scurrilous/circe/params/CrcParameters;
      64: invokevirtual #33                 // Method com/scurrilous/circe/crc/StandardCrcProvider.getIncrementalInt:(Lcom/scurrilous/circe/HashParameters;)Lcom/scurrilous/circe/IncrementalIntHash;
      67: putstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      70: getstatic     #22                 // Field log:Lorg/slf4j/Logger;
      73: ldc           #34                 // String Failed to load Circe JNI library. Falling back to Java based CRC32c provider
      75: invokeinterface #35,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      80: return
}
