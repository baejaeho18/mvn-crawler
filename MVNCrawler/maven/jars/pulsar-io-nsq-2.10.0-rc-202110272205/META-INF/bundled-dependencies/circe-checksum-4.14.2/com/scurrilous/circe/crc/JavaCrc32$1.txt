Compiled from "JavaCrc32.java"
class com.scurrilous.circe.crc.JavaCrc32$1 extends com.scurrilous.circe.impl.AbstractStatelessIntHash {
  final com.scurrilous.circe.crc.JavaCrc32 this$0;

  com.scurrilous.circe.crc.JavaCrc32$1(com.scurrilous.circe.crc.JavaCrc32);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/scurrilous/circe/crc/JavaCrc32;
       5: aload_0
       6: invokespecial #3                  // Method com/scurrilous/circe/impl/AbstractStatelessIntHash."<init>":()V
       9: return

  public java.lang.String algorithm();
    Code:
       0: invokestatic  #4                  // Method com/scurrilous/circe/crc/JavaCrc32.access$000:()Ljava/lang/String;
       3: areturn

  public int length();
    Code:
       0: iconst_4
       1: ireturn

  public com.scurrilous.circe.StatefulIntHash createStateful();
    Code:
       0: new           #1                  // class com/scurrilous/circe/crc/JavaCrc32
       3: dup
       4: invokespecial #5                  // Method com/scurrilous/circe/crc/JavaCrc32."<init>":()V
       7: areturn

  protected int calculateUnchecked(byte[], int, int);
    Code:
       0: new           #6                  // class java/util/zip/CRC32
       3: dup
       4: invokespecial #7                  // Method java/util/zip/CRC32."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #8                  // Method java/util/zip/CRC32.update:([BII)V
      17: aload         4
      19: invokevirtual #9                  // Method java/util/zip/CRC32.getValue:()J
      22: l2i
      23: ireturn

  public com.scurrilous.circe.StatefulHash createStateful();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method createStateful:()Lcom/scurrilous/circe/StatefulIntHash;
       4: areturn
}
