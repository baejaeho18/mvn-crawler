Compiled from "AbstractIncrementalIntHash.java"
public abstract class com.scurrilous.circe.impl.AbstractIncrementalIntHash implements com.scurrilous.circe.IncrementalIntHash {
  public com.scurrilous.circe.impl.AbstractIncrementalIntHash();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean supportsUnsafe();
    Code:
       0: iconst_0
       1: ireturn

  public com.scurrilous.circe.StatefulIntHash createStateful();
    Code:
       0: new           #2                  // class com/scurrilous/circe/impl/IncrementalIntStatefulHash
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method com/scurrilous/circe/impl/IncrementalIntStatefulHash."<init>":(Lcom/scurrilous/circe/impl/AbstractIncrementalIntHash;)V
       8: areturn

  public int calculate(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method initial:()I
       5: aload_1
       6: invokevirtual #5                  // Method resume:(I[B)I
       9: ireturn

  public int calculate(byte[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method initial:()I
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #6                  // Method resume:(I[BII)I
      11: ireturn

  public int calculate(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method initial:()I
       5: aload_1
       6: invokevirtual #7                  // Method resume:(ILjava/nio/ByteBuffer;)I
       9: ireturn

  public int calculate(long, long);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method initial:()I
       5: lload_1
       6: lload_3
       7: invokevirtual #8                  // Method resume:(IJJ)I
      10: ireturn

  public int resume(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #9                  // Method resumeUnchecked:(I[BII)I
       9: ireturn

  public int resume(int, byte[], int, int);
    Code:
       0: iload         4
       2: ifge          13
       5: new           #10                 // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: iload_3
      14: iflt          26
      17: iload_3
      18: iload         4
      20: iadd
      21: aload_2
      22: arraylength
      23: if_icmple     34
      26: new           #12                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      33: athrow
      34: aload_0
      35: iload_1
      36: aload_2
      37: iload_3
      38: iload         4
      40: invokevirtual #9                  // Method resumeUnchecked:(I[BII)I
      43: ireturn

  public int resume(int, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: invokevirtual #14                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore        5
       6: aload_2
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          41
      13: aload_2
      14: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      17: astore_3
      18: aload_2
      19: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I
      22: aload_2
      23: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      26: iadd
      27: istore        4
      29: aload_2
      30: aload_2
      31: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
      34: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      37: pop
      38: goto          55
      41: iload         5
      43: newarray       byte
      45: astore_3
      46: iconst_0
      47: istore        4
      49: aload_2
      50: aload_3
      51: invokevirtual #21                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      54: pop
      55: aload_0
      56: iload_1
      57: aload_3
      58: iload         4
      60: iload         5
      62: invokevirtual #9                  // Method resumeUnchecked:(I[BII)I
      65: ireturn

  public int resume(int, long, long);
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected abstract int initial();

  protected abstract int resumeUnchecked(int, byte[], int, int);

  public com.scurrilous.circe.StatefulHash createStateful();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method createStateful:()Lcom/scurrilous/circe/StatefulIntHash;
       4: areturn
}
