Compiled from "MurmurHash3Parameters.java"
public final class com.scurrilous.circe.params.MurmurHash3Parameters implements com.scurrilous.circe.HashParameters {
  private final com.scurrilous.circe.params.MurmurHash3Variant variant;

  private final int seed;

  public com.scurrilous.circe.params.MurmurHash3Parameters(com.scurrilous.circe.params.MurmurHash3Variant);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lcom/scurrilous/circe/params/MurmurHash3Variant;I)V
       6: return

  public com.scurrilous.circe.params.MurmurHash3Parameters(com.scurrilous.circe.params.MurmurHash3Variant, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field variant:Lcom/scurrilous/circe/params/MurmurHash3Variant;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field seed:I
      14: return

  public com.scurrilous.circe.params.MurmurHash3Variant variant();
    Code:
       0: aload_0
       1: getfield      #3                  // Field variant:Lcom/scurrilous/circe/params/MurmurHash3Variant;
       4: areturn

  public int seed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field seed:I
       4: ireturn

  public java.lang.String algorithm();
    Code:
       0: aload_0
       1: getfield      #3                  // Field variant:Lcom/scurrilous/circe/params/MurmurHash3Variant;
       4: invokevirtual #5                  // Method com/scurrilous/circe/params/MurmurHash3Variant.algorithm:()Ljava/lang/String;
       7: areturn
}
