Compiled from "Crc32cIntChecksum.java"
public class com.scurrilous.circe.checksum.Crc32cIntChecksum {
  private static final org.slf4j.Logger log;

  static final com.scurrilous.circe.IncrementalIntHash CRC32C_HASH;

  public com.scurrilous.circe.checksum.Crc32cIntChecksum();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int computeChecksum(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       4: ifeq          40
       7: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      10: instanceof    #4                  // class com/scurrilous/circe/crc/Sse42Crc32C
      13: ifeq          40
      16: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      19: aload_0
      20: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      23: aload_0
      24: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      27: i2l
      28: ladd
      29: aload_0
      30: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      33: i2l
      34: invokeinterface #8,  5            // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:(JJ)I
      39: ireturn
      40: aload_0
      41: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.hasArray:()Z
      44: ifeq          73
      47: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      50: aload_0
      51: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.array:()[B
      54: aload_0
      55: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      58: aload_0
      59: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      62: iadd
      63: aload_0
      64: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      67: invokeinterface #12,  4           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:([BII)I
      72: ireturn
      73: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      76: aload_0
      77: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      80: invokeinterface #14,  2           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.calculate:(Ljava/nio/ByteBuffer;)I
      85: ireturn

  public static int resumeChecksum(int, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       4: ifeq          41
       7: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      10: instanceof    #4                  // class com/scurrilous/circe/crc/Sse42Crc32C
      13: ifeq          41
      16: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      19: iload_0
      20: aload_1
      21: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      24: aload_1
      25: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      28: i2l
      29: ladd
      30: aload_1
      31: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      34: i2l
      35: invokeinterface #15,  6           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(IJJ)I
      40: ireturn
      41: aload_1
      42: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.hasArray:()Z
      45: ifeq          75
      48: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      51: iload_0
      52: aload_1
      53: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.array:()[B
      56: aload_1
      57: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      60: aload_1
      61: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      64: iadd
      65: aload_1
      66: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      69: invokeinterface #16,  5           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(I[BII)I
      74: ireturn
      75: getstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      78: iload_0
      79: aload_1
      80: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      83: invokeinterface #17,  3           // InterfaceMethod com/scurrilous/circe/IncrementalIntHash.resume:(ILjava/nio/ByteBuffer;)I
      88: ireturn

  static {};
    Code:
       0: ldc           #18                 // class com/scurrilous/circe/checksum/Crc32cIntChecksum
       2: invokestatic  #19                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #20                 // Field log:Lorg/slf4j/Logger;
       8: invokestatic  #21                 // Method com/scurrilous/circe/crc/Sse42Crc32C.isSupported:()Z
      11: ifeq          43
      14: new           #22                 // class com/scurrilous/circe/checksum/Crc32cSse42Provider
      17: dup
      18: invokespecial #23                 // Method com/scurrilous/circe/checksum/Crc32cSse42Provider."<init>":()V
      21: getstatic     #24                 // Field com/scurrilous/circe/params/CrcParameters.CRC32C:Lcom/scurrilous/circe/params/CrcParameters;
      24: invokevirtual #25                 // Method com/scurrilous/circe/checksum/Crc32cSse42Provider.getIncrementalInt:(Lcom/scurrilous/circe/HashParameters;)Lcom/scurrilous/circe/IncrementalIntHash;
      27: putstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      30: getstatic     #20                 // Field log:Lorg/slf4j/Logger;
      33: ldc           #26                 // String SSE4.2 CRC32C provider initialized
      35: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      40: goto          69
      43: new           #28                 // class com/scurrilous/circe/crc/StandardCrcProvider
      46: dup
      47: invokespecial #29                 // Method com/scurrilous/circe/crc/StandardCrcProvider."<init>":()V
      50: getstatic     #24                 // Field com/scurrilous/circe/params/CrcParameters.CRC32C:Lcom/scurrilous/circe/params/CrcParameters;
      53: invokevirtual #30                 // Method com/scurrilous/circe/crc/StandardCrcProvider.getIncrementalInt:(Lcom/scurrilous/circe/HashParameters;)Lcom/scurrilous/circe/IncrementalIntHash;
      56: putstatic     #3                  // Field CRC32C_HASH:Lcom/scurrilous/circe/IncrementalIntHash;
      59: getstatic     #20                 // Field log:Lorg/slf4j/Logger;
      62: ldc           #31                 // String Failed to load Circe JNI library. Falling back to Java based CRC32c provider
      64: invokeinterface #32,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      69: return
}
