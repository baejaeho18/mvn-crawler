Compiled from "AbstractStatefulHash.java"
public abstract class com.scurrilous.circe.impl.AbstractStatefulHash implements com.scurrilous.circe.StatefulHash {
  public com.scurrilous.circe.impl.AbstractStatefulHash();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean supportsUnsafe();
    Code:
       0: iconst_0
       1: ireturn

  public void update(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #2                  // Method updateUnchecked:([BII)V
       8: return

  public void update(byte[], int, int);
    Code:
       0: iload_3
       1: ifge          12
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          24
      16: iload_2
      17: iload_3
      18: iadd
      19: aload_1
      20: arraylength
      21: if_icmple     32
      24: new           #5                  // class java/lang/IndexOutOfBoundsException
      27: dup
      28: invokespecial #6                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      31: athrow
      32: aload_0
      33: aload_1
      34: iload_2
      35: iload_3
      36: invokevirtual #2                  // Method updateUnchecked:([BII)V
      39: return

  public void update(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore        4
       6: aload_1
       7: invokevirtual #8                  // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          40
      13: aload_1
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.array:()[B
      17: astore_2
      18: aload_1
      19: invokevirtual #10                 // Method java/nio/ByteBuffer.arrayOffset:()I
      22: aload_1
      23: invokevirtual #11                 // Method java/nio/ByteBuffer.position:()I
      26: iadd
      27: istore_3
      28: aload_1
      29: aload_1
      30: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      33: invokevirtual #13                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: goto          109
      40: aload_1
      41: invokevirtual #14                 // Method java/nio/ByteBuffer.isDirect:()Z
      44: ifeq          96
      47: aload_0
      48: invokevirtual #15                 // Method supportsUnsafe:()Z
      51: ifeq          96
      54: aload_1
      55: invokestatic  #16                 // Method com/scurrilous/circe/impl/DirectByteBufferAccessLoader.getAddress:(Ljava/nio/ByteBuffer;)J
      58: lstore        5
      60: lload         5
      62: lconst_0
      63: lcmp
      64: ifeq          96
      67: lload         5
      69: aload_1
      70: invokevirtual #11                 // Method java/nio/ByteBuffer.position:()I
      73: i2l
      74: ladd
      75: lstore        5
      77: aload_1
      78: aload_1
      79: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      82: invokevirtual #13                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      85: pop
      86: aload_0
      87: lload         5
      89: iload         4
      91: i2l
      92: invokevirtual #17                 // Method update:(JJ)V
      95: return
      96: iload         4
      98: newarray       byte
     100: astore_2
     101: iconst_0
     102: istore_3
     103: aload_1
     104: aload_2
     105: invokevirtual #18                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     108: pop
     109: aload_0
     110: aload_2
     111: iload_3
     112: iload         4
     114: invokevirtual #2                  // Method updateUnchecked:([BII)V
     117: return

  public void update(long, long);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected abstract void updateUnchecked(byte[], int, int);

  public byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method length:()I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: aload_1
      11: arraylength
      12: invokevirtual #22                 // Method writeBytes:([BII)V
      15: aload_1
      16: areturn

  public int getBytes(byte[], int, int);
    Code:
       0: iload_3
       1: ifge          12
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          24
      16: iload_2
      17: iload_3
      18: iadd
      19: aload_1
      20: arraylength
      21: if_icmple     32
      24: new           #5                  // class java/lang/IndexOutOfBoundsException
      27: dup
      28: invokespecial #6                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      31: athrow
      32: iload_3
      33: aload_0
      34: invokevirtual #21                 // Method length:()I
      37: invokestatic  #23                 // Method java/lang/Math.min:(II)I
      40: istore        4
      42: aload_0
      43: aload_1
      44: iload_2
      45: iload         4
      47: invokevirtual #22                 // Method writeBytes:([BII)V
      50: iload         4
      52: ireturn

  protected void writeBytes(byte[], int, int);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getLong:()J
       4: lstore        4
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iload_3
      12: if_icmpge     38
      15: aload_1
      16: iload_2
      17: iload         6
      19: iadd
      20: lload         4
      22: l2i
      23: i2b
      24: bastore
      25: lload         4
      27: bipush        8
      29: lushr
      30: lstore        4
      32: iinc          6, 1
      35: goto          9
      38: return

  public byte getByte();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getInt:()I
       4: i2b
       5: ireturn

  public short getShort();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getInt:()I
       4: i2s
       5: ireturn
}
