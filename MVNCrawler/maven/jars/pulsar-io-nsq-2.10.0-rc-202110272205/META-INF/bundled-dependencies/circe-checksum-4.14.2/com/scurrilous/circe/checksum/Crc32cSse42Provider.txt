Compiled from "Crc32cSse42Provider.java"
public final class com.scurrilous.circe.checksum.Crc32cSse42Provider extends com.scurrilous.circe.impl.AbstractHashProvider<com.scurrilous.circe.HashParameters> {
  private static final int[] DEFAULT_CHUNK;

  public com.scurrilous.circe.checksum.Crc32cSse42Provider();
    Code:
       0: aload_0
       1: ldc           #1                  // class com/scurrilous/circe/HashParameters
       3: invokespecial #2                  // Method com/scurrilous/circe/impl/AbstractHashProvider."<init>":(Ljava/lang/Class;)V
       6: return

  protected java.util.EnumSet<com.scurrilous.circe.HashSupport> querySupportTyped(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method isCrc32C:(Lcom/scurrilous/circe/HashParameters;)Z
       4: ifeq          19
       7: invokestatic  #4                  // Method com/scurrilous/circe/crc/Sse42Crc32C.isSupported:()Z
      10: ifeq          19
      13: ldc           #5                  // class com/scurrilous/circe/HashSupport
      15: invokestatic  #6                  // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      18: areturn
      19: ldc           #5                  // class com/scurrilous/circe/HashSupport
      21: invokestatic  #7                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      24: areturn

  protected com.scurrilous.circe.Hash get(com.scurrilous.circe.HashParameters, java.util.EnumSet<com.scurrilous.circe.HashSupport>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method isCrc32C:(Lcom/scurrilous/circe/HashParameters;)Z
       4: ifeq          20
       7: invokestatic  #4                  // Method com/scurrilous/circe/crc/Sse42Crc32C.isSupported:()Z
      10: ifeq          20
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokevirtual #8                  // Method getCacheable:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      19: areturn
      20: new           #9                  // class java/lang/UnsupportedOperationException
      23: dup
      24: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
      27: athrow

  private static boolean isCrc32C(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field com/scurrilous/circe/params/CrcParameters.CRC32C:Lcom/scurrilous/circe/params/CrcParameters;
       4: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ireturn

  protected com.scurrilous.circe.StatelessHash createCacheable(com.scurrilous.circe.HashParameters, java.util.EnumSet<com.scurrilous.circe.HashSupport>);
    Code:
       0: new           #13                 // class com/scurrilous/circe/crc/Sse42Crc32C
       3: dup
       4: getstatic     #14                 // Field DEFAULT_CHUNK:[I
       7: invokespecial #15                 // Method com/scurrilous/circe/crc/Sse42Crc32C."<init>":([I)V
      10: areturn

  static {};
    Code:
       0: iconst_3
       1: newarray       int
       3: dup
       4: iconst_0
       5: sipush        4096
       8: iastore
       9: dup
      10: iconst_1
      11: sipush        512
      14: iastore
      15: dup
      16: iconst_2
      17: bipush        64
      19: iastore
      20: putstatic     #14                 // Field DEFAULT_CHUNK:[I
      23: return
}
