Compiled from "AbstractHashProvider.java"
public abstract class com.scurrilous.circe.impl.AbstractHashProvider<P extends com.scurrilous.circe.HashParameters> implements com.scurrilous.circe.HashProvider {
  private final java.lang.Class<P> parametersClass;

  protected com.scurrilous.circe.impl.AbstractHashProvider(java.lang.Class<P>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parametersClass:Ljava/lang/Class;
       9: return

  public final java.util.EnumSet<com.scurrilous.circe.HashSupport> querySupport(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parametersClass:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ifne          20
      14: ldc           #5                  // class com/scurrilous/circe/HashSupport
      16: invokestatic  #6                  // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      19: areturn
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field parametersClass:Ljava/lang/Class;
      25: aload_1
      26: invokevirtual #7                  // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #8                  // class com/scurrilous/circe/HashParameters
      32: invokevirtual #9                  // Method querySupportTyped:(Lcom/scurrilous/circe/HashParameters;)Ljava/util/EnumSet;
      35: areturn

  protected abstract java.util.EnumSet<com.scurrilous.circe.HashSupport> querySupportTyped(P);

  protected abstract com.scurrilous.circe.Hash get(P, java.util.EnumSet<com.scurrilous.circe.HashSupport>);

  protected final com.scurrilous.circe.Hash getCacheable(P, java.util.EnumSet<com.scurrilous.circe.HashSupport>);
    Code:
       0: invokestatic  #10                 // Method com/scurrilous/circe/impl/HashCacheLoader.hasCache:()Z
       3: ifeq          62
       6: invokestatic  #11                 // Method com/scurrilous/circe/impl/HashCacheLoader.getCache:()Lcom/scurrilous/circe/impl/HashCache;
       9: astore_3
      10: aload_3
      11: aload_1
      12: aload_2
      13: new           #12                 // class com/scurrilous/circe/impl/AbstractHashProvider$1
      16: dup
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #13                 // Method com/scurrilous/circe/impl/AbstractHashProvider$1."<init>":(Lcom/scurrilous/circe/impl/AbstractHashProvider;Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)V
      23: invokeinterface #14,  4           // InterfaceMethod com/scurrilous/circe/impl/HashCache.get:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;Ljava/util/concurrent/Callable;)Lcom/scurrilous/circe/Hash;
      28: areturn
      29: astore        4
      31: aload         4
      33: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      36: astore        5
      38: aload         5
      40: instanceof    #17                 // class java/lang/RuntimeException
      43: ifeq          52
      46: aload         5
      48: checkcast     #17                 // class java/lang/RuntimeException
      51: athrow
      52: new           #18                 // class java/lang/UnsupportedOperationException
      55: dup
      56: aload         4
      58: invokespecial #19                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
      62: aload_0
      63: aload_1
      64: aload_2
      65: invokevirtual #20                 // Method createCacheable:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/StatelessHash;
      68: areturn
    Exception table:
       from    to  target type
          10    28    29   Class java/util/concurrent/ExecutionException

  protected com.scurrilous.circe.StatelessHash createCacheable(P, java.util.EnumSet<com.scurrilous.circe.HashSupport>);
    Code:
       0: new           #18                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private com.scurrilous.circe.Hash castAndGet(com.scurrilous.circe.HashParameters, java.util.EnumSet<com.scurrilous.circe.HashSupport>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parametersClass:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ifne          22
      14: new           #18                 // class java/lang/UnsupportedOperationException
      17: dup
      18: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      21: athrow
      22: aload_0
      23: aload_0
      24: getfield      #2                  // Field parametersClass:Ljava/lang/Class;
      27: aload_1
      28: invokevirtual #7                  // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #8                  // class com/scurrilous/circe/HashParameters
      34: aload_2
      35: invokevirtual #22                 // Method get:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      38: areturn

  public com.scurrilous.circe.StatefulHash createStateful(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #23                 // Field com/scurrilous/circe/HashSupport.STATEFUL:Lcom/scurrilous/circe/HashSupport;
       5: invokestatic  #24                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       8: invokespecial #25                 // Method castAndGet:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      11: astore_2
      12: aload_2
      13: instanceof    #26                 // class com/scurrilous/circe/StatefulHash
      16: ifeq          24
      19: aload_2
      20: checkcast     #26                 // class com/scurrilous/circe/StatefulHash
      23: areturn
      24: aload_2
      25: instanceof    #27                 // class com/scurrilous/circe/StatelessHash
      28: ifeq          41
      31: aload_2
      32: checkcast     #27                 // class com/scurrilous/circe/StatelessHash
      35: invokeinterface #28,  1           // InterfaceMethod com/scurrilous/circe/StatelessHash.createStateful:()Lcom/scurrilous/circe/StatefulHash;
      40: areturn
      41: new           #18                 // class java/lang/UnsupportedOperationException
      44: dup
      45: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      48: athrow

  public com.scurrilous.circe.StatelessIntHash getStatelessInt(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #29                 // Field com/scurrilous/circe/HashSupport.INT_SIZED:Lcom/scurrilous/circe/HashSupport;
       5: invokestatic  #24                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       8: invokespecial #25                 // Method castAndGet:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      11: astore_2
      12: aload_2
      13: instanceof    #30                 // class com/scurrilous/circe/StatelessIntHash
      16: ifeq          24
      19: aload_2
      20: checkcast     #30                 // class com/scurrilous/circe/StatelessIntHash
      23: areturn
      24: aload_2
      25: instanceof    #31                 // class com/scurrilous/circe/StatefulIntHash
      28: ifeq          41
      31: aload_2
      32: checkcast     #31                 // class com/scurrilous/circe/StatefulIntHash
      35: invokeinterface #32,  1           // InterfaceMethod com/scurrilous/circe/StatefulIntHash.asStateless:()Lcom/scurrilous/circe/StatelessIntHash;
      40: areturn
      41: new           #18                 // class java/lang/UnsupportedOperationException
      44: dup
      45: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      48: athrow

  public com.scurrilous.circe.StatelessLongHash getStatelessLong(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #33                 // Field com/scurrilous/circe/HashSupport.LONG_SIZED:Lcom/scurrilous/circe/HashSupport;
       5: invokestatic  #24                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
       8: invokespecial #25                 // Method castAndGet:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      11: astore_2
      12: aload_2
      13: instanceof    #34                 // class com/scurrilous/circe/StatelessLongHash
      16: ifeq          24
      19: aload_2
      20: checkcast     #34                 // class com/scurrilous/circe/StatelessLongHash
      23: areturn
      24: aload_2
      25: instanceof    #35                 // class com/scurrilous/circe/StatefulLongHash
      28: ifeq          41
      31: aload_2
      32: checkcast     #35                 // class com/scurrilous/circe/StatefulLongHash
      35: invokeinterface #36,  1           // InterfaceMethod com/scurrilous/circe/StatefulLongHash.asStateless:()Lcom/scurrilous/circe/StatelessLongHash;
      40: areturn
      41: aload_2
      42: instanceof    #30                 // class com/scurrilous/circe/StatelessIntHash
      45: ifeq          60
      48: new           #37                 // class com/scurrilous/circe/impl/IntStatelessLongHash
      51: dup
      52: aload_2
      53: checkcast     #30                 // class com/scurrilous/circe/StatelessIntHash
      56: invokespecial #38                 // Method com/scurrilous/circe/impl/IntStatelessLongHash."<init>":(Lcom/scurrilous/circe/StatelessIntHash;)V
      59: areturn
      60: aload_2
      61: instanceof    #31                 // class com/scurrilous/circe/StatefulIntHash
      64: ifeq          84
      67: new           #37                 // class com/scurrilous/circe/impl/IntStatelessLongHash
      70: dup
      71: aload_2
      72: checkcast     #31                 // class com/scurrilous/circe/StatefulIntHash
      75: invokeinterface #32,  1           // InterfaceMethod com/scurrilous/circe/StatefulIntHash.asStateless:()Lcom/scurrilous/circe/StatelessIntHash;
      80: invokespecial #38                 // Method com/scurrilous/circe/impl/IntStatelessLongHash."<init>":(Lcom/scurrilous/circe/StatelessIntHash;)V
      83: areturn
      84: new           #18                 // class java/lang/UnsupportedOperationException
      87: dup
      88: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      91: athrow

  public com.scurrilous.circe.IncrementalIntHash getIncrementalInt(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #29                 // Field com/scurrilous/circe/HashSupport.INT_SIZED:Lcom/scurrilous/circe/HashSupport;
       5: getstatic     #39                 // Field com/scurrilous/circe/HashSupport.STATELESS_INCREMENTAL:Lcom/scurrilous/circe/HashSupport;
       8: invokestatic  #40                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      11: invokespecial #25                 // Method castAndGet:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      14: astore_2
      15: aload_2
      16: instanceof    #41                 // class com/scurrilous/circe/IncrementalIntHash
      19: ifeq          27
      22: aload_2
      23: checkcast     #41                 // class com/scurrilous/circe/IncrementalIntHash
      26: areturn
      27: new           #18                 // class java/lang/UnsupportedOperationException
      30: dup
      31: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      34: athrow

  public com.scurrilous.circe.IncrementalLongHash getIncrementalLong(com.scurrilous.circe.HashParameters);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #33                 // Field com/scurrilous/circe/HashSupport.LONG_SIZED:Lcom/scurrilous/circe/HashSupport;
       5: getstatic     #39                 // Field com/scurrilous/circe/HashSupport.STATELESS_INCREMENTAL:Lcom/scurrilous/circe/HashSupport;
       8: invokestatic  #40                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      11: invokespecial #25                 // Method castAndGet:(Lcom/scurrilous/circe/HashParameters;Ljava/util/EnumSet;)Lcom/scurrilous/circe/Hash;
      14: astore_2
      15: aload_2
      16: instanceof    #42                 // class com/scurrilous/circe/IncrementalLongHash
      19: ifeq          27
      22: aload_2
      23: checkcast     #42                 // class com/scurrilous/circe/IncrementalLongHash
      26: areturn
      27: new           #18                 // class java/lang/UnsupportedOperationException
      30: dup
      31: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
      34: athrow
}
