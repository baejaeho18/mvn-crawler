Compiled from "DefaultChannelPipeline.java"
public class io.netty.channel.DefaultChannelPipeline implements io.netty.channel.ChannelPipeline {
  static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.lang.String HEAD_NAME;

  private static final java.lang.String TAIL_NAME;

  private static final io.netty.util.concurrent.FastThreadLocal<java.util.Map<java.lang.Class<?>, java.lang.String>> nameCaches;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.channel.DefaultChannelPipeline, io.netty.channel.MessageSizeEstimator$Handle> ESTIMATOR;

  final io.netty.channel.AbstractChannelHandlerContext head;

  final io.netty.channel.AbstractChannelHandlerContext tail;

  private final io.netty.channel.Channel channel;

  private final io.netty.channel.ChannelFuture succeededFuture;

  private final io.netty.channel.VoidChannelPromise voidPromise;

  private final boolean touch;

  private java.util.Map<io.netty.util.concurrent.EventExecutorGroup, io.netty.util.concurrent.EventExecutor> childExecutors;

  private volatile io.netty.channel.MessageSizeEstimator$Handle estimatorHandle;

  private boolean firstRegistration;

  private io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback pendingHandlerCallbackHead;

  private boolean registered;

  static final boolean $assertionsDisabled;

  protected io.netty.channel.DefaultChannelPipeline(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #11                 // Method io/netty/util/ResourceLeakDetector.isEnabled:()Z
       8: putfield      #12                 // Field touch:Z
      11: aload_0
      12: iconst_1
      13: putfield      #13                 // Field firstRegistration:Z
      16: aload_0
      17: aload_1
      18: ldc           #14                 // String channel
      20: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: checkcast     #16                 // class io/netty/channel/Channel
      26: putfield      #3                  // Field channel:Lio/netty/channel/Channel;
      29: aload_0
      30: new           #17                 // class io/netty/channel/SucceededChannelFuture
      33: dup
      34: aload_1
      35: aconst_null
      36: invokespecial #18                 // Method io/netty/channel/SucceededChannelFuture."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      39: putfield      #19                 // Field succeededFuture:Lio/netty/channel/ChannelFuture;
      42: aload_0
      43: new           #20                 // class io/netty/channel/VoidChannelPromise
      46: dup
      47: aload_1
      48: iconst_1
      49: invokespecial #21                 // Method io/netty/channel/VoidChannelPromise."<init>":(Lio/netty/channel/Channel;Z)V
      52: putfield      #22                 // Field voidPromise:Lio/netty/channel/VoidChannelPromise;
      55: aload_0
      56: new           #23                 // class io/netty/channel/DefaultChannelPipeline$TailContext
      59: dup
      60: aload_0
      61: aload_0
      62: invokespecial #24                 // Method io/netty/channel/DefaultChannelPipeline$TailContext."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/DefaultChannelPipeline;)V
      65: putfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      68: aload_0
      69: new           #26                 // class io/netty/channel/DefaultChannelPipeline$HeadContext
      72: dup
      73: aload_0
      74: aload_0
      75: invokespecial #27                 // Method io/netty/channel/DefaultChannelPipeline$HeadContext."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/DefaultChannelPipeline;)V
      78: putfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      81: aload_0
      82: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      85: aload_0
      86: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      89: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      92: aload_0
      93: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      96: aload_0
      97: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
     100: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
     103: return

  final io.netty.channel.MessageSizeEstimator$Handle estimatorHandle();
    Code:
       0: aload_0
       1: getfield      #31                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
       4: astore_1
       5: aload_1
       6: ifnonnull     46
       9: aload_0
      10: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
      13: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      18: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMessageSizeEstimator:()Lio/netty/channel/MessageSizeEstimator;
      23: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/MessageSizeEstimator.newHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      28: astore_1
      29: getstatic     #35                 // Field ESTIMATOR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: aload_0
      33: aconst_null
      34: aload_1
      35: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      38: ifne          46
      41: aload_0
      42: getfield      #31                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
      45: astore_1
      46: aload_1
      47: areturn

  final java.lang.Object touch(java.lang.Object, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #12                 // Field touch:Z
       4: ifeq          15
       7: aload_1
       8: aload_2
       9: invokestatic  #37                 // Method io/netty/util/ReferenceCountUtil.touch:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: goto          16
      15: aload_1
      16: areturn

  private io.netty.channel.AbstractChannelHandlerContext newContext(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: new           #38                 // class io/netty/channel/DefaultChannelHandlerContext
       3: dup
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #39                 // Method childExecutor:(Lio/netty/util/concurrent/EventExecutorGroup;)Lio/netty/util/concurrent/EventExecutor;
      10: aload_2
      11: aload_3
      12: invokespecial #40                 // Method io/netty/channel/DefaultChannelHandlerContext."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/util/concurrent/EventExecutor;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)V
      15: areturn

  private io.netty.util.concurrent.EventExecutor childExecutor(io.netty.util.concurrent.EventExecutorGroup);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
      10: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      15: getstatic     #41                 // Field io/netty/channel/ChannelOption.SINGLE_EVENTEXECUTOR_PER_GROUP:Lio/netty/channel/ChannelOption;
      18: invokeinterface #42,  2           // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      23: checkcast     #43                 // class java/lang/Boolean
      26: astore_2
      27: aload_2
      28: ifnull        45
      31: aload_2
      32: invokevirtual #44                 // Method java/lang/Boolean.booleanValue:()Z
      35: ifne          45
      38: aload_1
      39: invokeinterface #45,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.next:()Lio/netty/util/concurrent/EventExecutor;
      44: areturn
      45: aload_0
      46: getfield      #46                 // Field childExecutors:Ljava/util/Map;
      49: astore_3
      50: aload_3
      51: ifnonnull     68
      54: aload_0
      55: new           #47                 // class java/util/IdentityHashMap
      58: dup
      59: iconst_4
      60: invokespecial #48                 // Method java/util/IdentityHashMap."<init>":(I)V
      63: dup_x1
      64: putfield      #46                 // Field childExecutors:Ljava/util/Map;
      67: astore_3
      68: aload_3
      69: aload_1
      70: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #50                 // class io/netty/util/concurrent/EventExecutor
      78: astore        4
      80: aload         4
      82: ifnonnull     103
      85: aload_1
      86: invokeinterface #45,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.next:()Lio/netty/util/concurrent/EventExecutor;
      91: astore        4
      93: aload_3
      94: aload_1
      95: aload         4
      97: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload         4
     105: areturn

  public final io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public final io.netty.channel.ChannelPipeline addFirst(java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokevirtual #52                 // Method addFirst:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       7: areturn

  public final io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_3
       6: invokestatic  #53                 // Method checkMultiplicity:(Lio/netty/channel/ChannelHandler;)V
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokespecial #54                 // Method filterName:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokespecial #55                 // Method newContext:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
      23: astore        4
      25: aload_0
      26: aload         4
      28: invokespecial #56                 // Method addFirst0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      31: aload_0
      32: getfield      #57                 // Field registered:Z
      35: ifne          55
      38: aload         4
      40: invokevirtual #58                 // Method io/netty/channel/AbstractChannelHandlerContext.setAddPending:()V
      43: aload_0
      44: aload         4
      46: iconst_1
      47: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      50: aload_0
      51: aload         5
      53: monitorexit
      54: areturn
      55: aload         4
      57: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      60: astore        6
      62: aload         6
      64: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      69: ifne          85
      72: aload_0
      73: aload         4
      75: aload         6
      77: invokespecial #62                 // Method callHandlerAddedInEventLoop:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;)V
      80: aload_0
      81: aload         5
      83: monitorexit
      84: areturn
      85: aload         5
      87: monitorexit
      88: goto          99
      91: astore        7
      93: aload         5
      95: monitorexit
      96: aload         7
      98: athrow
      99: aload_0
     100: aload         4
     102: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     105: aload_0
     106: areturn
    Exception table:
       from    to  target type
           5    54    91   any
          55    84    91   any
          85    88    91   any
          91    96    91   any

  private void addFirst0(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_2
       8: aload_1
       9: aload_0
      10: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      13: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      16: aload_1
      17: aload_2
      18: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      21: aload_0
      22: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      25: aload_1
      26: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      29: aload_2
      30: aload_1
      31: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      34: return

  public final io.netty.channel.ChannelPipeline addLast(java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokevirtual #63                 // Method addLast:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       7: areturn

  public final io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_3
       6: invokestatic  #53                 // Method checkMultiplicity:(Lio/netty/channel/ChannelHandler;)V
       9: aload_0
      10: aload_1
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #54                 // Method filterName:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
      17: aload_3
      18: invokespecial #55                 // Method newContext:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
      21: astore        4
      23: aload_0
      24: aload         4
      26: invokespecial #64                 // Method addLast0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      29: aload_0
      30: getfield      #57                 // Field registered:Z
      33: ifne          53
      36: aload         4
      38: invokevirtual #58                 // Method io/netty/channel/AbstractChannelHandlerContext.setAddPending:()V
      41: aload_0
      42: aload         4
      44: iconst_1
      45: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      48: aload_0
      49: aload         5
      51: monitorexit
      52: areturn
      53: aload         4
      55: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      58: astore        6
      60: aload         6
      62: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      67: ifne          83
      70: aload_0
      71: aload         4
      73: aload         6
      75: invokespecial #62                 // Method callHandlerAddedInEventLoop:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;)V
      78: aload_0
      79: aload         5
      81: monitorexit
      82: areturn
      83: aload         5
      85: monitorexit
      86: goto          97
      89: astore        7
      91: aload         5
      93: monitorexit
      94: aload         7
      96: athrow
      97: aload_0
      98: aload         4
     100: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     103: aload_0
     104: areturn
    Exception table:
       from    to  target type
           5    52    89   any
          53    82    89   any
          83    86    89   any
          89    94    89   any

  private void addLast0(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_2
       8: aload_1
       9: aload_2
      10: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      13: aload_1
      14: aload_0
      15: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      18: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      21: aload_2
      22: aload_1
      23: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      26: aload_0
      27: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      30: aload_1
      31: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      34: return

  public final io.netty.channel.ChannelPipeline addBefore(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokevirtual #65                 // Method addBefore:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       8: areturn

  public final io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: dup
       2: astore        7
       4: monitorenter
       5: aload         4
       7: invokestatic  #53                 // Method checkMultiplicity:(Lio/netty/channel/ChannelHandler;)V
      10: aload_0
      11: aload_3
      12: aload         4
      14: invokespecial #54                 // Method filterName:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: aload_2
      20: invokespecial #66                 // Method getContextOrDie:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
      23: astore        6
      25: aload_0
      26: aload_1
      27: aload_3
      28: aload         4
      30: invokespecial #55                 // Method newContext:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
      33: astore        5
      35: aload         6
      37: aload         5
      39: invokestatic  #67                 // Method addBefore0:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;)V
      42: aload_0
      43: getfield      #57                 // Field registered:Z
      46: ifne          66
      49: aload         5
      51: invokevirtual #58                 // Method io/netty/channel/AbstractChannelHandlerContext.setAddPending:()V
      54: aload_0
      55: aload         5
      57: iconst_1
      58: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      61: aload_0
      62: aload         7
      64: monitorexit
      65: areturn
      66: aload         5
      68: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      71: astore        8
      73: aload         8
      75: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      80: ifne          96
      83: aload_0
      84: aload         5
      86: aload         8
      88: invokespecial #62                 // Method callHandlerAddedInEventLoop:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;)V
      91: aload_0
      92: aload         7
      94: monitorexit
      95: areturn
      96: aload         7
      98: monitorexit
      99: goto          110
     102: astore        9
     104: aload         7
     106: monitorexit
     107: aload         9
     109: athrow
     110: aload_0
     111: aload         5
     113: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     116: aload_0
     117: areturn
    Exception table:
       from    to  target type
           5    65   102   any
          66    95   102   any
          96    99   102   any
         102   107   102   any

  private static void addBefore0(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       5: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       8: aload_1
       9: aload_0
      10: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      13: aload_0
      14: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      17: aload_1
      18: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      21: aload_0
      22: aload_1
      23: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      26: return

  private java.lang.String filterName(java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aload_2
       6: invokespecial #68                 // Method generateName:(Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
       9: areturn
      10: aload_0
      11: aload_1
      12: invokespecial #69                 // Method checkDuplicateName:(Ljava/lang/String;)V
      15: aload_1
      16: areturn

  public final io.netty.channel.ChannelPipeline addAfter(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokevirtual #70                 // Method addAfter:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       8: areturn

  public final io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: dup
       2: astore        7
       4: monitorenter
       5: aload         4
       7: invokestatic  #53                 // Method checkMultiplicity:(Lio/netty/channel/ChannelHandler;)V
      10: aload_0
      11: aload_3
      12: aload         4
      14: invokespecial #54                 // Method filterName:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: aload_2
      20: invokespecial #66                 // Method getContextOrDie:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
      23: astore        6
      25: aload_0
      26: aload_1
      27: aload_3
      28: aload         4
      30: invokespecial #55                 // Method newContext:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
      33: astore        5
      35: aload         6
      37: aload         5
      39: invokestatic  #71                 // Method addAfter0:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;)V
      42: aload_0
      43: getfield      #57                 // Field registered:Z
      46: ifne          66
      49: aload         5
      51: invokevirtual #58                 // Method io/netty/channel/AbstractChannelHandlerContext.setAddPending:()V
      54: aload_0
      55: aload         5
      57: iconst_1
      58: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      61: aload_0
      62: aload         7
      64: monitorexit
      65: areturn
      66: aload         5
      68: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      71: astore        8
      73: aload         8
      75: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      80: ifne          96
      83: aload_0
      84: aload         5
      86: aload         8
      88: invokespecial #62                 // Method callHandlerAddedInEventLoop:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;)V
      91: aload_0
      92: aload         7
      94: monitorexit
      95: areturn
      96: aload         7
      98: monitorexit
      99: goto          110
     102: astore        9
     104: aload         7
     106: monitorexit
     107: aload         9
     109: athrow
     110: aload_0
     111: aload         5
     113: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     116: aload_0
     117: areturn
    Exception table:
       from    to  target type
           5    65   102   any
          66    95   102   any
          96    99   102   any
         102   107   102   any

  private static void addAfter0(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_1
       1: aload_0
       2: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       5: aload_1
       6: aload_0
       7: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      10: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      13: aload_0
      14: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      17: aload_1
      18: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      21: aload_0
      22: aload_1
      23: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      26: return

  public final io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #72                 // Method addFirst:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       6: areturn

  public final io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #73                 // Method addFirst:(Lio/netty/util/concurrent/EventExecutorGroup;[Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       6: areturn

  public final io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_2
       1: ldc           #74                 // String handlers
       3: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: arraylength
       9: ifeq          18
      12: aload_2
      13: iconst_0
      14: aaload
      15: ifnonnull     20
      18: aload_0
      19: areturn
      20: iconst_1
      21: istore_3
      22: iload_3
      23: aload_2
      24: arraylength
      25: if_icmpge     43
      28: aload_2
      29: iload_3
      30: aaload
      31: ifnonnull     37
      34: goto          43
      37: iinc          3, 1
      40: goto          22
      43: iload_3
      44: iconst_1
      45: isub
      46: istore        4
      48: iload         4
      50: iflt          74
      53: aload_2
      54: iload         4
      56: aaload
      57: astore        5
      59: aload_0
      60: aload_1
      61: aconst_null
      62: aload         5
      64: invokevirtual #52                 // Method addFirst:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      67: pop
      68: iinc          4, -1
      71: goto          48
      74: aload_0
      75: areturn

  public final io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #75                 // Method addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       6: areturn

  public final io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #76                 // Method addLast:(Lio/netty/util/concurrent/EventExecutorGroup;[Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
       6: areturn

  public final io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup, io.netty.channel.ChannelHandler...);
    Code:
       0: aload_2
       1: ldc           #74                 // String handlers
       3: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     52
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: aload         6
      31: ifnonnull     37
      34: goto          52
      37: aload_0
      38: aload_1
      39: aconst_null
      40: aload         6
      42: invokevirtual #63                 // Method addLast:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      45: pop
      46: iinc          5, 1
      49: goto          16
      52: aload_0
      53: areturn

  private java.lang.String generateName(io.netty.channel.ChannelHandler);
    Code:
       0: getstatic     #77                 // Field nameCaches:Lio/netty/util/concurrent/FastThreadLocal;
       3: invokevirtual #78                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #79                 // class java/util/Map
       9: astore_2
      10: aload_1
      11: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: astore_3
      15: aload_2
      16: aload_3
      17: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #81                 // class java/lang/String
      25: astore        4
      27: aload         4
      29: ifnonnull     48
      32: aload_3
      33: invokestatic  #82                 // Method generateName0:(Ljava/lang/Class;)Ljava/lang/String;
      36: astore        4
      38: aload_2
      39: aload_3
      40: aload         4
      42: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: aload         4
      51: invokespecial #83                 // Method context0:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
      54: ifnull        119
      57: aload         4
      59: iconst_0
      60: aload         4
      62: invokevirtual #84                 // Method java/lang/String.length:()I
      65: iconst_1
      66: isub
      67: invokevirtual #85                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      70: astore        5
      72: iconst_1
      73: istore        6
      75: new           #86                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      82: aload         5
      84: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: iload         6
      89: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: astore        7
      97: aload_0
      98: aload         7
     100: invokespecial #83                 // Method context0:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
     103: ifnonnull     113
     106: aload         7
     108: astore        4
     110: goto          119
     113: iinc          6, 1
     116: goto          75
     119: aload         4
     121: areturn

  private static java.lang.String generateName0(java.lang.Class<?>);
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokestatic  #91                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      11: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #92                 // String #0
      16: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public final io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #93                 // Method getContextOrDie:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
       9: pop
      10: aload_0
      11: areturn

  public final io.netty.channel.ChannelHandler remove(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #66                 // Method getContextOrDie:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
       9: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      12: areturn

  public final <T extends io.netty.channel.ChannelHandler> T remove(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #96                 // Method getContextOrDie:(Ljava/lang/Class;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
       9: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      12: areturn

  public final <T extends io.netty.channel.ChannelHandler> T removeIfExists(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #97                 // Method context:(Ljava/lang/String;)Lio/netty/channel/ChannelHandlerContext;
       6: invokespecial #98                 // Method removeIfExists:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelHandler;
       9: areturn

  public final <T extends io.netty.channel.ChannelHandler> T removeIfExists(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #99                 // Method context:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandlerContext;
       6: invokespecial #98                 // Method removeIfExists:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelHandler;
       9: areturn

  public final <T extends io.netty.channel.ChannelHandler> T removeIfExists(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #100                // Method context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
       6: invokespecial #98                 // Method removeIfExists:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/channel/ChannelHandler;
       9: areturn

  private <T extends io.netty.channel.ChannelHandler> T removeIfExists(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: checkcast     #101                // class io/netty/channel/AbstractChannelHandlerContext
      11: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
      14: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      17: areturn

  private io.netty.channel.AbstractChannelHandlerContext remove(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: getstatic     #102                // Field $assertionsDisabled:Z
       3: ifne          30
       6: aload_1
       7: aload_0
       8: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      11: if_acmpeq     22
      14: aload_1
      15: aload_0
      16: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      19: if_acmpne     30
      22: new           #103                // class java/lang/AssertionError
      25: dup
      26: invokespecial #104                // Method java/lang/AssertionError."<init>":()V
      29: athrow
      30: aload_0
      31: dup
      32: astore_2
      33: monitorenter
      34: aload_0
      35: aload_1
      36: invokespecial #1                  // Method atomicRemoveFromHandlerList:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      39: aload_0
      40: getfield      #57                 // Field registered:Z
      43: ifne          56
      46: aload_0
      47: aload_1
      48: iconst_0
      49: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      52: aload_1
      53: aload_2
      54: monitorexit
      55: areturn
      56: aload_1
      57: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      60: astore_3
      61: aload_3
      62: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      67: ifne          89
      70: aload_3
      71: new           #105                // class io/netty/channel/DefaultChannelPipeline$2
      74: dup
      75: aload_0
      76: aload_1
      77: invokespecial #106                // Method io/netty/channel/DefaultChannelPipeline$2."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      80: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      85: aload_1
      86: aload_2
      87: monitorexit
      88: areturn
      89: aload_2
      90: monitorexit
      91: goto          101
      94: astore        4
      96: aload_2
      97: monitorexit
      98: aload         4
     100: athrow
     101: aload_0
     102: aload_1
     103: invokespecial #9                  // Method callHandlerRemoved0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     106: aload_1
     107: areturn
    Exception table:
       from    to  target type
          34    55    94   any
          56    88    94   any
          89    91    94   any
          94    98    94   any

  private synchronized void atomicRemoveFromHandlerList(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_1
       1: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       4: astore_2
       5: aload_1
       6: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       9: astore_3
      10: aload_2
      11: aload_3
      12: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      15: aload_3
      16: aload_2
      17: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      20: return

  public final io.netty.channel.ChannelHandler removeFirst();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       7: aload_0
       8: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      11: if_acmpne     22
      14: new           #108                // class java/util/NoSuchElementException
      17: dup
      18: invokespecial #109                // Method java/util/NoSuchElementException."<init>":()V
      21: athrow
      22: aload_0
      23: aload_0
      24: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      27: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      30: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
      33: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      36: areturn

  public final io.netty.channel.ChannelHandler removeLast();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       7: aload_0
       8: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      11: if_acmpne     22
      14: new           #108                // class java/util/NoSuchElementException
      17: dup
      18: invokespecial #109                // Method java/util/NoSuchElementException."<init>":()V
      21: athrow
      22: aload_0
      23: aload_0
      24: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      27: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      30: invokespecial #94                 // Method remove:(Lio/netty/channel/AbstractChannelHandlerContext;)Lio/netty/channel/AbstractChannelHandlerContext;
      33: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      36: areturn

  public final io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #93                 // Method getContextOrDie:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: aload_2
       7: aload_3
       8: invokespecial #110                // Method replace:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      11: pop
      12: aload_0
      13: areturn

  public final io.netty.channel.ChannelHandler replace(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #66                 // Method getContextOrDie:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: aload_2
       7: aload_3
       8: invokespecial #110                // Method replace:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      11: areturn

  public final <T extends io.netty.channel.ChannelHandler> T replace(java.lang.Class<T>, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #96                 // Method getContextOrDie:(Ljava/lang/Class;)Lio/netty/channel/AbstractChannelHandlerContext;
       6: aload_2
       7: aload_3
       8: invokespecial #110                // Method replace:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      11: areturn

  private io.netty.channel.ChannelHandler replace(io.netty.channel.AbstractChannelHandlerContext, java.lang.String, io.netty.channel.ChannelHandler);
    Code:
       0: getstatic     #102                // Field $assertionsDisabled:Z
       3: ifne          30
       6: aload_1
       7: aload_0
       8: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      11: if_acmpeq     22
      14: aload_1
      15: aload_0
      16: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      19: if_acmpne     30
      22: new           #103                // class java/lang/AssertionError
      25: dup
      26: invokespecial #104                // Method java/lang/AssertionError."<init>":()V
      29: athrow
      30: aload_0
      31: dup
      32: astore        5
      34: monitorenter
      35: aload_3
      36: invokestatic  #53                 // Method checkMultiplicity:(Lio/netty/channel/ChannelHandler;)V
      39: aload_2
      40: ifnonnull     52
      43: aload_0
      44: aload_3
      45: invokespecial #68                 // Method generateName:(Lio/netty/channel/ChannelHandler;)Ljava/lang/String;
      48: astore_2
      49: goto          72
      52: aload_1
      53: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      56: aload_2
      57: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: istore        6
      62: iload         6
      64: ifne          72
      67: aload_0
      68: aload_2
      69: invokespecial #69                 // Method checkDuplicateName:(Ljava/lang/String;)V
      72: aload_0
      73: aload_1
      74: getfield      #113                // Field io/netty/channel/AbstractChannelHandlerContext.executor:Lio/netty/util/concurrent/EventExecutor;
      77: aload_2
      78: aload_3
      79: invokespecial #55                 // Method newContext:(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/AbstractChannelHandlerContext;
      82: astore        4
      84: aload_1
      85: aload         4
      87: invokestatic  #114                // Method replace0:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;)V
      90: aload_0
      91: getfield      #57                 // Field registered:Z
      94: ifne          118
      97: aload_0
      98: aload         4
     100: iconst_1
     101: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
     104: aload_0
     105: aload_1
     106: iconst_0
     107: invokespecial #59                 // Method callHandlerCallbackLater:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
     110: aload_1
     111: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
     114: aload         5
     116: monitorexit
     117: areturn
     118: aload_1
     119: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     122: astore        6
     124: aload         6
     126: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
     131: ifne          160
     134: aload         6
     136: new           #115                // class io/netty/channel/DefaultChannelPipeline$3
     139: dup
     140: aload_0
     141: aload         4
     143: aload_1
     144: invokespecial #116                // Method io/netty/channel/DefaultChannelPipeline$3."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;)V
     147: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
     152: aload_1
     153: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
     156: aload         5
     158: monitorexit
     159: areturn
     160: aload         5
     162: monitorexit
     163: goto          174
     166: astore        7
     168: aload         5
     170: monitorexit
     171: aload         7
     173: athrow
     174: aload_0
     175: aload         4
     177: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     180: aload_0
     181: aload_1
     182: invokespecial #9                  // Method callHandlerRemoved0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
     185: aload_1
     186: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
     189: areturn
    Exception table:
       from    to  target type
          35   117   166   any
         118   159   166   any
         160   163   166   any
         166   171   166   any

  private static void replace0(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       4: astore_2
       5: aload_0
       6: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       9: astore_3
      10: aload_1
      11: aload_2
      12: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      15: aload_1
      16: aload_3
      17: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      20: aload_2
      21: aload_1
      22: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      25: aload_3
      26: aload_1
      27: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      30: aload_0
      31: aload_1
      32: putfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      35: aload_0
      36: aload_1
      37: putfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      40: return

  private static void checkMultiplicity(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: instanceof    #117                // class io/netty/channel/ChannelHandlerAdapter
       4: ifeq          64
       7: aload_0
       8: checkcast     #117                // class io/netty/channel/ChannelHandlerAdapter
      11: astore_1
      12: aload_1
      13: invokevirtual #118                // Method io/netty/channel/ChannelHandlerAdapter.isSharable:()Z
      16: ifne          59
      19: aload_1
      20: getfield      #119                // Field io/netty/channel/ChannelHandlerAdapter.added:Z
      23: ifeq          59
      26: new           #120                // class io/netty/channel/ChannelPipelineException
      29: dup
      30: new           #86                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      44: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #122                // String  is not a @Sharable handler, so can\'t be added or removed multiple times.
      49: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #123                // Method io/netty/channel/ChannelPipelineException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_1
      60: iconst_1
      61: putfield      #119                // Field io/netty/channel/ChannelHandlerAdapter.added:Z
      64: return

  private void callHandlerAdded0(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_1
       1: invokevirtual #124                // Method io/netty/channel/AbstractChannelHandlerContext.callHandlerAdded:()V
       4: goto          158
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_0
      11: aload_1
      12: invokespecial #1                  // Method atomicRemoveFromHandlerList:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      15: aload_1
      16: invokevirtual #126                // Method io/netty/channel/AbstractChannelHandlerContext.callHandlerRemoved:()V
      19: iconst_1
      20: istore_3
      21: goto          69
      24: astore        4
      26: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      29: invokeinterface #128,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      34: ifeq          69
      37: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      40: new           #86                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #129                // String Failed to remove a handler:
      49: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      56: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload         4
      64: invokeinterface #130,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      69: iload_3
      70: ifeq          117
      73: aload_0
      74: new           #120                // class io/netty/channel/ChannelPipelineException
      77: dup
      78: new           #86                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      85: aload_1
      86: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      89: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #131                // String .handlerAdded() has thrown an exception; removed.
     100: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: aload_2
     107: invokespecial #132                // Method io/netty/channel/ChannelPipelineException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     110: invokevirtual #133                // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     113: pop
     114: goto          158
     117: aload_0
     118: new           #120                // class io/netty/channel/ChannelPipelineException
     121: dup
     122: new           #86                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     129: aload_1
     130: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
     133: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
     139: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: ldc           #134                // String .handlerAdded() has thrown an exception; also failed to remove.
     144: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: aload_2
     151: invokespecial #132                // Method io/netty/channel/ChannelPipelineException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     154: invokevirtual #133                // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     157: pop
     158: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable
          10    21    24   Class java/lang/Throwable

  private void callHandlerRemoved0(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_1
       1: invokevirtual #126                // Method io/netty/channel/AbstractChannelHandlerContext.callHandlerRemoved:()V
       4: goto          49
       7: astore_2
       8: aload_0
       9: new           #120                // class io/netty/channel/ChannelPipelineException
      12: dup
      13: new           #86                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_1
      21: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      24: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #135                // String .handlerRemoved() has thrown an exception.
      35: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_2
      42: invokespecial #132                // Method io/netty/channel/ChannelPipelineException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: invokevirtual #133                // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      48: pop
      49: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  final void invokeHandlerAddedIfNeeded();
    Code:
       0: getstatic     #102                // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
      10: invokeinterface #136,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      15: invokeinterface #137,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      20: ifne          31
      23: new           #103                // class java/lang/AssertionError
      26: dup
      27: invokespecial #104                // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #13                 // Field firstRegistration:Z
      35: ifeq          47
      38: aload_0
      39: iconst_0
      40: putfield      #13                 // Field firstRegistration:Z
      43: aload_0
      44: invokespecial #138                // Method callHandlerAddedForAllHandlers:()V
      47: return

  public final io.netty.channel.ChannelHandler first();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method firstContext:()Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokeinterface #140,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      17: areturn

  public final io.netty.channel.ChannelHandlerContext firstContext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      13: if_acmpne     18
      16: aconst_null
      17: areturn
      18: aload_0
      19: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      22: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      25: areturn

  public final io.netty.channel.ChannelHandler last();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      13: if_acmpne     18
      16: aconst_null
      17: areturn
      18: aload_1
      19: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      22: areturn

  public final io.netty.channel.ChannelHandlerContext lastContext();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      13: if_acmpne     18
      16: aconst_null
      17: areturn
      18: aload_1
      19: areturn

  public final io.netty.channel.ChannelHandler get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method context:(Ljava/lang/String;)Lio/netty/channel/ChannelHandlerContext;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokeinterface #140,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      18: areturn

  public final <T extends io.netty.channel.ChannelHandler> T get(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method context:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandlerContext;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokeinterface #140,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      18: areturn

  public final io.netty.channel.ChannelHandlerContext context(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #141                // String name
       4: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #81                 // class java/lang/String
      10: invokespecial #83                 // Method context0:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
      13: areturn

  public final io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler);
    Code:
       0: aload_1
       1: ldc           #142                // String handler
       3: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      11: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload_2
      22: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      25: aload_1
      26: if_acmpne     31
      29: aload_2
      30: areturn
      31: aload_2
      32: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      35: astore_2
      36: goto          15

  public final io.netty.channel.ChannelHandlerContext context(java.lang.Class<? extends io.netty.channel.ChannelHandler>);
    Code:
       0: aload_1
       1: ldc           #143                // String handlerType
       3: invokestatic  #15                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      11: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload_1
      22: aload_2
      23: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      26: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #144                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          37
      35: aload_2
      36: areturn
      37: aload_2
      38: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      41: astore_2
      42: goto          15

  public final java.util.List<java.lang.String> names();
    Code:
       0: new           #145                // class java/util/ArrayList
       3: dup
       4: invokespecial #146                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      12: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      15: astore_2
      16: aload_2
      17: ifnonnull     22
      20: aload_1
      21: areturn
      22: aload_1
      23: aload_2
      24: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      27: invokeinterface #147,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_2
      34: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      37: astore_2
      38: goto          16

  public final java.util.Map<java.lang.String, io.netty.channel.ChannelHandler> toMap();
    Code:
       0: new           #148                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #149                // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      12: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      15: astore_2
      16: aload_2
      17: aload_0
      18: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      21: if_acmpne     26
      24: aload_1
      25: areturn
      26: aload_1
      27: aload_2
      28: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      31: aload_2
      32: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      35: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      45: astore_2
      46: goto          16

  public final java.util.Iterator<java.util.Map$Entry<java.lang.String, io.netty.channel.ChannelHandler>> iterator();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method toMap:()Ljava/util/Map;
       4: invokeinterface #151,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #152,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public final java.lang.String toString();
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokestatic  #153                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        123
      16: invokevirtual #154                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: astore_1
      20: aload_0
      21: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
      24: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      27: astore_2
      28: aload_2
      29: aload_0
      30: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      33: if_acmpne     39
      36: goto          102
      39: aload_1
      40: bipush        40
      42: invokevirtual #154                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      49: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #155                // String  =
      54: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #95                 // Method io/netty/channel/AbstractChannelHandlerContext.handler:()Lio/netty/channel/ChannelHandler;
      61: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      64: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      67: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: bipush        41
      72: invokevirtual #154                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_2
      77: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      80: astore_2
      81: aload_2
      82: aload_0
      83: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      86: if_acmpne     92
      89: goto          102
      92: aload_1
      93: ldc           #156                // String ,
      95: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: goto          28
     102: aload_1
     103: bipush        125
     105: invokevirtual #154                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: areturn

  public final io.netty.channel.ChannelPipeline fireChannelRegistered();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #157                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  public final io.netty.channel.ChannelPipeline fireChannelUnregistered();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #158                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  private synchronized void destroy();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       5: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       8: iconst_0
       9: invokespecial #7                  // Method destroyUp:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      12: return

  private void destroyUp(io.netty.channel.AbstractChannelHandlerContext, boolean);
    Code:
       0: invokestatic  #159                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_3
       4: aload_0
       5: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       8: astore        4
      10: aload_1
      11: aload         4
      13: if_acmpne     30
      16: aload_0
      17: aload_3
      18: aload         4
      20: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      23: iload_2
      24: invokespecial #6                  // Method destroyDown:(Ljava/lang/Thread;Lio/netty/channel/AbstractChannelHandlerContext;Z)V
      27: goto          84
      30: aload_1
      31: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      34: astore        5
      36: iload_2
      37: ifne          74
      40: aload         5
      42: aload_3
      43: invokeinterface #160,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:(Ljava/lang/Thread;)Z
      48: ifne          74
      51: aload_1
      52: astore        6
      54: aload         5
      56: new           #161                // class io/netty/channel/DefaultChannelPipeline$4
      59: dup
      60: aload_0
      61: aload         6
      63: invokespecial #162                // Method io/netty/channel/DefaultChannelPipeline$4."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      66: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      71: goto          84
      74: aload_1
      75: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      78: astore_1
      79: iconst_0
      80: istore_2
      81: goto          10
      84: return

  private void destroyDown(java.lang.Thread, io.netty.channel.AbstractChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: astore        4
       6: aload_2
       7: aload         4
       9: if_acmpne     15
      12: goto          82
      15: aload_2
      16: invokevirtual #60                 // Method io/netty/channel/AbstractChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      19: astore        5
      21: iload_3
      22: ifne          36
      25: aload         5
      27: aload_1
      28: invokeinterface #160,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:(Ljava/lang/Thread;)Z
      33: ifeq          49
      36: aload_0
      37: aload_2
      38: invokespecial #1                  // Method atomicRemoveFromHandlerList:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      41: aload_0
      42: aload_2
      43: invokespecial #9                  // Method callHandlerRemoved0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      46: goto          72
      49: aload_2
      50: astore        6
      52: aload         5
      54: new           #163                // class io/netty/channel/DefaultChannelPipeline$5
      57: dup
      58: aload_0
      59: aload         6
      61: invokespecial #164                // Method io/netty/channel/DefaultChannelPipeline$5."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      64: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      69: goto          82
      72: aload_2
      73: getfield      #30                 // Field io/netty/channel/AbstractChannelHandlerContext.prev:Lio/netty/channel/AbstractChannelHandlerContext;
      76: astore_2
      77: iconst_0
      78: istore_3
      79: goto          6
      82: return

  public final io.netty.channel.ChannelPipeline fireChannelActive();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #165                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  public final io.netty.channel.ChannelPipeline fireChannelInactive();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #166                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  public final io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokestatic  #167                // Method io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Throwable;)V
       8: aload_0
       9: areturn

  public final io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokestatic  #168                // Method io/netty/channel/AbstractChannelHandlerContext.invokeUserEventTriggered:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public final io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokestatic  #169                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public final io.netty.channel.ChannelPipeline fireChannelReadComplete();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #170                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  public final io.netty.channel.ChannelPipeline fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokestatic  #171                // Method io/netty/channel/AbstractChannelHandlerContext.invokeChannelWritabilityChanged:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       7: aload_0
       8: areturn

  public final io.netty.channel.ChannelFuture bind(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #172                // Method io/netty/channel/AbstractChannelHandlerContext.bind:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture connect(java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #173                // Method io/netty/channel/AbstractChannelHandlerContext.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #174                // Method io/netty/channel/AbstractChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public final io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokevirtual #175                // Method io/netty/channel/AbstractChannelHandlerContext.disconnect:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public final io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokevirtual #176                // Method io/netty/channel/AbstractChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public final io.netty.channel.ChannelFuture deregister();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokevirtual #177                // Method io/netty/channel/AbstractChannelHandlerContext.deregister:()Lio/netty/channel/ChannelFuture;
       7: areturn

  public final io.netty.channel.ChannelPipeline flush();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokevirtual #178                // Method io/netty/channel/AbstractChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: aload_0
       9: areturn

  public final io.netty.channel.ChannelFuture bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #179                // Method io/netty/channel/AbstractChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public final io.netty.channel.ChannelFuture connect(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #180                // Method io/netty/channel/AbstractChannelHandlerContext.connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public final io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #181                // Method io/netty/channel/AbstractChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public final io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #182                // Method io/netty/channel/AbstractChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #183                // Method io/netty/channel/AbstractChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #184                // Method io/netty/channel/AbstractChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelPipeline read();
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: invokevirtual #185                // Method io/netty/channel/AbstractChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: aload_0
       9: areturn

  public final io.netty.channel.ChannelFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #186                // Method io/netty/channel/AbstractChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelFuture write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #187                // Method io/netty/channel/AbstractChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public final io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #188                // Method io/netty/channel/AbstractChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public final io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
       4: aload_1
       5: invokevirtual #189                // Method io/netty/channel/AbstractChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public final io.netty.channel.ChannelPromise newPromise();
    Code:
       0: new           #190                // class io/netty/channel/DefaultChannelPromise
       3: dup
       4: aload_0
       5: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       8: invokespecial #191                // Method io/netty/channel/DefaultChannelPromise."<init>":(Lio/netty/channel/Channel;)V
      11: areturn

  public final io.netty.channel.ChannelProgressivePromise newProgressivePromise();
    Code:
       0: new           #192                // class io/netty/channel/DefaultChannelProgressivePromise
       3: dup
       4: aload_0
       5: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       8: invokespecial #193                // Method io/netty/channel/DefaultChannelProgressivePromise."<init>":(Lio/netty/channel/Channel;)V
      11: areturn

  public final io.netty.channel.ChannelFuture newSucceededFuture();
    Code:
       0: aload_0
       1: getfield      #19                 // Field succeededFuture:Lio/netty/channel/ChannelFuture;
       4: areturn

  public final io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable);
    Code:
       0: new           #194                // class io/netty/channel/FailedChannelFuture
       3: dup
       4: aload_0
       5: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       8: aconst_null
       9: aload_1
      10: invokespecial #195                // Method io/netty/channel/FailedChannelFuture."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Throwable;)V
      13: areturn

  public final io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: getfield      #22                 // Field voidPromise:Lio/netty/channel/VoidChannelPromise;
       4: areturn

  private void checkDuplicateName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #83                 // Method context0:(Ljava/lang/String;)Lio/netty/channel/AbstractChannelHandlerContext;
       5: ifnull        35
       8: new           #196                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #86                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #197                // String Duplicate handler name:
      21: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #198                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: return

  private io.netty.channel.AbstractChannelHandlerContext context0(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lio/netty/channel/AbstractChannelHandlerContext;
       4: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #25                 // Field tail:Lio/netty/channel/AbstractChannelHandlerContext;
      13: if_acmpeq     37
      16: aload_2
      17: invokevirtual #111                // Method io/netty/channel/AbstractChannelHandlerContext.name:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: aload_2
      28: areturn
      29: aload_2
      30: getfield      #29                 // Field io/netty/channel/AbstractChannelHandlerContext.next:Lio/netty/channel/AbstractChannelHandlerContext;
      33: astore_2
      34: goto          8
      37: aconst_null
      38: areturn

  private io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method context:(Ljava/lang/String;)Lio/netty/channel/ChannelHandlerContext;
       5: checkcast     #101                // class io/netty/channel/AbstractChannelHandlerContext
       8: astore_2
       9: aload_2
      10: ifnonnull     22
      13: new           #108                // class java/util/NoSuchElementException
      16: dup
      17: aload_1
      18: invokespecial #199                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_2
      23: areturn

  private io.netty.channel.AbstractChannelHandlerContext getContextOrDie(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #100                // Method context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
       5: checkcast     #101                // class io/netty/channel/AbstractChannelHandlerContext
       8: astore_2
       9: aload_2
      10: ifnonnull     28
      13: new           #108                // class java/util/NoSuchElementException
      16: dup
      17: aload_1
      18: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokespecial #199                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_2
      29: areturn

  private io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.Class<? extends io.netty.channel.ChannelHandler>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method context:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandlerContext;
       5: checkcast     #101                // class io/netty/channel/AbstractChannelHandlerContext
       8: astore_2
       9: aload_2
      10: ifnonnull     25
      13: new           #108                // class java/util/NoSuchElementException
      16: dup
      17: aload_1
      18: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokespecial #199                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_2
      26: areturn

  private void callHandlerAddedForAllHandlers();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: getstatic     #102                // Field $assertionsDisabled:Z
       7: ifne          25
      10: aload_0
      11: getfield      #57                 // Field registered:Z
      14: ifeq          25
      17: new           #103                // class java/lang/AssertionError
      20: dup
      21: invokespecial #104                // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: iconst_1
      27: putfield      #57                 // Field registered:Z
      30: aload_0
      31: getfield      #200                // Field pendingHandlerCallbackHead:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      34: astore_1
      35: aload_0
      36: aconst_null
      37: putfield      #200                // Field pendingHandlerCallbackHead:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      40: aload_2
      41: monitorexit
      42: goto          50
      45: astore_3
      46: aload_2
      47: monitorexit
      48: aload_3
      49: athrow
      50: aload_1
      51: astore_2
      52: aload_2
      53: ifnull        68
      56: aload_2
      57: invokevirtual #201                // Method io/netty/channel/DefaultChannelPipeline$PendingHandlerCallback.execute:()V
      60: aload_2
      61: getfield      #202                // Field io/netty/channel/DefaultChannelPipeline$PendingHandlerCallback.next:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      64: astore_2
      65: goto          52
      68: return
    Exception table:
       from    to  target type
           4    42    45   any
          45    48    45   any

  private void callHandlerCallbackLater(io.netty.channel.AbstractChannelHandlerContext, boolean);
    Code:
       0: getstatic     #102                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #57                 // Field registered:Z
      10: ifeq          21
      13: new           #103                // class java/lang/AssertionError
      16: dup
      17: invokespecial #104                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_2
      22: ifeq          37
      25: new           #203                // class io/netty/channel/DefaultChannelPipeline$PendingHandlerAddedTask
      28: dup
      29: aload_0
      30: aload_1
      31: invokespecial #204                // Method io/netty/channel/DefaultChannelPipeline$PendingHandlerAddedTask."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      34: goto          46
      37: new           #205                // class io/netty/channel/DefaultChannelPipeline$PendingHandlerRemovedTask
      40: dup
      41: aload_0
      42: aload_1
      43: invokespecial #206                // Method io/netty/channel/DefaultChannelPipeline$PendingHandlerRemovedTask."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      46: astore_3
      47: aload_0
      48: getfield      #200                // Field pendingHandlerCallbackHead:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      51: astore        4
      53: aload         4
      55: ifnonnull     66
      58: aload_0
      59: aload_3
      60: putfield      #200                // Field pendingHandlerCallbackHead:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      63: goto          90
      66: aload         4
      68: getfield      #202                // Field io/netty/channel/DefaultChannelPipeline$PendingHandlerCallback.next:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      71: ifnull        84
      74: aload         4
      76: getfield      #202                // Field io/netty/channel/DefaultChannelPipeline$PendingHandlerCallback.next:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      79: astore        4
      81: goto          66
      84: aload         4
      86: aload_3
      87: putfield      #202                // Field io/netty/channel/DefaultChannelPipeline$PendingHandlerCallback.next:Lio/netty/channel/DefaultChannelPipeline$PendingHandlerCallback;
      90: return

  private void callHandlerAddedInEventLoop(io.netty.channel.AbstractChannelHandlerContext, io.netty.util.concurrent.EventExecutor);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method io/netty/channel/AbstractChannelHandlerContext.setAddPending:()V
       4: aload_2
       5: new           #207                // class io/netty/channel/DefaultChannelPipeline$6
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #208                // Method io/netty/channel/DefaultChannelPipeline$6."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/channel/AbstractChannelHandlerContext;)V
      14: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      19: return

  protected void onUnhandledInboundException(java.lang.Throwable);
    Code:
       0: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #209                // String An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
       5: aload_1
       6: invokeinterface #130,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: aload_1
      12: invokestatic  #210                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      15: pop
      16: goto          27
      19: astore_2
      20: aload_1
      21: invokestatic  #210                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      24: pop
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    11    19   any

  protected void onUnhandledInboundChannelActive();
    Code:
       0: return

  protected void onUnhandledInboundChannelInactive();
    Code:
       0: return

  protected void onUnhandledInboundMessage(java.lang.Object);
    Code:
       0: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #211                // String Discarded inbound message {} that reached at the tail of the pipeline. Please check your pipeline configuration.
       5: aload_1
       6: invokeinterface #212,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_1
      12: invokestatic  #210                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      15: pop
      16: goto          27
      19: astore_2
      20: aload_1
      21: invokestatic  #210                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      24: pop
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    11    19   any

  protected void onUnhandledInboundMessage(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #213                // Method onUnhandledInboundMessage:(Ljava/lang/Object;)V
       5: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: invokeinterface #214,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      13: ifeq          43
      16: getstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #215                // String Discarded message pipeline : {}. Channel : {}.
      21: aload_1
      22: invokeinterface #216,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      27: invokeinterface #217,  1          // InterfaceMethod io/netty/channel/ChannelPipeline.names:()Ljava/util/List;
      32: aload_1
      33: invokeinterface #218,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      38: invokeinterface #219,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: return

  protected void onUnhandledInboundChannelReadComplete();
    Code:
       0: return

  protected void onUnhandledInboundUserEventTriggered(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #210                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
       4: pop
       5: return

  protected void onUnhandledChannelWritabilityChanged();
    Code:
       0: return

  protected void incrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #220,  1          // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
       9: invokeinterface #221,  1          // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      14: astore_3
      15: aload_3
      16: ifnull        24
      19: aload_3
      20: lload_1
      21: invokevirtual #222                // Method io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes:(J)V
      24: return

  protected void decrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #220,  1          // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
       9: invokeinterface #221,  1          // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      14: astore_3
      15: aload_3
      16: ifnull        24
      19: aload_3
      20: lload_1
      21: invokevirtual #223                // Method io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes:(J)V
      24: return

  public io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: invokevirtual #224                // Method fireChannelWritabilityChanged:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelReadComplete();
    Code:
       0: aload_0
       1: invokevirtual #225                // Method fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #226                // Method fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #227                // Method fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #133                // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelInactive();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method fireChannelInactive:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelActive();
    Code:
       0: aload_0
       1: invokevirtual #229                // Method fireChannelActive:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelUnregistered();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method fireChannelUnregistered:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRegistered();
    Code:
       0: aload_0
       1: invokevirtual #231                // Method fireChannelRegistered:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker flush();
    Code:
       0: aload_0
       1: invokevirtual #232                // Method flush:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker read();
    Code:
       0: aload_0
       1: invokevirtual #233                // Method read:()Lio/netty/channel/ChannelPipeline;
       4: areturn

  static void access$000(io.netty.channel.DefaultChannelPipeline, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method callHandlerRemoved0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       5: return

  static void access$100(io.netty.channel.DefaultChannelPipeline, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method callHandlerAdded0:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       5: return

  static void access$200(io.netty.channel.DefaultChannelPipeline, io.netty.channel.AbstractChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method destroyUp:(Lio/netty/channel/AbstractChannelHandlerContext;Z)V
       6: return

  static void access$300(io.netty.channel.DefaultChannelPipeline, java.lang.Thread, io.netty.channel.AbstractChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #6                  // Method destroyDown:(Ljava/lang/Thread;Lio/netty/channel/AbstractChannelHandlerContext;Z)V
       7: return

  static java.lang.String access$400();
    Code:
       0: getstatic     #5                  // Field TAIL_NAME:Ljava/lang/String;
       3: areturn

  static java.lang.String access$500();
    Code:
       0: getstatic     #4                  // Field HEAD_NAME:Ljava/lang/String;
       3: areturn

  static io.netty.channel.Channel access$600(io.netty.channel.DefaultChannelPipeline);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lio/netty/channel/Channel;
       4: areturn

  static void access$700(io.netty.channel.DefaultChannelPipeline);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method destroy:()V
       4: return

  static void access$800(io.netty.channel.DefaultChannelPipeline, io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method atomicRemoveFromHandlerList:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       5: return

  static {};
    Code:
       0: ldc           #234                // class io/netty/channel/DefaultChannelPipeline
       2: invokevirtual #235                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #102                // Field $assertionsDisabled:Z
      16: ldc           #234                // class io/netty/channel/DefaultChannelPipeline
      18: invokestatic  #236                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #127                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #26                 // class io/netty/channel/DefaultChannelPipeline$HeadContext
      26: invokestatic  #82                 // Method generateName0:(Ljava/lang/Class;)Ljava/lang/String;
      29: putstatic     #4                  // Field HEAD_NAME:Ljava/lang/String;
      32: ldc           #23                 // class io/netty/channel/DefaultChannelPipeline$TailContext
      34: invokestatic  #82                 // Method generateName0:(Ljava/lang/Class;)Ljava/lang/String;
      37: putstatic     #5                  // Field TAIL_NAME:Ljava/lang/String;
      40: new           #237                // class io/netty/channel/DefaultChannelPipeline$1
      43: dup
      44: invokespecial #238                // Method io/netty/channel/DefaultChannelPipeline$1."<init>":()V
      47: putstatic     #77                 // Field nameCaches:Lio/netty/util/concurrent/FastThreadLocal;
      50: ldc           #234                // class io/netty/channel/DefaultChannelPipeline
      52: ldc           #239                // class io/netty/channel/MessageSizeEstimator$Handle
      54: ldc           #240                // String estimatorHandle
      56: invokestatic  #241                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      59: putstatic     #35                 // Field ESTIMATOR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      62: return
}
