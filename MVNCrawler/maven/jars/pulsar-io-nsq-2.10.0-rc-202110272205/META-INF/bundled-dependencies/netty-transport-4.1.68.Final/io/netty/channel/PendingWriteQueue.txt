Compiled from "PendingWriteQueue.java"
public final class io.netty.channel.PendingWriteQueue {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final int PENDING_WRITE_OVERHEAD;

  private final io.netty.channel.ChannelOutboundInvoker invoker;

  private final io.netty.util.concurrent.EventExecutor executor;

  private final io.netty.channel.PendingBytesTracker tracker;

  private io.netty.channel.PendingWriteQueue$PendingWrite head;

  private io.netty.channel.PendingWriteQueue$PendingWrite tail;

  private int size;

  private long bytes;

  static final boolean $assertionsDisabled;

  public io.netty.channel.PendingWriteQueue(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      11: invokestatic  #3                  // Method io/netty/channel/PendingBytesTracker.newTracker:(Lio/netty/channel/Channel;)Lio/netty/channel/PendingBytesTracker;
      14: putfield      #4                  // Field tracker:Lio/netty/channel/PendingBytesTracker;
      17: aload_0
      18: aload_1
      19: putfield      #5                  // Field invoker:Lio/netty/channel/ChannelOutboundInvoker;
      22: aload_0
      23: aload_1
      24: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      29: putfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      32: return

  public io.netty.channel.PendingWriteQueue(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method io/netty/channel/PendingBytesTracker.newTracker:(Lio/netty/channel/Channel;)Lio/netty/channel/PendingBytesTracker;
       9: putfield      #4                  // Field tracker:Lio/netty/channel/PendingBytesTracker;
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field invoker:Lio/netty/channel/ChannelOutboundInvoker;
      17: aload_0
      18: aload_1
      19: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      24: putfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      27: return

  public boolean isEmpty();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      30: ifnonnull     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int size();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #14                 // Field size:I
      30: ireturn

  public long bytes();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #15                 // Field bytes:J
      30: lreturn

  private int size(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tracker:Lio/netty/channel/PendingBytesTracker;
       4: aload_1
       5: invokevirtual #16                 // Method io/netty/channel/PendingBytesTracker.size:(Ljava/lang/Object;)I
       8: istore_2
       9: iload_2
      10: ifge          15
      13: iconst_0
      14: istore_2
      15: iload_2
      16: getstatic     #17                 // Field PENDING_WRITE_OVERHEAD:I
      19: iadd
      20: ireturn

  public void add(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_1
      27: ldc           #18                 // String msg
      29: invokestatic  #19                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: aload_2
      34: ldc           #20                 // String promise
      36: invokestatic  #19                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: aload_1
      42: invokespecial #21                 // Method size:(Ljava/lang/Object;)I
      45: istore_3
      46: aload_1
      47: iload_3
      48: aload_2
      49: invokestatic  #22                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.newInstance:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      52: astore        4
      54: aload_0
      55: getfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      58: astore        5
      60: aload         5
      62: ifnonnull     79
      65: aload_0
      66: aload_0
      67: aload         4
      69: dup_x1
      70: putfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      73: putfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      76: goto          93
      79: aload         5
      81: aload         4
      83: invokestatic  #24                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$002:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      86: pop
      87: aload_0
      88: aload         4
      90: putfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      93: aload_0
      94: dup
      95: getfield      #14                 // Field size:I
      98: iconst_1
      99: iadd
     100: putfield      #14                 // Field size:I
     103: aload_0
     104: dup
     105: getfield      #15                 // Field bytes:J
     108: iload_3
     109: i2l
     110: ladd
     111: putfield      #15                 // Field bytes:J
     114: aload_0
     115: getfield      #4                  // Field tracker:Lio/netty/channel/PendingBytesTracker;
     118: aload         4
     120: invokestatic  #25                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
     123: invokevirtual #26                 // Method io/netty/channel/PendingBytesTracker.incrementPendingOutboundBytes:(J)V
     126: return

  public io.netty.channel.ChannelFuture removeAndWriteAll();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: invokevirtual #27                 // Method isEmpty:()Z
      30: ifeq          35
      33: aconst_null
      34: areturn
      35: aload_0
      36: getfield      #5                  // Field invoker:Lio/netty/channel/ChannelOutboundInvoker;
      39: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelOutboundInvoker.newPromise:()Lio/netty/channel/ChannelPromise;
      44: astore_1
      45: new           #29                 // class io/netty/util/concurrent/PromiseCombiner
      48: dup
      49: aload_0
      50: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      53: invokespecial #30                 // Method io/netty/util/concurrent/PromiseCombiner."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      56: astore_2
      57: aload_0
      58: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      61: astore_3
      62: aload_3
      63: ifnull        156
      66: aload_0
      67: aload_0
      68: aconst_null
      69: dup_x1
      70: putfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      73: putfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      76: aload_0
      77: iconst_0
      78: putfield      #14                 // Field size:I
      81: aload_0
      82: lconst_0
      83: putfield      #15                 // Field bytes:J
      86: aload_3
      87: ifnull        148
      90: aload_3
      91: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      94: astore        4
      96: aload_3
      97: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
     100: astore        5
     102: aload_3
     103: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
     106: astore        6
     108: aload_0
     109: aload_3
     110: iconst_0
     111: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
     114: aload         6
     116: instanceof    #35                 // class io/netty/channel/VoidChannelPromise
     119: ifne          128
     122: aload_2
     123: aload         6
     125: invokevirtual #36                 // Method io/netty/util/concurrent/PromiseCombiner.add:(Lio/netty/util/concurrent/Promise;)V
     128: aload_0
     129: getfield      #5                  // Field invoker:Lio/netty/channel/ChannelOutboundInvoker;
     132: aload         5
     134: aload         6
     136: invokeinterface #37,  3           // InterfaceMethod io/netty/channel/ChannelOutboundInvoker.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     141: pop
     142: aload         4
     144: astore_3
     145: goto          86
     148: aload_0
     149: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     152: astore_3
     153: goto          62
     156: aload_2
     157: aload_1
     158: invokevirtual #38                 // Method io/netty/util/concurrent/PromiseCombiner.finish:(Lio/netty/util/concurrent/Promise;)V
     161: goto          173
     164: astore_3
     165: aload_1
     166: aload_3
     167: invokeinterface #40,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
     172: pop
     173: aload_0
     174: invokespecial #41                 // Method assertEmpty:()V
     177: aload_1
     178: areturn
    Exception table:
       from    to  target type
          57   161   164   Class java/lang/Throwable

  public void removeAndFailAll(java.lang.Throwable);
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_1
      27: ldc           #42                 // String cause
      29: invokestatic  #19                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      37: astore_2
      38: aload_2
      39: ifnull        109
      42: aload_0
      43: aload_0
      44: aconst_null
      45: dup_x1
      46: putfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      49: putfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      52: aload_0
      53: iconst_0
      54: putfield      #14                 // Field size:I
      57: aload_0
      58: lconst_0
      59: putfield      #15                 // Field bytes:J
      62: aload_2
      63: ifnull        101
      66: aload_2
      67: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      70: astore_3
      71: aload_2
      72: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      75: invokestatic  #43                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      78: aload_2
      79: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      82: astore        4
      84: aload_0
      85: aload_2
      86: iconst_0
      87: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      90: aload         4
      92: aload_1
      93: invokestatic  #44                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      96: aload_3
      97: astore_2
      98: goto          62
     101: aload_0
     102: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     105: astore_2
     106: goto          38
     109: aload_0
     110: invokespecial #41                 // Method assertEmpty:()V
     113: return

  public void removeAndFail(java.lang.Throwable);
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_1
      27: ldc           #42                 // String cause
      29: invokestatic  #19                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      37: astore_2
      38: aload_2
      39: ifnonnull     43
      42: return
      43: aload_2
      44: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      47: invokestatic  #43                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      50: aload_2
      51: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      54: astore_3
      55: aload_3
      56: aload_1
      57: invokestatic  #44                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      60: aload_0
      61: aload_2
      62: iconst_1
      63: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      66: return

  private void assertEmpty();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          35
       6: aload_0
       7: getfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      10: ifnonnull     27
      13: aload_0
      14: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      17: ifnonnull     27
      20: aload_0
      21: getfield      #14                 // Field size:I
      24: ifeq          35
      27: new           #11                 // class java/lang/AssertionError
      30: dup
      31: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: return

  public io.netty.channel.ChannelFuture removeAndWrite();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      30: astore_1
      31: aload_1
      32: ifnonnull     37
      35: aconst_null
      36: areturn
      37: aload_1
      38: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      41: astore_2
      42: aload_1
      43: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      46: astore_3
      47: aload_0
      48: aload_1
      49: iconst_1
      50: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      53: aload_0
      54: getfield      #5                  // Field invoker:Lio/netty/channel/ChannelOutboundInvoker;
      57: aload_2
      58: aload_3
      59: invokeinterface #37,  3           // InterfaceMethod io/netty/channel/ChannelOutboundInvoker.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      64: areturn

  public io.netty.channel.ChannelPromise remove();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      30: astore_1
      31: aload_1
      32: ifnonnull     37
      35: aconst_null
      36: areturn
      37: aload_1
      38: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      41: astore_2
      42: aload_1
      43: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      46: invokestatic  #43                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      49: aload_0
      50: aload_1
      51: iconst_1
      52: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      55: aload_2
      56: areturn

  public java.lang.Object current();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #7                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #11                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      30: astore_1
      31: aload_1
      32: ifnonnull     37
      35: aconst_null
      36: areturn
      37: aload_1
      38: invokestatic  #32                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      41: areturn

  private void recycle(io.netty.channel.PendingWriteQueue$PendingWrite, boolean);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
       4: astore_3
       5: aload_1
       6: invokestatic  #25                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
       9: lstore        4
      11: iload_2
      12: ifeq          98
      15: aload_3
      16: ifnonnull     42
      19: aload_0
      20: aload_0
      21: aconst_null
      22: dup_x1
      23: putfield      #23                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      26: putfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      29: aload_0
      30: iconst_0
      31: putfield      #14                 // Field size:I
      34: aload_0
      35: lconst_0
      36: putfield      #15                 // Field bytes:J
      39: goto          98
      42: aload_0
      43: aload_3
      44: putfield      #13                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      47: aload_0
      48: dup
      49: getfield      #14                 // Field size:I
      52: iconst_1
      53: isub
      54: putfield      #14                 // Field size:I
      57: aload_0
      58: dup
      59: getfield      #15                 // Field bytes:J
      62: lload         4
      64: lsub
      65: putfield      #15                 // Field bytes:J
      68: getstatic     #9                  // Field $assertionsDisabled:Z
      71: ifne          98
      74: aload_0
      75: getfield      #14                 // Field size:I
      78: ifle          90
      81: aload_0
      82: getfield      #15                 // Field bytes:J
      85: lconst_0
      86: lcmp
      87: ifge          98
      90: new           #11                 // class java/lang/AssertionError
      93: dup
      94: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      97: athrow
      98: aload_1
      99: invokestatic  #45                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$400:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)V
     102: aload_0
     103: getfield      #4                  // Field tracker:Lio/netty/channel/PendingBytesTracker;
     106: lload         4
     108: invokevirtual #46                 // Method io/netty/channel/PendingBytesTracker.decrementPendingOutboundBytes:(J)V
     111: return

  private static void safeFail(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #35                 // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_0
       8: aload_1
       9: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: getstatic     #48                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #49                 // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_0
      23: aload_1
      24: invokeinterface #50,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  static {};
    Code:
       0: ldc           #51                 // class io/netty/channel/PendingWriteQueue
       2: invokevirtual #52                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: ldc           #51                 // class io/netty/channel/PendingWriteQueue
      18: invokestatic  #53                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #48                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #54                 // String io.netty.transport.pendingWriteSizeOverhead
      26: bipush        64
      28: invokestatic  #55                 // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      31: putstatic     #17                 // Field PENDING_WRITE_OVERHEAD:I
      34: return
}
