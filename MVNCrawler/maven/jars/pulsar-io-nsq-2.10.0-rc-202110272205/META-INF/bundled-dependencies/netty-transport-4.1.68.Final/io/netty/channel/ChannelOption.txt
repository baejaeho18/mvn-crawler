Compiled from "ChannelOption.java"
public class io.netty.channel.ChannelOption<T> extends io.netty.util.AbstractConstant<io.netty.channel.ChannelOption<T>> {
  private static final io.netty.util.ConstantPool<io.netty.channel.ChannelOption<java.lang.Object>> pool;

  public static final io.netty.channel.ChannelOption<io.netty.buffer.ByteBufAllocator> ALLOCATOR;

  public static final io.netty.channel.ChannelOption<io.netty.channel.RecvByteBufAllocator> RCVBUF_ALLOCATOR;

  public static final io.netty.channel.ChannelOption<io.netty.channel.MessageSizeEstimator> MESSAGE_SIZE_ESTIMATOR;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> CONNECT_TIMEOUT_MILLIS;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> MAX_MESSAGES_PER_READ;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> MAX_MESSAGES_PER_WRITE;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_SPIN_COUNT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_BUFFER_HIGH_WATER_MARK;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_BUFFER_LOW_WATER_MARK;

  public static final io.netty.channel.ChannelOption<io.netty.channel.WriteBufferWaterMark> WRITE_BUFFER_WATER_MARK;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> ALLOW_HALF_CLOSURE;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> AUTO_READ;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> AUTO_CLOSE;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_BROADCAST;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_KEEPALIVE;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_SNDBUF;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_RCVBUF;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_REUSEADDR;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_LINGER;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_BACKLOG;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_TIMEOUT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> IP_TOS;

  public static final io.netty.channel.ChannelOption<java.net.InetAddress> IP_MULTICAST_ADDR;

  public static final io.netty.channel.ChannelOption<java.net.NetworkInterface> IP_MULTICAST_IF;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> IP_MULTICAST_TTL;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> IP_MULTICAST_LOOP_DISABLED;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_NODELAY;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_FASTOPEN_CONNECT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_FASTOPEN;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SINGLE_EVENTEXECUTOR_PER_GROUP;

  public static <T> io.netty.channel.ChannelOption<T> valueOf(java.lang.String);
    Code:
       0: getstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
       3: aload_0
       4: invokevirtual #3                  // Method io/netty/util/ConstantPool.valueOf:(Ljava/lang/String;)Lio/netty/util/Constant;
       7: checkcast     #4                  // class io/netty/channel/ChannelOption
      10: areturn

  public static <T> io.netty.channel.ChannelOption<T> valueOf(java.lang.Class<?>, java.lang.String);
    Code:
       0: getstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
       3: aload_0
       4: aload_1
       5: invokevirtual #5                  // Method io/netty/util/ConstantPool.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/util/Constant;
       8: checkcast     #4                  // class io/netty/channel/ChannelOption
      11: areturn

  public static boolean exists(java.lang.String);
    Code:
       0: getstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
       3: aload_0
       4: invokevirtual #6                  // Method io/netty/util/ConstantPool.exists:(Ljava/lang/String;)Z
       7: ireturn

  public static <T> io.netty.channel.ChannelOption<T> newInstance(java.lang.String);
    Code:
       0: getstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
       3: aload_0
       4: invokevirtual #7                  // Method io/netty/util/ConstantPool.newInstance:(Ljava/lang/String;)Lio/netty/util/Constant;
       7: checkcast     #4                  // class io/netty/channel/ChannelOption
      10: areturn

  private io.netty.channel.ChannelOption(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #8                  // Method io/netty/util/AbstractConstant."<init>":(ILjava/lang/String;)V
       6: return

  protected io.netty.channel.ChannelOption(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
       4: invokevirtual #9                  // Method io/netty/util/ConstantPool.nextId:()I
       7: aload_1
       8: invokespecial #1                  // Method "<init>":(ILjava/lang/String;)V
      11: return

  public void validate(T);
    Code:
       0: aload_1
       1: ldc           #10                 // String value
       3: invokestatic  #11                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: return

  io.netty.channel.ChannelOption(int, java.lang.String, io.netty.channel.ChannelOption$1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(ILjava/lang/String;)V
       6: return

  static {};
    Code:
       0: new           #12                 // class io/netty/channel/ChannelOption$1
       3: dup
       4: invokespecial #13                 // Method io/netty/channel/ChannelOption$1."<init>":()V
       7: putstatic     #2                  // Field pool:Lio/netty/util/ConstantPool;
      10: ldc           #14                 // String ALLOCATOR
      12: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      15: putstatic     #16                 // Field ALLOCATOR:Lio/netty/channel/ChannelOption;
      18: ldc           #17                 // String RCVBUF_ALLOCATOR
      20: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      23: putstatic     #18                 // Field RCVBUF_ALLOCATOR:Lio/netty/channel/ChannelOption;
      26: ldc           #19                 // String MESSAGE_SIZE_ESTIMATOR
      28: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      31: putstatic     #20                 // Field MESSAGE_SIZE_ESTIMATOR:Lio/netty/channel/ChannelOption;
      34: ldc           #21                 // String CONNECT_TIMEOUT_MILLIS
      36: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      39: putstatic     #22                 // Field CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
      42: ldc           #23                 // String MAX_MESSAGES_PER_READ
      44: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      47: putstatic     #24                 // Field MAX_MESSAGES_PER_READ:Lio/netty/channel/ChannelOption;
      50: ldc           #25                 // String MAX_MESSAGES_PER_WRITE
      52: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      55: putstatic     #26                 // Field MAX_MESSAGES_PER_WRITE:Lio/netty/channel/ChannelOption;
      58: ldc           #27                 // String WRITE_SPIN_COUNT
      60: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      63: putstatic     #28                 // Field WRITE_SPIN_COUNT:Lio/netty/channel/ChannelOption;
      66: ldc           #29                 // String WRITE_BUFFER_HIGH_WATER_MARK
      68: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      71: putstatic     #30                 // Field WRITE_BUFFER_HIGH_WATER_MARK:Lio/netty/channel/ChannelOption;
      74: ldc           #31                 // String WRITE_BUFFER_LOW_WATER_MARK
      76: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      79: putstatic     #32                 // Field WRITE_BUFFER_LOW_WATER_MARK:Lio/netty/channel/ChannelOption;
      82: ldc           #33                 // String WRITE_BUFFER_WATER_MARK
      84: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      87: putstatic     #34                 // Field WRITE_BUFFER_WATER_MARK:Lio/netty/channel/ChannelOption;
      90: ldc           #35                 // String ALLOW_HALF_CLOSURE
      92: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      95: putstatic     #36                 // Field ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      98: ldc           #37                 // String AUTO_READ
     100: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     103: putstatic     #38                 // Field AUTO_READ:Lio/netty/channel/ChannelOption;
     106: ldc           #39                 // String AUTO_CLOSE
     108: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     111: putstatic     #40                 // Field AUTO_CLOSE:Lio/netty/channel/ChannelOption;
     114: ldc           #41                 // String SO_BROADCAST
     116: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     119: putstatic     #42                 // Field SO_BROADCAST:Lio/netty/channel/ChannelOption;
     122: ldc           #43                 // String SO_KEEPALIVE
     124: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     127: putstatic     #44                 // Field SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
     130: ldc           #45                 // String SO_SNDBUF
     132: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     135: putstatic     #46                 // Field SO_SNDBUF:Lio/netty/channel/ChannelOption;
     138: ldc           #47                 // String SO_RCVBUF
     140: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     143: putstatic     #48                 // Field SO_RCVBUF:Lio/netty/channel/ChannelOption;
     146: ldc           #49                 // String SO_REUSEADDR
     148: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     151: putstatic     #50                 // Field SO_REUSEADDR:Lio/netty/channel/ChannelOption;
     154: ldc           #51                 // String SO_LINGER
     156: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     159: putstatic     #52                 // Field SO_LINGER:Lio/netty/channel/ChannelOption;
     162: ldc           #53                 // String SO_BACKLOG
     164: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     167: putstatic     #54                 // Field SO_BACKLOG:Lio/netty/channel/ChannelOption;
     170: ldc           #55                 // String SO_TIMEOUT
     172: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     175: putstatic     #56                 // Field SO_TIMEOUT:Lio/netty/channel/ChannelOption;
     178: ldc           #57                 // String IP_TOS
     180: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     183: putstatic     #58                 // Field IP_TOS:Lio/netty/channel/ChannelOption;
     186: ldc           #59                 // String IP_MULTICAST_ADDR
     188: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     191: putstatic     #60                 // Field IP_MULTICAST_ADDR:Lio/netty/channel/ChannelOption;
     194: ldc           #61                 // String IP_MULTICAST_IF
     196: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     199: putstatic     #62                 // Field IP_MULTICAST_IF:Lio/netty/channel/ChannelOption;
     202: ldc           #63                 // String IP_MULTICAST_TTL
     204: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     207: putstatic     #64                 // Field IP_MULTICAST_TTL:Lio/netty/channel/ChannelOption;
     210: ldc           #65                 // String IP_MULTICAST_LOOP_DISABLED
     212: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     215: putstatic     #66                 // Field IP_MULTICAST_LOOP_DISABLED:Lio/netty/channel/ChannelOption;
     218: ldc           #67                 // String TCP_NODELAY
     220: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     223: putstatic     #68                 // Field TCP_NODELAY:Lio/netty/channel/ChannelOption;
     226: ldc           #69                 // String TCP_FASTOPEN_CONNECT
     228: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     231: putstatic     #70                 // Field TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     234: ldc           #4                  // class io/netty/channel/ChannelOption
     236: ldc           #71                 // String TCP_FASTOPEN
     238: invokestatic  #72                 // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     241: putstatic     #73                 // Field TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
     244: ldc           #74                 // String DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
     246: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     249: putstatic     #75                 // Field DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
     252: ldc           #76                 // String SINGLE_EVENTEXECUTOR_PER_GROUP
     254: invokestatic  #15                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     257: putstatic     #77                 // Field SINGLE_EVENTEXECUTOR_PER_GROUP:Lio/netty/channel/ChannelOption;
     260: return
}
