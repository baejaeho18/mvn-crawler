Compiled from "ServerBootstrap.java"
class io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor extends io.netty.channel.ChannelInboundHandlerAdapter {
  private final io.netty.channel.EventLoopGroup childGroup;

  private final io.netty.channel.ChannelHandler childHandler;

  private final java.util.Map$Entry<io.netty.channel.ChannelOption<?>, java.lang.Object>[] childOptions;

  private final java.util.Map$Entry<io.netty.util.AttributeKey<?>, java.lang.Object>[] childAttrs;

  private final java.lang.Runnable enableAutoReadTask;

  io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor(io.netty.channel.Channel, io.netty.channel.EventLoopGroup, io.netty.channel.ChannelHandler, java.util.Map$Entry<io.netty.channel.ChannelOption<?>, java.lang.Object>[], java.util.Map$Entry<io.netty.util.AttributeKey<?>, java.lang.Object>[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field childGroup:Lio/netty/channel/EventLoopGroup;
       9: aload_0
      10: aload_3
      11: putfield      #4                  // Field childHandler:Lio/netty/channel/ChannelHandler;
      14: aload_0
      15: aload         4
      17: putfield      #5                  // Field childOptions:[Ljava/util/Map$Entry;
      20: aload_0
      21: aload         5
      23: putfield      #6                  // Field childAttrs:[Ljava/util/Map$Entry;
      26: aload_0
      27: new           #7                  // class io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor$1
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #8                  // Method io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor$1."<init>":(Lio/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor;Lio/netty/channel/Channel;)V
      36: putfield      #9                  // Field enableAutoReadTask:Ljava/lang/Runnable;
      39: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #10                 // class io/netty/channel/Channel
       4: astore_3
       5: aload_3
       6: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      11: iconst_1
      12: anewarray     #12                 // class io/netty/channel/ChannelHandler
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #4                  // Field childHandler:Lio/netty/channel/ChannelHandler;
      21: aastore
      22: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      27: pop
      28: aload_3
      29: aload_0
      30: getfield      #5                  // Field childOptions:[Ljava/util/Map$Entry;
      33: invokestatic  #14                 // Method io/netty/bootstrap/ServerBootstrap.access$100:()Lio/netty/util/internal/logging/InternalLogger;
      36: invokestatic  #15                 // Method io/netty/bootstrap/AbstractBootstrap.setChannelOptions:(Lio/netty/channel/Channel;[Ljava/util/Map$Entry;Lio/netty/util/internal/logging/InternalLogger;)V
      39: aload_3
      40: aload_0
      41: getfield      #6                  // Field childAttrs:[Ljava/util/Map$Entry;
      44: invokestatic  #16                 // Method io/netty/bootstrap/AbstractBootstrap.setAttributes:(Lio/netty/channel/Channel;[Ljava/util/Map$Entry;)V
      47: aload_0
      48: getfield      #3                  // Field childGroup:Lio/netty/channel/EventLoopGroup;
      51: aload_3
      52: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/EventLoopGroup.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
      57: new           #18                 // class io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor$2
      60: dup
      61: aload_0
      62: aload_3
      63: invokespecial #19                 // Method io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor$2."<init>":(Lio/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor;Lio/netty/channel/Channel;)V
      66: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      71: pop
      72: goto          83
      75: astore        4
      77: aload_3
      78: aload         4
      80: invokestatic  #1                  // Method forceClose:(Lio/netty/channel/Channel;Ljava/lang/Throwable;)V
      83: return
    Exception table:
       from    to  target type
          47    72    75   Class java/lang/Throwable

  private static void forceClose(io.netty.channel.Channel, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
       6: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
      11: invokestatic  #14                 // Method io/netty/bootstrap/ServerBootstrap.access$100:()Lio/netty/util/internal/logging/InternalLogger;
      14: ldc           #24                 // String Failed to register an accepted channel: {}
      16: aload_0
      17: aload_1
      18: invokeinterface #25,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      11: astore_3
      12: aload_3
      13: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      18: ifeq          54
      21: aload_3
      22: iconst_0
      23: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      28: pop
      29: aload_1
      30: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      35: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      40: aload_0
      41: getfield      #9                  // Field enableAutoReadTask:Ljava/lang/Runnable;
      44: lconst_1
      45: getstatic     #31                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      48: invokeinterface #32,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      53: pop
      54: aload_1
      55: aload_2
      56: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      61: pop
      62: return

  static void access$200(io.netty.channel.Channel, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method forceClose:(Lio/netty/channel/Channel;Ljava/lang/Throwable;)V
       5: return
}
