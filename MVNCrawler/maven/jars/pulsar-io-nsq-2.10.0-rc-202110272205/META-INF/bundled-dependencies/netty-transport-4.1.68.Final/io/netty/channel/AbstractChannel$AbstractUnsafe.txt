Compiled from "AbstractChannel.java"
public abstract class io.netty.channel.AbstractChannel$AbstractUnsafe implements io.netty.channel.Channel$Unsafe {
  private volatile io.netty.channel.ChannelOutboundBuffer outboundBuffer;

  private io.netty.channel.RecvByteBufAllocator$Handle recvHandle;

  private boolean inFlush0;

  private boolean neverRegistered;

  static final boolean $assertionsDisabled;

  final io.netty.channel.AbstractChannel this$0;

  protected io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       5: aload_0
       6: invokespecial #7                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #8                  // class io/netty/channel/ChannelOutboundBuffer
      13: dup
      14: aload_0
      15: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokespecial #9                  // Method io/netty/channel/ChannelOutboundBuffer."<init>":(Lio/netty/channel/AbstractChannel;)V
      21: putfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      24: aload_0
      25: iconst_1
      26: putfield      #11                 // Field neverRegistered:Z
      29: return

  private void assertEventLoop();
    Code:
       0: getstatic     #12                 // Field $assertionsDisabled:Z
       3: ifne          39
       6: aload_0
       7: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      10: invokestatic  #13                 // Method io/netty/channel/AbstractChannel.access$000:(Lio/netty/channel/AbstractChannel;)Z
      13: ifeq          39
      16: aload_0
      17: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      20: invokestatic  #14                 // Method io/netty/channel/AbstractChannel.access$100:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/EventLoop;
      23: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      28: ifne          39
      31: new           #16                 // class java/lang/AssertionError
      34: dup
      35: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: return

  public io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle();
    Code:
       0: aload_0
       1: getfield      #18                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
       4: ifnonnull     28
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      12: invokevirtual #19                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      15: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getRecvByteBufAllocator:()Lio/netty/channel/RecvByteBufAllocator;
      20: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      25: putfield      #18                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      28: aload_0
      29: getfield      #18                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      32: areturn

  public final io.netty.channel.ChannelOutboundBuffer outboundBuffer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       4: areturn

  public final java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #22                 // Method io/netty/channel/AbstractChannel.localAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #23                 // Method io/netty/channel/AbstractChannel.remoteAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final void register(io.netty.channel.EventLoop, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #24                 // String eventLoop
       3: invokestatic  #25                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      11: invokevirtual #26                 // Method io/netty/channel/AbstractChannel.isRegistered:()Z
      14: ifeq          34
      17: aload_2
      18: new           #27                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #28                 // String registered to an event loop already
      24: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      32: pop
      33: return
      34: aload_0
      35: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      38: aload_1
      39: invokevirtual #31                 // Method io/netty/channel/AbstractChannel.isCompatible:(Lio/netty/channel/EventLoop;)Z
      42: ifne          85
      45: aload_2
      46: new           #27                 // class java/lang/IllegalStateException
      49: dup
      50: new           #32                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #34                 // String incompatible event loop type:
      59: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #37                 // Method java/lang/Class.getName:()Ljava/lang/String;
      69: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      83: pop
      84: return
      85: aload_0
      86: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      89: aload_1
      90: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$102:(Lio/netty/channel/AbstractChannel;Lio/netty/channel/EventLoop;)Lio/netty/channel/EventLoop;
      93: pop
      94: aload_1
      95: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     100: ifeq          111
     103: aload_0
     104: aload_2
     105: invokespecial #5                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
     108: goto          166
     111: aload_1
     112: new           #40                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$1
     115: dup
     116: aload_0
     117: aload_2
     118: invokespecial #41                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$1."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
     121: invokeinterface #42,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     126: goto          166
     129: astore_3
     130: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
     133: ldc           #45                 // String Force-closing a channel whose registration task was not accepted by an event loop: {}
     135: aload_0
     136: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     139: aload_3
     140: invokeinterface #46,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     145: aload_0
     146: invokevirtual #47                 // Method closeForcibly:()V
     149: aload_0
     150: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     153: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     156: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     159: pop
     160: aload_0
     161: aload_2
     162: aload_3
     163: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     166: return
    Exception table:
       from    to  target type
         111   126   129   Class java/lang/Throwable

  private void register0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_1
      11: invokevirtual #52                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #11                 // Field neverRegistered:Z
      22: istore_2
      23: aload_0
      24: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      27: invokevirtual #53                 // Method io/netty/channel/AbstractChannel.doRegister:()V
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field neverRegistered:Z
      35: aload_0
      36: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      39: iconst_1
      40: invokestatic  #54                 // Method io/netty/channel/AbstractChannel.access$002:(Lio/netty/channel/AbstractChannel;Z)Z
      43: pop
      44: aload_0
      45: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      48: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      51: invokevirtual #56                 // Method io/netty/channel/DefaultChannelPipeline.invokeHandlerAddedIfNeeded:()V
      54: aload_0
      55: aload_1
      56: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      59: aload_0
      60: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      63: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      66: invokevirtual #58                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelRegistered:()Lio/netty/channel/ChannelPipeline;
      69: pop
      70: aload_0
      71: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      74: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      77: ifeq          117
      80: iload_2
      81: ifeq          98
      84: aload_0
      85: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      88: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      91: invokevirtual #60                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      94: pop
      95: goto          117
      98: aload_0
      99: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     102: invokevirtual #19                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
     105: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     110: ifeq          117
     113: aload_0
     114: invokevirtual #62                 // Method beginRead:()V
     117: goto          142
     120: astore_2
     121: aload_0
     122: invokevirtual #47                 // Method closeForcibly:()V
     125: aload_0
     126: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     129: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     132: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     135: pop
     136: aload_0
     137: aload_1
     138: aload_2
     139: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     142: return
    Exception table:
       from    to  target type
           0    17   120   Class java/lang/Throwable
          18   117   120   Class java/lang/Throwable

  public final void bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_2
       5: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      10: ifeq          21
      13: aload_0
      14: aload_2
      15: invokevirtual #52                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      18: ifne          22
      21: return
      22: getstatic     #64                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      25: aload_0
      26: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      29: invokevirtual #19                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      32: getstatic     #65                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
      35: invokeinterface #66,  2           // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      40: invokevirtual #67                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      43: ifeq          110
      46: aload_1
      47: instanceof    #68                 // class java/net/InetSocketAddress
      50: ifeq          110
      53: aload_1
      54: checkcast     #68                 // class java/net/InetSocketAddress
      57: invokevirtual #69                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      60: invokevirtual #70                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      63: ifne          110
      66: invokestatic  #71                 // Method io/netty/util/internal/PlatformDependent.isWindows:()Z
      69: ifne          110
      72: invokestatic  #72                 // Method io/netty/util/internal/PlatformDependent.maybeSuperUser:()Z
      75: ifne          110
      78: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      81: new           #32                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #73                 // String A non-root user can\'t receive a broadcast packet if the socket is not bound to a wildcard address; binding to a non-wildcard address (
      90: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_1
      94: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: ldc           #75                 // String ) anyway as requested.
      99: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokeinterface #76,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
     110: aload_0
     111: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     114: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     117: istore_3
     118: aload_0
     119: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     122: aload_1
     123: invokevirtual #77                 // Method io/netty/channel/AbstractChannel.doBind:(Ljava/net/SocketAddress;)V
     126: goto          143
     129: astore        4
     131: aload_0
     132: aload_2
     133: aload         4
     135: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     138: aload_0
     139: invokevirtual #78                 // Method closeIfClosed:()V
     142: return
     143: iload_3
     144: ifne          169
     147: aload_0
     148: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     151: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     154: ifeq          169
     157: aload_0
     158: new           #79                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$2
     161: dup
     162: aload_0
     163: invokespecial #80                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$2."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
     166: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     169: aload_0
     170: aload_2
     171: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     174: return
    Exception table:
       from    to  target type
         118   126   129   Class java/lang/Throwable

  public final void disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_1
       5: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      21: istore_2
      22: aload_0
      23: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      26: invokevirtual #81                 // Method io/netty/channel/AbstractChannel.doDisconnect:()V
      29: aload_0
      30: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      33: aconst_null
      34: invokestatic  #82                 // Method io/netty/channel/AbstractChannel.access$602:(Lio/netty/channel/AbstractChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      37: pop
      38: aload_0
      39: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      42: aconst_null
      43: invokestatic  #83                 // Method io/netty/channel/AbstractChannel.access$702:(Lio/netty/channel/AbstractChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      46: pop
      47: goto          62
      50: astore_3
      51: aload_0
      52: aload_1
      53: aload_3
      54: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      57: aload_0
      58: invokevirtual #78                 // Method closeIfClosed:()V
      61: return
      62: iload_2
      63: ifeq          88
      66: aload_0
      67: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      70: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      73: ifne          88
      76: aload_0
      77: new           #84                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$3
      80: dup
      81: aload_0
      82: invokespecial #85                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$3."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
      85: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      88: aload_0
      89: aload_1
      90: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      93: aload_0
      94: invokevirtual #78                 // Method closeIfClosed:()V
      97: return
    Exception table:
       from    to  target type
          22    47    50   Class java/lang/Throwable

  public void close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: ldc           #86                 // class io/netty/channel/AbstractChannel
       6: ldc           #87                 // String close(ChannelPromise)
       8: invokestatic  #88                 // Method io/netty/channel/StacklessClosedChannelException.newInstance:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/StacklessClosedChannelException;
      11: astore_2
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_2
      16: iconst_0
      17: invokespecial #89                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Ljava/nio/channels/ClosedChannelException;Z)V
      20: return

  public final void shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #90                 // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      10: return

  private void shutdownOutput(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      14: astore_3
      15: aload_3
      16: ifnonnull     34
      19: aload_1
      20: new           #91                 // class java/nio/channels/ClosedChannelException
      23: dup
      24: invokespecial #92                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      27: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      32: pop
      33: return
      34: aload_0
      35: aconst_null
      36: putfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      39: aload_2
      40: ifnonnull     55
      43: new           #93                 // class io/netty/channel/socket/ChannelOutputShutdownException
      46: dup
      47: ldc           #94                 // String Channel output shutdown
      49: invokespecial #95                 // Method io/netty/channel/socket/ChannelOutputShutdownException."<init>":(Ljava/lang/String;)V
      52: goto          65
      55: new           #93                 // class io/netty/channel/socket/ChannelOutputShutdownException
      58: dup
      59: ldc           #94                 // String Channel output shutdown
      61: aload_2
      62: invokespecial #96                 // Method io/netty/channel/socket/ChannelOutputShutdownException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      65: astore        4
      67: aload_0
      68: invokevirtual #97                 // Method prepareToClose:()Ljava/util/concurrent/Executor;
      71: astore        5
      73: aload         5
      75: ifnull        100
      78: aload         5
      80: new           #98                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$4
      83: dup
      84: aload_0
      85: aload_1
      86: aload_3
      87: aload         4
      89: invokespecial #99                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$4."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;)V
      92: invokeinterface #100,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      97: goto          178
     100: aload_0
     101: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     104: invokevirtual #101                // Method io/netty/channel/AbstractChannel.doShutdownOutput:()V
     107: aload_1
     108: invokeinterface #102,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     113: pop
     114: aload_0
     115: aload_0
     116: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     119: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
     122: aload_3
     123: aload         4
     125: invokespecial #4                  // Method closeOutboundBufferForShutdown:(Lio/netty/channel/ChannelPipeline;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;)V
     128: goto          178
     131: astore        6
     133: aload_1
     134: aload         6
     136: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
     141: pop
     142: aload_0
     143: aload_0
     144: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     147: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
     150: aload_3
     151: aload         4
     153: invokespecial #4                  // Method closeOutboundBufferForShutdown:(Lio/netty/channel/ChannelPipeline;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;)V
     156: goto          178
     159: astore        7
     161: aload_0
     162: aload_0
     163: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     166: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
     169: aload_3
     170: aload         4
     172: invokespecial #4                  // Method closeOutboundBufferForShutdown:(Lio/netty/channel/ChannelPipeline;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;)V
     175: aload         7
     177: athrow
     178: return
    Exception table:
       from    to  target type
         100   114   131   Class java/lang/Throwable
         100   114   159   any
         131   142   159   any
         159   161   159   any

  private void closeOutboundBufferForShutdown(io.netty.channel.ChannelPipeline, io.netty.channel.ChannelOutboundBuffer, java.lang.Throwable);
    Code:
       0: aload_2
       1: aload_3
       2: iconst_0
       3: invokevirtual #103                // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
       6: aload_2
       7: aload_3
       8: iconst_1
       9: invokevirtual #104                // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/lang/Throwable;Z)V
      12: aload_1
      13: getstatic     #105                // Field io/netty/channel/socket/ChannelOutputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelOutputShutdownEvent;
      16: invokeinterface #106,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      21: pop
      22: return

  private void close(io.netty.channel.ChannelPromise, java.lang.Throwable, java.nio.channels.ClosedChannelException, boolean);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      14: invokestatic  #107                // Method io/netty/channel/AbstractChannel.access$900:(Lio/netty/channel/AbstractChannel;)Z
      17: ifeq          69
      20: aload_0
      21: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      24: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      27: invokevirtual #108                // Method io/netty/channel/AbstractChannel$CloseFuture.isDone:()Z
      30: ifeq          41
      33: aload_0
      34: aload_1
      35: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      38: goto          68
      41: aload_1
      42: instanceof    #109                // class io/netty/channel/VoidChannelPromise
      45: ifne          68
      48: aload_0
      49: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      52: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      55: new           #110                // class io/netty/channel/AbstractChannel$AbstractUnsafe$5
      58: dup
      59: aload_0
      60: aload_1
      61: invokespecial #111                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$5."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
      64: invokevirtual #112                // Method io/netty/channel/AbstractChannel$CloseFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      67: pop
      68: return
      69: aload_0
      70: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      73: iconst_1
      74: invokestatic  #113                // Method io/netty/channel/AbstractChannel.access$902:(Lio/netty/channel/AbstractChannel;Z)Z
      77: pop
      78: aload_0
      79: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      82: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      85: istore        5
      87: aload_0
      88: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      91: astore        6
      93: aload_0
      94: aconst_null
      95: putfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      98: aload_0
      99: invokevirtual #97                 // Method prepareToClose:()Ljava/util/concurrent/Executor;
     102: astore        7
     104: aload         7
     106: ifnull        136
     109: aload         7
     111: new           #114                // class io/netty/channel/AbstractChannel$AbstractUnsafe$6
     114: dup
     115: aload_0
     116: aload_1
     117: aload         6
     119: aload_2
     120: iload         4
     122: aload_3
     123: iload         5
     125: invokespecial #115                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$6."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;ZLjava/nio/channels/ClosedChannelException;Z)V
     128: invokeinterface #100,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     133: goto          217
     136: aload_0
     137: aload_1
     138: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
     141: aload         6
     143: ifnull        187
     146: aload         6
     148: aload_2
     149: iload         4
     151: invokevirtual #103                // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     154: aload         6
     156: aload_3
     157: invokevirtual #116                // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     160: goto          187
     163: astore        8
     165: aload         6
     167: ifnull        184
     170: aload         6
     172: aload_2
     173: iload         4
     175: invokevirtual #103                // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     178: aload         6
     180: aload_3
     181: invokevirtual #116                // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     184: aload         8
     186: athrow
     187: aload_0
     188: getfield      #117                // Field inFlush0:Z
     191: ifeq          211
     194: aload_0
     195: new           #118                // class io/netty/channel/AbstractChannel$AbstractUnsafe$7
     198: dup
     199: aload_0
     200: iload         5
     202: invokespecial #119                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$7."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Z)V
     205: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     208: goto          217
     211: aload_0
     212: iload         5
     214: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
     217: return
    Exception table:
       from    to  target type
         136   141   163   any
         163   165   163   any

  private void doClose0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #120                // Method io/netty/channel/AbstractChannel.doClose:()V
       7: aload_0
       8: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      11: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      14: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      23: goto          44
      26: astore_2
      27: aload_0
      28: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      31: invokestatic  #48                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      34: invokevirtual #49                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      37: pop
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Throwable

  private void fireChannelInactiveAndDeregister(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
       5: iload_1
       6: ifeq          23
       9: aload_0
      10: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      13: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokespecial #122                // Method deregister:(Lio/netty/channel/ChannelPromise;Z)V
      27: return

  public final void closeForcibly();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokevirtual #120                // Method io/netty/channel/AbstractChannel.doClose:()V
      11: goto          26
      14: astore_1
      15: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      18: ldc           #124                // String Failed to close a channel.
      20: aload_1
      21: invokeinterface #125,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: return
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/Exception

  public final void deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: aload_1
       6: iconst_0
       7: invokespecial #122                // Method deregister:(Lio/netty/channel/ChannelPromise;Z)V
      10: return

  private void deregister(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      14: invokestatic  #13                 // Method io/netty/channel/AbstractChannel.access$000:(Lio/netty/channel/AbstractChannel;)Z
      17: ifne          26
      20: aload_0
      21: aload_1
      22: invokevirtual #57                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      25: return
      26: aload_0
      27: new           #126                // class io/netty/channel/AbstractChannel$AbstractUnsafe$8
      30: dup
      31: aload_0
      32: iload_2
      33: aload_1
      34: invokespecial #127                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$8."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;ZLio/netty/channel/ChannelPromise;)V
      37: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      40: return

  public final void beginRead();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokevirtual #128                // Method io/netty/channel/AbstractChannel.doBeginRead:()V
      11: goto          36
      14: astore_1
      15: aload_0
      16: new           #129                // class io/netty/channel/AbstractChannel$AbstractUnsafe$9
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #130                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$9."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Ljava/lang/Exception;)V
      25: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      33: invokevirtual #131                // Method close:(Lio/netty/channel/ChannelPromise;)V
      36: return
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/Exception

  public final void write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       8: astore_3
       9: aload_3
      10: ifnonnull     63
      13: aload_1
      14: invokestatic  #132                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: aload_2
      20: aload_0
      21: aload_0
      22: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      25: invokestatic  #133                // Method io/netty/channel/AbstractChannel.access$1300:(Lio/netty/channel/AbstractChannel;)Ljava/lang/Throwable;
      28: ldc           #134                // String write(Object, ChannelPromise)
      30: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      33: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      36: goto          62
      39: astore        4
      41: aload_0
      42: aload_2
      43: aload_0
      44: aload_0
      45: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      48: invokestatic  #133                // Method io/netty/channel/AbstractChannel.access$1300:(Lio/netty/channel/AbstractChannel;)Ljava/lang/Throwable;
      51: ldc           #134                // String write(Object, ChannelPromise)
      53: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      56: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      59: aload         4
      61: athrow
      62: return
      63: aload_0
      64: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      67: aload_1
      68: invokevirtual #136                // Method io/netty/channel/AbstractChannel.filterOutboundMessage:(Ljava/lang/Object;)Ljava/lang/Object;
      71: astore_1
      72: aload_0
      73: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      76: invokestatic  #55                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      79: invokevirtual #137                // Method io/netty/channel/DefaultChannelPipeline.estimatorHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      82: aload_1
      83: invokeinterface #138,  2          // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      88: istore        4
      90: iload         4
      92: ifge          98
      95: iconst_0
      96: istore        4
      98: goto          131
     101: astore        5
     103: aload_1
     104: invokestatic  #132                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     107: pop
     108: aload_0
     109: aload_2
     110: aload         5
     112: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     115: goto          130
     118: astore        6
     120: aload_0
     121: aload_2
     122: aload         5
     124: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     127: aload         6
     129: athrow
     130: return
     131: aload_3
     132: aload_1
     133: iload         4
     135: aload_2
     136: invokevirtual #139                // Method io/netty/channel/ChannelOutboundBuffer.addMessage:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)V
     139: return
    Exception table:
       from    to  target type
          13    18    39   any
          39    41    39   any
          63    98   101   Class java/lang/Throwable
         103   108   118   any
         118   120   118   any

  public final void flush();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       8: astore_1
       9: aload_1
      10: ifnonnull     14
      13: return
      14: aload_1
      15: invokevirtual #140                // Method io/netty/channel/ChannelOutboundBuffer.addFlush:()V
      18: aload_0
      19: invokevirtual #141                // Method flush0:()V
      22: return

  protected void flush0();
    Code:
       0: aload_0
       1: getfield      #117                // Field inFlush0:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #10                 // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      12: astore_1
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #142                // Method io/netty/channel/ChannelOutboundBuffer.isEmpty:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: iconst_1
      27: putfield      #117                // Field inFlush0:Z
      30: aload_0
      31: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      34: invokevirtual #59                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      37: ifne          107
      40: aload_1
      41: invokevirtual #142                // Method io/netty/channel/ChannelOutboundBuffer.isEmpty:()Z
      44: ifne          90
      47: aload_0
      48: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      51: invokevirtual #143                // Method io/netty/channel/AbstractChannel.isOpen:()Z
      54: ifeq          72
      57: aload_1
      58: new           #144                // class java/nio/channels/NotYetConnectedException
      61: dup
      62: invokespecial #145                // Method java/nio/channels/NotYetConnectedException."<init>":()V
      65: iconst_1
      66: invokevirtual #103                // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      69: goto          90
      72: aload_1
      73: aload_0
      74: aload_0
      75: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      78: invokestatic  #133                // Method io/netty/channel/AbstractChannel.access$1300:(Lio/netty/channel/AbstractChannel;)Ljava/lang/Throwable;
      81: ldc           #146                // String flush0()
      83: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      86: iconst_0
      87: invokevirtual #103                // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      90: aload_0
      91: iconst_0
      92: putfield      #117                // Field inFlush0:Z
      95: goto          106
      98: astore_2
      99: aload_0
     100: iconst_0
     101: putfield      #117                // Field inFlush0:Z
     104: aload_2
     105: athrow
     106: return
     107: aload_0
     108: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
     111: aload_1
     112: invokevirtual #147                // Method io/netty/channel/AbstractChannel.doWrite:(Lio/netty/channel/ChannelOutboundBuffer;)V
     115: aload_0
     116: iconst_0
     117: putfield      #117                // Field inFlush0:Z
     120: goto          145
     123: astore_2
     124: aload_0
     125: aload_2
     126: invokevirtual #148                // Method handleWriteError:(Ljava/lang/Throwable;)V
     129: aload_0
     130: iconst_0
     131: putfield      #117                // Field inFlush0:Z
     134: goto          145
     137: astore_3
     138: aload_0
     139: iconst_0
     140: putfield      #117                // Field inFlush0:Z
     143: aload_3
     144: athrow
     145: return
    Exception table:
       from    to  target type
          40    90    98   any
         107   115   123   Class java/lang/Throwable
         107   115   137   any
         123   129   137   any

  protected final void handleWriteError(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #149                // class java/io/IOException
       4: ifeq          51
       7: aload_0
       8: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      11: invokevirtual #19                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      14: invokeinterface #150,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoClose:()Z
      19: ifeq          51
      22: aload_0
      23: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      26: aload_1
      27: invokestatic  #151                // Method io/netty/channel/AbstractChannel.access$1302:(Lio/netty/channel/AbstractChannel;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      30: pop
      31: aload_0
      32: aload_0
      33: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      36: aload_1
      37: aload_0
      38: aload_1
      39: ldc           #146                // String flush0()
      41: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      44: iconst_0
      45: invokespecial #89                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Ljava/nio/channels/ClosedChannelException;Z)V
      48: goto          90
      51: aload_0
      52: aload_0
      53: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      56: aload_1
      57: invokespecial #90                 // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      60: goto          90
      63: astore_2
      64: aload_0
      65: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      68: aload_1
      69: invokestatic  #151                // Method io/netty/channel/AbstractChannel.access$1302:(Lio/netty/channel/AbstractChannel;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      72: pop
      73: aload_0
      74: aload_0
      75: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      78: aload_2
      79: aload_0
      80: aload_1
      81: ldc           #146                // String flush0()
      83: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      86: iconst_0
      87: invokespecial #89                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Ljava/nio/channels/ClosedChannelException;Z)V
      90: return
    Exception table:
       from    to  target type
          51    60    63   Class java/lang/Throwable

  private java.nio.channels.ClosedChannelException newClosedChannelException(java.lang.Throwable, java.lang.String);
    Code:
       0: ldc           #152                // class io/netty/channel/AbstractChannel$AbstractUnsafe
       2: aload_2
       3: invokestatic  #88                 // Method io/netty/channel/StacklessClosedChannelException.newInstance:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/StacklessClosedChannelException;
       6: astore_3
       7: aload_1
       8: ifnull        17
      11: aload_3
      12: aload_1
      13: invokevirtual #153                // Method java/nio/channels/ClosedChannelException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      16: pop
      17: aload_3
      18: areturn

  public final io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method assertEventLoop:()V
       4: aload_0
       5: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokestatic  #154                // Method io/netty/channel/AbstractChannel.access$1400:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/VoidChannelPromise;
      11: areturn

  protected final boolean ensureOpen(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #143                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
      19: invokestatic  #133                // Method io/netty/channel/AbstractChannel.access$1300:(Lio/netty/channel/AbstractChannel;)Ljava/lang/Throwable;
      22: ldc           #155                // String ensureOpen(ChannelPromise)
      24: invokespecial #135                // Method newClosedChannelException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/nio/channels/ClosedChannelException;
      27: invokevirtual #50                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      30: iconst_0
      31: ireturn

  protected final void safeSetSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: instanceof    #109                // class io/netty/channel/VoidChannelPromise
       4: ifne          27
       7: aload_1
       8: invokeinterface #156,  1          // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      13: ifne          27
      16: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #157                // String Failed to mark a promise as success because it is done already: {}
      21: aload_1
      22: invokeinterface #158,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  protected final void safeSetFailure(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #109                // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_1
       8: aload_2
       9: invokeinterface #159,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #160                // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_1
      23: aload_2
      24: invokeinterface #46,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  protected final void closeIfClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #143                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_0
      13: invokevirtual #121                // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      16: invokevirtual #131                // Method close:(Lio/netty/channel/ChannelPromise;)V
      19: return

  private void invokeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #161                // Method io/netty/channel/AbstractChannel.eventLoop:()Lio/netty/channel/EventLoop;
       7: aload_1
       8: invokeinterface #42,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      13: goto          28
      16: astore_2
      17: invokestatic  #44                 // Method io/netty/channel/AbstractChannel.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #163                // String Can\'t invoke task later as EventLoop rejected it
      22: aload_2
      23: invokeinterface #125,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    13    16   Class java/util/concurrent/RejectedExecutionException

  protected final java.lang.Throwable annotateConnectException(java.lang.Throwable, java.net.SocketAddress);
    Code:
       0: aload_1
       1: instanceof    #164                // class java/net/ConnectException
       4: ifeq          20
       7: new           #165                // class io/netty/channel/AbstractChannel$AnnotatedConnectException
      10: dup
      11: aload_1
      12: checkcast     #164                // class java/net/ConnectException
      15: aload_2
      16: invokespecial #166                // Method io/netty/channel/AbstractChannel$AnnotatedConnectException."<init>":(Ljava/net/ConnectException;Ljava/net/SocketAddress;)V
      19: areturn
      20: aload_1
      21: instanceof    #167                // class java/net/NoRouteToHostException
      24: ifeq          40
      27: new           #168                // class io/netty/channel/AbstractChannel$AnnotatedNoRouteToHostException
      30: dup
      31: aload_1
      32: checkcast     #167                // class java/net/NoRouteToHostException
      35: aload_2
      36: invokespecial #169                // Method io/netty/channel/AbstractChannel$AnnotatedNoRouteToHostException."<init>":(Ljava/net/NoRouteToHostException;Ljava/net/SocketAddress;)V
      39: areturn
      40: aload_1
      41: instanceof    #170                // class java/net/SocketException
      44: ifeq          60
      47: new           #171                // class io/netty/channel/AbstractChannel$AnnotatedSocketException
      50: dup
      51: aload_1
      52: checkcast     #170                // class java/net/SocketException
      55: aload_2
      56: invokespecial #172                // Method io/netty/channel/AbstractChannel$AnnotatedSocketException."<init>":(Ljava/net/SocketException;Ljava/net/SocketAddress;)V
      59: areturn
      60: aload_1
      61: areturn

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aconst_null
       1: areturn

  static void access$200(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$800(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPipeline, io.netty.channel.ChannelOutboundBuffer, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method closeOutboundBufferForShutdown:(Lio/netty/channel/ChannelPipeline;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;)V
       7: return

  static void access$1000(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$1100(io.netty.channel.AbstractChannel$AbstractUnsafe, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
       5: return

  static void access$1200(io.netty.channel.AbstractChannel$AbstractUnsafe, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
       5: return

  static {};
    Code:
       0: ldc           #86                 // class io/netty/channel/AbstractChannel
       2: invokevirtual #173                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #12                 // Field $assertionsDisabled:Z
      16: return
}
