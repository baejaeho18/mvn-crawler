Compiled from "AtomicLongDeserializer.java"
public class com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer<java.util.concurrent.atomic.AtomicLong> {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/util/concurrent/atomic/AtomicLong
       3: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer."<init>":(Ljava/lang/Class;)V
       6: return

  public java.util.concurrent.atomic.AtomicLong deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/fasterxml/jackson/core/JsonParser.isExpectedNumberIntToken:()Z
       4: ifeq          19
       7: new           #1                  // class java/util/concurrent/atomic/AtomicLong
      10: dup
      11: aload_1
      12: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonParser.getLongValue:()J
      15: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      18: areturn
      19: aload_0
      20: aload_1
      21: aload_2
      22: ldc           #1                  // class java/util/concurrent/atomic/AtomicLong
      24: invokevirtual #6                  // Method _parseLong:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Class;)Ljava/lang/Long;
      27: astore_3
      28: aload_3
      29: ifnonnull     36
      32: aconst_null
      33: goto          48
      36: new           #1                  // class java/util/concurrent/atomic/AtomicLong
      39: dup
      40: aload_3
      41: invokevirtual #7                  // Method java/lang/Long.intValue:()I
      44: i2l
      45: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      48: areturn

  public com.fasterxml.jackson.databind.type.LogicalType logicalType();
    Code:
       0: getstatic     #8                  // Field com/fasterxml/jackson/databind/type/LogicalType.Integer:Lcom/fasterxml/jackson/databind/type/LogicalType;
       3: areturn

  public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: new           #1                  // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: areturn

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/concurrent/atomic/AtomicLong;
       6: areturn
}
