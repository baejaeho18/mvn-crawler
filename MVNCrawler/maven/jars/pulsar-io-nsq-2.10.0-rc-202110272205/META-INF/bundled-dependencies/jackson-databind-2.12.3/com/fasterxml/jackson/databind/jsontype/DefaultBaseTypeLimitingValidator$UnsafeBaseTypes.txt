Compiled from "DefaultBaseTypeLimitingValidator.java"
final class com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes {
  public static final com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance;

  private final java.util.Set<java.lang.String> UNSAFE;

  private com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field UNSAFE:Ljava/util/Set;
      15: aload_0
      16: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      19: ldc           #5                  // class java/lang/Object
      21: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      34: ldc           #8                  // class java/io/Closeable
      36: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_0
      46: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      49: ldc           #9                  // class java/io/Serializable
      51: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      64: ldc           #10                 // class java/lang/AutoCloseable
      66: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      69: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      79: ldc           #11                 // class java/lang/Cloneable
      81: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      84: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      89: pop
      90: aload_0
      91: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
      94: ldc           #12                 // String java.util.logging.Handler
      96: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     101: pop
     102: aload_0
     103: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
     106: ldc           #13                 // String javax.naming.Referenceable
     108: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     113: pop
     114: aload_0
     115: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
     118: ldc           #14                 // String javax.sql.DataSource
     120: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     125: pop
     126: return

  public boolean isUnsafeBaseType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field UNSAFE:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokeinterface #15,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  static {};
    Code:
       0: new           #16                 // class com/fasterxml/jackson/databind/jsontype/DefaultBaseTypeLimitingValidator$UnsafeBaseTypes
       3: dup
       4: invokespecial #17                 // Method "<init>":()V
       7: putstatic     #18                 // Field instance:Lcom/fasterxml/jackson/databind/jsontype/DefaultBaseTypeLimitingValidator$UnsafeBaseTypes;
      10: return
}
