Compiled from "ZstdDecompressor.java"
public class io.airlift.compress.zstd.ZstdDecompressor implements io.airlift.compress.Decompressor {
  private final io.airlift.compress.zstd.ZstdFrameDecompressor decompressor;

  public io.airlift.compress.zstd.ZstdDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class io/airlift/compress/zstd/ZstdFrameDecompressor
       8: dup
       9: invokespecial #9                  // Method io/airlift/compress/zstd/ZstdFrameDecompressor."<init>":()V
      12: putfield      #10                 // Field decompressor:Lio/airlift/compress/zstd/ZstdFrameDecompressor;
      15: return

  public int decompress(byte[], int, int, byte[], int, int) throws io.airlift.compress.MalformedInputException;
    Code:
       0: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
       3: iload_2
       4: iadd
       5: i2l
       6: lstore        7
       8: lload         7
      10: iload_3
      11: i2l
      12: ladd
      13: lstore        9
      15: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      18: iload         5
      20: iadd
      21: i2l
      22: lstore        11
      24: lload         11
      26: iload         6
      28: i2l
      29: ladd
      30: lstore        13
      32: aload_0
      33: getfield      #10                 // Field decompressor:Lio/airlift/compress/zstd/ZstdFrameDecompressor;
      36: aload_1
      37: lload         7
      39: lload         9
      41: aload         4
      43: lload         11
      45: lload         13
      47: invokevirtual #22                 // Method io/airlift/compress/zstd/ZstdFrameDecompressor.decompress:(Ljava/lang/Object;JJLjava/lang/Object;JJ)I
      50: ireturn

  public void decompress(java.nio.ByteBuffer, java.nio.ByteBuffer) throws io.airlift.compress.MalformedInputException;
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload_3
       6: invokevirtual #26                 // Method java/nio/Buffer.isDirect:()Z
       9: ifeq          44
      12: aconst_null
      13: astore        5
      15: aload_3
      16: invokestatic  #32                 // Method io/airlift/compress/zstd/UnsafeUtil.getAddress:(Ljava/nio/Buffer;)J
      19: lstore        10
      21: lload         10
      23: aload_3
      24: invokevirtual #38                 // Method java/nio/Buffer.position:()I
      27: i2l
      28: ladd
      29: lstore        6
      31: lload         10
      33: aload_3
      34: invokevirtual #42                 // Method java/nio/Buffer.limit:()I
      37: i2l
      38: ladd
      39: lstore        8
      41: goto          125
      44: aload_3
      45: invokevirtual #45                 // Method java/nio/Buffer.hasArray:()Z
      48: ifeq          92
      51: aload_3
      52: invokevirtual #48                 // Method java/nio/Buffer.array:()Ljava/lang/Object;
      55: astore        5
      57: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      60: aload_3
      61: invokevirtual #52                 // Method java/nio/Buffer.arrayOffset:()I
      64: iadd
      65: aload_3
      66: invokevirtual #38                 // Method java/nio/Buffer.position:()I
      69: iadd
      70: i2l
      71: lstore        6
      73: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      76: aload_3
      77: invokevirtual #52                 // Method java/nio/Buffer.arrayOffset:()I
      80: iadd
      81: aload_3
      82: invokevirtual #42                 // Method java/nio/Buffer.limit:()I
      85: iadd
      86: i2l
      87: lstore        8
      89: goto          125
      92: new           #55                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #57                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #60                 // String Unsupported input ByteBuffer implementation
     105: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     112: invokevirtual #70                 // Method java/lang/Class.getName:()Ljava/lang/String;
     115: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload         4
     127: invokevirtual #26                 // Method java/nio/Buffer.isDirect:()Z
     130: ifeq          168
     133: aconst_null
     134: astore        10
     136: aload         4
     138: invokestatic  #32                 // Method io/airlift/compress/zstd/UnsafeUtil.getAddress:(Ljava/nio/Buffer;)J
     141: lstore        15
     143: lload         15
     145: aload         4
     147: invokevirtual #38                 // Method java/nio/Buffer.position:()I
     150: i2l
     151: ladd
     152: lstore        11
     154: lload         15
     156: aload         4
     158: invokevirtual #42                 // Method java/nio/Buffer.limit:()I
     161: i2l
     162: ladd
     163: lstore        13
     165: goto          256
     168: aload         4
     170: invokevirtual #45                 // Method java/nio/Buffer.hasArray:()Z
     173: ifeq          222
     176: aload         4
     178: invokevirtual #48                 // Method java/nio/Buffer.array:()Ljava/lang/Object;
     181: astore        10
     183: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
     186: aload         4
     188: invokevirtual #52                 // Method java/nio/Buffer.arrayOffset:()I
     191: iadd
     192: aload         4
     194: invokevirtual #38                 // Method java/nio/Buffer.position:()I
     197: iadd
     198: i2l
     199: lstore        11
     201: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
     204: aload         4
     206: invokevirtual #52                 // Method java/nio/Buffer.arrayOffset:()I
     209: iadd
     210: aload         4
     212: invokevirtual #42                 // Method java/nio/Buffer.limit:()I
     215: iadd
     216: i2l
     217: lstore        13
     219: goto          256
     222: new           #55                 // class java/lang/IllegalArgumentException
     225: dup
     226: new           #57                 // class java/lang/StringBuilder
     229: dup
     230: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
     233: ldc           #82                 // String Unsupported output ByteBuffer implementation
     235: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload         4
     240: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     243: invokevirtual #70                 // Method java/lang/Class.getName:()Ljava/lang/String;
     246: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload_3
     257: dup
     258: astore        15
     260: monitorenter
     261: aload         4
     263: dup
     264: astore        16
     266: monitorenter
     267: new           #7                  // class io/airlift/compress/zstd/ZstdFrameDecompressor
     270: dup
     271: invokespecial #9                  // Method io/airlift/compress/zstd/ZstdFrameDecompressor."<init>":()V
     274: aload         5
     276: lload         6
     278: lload         8
     280: aload         10
     282: lload         11
     284: lload         13
     286: invokevirtual #22                 // Method io/airlift/compress/zstd/ZstdFrameDecompressor.decompress:(Ljava/lang/Object;JJLjava/lang/Object;JJ)I
     289: istore        17
     291: aload         4
     293: aload         4
     295: invokevirtual #38                 // Method java/nio/Buffer.position:()I
     298: iload         17
     300: iadd
     301: invokevirtual #84                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     304: pop
     305: aload         16
     307: monitorexit
     308: goto          319
     311: astore        18
     313: aload         16
     315: monitorexit
     316: aload         18
     318: athrow
     319: aload         15
     321: monitorexit
     322: goto          333
     325: astore        19
     327: aload         15
     329: monitorexit
     330: aload         19
     332: athrow
     333: return
    Exception table:
       from    to  target type
         267   308   311   any
         311   316   311   any
         261   322   325   any
         325   330   325   any

  public static long getDecompressedSize(byte[], int, int);
    Code:
       0: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
       3: iload_1
       4: iadd
       5: istore_3
       6: aload_0
       7: iload_3
       8: i2l
       9: iload_3
      10: iload_2
      11: iadd
      12: i2l
      13: invokestatic  #87                 // Method io/airlift/compress/zstd/ZstdFrameDecompressor.getDecompressedSize:(Ljava/lang/Object;JJ)J
      16: lreturn
}
