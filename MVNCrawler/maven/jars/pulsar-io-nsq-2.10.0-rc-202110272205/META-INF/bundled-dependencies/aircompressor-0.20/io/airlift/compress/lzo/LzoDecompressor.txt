Compiled from "LzoDecompressor.java"
public class io.airlift.compress.lzo.LzoDecompressor implements io.airlift.compress.Decompressor {
  public io.airlift.compress.lzo.LzoDecompressor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int decompress(byte[], int, int, byte[], int, int) throws io.airlift.compress.MalformedInputException;
    Code:
       0: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
       3: iload_2
       4: iadd
       5: i2l
       6: lstore        7
       8: lload         7
      10: iload_3
      11: i2l
      12: ladd
      13: lstore        9
      15: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      18: iload         5
      20: iadd
      21: i2l
      22: lstore        11
      24: lload         11
      26: iload         6
      28: i2l
      29: ladd
      30: lstore        13
      32: aload_1
      33: lload         7
      35: lload         9
      37: aload         4
      39: lload         11
      41: lload         13
      43: invokestatic  #13                 // Method io/airlift/compress/lzo/LzoRawDecompressor.decompress:(Ljava/lang/Object;JJLjava/lang/Object;JJ)I
      46: ireturn

  public void decompress(java.nio.ByteBuffer, java.nio.ByteBuffer) throws io.airlift.compress.MalformedInputException;
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload_3
       6: invokevirtual #19                 // Method java/nio/Buffer.isDirect:()Z
       9: ifeq          44
      12: aconst_null
      13: astore        5
      15: aload_3
      16: invokestatic  #25                 // Method io/airlift/compress/lzo/UnsafeUtil.getAddress:(Ljava/nio/Buffer;)J
      19: lstore        10
      21: lload         10
      23: aload_3
      24: invokevirtual #31                 // Method java/nio/Buffer.position:()I
      27: i2l
      28: ladd
      29: lstore        6
      31: lload         10
      33: aload_3
      34: invokevirtual #35                 // Method java/nio/Buffer.limit:()I
      37: i2l
      38: ladd
      39: lstore        8
      41: goto          125
      44: aload_3
      45: invokevirtual #38                 // Method java/nio/Buffer.hasArray:()Z
      48: ifeq          92
      51: aload_3
      52: invokevirtual #41                 // Method java/nio/Buffer.array:()Ljava/lang/Object;
      55: astore        5
      57: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      60: aload_3
      61: invokevirtual #45                 // Method java/nio/Buffer.arrayOffset:()I
      64: iadd
      65: aload_3
      66: invokevirtual #31                 // Method java/nio/Buffer.position:()I
      69: iadd
      70: i2l
      71: lstore        6
      73: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
      76: aload_3
      77: invokevirtual #45                 // Method java/nio/Buffer.arrayOffset:()I
      80: iadd
      81: aload_3
      82: invokevirtual #35                 // Method java/nio/Buffer.limit:()I
      85: iadd
      86: i2l
      87: lstore        8
      89: goto          125
      92: new           #48                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #50                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #53                 // String Unsupported input ByteBuffer implementation
     105: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     112: invokevirtual #63                 // Method java/lang/Class.getName:()Ljava/lang/String;
     115: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload         4
     127: invokevirtual #19                 // Method java/nio/Buffer.isDirect:()Z
     130: ifeq          168
     133: aconst_null
     134: astore        10
     136: aload         4
     138: invokestatic  #25                 // Method io/airlift/compress/lzo/UnsafeUtil.getAddress:(Ljava/nio/Buffer;)J
     141: lstore        15
     143: lload         15
     145: aload         4
     147: invokevirtual #31                 // Method java/nio/Buffer.position:()I
     150: i2l
     151: ladd
     152: lstore        11
     154: lload         15
     156: aload         4
     158: invokevirtual #35                 // Method java/nio/Buffer.limit:()I
     161: i2l
     162: ladd
     163: lstore        13
     165: goto          256
     168: aload         4
     170: invokevirtual #38                 // Method java/nio/Buffer.hasArray:()Z
     173: ifeq          222
     176: aload         4
     178: invokevirtual #41                 // Method java/nio/Buffer.array:()Ljava/lang/Object;
     181: astore        10
     183: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
     186: aload         4
     188: invokevirtual #45                 // Method java/nio/Buffer.arrayOffset:()I
     191: iadd
     192: aload         4
     194: invokevirtual #31                 // Method java/nio/Buffer.position:()I
     197: iadd
     198: i2l
     199: lstore        11
     201: getstatic     #7                  // Field sun/misc/Unsafe.ARRAY_BYTE_BASE_OFFSET:I
     204: aload         4
     206: invokevirtual #45                 // Method java/nio/Buffer.arrayOffset:()I
     209: iadd
     210: aload         4
     212: invokevirtual #35                 // Method java/nio/Buffer.limit:()I
     215: iadd
     216: i2l
     217: lstore        13
     219: goto          256
     222: new           #48                 // class java/lang/IllegalArgumentException
     225: dup
     226: new           #50                 // class java/lang/StringBuilder
     229: dup
     230: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
     233: ldc           #75                 // String Unsupported output ByteBuffer implementation
     235: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload         4
     240: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     243: invokevirtual #63                 // Method java/lang/Class.getName:()Ljava/lang/String;
     246: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload_3
     257: dup
     258: astore        15
     260: monitorenter
     261: aload         4
     263: dup
     264: astore        16
     266: monitorenter
     267: aload         5
     269: lload         6
     271: lload         8
     273: aload         10
     275: lload         11
     277: lload         13
     279: invokestatic  #13                 // Method io/airlift/compress/lzo/LzoRawDecompressor.decompress:(Ljava/lang/Object;JJLjava/lang/Object;JJ)I
     282: istore        17
     284: aload         4
     286: aload         4
     288: invokevirtual #31                 // Method java/nio/Buffer.position:()I
     291: iload         17
     293: iadd
     294: invokevirtual #77                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
     297: pop
     298: aload         16
     300: monitorexit
     301: goto          312
     304: astore        18
     306: aload         16
     308: monitorexit
     309: aload         18
     311: athrow
     312: aload         15
     314: monitorexit
     315: goto          326
     318: astore        19
     320: aload         15
     322: monitorexit
     323: aload         19
     325: athrow
     326: return
    Exception table:
       from    to  target type
         267   301   304   any
         304   309   304   any
         261   315   318   any
         318   323   318   any
}
