Compiled from "HadoopLzopInputStream.java"
class io.airlift.compress.lzo.HadoopLzopInputStream extends org.apache.hadoop.io.compress.CompressionInputStream {
  private static final int LZO_VERSION_MAX;

  private static final int LZOP_FILE_VERSION_MIN;

  private static final int LZOP_FORMAT_VERSION_MAX;

  private static final int LZOP_FLAG_ADLER32_DECOMPRESSED;

  private static final int LZOP_FLAG_ADLER32_COMPRESSED;

  private static final int LZOP_FLAG_CRC32_DECOMPRESSED;

  private static final int LZOP_FLAG_CRC32_COMPRESSED;

  private static final int LZOP_FLAG_CRC32_HEADER;

  private static final int LZOP_FLAG_IO_MASK;

  private static final int LZOP_FLAG_OPERATING_SYSTEM_MASK;

  private static final int LZOP_FLAG_CHARACTER_SET_MASK;

  private final io.airlift.compress.lzo.LzoDecompressor decompressor;

  private final java.io.InputStream in;

  private final byte[] uncompressedChunk;

  private int uncompressedLength;

  private int uncompressedOffset;

  private boolean finished;

  private byte[] compressed;

  private final boolean adler32Decompressed;

  private final boolean adler32Compressed;

  private final boolean crc32Decompressed;

  private final boolean crc32Compressed;

  public io.airlift.compress.lzo.HadoopLzopInputStream(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/hadoop/io/compress/CompressionInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: new           #11                 // class io/airlift/compress/lzo/LzoDecompressor
       9: dup
      10: invokespecial #13                 // Method io/airlift/compress/lzo/LzoDecompressor."<init>":()V
      13: putfield      #16                 // Field decompressor:Lio/airlift/compress/lzo/LzoDecompressor;
      16: aload_0
      17: iconst_0
      18: newarray       byte
      20: putfield      #22                 // Field compressed:[B
      23: aload_0
      24: aload_1
      25: putfield      #26                 // Field in:Ljava/io/InputStream;
      28: aload_0
      29: iload_2
      30: bipush        8
      32: iadd
      33: newarray       byte
      35: putfield      #30                 // Field uncompressedChunk:[B
      38: getstatic     #33                 // Field io/airlift/compress/lzo/LzopCodec.LZOP_MAGIC:[B
      41: arraylength
      42: newarray       byte
      44: astore_3
      45: aload_0
      46: aload_3
      47: iconst_0
      48: aload_3
      49: arraylength
      50: invokespecial #36                 // Method readInput:([BII)V
      53: aload_3
      54: getstatic     #33                 // Field io/airlift/compress/lzo/LzopCodec.LZOP_MAGIC:[B
      57: invokestatic  #40                 // Method java/util/Arrays.equals:([B[B)Z
      60: ifne          73
      63: new           #46                 // class java/io/IOException
      66: dup
      67: ldc           #48                 // String Not an LZOP file
      69: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: bipush        25
      75: newarray       byte
      77: astore        4
      79: aload_0
      80: aload         4
      82: iconst_0
      83: aload         4
      85: arraylength
      86: invokespecial #36                 // Method readInput:([BII)V
      89: new           #53                 // class java/io/ByteArrayInputStream
      92: dup
      93: aload         4
      95: invokespecial #55                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      98: astore        5
     100: aload         5
     102: invokestatic  #58                 // Method readBigEndianShort:(Ljava/io/InputStream;)I
     105: istore        6
     107: iload         6
     109: sipush        2368
     112: if_icmpge     140
     115: new           #46                 // class java/io/IOException
     118: dup
     119: ldc           #62                 // String Unsupported LZOP file version 0x%08X
     121: iconst_1
     122: anewarray     #64                 // class java/lang/Object
     125: dup
     126: iconst_0
     127: iload         6
     129: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     132: aastore
     133: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     136: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload         5
     142: invokestatic  #58                 // Method readBigEndianShort:(Ljava/io/InputStream;)I
     145: istore        7
     147: iload         7
     149: sipush        8352
     152: if_icmple     180
     155: new           #46                 // class java/io/IOException
     158: dup
     159: ldc           #78                 // String Unsupported LZO version 0x%08X
     161: iconst_1
     162: anewarray     #64                 // class java/lang/Object
     165: dup
     166: iconst_0
     167: iload         7
     169: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: aastore
     173: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     176: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: aload         5
     182: invokestatic  #58                 // Method readBigEndianShort:(Ljava/io/InputStream;)I
     185: istore        8
     187: iload         8
     189: sipush        4112
     192: if_icmple     220
     195: new           #46                 // class java/io/IOException
     198: dup
     199: ldc           #80                 // String Unsupported LZOP format version 0x%08X
     201: iconst_1
     202: anewarray     #64                 // class java/lang/Object
     205: dup
     206: iconst_0
     207: iload         8
     209: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     212: aastore
     213: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     216: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     219: athrow
     220: aload         5
     222: invokevirtual #82                 // Method java/io/ByteArrayInputStream.read:()I
     225: istore        9
     227: iload         9
     229: iconst_1
     230: if_icmpeq     258
     233: new           #46                 // class java/io/IOException
     236: dup
     237: ldc           #86                 // String Unsupported LZO variant %s
     239: iconst_1
     240: anewarray     #64                 // class java/lang/Object
     243: dup
     244: iconst_0
     245: iload         9
     247: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     250: aastore
     251: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     254: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     257: athrow
     258: aload         5
     260: invokevirtual #82                 // Method java/io/ByteArrayInputStream.read:()I
     263: pop
     264: aload         5
     266: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
     269: istore        10
     271: iload         10
     273: bipush        -13
     275: iand
     276: istore        10
     278: iload         10
     280: ldc           #91                 // int 16777215
     282: iand
     283: istore        10
     285: iload         10
     287: ldc           #92                 // int -15728641
     289: iand
     290: istore        10
     292: aload_0
     293: iload         10
     295: iconst_1
     296: iand
     297: ifeq          304
     300: iconst_1
     301: goto          305
     304: iconst_0
     305: putfield      #93                 // Field adler32Decompressed:Z
     308: aload_0
     309: iload         10
     311: iconst_2
     312: iand
     313: ifeq          320
     316: iconst_1
     317: goto          321
     320: iconst_0
     321: putfield      #97                 // Field adler32Compressed:Z
     324: aload_0
     325: iload         10
     327: sipush        256
     330: iand
     331: ifeq          338
     334: iconst_1
     335: goto          339
     338: iconst_0
     339: putfield      #100                // Field crc32Decompressed:Z
     342: aload_0
     343: iload         10
     345: sipush        512
     348: iand
     349: ifeq          356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: putfield      #103                // Field crc32Compressed:Z
     360: iload         10
     362: sipush        4096
     365: iand
     366: ifeq          373
     369: iconst_1
     370: goto          374
     373: iconst_0
     374: istore        11
     376: iload         10
     378: bipush        -2
     380: iand
     381: istore        10
     383: iload         10
     385: bipush        -3
     387: iand
     388: istore        10
     390: iload         10
     392: sipush        -257
     395: iand
     396: istore        10
     398: iload         10
     400: sipush        -513
     403: iand
     404: istore        10
     406: iload         10
     408: sipush        -4097
     411: iand
     412: istore        10
     414: iload         10
     416: ifeq          444
     419: new           #46                 // class java/io/IOException
     422: dup
     423: ldc           #106                // String Unsupported LZO flags 0x%08X
     425: iconst_1
     426: anewarray     #64                 // class java/lang/Object
     429: dup
     430: iconst_0
     431: iload         10
     433: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     436: aastore
     437: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     440: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     443: athrow
     444: aload         5
     446: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
     449: pop
     450: aload         5
     452: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
     455: pop
     456: aload         5
     458: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
     461: pop
     462: aload         5
     464: invokevirtual #82                 // Method java/io/ByteArrayInputStream.read:()I
     467: istore        12
     469: iload         12
     471: newarray       byte
     473: astore        13
     475: aload_0
     476: aload         13
     478: iconst_0
     479: aload         13
     481: arraylength
     482: invokespecial #36                 // Method readInput:([BII)V
     485: aload_1
     486: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
     489: istore        14
     491: iload         11
     493: ifeq          506
     496: new           #108                // class java/util/zip/CRC32
     499: dup
     500: invokespecial #110                // Method java/util/zip/CRC32."<init>":()V
     503: goto          513
     506: new           #111                // class java/util/zip/Adler32
     509: dup
     510: invokespecial #113                // Method java/util/zip/Adler32."<init>":()V
     513: astore        15
     515: aload         15
     517: aload         4
     519: iconst_0
     520: aload         4
     522: arraylength
     523: invokeinterface #114,  4          // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     528: aload         15
     530: aload         13
     532: iconst_0
     533: aload         13
     535: arraylength
     536: invokeinterface #114,  4          // InterfaceMethod java/util/zip/Checksum.update:([BII)V
     541: iload         14
     543: aload         15
     545: invokeinterface #119,  1          // InterfaceMethod java/util/zip/Checksum.getValue:()J
     550: l2i
     551: if_icmpeq     564
     554: new           #46                 // class java/io/IOException
     557: dup
     558: ldc           #123                // String Invalid header checksum
     560: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     563: athrow
     564: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #125                // Field finished:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #128                // Field uncompressedOffset:I
      13: aload_0
      14: getfield      #132                // Field uncompressedLength:I
      17: if_icmplt     52
      20: aload_0
      21: invokespecial #135                // Method bufferCompressedData:()I
      24: istore_1
      25: aload_0
      26: getfield      #125                // Field finished:Z
      29: ifeq          34
      32: iconst_m1
      33: ireturn
      34: aload_0
      35: iload_1
      36: aload_0
      37: getfield      #30                 // Field uncompressedChunk:[B
      40: iconst_0
      41: aload_0
      42: getfield      #30                 // Field uncompressedChunk:[B
      45: arraylength
      46: invokespecial #138                // Method decompress:(I[BII)V
      49: goto          9
      52: aload_0
      53: getfield      #30                 // Field uncompressedChunk:[B
      56: aload_0
      57: dup
      58: getfield      #128                // Field uncompressedOffset:I
      61: dup_x1
      62: iconst_1
      63: iadd
      64: putfield      #128                // Field uncompressedOffset:I
      67: baload
      68: sipush        255
      71: iand
      72: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #125                // Field finished:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #128                // Field uncompressedOffset:I
      13: aload_0
      14: getfield      #132                // Field uncompressedLength:I
      17: if_icmplt     84
      20: aload_0
      21: invokespecial #135                // Method bufferCompressedData:()I
      24: istore        4
      26: aload_0
      27: getfield      #125                // Field finished:Z
      30: ifeq          35
      33: iconst_m1
      34: ireturn
      35: iload_3
      36: aload_0
      37: getfield      #132                // Field uncompressedLength:I
      40: if_icmplt     65
      43: aload_0
      44: iload         4
      46: aload_1
      47: iload_2
      48: iload_3
      49: invokespecial #138                // Method decompress:(I[BII)V
      52: aload_0
      53: aload_0
      54: getfield      #132                // Field uncompressedLength:I
      57: putfield      #128                // Field uncompressedOffset:I
      60: aload_0
      61: getfield      #132                // Field uncompressedLength:I
      64: ireturn
      65: aload_0
      66: iload         4
      68: aload_0
      69: getfield      #30                 // Field uncompressedChunk:[B
      72: iconst_0
      73: aload_0
      74: getfield      #30                 // Field uncompressedChunk:[B
      77: arraylength
      78: invokespecial #138                // Method decompress:(I[BII)V
      81: goto          9
      84: iload_3
      85: aload_0
      86: getfield      #132                // Field uncompressedLength:I
      89: aload_0
      90: getfield      #128                // Field uncompressedOffset:I
      93: isub
      94: invokestatic  #142                // Method java/lang/Math.min:(II)I
      97: istore        4
      99: aload_0
     100: getfield      #30                 // Field uncompressedChunk:[B
     103: aload_0
     104: getfield      #128                // Field uncompressedOffset:I
     107: aload_1
     108: iload_2
     109: iload         4
     111: invokestatic  #148                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     114: aload_0
     115: dup
     116: getfield      #128                // Field uncompressedOffset:I
     119: iload         4
     121: iadd
     122: putfield      #128                // Field uncompressedOffset:I
     125: iload         4
     127: ireturn

  public void resetState() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #132                // Field uncompressedLength:I
       5: aload_0
       6: iconst_0
       7: putfield      #128                // Field uncompressedOffset:I
      10: aload_0
      11: iconst_0
      12: putfield      #125                // Field finished:Z
      15: return

  private int bufferCompressedData() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #128                // Field uncompressedOffset:I
       5: aload_0
       6: aload_0
       7: getfield      #26                 // Field in:Ljava/io/InputStream;
      10: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      13: putfield      #132                // Field uncompressedLength:I
      16: aload_0
      17: getfield      #132                // Field uncompressedLength:I
      20: iconst_m1
      21: if_icmpne     34
      24: new           #154                // class java/io/EOFException
      27: dup
      28: ldc           #156                // String encountered EOF while reading block data
      30: invokespecial #158                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #132                // Field uncompressedLength:I
      38: ifne          48
      41: aload_0
      42: iconst_1
      43: putfield      #125                // Field finished:Z
      46: iconst_m1
      47: ireturn
      48: aload_0
      49: getfield      #26                 // Field in:Ljava/io/InputStream;
      52: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      55: istore_1
      56: iload_1
      57: iconst_m1
      58: if_icmpne     71
      61: new           #154                // class java/io/EOFException
      64: dup
      65: ldc           #156                // String encountered EOF while reading block data
      67: invokespecial #158                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: iload_1
      73: aload_0
      74: getfield      #132                // Field uncompressedLength:I
      77: if_icmpge     84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: invokespecial #159                // Method skipChecksums:(Z)V
      88: iload_1
      89: ireturn

  private void skipChecksums(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #93                 // Field adler32Decompressed:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #26                 // Field in:Ljava/io/InputStream;
      11: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      14: pop
      15: aload_0
      16: getfield      #100                // Field crc32Decompressed:Z
      19: ifeq          30
      22: aload_0
      23: getfield      #26                 // Field in:Ljava/io/InputStream;
      26: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      29: pop
      30: iload_1
      31: ifeq          49
      34: aload_0
      35: getfield      #97                 // Field adler32Compressed:Z
      38: ifeq          49
      41: aload_0
      42: getfield      #26                 // Field in:Ljava/io/InputStream;
      45: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      48: pop
      49: iload_1
      50: ifeq          68
      53: aload_0
      54: getfield      #103                // Field crc32Compressed:Z
      57: ifeq          68
      60: aload_0
      61: getfield      #26                 // Field in:Ljava/io/InputStream;
      64: invokestatic  #88                 // Method readBigEndianInt:(Ljava/io/InputStream;)I
      67: pop
      68: return

  private void decompress(int, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #132                // Field uncompressedLength:I
       4: iload_1
       5: if_icmpne     18
       8: aload_0
       9: aload_2
      10: iload_3
      11: iload_1
      12: invokespecial #36                 // Method readInput:([BII)V
      15: goto          85
      18: aload_0
      19: getfield      #22                 // Field compressed:[B
      22: arraylength
      23: iload_1
      24: if_icmpge     37
      27: aload_0
      28: iload_1
      29: bipush        8
      31: iadd
      32: newarray       byte
      34: putfield      #22                 // Field compressed:[B
      37: aload_0
      38: aload_0
      39: getfield      #22                 // Field compressed:[B
      42: iconst_0
      43: iload_1
      44: invokespecial #36                 // Method readInput:([BII)V
      47: aload_0
      48: getfield      #16                 // Field decompressor:Lio/airlift/compress/lzo/LzoDecompressor;
      51: aload_0
      52: getfield      #22                 // Field compressed:[B
      55: iconst_0
      56: iload_1
      57: aload_2
      58: iload_3
      59: iload         4
      61: invokevirtual #163                // Method io/airlift/compress/lzo/LzoDecompressor.decompress:([BII[BII)I
      64: istore        5
      66: iload         5
      68: aload_0
      69: getfield      #132                // Field uncompressedLength:I
      72: if_icmpeq     85
      75: new           #46                 // class java/io/IOException
      78: dup
      79: ldc           #166                // String Decompressor did not decompress the entire block
      81: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  private void readInput(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          45
       4: aload_0
       5: getfield      #26                 // Field in:Ljava/io/InputStream;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #168                // Method java/io/InputStream.read:([BII)I
      14: istore        4
      16: iload         4
      18: iconst_m1
      19: if_icmpne     32
      22: new           #154                // class java/io/EOFException
      25: dup
      26: ldc           #156                // String encountered EOF while reading block data
      28: invokespecial #158                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_2
      33: iload         4
      35: iadd
      36: istore_2
      37: iload_3
      38: iload         4
      40: isub
      41: istore_3
      42: goto          0
      45: return

  private static int readBigEndianShort(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #173                // Method java/io/InputStream.read:()I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: invokevirtual #173                // Method java/io/InputStream.read:()I
      15: istore_2
      16: iload_2
      17: ifge          30
      20: new           #46                 // class java/io/IOException
      23: dup
      24: ldc           #174                // String Stream is truncated
      26: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: iload_1
      31: bipush        8
      33: ishl
      34: iload_2
      35: iadd
      36: ireturn

  private static int readBigEndianInt(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #173                // Method java/io/InputStream.read:()I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: invokevirtual #173                // Method java/io/InputStream.read:()I
      15: istore_2
      16: aload_0
      17: invokevirtual #173                // Method java/io/InputStream.read:()I
      20: istore_3
      21: aload_0
      22: invokevirtual #173                // Method java/io/InputStream.read:()I
      25: istore        4
      27: iload_2
      28: iload_3
      29: ior
      30: iload         4
      32: ior
      33: ifge          46
      36: new           #46                 // class java/io/IOException
      39: dup
      40: ldc           #174                // String Stream is truncated
      42: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iload_1
      47: bipush        24
      49: ishl
      50: iload_2
      51: bipush        16
      53: ishl
      54: iadd
      55: iload_3
      56: bipush        8
      58: ishl
      59: iadd
      60: iload         4
      62: iadd
      63: ireturn
}
