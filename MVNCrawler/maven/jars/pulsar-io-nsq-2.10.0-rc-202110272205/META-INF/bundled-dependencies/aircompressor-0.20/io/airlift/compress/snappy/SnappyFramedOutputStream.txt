Compiled from "SnappyFramedOutputStream.java"
public final class io.airlift.compress.snappy.SnappyFramedOutputStream extends java.io.OutputStream {
  public static final int MAX_BLOCK_SIZE;

  public static final int DEFAULT_BLOCK_SIZE;

  public static final double DEFAULT_MIN_COMPRESSION_RATIO;

  private final io.airlift.compress.snappy.SnappyCompressor compressor;

  private final int blockSize;

  private final byte[] buffer;

  private final byte[] outputBuffer;

  private final double minCompressionRatio;

  private final java.io.OutputStream out;

  private final boolean writeChecksums;

  private int position;

  private boolean closed;

  public io.airlift.compress.snappy.SnappyFramedOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;Z)V
       6: return

  public static io.airlift.compress.snappy.SnappyFramedOutputStream newChecksumFreeBenchmarkOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: new           #1                  // class io/airlift/compress/snappy/SnappyFramedOutputStream
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;Z)V
       9: areturn

  private io.airlift.compress.snappy.SnappyFramedOutputStream(java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ldc           #7                  // int 65536
       5: ldc2_w        #8                  // double 0.85d
       8: invokespecial #10                 // Method "<init>":(Ljava/io/OutputStream;ZID)V
      11: return

  public io.airlift.compress.snappy.SnappyFramedOutputStream(java.io.OutputStream, boolean, int, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #18                 // class io/airlift/compress/snappy/SnappyCompressor
       8: dup
       9: invokespecial #20                 // Method io/airlift/compress/snappy/SnappyCompressor."<init>":()V
      12: putfield      #21                 // Field compressor:Lio/airlift/compress/snappy/SnappyCompressor;
      15: aload_0
      16: aload_1
      17: ldc           #25                 // String out is null
      19: iconst_0
      20: anewarray     #27                 // class java/lang/Object
      23: invokestatic  #29                 // Method io/airlift/compress/snappy/SnappyInternalUtils.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #14                 // class java/io/OutputStream
      29: putfield      #35                 // Field out:Ljava/io/OutputStream;
      32: aload_0
      33: iload_2
      34: putfield      #39                 // Field writeChecksums:Z
      37: dload         4
      39: dconst_0
      40: dcmpl
      41: ifle          55
      44: dload         4
      46: dconst_1
      47: dcmpg
      48: ifgt          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #43                 // String minCompressionRatio %1s must be between (0,1.0].
      58: iconst_1
      59: anewarray     #27                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: dload         4
      66: invokestatic  #45                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      69: aastore
      70: invokestatic  #51                 // Method io/airlift/compress/snappy/SnappyInternalUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      73: aload_0
      74: dload         4
      76: putfield      #55                 // Field minCompressionRatio:D
      79: aload_0
      80: iload_3
      81: putfield      #59                 // Field blockSize:I
      84: aload_0
      85: iload_3
      86: newarray       byte
      88: putfield      #63                 // Field buffer:[B
      91: aload_0
      92: aload_0
      93: getfield      #21                 // Field compressor:Lio/airlift/compress/snappy/SnappyCompressor;
      96: iload_3
      97: invokevirtual #67                 // Method io/airlift/compress/snappy/SnappyCompressor.maxCompressedLength:(I)I
     100: newarray       byte
     102: putfield      #71                 // Field outputBuffer:[B
     105: aload_1
     106: getstatic     #74                 // Field io/airlift/compress/snappy/SnappyFramed.HEADER_BYTES:[B
     109: invokevirtual #79                 // Method java/io/OutputStream.write:([B)V
     112: iload_3
     113: ifle          126
     116: iload_3
     117: ldc           #7                  // int 65536
     119: if_icmpgt     126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: ldc           #83                 // String blockSize must be in (0, 65536]
     129: iconst_1
     130: anewarray     #27                 // class java/lang/Object
     133: dup
     134: iconst_0
     135: iload_3
     136: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     139: aastore
     140: invokestatic  #51                 // Method io/airlift/compress/snappy/SnappyInternalUtils.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     143: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field closed:Z
       4: ifeq          17
       7: new           #93                 // class java/io/IOException
      10: dup
      11: ldc           #95                 // String Stream is closed
      13: invokespecial #97                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #100                // Field position:I
      21: aload_0
      22: getfield      #59                 // Field blockSize:I
      25: if_icmplt     32
      28: aload_0
      29: invokespecial #103                // Method flushBuffer:()V
      32: aload_0
      33: getfield      #63                 // Field buffer:[B
      36: aload_0
      37: dup
      38: getfield      #100                // Field position:I
      41: dup_x1
      42: iconst_1
      43: iadd
      44: putfield      #100                // Field position:I
      47: iload_1
      48: i2b
      49: bastore
      50: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #106                // String input is null
       3: iconst_0
       4: anewarray     #27                 // class java/lang/Object
       7: invokestatic  #29                 // Method io/airlift/compress/snappy/SnappyInternalUtils.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: iload_2
      12: iload_2
      13: iload_3
      14: iadd
      15: aload_1
      16: arraylength
      17: invokestatic  #108                // Method io/airlift/compress/snappy/SnappyInternalUtils.checkPositionIndexes:(III)V
      20: aload_0
      21: getfield      #90                 // Field closed:Z
      24: ifeq          37
      27: new           #93                 // class java/io/IOException
      30: dup
      31: ldc           #95                 // String Stream is closed
      33: invokespecial #97                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #59                 // Field blockSize:I
      41: aload_0
      42: getfield      #100                // Field position:I
      45: isub
      46: istore        4
      48: iload         4
      50: iload_3
      51: if_icmplt     62
      54: aload_0
      55: aload_1
      56: iload_2
      57: iload_3
      58: invokespecial #112                // Method copyToBuffer:([BII)V
      61: return
      62: aload_0
      63: getfield      #100                // Field position:I
      66: ifle          91
      69: aload_0
      70: aload_1
      71: iload_2
      72: iload         4
      74: invokespecial #112                // Method copyToBuffer:([BII)V
      77: aload_0
      78: invokespecial #103                // Method flushBuffer:()V
      81: iload_2
      82: iload         4
      84: iadd
      85: istore_2
      86: iload_3
      87: iload         4
      89: isub
      90: istore_3
      91: iload_3
      92: aload_0
      93: getfield      #59                 // Field blockSize:I
      96: if_icmplt     126
      99: aload_0
     100: aload_1
     101: iload_2
     102: aload_0
     103: getfield      #59                 // Field blockSize:I
     106: invokespecial #116                // Method writeCompressed:([BII)V
     109: iload_2
     110: aload_0
     111: getfield      #59                 // Field blockSize:I
     114: iadd
     115: istore_2
     116: iload_3
     117: aload_0
     118: getfield      #59                 // Field blockSize:I
     121: isub
     122: istore_3
     123: goto          91
     126: aload_0
     127: aload_1
     128: iload_2
     129: iload_3
     130: invokespecial #112                // Method copyToBuffer:([BII)V
     133: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field closed:Z
       4: ifeq          17
       7: new           #93                 // class java/io/IOException
      10: dup
      11: ldc           #95                 // String Stream is closed
      13: invokespecial #97                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #103                // Method flushBuffer:()V
      21: aload_0
      22: getfield      #35                 // Field out:Ljava/io/OutputStream;
      25: invokevirtual #119                // Method java/io/OutputStream.flush:()V
      28: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #122                // Method flush:()V
      12: aload_0
      13: getfield      #35                 // Field out:Ljava/io/OutputStream;
      16: invokevirtual #123                // Method java/io/OutputStream.close:()V
      19: aload_0
      20: iconst_1
      21: putfield      #90                 // Field closed:Z
      24: goto          35
      27: astore_1
      28: aload_0
      29: iconst_1
      30: putfield      #90                 // Field closed:Z
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
           8    19    27   any

  private void copyToBuffer(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #63                 // Field buffer:[B
       6: aload_0
       7: getfield      #100                // Field position:I
      10: iload_3
      11: invokestatic  #126                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_0
      15: dup
      16: getfield      #100                // Field position:I
      19: iload_3
      20: iadd
      21: putfield      #100                // Field position:I
      24: return

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #100                // Field position:I
       4: ifle          25
       7: aload_0
       8: aload_0
       9: getfield      #63                 // Field buffer:[B
      12: iconst_0
      13: aload_0
      14: getfield      #100                // Field position:I
      17: invokespecial #116                // Method writeCompressed:([BII)V
      20: aload_0
      21: iconst_0
      22: putfield      #100                // Field position:I
      25: return

  private void writeCompressed(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field writeChecksums:Z
       4: ifeq          16
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokestatic  #132                // Method io/airlift/compress/snappy/Crc32C.maskedCrc32c:([BII)I
      13: goto          17
      16: iconst_0
      17: istore        4
      19: aload_0
      20: getfield      #21                 // Field compressor:Lio/airlift/compress/snappy/SnappyCompressor;
      23: aload_1
      24: iload_2
      25: iload_3
      26: aload_0
      27: getfield      #71                 // Field outputBuffer:[B
      30: iconst_0
      31: aload_0
      32: getfield      #71                 // Field outputBuffer:[B
      35: arraylength
      36: invokevirtual #138                // Method io/airlift/compress/snappy/SnappyCompressor.compress:([BII[BII)I
      39: istore        5
      41: iload         5
      43: i2d
      44: iload_3
      45: i2d
      46: ddiv
      47: aload_0
      48: getfield      #55                 // Field minCompressionRatio:D
      51: dcmpg
      52: ifgt          76
      55: aload_0
      56: aload_0
      57: getfield      #35                 // Field out:Ljava/io/OutputStream;
      60: aload_0
      61: getfield      #71                 // Field outputBuffer:[B
      64: iconst_0
      65: iload         5
      67: iconst_1
      68: iload         4
      70: invokespecial #142                // Method writeBlock:(Ljava/io/OutputStream;[BIIZI)V
      73: goto          90
      76: aload_0
      77: aload_0
      78: getfield      #35                 // Field out:Ljava/io/OutputStream;
      81: aload_1
      82: iload_2
      83: iload_3
      84: iconst_0
      85: iload         4
      87: invokespecial #142                // Method writeBlock:(Ljava/io/OutputStream;[BIIZI)V
      90: return

  private void writeBlock(java.io.OutputStream, byte[], int, int, boolean, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload         5
       3: ifeq          10
       6: iconst_0
       7: goto          11
      10: iconst_1
      11: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      14: iload         4
      16: iconst_4
      17: iadd
      18: istore        7
      20: aload_1
      21: iload         7
      23: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      26: aload_1
      27: iload         7
      29: bipush        8
      31: iushr
      32: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      35: aload_1
      36: iload         7
      38: bipush        16
      40: iushr
      41: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      44: aload_1
      45: iload         6
      47: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      50: aload_1
      51: iload         6
      53: bipush        8
      55: iushr
      56: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      59: aload_1
      60: iload         6
      62: bipush        16
      64: iushr
      65: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      68: aload_1
      69: iload         6
      71: bipush        24
      73: iushr
      74: invokevirtual #146                // Method java/io/OutputStream.write:(I)V
      77: aload_1
      78: aload_2
      79: iload_3
      80: iload         4
      82: invokevirtual #149                // Method java/io/OutputStream.write:([BII)V
      85: return
}
