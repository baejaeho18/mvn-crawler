Compiled from "LzopCodec.java"
public class io.airlift.compress.lzo.LzopCodec implements org.apache.hadoop.conf.Configurable,org.apache.hadoop.io.compress.CompressionCodec {
  static final byte[] LZOP_MAGIC;

  static final byte LZO_1X_VARIANT;

  private org.apache.hadoop.conf.Configuration conf;

  public io.airlift.compress.lzo.LzopCodec();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.hadoop.conf.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: areturn

  public void setConf(org.apache.hadoop.conf.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       5: return

  public org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: new           #17                 // class io/airlift/compress/lzo/HadoopLzopOutputStream
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #19                 // Method getBufferSize:()I
       9: invokespecial #23                 // Method io/airlift/compress/lzo/HadoopLzopOutputStream."<init>":(Ljava/io/OutputStream;I)V
      12: areturn

  public org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream, org.apache.hadoop.io.compress.Compressor) throws java.io.IOException;
    Code:
       0: new           #17                 // class io/airlift/compress/lzo/HadoopLzopOutputStream
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #19                 // Method getBufferSize:()I
       9: invokespecial #23                 // Method io/airlift/compress/lzo/HadoopLzopOutputStream."<init>":(Ljava/io/OutputStream;I)V
      12: areturn

  public java.lang.Class<? extends org.apache.hadoop.io.compress.Compressor> getCompressorType();
    Code:
       0: new           #26                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.apache.hadoop.io.compress.Compressor createCompressor();
    Code:
       0: new           #29                 // class io/airlift/compress/lzo/LzoCodec$HadoopLzoCompressor
       3: dup
       4: invokespecial #31                 // Method io/airlift/compress/lzo/LzoCodec$HadoopLzoCompressor."<init>":()V
       7: areturn

  public org.apache.hadoop.io.compress.CompressionInputStream createInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #32                 // class io/airlift/compress/lzo/HadoopLzopInputStream
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #19                 // Method getBufferSize:()I
       9: invokespecial #34                 // Method io/airlift/compress/lzo/HadoopLzopInputStream."<init>":(Ljava/io/InputStream;I)V
      12: areturn

  public org.apache.hadoop.io.compress.CompressionInputStream createInputStream(java.io.InputStream, org.apache.hadoop.io.compress.Decompressor) throws java.io.IOException;
    Code:
       0: new           #32                 // class io/airlift/compress/lzo/HadoopLzopInputStream
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #19                 // Method getBufferSize:()I
       9: invokespecial #34                 // Method io/airlift/compress/lzo/HadoopLzopInputStream."<init>":(Ljava/io/InputStream;I)V
      12: areturn

  public java.lang.Class<? extends org.apache.hadoop.io.compress.Decompressor> getDecompressorType();
    Code:
       0: ldc           #37                 // class io/airlift/compress/lzo/LzoCodec$HadoopLzoDecompressor
       2: areturn

  public org.apache.hadoop.io.compress.Decompressor createDecompressor();
    Code:
       0: new           #37                 // class io/airlift/compress/lzo/LzoCodec$HadoopLzoDecompressor
       3: dup
       4: invokespecial #39                 // Method io/airlift/compress/lzo/LzoCodec$HadoopLzoDecompressor."<init>":()V
       7: areturn

  public java.lang.String getDefaultExtension();
    Code:
       0: ldc           #40                 // String .lzo
       2: areturn

  private int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
       4: ifnull        22
       7: aload_0
       8: getfield      #11                 // Field conf:Lorg/apache/hadoop/conf/Configuration;
      11: ldc           #42                 // String io.compression.codec.lzo.buffersize
      13: ldc           #44                 // int 262144
      15: invokevirtual #45                 // Method org/apache/hadoop/conf/Configuration.getInt:(Ljava/lang/String;I)I
      18: istore_1
      19: goto          25
      22: ldc           #44                 // int 262144
      24: istore_1
      25: iload_1
      26: ireturn

  static {};
    Code:
       0: bipush        9
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        -119
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        76
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        90
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        79
      23: bastore
      24: dup
      25: iconst_4
      26: iconst_0
      27: bastore
      28: dup
      29: iconst_5
      30: bipush        13
      32: bastore
      33: dup
      34: bipush        6
      36: bipush        10
      38: bastore
      39: dup
      40: bipush        7
      42: bipush        26
      44: bastore
      45: dup
      46: bipush        8
      48: bipush        10
      50: bastore
      51: putstatic     #51                 // Field LZOP_MAGIC:[B
      54: return
}
