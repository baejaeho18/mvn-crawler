Compiled from "CacheControl.java"
public class javax.ws.rs.core.CacheControl {
  private static final javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate<javax.ws.rs.core.CacheControl> HEADER_DELEGATE;

  private java.util.List<java.lang.String> privateFields;

  private java.util.List<java.lang.String> noCacheFields;

  private java.util.Map<java.lang.String, java.lang.String> cacheExtension;

  private boolean privateFlag;

  private boolean noCache;

  private boolean noStore;

  private boolean noTransform;

  private boolean mustRevalidate;

  private boolean proxyRevalidate;

  private int maxAge;

  private int sMaxAge;

  public javax.ws.rs.core.CacheControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxAge:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field sMaxAge:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field privateFlag:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field noCache:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field noStore:Z
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field noTransform:Z
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field mustRevalidate:Z
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field proxyRevalidate:Z
      44: return

  public static javax.ws.rs.core.CacheControl valueOf(java.lang.String);
    Code:
       0: getstatic     #10                 // Field HEADER_DELEGATE:Ljavax/ws/rs/ext/RuntimeDelegate$HeaderDelegate;
       3: aload_0
       4: invokeinterface #11,  2           // InterfaceMethod javax/ws/rs/ext/RuntimeDelegate$HeaderDelegate.fromString:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #12                 // class javax/ws/rs/core/CacheControl
      12: areturn

  public boolean isMustRevalidate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mustRevalidate:Z
       4: ireturn

  public void setMustRevalidate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field mustRevalidate:Z
       5: return

  public boolean isProxyRevalidate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field proxyRevalidate:Z
       4: ireturn

  public void setProxyRevalidate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field proxyRevalidate:Z
       5: return

  public int getMaxAge();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxAge:I
       4: ireturn

  public void setMaxAge(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxAge:I
       5: return

  public int getSMaxAge();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sMaxAge:I
       4: ireturn

  public void setSMaxAge(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field sMaxAge:I
       5: return

  public java.util.List<java.lang.String> getNoCacheFields();
    Code:
       0: aload_0
       1: getfield      #13                 // Field noCacheFields:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #14                 // class java/util/ArrayList
      11: dup
      12: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #13                 // Field noCacheFields:Ljava/util/List;
      18: aload_0
      19: getfield      #13                 // Field noCacheFields:Ljava/util/List;
      22: areturn

  public void setNoCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field noCache:Z
       5: return

  public boolean isNoCache();
    Code:
       0: aload_0
       1: getfield      #5                  // Field noCache:Z
       4: ireturn

  public boolean isPrivate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field privateFlag:Z
       4: ireturn

  public java.util.List<java.lang.String> getPrivateFields();
    Code:
       0: aload_0
       1: getfield      #16                 // Field privateFields:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #14                 // class java/util/ArrayList
      11: dup
      12: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #16                 // Field privateFields:Ljava/util/List;
      18: aload_0
      19: getfield      #16                 // Field privateFields:Ljava/util/List;
      22: areturn

  public void setPrivate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field privateFlag:Z
       5: return

  public boolean isNoTransform();
    Code:
       0: aload_0
       1: getfield      #7                  // Field noTransform:Z
       4: ireturn

  public void setNoTransform(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field noTransform:Z
       5: return

  public boolean isNoStore();
    Code:
       0: aload_0
       1: getfield      #6                  // Field noStore:Z
       4: ireturn

  public void setNoStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field noStore:Z
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getCacheExtension();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cacheExtension:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #18                 // class java/util/HashMap
      11: dup
      12: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      15: putfield      #17                 // Field cacheExtension:Ljava/util/Map;
      18: aload_0
      19: getfield      #17                 // Field cacheExtension:Ljava/util/Map;
      22: areturn

  public java.lang.String toString();
    Code:
       0: getstatic     #10                 // Field HEADER_DELEGATE:Ljavax/ws/rs/ext/RuntimeDelegate$HeaderDelegate;
       3: aload_0
       4: invokeinterface #20,  2           // InterfaceMethod javax/ws/rs/ext/RuntimeDelegate$HeaderDelegate.toString:(Ljava/lang/Object;)Ljava/lang/String;
       9: areturn

  public int hashCode();
    Code:
       0: bipush        7
       2: istore_1
       3: bipush        41
       5: iload_1
       6: imul
       7: aload_0
       8: getfield      #4                  // Field privateFlag:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: iadd
      20: istore_1
      21: bipush        41
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #5                  // Field noCache:Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: iadd
      38: istore_1
      39: bipush        41
      41: iload_1
      42: imul
      43: aload_0
      44: getfield      #6                  // Field noStore:Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: iadd
      56: istore_1
      57: bipush        41
      59: iload_1
      60: imul
      61: aload_0
      62: getfield      #7                  // Field noTransform:Z
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: iadd
      74: istore_1
      75: bipush        41
      77: iload_1
      78: imul
      79: aload_0
      80: getfield      #8                  // Field mustRevalidate:Z
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: iadd
      92: istore_1
      93: bipush        41
      95: iload_1
      96: imul
      97: aload_0
      98: getfield      #9                  // Field proxyRevalidate:Z
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: iadd
     110: istore_1
     111: bipush        41
     113: iload_1
     114: imul
     115: aload_0
     116: getfield      #2                  // Field maxAge:I
     119: iadd
     120: istore_1
     121: bipush        41
     123: iload_1
     124: imul
     125: aload_0
     126: getfield      #3                  // Field sMaxAge:I
     129: iadd
     130: istore_1
     131: bipush        41
     133: iload_1
     134: imul
     135: aload_0
     136: getfield      #16                 // Field privateFields:Ljava/util/List;
     139: invokestatic  #21                 // Method hashCodeOf:(Ljava/util/Collection;)I
     142: iadd
     143: istore_1
     144: bipush        41
     146: iload_1
     147: imul
     148: aload_0
     149: getfield      #13                 // Field noCacheFields:Ljava/util/List;
     152: invokestatic  #21                 // Method hashCodeOf:(Ljava/util/Collection;)I
     155: iadd
     156: istore_1
     157: bipush        41
     159: iload_1
     160: imul
     161: aload_0
     162: getfield      #17                 // Field cacheExtension:Ljava/util/Map;
     165: invokestatic  #22                 // Method hashCodeOf:(Ljava/util/Map;)I
     168: iadd
     169: istore_1
     170: iload_1
     171: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #12                 // class javax/ws/rs/core/CacheControl
      23: astore_2
      24: aload_0
      25: getfield      #4                  // Field privateFlag:Z
      28: aload_2
      29: getfield      #4                  // Field privateFlag:Z
      32: if_icmpeq     37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #5                  // Field noCache:Z
      41: aload_2
      42: getfield      #5                  // Field noCache:Z
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: getfield      #6                  // Field noStore:Z
      54: aload_2
      55: getfield      #6                  // Field noStore:Z
      58: if_icmpeq     63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #7                  // Field noTransform:Z
      67: aload_2
      68: getfield      #7                  // Field noTransform:Z
      71: if_icmpeq     76
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #8                  // Field mustRevalidate:Z
      80: aload_2
      81: getfield      #8                  // Field mustRevalidate:Z
      84: if_icmpeq     89
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #9                  // Field proxyRevalidate:Z
      93: aload_2
      94: getfield      #9                  // Field proxyRevalidate:Z
      97: if_icmpeq     102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: getfield      #2                  // Field maxAge:I
     106: aload_2
     107: getfield      #2                  // Field maxAge:I
     110: if_icmpeq     115
     113: iconst_0
     114: ireturn
     115: aload_0
     116: getfield      #3                  // Field sMaxAge:I
     119: aload_2
     120: getfield      #3                  // Field sMaxAge:I
     123: if_icmpeq     128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #16                 // Field privateFields:Ljava/util/List;
     132: aload_2
     133: getfield      #16                 // Field privateFields:Ljava/util/List;
     136: invokestatic  #24                 // Method notEqual:(Ljava/util/Collection;Ljava/util/Collection;)Z
     139: ifeq          144
     142: iconst_0
     143: ireturn
     144: aload_0
     145: getfield      #13                 // Field noCacheFields:Ljava/util/List;
     148: aload_2
     149: getfield      #13                 // Field noCacheFields:Ljava/util/List;
     152: invokestatic  #24                 // Method notEqual:(Ljava/util/Collection;Ljava/util/Collection;)Z
     155: ifeq          160
     158: iconst_0
     159: ireturn
     160: aload_0
     161: getfield      #17                 // Field cacheExtension:Ljava/util/Map;
     164: aload_2
     165: getfield      #17                 // Field cacheExtension:Ljava/util/Map;
     168: invokestatic  #25                 // Method notEqual:(Ljava/util/Map;Ljava/util/Map;)Z
     171: ifeq          176
     174: iconst_0
     175: ireturn
     176: iconst_1
     177: ireturn

  private static boolean notEqual(java.util.Collection<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: ifnonnull     26
      11: aload_1
      12: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
      26: aload_1
      27: ifnonnull     45
      30: aload_0
      31: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: aload_0
      46: aload_1
      47: invokeinterface #27,  2           // InterfaceMethod java/util/Collection.equals:(Ljava/lang/Object;)Z
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private static boolean notEqual(java.util.Map<?, ?>, java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: ifnonnull     26
      11: aload_1
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
      26: aload_1
      27: ifnonnull     45
      30: aload_0
      31: invokeinterface #28,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      36: ifne          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: aload_0
      46: aload_1
      47: invokeinterface #29,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private static int hashCodeOf(java.util.Collection<?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          17
      13: iconst_0
      14: goto          23
      17: aload_0
      18: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.hashCode:()I
      23: ireturn

  private static int hashCodeOf(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #28,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          17
      13: iconst_0
      14: goto          23
      17: aload_0
      18: invokeinterface #31,  1           // InterfaceMethod java/util/Map.hashCode:()I
      23: ireturn

  static {};
    Code:
       0: invokestatic  #32                 // Method javax/ws/rs/ext/RuntimeDelegate.getInstance:()Ljavax/ws/rs/ext/RuntimeDelegate;
       3: ldc           #12                 // class javax/ws/rs/core/CacheControl
       5: invokevirtual #33                 // Method javax/ws/rs/ext/RuntimeDelegate.createHeaderDelegate:(Ljava/lang/Class;)Ljavax/ws/rs/ext/RuntimeDelegate$HeaderDelegate;
       8: putstatic     #10                 // Field HEADER_DELEGATE:Ljavax/ws/rs/ext/RuntimeDelegate$HeaderDelegate;
      11: return
}
