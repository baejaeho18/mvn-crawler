Compiled from "SSLPrivateKeyMethodTask.java"
abstract class io.netty.internal.tcnative.SSLPrivateKeyMethodTask extends io.netty.internal.tcnative.SSLTask implements io.netty.internal.tcnative.AsyncTask {
  private static final byte[] EMPTY;

  private final io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod method;

  private byte[] resultBytes;

  io.netty.internal.tcnative.SSLPrivateKeyMethodTask(long, io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #3                  // Method io/netty/internal/tcnative/SSLTask."<init>":(J)V
       5: aload_0
       6: aload_3
       7: putfield      #4                  // Field method:Lio/netty/internal/tcnative/AsyncSSLPrivateKeyMethod;
      10: return

  public final void runAsync(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method run:(Ljava/lang/Runnable;)V
       5: return

  protected final void runTask(long, io.netty.internal.tcnative.SSLTask$TaskCallback);
    Code:
       0: aload_0
       1: lload_1
       2: aload_0
       3: getfield      #4                  // Field method:Lio/netty/internal/tcnative/AsyncSSLPrivateKeyMethod;
       6: new           #6                  // class io/netty/internal/tcnative/SSLPrivateKeyMethodTask$1
       9: dup
      10: aload_0
      11: aload_3
      12: invokespecial #7                  // Method io/netty/internal/tcnative/SSLPrivateKeyMethodTask$1."<init>":(Lio/netty/internal/tcnative/SSLPrivateKeyMethodTask;Lio/netty/internal/tcnative/SSLTask$TaskCallback;)V
      15: invokevirtual #8                  // Method runTask:(JLio/netty/internal/tcnative/AsyncSSLPrivateKeyMethod;Lio/netty/internal/tcnative/ResultCallback;)V
      18: return

  protected abstract void runTask(long, io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod, io.netty.internal.tcnative.ResultCallback<byte[]>);

  static byte[] access$002(io.netty.internal.tcnative.SSLPrivateKeyMethodTask, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field resultBytes:[B
       6: areturn

  static byte[] access$100();
    Code:
       0: getstatic     #1                  // Field EMPTY:[B
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #1                  // Field EMPTY:[B
       6: return
}
