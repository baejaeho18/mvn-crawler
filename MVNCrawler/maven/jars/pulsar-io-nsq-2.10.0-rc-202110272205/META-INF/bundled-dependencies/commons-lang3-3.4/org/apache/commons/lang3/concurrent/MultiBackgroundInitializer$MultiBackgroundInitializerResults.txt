Compiled from "MultiBackgroundInitializer.java"
public class org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults {
  private final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> initializers;

  private final java.util.Map<java.lang.String, java.lang.Object> resultObjects;

  private final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> exceptions;

  private org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field initializers:Ljava/util/Map;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field resultObjects:Ljava/util/Map;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field exceptions:Ljava/util/Map;
      19: return

  public org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method checkName:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
       5: areturn

  public java.lang.Object getResultObject(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method checkName:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
       5: pop
       6: aload_0
       7: getfield      #4                  // Field resultObjects:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public boolean isException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method checkName:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
       5: pop
       6: aload_0
       7: getfield      #5                  // Field exceptions:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public org.apache.commons.lang3.concurrent.ConcurrentException getException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method checkName:(Ljava/lang/String;)Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
       5: pop
       6: aload_0
       7: getfield      #5                  // Field exceptions:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #9                  // class org/apache/commons/lang3/concurrent/ConcurrentException
      19: areturn

  public java.util.Set<java.lang.String> initializerNames();
    Code:
       0: aload_0
       1: getfield      #3                  // Field initializers:Ljava/util/Map;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #11                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public boolean isSuccessful();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exceptions:Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  private org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field initializers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class org/apache/commons/lang3/concurrent/BackgroundInitializer
      13: astore_2
      14: aload_2
      15: ifnonnull     45
      18: new           #14                 // class java/util/NoSuchElementException
      21: dup
      22: new           #15                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #17                 // String No child initializer with name
      31: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #20                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: areturn

  org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults(java.util.Map, java.util.Map, java.util.Map, org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
       7: return
}
