Compiled from "EpollChannelOption.java"
public final class io.netty.channel.epoll.EpollChannelOption<T> extends io.netty.channel.unix.UnixChannelOption<T> {
  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_CORK;

  public static final io.netty.channel.ChannelOption<java.lang.Long> TCP_NOTSENT_LOWAT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_KEEPIDLE;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_KEEPINTVL;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_KEEPCNT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_USER_TIMEOUT;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> IP_FREEBIND;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> IP_TRANSPARENT;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> IP_RECVORIGDSTADDR;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_FASTOPEN;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_FASTOPEN_CONNECT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> TCP_DEFER_ACCEPT;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_QUICKACK;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_BUSY_POLL;

  public static final io.netty.channel.ChannelOption<io.netty.channel.epoll.EpollMode> EPOLL_MODE;

  public static final io.netty.channel.ChannelOption<java.util.Map<java.net.InetAddress, byte[]>> TCP_MD5SIG;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> MAX_DATAGRAM_PAYLOAD_SIZE;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> UDP_GRO;

  private io.netty.channel.epoll.EpollChannelOption();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/unix/UnixChannelOption."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
       2: ldc           #3                  // String TCP_CORK
       4: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
       7: putstatic     #5                  // Field TCP_CORK:Lio/netty/channel/ChannelOption;
      10: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      12: ldc           #6                  // String TCP_NOTSENT_LOWAT
      14: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      17: putstatic     #7                  // Field TCP_NOTSENT_LOWAT:Lio/netty/channel/ChannelOption;
      20: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      22: ldc           #8                  // String TCP_KEEPIDLE
      24: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      27: putstatic     #9                  // Field TCP_KEEPIDLE:Lio/netty/channel/ChannelOption;
      30: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      32: ldc           #10                 // String TCP_KEEPINTVL
      34: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      37: putstatic     #11                 // Field TCP_KEEPINTVL:Lio/netty/channel/ChannelOption;
      40: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      42: ldc           #12                 // String TCP_KEEPCNT
      44: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      47: putstatic     #13                 // Field TCP_KEEPCNT:Lio/netty/channel/ChannelOption;
      50: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      52: ldc           #14                 // String TCP_USER_TIMEOUT
      54: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      57: putstatic     #15                 // Field TCP_USER_TIMEOUT:Lio/netty/channel/ChannelOption;
      60: ldc           #16                 // String IP_FREEBIND
      62: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      65: putstatic     #18                 // Field IP_FREEBIND:Lio/netty/channel/ChannelOption;
      68: ldc           #19                 // String IP_TRANSPARENT
      70: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      73: putstatic     #20                 // Field IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
      76: ldc           #21                 // String IP_RECVORIGDSTADDR
      78: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      81: putstatic     #22                 // Field IP_RECVORIGDSTADDR:Lio/netty/channel/ChannelOption;
      84: getstatic     #23                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
      87: putstatic     #24                 // Field TCP_FASTOPEN:Lio/netty/channel/ChannelOption;
      90: getstatic     #25                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
      93: putstatic     #26                 // Field TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
      96: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
      98: ldc           #27                 // String TCP_DEFER_ACCEPT
     100: invokestatic  #28                 // Method io/netty/channel/ChannelOption.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     103: putstatic     #29                 // Field TCP_DEFER_ACCEPT:Lio/netty/channel/ChannelOption;
     106: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
     108: ldc           #30                 // String TCP_QUICKACK
     110: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     113: putstatic     #31                 // Field TCP_QUICKACK:Lio/netty/channel/ChannelOption;
     116: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
     118: ldc           #32                 // String SO_BUSY_POLL
     120: invokestatic  #4                  // Method valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     123: putstatic     #33                 // Field SO_BUSY_POLL:Lio/netty/channel/ChannelOption;
     126: ldc           #2                  // class io/netty/channel/epoll/EpollChannelOption
     128: ldc           #34                 // String EPOLL_MODE
     130: invokestatic  #28                 // Method io/netty/channel/ChannelOption.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     133: putstatic     #35                 // Field EPOLL_MODE:Lio/netty/channel/ChannelOption;
     136: ldc           #36                 // String TCP_MD5SIG
     138: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     141: putstatic     #37                 // Field TCP_MD5SIG:Lio/netty/channel/ChannelOption;
     144: ldc           #38                 // String MAX_DATAGRAM_PAYLOAD_SIZE
     146: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     149: putstatic     #39                 // Field MAX_DATAGRAM_PAYLOAD_SIZE:Lio/netty/channel/ChannelOption;
     152: ldc           #40                 // String UDP_GRO
     154: invokestatic  #17                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     157: putstatic     #41                 // Field UDP_GRO:Lio/netty/channel/ChannelOption;
     160: return
}
