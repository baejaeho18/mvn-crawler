Compiled from "AbstractEpollStreamChannel.java"
class io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  final io.netty.channel.epoll.AbstractEpollStreamChannel this$0;

  io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: return

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
       4: areturn

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.epoll.EpollRecvByteAllocatorHandle);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #4                  // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload         5
      34: invokevirtual #8                  // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
      37: aload_1
      38: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      43: pop
      44: aload_1
      45: aload_3
      46: invokeinterface #10,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      51: pop
      52: iload         4
      54: ifne          71
      57: aload_3
      58: instanceof    #11                 // class java/lang/OutOfMemoryError
      61: ifne          71
      64: aload_3
      65: instanceof    #12                 // class java/io/IOException
      68: ifeq          76
      71: aload_0
      72: iconst_0
      73: invokevirtual #13                 // Method shutdownInput:(Z)V
      76: return

  io.netty.channel.epoll.EpollRecvByteAllocatorHandle newEpollHandle(io.netty.channel.RecvByteBufAllocator$ExtendedHandle);
    Code:
       0: new           #14                 // class io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle."<init>":(Lio/netty/channel/RecvByteBufAllocator$ExtendedHandle;)V
       8: areturn

  void epollInReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokevirtual #16                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      12: aload_1
      13: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
      16: ifeq          24
      19: aload_0
      20: invokevirtual #18                 // Method clearEpollIn0:()V
      23: return
      24: aload_0
      25: invokevirtual #19                 // Method recvBufAllocHandle:()Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;
      28: astore_2
      29: aload_2
      30: aload_0
      31: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      34: getstatic     #20                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      37: invokevirtual #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isFlagSet:(I)Z
      40: invokevirtual #22                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.edgeTriggered:(Z)V
      43: aload_0
      44: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      47: invokevirtual #23                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      50: astore_3
      51: aload_1
      52: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      57: astore        4
      59: aload_2
      60: aload_1
      61: invokevirtual #25                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      64: aload_0
      65: invokevirtual #26                 // Method epollInBefore:()V
      68: aconst_null
      69: astore        5
      71: iconst_0
      72: istore        6
      74: aconst_null
      75: astore        7
      77: aload         7
      79: ifnonnull     95
      82: aload_0
      83: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      86: invokestatic  #27                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
      89: dup
      90: astore        7
      92: ifnull        142
      95: aload         7
      97: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
     102: checkcast     #29                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
     105: astore        8
     107: aload         8
     109: ifnull        142
     112: aload         8
     114: aload_2
     115: invokevirtual #30                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.spliceIn:(Lio/netty/channel/RecvByteBufAllocator$Handle;)Z
     118: ifeq          249
     121: aload_0
     122: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     125: invokevirtual #31                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
     128: ifeq          242
     131: aload         7
     133: invokeinterface #32,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     138: pop
     139: goto          242
     142: aload_2
     143: aload         4
     145: invokevirtual #33                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     148: astore        5
     150: aload_2
     151: aload_0
     152: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     155: aload         5
     157: invokevirtual #34                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
     160: invokevirtual #35                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:(I)V
     163: aload_2
     164: invokevirtual #36                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:()I
     167: ifgt          206
     170: aload         5
     172: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
     175: pop
     176: aconst_null
     177: astore        5
     179: aload_2
     180: invokevirtual #36                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.lastBytesRead:()I
     183: ifge          190
     186: iconst_1
     187: goto          191
     190: iconst_0
     191: istore        6
     193: iload         6
     195: ifeq          249
     198: aload_0
     199: iconst_0
     200: putfield      #5                  // Field readPending:Z
     203: goto          249
     206: aload_2
     207: iconst_1
     208: invokevirtual #37                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.incMessagesRead:(I)V
     211: aload_0
     212: iconst_0
     213: putfield      #5                  // Field readPending:Z
     216: aload_3
     217: aload         5
     219: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     224: pop
     225: aconst_null
     226: astore        5
     228: aload_0
     229: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     232: aload_1
     233: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
     236: ifeq          242
     239: goto          249
     242: aload_2
     243: invokevirtual #38                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.continueReading:()Z
     246: ifne          77
     249: aload_2
     250: invokevirtual #8                  // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
     253: aload_3
     254: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     259: pop
     260: iload         6
     262: ifeq          270
     265: aload_0
     266: iconst_0
     267: invokevirtual #13                 // Method shutdownInput:(Z)V
     270: aload_0
     271: aload_1
     272: invokevirtual #39                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     275: goto          310
     278: astore        7
     280: aload_0
     281: aload_3
     282: aload         5
     284: aload         7
     286: iload         6
     288: aload_2
     289: invokespecial #41                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/epoll/EpollRecvByteAllocatorHandle;)V
     292: aload_0
     293: aload_1
     294: invokevirtual #39                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     297: goto          310
     300: astore        9
     302: aload_0
     303: aload_1
     304: invokevirtual #39                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     307: aload         9
     309: athrow
     310: return
    Exception table:
       from    to  target type
          74   270   278   Class java/lang/Throwable
          74   270   300   any
         278   292   300   any
         300   302   300   any
}
