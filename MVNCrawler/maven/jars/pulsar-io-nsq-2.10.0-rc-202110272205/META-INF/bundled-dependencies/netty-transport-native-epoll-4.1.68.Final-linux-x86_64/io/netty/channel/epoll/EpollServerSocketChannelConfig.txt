Compiled from "EpollServerSocketChannelConfig.java"
public final class io.netty.channel.epoll.EpollServerSocketChannelConfig extends io.netty.channel.epoll.EpollServerChannelConfig implements io.netty.channel.socket.ServerSocketChannelConfig {
  io.netty.channel.epoll.EpollServerSocketChannelConfig(io.netty.channel.epoll.EpollServerSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/epoll/EpollServerChannelConfig."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
      10: pop
      11: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #3                  // Method io/netty/channel/epoll/EpollServerChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_4
       6: anewarray     #4                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #6                  // Field io/netty/channel/epoll/EpollChannelOption.IP_FREEBIND:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #7                  // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
      26: aastore
      27: dup
      28: iconst_3
      29: getstatic     #8                  // Field io/netty/channel/epoll/EpollChannelOption.TCP_DEFER_ACCEPT:Lio/netty/channel/ChannelOption;
      32: aastore
      33: invokevirtual #9                  // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      36: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #10                 // Method isReusePort:()Z
      11: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #6                  // Field io/netty/channel/epoll/EpollChannelOption.IP_FREEBIND:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #12                 // Method isFreeBind:()Z
      26: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #7                  // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #13                 // Method isIpTransparent:()Z
      41: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_1
      46: getstatic     #8                  // Field io/netty/channel/epoll/EpollChannelOption.TCP_DEFER_ACCEPT:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #14                 // Method getTcpDeferAccept:()I
      56: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: areturn
      60: aload_0
      61: aload_1
      62: invokespecial #16                 // Method io/netty/channel/epoll/EpollServerChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      65: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #5                  // Field io/netty/channel/epoll/EpollChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #18                 // class java/lang/Boolean
      18: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokevirtual #20                 // Method setReusePort:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
      24: pop
      25: goto          122
      28: aload_1
      29: getstatic     #6                  // Field io/netty/channel/epoll/EpollChannelOption.IP_FREEBIND:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #18                 // class java/lang/Boolean
      40: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #21                 // Method setFreeBind:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
      46: pop
      47: goto          122
      50: aload_1
      51: getstatic     #7                  // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #18                 // class java/lang/Boolean
      62: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #22                 // Method setIpTransparent:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
      68: pop
      69: goto          122
      72: aload_1
      73: getstatic     #23                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_MD5SIG:Lio/netty/channel/ChannelOption;
      76: if_acmpne     93
      79: aload_2
      80: checkcast     #24                 // class java/util/Map
      83: astore_3
      84: aload_0
      85: aload_3
      86: invokevirtual #25                 // Method setTcpMd5Sig:(Ljava/util/Map;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
      89: pop
      90: goto          122
      93: aload_1
      94: getstatic     #8                  // Field io/netty/channel/epoll/EpollChannelOption.TCP_DEFER_ACCEPT:Lio/netty/channel/ChannelOption;
      97: if_acmpne     115
     100: aload_0
     101: aload_2
     102: checkcast     #26                 // class java/lang/Integer
     105: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
     108: invokevirtual #28                 // Method setTcpDeferAccept:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
     111: pop
     112: goto          122
     115: aload_0
     116: aload_1
     117: aload_2
     118: invokespecial #29                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     121: ireturn
     122: iconst_1
     123: ireturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #31                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #32                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setBacklog:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #33                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #36                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #38                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #39                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #40                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #41                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method io/netty/channel/epoll/EpollServerChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setTcpMd5Sig(java.util.Map<java.net.InetAddress, byte[]>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: aload_1
       8: invokevirtual #45                 // Method io/netty/channel/epoll/EpollServerSocketChannel.setTcpMd5Sig:(Ljava/util/Map;)V
      11: aload_0
      12: areturn
      13: astore_2
      14: new           #47                 // class io/netty/channel/ChannelException
      17: dup
      18: aload_2
      19: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public boolean isReusePort();
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #50                 // Method io/netty/channel/epoll/LinuxSocket.isReusePort:()Z
      13: ireturn
      14: astore_1
      15: new           #47                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setReusePort(boolean);
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #51                 // Method io/netty/channel/epoll/LinuxSocket.setReusePort:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #47                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isFreeBind();
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #52                 // Method io/netty/channel/epoll/LinuxSocket.isIpFreeBind:()Z
      13: ireturn
      14: astore_1
      15: new           #47                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setFreeBind(boolean);
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #53                 // Method io/netty/channel/epoll/LinuxSocket.setIpFreeBind:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #47                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isIpTransparent();
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #54                 // Method io/netty/channel/epoll/LinuxSocket.isIpTransparent:()Z
      13: ireturn
      14: astore_1
      15: new           #47                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setIpTransparent(boolean);
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #55                 // Method io/netty/channel/epoll/LinuxSocket.setIpTransparent:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #47                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerSocketChannelConfig setTcpDeferAccept(int);
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #56                 // Method io/netty/channel/epoll/LinuxSocket.setTcpDeferAccept:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #47                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public int getTcpDeferAccept();
    Code:
       0: aload_0
       1: getfield      #43                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #44                 // class io/netty/channel/epoll/EpollServerSocketChannel
       7: getfield      #49                 // Field io/netty/channel/epoll/EpollServerSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #57                 // Method io/netty/channel/epoll/LinuxSocket.getTcpDeferAccept:()I
      13: ireturn
      14: astore_1
      15: new           #47                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #48                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollServerChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #68                 // Method setPerformancePreferences:(III)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       7: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method setBacklog:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #70                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollServerChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #68                 // Method setPerformancePreferences:(III)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #70                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method setBacklog:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollServerSocketChannelConfig;
       5: areturn
}
