Compiled from "BackoffHandler.java"
public class com.sproutsocial.nsq.BackoffHandler implements com.sproutsocial.nsq.MessageHandler {
  private volatile boolean isBackoff;

  private com.sproutsocial.nsq.Subscription subscription;

  private final com.sproutsocial.nsq.MessageHandler handler;

  private final int initDelay;

  private final int maxDelay;

  private long lastAttempt;

  private int delay;

  private int failCount;

  private int fullSpeedMaxInFlight;

  private static final int DEFAULT_INIT_DELAY_MILLIS;

  private static final int DEFAULT_MAX_DELAY_MILLIS;

  private static final org.slf4j.Logger logger;

  public com.sproutsocial.nsq.BackoffHandler(com.sproutsocial.nsq.MessageHandler, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field isBackoff:Z
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field handler:Lcom/sproutsocial/nsq/MessageHandler;
      14: aload_0
      15: iload_2
      16: putfield      #5                  // Field initDelay:I
      19: aload_0
      20: iload_3
      21: putfield      #6                  // Field maxDelay:I
      24: return

  public com.sproutsocial.nsq.BackoffHandler(com.sproutsocial.nsq.MessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1000
       5: ldc           #8                  // int 60000
       7: invokespecial #9                  // Method "<init>":(Lcom/sproutsocial/nsq/MessageHandler;II)V
      10: return

  public void accept(com.sproutsocial.nsq.Message);
    Code:
       0: aload_0
       1: getfield      #3                  // Field isBackoff:Z
       4: istore_2
       5: iload_2
       6: ifeq          13
       9: aload_0
      10: invokespecial #10                 // Method attemptDuringBackoff:()V
      13: aload_0
      14: getfield      #4                  // Field handler:Lcom/sproutsocial/nsq/MessageHandler;
      17: aload_1
      18: invokeinterface #11,  2           // InterfaceMethod com/sproutsocial/nsq/MessageHandler.accept:(Lcom/sproutsocial/nsq/Message;)V
      23: iload_2
      24: ifeq          31
      27: aload_0
      28: invokespecial #12                 // Method successDuringBackoff:()V
      31: aload_1
      32: invokeinterface #13,  1           // InterfaceMethod com/sproutsocial/nsq/Message.finish:()V
      37: goto          47
      40: astore_3
      41: aload_0
      42: aload_1
      43: aload_3
      44: invokespecial #15                 // Method failure:(Lcom/sproutsocial/nsq/Message;Ljava/lang/Exception;)V
      47: return
    Exception table:
       from    to  target type
          13    37    40   Class java/lang/Exception

  synchronized void setSubscription(com.sproutsocial.nsq.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
       5: return

  private synchronized void failure(com.sproutsocial.nsq.Message, java.lang.Exception);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field isBackoff:Z
       5: aload_0
       6: dup
       7: getfield      #16                 // Field failCount:I
      10: iconst_1
      11: iadd
      12: putfield      #16                 // Field failCount:I
      15: getstatic     #17                 // Field logger:Lorg/slf4j/Logger;
      18: ldc           #18                 // String message error. failures:{}
      20: aload_0
      21: getfield      #16                 // Field failCount:I
      24: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aload_2
      28: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #16                 // Field failCount:I
      37: iconst_1
      38: if_icmpne     70
      41: aload_0
      42: aload_0
      43: getfield      #5                  // Field initDelay:I
      46: putfield      #21                 // Field delay:I
      49: aload_0
      50: aload_0
      51: getfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
      54: invokevirtual #22                 // Method com/sproutsocial/nsq/Subscription.getMaxInFlight:()I
      57: putfield      #23                 // Field fullSpeedMaxInFlight:I
      60: aload_0
      61: invokestatic  #24                 // Method com/sproutsocial/nsq/Util.clock:()J
      64: putfield      #25                 // Field lastAttempt:J
      67: goto          91
      70: aload_0
      71: aload_0
      72: getfield      #21                 // Field delay:I
      75: iconst_2
      76: imul
      77: aload_0
      78: getfield      #6                  // Field maxDelay:I
      81: invokestatic  #26                 // Method java/lang/Math.min:(II)I
      84: putfield      #21                 // Field delay:I
      87: aload_0
      88: invokespecial #27                 // Method pauseSubscription:()V
      91: aload_1
      92: invokeinterface #28,  1           // InterfaceMethod com/sproutsocial/nsq/Message.requeue:()V
      97: return

  private synchronized void pauseSubscription();
    Code:
       0: aload_0
       1: getfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
       4: iconst_0
       5: invokevirtual #29                 // Method com/sproutsocial/nsq/Subscription.setMaxInFlight:(I)V
       8: aload_0
       9: getfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
      12: invokevirtual #30                 // Method com/sproutsocial/nsq/Subscription.getClient:()Lcom/sproutsocial/nsq/Client;
      15: new           #31                 // class com/sproutsocial/nsq/BackoffHandler$1
      18: dup
      19: aload_0
      20: invokespecial #32                 // Method com/sproutsocial/nsq/BackoffHandler$1."<init>":(Lcom/sproutsocial/nsq/BackoffHandler;)V
      23: aload_0
      24: getfield      #21                 // Field delay:I
      27: invokevirtual #33                 // Method com/sproutsocial/nsq/Client.schedule:(Ljava/lang/Runnable;I)V
      30: return

  private synchronized void attemptDuringBackoff();
    Code:
       0: invokestatic  #24                 // Method com/sproutsocial/nsq/Util.clock:()J
       3: lstore_1
       4: lload_1
       5: aload_0
       6: getfield      #25                 // Field lastAttempt:J
       9: lsub
      10: l2i
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #21                 // Field delay:I
      17: if_icmpge     39
      20: aload_0
      21: getfield      #21                 // Field delay:I
      24: iload_3
      25: isub
      26: invokestatic  #34                 // Method com/sproutsocial/nsq/Util.sleepQuietly:(I)V
      29: aload_0
      30: invokestatic  #24                 // Method com/sproutsocial/nsq/Util.clock:()J
      33: putfield      #25                 // Field lastAttempt:J
      36: goto          44
      39: aload_0
      40: lload_1
      41: putfield      #25                 // Field lastAttempt:J
      44: return

  private synchronized void successDuringBackoff();
    Code:
       0: aload_0
       1: dup
       2: getfield      #21                 // Field delay:I
       5: iconst_2
       6: idiv
       7: putfield      #21                 // Field delay:I
      10: aload_0
      11: getfield      #21                 // Field delay:I
      14: aload_0
      15: getfield      #5                  // Field initDelay:I
      18: if_icmpge     50
      21: aload_0
      22: iconst_0
      23: putfield      #3                  // Field isBackoff:Z
      26: aload_0
      27: iconst_0
      28: putfield      #16                 // Field failCount:I
      31: aload_0
      32: iconst_0
      33: putfield      #21                 // Field delay:I
      36: aload_0
      37: getfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
      40: aload_0
      41: getfield      #23                 // Field fullSpeedMaxInFlight:I
      44: invokevirtual #29                 // Method com/sproutsocial/nsq/Subscription.setMaxInFlight:(I)V
      47: goto          54
      50: aload_0
      51: invokespecial #27                 // Method pauseSubscription:()V
      54: return

  static com.sproutsocial.nsq.Subscription access$000(com.sproutsocial.nsq.BackoffHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field subscription:Lcom/sproutsocial/nsq/Subscription;
       4: areturn

  static {};
    Code:
       0: ldc           #7                  // class com/sproutsocial/nsq/BackoffHandler
       2: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #17                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
