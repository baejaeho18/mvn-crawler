Compiled from "MinAvailablePolicy.java"
public class org.apache.pulsar.common.policies.impl.MinAvailablePolicy extends org.apache.pulsar.common.policies.AutoFailoverPolicy {
  private static final java.lang.String MIN_LIMIT_KEY;

  private static final java.lang.String USAGE_THRESHOLD_KEY;

  private static final int MAX_USAGE_THRESHOLD;

  public int min_limit;

  public int usage_threshold;

  public org.apache.pulsar.common.policies.impl.MinAvailablePolicy(org.apache.pulsar.common.policies.data.AutoFailoverPolicyData);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/pulsar/common/policies/AutoFailoverPolicy."<init>":()V
       4: aload_1
       5: invokeinterface #2,  1            // InterfaceMethod org/apache/pulsar/common/policies/data/AutoFailoverPolicyData.getPolicyType:()Lorg/apache/pulsar/common/policies/data/AutoFailoverPolicyType;
      10: getstatic     #3                  // Field org/apache/pulsar/common/policies/data/AutoFailoverPolicyType.min_available:Lorg/apache/pulsar/common/policies/data/AutoFailoverPolicyType;
      13: invokevirtual #4                  // Method org/apache/pulsar/common/policies/data/AutoFailoverPolicyType.equals:(Ljava/lang/Object;)Z
      16: ifne          27
      19: new           #5                  // class java/lang/IllegalArgumentException
      22: dup
      23: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      26: athrow
      27: aload_1
      28: invokeinterface #7,  1            // InterfaceMethod org/apache/pulsar/common/policies/data/AutoFailoverPolicyData.getParameters:()Ljava/util/Map;
      33: ldc           #9                  // String min_limit
      35: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      40: ifne          51
      43: new           #5                  // class java/lang/IllegalArgumentException
      46: dup
      47: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      50: athrow
      51: aload_1
      52: invokeinterface #7,  1            // InterfaceMethod org/apache/pulsar/common/policies/data/AutoFailoverPolicyData.getParameters:()Ljava/util/Map;
      57: ldc           #11                 // String usage_threshold
      59: invokeinterface #10,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      64: ifne          75
      67: new           #5                  // class java/lang/IllegalArgumentException
      70: dup
      71: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      74: athrow
      75: aload_0
      76: aload_1
      77: invokeinterface #7,  1            // InterfaceMethod org/apache/pulsar/common/policies/data/AutoFailoverPolicyData.getParameters:()Ljava/util/Map;
      82: ldc           #9                  // String min_limit
      84: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #13                 // class java/lang/String
      92: invokestatic  #14                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      95: putfield      #15                 // Field min_limit:I
      98: aload_0
      99: aload_1
     100: invokeinterface #7,  1            // InterfaceMethod org/apache/pulsar/common/policies/data/AutoFailoverPolicyData.getParameters:()Ljava/util/Map;
     105: ldc           #11                 // String usage_threshold
     107: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #13                 // class java/lang/String
     115: invokestatic  #14                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     118: putfield      #16                 // Field usage_threshold:I
     121: return

  public boolean isBrokerAvailable(org.apache.pulsar.common.policies.data.BrokerStatus);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod org/apache/pulsar/common/policies/data/BrokerStatus.isActive:()Z
       6: ifeq          35
       9: aload_0
      10: getfield      #16                 // Field usage_threshold:I
      13: bipush        100
      15: if_icmpeq     31
      18: aload_1
      19: invokeinterface #18,  1           // InterfaceMethod org/apache/pulsar/common/policies/data/BrokerStatus.getLoadFactor:()I
      24: aload_0
      25: getfield      #16                 // Field usage_threshold:I
      28: if_icmpge     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public boolean shouldFailoverToSecondary(java.util.SortedSet<org.apache.pulsar.common.policies.data.BrokerStatus>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #19,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          44
      18: aload_3
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #22                 // class org/apache/pulsar/common/policies/data/BrokerStatus
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokevirtual #23                 // Method isBrokerAvailable:(Lorg/apache/pulsar/common/policies/data/BrokerStatus;)Z
      35: ifeq          41
      38: iinc          2, 1
      41: goto          9
      44: iload_2
      45: aload_0
      46: getfield      #15                 // Field min_limit:I
      49: if_icmpge     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public boolean shouldFailoverToSecondary(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #15                 // Field min_limit:I
       5: if_icmpge     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int getMin_limit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field min_limit:I
       4: ireturn

  public int getUsage_threshold();
    Code:
       0: aload_0
       1: getfield      #16                 // Field usage_threshold:I
       4: ireturn

  public void setMin_limit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field min_limit:I
       5: return

  public void setUsage_threshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field usage_threshold:I
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #8                  // class org/apache/pulsar/common/policies/impl/MinAvailablePolicy
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #8                  // class org/apache/pulsar/common/policies/impl/MinAvailablePolicy
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #24                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #25                 // Method getMin_limit:()I
      35: aload_2
      36: invokevirtual #25                 // Method getMin_limit:()I
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokevirtual #26                 // Method getUsage_threshold:()I
      48: aload_2
      49: invokevirtual #26                 // Method getUsage_threshold:()I
      52: if_icmpeq     57
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/apache/pulsar/common/policies/impl/MinAvailablePolicy
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #25                 // Method getMin_limit:()I
      13: iadd
      14: istore_2
      15: iload_2
      16: bipush        59
      18: imul
      19: aload_0
      20: invokevirtual #26                 // Method getUsage_threshold:()I
      23: iadd
      24: istore_2
      25: iload_2
      26: ireturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String MinAvailablePolicy(min_limit=
       9: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #25                 // Method getMin_limit:()I
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , usage_threshold=
      21: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #26                 // Method getUsage_threshold:()I
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #33                 // String )
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public org.apache.pulsar.common.policies.impl.MinAvailablePolicy(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/pulsar/common/policies/AutoFailoverPolicy."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #15                 // Field min_limit:I
       9: aload_0
      10: iload_2
      11: putfield      #16                 // Field usage_threshold:I
      14: return
}
