Compiled from "ByteBufAllocatorBuilder.java"
public interface org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder {
  public static org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder create();
    Code:
       0: new           #1                  // class org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorBuilderImpl
       3: dup
       4: invokespecial #2                  // Method org/apache/bookkeeper/common/allocator/impl/ByteBufAllocatorBuilderImpl."<init>":()V
       7: areturn

  public abstract io.netty.buffer.ByteBufAllocator build();

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder pooledAllocator(io.netty.buffer.ByteBufAllocator);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder unpooledAllocator(io.netty.buffer.ByteBufAllocator);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder poolingPolicy(org.apache.bookkeeper.common.allocator.PoolingPolicy);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder poolingConcurrency(int);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder outOfMemoryPolicy(org.apache.bookkeeper.common.allocator.OutOfMemoryPolicy);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder outOfMemoryListener(java.util.function.Consumer<java.lang.OutOfMemoryError>);

  public abstract org.apache.bookkeeper.common.allocator.ByteBufAllocatorBuilder leakDetectionPolicy(org.apache.bookkeeper.common.allocator.LeakDetectionPolicy);
}
