Compiled from "JsonReader.java"
public class com.google.gson.stream.JsonReader implements java.io.Closeable {
  private static final char[] NON_EXECUTE_PREFIX;

  private static final long MIN_INCOMPLETE_INTEGER;

  private static final int PEEKED_NONE;

  private static final int PEEKED_BEGIN_OBJECT;

  private static final int PEEKED_END_OBJECT;

  private static final int PEEKED_BEGIN_ARRAY;

  private static final int PEEKED_END_ARRAY;

  private static final int PEEKED_TRUE;

  private static final int PEEKED_FALSE;

  private static final int PEEKED_NULL;

  private static final int PEEKED_SINGLE_QUOTED;

  private static final int PEEKED_DOUBLE_QUOTED;

  private static final int PEEKED_UNQUOTED;

  private static final int PEEKED_BUFFERED;

  private static final int PEEKED_SINGLE_QUOTED_NAME;

  private static final int PEEKED_DOUBLE_QUOTED_NAME;

  private static final int PEEKED_UNQUOTED_NAME;

  private static final int PEEKED_LONG;

  private static final int PEEKED_NUMBER;

  private static final int PEEKED_EOF;

  private static final int NUMBER_CHAR_NONE;

  private static final int NUMBER_CHAR_SIGN;

  private static final int NUMBER_CHAR_DIGIT;

  private static final int NUMBER_CHAR_DECIMAL;

  private static final int NUMBER_CHAR_FRACTION_DIGIT;

  private static final int NUMBER_CHAR_EXP_E;

  private static final int NUMBER_CHAR_EXP_SIGN;

  private static final int NUMBER_CHAR_EXP_DIGIT;

  private final java.io.Reader in;

  private boolean lenient;

  private final char[] buffer;

  private int pos;

  private int limit;

  private int lineNumber;

  private int lineStart;

  int peeked;

  private long peekedLong;

  private int peekedNumberLength;

  private java.lang.String peekedString;

  private int[] stack;

  private int stackSize;

  private java.lang.String[] pathNames;

  private int[] pathIndices;

  public com.google.gson.stream.JsonReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field lenient:Z
       9: aload_0
      10: sipush        1024
      13: newarray       char
      15: putfield      #4                  // Field buffer:[C
      18: aload_0
      19: iconst_0
      20: putfield      #5                  // Field pos:I
      23: aload_0
      24: iconst_0
      25: putfield      #6                  // Field limit:I
      28: aload_0
      29: iconst_0
      30: putfield      #7                  // Field lineNumber:I
      33: aload_0
      34: iconst_0
      35: putfield      #8                  // Field lineStart:I
      38: aload_0
      39: iconst_0
      40: putfield      #10                 // Field peeked:I
      43: aload_0
      44: bipush        32
      46: newarray       int
      48: putfield      #11                 // Field stack:[I
      51: aload_0
      52: iconst_0
      53: putfield      #12                 // Field stackSize:I
      56: aload_0
      57: getfield      #11                 // Field stack:[I
      60: aload_0
      61: dup
      62: getfield      #12                 // Field stackSize:I
      65: dup_x1
      66: iconst_1
      67: iadd
      68: putfield      #12                 // Field stackSize:I
      71: bipush        6
      73: iastore
      74: aload_0
      75: bipush        32
      77: anewarray     #14                 // class java/lang/String
      80: putfield      #15                 // Field pathNames:[Ljava/lang/String;
      83: aload_0
      84: bipush        32
      86: newarray       int
      88: putfield      #16                 // Field pathIndices:[I
      91: aload_1
      92: ifnonnull     105
      95: new           #17                 // class java/lang/NullPointerException
      98: dup
      99: ldc           #18                 // String in == null
     101: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: aload_1
     107: putfield      #20                 // Field in:Ljava/io/Reader;
     110: return

  public final void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field lenient:Z
       5: return

  public final boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenient:Z
       4: ireturn

  public void beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_3
      16: if_icmpne     44
      19: aload_0
      20: iconst_1
      21: invokespecial #22                 // Method push:(I)V
      24: aload_0
      25: getfield      #16                 // Field pathIndices:[I
      28: aload_0
      29: getfield      #12                 // Field stackSize:I
      32: iconst_1
      33: isub
      34: iconst_0
      35: iastore
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field peeked:I
      41: goto          81
      44: new           #23                 // class java/lang/IllegalStateException
      47: dup
      48: new           #24                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #26                 // String Expected BEGIN_ARRAY but was
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      71: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public void endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_4
      16: if_icmpne     52
      19: aload_0
      20: dup
      21: getfield      #12                 // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #12                 // Field stackSize:I
      29: aload_0
      30: getfield      #16                 // Field pathIndices:[I
      33: aload_0
      34: getfield      #12                 // Field stackSize:I
      37: iconst_1
      38: isub
      39: dup2
      40: iaload
      41: iconst_1
      42: iadd
      43: iastore
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field peeked:I
      49: goto          89
      52: new           #23                 // class java/lang/IllegalStateException
      55: dup
      56: new           #24                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #33                 // String Expected END_ARRAY but was
      65: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: return

  public void beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_1
      16: if_icmpne     32
      19: aload_0
      20: iconst_3
      21: invokespecial #22                 // Method push:(I)V
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field peeked:I
      29: goto          69
      32: new           #23                 // class java/lang/IllegalStateException
      35: dup
      36: new           #24                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #34                 // String Expected BEGIN_OBJECT but was
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      59: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return

  public void endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpne     62
      19: aload_0
      20: dup
      21: getfield      #12                 // Field stackSize:I
      24: iconst_1
      25: isub
      26: putfield      #12                 // Field stackSize:I
      29: aload_0
      30: getfield      #15                 // Field pathNames:[Ljava/lang/String;
      33: aload_0
      34: getfield      #12                 // Field stackSize:I
      37: aconst_null
      38: aastore
      39: aload_0
      40: getfield      #16                 // Field pathIndices:[I
      43: aload_0
      44: getfield      #12                 // Field stackSize:I
      47: iconst_1
      48: isub
      49: dup2
      50: iaload
      51: iconst_1
      52: iadd
      53: iastore
      54: aload_0
      55: iconst_0
      56: putfield      #10                 // Field peeked:I
      59: goto          99
      62: new           #23                 // class java/lang/IllegalStateException
      65: dup
      66: new           #24                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #35                 // String Expected END_OBJECT but was
      75: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      82: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      89: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_2
      16: if_icmpeq     28
      19: iload_1
      20: iconst_4
      21: if_icmpeq     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public com.google.gson.stream.JsonToken peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: tableswitch   { // 1 to 17
                     1: 96
                     2: 100
                     3: 104
                     4: 108
                     5: 116
                     6: 116
                     7: 120
                     8: 124
                     9: 124
                    10: 124
                    11: 124
                    12: 112
                    13: 112
                    14: 112
                    15: 128
                    16: 128
                    17: 132
               default: 136
          }
      96: getstatic     #36                 // Field com/google/gson/stream/JsonToken.BEGIN_OBJECT:Lcom/google/gson/stream/JsonToken;
      99: areturn
     100: getstatic     #37                 // Field com/google/gson/stream/JsonToken.END_OBJECT:Lcom/google/gson/stream/JsonToken;
     103: areturn
     104: getstatic     #38                 // Field com/google/gson/stream/JsonToken.BEGIN_ARRAY:Lcom/google/gson/stream/JsonToken;
     107: areturn
     108: getstatic     #39                 // Field com/google/gson/stream/JsonToken.END_ARRAY:Lcom/google/gson/stream/JsonToken;
     111: areturn
     112: getstatic     #40                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
     115: areturn
     116: getstatic     #41                 // Field com/google/gson/stream/JsonToken.BOOLEAN:Lcom/google/gson/stream/JsonToken;
     119: areturn
     120: getstatic     #42                 // Field com/google/gson/stream/JsonToken.NULL:Lcom/google/gson/stream/JsonToken;
     123: areturn
     124: getstatic     #43                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
     127: areturn
     128: getstatic     #44                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
     131: areturn
     132: getstatic     #45                 // Field com/google/gson/stream/JsonToken.END_DOCUMENT:Lcom/google/gson/stream/JsonToken;
     135: areturn
     136: new           #46                 // class java/lang/AssertionError
     139: dup
     140: invokespecial #47                 // Method java/lang/AssertionError."<init>":()V
     143: athrow

  int doPeek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field stack:[I
       4: aload_0
       5: getfield      #12                 // Field stackSize:I
       8: iconst_1
       9: isub
      10: iaload
      11: istore_1
      12: iload_1
      13: iconst_1
      14: if_icmpne     32
      17: aload_0
      18: getfield      #11                 // Field stack:[I
      21: aload_0
      22: getfield      #12                 // Field stackSize:I
      25: iconst_1
      26: isub
      27: iconst_2
      28: iastore
      29: goto          518
      32: iload_1
      33: iconst_2
      34: if_icmpne     104
      37: aload_0
      38: iconst_1
      39: invokespecial #48                 // Method nextNonWhitespace:(Z)I
      42: istore_2
      43: iload_2
      44: lookupswitch  { // 3
                    44: 91
                    59: 87
                    93: 80
               default: 94
          }
      80: aload_0
      81: iconst_4
      82: dup_x1
      83: putfield      #10                 // Field peeked:I
      86: ireturn
      87: aload_0
      88: invokespecial #49                 // Method checkLenient:()V
      91: goto          101
      94: aload_0
      95: ldc           #50                 // String Unterminated array
      97: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     100: athrow
     101: goto          518
     104: iload_1
     105: iconst_3
     106: if_icmpeq     114
     109: iload_1
     110: iconst_5
     111: if_icmpne     313
     114: aload_0
     115: getfield      #11                 // Field stack:[I
     118: aload_0
     119: getfield      #12                 // Field stackSize:I
     122: iconst_1
     123: isub
     124: iconst_4
     125: iastore
     126: iload_1
     127: iconst_5
     128: if_icmpne     193
     131: aload_0
     132: iconst_1
     133: invokespecial #48                 // Method nextNonWhitespace:(Z)I
     136: istore_2
     137: iload_2
     138: lookupswitch  { // 3
                    44: 183
                    59: 179
                   125: 172
               default: 186
          }
     172: aload_0
     173: iconst_2
     174: dup_x1
     175: putfield      #10                 // Field peeked:I
     178: ireturn
     179: aload_0
     180: invokespecial #49                 // Method checkLenient:()V
     183: goto          193
     186: aload_0
     187: ldc           #52                 // String Unterminated object
     189: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     192: athrow
     193: aload_0
     194: iconst_1
     195: invokespecial #48                 // Method nextNonWhitespace:(Z)I
     198: istore_2
     199: iload_2
     200: lookupswitch  { // 3
                    34: 236
                    39: 244
                   125: 256
               default: 275
          }
     236: aload_0
     237: bipush        13
     239: dup_x1
     240: putfield      #10                 // Field peeked:I
     243: ireturn
     244: aload_0
     245: invokespecial #49                 // Method checkLenient:()V
     248: aload_0
     249: bipush        12
     251: dup_x1
     252: putfield      #10                 // Field peeked:I
     255: ireturn
     256: iload_1
     257: iconst_5
     258: if_icmpeq     268
     261: aload_0
     262: iconst_2
     263: dup_x1
     264: putfield      #10                 // Field peeked:I
     267: ireturn
     268: aload_0
     269: ldc           #53                 // String Expected name
     271: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     274: athrow
     275: aload_0
     276: invokespecial #49                 // Method checkLenient:()V
     279: aload_0
     280: dup
     281: getfield      #5                  // Field pos:I
     284: iconst_1
     285: isub
     286: putfield      #5                  // Field pos:I
     289: aload_0
     290: iload_2
     291: i2c
     292: invokespecial #54                 // Method isLiteral:(C)Z
     295: ifeq          306
     298: aload_0
     299: bipush        14
     301: dup_x1
     302: putfield      #10                 // Field peeked:I
     305: ireturn
     306: aload_0
     307: ldc           #53                 // String Expected name
     309: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     312: athrow
     313: iload_1
     314: iconst_4
     315: if_icmpne     427
     318: aload_0
     319: getfield      #11                 // Field stack:[I
     322: aload_0
     323: getfield      #12                 // Field stackSize:I
     326: iconst_1
     327: isub
     328: iconst_5
     329: iastore
     330: aload_0
     331: iconst_1
     332: invokespecial #48                 // Method nextNonWhitespace:(Z)I
     335: istore_2
     336: iload_2
     337: lookupswitch  { // 2
                    58: 364
                    61: 367
               default: 417
          }
     364: goto          424
     367: aload_0
     368: invokespecial #49                 // Method checkLenient:()V
     371: aload_0
     372: getfield      #5                  // Field pos:I
     375: aload_0
     376: getfield      #6                  // Field limit:I
     379: if_icmplt     390
     382: aload_0
     383: iconst_1
     384: invokespecial #55                 // Method fillBuffer:(I)Z
     387: ifeq          424
     390: aload_0
     391: getfield      #4                  // Field buffer:[C
     394: aload_0
     395: getfield      #5                  // Field pos:I
     398: caload
     399: bipush        62
     401: if_icmpne     424
     404: aload_0
     405: dup
     406: getfield      #5                  // Field pos:I
     409: iconst_1
     410: iadd
     411: putfield      #5                  // Field pos:I
     414: goto          424
     417: aload_0
     418: ldc           #56                 // String Expected \':\'
     420: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     423: athrow
     424: goto          518
     427: iload_1
     428: bipush        6
     430: if_icmpne     460
     433: aload_0
     434: getfield      #3                  // Field lenient:Z
     437: ifeq          444
     440: aload_0
     441: invokespecial #57                 // Method consumeNonExecutePrefix:()V
     444: aload_0
     445: getfield      #11                 // Field stack:[I
     448: aload_0
     449: getfield      #12                 // Field stackSize:I
     452: iconst_1
     453: isub
     454: bipush        7
     456: iastore
     457: goto          518
     460: iload_1
     461: bipush        7
     463: if_icmpne     502
     466: aload_0
     467: iconst_0
     468: invokespecial #48                 // Method nextNonWhitespace:(Z)I
     471: istore_2
     472: iload_2
     473: iconst_m1
     474: if_icmpne     485
     477: aload_0
     478: bipush        17
     480: dup_x1
     481: putfield      #10                 // Field peeked:I
     484: ireturn
     485: aload_0
     486: invokespecial #49                 // Method checkLenient:()V
     489: aload_0
     490: dup
     491: getfield      #5                  // Field pos:I
     494: iconst_1
     495: isub
     496: putfield      #5                  // Field pos:I
     499: goto          518
     502: iload_1
     503: bipush        8
     505: if_icmpne     518
     508: new           #23                 // class java/lang/IllegalStateException
     511: dup
     512: ldc           #58                 // String JsonReader is closed
     514: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     517: athrow
     518: aload_0
     519: iconst_1
     520: invokespecial #48                 // Method nextNonWhitespace:(Z)I
     523: istore_2
     524: iload_2
     525: lookupswitch  { // 7
                    34: 655
                    39: 643
                    44: 604
                    59: 604
                    91: 663
                    93: 592
                   123: 670
               default: 677
          }
     592: iload_1
     593: iconst_1
     594: if_icmpne     604
     597: aload_0
     598: iconst_4
     599: dup_x1
     600: putfield      #10                 // Field peeked:I
     603: ireturn
     604: iload_1
     605: iconst_1
     606: if_icmpeq     614
     609: iload_1
     610: iconst_2
     611: if_icmpne     636
     614: aload_0
     615: invokespecial #49                 // Method checkLenient:()V
     618: aload_0
     619: dup
     620: getfield      #5                  // Field pos:I
     623: iconst_1
     624: isub
     625: putfield      #5                  // Field pos:I
     628: aload_0
     629: bipush        7
     631: dup_x1
     632: putfield      #10                 // Field peeked:I
     635: ireturn
     636: aload_0
     637: ldc           #59                 // String Unexpected value
     639: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     642: athrow
     643: aload_0
     644: invokespecial #49                 // Method checkLenient:()V
     647: aload_0
     648: bipush        8
     650: dup_x1
     651: putfield      #10                 // Field peeked:I
     654: ireturn
     655: aload_0
     656: bipush        9
     658: dup_x1
     659: putfield      #10                 // Field peeked:I
     662: ireturn
     663: aload_0
     664: iconst_3
     665: dup_x1
     666: putfield      #10                 // Field peeked:I
     669: ireturn
     670: aload_0
     671: iconst_1
     672: dup_x1
     673: putfield      #10                 // Field peeked:I
     676: ireturn
     677: aload_0
     678: dup
     679: getfield      #5                  // Field pos:I
     682: iconst_1
     683: isub
     684: putfield      #5                  // Field pos:I
     687: aload_0
     688: invokespecial #60                 // Method peekKeyword:()I
     691: istore_3
     692: iload_3
     693: ifeq          698
     696: iload_3
     697: ireturn
     698: aload_0
     699: invokespecial #61                 // Method peekNumber:()I
     702: istore_3
     703: iload_3
     704: ifeq          709
     707: iload_3
     708: ireturn
     709: aload_0
     710: aload_0
     711: getfield      #4                  // Field buffer:[C
     714: aload_0
     715: getfield      #5                  // Field pos:I
     718: caload
     719: invokespecial #54                 // Method isLiteral:(C)Z
     722: ifne          732
     725: aload_0
     726: ldc           #62                 // String Expected value
     728: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     731: athrow
     732: aload_0
     733: invokespecial #49                 // Method checkLenient:()V
     736: aload_0
     737: bipush        10
     739: dup_x1
     740: putfield      #10                 // Field peeked:I
     743: ireturn

  private int peekKeyword() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: aload_0
       5: getfield      #5                  // Field pos:I
       8: caload
       9: istore_1
      10: iload_1
      11: bipush        116
      13: if_icmpeq     22
      16: iload_1
      17: bipush        84
      19: if_icmpne     34
      22: ldc           #63                 // String true
      24: astore_2
      25: ldc           #64                 // String TRUE
      27: astore_3
      28: iconst_5
      29: istore        4
      31: goto          86
      34: iload_1
      35: bipush        102
      37: if_icmpeq     46
      40: iload_1
      41: bipush        70
      43: if_icmpne     59
      46: ldc           #65                 // String false
      48: astore_2
      49: ldc           #66                 // String FALSE
      51: astore_3
      52: bipush        6
      54: istore        4
      56: goto          86
      59: iload_1
      60: bipush        110
      62: if_icmpeq     71
      65: iload_1
      66: bipush        78
      68: if_icmpne     84
      71: ldc           #67                 // String null
      73: astore_2
      74: ldc           #68                 // String NULL
      76: astore_3
      77: bipush        7
      79: istore        4
      81: goto          86
      84: iconst_0
      85: ireturn
      86: aload_2
      87: invokevirtual #69                 // Method java/lang/String.length:()I
      90: istore        5
      92: iconst_1
      93: istore        6
      95: iload         6
      97: iload         5
      99: if_icmpge     170
     102: aload_0
     103: getfield      #5                  // Field pos:I
     106: iload         6
     108: iadd
     109: aload_0
     110: getfield      #6                  // Field limit:I
     113: if_icmplt     129
     116: aload_0
     117: iload         6
     119: iconst_1
     120: iadd
     121: invokespecial #55                 // Method fillBuffer:(I)Z
     124: ifne          129
     127: iconst_0
     128: ireturn
     129: aload_0
     130: getfield      #4                  // Field buffer:[C
     133: aload_0
     134: getfield      #5                  // Field pos:I
     137: iload         6
     139: iadd
     140: caload
     141: istore_1
     142: iload_1
     143: aload_2
     144: iload         6
     146: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
     149: if_icmpeq     164
     152: iload_1
     153: aload_3
     154: iload         6
     156: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
     159: if_icmpeq     164
     162: iconst_0
     163: ireturn
     164: iinc          6, 1
     167: goto          95
     170: aload_0
     171: getfield      #5                  // Field pos:I
     174: iload         5
     176: iadd
     177: aload_0
     178: getfield      #6                  // Field limit:I
     181: if_icmplt     195
     184: aload_0
     185: iload         5
     187: iconst_1
     188: iadd
     189: invokespecial #55                 // Method fillBuffer:(I)Z
     192: ifeq          216
     195: aload_0
     196: aload_0
     197: getfield      #4                  // Field buffer:[C
     200: aload_0
     201: getfield      #5                  // Field pos:I
     204: iload         5
     206: iadd
     207: caload
     208: invokespecial #54                 // Method isLiteral:(C)Z
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_0
     217: dup
     218: getfield      #5                  // Field pos:I
     221: iload         5
     223: iadd
     224: putfield      #5                  // Field pos:I
     227: aload_0
     228: iload         4
     230: dup_x1
     231: putfield      #10                 // Field peeked:I
     234: ireturn

  private int peekNumber() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: astore_1
       5: aload_0
       6: getfield      #5                  // Field pos:I
       9: istore_2
      10: aload_0
      11: getfield      #6                  // Field limit:I
      14: istore_3
      15: lconst_0
      16: lstore        4
      18: iconst_0
      19: istore        6
      21: iconst_1
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iload_2
      31: iload         9
      33: iadd
      34: iload_3
      35: if_icmpne     71
      38: iload         9
      40: aload_1
      41: arraylength
      42: if_icmpne     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: iload         9
      50: iconst_1
      51: iadd
      52: invokespecial #55                 // Method fillBuffer:(I)Z
      55: ifne          61
      58: goto          372
      61: aload_0
      62: getfield      #5                  // Field pos:I
      65: istore_2
      66: aload_0
      67: getfield      #6                  // Field limit:I
      70: istore_3
      71: aload_1
      72: iload_2
      73: iload         9
      75: iadd
      76: caload
      77: istore        10
      79: iload         10
      81: lookupswitch  { // 5
                    43: 161
                    45: 132
                    46: 196
                    69: 176
                   101: 176
               default: 210
          }
     132: iload         8
     134: ifne          146
     137: iconst_1
     138: istore        6
     140: iconst_1
     141: istore        8
     143: goto          366
     146: iload         8
     148: iconst_5
     149: if_icmpne     159
     152: bipush        6
     154: istore        8
     156: goto          366
     159: iconst_0
     160: ireturn
     161: iload         8
     163: iconst_5
     164: if_icmpne     174
     167: bipush        6
     169: istore        8
     171: goto          366
     174: iconst_0
     175: ireturn
     176: iload         8
     178: iconst_2
     179: if_icmpeq     188
     182: iload         8
     184: iconst_4
     185: if_icmpne     194
     188: iconst_5
     189: istore        8
     191: goto          366
     194: iconst_0
     195: ireturn
     196: iload         8
     198: iconst_2
     199: if_icmpne     208
     202: iconst_3
     203: istore        8
     205: goto          366
     208: iconst_0
     209: ireturn
     210: iload         10
     212: bipush        48
     214: if_icmplt     224
     217: iload         10
     219: bipush        57
     221: if_icmple     238
     224: aload_0
     225: iload         10
     227: invokespecial #54                 // Method isLiteral:(C)Z
     230: ifne          236
     233: goto          372
     236: iconst_0
     237: ireturn
     238: iload         8
     240: iconst_1
     241: if_icmpeq     249
     244: iload         8
     246: ifne          264
     249: iload         10
     251: bipush        48
     253: isub
     254: ineg
     255: i2l
     256: lstore        4
     258: iconst_2
     259: istore        8
     261: goto          366
     264: iload         8
     266: iconst_2
     267: if_icmpne     337
     270: lload         4
     272: lconst_0
     273: lcmp
     274: ifne          279
     277: iconst_0
     278: ireturn
     279: lload         4
     281: ldc2_w        #71                 // long 10l
     284: lmul
     285: iload         10
     287: bipush        48
     289: isub
     290: i2l
     291: lsub
     292: lstore        11
     294: iload         7
     296: lload         4
     298: ldc2_w        #73                 // long -922337203685477580l
     301: lcmp
     302: ifgt          322
     305: lload         4
     307: ldc2_w        #73                 // long -922337203685477580l
     310: lcmp
     311: ifne          326
     314: lload         11
     316: lload         4
     318: lcmp
     319: ifge          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: iand
     328: istore        7
     330: lload         11
     332: lstore        4
     334: goto          366
     337: iload         8
     339: iconst_3
     340: if_icmpne     349
     343: iconst_4
     344: istore        8
     346: goto          366
     349: iload         8
     351: iconst_5
     352: if_icmpeq     362
     355: iload         8
     357: bipush        6
     359: if_icmpne     366
     362: bipush        7
     364: istore        8
     366: iinc          9, 1
     369: goto          30
     372: iload         8
     374: iconst_2
     375: if_icmpne     446
     378: iload         7
     380: ifeq          446
     383: lload         4
     385: ldc2_w        #75                 // long -9223372036854775808l
     388: lcmp
     389: ifne          397
     392: iload         6
     394: ifeq          446
     397: lload         4
     399: lconst_0
     400: lcmp
     401: ifne          410
     404: iconst_0
     405: iload         6
     407: if_icmpne     446
     410: aload_0
     411: iload         6
     413: ifeq          421
     416: lload         4
     418: goto          424
     421: lload         4
     423: lneg
     424: putfield      #77                 // Field peekedLong:J
     427: aload_0
     428: dup
     429: getfield      #5                  // Field pos:I
     432: iload         9
     434: iadd
     435: putfield      #5                  // Field pos:I
     438: aload_0
     439: bipush        15
     441: dup_x1
     442: putfield      #10                 // Field peeked:I
     445: ireturn
     446: iload         8
     448: iconst_2
     449: if_icmpeq     465
     452: iload         8
     454: iconst_4
     455: if_icmpeq     465
     458: iload         8
     460: bipush        7
     462: if_icmpne     479
     465: aload_0
     466: iload         9
     468: putfield      #78                 // Field peekedNumberLength:I
     471: aload_0
     472: bipush        16
     474: dup_x1
     475: putfield      #10                 // Field peeked:I
     478: ireturn
     479: iconst_0
     480: ireturn

  private boolean isLiteral(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 16
                     9: 144
                    10: 144
                    12: 144
                    13: 144
                    32: 144
                    35: 140
                    44: 144
                    47: 140
                    58: 144
                    59: 140
                    61: 140
                    91: 144
                    92: 140
                    93: 144
                   123: 144
                   125: 144
               default: 146
          }
     140: aload_0
     141: invokespecial #49                 // Method checkLenient:()V
     144: iconst_0
     145: ireturn
     146: iconst_1
     147: ireturn

  public java.lang.String nextName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        14
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #79                 // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          97
      28: iload_1
      29: bipush        12
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          97
      44: iload_1
      45: bipush        13
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          97
      60: new           #23                 // class java/lang/IllegalStateException
      63: dup
      64: new           #24                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #81                 // String Expected a name but was
      73: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      80: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: aload_0
      84: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      87: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: iconst_0
      99: putfield      #10                 // Field peeked:I
     102: aload_0
     103: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     106: aload_0
     107: getfield      #12                 // Field stackSize:I
     110: iconst_1
     111: isub
     112: aload_2
     113: aastore
     114: aload_2
     115: areturn

  public java.lang.String nextString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        10
      17: if_icmpne     28
      20: aload_0
      21: invokespecial #79                 // Method nextUnquotedValue:()Ljava/lang/String;
      24: astore_2
      25: goto          175
      28: iload_1
      29: bipush        8
      31: if_icmpne     44
      34: aload_0
      35: bipush        39
      37: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
      40: astore_2
      41: goto          175
      44: iload_1
      45: bipush        9
      47: if_icmpne     60
      50: aload_0
      51: bipush        34
      53: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
      56: astore_2
      57: goto          175
      60: iload_1
      61: bipush        11
      63: if_icmpne     79
      66: aload_0
      67: getfield      #82                 // Field peekedString:Ljava/lang/String;
      70: astore_2
      71: aload_0
      72: aconst_null
      73: putfield      #82                 // Field peekedString:Ljava/lang/String;
      76: goto          175
      79: iload_1
      80: bipush        15
      82: if_icmpne     96
      85: aload_0
      86: getfield      #77                 // Field peekedLong:J
      89: invokestatic  #83                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      92: astore_2
      93: goto          175
      96: iload_1
      97: bipush        16
      99: if_icmpne     138
     102: new           #14                 // class java/lang/String
     105: dup
     106: aload_0
     107: getfield      #4                  // Field buffer:[C
     110: aload_0
     111: getfield      #5                  // Field pos:I
     114: aload_0
     115: getfield      #78                 // Field peekedNumberLength:I
     118: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
     121: astore_2
     122: aload_0
     123: dup
     124: getfield      #5                  // Field pos:I
     127: aload_0
     128: getfield      #78                 // Field peekedNumberLength:I
     131: iadd
     132: putfield      #5                  // Field pos:I
     135: goto          175
     138: new           #23                 // class java/lang/IllegalStateException
     141: dup
     142: new           #24                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #85                 // String Expected a string but was
     151: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_0
     155: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     158: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: aload_0
     162: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     165: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: aload_0
     176: iconst_0
     177: putfield      #10                 // Field peeked:I
     180: aload_0
     181: getfield      #16                 // Field pathIndices:[I
     184: aload_0
     185: getfield      #12                 // Field stackSize:I
     188: iconst_1
     189: isub
     190: dup2
     191: iaload
     192: iconst_1
     193: iadd
     194: iastore
     195: aload_2
     196: areturn

  public boolean nextBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: iconst_5
      16: if_icmpne     41
      19: aload_0
      20: iconst_0
      21: putfield      #10                 // Field peeked:I
      24: aload_0
      25: getfield      #16                 // Field pathIndices:[I
      28: aload_0
      29: getfield      #12                 // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: iconst_1
      40: ireturn
      41: iload_1
      42: bipush        6
      44: if_icmpne     69
      47: aload_0
      48: iconst_0
      49: putfield      #10                 // Field peeked:I
      52: aload_0
      53: getfield      #16                 // Field pathIndices:[I
      56: aload_0
      57: getfield      #12                 // Field stackSize:I
      60: iconst_1
      61: isub
      62: dup2
      63: iaload
      64: iconst_1
      65: iadd
      66: iastore
      67: iconst_0
      68: ireturn
      69: new           #23                 // class java/lang/IllegalStateException
      72: dup
      73: new           #24                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #86                 // String Expected a boolean but was
      82: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: aload_0
      93: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      96: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     105: athrow

  public void nextNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        7
      17: if_icmpne     43
      20: aload_0
      21: iconst_0
      22: putfield      #10                 // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #12                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: goto          80
      43: new           #23                 // class java/lang/IllegalStateException
      46: dup
      47: new           #24                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #87                 // String Expected null but was
      56: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      63: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: return

  public double nextDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     46
      20: aload_0
      21: iconst_0
      22: putfield      #10                 // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #12                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #77                 // Field peekedLong:J
      44: l2d
      45: dreturn
      46: iload_1
      47: bipush        16
      49: if_icmpne     91
      52: aload_0
      53: new           #14                 // class java/lang/String
      56: dup
      57: aload_0
      58: getfield      #4                  // Field buffer:[C
      61: aload_0
      62: getfield      #5                  // Field pos:I
      65: aload_0
      66: getfield      #78                 // Field peekedNumberLength:I
      69: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
      72: putfield      #82                 // Field peekedString:Ljava/lang/String;
      75: aload_0
      76: dup
      77: getfield      #5                  // Field pos:I
      80: aload_0
      81: getfield      #78                 // Field peekedNumberLength:I
      84: iadd
      85: putfield      #5                  // Field pos:I
      88: goto          187
      91: iload_1
      92: bipush        8
      94: if_icmpeq     103
      97: iload_1
      98: bipush        9
     100: if_icmpne     127
     103: aload_0
     104: aload_0
     105: iload_1
     106: bipush        8
     108: if_icmpne     116
     111: bipush        39
     113: goto          118
     116: bipush        34
     118: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
     121: putfield      #82                 // Field peekedString:Ljava/lang/String;
     124: goto          187
     127: iload_1
     128: bipush        10
     130: if_icmpne     144
     133: aload_0
     134: aload_0
     135: invokespecial #79                 // Method nextUnquotedValue:()Ljava/lang/String;
     138: putfield      #82                 // Field peekedString:Ljava/lang/String;
     141: goto          187
     144: iload_1
     145: bipush        11
     147: if_icmpeq     187
     150: new           #23                 // class java/lang/IllegalStateException
     153: dup
     154: new           #24                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     161: ldc           #88                 // String Expected a double but was
     163: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     170: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: aload_0
     174: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     177: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     186: athrow
     187: aload_0
     188: bipush        11
     190: putfield      #10                 // Field peeked:I
     193: aload_0
     194: getfield      #82                 // Field peekedString:Ljava/lang/String;
     197: invokestatic  #89                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     200: dstore_2
     201: aload_0
     202: getfield      #3                  // Field lenient:Z
     205: ifne          256
     208: dload_2
     209: invokestatic  #90                 // Method java/lang/Double.isNaN:(D)Z
     212: ifne          222
     215: dload_2
     216: invokestatic  #91                 // Method java/lang/Double.isInfinite:(D)Z
     219: ifeq          256
     222: new           #92                 // class com/google/gson/stream/MalformedJsonException
     225: dup
     226: new           #24                 // class java/lang/StringBuilder
     229: dup
     230: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     233: ldc           #93                 // String JSON forbids NaN and infinities:
     235: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: dload_2
     239: invokevirtual #94                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     242: aload_0
     243: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     246: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokespecial #95                 // Method com/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload_0
     257: aconst_null
     258: putfield      #82                 // Field peekedString:Ljava/lang/String;
     261: aload_0
     262: iconst_0
     263: putfield      #10                 // Field peeked:I
     266: aload_0
     267: getfield      #16                 // Field pathIndices:[I
     270: aload_0
     271: getfield      #12                 // Field stackSize:I
     274: iconst_1
     275: isub
     276: dup2
     277: iaload
     278: iconst_1
     279: iadd
     280: iastore
     281: dload_2
     282: dreturn

  public long nextLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     45
      20: aload_0
      21: iconst_0
      22: putfield      #10                 // Field peeked:I
      25: aload_0
      26: getfield      #16                 // Field pathIndices:[I
      29: aload_0
      30: getfield      #12                 // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: aload_0
      41: getfield      #77                 // Field peekedLong:J
      44: lreturn
      45: iload_1
      46: bipush        16
      48: if_icmpne     90
      51: aload_0
      52: new           #14                 // class java/lang/String
      55: dup
      56: aload_0
      57: getfield      #4                  // Field buffer:[C
      60: aload_0
      61: getfield      #5                  // Field pos:I
      64: aload_0
      65: getfield      #78                 // Field peekedNumberLength:I
      68: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
      71: putfield      #82                 // Field peekedString:Ljava/lang/String;
      74: aload_0
      75: dup
      76: getfield      #5                  // Field pos:I
      79: aload_0
      80: getfield      #78                 // Field peekedNumberLength:I
      83: iadd
      84: putfield      #5                  // Field pos:I
      87: goto          217
      90: iload_1
      91: bipush        8
      93: if_icmpeq     108
      96: iload_1
      97: bipush        9
      99: if_icmpeq     108
     102: iload_1
     103: bipush        10
     105: if_icmpne     180
     108: iload_1
     109: bipush        10
     111: if_icmpne     125
     114: aload_0
     115: aload_0
     116: invokespecial #79                 // Method nextUnquotedValue:()Ljava/lang/String;
     119: putfield      #82                 // Field peekedString:Ljava/lang/String;
     122: goto          146
     125: aload_0
     126: aload_0
     127: iload_1
     128: bipush        8
     130: if_icmpne     138
     133: bipush        39
     135: goto          140
     138: bipush        34
     140: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
     143: putfield      #82                 // Field peekedString:Ljava/lang/String;
     146: aload_0
     147: getfield      #82                 // Field peekedString:Ljava/lang/String;
     150: invokestatic  #96                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     153: lstore_2
     154: aload_0
     155: iconst_0
     156: putfield      #10                 // Field peeked:I
     159: aload_0
     160: getfield      #16                 // Field pathIndices:[I
     163: aload_0
     164: getfield      #12                 // Field stackSize:I
     167: iconst_1
     168: isub
     169: dup2
     170: iaload
     171: iconst_1
     172: iadd
     173: iastore
     174: lload_2
     175: lreturn
     176: astore_2
     177: goto          217
     180: new           #23                 // class java/lang/IllegalStateException
     183: dup
     184: new           #24                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #98                 // String Expected a long but was
     193: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_0
     197: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     200: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     203: aload_0
     204: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     207: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: aload_0
     218: bipush        11
     220: putfield      #10                 // Field peeked:I
     223: aload_0
     224: getfield      #82                 // Field peekedString:Ljava/lang/String;
     227: invokestatic  #89                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     230: dstore_2
     231: dload_2
     232: d2l
     233: lstore        4
     235: lload         4
     237: l2d
     238: dload_2
     239: dcmpl
     240: ifeq          280
     243: new           #97                 // class java/lang/NumberFormatException
     246: dup
     247: new           #24                 // class java/lang/StringBuilder
     250: dup
     251: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     254: ldc           #98                 // String Expected a long but was
     256: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: aload_0
     260: getfield      #82                 // Field peekedString:Ljava/lang/String;
     263: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: aload_0
     267: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     270: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     276: invokespecial #99                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     279: athrow
     280: aload_0
     281: aconst_null
     282: putfield      #82                 // Field peekedString:Ljava/lang/String;
     285: aload_0
     286: iconst_0
     287: putfield      #10                 // Field peeked:I
     290: aload_0
     291: getfield      #16                 // Field pathIndices:[I
     294: aload_0
     295: getfield      #12                 // Field stackSize:I
     298: iconst_1
     299: isub
     300: dup2
     301: iaload
     302: iconst_1
     303: iadd
     304: iastore
     305: lload         4
     307: lreturn
    Exception table:
       from    to  target type
         146   175   176   Class java/lang/NumberFormatException

  private java.lang.String nextQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_0
       8: getfield      #5                  // Field pos:I
      11: istore        4
      13: aload_0
      14: getfield      #6                  // Field limit:I
      17: istore        5
      19: iload         4
      21: istore        6
      23: iload         4
      25: iload         5
      27: if_icmpge     205
      30: aload_2
      31: iload         4
      33: iinc          4, 1
      36: caload
      37: istore        7
      39: iload         7
      41: iload_1
      42: if_icmpne     92
      45: aload_0
      46: iload         4
      48: putfield      #5                  // Field pos:I
      51: iload         4
      53: iload         6
      55: isub
      56: iconst_1
      57: isub
      58: istore        8
      60: aload_3
      61: ifnonnull     77
      64: new           #14                 // class java/lang/String
      67: dup
      68: aload_2
      69: iload         6
      71: iload         8
      73: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
      76: areturn
      77: aload_3
      78: aload_2
      79: iload         6
      81: iload         8
      83: invokevirtual #100                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      86: pop
      87: aload_3
      88: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn
      92: iload         7
      94: bipush        92
      96: if_icmpne     179
      99: aload_0
     100: iload         4
     102: putfield      #5                  // Field pos:I
     105: iload         4
     107: iload         6
     109: isub
     110: iconst_1
     111: isub
     112: istore        8
     114: aload_3
     115: ifnonnull     141
     118: iload         8
     120: iconst_1
     121: iadd
     122: iconst_2
     123: imul
     124: istore        9
     126: new           #24                 // class java/lang/StringBuilder
     129: dup
     130: iload         9
     132: bipush        16
     134: invokestatic  #101                // Method java/lang/Math.max:(II)I
     137: invokespecial #102                // Method java/lang/StringBuilder."<init>":(I)V
     140: astore_3
     141: aload_3
     142: aload_2
     143: iload         6
     145: iload         8
     147: invokevirtual #100                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     150: pop
     151: aload_3
     152: aload_0
     153: invokespecial #103                // Method readEscapeCharacter:()C
     156: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     159: pop
     160: aload_0
     161: getfield      #5                  // Field pos:I
     164: istore        4
     166: aload_0
     167: getfield      #6                  // Field limit:I
     170: istore        5
     172: iload         4
     174: istore        6
     176: goto          202
     179: iload         7
     181: bipush        10
     183: if_icmpne     202
     186: aload_0
     187: dup
     188: getfield      #7                  // Field lineNumber:I
     191: iconst_1
     192: iadd
     193: putfield      #7                  // Field lineNumber:I
     196: aload_0
     197: iload         4
     199: putfield      #8                  // Field lineStart:I
     202: goto          23
     205: aload_3
     206: ifnonnull     233
     209: iload         4
     211: iload         6
     213: isub
     214: iconst_2
     215: imul
     216: istore        7
     218: new           #24                 // class java/lang/StringBuilder
     221: dup
     222: iload         7
     224: bipush        16
     226: invokestatic  #101                // Method java/lang/Math.max:(II)I
     229: invokespecial #102                // Method java/lang/StringBuilder."<init>":(I)V
     232: astore_3
     233: aload_3
     234: aload_2
     235: iload         6
     237: iload         4
     239: iload         6
     241: isub
     242: invokevirtual #100                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     245: pop
     246: aload_0
     247: iload         4
     249: putfield      #5                  // Field pos:I
     252: aload_0
     253: iconst_1
     254: invokespecial #55                 // Method fillBuffer:(I)Z
     257: ifne          267
     260: aload_0
     261: ldc           #105                // String Unterminated string
     263: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     266: athrow
     267: goto          7

  private java.lang.String nextUnquotedValue() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #5                  // Field pos:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #6                  // Field limit:I
      14: if_icmpge     181
      17: aload_0
      18: getfield      #4                  // Field buffer:[C
      21: aload_0
      22: getfield      #5                  // Field pos:I
      25: iload_2
      26: iadd
      27: caload
      28: lookupswitch  { // 16
                     9: 172
                    10: 172
                    12: 172
                    13: 172
                    32: 172
                    35: 168
                    44: 172
                    47: 168
                    58: 172
                    59: 168
                    61: 168
                    91: 172
                    92: 168
                    93: 172
                   123: 172
                   125: 172
               default: 175
          }
     168: aload_0
     169: invokespecial #49                 // Method checkLenient:()V
     172: goto          258
     175: iinc          2, 1
     178: goto          4
     181: iload_2
     182: aload_0
     183: getfield      #4                  // Field buffer:[C
     186: arraylength
     187: if_icmpge     203
     190: aload_0
     191: iload_2
     192: iconst_1
     193: iadd
     194: invokespecial #55                 // Method fillBuffer:(I)Z
     197: ifeq          258
     200: goto          4
     203: aload_1
     204: ifnonnull     221
     207: new           #24                 // class java/lang/StringBuilder
     210: dup
     211: iload_2
     212: bipush        16
     214: invokestatic  #101                // Method java/lang/Math.max:(II)I
     217: invokespecial #102                // Method java/lang/StringBuilder."<init>":(I)V
     220: astore_1
     221: aload_1
     222: aload_0
     223: getfield      #4                  // Field buffer:[C
     226: aload_0
     227: getfield      #5                  // Field pos:I
     230: iload_2
     231: invokevirtual #100                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     234: pop
     235: aload_0
     236: dup
     237: getfield      #5                  // Field pos:I
     240: iload_2
     241: iadd
     242: putfield      #5                  // Field pos:I
     245: iconst_0
     246: istore_2
     247: aload_0
     248: iconst_1
     249: invokespecial #55                 // Method fillBuffer:(I)Z
     252: ifne          4
     255: goto          258
     258: aconst_null
     259: aload_1
     260: if_acmpne     282
     263: new           #14                 // class java/lang/String
     266: dup
     267: aload_0
     268: getfield      #4                  // Field buffer:[C
     271: aload_0
     272: getfield      #5                  // Field pos:I
     275: iload_2
     276: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
     279: goto          298
     282: aload_1
     283: aload_0
     284: getfield      #4                  // Field buffer:[C
     287: aload_0
     288: getfield      #5                  // Field pos:I
     291: iload_2
     292: invokevirtual #100                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     295: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: astore_3
     299: aload_0
     300: dup
     301: getfield      #5                  // Field pos:I
     304: iload_2
     305: iadd
     306: putfield      #5                  // Field pos:I
     309: aload_3
     310: areturn

  private void skipQuotedValue(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #6                  // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     98
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: caload
      28: istore        5
      30: iload         5
      32: iload_1
      33: if_icmpne     42
      36: aload_0
      37: iload_3
      38: putfield      #5                  // Field pos:I
      41: return
      42: iload         5
      44: bipush        92
      46: if_icmpne     73
      49: aload_0
      50: iload_3
      51: putfield      #5                  // Field pos:I
      54: aload_0
      55: invokespecial #103                // Method readEscapeCharacter:()C
      58: pop
      59: aload_0
      60: getfield      #5                  // Field pos:I
      63: istore_3
      64: aload_0
      65: getfield      #6                  // Field limit:I
      68: istore        4
      70: goto          95
      73: iload         5
      75: bipush        10
      77: if_icmpne     95
      80: aload_0
      81: dup
      82: getfield      #7                  // Field lineNumber:I
      85: iconst_1
      86: iadd
      87: putfield      #7                  // Field lineNumber:I
      90: aload_0
      91: iload_3
      92: putfield      #8                  // Field lineStart:I
      95: goto          16
      98: aload_0
      99: iload_3
     100: putfield      #5                  // Field pos:I
     103: aload_0
     104: iconst_1
     105: invokespecial #55                 // Method fillBuffer:(I)Z
     108: ifne          5
     111: aload_0
     112: ldc           #105                // String Unterminated string
     114: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     117: athrow

  private void skipUnquotedValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field pos:I
       6: iload_1
       7: iadd
       8: aload_0
       9: getfield      #6                  // Field limit:I
      12: if_icmpge     185
      15: aload_0
      16: getfield      #4                  // Field buffer:[C
      19: aload_0
      20: getfield      #5                  // Field pos:I
      23: iload_1
      24: iadd
      25: caload
      26: lookupswitch  { // 16
                     9: 168
                    10: 168
                    12: 168
                    13: 168
                    32: 168
                    35: 164
                    44: 168
                    47: 164
                    58: 168
                    59: 164
                    61: 164
                    91: 168
                    92: 164
                    93: 168
                   123: 168
                   125: 168
               default: 179
          }
     164: aload_0
     165: invokespecial #49                 // Method checkLenient:()V
     168: aload_0
     169: dup
     170: getfield      #5                  // Field pos:I
     173: iload_1
     174: iadd
     175: putfield      #5                  // Field pos:I
     178: return
     179: iinc          1, 1
     182: goto          2
     185: aload_0
     186: dup
     187: getfield      #5                  // Field pos:I
     190: iload_1
     191: iadd
     192: putfield      #5                  // Field pos:I
     195: aload_0
     196: iconst_1
     197: invokespecial #55                 // Method fillBuffer:(I)Z
     200: ifne          0
     203: return

  public int nextInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field peeked:I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #21                 // Method doPeek:()I
      13: istore_1
      14: iload_1
      15: bipush        15
      17: if_icmpne     95
      20: aload_0
      21: getfield      #77                 // Field peekedLong:J
      24: l2i
      25: istore_2
      26: aload_0
      27: getfield      #77                 // Field peekedLong:J
      30: iload_2
      31: i2l
      32: lcmp
      33: ifeq          73
      36: new           #97                 // class java/lang/NumberFormatException
      39: dup
      40: new           #24                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #106                // String Expected an int but was
      49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #77                 // Field peekedLong:J
      56: invokevirtual #107                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      63: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #99                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: iconst_0
      75: putfield      #10                 // Field peeked:I
      78: aload_0
      79: getfield      #16                 // Field pathIndices:[I
      82: aload_0
      83: getfield      #12                 // Field stackSize:I
      86: iconst_1
      87: isub
      88: dup2
      89: iaload
      90: iconst_1
      91: iadd
      92: iastore
      93: iload_2
      94: ireturn
      95: iload_1
      96: bipush        16
      98: if_icmpne     140
     101: aload_0
     102: new           #14                 // class java/lang/String
     105: dup
     106: aload_0
     107: getfield      #4                  // Field buffer:[C
     110: aload_0
     111: getfield      #5                  // Field pos:I
     114: aload_0
     115: getfield      #78                 // Field peekedNumberLength:I
     118: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
     121: putfield      #82                 // Field peekedString:Ljava/lang/String;
     124: aload_0
     125: dup
     126: getfield      #5                  // Field pos:I
     129: aload_0
     130: getfield      #78                 // Field peekedNumberLength:I
     133: iadd
     134: putfield      #5                  // Field pos:I
     137: goto          267
     140: iload_1
     141: bipush        8
     143: if_icmpeq     158
     146: iload_1
     147: bipush        9
     149: if_icmpeq     158
     152: iload_1
     153: bipush        10
     155: if_icmpne     230
     158: iload_1
     159: bipush        10
     161: if_icmpne     175
     164: aload_0
     165: aload_0
     166: invokespecial #79                 // Method nextUnquotedValue:()Ljava/lang/String;
     169: putfield      #82                 // Field peekedString:Ljava/lang/String;
     172: goto          196
     175: aload_0
     176: aload_0
     177: iload_1
     178: bipush        8
     180: if_icmpne     188
     183: bipush        39
     185: goto          190
     188: bipush        34
     190: invokespecial #80                 // Method nextQuotedValue:(C)Ljava/lang/String;
     193: putfield      #82                 // Field peekedString:Ljava/lang/String;
     196: aload_0
     197: getfield      #82                 // Field peekedString:Ljava/lang/String;
     200: invokestatic  #108                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     203: istore_2
     204: aload_0
     205: iconst_0
     206: putfield      #10                 // Field peeked:I
     209: aload_0
     210: getfield      #16                 // Field pathIndices:[I
     213: aload_0
     214: getfield      #12                 // Field stackSize:I
     217: iconst_1
     218: isub
     219: dup2
     220: iaload
     221: iconst_1
     222: iadd
     223: iastore
     224: iload_2
     225: ireturn
     226: astore_3
     227: goto          267
     230: new           #23                 // class java/lang/IllegalStateException
     233: dup
     234: new           #24                 // class java/lang/StringBuilder
     237: dup
     238: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     241: ldc           #106                // String Expected an int but was
     243: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: aload_0
     247: invokevirtual #28                 // Method peek:()Lcom/google/gson/stream/JsonToken;
     250: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     253: aload_0
     254: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     257: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     263: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     266: athrow
     267: aload_0
     268: bipush        11
     270: putfield      #10                 // Field peeked:I
     273: aload_0
     274: getfield      #82                 // Field peekedString:Ljava/lang/String;
     277: invokestatic  #89                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     280: dstore_3
     281: dload_3
     282: d2i
     283: istore_2
     284: iload_2
     285: i2d
     286: dload_3
     287: dcmpl
     288: ifeq          328
     291: new           #97                 // class java/lang/NumberFormatException
     294: dup
     295: new           #24                 // class java/lang/StringBuilder
     298: dup
     299: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     302: ldc           #106                // String Expected an int but was
     304: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: aload_0
     308: getfield      #82                 // Field peekedString:Ljava/lang/String;
     311: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: aload_0
     315: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     318: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     324: invokespecial #99                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     327: athrow
     328: aload_0
     329: aconst_null
     330: putfield      #82                 // Field peekedString:Ljava/lang/String;
     333: aload_0
     334: iconst_0
     335: putfield      #10                 // Field peeked:I
     338: aload_0
     339: getfield      #16                 // Field pathIndices:[I
     342: aload_0
     343: getfield      #12                 // Field stackSize:I
     346: iconst_1
     347: isub
     348: dup2
     349: iaload
     350: iconst_1
     351: iadd
     352: iastore
     353: iload_2
     354: ireturn
    Exception table:
       from    to  target type
         196   225   226   Class java/lang/NumberFormatException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field peeked:I
       5: aload_0
       6: getfield      #11                 // Field stack:[I
       9: iconst_0
      10: bipush        8
      12: iastore
      13: aload_0
      14: iconst_1
      15: putfield      #12                 // Field stackSize:I
      18: aload_0
      19: getfield      #20                 // Field in:Ljava/io/Reader;
      22: invokevirtual #109                // Method java/io/Reader.close:()V
      25: return

  public void skipValue() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #10                 // Field peeked:I
       6: istore_2
       7: iload_2
       8: ifne          16
      11: aload_0
      12: invokevirtual #21                 // Method doPeek:()I
      15: istore_2
      16: iload_2
      17: iconst_3
      18: if_icmpne     32
      21: aload_0
      22: iconst_1
      23: invokespecial #22                 // Method push:(I)V
      26: iinc          1, 1
      29: goto          170
      32: iload_2
      33: iconst_1
      34: if_icmpne     48
      37: aload_0
      38: iconst_3
      39: invokespecial #22                 // Method push:(I)V
      42: iinc          1, 1
      45: goto          170
      48: iload_2
      49: iconst_4
      50: if_icmpne     69
      53: aload_0
      54: dup
      55: getfield      #12                 // Field stackSize:I
      58: iconst_1
      59: isub
      60: putfield      #12                 // Field stackSize:I
      63: iinc          1, -1
      66: goto          170
      69: iload_2
      70: iconst_2
      71: if_icmpne     90
      74: aload_0
      75: dup
      76: getfield      #12                 // Field stackSize:I
      79: iconst_1
      80: isub
      81: putfield      #12                 // Field stackSize:I
      84: iinc          1, -1
      87: goto          170
      90: iload_2
      91: bipush        14
      93: if_icmpeq     102
      96: iload_2
      97: bipush        10
      99: if_icmpne     109
     102: aload_0
     103: invokespecial #110                // Method skipUnquotedValue:()V
     106: goto          170
     109: iload_2
     110: bipush        8
     112: if_icmpeq     121
     115: iload_2
     116: bipush        12
     118: if_icmpne     130
     121: aload_0
     122: bipush        39
     124: invokespecial #111                // Method skipQuotedValue:(C)V
     127: goto          170
     130: iload_2
     131: bipush        9
     133: if_icmpeq     142
     136: iload_2
     137: bipush        13
     139: if_icmpne     151
     142: aload_0
     143: bipush        34
     145: invokespecial #111                // Method skipQuotedValue:(C)V
     148: goto          170
     151: iload_2
     152: bipush        16
     154: if_icmpne     170
     157: aload_0
     158: dup
     159: getfield      #5                  // Field pos:I
     162: aload_0
     163: getfield      #78                 // Field peekedNumberLength:I
     166: iadd
     167: putfield      #5                  // Field pos:I
     170: aload_0
     171: iconst_0
     172: putfield      #10                 // Field peeked:I
     175: iload_1
     176: ifne          2
     179: aload_0
     180: getfield      #16                 // Field pathIndices:[I
     183: aload_0
     184: getfield      #12                 // Field stackSize:I
     187: iconst_1
     188: isub
     189: dup2
     190: iaload
     191: iconst_1
     192: iadd
     193: iastore
     194: aload_0
     195: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     198: aload_0
     199: getfield      #12                 // Field stackSize:I
     202: iconst_1
     203: isub
     204: ldc           #67                 // String null
     206: aastore
     207: return

  private void push(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field stackSize:I
       4: aload_0
       5: getfield      #11                 // Field stack:[I
       8: arraylength
       9: if_icmpne     58
      12: aload_0
      13: getfield      #12                 // Field stackSize:I
      16: iconst_2
      17: imul
      18: istore_2
      19: aload_0
      20: aload_0
      21: getfield      #11                 // Field stack:[I
      24: iload_2
      25: invokestatic  #112                // Method java/util/Arrays.copyOf:([II)[I
      28: putfield      #11                 // Field stack:[I
      31: aload_0
      32: aload_0
      33: getfield      #16                 // Field pathIndices:[I
      36: iload_2
      37: invokestatic  #112                // Method java/util/Arrays.copyOf:([II)[I
      40: putfield      #16                 // Field pathIndices:[I
      43: aload_0
      44: aload_0
      45: getfield      #15                 // Field pathNames:[Ljava/lang/String;
      48: iload_2
      49: invokestatic  #113                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      52: checkcast     #114                // class "[Ljava/lang/String;"
      55: putfield      #15                 // Field pathNames:[Ljava/lang/String;
      58: aload_0
      59: getfield      #11                 // Field stack:[I
      62: aload_0
      63: dup
      64: getfield      #12                 // Field stackSize:I
      67: dup_x1
      68: iconst_1
      69: iadd
      70: putfield      #12                 // Field stackSize:I
      73: iload_1
      74: iastore
      75: return

  private boolean fillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: dup
       7: getfield      #8                  // Field lineStart:I
      10: aload_0
      11: getfield      #5                  // Field pos:I
      14: isub
      15: putfield      #8                  // Field lineStart:I
      18: aload_0
      19: getfield      #6                  // Field limit:I
      22: aload_0
      23: getfield      #5                  // Field pos:I
      26: if_icmpeq     59
      29: aload_0
      30: dup
      31: getfield      #6                  // Field limit:I
      34: aload_0
      35: getfield      #5                  // Field pos:I
      38: isub
      39: putfield      #6                  // Field limit:I
      42: aload_2
      43: aload_0
      44: getfield      #5                  // Field pos:I
      47: aload_2
      48: iconst_0
      49: aload_0
      50: getfield      #6                  // Field limit:I
      53: invokestatic  #115                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: goto          64
      59: aload_0
      60: iconst_0
      61: putfield      #6                  // Field limit:I
      64: aload_0
      65: iconst_0
      66: putfield      #5                  // Field pos:I
      69: aload_0
      70: getfield      #20                 // Field in:Ljava/io/Reader;
      73: aload_2
      74: aload_0
      75: getfield      #6                  // Field limit:I
      78: aload_2
      79: arraylength
      80: aload_0
      81: getfield      #6                  // Field limit:I
      84: isub
      85: invokevirtual #116                // Method java/io/Reader.read:([CII)I
      88: dup
      89: istore_3
      90: iconst_m1
      91: if_icmpeq     166
      94: aload_0
      95: dup
      96: getfield      #6                  // Field limit:I
      99: iload_3
     100: iadd
     101: putfield      #6                  // Field limit:I
     104: aload_0
     105: getfield      #7                  // Field lineNumber:I
     108: ifne          156
     111: aload_0
     112: getfield      #8                  // Field lineStart:I
     115: ifne          156
     118: aload_0
     119: getfield      #6                  // Field limit:I
     122: ifle          156
     125: aload_2
     126: iconst_0
     127: caload
     128: ldc           #117                // int 65279
     130: if_icmpne     156
     133: aload_0
     134: dup
     135: getfield      #5                  // Field pos:I
     138: iconst_1
     139: iadd
     140: putfield      #5                  // Field pos:I
     143: aload_0
     144: dup
     145: getfield      #8                  // Field lineStart:I
     148: iconst_1
     149: iadd
     150: putfield      #8                  // Field lineStart:I
     153: iinc          1, 1
     156: aload_0
     157: getfield      #6                  // Field limit:I
     160: iload_1
     161: if_icmplt     69
     164: iconst_1
     165: ireturn
     166: iconst_0
     167: ireturn

  private int nextNonWhitespace(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[C
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field pos:I
       9: istore_3
      10: aload_0
      11: getfield      #6                  // Field limit:I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpne     49
      22: aload_0
      23: iload_3
      24: putfield      #5                  // Field pos:I
      27: aload_0
      28: iconst_1
      29: invokespecial #55                 // Method fillBuffer:(I)Z
      32: ifne          38
      35: goto          318
      38: aload_0
      39: getfield      #5                  // Field pos:I
      42: istore_3
      43: aload_0
      44: getfield      #6                  // Field limit:I
      47: istore        4
      49: aload_2
      50: iload_3
      51: iinc          3, 1
      54: caload
      55: istore        5
      57: iload         5
      59: bipush        10
      61: if_icmpne     82
      64: aload_0
      65: dup
      66: getfield      #7                  // Field lineNumber:I
      69: iconst_1
      70: iadd
      71: putfield      #7                  // Field lineNumber:I
      74: aload_0
      75: iload_3
      76: putfield      #8                  // Field lineStart:I
      79: goto          16
      82: iload         5
      84: bipush        32
      86: if_icmpeq     16
      89: iload         5
      91: bipush        13
      93: if_icmpeq     16
      96: iload         5
      98: bipush        9
     100: if_icmpne     106
     103: goto          16
     106: iload         5
     108: bipush        47
     110: if_icmpne     273
     113: aload_0
     114: iload_3
     115: putfield      #5                  // Field pos:I
     118: iload_3
     119: iload         4
     121: if_icmpne     159
     124: aload_0
     125: dup
     126: getfield      #5                  // Field pos:I
     129: iconst_1
     130: isub
     131: putfield      #5                  // Field pos:I
     134: aload_0
     135: iconst_2
     136: invokespecial #55                 // Method fillBuffer:(I)Z
     139: istore        6
     141: aload_0
     142: dup
     143: getfield      #5                  // Field pos:I
     146: iconst_1
     147: iadd
     148: putfield      #5                  // Field pos:I
     151: iload         6
     153: ifne          159
     156: iload         5
     158: ireturn
     159: aload_0
     160: invokespecial #49                 // Method checkLenient:()V
     163: aload_2
     164: aload_0
     165: getfield      #5                  // Field pos:I
     168: caload
     169: istore        6
     171: iload         6
     173: lookupswitch  { // 2
                    42: 200
                    47: 242
               default: 270
          }
     200: aload_0
     201: dup
     202: getfield      #5                  // Field pos:I
     205: iconst_1
     206: iadd
     207: putfield      #5                  // Field pos:I
     210: aload_0
     211: ldc           #118                // String */
     213: invokespecial #119                // Method skipTo:(Ljava/lang/String;)Z
     216: ifne          226
     219: aload_0
     220: ldc           #120                // String Unterminated comment
     222: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     225: athrow
     226: aload_0
     227: getfield      #5                  // Field pos:I
     230: iconst_2
     231: iadd
     232: istore_3
     233: aload_0
     234: getfield      #6                  // Field limit:I
     237: istore        4
     239: goto          16
     242: aload_0
     243: dup
     244: getfield      #5                  // Field pos:I
     247: iconst_1
     248: iadd
     249: putfield      #5                  // Field pos:I
     252: aload_0
     253: invokespecial #121                // Method skipToEndOfLine:()V
     256: aload_0
     257: getfield      #5                  // Field pos:I
     260: istore_3
     261: aload_0
     262: getfield      #6                  // Field limit:I
     265: istore        4
     267: goto          16
     270: iload         5
     272: ireturn
     273: iload         5
     275: bipush        35
     277: if_icmpne     307
     280: aload_0
     281: iload_3
     282: putfield      #5                  // Field pos:I
     285: aload_0
     286: invokespecial #49                 // Method checkLenient:()V
     289: aload_0
     290: invokespecial #121                // Method skipToEndOfLine:()V
     293: aload_0
     294: getfield      #5                  // Field pos:I
     297: istore_3
     298: aload_0
     299: getfield      #6                  // Field limit:I
     302: istore        4
     304: goto          315
     307: aload_0
     308: iload_3
     309: putfield      #5                  // Field pos:I
     312: iload         5
     314: ireturn
     315: goto          16
     318: iload_1
     319: ifeq          352
     322: new           #122                // class java/io/EOFException
     325: dup
     326: new           #24                 // class java/lang/StringBuilder
     329: dup
     330: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     333: ldc           #123                // String End of input
     335: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     338: aload_0
     339: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
     342: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     345: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     348: invokespecial #124                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     351: athrow
     352: iconst_m1
     353: ireturn

  private void checkLenient() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field lenient:Z
       4: ifne          14
       7: aload_0
       8: ldc           #125                // String Use JsonReader.setLenient(true) to accept malformed JSON
      10: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      13: athrow
      14: return

  private void skipToEndOfLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #6                  // Field limit:I
       8: if_icmplt     19
      11: aload_0
      12: iconst_1
      13: invokespecial #55                 // Method fillBuffer:(I)Z
      16: ifeq          75
      19: aload_0
      20: getfield      #4                  // Field buffer:[C
      23: aload_0
      24: dup
      25: getfield      #5                  // Field pos:I
      28: dup_x1
      29: iconst_1
      30: iadd
      31: putfield      #5                  // Field pos:I
      34: caload
      35: istore_1
      36: iload_1
      37: bipush        10
      39: if_icmpne     63
      42: aload_0
      43: dup
      44: getfield      #7                  // Field lineNumber:I
      47: iconst_1
      48: iadd
      49: putfield      #7                  // Field lineNumber:I
      52: aload_0
      53: aload_0
      54: getfield      #5                  // Field pos:I
      57: putfield      #8                  // Field lineStart:I
      60: goto          75
      63: iload_1
      64: bipush        13
      66: if_icmpne     72
      69: goto          75
      72: goto          0
      75: return

  private boolean skipTo(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #69                 // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: getfield      #5                  // Field pos:I
       9: iload_2
      10: iadd
      11: aload_0
      12: getfield      #6                  // Field limit:I
      15: if_icmple     26
      18: aload_0
      19: iload_2
      20: invokespecial #55                 // Method fillBuffer:(I)Z
      23: ifeq          113
      26: aload_0
      27: getfield      #4                  // Field buffer:[C
      30: aload_0
      31: getfield      #5                  // Field pos:I
      34: caload
      35: bipush        10
      37: if_icmpne     63
      40: aload_0
      41: dup
      42: getfield      #7                  // Field lineNumber:I
      45: iconst_1
      46: iadd
      47: putfield      #7                  // Field lineNumber:I
      50: aload_0
      51: aload_0
      52: getfield      #5                  // Field pos:I
      55: iconst_1
      56: iadd
      57: putfield      #8                  // Field lineStart:I
      60: goto          100
      63: iconst_0
      64: istore_3
      65: iload_3
      66: iload_2
      67: if_icmpge     98
      70: aload_0
      71: getfield      #4                  // Field buffer:[C
      74: aload_0
      75: getfield      #5                  // Field pos:I
      78: iload_3
      79: iadd
      80: caload
      81: aload_1
      82: iload_3
      83: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      86: if_icmpeq     92
      89: goto          100
      92: iinc          3, 1
      95: goto          65
      98: iconst_1
      99: ireturn
     100: aload_0
     101: dup
     102: getfield      #5                  // Field pos:I
     105: iconst_1
     106: iadd
     107: putfield      #5                  // Field pos:I
     110: goto          5
     113: iconst_0
     114: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #126                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #127                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  java.lang.String locationString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lineNumber:I
       4: iconst_1
       5: iadd
       6: istore_1
       7: aload_0
       8: getfield      #5                  // Field pos:I
      11: aload_0
      12: getfield      #8                  // Field lineStart:I
      15: isub
      16: iconst_1
      17: iadd
      18: istore_2
      19: new           #24                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #128                // String  at line
      28: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #130                // String  column
      37: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_2
      41: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #131                // String  path
      46: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #132                // Method getPath:()Ljava/lang/String;
      53: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  public java.lang.String getPath();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #12                 // Field stackSize:I
      19: istore_3
      20: iload_2
      21: iload_3
      22: if_icmpge     136
      25: aload_0
      26: getfield      #11                 // Field stack:[I
      29: iload_2
      30: iaload
      31: tableswitch   { // 1 to 8
                     1: 76
                     2: 76
                     3: 100
                     4: 100
                     5: 100
                     6: 130
                     7: 130
                     8: 130
               default: 130
          }
      76: aload_1
      77: bipush        91
      79: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #16                 // Field pathIndices:[I
      86: iload_2
      87: iaload
      88: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: bipush        93
      93: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: goto          130
     100: aload_1
     101: bipush        46
     103: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     111: iload_2
     112: aaload
     113: ifnull        130
     116: aload_1
     117: aload_0
     118: getfield      #15                 // Field pathNames:[Ljava/lang/String;
     121: iload_2
     122: aaload
     123: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: goto          130
     130: iinc          2, 1
     133: goto          20
     136: aload_1
     137: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: areturn

  private char readEscapeCharacter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #6                  // Field limit:I
       8: if_icmpne     26
      11: aload_0
      12: iconst_1
      13: invokespecial #55                 // Method fillBuffer:(I)Z
      16: ifne          26
      19: aload_0
      20: ldc           #133                // String Unterminated escape sequence
      22: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
      25: athrow
      26: aload_0
      27: getfield      #4                  // Field buffer:[C
      30: aload_0
      31: dup
      32: getfield      #5                  // Field pos:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #5                  // Field pos:I
      41: caload
      42: istore_1
      43: iload_1
      44: lookupswitch  { // 11
                    10: 362
                    34: 380
                    39: 380
                    47: 380
                    92: 380
                    98: 350
                   102: 359
                   110: 353
                   114: 356
                   116: 347
                   117: 144
               default: 382
          }
     144: aload_0
     145: getfield      #5                  // Field pos:I
     148: iconst_4
     149: iadd
     150: aload_0
     151: getfield      #6                  // Field limit:I
     154: if_icmple     172
     157: aload_0
     158: iconst_4
     159: invokespecial #55                 // Method fillBuffer:(I)Z
     162: ifne          172
     165: aload_0
     166: ldc           #133                // String Unterminated escape sequence
     168: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     171: athrow
     172: iconst_0
     173: istore_2
     174: aload_0
     175: getfield      #5                  // Field pos:I
     178: istore_3
     179: iload_3
     180: iconst_4
     181: iadd
     182: istore        4
     184: iload_3
     185: iload         4
     187: if_icmpge     335
     190: aload_0
     191: getfield      #4                  // Field buffer:[C
     194: iload_3
     195: caload
     196: istore        5
     198: iload_2
     199: iconst_4
     200: ishl
     201: i2c
     202: istore_2
     203: iload         5
     205: bipush        48
     207: if_icmplt     229
     210: iload         5
     212: bipush        57
     214: if_icmpgt     229
     217: iload_2
     218: iload         5
     220: bipush        48
     222: isub
     223: iadd
     224: i2c
     225: istore_2
     226: goto          329
     229: iload         5
     231: bipush        97
     233: if_icmplt     258
     236: iload         5
     238: bipush        102
     240: if_icmpgt     258
     243: iload_2
     244: iload         5
     246: bipush        97
     248: isub
     249: bipush        10
     251: iadd
     252: iadd
     253: i2c
     254: istore_2
     255: goto          329
     258: iload         5
     260: bipush        65
     262: if_icmplt     287
     265: iload         5
     267: bipush        70
     269: if_icmpgt     287
     272: iload_2
     273: iload         5
     275: bipush        65
     277: isub
     278: bipush        10
     280: iadd
     281: iadd
     282: i2c
     283: istore_2
     284: goto          329
     287: new           #97                 // class java/lang/NumberFormatException
     290: dup
     291: new           #24                 // class java/lang/StringBuilder
     294: dup
     295: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     298: ldc           #134                // String \\u
     300: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: new           #14                 // class java/lang/String
     306: dup
     307: aload_0
     308: getfield      #4                  // Field buffer:[C
     311: aload_0
     312: getfield      #5                  // Field pos:I
     315: iconst_4
     316: invokespecial #84                 // Method java/lang/String."<init>":([CII)V
     319: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     322: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     325: invokespecial #99                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     328: athrow
     329: iinc          3, 1
     332: goto          184
     335: aload_0
     336: dup
     337: getfield      #5                  // Field pos:I
     340: iconst_4
     341: iadd
     342: putfield      #5                  // Field pos:I
     345: iload_2
     346: ireturn
     347: bipush        9
     349: ireturn
     350: bipush        8
     352: ireturn
     353: bipush        10
     355: ireturn
     356: bipush        13
     358: ireturn
     359: bipush        12
     361: ireturn
     362: aload_0
     363: dup
     364: getfield      #7                  // Field lineNumber:I
     367: iconst_1
     368: iadd
     369: putfield      #7                  // Field lineNumber:I
     372: aload_0
     373: aload_0
     374: getfield      #5                  // Field pos:I
     377: putfield      #8                  // Field lineStart:I
     380: iload_1
     381: ireturn
     382: aload_0
     383: ldc           #135                // String Invalid escape sequence
     385: invokespecial #51                 // Method syntaxError:(Ljava/lang/String;)Ljava/io/IOException;
     388: athrow

  private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #92                 // class com/google/gson/stream/MalformedJsonException
       3: dup
       4: new           #24                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #30                 // Method locationString:()Ljava/lang/String;
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokespecial #95                 // Method com/google/gson/stream/MalformedJsonException."<init>":(Ljava/lang/String;)V
      28: athrow

  private void consumeNonExecutePrefix() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #48                 // Method nextNonWhitespace:(Z)I
       5: pop
       6: aload_0
       7: dup
       8: getfield      #5                  // Field pos:I
      11: iconst_1
      12: isub
      13: putfield      #5                  // Field pos:I
      16: aload_0
      17: getfield      #5                  // Field pos:I
      20: getstatic     #136                // Field NON_EXECUTE_PREFIX:[C
      23: arraylength
      24: iadd
      25: aload_0
      26: getfield      #6                  // Field limit:I
      29: if_icmple     44
      32: aload_0
      33: getstatic     #136                // Field NON_EXECUTE_PREFIX:[C
      36: arraylength
      37: invokespecial #55                 // Method fillBuffer:(I)Z
      40: ifne          44
      43: return
      44: iconst_0
      45: istore_1
      46: iload_1
      47: getstatic     #136                // Field NON_EXECUTE_PREFIX:[C
      50: arraylength
      51: if_icmpge     80
      54: aload_0
      55: getfield      #4                  // Field buffer:[C
      58: aload_0
      59: getfield      #5                  // Field pos:I
      62: iload_1
      63: iadd
      64: caload
      65: getstatic     #136                // Field NON_EXECUTE_PREFIX:[C
      68: iload_1
      69: caload
      70: if_icmpeq     74
      73: return
      74: iinc          1, 1
      77: goto          46
      80: aload_0
      81: dup
      82: getfield      #5                  // Field pos:I
      85: getstatic     #136                // Field NON_EXECUTE_PREFIX:[C
      88: arraylength
      89: iadd
      90: putfield      #5                  // Field pos:I
      93: return

  static {};
    Code:
       0: ldc           #137                // String )]}\'\n
       2: invokevirtual #138                // Method java/lang/String.toCharArray:()[C
       5: putstatic     #136                // Field NON_EXECUTE_PREFIX:[C
       8: new           #139                // class com/google/gson/stream/JsonReader$1
      11: dup
      12: invokespecial #140                // Method com/google/gson/stream/JsonReader$1."<init>":()V
      15: putstatic     #141                // Field com/google/gson/internal/JsonReaderInternalAccess.INSTANCE:Lcom/google/gson/internal/JsonReaderInternalAccess;
      18: return
}
