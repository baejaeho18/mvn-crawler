Compiled from "JdkZlibDecoder.java"
public class io.netty.handler.codec.compression.JdkZlibDecoder extends io.netty.handler.codec.compression.ZlibDecoder {
  private static final int FHCRC;

  private static final int FEXTRA;

  private static final int FNAME;

  private static final int FCOMMENT;

  private static final int FRESERVED;

  private java.util.zip.Inflater inflater;

  private final byte[] dictionary;

  private final io.netty.handler.codec.compression.ByteBufChecksum crc;

  private final boolean decompressConcatenated;

  private io.netty.handler.codec.compression.JdkZlibDecoder$GzipState gzipState;

  private int flags;

  private int xlen;

  private volatile boolean finished;

  private boolean decideZlibOrNone;

  static final boolean $assertionsDisabled;

  public io.netty.handler.codec.compression.JdkZlibDecoder();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/netty/handler/codec/compression/ZlibWrapper.ZLIB:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aconst_null
       5: iconst_0
       6: iconst_0
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(int);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/netty/handler/codec/compression/ZlibWrapper.ZLIB:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aconst_null
       5: iconst_0
       6: iload_1
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(byte[]);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/netty/handler/codec/compression/ZlibWrapper.ZLIB:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aload_1
       5: iconst_0
       6: iconst_0
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(byte[], int);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field io/netty/handler/codec/compression/ZlibWrapper.ZLIB:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aload_1
       5: iconst_0
       6: iload_2
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: iconst_0
       5: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
       8: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper, int);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: iload_2
       5: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
       8: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: iconst_0
       5: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
       8: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: iload_3
       5: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
       8: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(boolean);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field io/netty/handler/codec/compression/ZlibWrapper.GZIP:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aconst_null
       5: iload_1
       6: iconst_0
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  public io.netty.handler.codec.compression.JdkZlibDecoder(boolean, int);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field io/netty/handler/codec/compression/ZlibWrapper.GZIP:Lio/netty/handler/codec/compression/ZlibWrapper;
       4: aconst_null
       5: iload_1
       6: iload_2
       7: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/compression/ZlibWrapper;[BZI)V
      10: return

  private io.netty.handler.codec.compression.JdkZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper, byte[], boolean, int);
    Code:
       0: aload_0
       1: iload         4
       3: invokespecial #4                  // Method io/netty/handler/codec/compression/ZlibDecoder."<init>":(I)V
       6: aload_0
       7: getstatic     #5                  // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.HEADER_START:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      10: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      13: aload_0
      14: iconst_m1
      15: putfield      #7                  // Field flags:I
      18: aload_0
      19: iconst_m1
      20: putfield      #8                  // Field xlen:I
      23: aload_1
      24: ldc           #9                  // String wrapper
      26: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: iload_3
      32: putfield      #11                 // Field decompressConcatenated:Z
      35: getstatic     #12                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$1.$SwitchMap$io$netty$handler$codec$compression$ZlibWrapper:[I
      38: aload_1
      39: invokevirtual #13                 // Method io/netty/handler/codec/compression/ZlibWrapper.ordinal:()I
      42: iaload
      43: tableswitch   { // 1 to 4
                     1: 72
                     2: 101
                     3: 121
                     4: 140
               default: 153
          }
      72: aload_0
      73: new           #14                 // class java/util/zip/Inflater
      76: dup
      77: iconst_1
      78: invokespecial #15                 // Method java/util/zip/Inflater."<init>":(Z)V
      81: putfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
      84: aload_0
      85: new           #17                 // class java/util/zip/CRC32
      88: dup
      89: invokespecial #18                 // Method java/util/zip/CRC32."<init>":()V
      92: invokestatic  #19                 // Method io/netty/handler/codec/compression/ByteBufChecksum.wrapChecksum:(Ljava/util/zip/Checksum;)Lio/netty/handler/codec/compression/ByteBufChecksum;
      95: putfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      98: goto          180
     101: aload_0
     102: new           #14                 // class java/util/zip/Inflater
     105: dup
     106: iconst_1
     107: invokespecial #15                 // Method java/util/zip/Inflater."<init>":(Z)V
     110: putfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     113: aload_0
     114: aconst_null
     115: putfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     118: goto          180
     121: aload_0
     122: new           #14                 // class java/util/zip/Inflater
     125: dup
     126: invokespecial #21                 // Method java/util/zip/Inflater."<init>":()V
     129: putfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     132: aload_0
     133: aconst_null
     134: putfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     137: goto          180
     140: aload_0
     141: iconst_1
     142: putfield      #22                 // Field decideZlibOrNone:Z
     145: aload_0
     146: aconst_null
     147: putfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     150: goto          180
     153: new           #23                 // class java/lang/IllegalArgumentException
     156: dup
     157: new           #24                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #26                 // String Only GZIP or ZLIB is supported, but you used
     166: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_1
     170: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: aload_0
     181: aload_2
     182: putfield      #31                 // Field dictionary:[B
     185: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #32                 // Field finished:Z
       4: ireturn

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #32                 // Field finished:Z
       4: ifeq          17
       7: aload_2
       8: aload_2
       9: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      12: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      15: pop
      16: return
      17: aload_2
      18: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      21: istore        4
      23: iload         4
      25: ifne          29
      28: return
      29: aload_0
      30: getfield      #22                 // Field decideZlibOrNone:Z
      33: ifeq          82
      36: iload         4
      38: iconst_2
      39: if_icmpge     43
      42: return
      43: aload_2
      44: aload_2
      45: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      48: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.getShort:(I)S
      51: invokestatic  #37                 // Method looksLikeZlib:(S)Z
      54: ifne          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        5
      64: aload_0
      65: new           #14                 // class java/util/zip/Inflater
      68: dup
      69: iload         5
      71: invokespecial #15                 // Method java/util/zip/Inflater."<init>":(Z)V
      74: putfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
      77: aload_0
      78: iconst_0
      79: putfield      #22                 // Field decideZlibOrNone:Z
      82: aload_0
      83: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      86: ifnull        163
      89: aload_0
      90: getfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      93: getstatic     #38                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.HEADER_END:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      96: if_acmpeq     163
      99: aload_0
     100: getfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     103: getstatic     #39                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.FOOTER_START:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     106: if_acmpne     142
     109: aload_0
     110: aload_2
     111: invokespecial #40                 // Method handleGzipFooter:(Lio/netty/buffer/ByteBuf;)Z
     114: ifne          118
     117: return
     118: getstatic     #41                 // Field $assertionsDisabled:Z
     121: ifne          142
     124: aload_0
     125: getfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     128: getstatic     #5                  // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.HEADER_START:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     131: if_acmpeq     142
     134: new           #42                 // class java/lang/AssertionError
     137: dup
     138: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
     141: athrow
     142: aload_0
     143: aload_2
     144: invokespecial #44                 // Method readGZIPHeader:(Lio/netty/buffer/ByteBuf;)Z
     147: ifne          151
     150: return
     151: aload_2
     152: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     155: istore        4
     157: iload         4
     159: ifne          163
     162: return
     163: aload_0
     164: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     167: invokevirtual #45                 // Method java/util/zip/Inflater.needsInput:()Z
     170: ifeq          231
     173: aload_2
     174: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.hasArray:()Z
     177: ifeq          205
     180: aload_0
     181: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     184: aload_2
     185: invokevirtual #47                 // Method io/netty/buffer/ByteBuf.array:()[B
     188: aload_2
     189: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
     192: aload_2
     193: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     196: iadd
     197: iload         4
     199: invokevirtual #49                 // Method java/util/zip/Inflater.setInput:([BII)V
     202: goto          231
     205: iload         4
     207: newarray       byte
     209: astore        5
     211: aload_2
     212: aload_2
     213: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     216: aload         5
     218: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.getBytes:(I[B)Lio/netty/buffer/ByteBuf;
     221: pop
     222: aload_0
     223: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     226: aload         5
     228: invokevirtual #51                 // Method java/util/zip/Inflater.setInput:([B)V
     231: aload_0
     232: aload_1
     233: aconst_null
     234: aload_0
     235: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     238: invokevirtual #52                 // Method java/util/zip/Inflater.getRemaining:()I
     241: iconst_1
     242: ishl
     243: invokevirtual #53                 // Method prepareDecompressBuffer:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     246: astore        5
     248: iconst_0
     249: istore        6
     251: aload_0
     252: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     255: invokevirtual #45                 // Method java/util/zip/Inflater.needsInput:()Z
     258: ifne          436
     261: aload         5
     263: invokevirtual #47                 // Method io/netty/buffer/ByteBuf.array:()[B
     266: astore        7
     268: aload         5
     270: invokevirtual #54                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     273: istore        8
     275: aload         5
     277: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
     280: iload         8
     282: iadd
     283: istore        9
     285: aload         5
     287: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     290: istore        10
     292: aload_0
     293: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     296: aload         7
     298: iload         9
     300: iload         10
     302: invokevirtual #56                 // Method java/util/zip/Inflater.inflate:([BII)I
     305: istore        11
     307: iload         11
     309: ifle          346
     312: aload         5
     314: iload         8
     316: iload         11
     318: iadd
     319: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     322: pop
     323: aload_0
     324: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     327: ifnull        384
     330: aload_0
     331: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     334: aload         7
     336: iload         9
     338: iload         11
     340: invokevirtual #58                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:([BII)V
     343: goto          384
     346: aload_0
     347: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     350: invokevirtual #59                 // Method java/util/zip/Inflater.needsDictionary:()Z
     353: ifeq          384
     356: aload_0
     357: getfield      #31                 // Field dictionary:[B
     360: ifnonnull     373
     363: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
     366: dup
     367: ldc           #61                 // String decompression failure, unable to set dictionary as non was specified
     369: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     372: athrow
     373: aload_0
     374: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     377: aload_0
     378: getfield      #31                 // Field dictionary:[B
     381: invokevirtual #63                 // Method java/util/zip/Inflater.setDictionary:([B)V
     384: aload_0
     385: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     388: invokevirtual #64                 // Method java/util/zip/Inflater.finished:()Z
     391: ifeq          415
     394: aload_0
     395: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     398: ifnonnull     409
     401: aload_0
     402: iconst_1
     403: putfield      #32                 // Field finished:Z
     406: goto          436
     409: iconst_1
     410: istore        6
     412: goto          436
     415: aload_0
     416: aload_1
     417: aload         5
     419: aload_0
     420: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     423: invokevirtual #52                 // Method java/util/zip/Inflater.getRemaining:()I
     426: iconst_1
     427: ishl
     428: invokevirtual #53                 // Method prepareDecompressBuffer:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     431: astore        5
     433: goto          251
     436: aload_2
     437: iload         4
     439: aload_0
     440: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
     443: invokevirtual #52                 // Method java/util/zip/Inflater.getRemaining:()I
     446: isub
     447: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     450: pop
     451: iload         6
     453: ifeq          469
     456: aload_0
     457: getstatic     #39                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.FOOTER_START:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     460: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     463: aload_0
     464: aload_2
     465: invokespecial #40                 // Method handleGzipFooter:(Lio/netty/buffer/ByteBuf;)Z
     468: pop
     469: aload         5
     471: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     474: ifeq          489
     477: aload_3
     478: aload         5
     480: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     485: pop
     486: goto          543
     489: aload         5
     491: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.release:()Z
     494: pop
     495: goto          543
     498: astore        6
     500: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
     503: dup
     504: ldc           #69                 // String decompression failure
     506: aload         6
     508: invokespecial #70                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     511: athrow
     512: astore        12
     514: aload         5
     516: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     519: ifeq          534
     522: aload_3
     523: aload         5
     525: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     530: pop
     531: goto          540
     534: aload         5
     536: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.release:()Z
     539: pop
     540: aload         12
     542: athrow
     543: return
    Exception table:
       from    to  target type
         248   469   498   Class java/util/zip/DataFormatException
         248   469   512   any
         498   514   512   any

  private boolean handleGzipFooter(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // Method readGZIPFooter:(Lio/netty/buffer/ByteBuf;)Z
       5: ifeq          54
       8: aload_0
       9: aload_0
      10: getfield      #11                 // Field decompressConcatenated:Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: putfield      #32                 // Field finished:Z
      24: aload_0
      25: getfield      #32                 // Field finished:Z
      28: ifne          54
      31: aload_0
      32: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
      35: invokevirtual #72                 // Method java/util/zip/Inflater.reset:()V
      38: aload_0
      39: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      42: invokevirtual #73                 // Method io/netty/handler/codec/compression/ByteBufChecksum.reset:()V
      45: aload_0
      46: getstatic     #5                  // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.HEADER_START:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      49: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
      52: iconst_1
      53: ireturn
      54: iconst_0
      55: ireturn

  protected void decompressionBufferExhausted(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #32                 // Field finished:Z
       5: return

  protected void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #74                 // Method io/netty/handler/codec/compression/ZlibDecoder.handlerRemoved0:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
       9: ifnull        19
      12: aload_0
      13: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
      16: invokevirtual #75                 // Method java/util/zip/Inflater.end:()V
      19: return

  private boolean readGZIPHeader(io.netty.buffer.ByteBuf);
    Code:
       0: getstatic     #76                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$1.$SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState:[I
       3: aload_0
       4: getfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
       7: invokevirtual #77                 // Method io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 7
                     1: 52
                     2: 248
                     3: 321
                     4: 374
                     5: 393
                     6: 412
                     7: 445
               default: 447
          }
      52: aload_1
      53: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      56: bipush        10
      58: if_icmpge     63
      61: iconst_0
      62: ireturn
      63: aload_1
      64: invokevirtual #78                 // Method io/netty/buffer/ByteBuf.readByte:()B
      67: istore_2
      68: aload_1
      69: invokevirtual #78                 // Method io/netty/buffer/ByteBuf.readByte:()B
      72: istore_3
      73: iload_2
      74: bipush        31
      76: if_icmpeq     89
      79: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
      82: dup
      83: ldc           #79                 // String Input is not in the GZIP format
      85: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      93: iload_2
      94: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
      97: aload_0
      98: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     101: iload_3
     102: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     105: aload_1
     106: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     109: istore        4
     111: iload         4
     113: bipush        8
     115: if_icmpeq     151
     118: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
     121: dup
     122: new           #24                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #83                 // String Unsupported compression method
     131: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: iload         4
     136: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: ldc           #85                 // String  in the GZIP header
     141: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: aload_0
     152: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     155: iload         4
     157: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     160: aload_0
     161: aload_1
     162: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     165: putfield      #7                  // Field flags:I
     168: aload_0
     169: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     172: aload_0
     173: getfield      #7                  // Field flags:I
     176: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     179: aload_0
     180: getfield      #7                  // Field flags:I
     183: sipush        224
     186: iand
     187: ifeq          200
     190: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
     193: dup
     194: ldc           #87                 // String Reserved flags are set in the GZIP header
     196: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     199: athrow
     200: aload_0
     201: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     204: aload_1
     205: aload_1
     206: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     209: iconst_4
     210: invokevirtual #88                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(Lio/netty/buffer/ByteBuf;II)V
     213: aload_1
     214: iconst_4
     215: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     218: pop
     219: aload_0
     220: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     223: aload_1
     224: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     227: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     230: aload_0
     231: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     234: aload_1
     235: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     238: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     241: aload_0
     242: getstatic     #89                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.FLG_READ:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     245: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     248: aload_0
     249: getfield      #7                  // Field flags:I
     252: iconst_4
     253: iand
     254: ifeq          314
     257: aload_1
     258: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     261: iconst_2
     262: if_icmpge     267
     265: iconst_0
     266: ireturn
     267: aload_1
     268: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     271: istore        5
     273: aload_1
     274: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
     277: istore        6
     279: aload_0
     280: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     283: iload         5
     285: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     288: aload_0
     289: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     292: iload         6
     294: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
     297: aload_0
     298: dup
     299: getfield      #8                  // Field xlen:I
     302: iload         5
     304: bipush        8
     306: ishl
     307: iload         6
     309: ior
     310: ior
     311: putfield      #8                  // Field xlen:I
     314: aload_0
     315: getstatic     #90                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.XLEN_READ:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     318: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     321: aload_0
     322: getfield      #8                  // Field xlen:I
     325: iconst_m1
     326: if_icmpeq     367
     329: aload_1
     330: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     333: aload_0
     334: getfield      #8                  // Field xlen:I
     337: if_icmpge     342
     340: iconst_0
     341: ireturn
     342: aload_0
     343: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     346: aload_1
     347: aload_1
     348: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     351: aload_0
     352: getfield      #8                  // Field xlen:I
     355: invokevirtual #88                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(Lio/netty/buffer/ByteBuf;II)V
     358: aload_1
     359: aload_0
     360: getfield      #8                  // Field xlen:I
     363: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     366: pop
     367: aload_0
     368: getstatic     #91                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.SKIP_FNAME:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     371: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     374: aload_0
     375: aload_1
     376: bipush        8
     378: invokespecial #92                 // Method skipIfNeeded:(Lio/netty/buffer/ByteBuf;I)Z
     381: ifne          386
     384: iconst_0
     385: ireturn
     386: aload_0
     387: getstatic     #93                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.SKIP_COMMENT:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     390: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     393: aload_0
     394: aload_1
     395: bipush        16
     397: invokespecial #92                 // Method skipIfNeeded:(Lio/netty/buffer/ByteBuf;I)Z
     400: ifne          405
     403: iconst_0
     404: ireturn
     405: aload_0
     406: getstatic     #94                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.PROCESS_FHCRC:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     409: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     412: aload_0
     413: getfield      #7                  // Field flags:I
     416: iconst_2
     417: iand
     418: ifeq          431
     421: aload_0
     422: aload_1
     423: invokespecial #95                 // Method verifyCrc:(Lio/netty/buffer/ByteBuf;)Z
     426: ifne          431
     429: iconst_0
     430: ireturn
     431: aload_0
     432: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
     435: invokevirtual #73                 // Method io/netty/handler/codec/compression/ByteBufChecksum.reset:()V
     438: aload_0
     439: getstatic     #38                 // Field io/netty/handler/codec/compression/JdkZlibDecoder$GzipState.HEADER_END:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     442: putfield      #6                  // Field gzipState:Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;
     445: iconst_1
     446: ireturn
     447: new           #96                 // class java/lang/IllegalStateException
     450: dup
     451: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":()V
     454: athrow

  private boolean skipIfNeeded(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:I
       4: iload_2
       5: iand
       6: ifeq          41
       9: aload_1
      10: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      22: istore_3
      23: aload_0
      24: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      27: iload_3
      28: invokevirtual #80                 // Method io/netty/handler/codec/compression/ByteBufChecksum.update:(I)V
      31: iload_3
      32: ifne          38
      35: goto          41
      38: goto          9
      41: iconst_1
      42: ireturn

  private boolean readGZIPFooter(io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: bipush        8
       6: if_icmpge     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: aload_1
      13: invokespecial #95                 // Method verifyCrc:(Lio/netty/buffer/ByteBuf;)Z
      16: istore_2
      17: getstatic     #41                 // Field $assertionsDisabled:Z
      20: ifne          35
      23: iload_2
      24: ifne          35
      27: new           #42                 // class java/lang/AssertionError
      30: dup
      31: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: iconst_0
      36: istore_3
      37: iconst_0
      38: istore        4
      40: iload         4
      42: iconst_4
      43: if_icmpge     65
      46: iload_3
      47: aload_1
      48: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      51: iload         4
      53: bipush        8
      55: imul
      56: ishl
      57: ior
      58: istore_3
      59: iinc          4, 1
      62: goto          40
      65: aload_0
      66: getfield      #16                 // Field inflater:Ljava/util/zip/Inflater;
      69: invokevirtual #98                 // Method java/util/zip/Inflater.getTotalOut:()I
      72: istore        4
      74: iload_3
      75: iload         4
      77: if_icmpeq     117
      80: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
      83: dup
      84: new           #24                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #99                 // String Number of bytes mismatch. Expected:
      93: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: iload_3
      97: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: ldc           #100                // String , Got:
     102: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: iload         4
     107: invokevirtual #84                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     110: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: iconst_1
     118: ireturn

  private boolean verifyCrc(io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_4
       5: if_icmpge     10
       8: iconst_0
       9: ireturn
      10: lconst_0
      11: lstore_2
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iconst_4
      18: if_icmpge     41
      21: lload_2
      22: aload_1
      23: invokevirtual #81                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      26: i2l
      27: iload         4
      29: bipush        8
      31: imul
      32: lshl
      33: lor
      34: lstore_2
      35: iinc          4, 1
      38: goto          15
      41: aload_0
      42: getfield      #20                 // Field crc:Lio/netty/handler/codec/compression/ByteBufChecksum;
      45: invokevirtual #101                // Method io/netty/handler/codec/compression/ByteBufChecksum.getValue:()J
      48: lstore        4
      50: lload_2
      51: lload         4
      53: lcmp
      54: ifeq          94
      57: new           #60                 // class io/netty/handler/codec/compression/DecompressionException
      60: dup
      61: new           #24                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #102                // String CRC value mismatch. Expected:
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: lload_2
      74: invokevirtual #103                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      77: ldc           #100                // String , Got:
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: lload         4
      84: invokevirtual #103                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      87: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #62                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: iconst_1
      95: ireturn

  private static boolean looksLikeZlib(short);
    Code:
       0: iload_0
       1: sipush        30720
       4: iand
       5: sipush        30720
       8: if_icmpne     22
      11: iload_0
      12: bipush        31
      14: irem
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  static {};
    Code:
       0: ldc           #86                 // class io/netty/handler/codec/compression/JdkZlibDecoder
       2: invokevirtual #104                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #41                 // Field $assertionsDisabled:Z
      16: return
}
