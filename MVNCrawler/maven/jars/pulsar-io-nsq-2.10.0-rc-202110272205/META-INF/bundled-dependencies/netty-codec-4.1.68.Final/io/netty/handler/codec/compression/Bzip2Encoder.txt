Compiled from "Bzip2Encoder.java"
public class io.netty.handler.codec.compression.Bzip2Encoder extends io.netty.handler.codec.MessageToByteEncoder<io.netty.buffer.ByteBuf> {
  private io.netty.handler.codec.compression.Bzip2Encoder$State currentState;

  private final io.netty.handler.codec.compression.Bzip2BitWriter writer;

  private final int streamBlockSize;

  private int streamCRC;

  private io.netty.handler.codec.compression.Bzip2BlockCompressor blockCompressor;

  private volatile boolean finished;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  public io.netty.handler.codec.compression.Bzip2Encoder();
    Code:
       0: aload_0
       1: bipush        9
       3: invokespecial #4                  // Method "<init>":(I)V
       6: return

  public io.netty.handler.codec.compression.Bzip2Encoder(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/netty/handler/codec/MessageToByteEncoder."<init>":()V
       4: aload_0
       5: getstatic     #6                  // Field io/netty/handler/codec/compression/Bzip2Encoder$State.INIT:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
       8: putfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
      11: aload_0
      12: new           #8                  // class io/netty/handler/codec/compression/Bzip2BitWriter
      15: dup
      16: invokespecial #9                  // Method io/netty/handler/codec/compression/Bzip2BitWriter."<init>":()V
      19: putfield      #10                 // Field writer:Lio/netty/handler/codec/compression/Bzip2BitWriter;
      22: iload_1
      23: iconst_1
      24: if_icmplt     33
      27: iload_1
      28: bipush        9
      30: if_icmple     65
      33: new           #11                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #12                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #14                 // String blockSizeMultiplier:
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_1
      50: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #17                 // String  (expected: 1-9)
      55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: iload_1
      67: ldc           #20                 // int 100000
      69: imul
      70: putfield      #21                 // Field streamBlockSize:I
      73: return

  protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #22                 // Field finished:Z
       4: ifeq          14
       7: aload_3
       8: aload_2
       9: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      12: pop
      13: return
      14: getstatic     #24                 // Field io/netty/handler/codec/compression/Bzip2Encoder$4.$SwitchMap$io$netty$handler$codec$compression$Bzip2Encoder$State:[I
      17: aload_0
      18: getfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
      21: invokevirtual #25                 // Method io/netty/handler/codec/compression/Bzip2Encoder$State.ordinal:()I
      24: iaload
      25: tableswitch   { // 1 to 4
                     1: 56
                     2: 91
                     3: 117
                     4: 192
               default: 207
          }
      56: aload_3
      57: iconst_4
      58: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
      61: pop
      62: aload_3
      63: ldc           #27                 // int 4348520
      65: invokevirtual #28                 // Method io/netty/buffer/ByteBuf.writeMedium:(I)Lio/netty/buffer/ByteBuf;
      68: pop
      69: aload_3
      70: bipush        48
      72: aload_0
      73: getfield      #21                 // Field streamBlockSize:I
      76: ldc           #20                 // int 100000
      78: idiv
      79: iadd
      80: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      83: pop
      84: aload_0
      85: getstatic     #30                 // Field io/netty/handler/codec/compression/Bzip2Encoder$State.INIT_BLOCK:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
      88: putfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
      91: aload_0
      92: new           #31                 // class io/netty/handler/codec/compression/Bzip2BlockCompressor
      95: dup
      96: aload_0
      97: getfield      #10                 // Field writer:Lio/netty/handler/codec/compression/Bzip2BitWriter;
     100: aload_0
     101: getfield      #21                 // Field streamBlockSize:I
     104: invokespecial #32                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor."<init>":(Lio/netty/handler/codec/compression/Bzip2BitWriter;I)V
     107: putfield      #33                 // Field blockCompressor:Lio/netty/handler/codec/compression/Bzip2BlockCompressor;
     110: aload_0
     111: getstatic     #34                 // Field io/netty/handler/codec/compression/Bzip2Encoder$State.WRITE_DATA:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     114: putfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     117: aload_2
     118: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     121: ifne          125
     124: return
     125: aload_0
     126: getfield      #33                 // Field blockCompressor:Lio/netty/handler/codec/compression/Bzip2BlockCompressor;
     129: astore        4
     131: aload_2
     132: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     135: aload         4
     137: invokevirtual #37                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.availableSize:()I
     140: invokestatic  #38                 // Method java/lang/Math.min:(II)I
     143: istore        5
     145: aload         4
     147: aload_2
     148: aload_2
     149: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     152: iload         5
     154: invokevirtual #40                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.write:(Lio/netty/buffer/ByteBuf;II)I
     157: istore        6
     159: aload_2
     160: iload         6
     162: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     165: pop
     166: aload         4
     168: invokevirtual #42                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.isFull:()Z
     171: ifne          185
     174: aload_2
     175: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     178: ifeq          184
     181: goto          14
     184: return
     185: aload_0
     186: getstatic     #43                 // Field io/netty/handler/codec/compression/Bzip2Encoder$State.CLOSE_BLOCK:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     189: putfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     192: aload_0
     193: aload_3
     194: invokespecial #44                 // Method closeBlock:(Lio/netty/buffer/ByteBuf;)V
     197: aload_0
     198: getstatic     #30                 // Field io/netty/handler/codec/compression/Bzip2Encoder$State.INIT_BLOCK:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     201: putfield      #7                  // Field currentState:Lio/netty/handler/codec/compression/Bzip2Encoder$State;
     204: goto          14
     207: new           #45                 // class java/lang/IllegalStateException
     210: dup
     211: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":()V
     214: athrow

  private void closeBlock(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #33                 // Field blockCompressor:Lio/netty/handler/codec/compression/Bzip2BlockCompressor;
       4: astore_2
       5: aload_2
       6: invokevirtual #47                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.isEmpty:()Z
       9: ifne          42
      12: aload_2
      13: aload_1
      14: invokevirtual #48                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.close:(Lio/netty/buffer/ByteBuf;)V
      17: aload_2
      18: invokevirtual #49                 // Method io/netty/handler/codec/compression/Bzip2BlockCompressor.crc:()I
      21: istore_3
      22: aload_0
      23: aload_0
      24: getfield      #50                 // Field streamCRC:I
      27: iconst_1
      28: ishl
      29: aload_0
      30: getfield      #50                 // Field streamCRC:I
      33: bipush        31
      35: iushr
      36: ior
      37: iload_3
      38: ixor
      39: putfield      #50                 // Field streamCRC:I
      42: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #22                 // Field finished:Z
       4: ireturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #3                  // Method ctx:()Lio/netty/channel/ChannelHandlerContext;
       5: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      10: invokevirtual #52                 // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ctx:()Lio/netty/channel/ChannelHandlerContext;
       4: astore_2
       5: aload_2
       6: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: astore_3
      12: aload_3
      13: invokeinterface #54,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          28
      21: aload_0
      22: aload_2
      23: aload_1
      24: invokespecial #2                  // Method finishEncode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      27: areturn
      28: aload_3
      29: new           #55                 // class io/netty/handler/codec/compression/Bzip2Encoder$1
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #56                 // Method io/netty/handler/codec/compression/Bzip2Encoder$1."<init>":(Lio/netty/handler/codec/compression/Bzip2Encoder;Lio/netty/channel/ChannelPromise;)V
      38: invokeinterface #57,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      43: aload_1
      44: areturn

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
       8: invokespecial #2                  // Method finishEncode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: astore_3
      12: aload_3
      13: new           #58                 // class io/netty/handler/codec/compression/Bzip2Encoder$2
      16: dup
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #59                 // Method io/netty/handler/codec/compression/Bzip2Encoder$2."<init>":(Lio/netty/handler/codec/compression/Bzip2Encoder;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      23: invokeinterface #60,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      28: pop
      29: aload_3
      30: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      35: ifne          66
      38: aload_1
      39: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      44: new           #62                 // class io/netty/handler/codec/compression/Bzip2Encoder$3
      47: dup
      48: aload_0
      49: aload_1
      50: aload_2
      51: invokespecial #63                 // Method io/netty/handler/codec/compression/Bzip2Encoder$3."<init>":(Lio/netty/handler/codec/compression/Bzip2Encoder;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      54: ldc2_w        #64                 // long 10l
      57: getstatic     #66                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      60: invokeinterface #67,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      65: pop
      66: return

  private io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #22                 // Field finished:Z
       4: ifeq          16
       7: aload_2
       8: invokeinterface #68,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      13: pop
      14: aload_2
      15: areturn
      16: aload_0
      17: iconst_1
      18: putfield      #22                 // Field finished:Z
      21: aload_1
      22: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      27: invokeinterface #70,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:()Lio/netty/buffer/ByteBuf;
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokespecial #44                 // Method closeBlock:(Lio/netty/buffer/ByteBuf;)V
      38: aload_0
      39: getfield      #50                 // Field streamCRC:I
      42: istore        4
      44: aload_0
      45: getfield      #10                 // Field writer:Lio/netty/handler/codec/compression/Bzip2BitWriter;
      48: astore        5
      50: aload         5
      52: aload_3
      53: bipush        24
      55: ldc2_w        #71                 // long 1536581l
      58: invokevirtual #73                 // Method io/netty/handler/codec/compression/Bzip2BitWriter.writeBits:(Lio/netty/buffer/ByteBuf;IJ)V
      61: aload         5
      63: aload_3
      64: bipush        24
      66: ldc2_w        #74                 // long 3690640l
      69: invokevirtual #73                 // Method io/netty/handler/codec/compression/Bzip2BitWriter.writeBits:(Lio/netty/buffer/ByteBuf;IJ)V
      72: aload         5
      74: aload_3
      75: iload         4
      77: invokevirtual #76                 // Method io/netty/handler/codec/compression/Bzip2BitWriter.writeInt:(Lio/netty/buffer/ByteBuf;I)V
      80: aload         5
      82: aload_3
      83: invokevirtual #77                 // Method io/netty/handler/codec/compression/Bzip2BitWriter.flush:(Lio/netty/buffer/ByteBuf;)V
      86: aload_0
      87: aconst_null
      88: putfield      #33                 // Field blockCompressor:Lio/netty/handler/codec/compression/Bzip2BlockCompressor;
      91: goto          104
      94: astore        6
      96: aload_0
      97: aconst_null
      98: putfield      #33                 // Field blockCompressor:Lio/netty/handler/codec/compression/Bzip2BlockCompressor;
     101: aload         6
     103: athrow
     104: aload_1
     105: aload_3
     106: aload_2
     107: invokeinterface #78,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     112: areturn
    Exception table:
       from    to  target type
          50    86    94   any
          94    96    94   any

  private io.netty.channel.ChannelHandlerContext ctx();
    Code:
       0: aload_0
       1: getfield      #79                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #45                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #80                 // String not added to a pipeline
      15: invokespecial #81                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: areturn

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: return

  protected void encode(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #82                 // class io/netty/buffer/ByteBuf
       6: aload_3
       7: invokevirtual #83                 // Method encode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
      10: return

  static io.netty.channel.ChannelHandlerContext access$000(io.netty.handler.codec.compression.Bzip2Encoder);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method ctx:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static io.netty.channel.ChannelFuture access$100(io.netty.handler.codec.compression.Bzip2Encoder, io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method finishEncode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       6: areturn
}
