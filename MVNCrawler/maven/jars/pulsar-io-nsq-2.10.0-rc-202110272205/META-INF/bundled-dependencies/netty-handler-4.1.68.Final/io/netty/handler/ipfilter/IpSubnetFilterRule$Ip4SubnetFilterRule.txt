Compiled from "IpSubnetFilterRule.java"
final class io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule implements io.netty.handler.ipfilter.IpFilterRule {
  private final int networkAddress;

  private final int subnetMask;

  private final io.netty.handler.ipfilter.IpFilterRuleType ruleType;

  private io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule(java.net.Inet4Address, int, io.netty.handler.ipfilter.IpFilterRuleType);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: iflt          14
       8: iload_2
       9: bipush        32
      11: if_icmple     38
      14: new           #5                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #6                  // String IPv4 requires the subnet prefix to be in range of [0,32]. The prefix was: %d
      20: iconst_1
      21: anewarray     #7                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_2
      27: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iload_2
      40: invokestatic  #11                 // Method prefixToSubnetMask:(I)I
      43: putfield      #1                  // Field subnetMask:I
      46: aload_0
      47: aload_1
      48: invokestatic  #12                 // Method io/netty/util/NetUtil.ipv4AddressToInt:(Ljava/net/Inet4Address;)I
      51: aload_0
      52: getfield      #1                  // Field subnetMask:I
      55: iand
      56: putfield      #2                  // Field networkAddress:I
      59: aload_0
      60: aload_3
      61: putfield      #13                 // Field ruleType:Lio/netty/handler/ipfilter/IpFilterRuleType;
      64: return

  public boolean matches(java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
       4: astore_2
       5: aload_2
       6: instanceof    #15                 // class java/net/Inet4Address
       9: ifeq          39
      12: aload_2
      13: checkcast     #15                 // class java/net/Inet4Address
      16: invokestatic  #12                 // Method io/netty/util/NetUtil.ipv4AddressToInt:(Ljava/net/Inet4Address;)I
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #1                  // Field subnetMask:I
      25: iand
      26: aload_0
      27: getfield      #2                  // Field networkAddress:I
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn
      39: iconst_0
      40: ireturn

  public io.netty.handler.ipfilter.IpFilterRuleType ruleType();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ruleType:Lio/netty/handler/ipfilter/IpFilterRuleType;
       4: areturn

  private static int prefixToSubnetMask(int);
    Code:
       0: ldc2_w        #16                 // long -1l
       3: bipush        32
       5: iload_0
       6: isub
       7: lshl
       8: l2i
       9: ireturn

  io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule(java.net.Inet4Address, int, io.netty.handler.ipfilter.IpFilterRuleType, io.netty.handler.ipfilter.IpSubnetFilterRule$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #3                  // Method "<init>":(Ljava/net/Inet4Address;ILio/netty/handler/ipfilter/IpFilterRuleType;)V
       7: return

  static int access$200(io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule);
    Code:
       0: aload_0
       1: getfield      #2                  // Field networkAddress:I
       4: ireturn

  static int access$400(io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule);
    Code:
       0: aload_0
       1: getfield      #1                  // Field subnetMask:I
       4: ireturn
}
