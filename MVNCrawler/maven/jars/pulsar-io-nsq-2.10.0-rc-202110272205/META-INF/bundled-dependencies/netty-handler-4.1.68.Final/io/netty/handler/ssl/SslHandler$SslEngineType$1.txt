Compiled from "SslHandler.java"
final class io.netty.handler.ssl.SslHandler$SslEngineType$1 extends io.netty.handler.ssl.SslHandler$SslEngineType {
  io.netty.handler.ssl.SslHandler$SslEngineType$1(java.lang.String, int, boolean, io.netty.handler.codec.ByteToMessageDecoder$Cumulator);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #1                  // Method io/netty/handler/ssl/SslHandler$SslEngineType."<init>":(Ljava/lang/String;IZLio/netty/handler/codec/ByteToMessageDecoder$Cumulator;Lio/netty/handler/ssl/SslHandler$1;)V
      10: return

  javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBuf, int, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: istore        5
       6: aload         4
       8: invokevirtual #3                  // Method io/netty/buffer/ByteBuf.writerIndex:()I
      11: istore        6
      13: iload         5
      15: iconst_1
      16: if_icmple     91
      19: aload_1
      20: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      23: checkcast     #5                  // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      26: astore        8
      28: aload_1
      29: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      32: iconst_0
      33: aload         4
      35: iload         6
      37: aload         4
      39: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
      42: invokestatic  #8                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
      45: aastore
      46: aload         8
      48: aload_2
      49: aload_2
      50: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      53: iload_3
      54: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      57: aload_1
      58: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      61: invokevirtual #11                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.unwrap:([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      64: astore        7
      66: aload_1
      67: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      70: iconst_0
      71: aconst_null
      72: aastore
      73: goto          88
      76: astore        9
      78: aload_1
      79: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)[Ljava/nio/ByteBuffer;
      82: iconst_0
      83: aconst_null
      84: aastore
      85: aload         9
      87: athrow
      88: goto          121
      91: aload_1
      92: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      95: aload_2
      96: aload_2
      97: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
     100: iload_3
     101: invokestatic  #8                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     104: aload         4
     106: iload         6
     108: aload         4
     110: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
     113: invokestatic  #8                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     116: invokevirtual #12                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     119: astore        7
     121: aload         4
     123: iload         6
     125: aload         7
     127: invokevirtual #13                 // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     130: iadd
     131: invokevirtual #14                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     134: pop
     135: aload         7
     137: areturn
    Exception table:
       from    to  target type
          28    66    76   any
          76    78    76   any

  io.netty.buffer.ByteBuf allocateWrapBuffer(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBufAllocator, int, int);
    Code:
       0: aload_2
       1: aload_1
       2: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
       5: checkcast     #5                  // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
       8: iload_3
       9: iload         4
      11: invokevirtual #15                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.calculateMaxLengthForWrap:(II)I
      14: invokeinterface #16,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      19: areturn

  int calculatePendingData(io.netty.handler.ssl.SslHandler, int);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
       4: checkcast     #5                  // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
       7: invokevirtual #17                 // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.sslPending:()I
      10: istore_3
      11: iload_3
      12: ifle          19
      15: iload_3
      16: goto          20
      19: iload_2
      20: ireturn

  boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine);
    Code:
       0: aload_1
       1: checkcast     #5                  // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
       4: getfield      #18                 // Field io/netty/handler/ssl/ReferenceCountedOpenSslEngine.jdkCompatibilityMode:Z
       7: ireturn
}
