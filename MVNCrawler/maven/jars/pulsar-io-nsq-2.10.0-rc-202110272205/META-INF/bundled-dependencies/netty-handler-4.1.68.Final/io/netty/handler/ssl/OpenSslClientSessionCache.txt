Compiled from "OpenSslClientSessionCache.java"
final class io.netty.handler.ssl.OpenSslClientSessionCache extends io.netty.handler.ssl.OpenSslSessionCache {
  private final java.util.Map<io.netty.handler.ssl.OpenSslClientSessionCache$HostPort, io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession> sessions;

  static final boolean $assertionsDisabled;

  io.netty.handler.ssl.OpenSslClientSessionCache(io.netty.handler.ssl.OpenSslEngineMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/handler/ssl/OpenSslSessionCache."<init>":(Lio/netty/handler/ssl/OpenSslEngineMap;)V
       5: aload_0
       6: new           #2                  // class java/util/HashMap
       9: dup
      10: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      13: putfield      #4                  // Field sessions:Ljava/util/Map;
      16: return

  protected boolean sessionCreated(io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #6                  // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #7                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokevirtual #9                  // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.getPeerHost:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #10                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.getPeerPort:()I
      29: invokestatic  #11                 // Method keyFor:(Ljava/lang/String;I)Lio/netty/handler/ssl/OpenSslClientSessionCache$HostPort;
      32: astore_2
      33: aload_2
      34: ifnull        50
      37: aload_0
      38: getfield      #4                  // Field sessions:Ljava/util/Map;
      41: aload_2
      42: invokeinterface #12,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      47: ifeq          52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: getfield      #4                  // Field sessions:Ljava/util/Map;
      56: aload_2
      57: aload_1
      58: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: iconst_1
      65: ireturn

  protected void sessionRemoved(io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #6                  // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #7                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokevirtual #9                  // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.getPeerHost:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #10                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.getPeerPort:()I
      29: invokestatic  #11                 // Method keyFor:(Ljava/lang/String;I)Lio/netty/handler/ssl/OpenSslClientSessionCache$HostPort;
      32: astore_2
      33: aload_2
      34: ifnonnull     38
      37: return
      38: aload_0
      39: getfield      #4                  // Field sessions:Ljava/util/Map;
      42: aload_2
      43: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: return

  void setSession(long, java.lang.String, int);
    Code:
       0: aload_3
       1: iload         4
       3: invokestatic  #11                 // Method keyFor:(Ljava/lang/String;I)Lio/netty/handler/ssl/OpenSslClientSessionCache$HostPort;
       6: astore        5
       8: aload         5
      10: ifnonnull     14
      13: return
      14: aload_0
      15: dup
      16: astore        8
      18: monitorenter
      19: aload_0
      20: getfield      #4                  // Field sessions:Ljava/util/Map;
      23: aload         5
      25: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #16                 // class io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession
      33: astore        6
      35: aload         6
      37: ifnonnull     44
      40: aload         8
      42: monitorexit
      43: return
      44: aload         6
      46: invokevirtual #17                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.isValid:()Z
      49: ifne          65
      52: aload_0
      53: aload         6
      55: invokevirtual #18                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.sessionId:()Lio/netty/handler/ssl/OpenSslSessionId;
      58: invokevirtual #19                 // Method removeSessionWithId:(Lio/netty/handler/ssl/OpenSslSessionId;)V
      61: aload         8
      63: monitorexit
      64: return
      65: lload_1
      66: aload         6
      68: invokevirtual #20                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.session:()J
      71: invokestatic  #21                 // Method io/netty/internal/tcnative/SSL.setSession:(JJ)Z
      74: istore        7
      76: aload         8
      78: monitorexit
      79: goto          90
      82: astore        9
      84: aload         8
      86: monitorexit
      87: aload         9
      89: athrow
      90: iload         7
      92: ifeq          113
      95: aload         6
      97: invokevirtual #22                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.shouldBeSingleUse:()Z
     100: ifeq          108
     103: aload         6
     105: invokevirtual #23                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.invalidate:()V
     108: aload         6
     110: invokevirtual #24                 // Method io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession.updateLastAccessedTime:()V
     113: return
    Exception table:
       from    to  target type
          19    43    82   any
          44    64    82   any
          65    79    82   any
          82    87    82   any

  private static io.netty.handler.ssl.OpenSslClientSessionCache$HostPort keyFor(java.lang.String, int);
    Code:
       0: aload_0
       1: ifnonnull     11
       4: iload_1
       5: iconst_1
       6: if_icmpge     11
       9: aconst_null
      10: areturn
      11: new           #25                 // class io/netty/handler/ssl/OpenSslClientSessionCache$HostPort
      14: dup
      15: aload_0
      16: iload_1
      17: invokespecial #26                 // Method io/netty/handler/ssl/OpenSslClientSessionCache$HostPort."<init>":(Ljava/lang/String;I)V
      20: areturn

  synchronized void clear();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method io/netty/handler/ssl/OpenSslSessionCache.clear:()V
       4: aload_0
       5: getfield      #4                  // Field sessions:Ljava/util/Map;
       8: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  static {};
    Code:
       0: ldc           #29                 // class io/netty/handler/ssl/OpenSslClientSessionCache
       2: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
