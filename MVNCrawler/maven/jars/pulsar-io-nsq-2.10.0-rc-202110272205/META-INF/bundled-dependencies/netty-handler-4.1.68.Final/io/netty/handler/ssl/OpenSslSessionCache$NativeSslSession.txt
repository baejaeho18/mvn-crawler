Compiled from "OpenSslSessionCache.java"
final class io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession implements io.netty.handler.ssl.OpenSslSession {
  static final io.netty.util.ResourceLeakDetector<io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession> LEAK_DETECTOR;

  private final io.netty.util.ResourceLeakTracker<io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession> leakTracker;

  private final long session;

  private final java.lang.String peerHost;

  private final int peerPort;

  private final io.netty.handler.ssl.OpenSslSessionId id;

  private final long timeout;

  private final long creationTime;

  private volatile long lastAccessedTime;

  private volatile boolean valid;

  private boolean freed;

  static final boolean $assertionsDisabled;

  io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession(long, java.lang.String, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #3                  // Field creationTime:J
      11: aload_0
      12: aload_0
      13: getfield      #3                  // Field creationTime:J
      16: putfield      #4                  // Field lastAccessedTime:J
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field valid:Z
      24: aload_0
      25: lload_1
      26: putfield      #6                  // Field session:J
      29: aload_0
      30: aload_3
      31: putfield      #7                  // Field peerHost:Ljava/lang/String;
      34: aload_0
      35: iload         4
      37: putfield      #8                  // Field peerPort:I
      40: aload_0
      41: lload         5
      43: putfield      #9                  // Field timeout:J
      46: aload_0
      47: new           #10                 // class io/netty/handler/ssl/OpenSslSessionId
      50: dup
      51: lload_1
      52: invokestatic  #11                 // Method io/netty/internal/tcnative/SSLSession.getSessionId:(J)[B
      55: invokespecial #12                 // Method io/netty/handler/ssl/OpenSslSessionId."<init>":([B)V
      58: putfield      #13                 // Field id:Lio/netty/handler/ssl/OpenSslSessionId;
      61: aload_0
      62: getstatic     #14                 // Field LEAK_DETECTOR:Lio/netty/util/ResourceLeakDetector;
      65: aload_0
      66: invokevirtual #15                 // Method io/netty/util/ResourceLeakDetector.track:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakTracker;
      69: putfield      #16                 // Field leakTracker:Lio/netty/util/ResourceLeakTracker;
      72: return

  public void setSessionId(io.netty.handler.ssl.OpenSslSessionId);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  boolean shouldBeSingleUse();
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #20                 // Field freed:Z
      10: ifeq          21
      13: new           #21                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #6                  // Field session:J
      25: invokestatic  #23                 // Method io/netty/internal/tcnative/SSLSession.shouldBeSingleUse:(J)Z
      28: ireturn

  long session();
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #20                 // Field freed:Z
      10: ifeq          21
      13: new           #21                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #6                  // Field session:J
      25: lreturn

  boolean upRef();
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #20                 // Field freed:Z
      10: ifeq          21
      13: new           #21                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #6                  // Field session:J
      25: invokestatic  #24                 // Method io/netty/internal/tcnative/SSLSession.upRef:(J)Z
      28: ireturn

  synchronized void free();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method close:()V
       4: aload_0
       5: getfield      #6                  // Field session:J
       8: invokestatic  #26                 // Method io/netty/internal/tcnative/SSLSession.free:(J)V
      11: return

  void close();
    Code:
       0: getstatic     #19                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #20                 // Field freed:Z
      10: ifeq          21
      13: new           #21                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iconst_1
      23: putfield      #20                 // Field freed:Z
      26: aload_0
      27: invokevirtual #27                 // Method invalidate:()V
      30: aload_0
      31: getfield      #16                 // Field leakTracker:Lio/netty/util/ResourceLeakTracker;
      34: ifnull        48
      37: aload_0
      38: getfield      #16                 // Field leakTracker:Lio/netty/util/ResourceLeakTracker;
      41: aload_0
      42: invokeinterface #28,  2           // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
      47: pop
      48: return

  public io.netty.handler.ssl.OpenSslSessionId sessionId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field id:Lio/netty/handler/ssl/OpenSslSessionId;
       4: areturn

  boolean isValid(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field creationTime:J
       4: aload_0
       5: getfield      #9                  // Field timeout:J
       8: ladd
       9: lload_1
      10: lcmp
      11: iflt          25
      14: aload_0
      15: getfield      #5                  // Field valid:Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void setLocalCertificate(java.security.cert.Certificate[]);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public io.netty.handler.ssl.OpenSslSessionContext getSessionContext();
    Code:
       0: aconst_null
       1: areturn

  public void tryExpandApplicationBufferSize(int);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void handshakeFinished(byte[], java.lang.String, java.lang.String, byte[], byte[][], long, long);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public byte[] getId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field id:Lio/netty/handler/ssl/OpenSslSessionId;
       4: invokevirtual #29                 // Method io/netty/handler/ssl/OpenSslSessionId.cloneBytes:()[B
       7: areturn

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field creationTime:J
       4: lreturn

  void updateLastAccessedTime();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #4                  // Field lastAccessedTime:J
       7: return

  public long getLastAccessedTime();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lastAccessedTime:J
       4: lreturn

  public void invalidate();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field valid:Z
       5: return

  public boolean isValid();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
       4: invokevirtual #30                 // Method isValid:(J)Z
       7: ireturn

  public void putValue(java.lang.String, java.lang.Object);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object getValue(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public void removeValue(java.lang.String);
    Code:
       0: return

  public java.lang.String[] getValueNames();
    Code:
       0: getstatic     #31                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
       3: areturn

  public java.security.cert.Certificate[] getPeerCertificates();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.security.cert.Certificate[] getLocalCertificates();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public javax.security.cert.X509Certificate[] getPeerCertificateChain();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.security.Principal getPeerPrincipal();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.security.Principal getLocalPrincipal();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getCipherSuite();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getProtocol();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getPeerHost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field peerHost:Ljava/lang/String;
       4: areturn

  public int getPeerPort();
    Code:
       0: aload_0
       1: getfield      #8                  // Field peerPort:I
       4: ireturn

  public int getPacketBufferSize();
    Code:
       0: getstatic     #32                 // Field io/netty/handler/ssl/ReferenceCountedOpenSslEngine.MAX_RECORD_SIZE:I
       3: ireturn

  public int getApplicationBufferSize();
    Code:
       0: getstatic     #33                 // Field io/netty/handler/ssl/ReferenceCountedOpenSslEngine.MAX_PLAINTEXT_LENGTH:I
       3: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field id:Lio/netty/handler/ssl/OpenSslSessionId;
       4: invokevirtual #34                 // Method io/netty/handler/ssl/OpenSslSessionId.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #35                 // class io/netty/handler/ssl/OpenSslSession
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #35                 // class io/netty/handler/ssl/OpenSslSession
      20: astore_2
      21: aload_0
      22: getfield      #13                 // Field id:Lio/netty/handler/ssl/OpenSslSessionId;
      25: aload_2
      26: invokeinterface #36,  1           // InterfaceMethod io/netty/handler/ssl/OpenSslSession.sessionId:()Lio/netty/handler/ssl/OpenSslSessionId;
      31: invokevirtual #37                 // Method io/netty/handler/ssl/OpenSslSessionId.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public javax.net.ssl.SSLSessionContext getSessionContext();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getSessionContext:()Lio/netty/handler/ssl/OpenSslSessionContext;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // class io/netty/handler/ssl/OpenSslSessionCache
       2: invokevirtual #40                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: invokestatic  #41                 // Method io/netty/util/ResourceLeakDetectorFactory.instance:()Lio/netty/util/ResourceLeakDetectorFactory;
      19: ldc           #42                 // class io/netty/handler/ssl/OpenSslSessionCache$NativeSslSession
      21: invokevirtual #43                 // Method io/netty/util/ResourceLeakDetectorFactory.newResourceLeakDetector:(Ljava/lang/Class;)Lio/netty/util/ResourceLeakDetector;
      24: putstatic     #14                 // Field LEAK_DETECTOR:Lio/netty/util/ResourceLeakDetector;
      27: return
}
