Compiled from "SslHandler.java"
final class io.netty.handler.ssl.SslHandler$SslEngineType$3 extends io.netty.handler.ssl.SslHandler$SslEngineType {
  io.netty.handler.ssl.SslHandler$SslEngineType$3(java.lang.String, int, boolean, io.netty.handler.codec.ByteToMessageDecoder$Cumulator);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #1                  // Method io/netty/handler/ssl/SslHandler$SslEngineType."<init>":(Ljava/lang/String;IZLio/netty/handler/codec/ByteToMessageDecoder$Cumulator;Lio/netty/handler/ssl/SslHandler$1;)V
      10: return

  javax.net.ssl.SSLEngineResult unwrap(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBuf, int, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aload         4
       2: invokevirtual #2                  // Method io/netty/buffer/ByteBuf.writerIndex:()I
       5: istore        5
       7: aload_2
       8: aload_2
       9: invokevirtual #3                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      12: iload_3
      13: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
      16: astore        6
      18: aload         6
      20: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      23: istore        7
      25: aload_1
      26: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      29: aload         6
      31: aload         4
      33: iload         5
      35: aload         4
      37: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.writableBytes:()I
      40: invokestatic  #4                  // Method io/netty/handler/ssl/SslHandler.access$300:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
      43: invokevirtual #8                  // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      46: astore        8
      48: aload         4
      50: iload         5
      52: aload         8
      54: invokevirtual #9                  // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      57: iadd
      58: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
      61: pop
      62: aload         8
      64: invokevirtual #11                 // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      67: ifne          115
      70: aload         6
      72: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      75: iload         7
      77: isub
      78: istore        9
      80: iload         9
      82: aload         8
      84: invokevirtual #11                 // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      87: if_icmpeq     115
      90: new           #12                 // class javax/net/ssl/SSLEngineResult
      93: dup
      94: aload         8
      96: invokevirtual #13                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      99: aload         8
     101: invokevirtual #14                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     104: iload         9
     106: aload         8
     108: invokevirtual #9                  // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     111: invokespecial #15                 // Method javax/net/ssl/SSLEngineResult."<init>":(Ljavax/net/ssl/SSLEngineResult$Status;Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;II)V
     114: areturn
     115: aload         8
     117: areturn

  io.netty.buffer.ByteBuf allocateWrapBuffer(io.netty.handler.ssl.SslHandler, io.netty.buffer.ByteBufAllocator, int, int);
    Code:
       0: aload_2
       1: aload_1
       2: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$100:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
       5: invokevirtual #16                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       8: invokeinterface #17,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
      13: invokeinterface #18,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(I)Lio/netty/buffer/ByteBuf;
      18: areturn

  int calculatePendingData(io.netty.handler.ssl.SslHandler, int);
    Code:
       0: iload_2
       1: ireturn

  boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine);
    Code:
       0: iconst_1
       1: ireturn
}
