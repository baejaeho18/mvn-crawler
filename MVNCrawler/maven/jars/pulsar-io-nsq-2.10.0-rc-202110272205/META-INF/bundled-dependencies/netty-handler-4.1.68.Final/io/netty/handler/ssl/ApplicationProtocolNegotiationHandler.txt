Compiled from "ApplicationProtocolNegotiationHandler.java"
public abstract class io.netty.handler.ssl.ApplicationProtocolNegotiationHandler extends io.netty.channel.ChannelInboundHandlerAdapter {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.lang.String fallbackProtocol;

  private final io.netty.util.internal.RecyclableArrayList bufferedMessages;

  private io.netty.channel.ChannelHandlerContext ctx;

  private boolean sslHandlerChecked;

  protected io.netty.handler.ssl.ApplicationProtocolNegotiationHandler(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/netty/util/internal/RecyclableArrayList.newInstance:()Lio/netty/util/internal/RecyclableArrayList;
       8: putfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
      11: aload_0
      12: aload_1
      13: ldc           #4                  // String fallbackProtocol
      15: invokestatic  #5                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/lang/String
      21: putfield      #7                  // Field fallbackProtocol:Ljava/lang/String;
      24: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_0
       6: aload_1
       7: invokespecial #9                  // Method io/netty/channel/ChannelInboundHandlerAdapter.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
      10: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method fireBufferedMessages:()V
       4: aload_0
       5: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
       8: invokevirtual #11                 // Method io/netty/util/internal/RecyclableArrayList.recycle:()Z
      11: pop
      12: aload_0
      13: aload_1
      14: invokespecial #12                 // Method io/netty/channel/ChannelInboundHandlerAdapter.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      17: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
       4: aload_2
       5: invokevirtual #13                 // Method io/netty/util/internal/RecyclableArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: getfield      #14                 // Field sslHandlerChecked:Z
      13: ifne          42
      16: aload_0
      17: iconst_1
      18: putfield      #14                 // Field sslHandlerChecked:Z
      21: aload_1
      22: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      27: ldc           #16                 // class io/netty/handler/ssl/SslHandler
      29: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      34: ifnonnull     42
      37: aload_0
      38: aload_1
      39: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
      42: return

  private void fireBufferedMessages();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
       4: invokevirtual #19                 // Method io/netty/util/internal/RecyclableArrayList.isEmpty:()Z
       7: ifne          64
      10: iconst_0
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
      17: invokevirtual #20                 // Method io/netty/util/internal/RecyclableArrayList.size:()I
      20: if_icmpge     47
      23: aload_0
      24: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      27: aload_0
      28: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
      31: iload_1
      32: invokevirtual #21                 // Method io/netty/util/internal/RecyclableArrayList.get:(I)Ljava/lang/Object;
      35: invokeinterface #22,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      40: pop
      41: iinc          1, 1
      44: goto          12
      47: aload_0
      48: getfield      #8                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      51: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      56: pop
      57: aload_0
      58: getfield      #3                  // Field bufferedMessages:Lio/netty/util/internal/RecyclableArrayList;
      61: invokevirtual #24                 // Method io/netty/util/internal/RecyclableArrayList.clear:()V
      64: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #25                 // class io/netty/handler/ssl/SslHandshakeCompletionEvent
       4: ifeq          134
       7: aload_2
       8: checkcast     #25                 // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      11: astore_3
      12: aload_3
      13: invokevirtual #26                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent.isSuccess:()Z
      16: ifeq          78
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      25: ldc           #16                 // class io/netty/handler/ssl/SslHandler
      27: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      32: checkcast     #16                 // class io/netty/handler/ssl/SslHandler
      35: astore        4
      37: aload         4
      39: ifnonnull     52
      42: new           #27                 // class java/lang/IllegalStateException
      45: dup
      46: ldc           #28                 // String cannot find an SslHandler in the pipeline (required for application-level protocol negotiation)
      48: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         4
      54: invokevirtual #30                 // Method io/netty/handler/ssl/SslHandler.applicationProtocol:()Ljava/lang/String;
      57: astore        5
      59: aload_0
      60: aload_1
      61: aload         5
      63: ifnull        71
      66: aload         5
      68: goto          75
      71: aload_0
      72: getfield      #7                  // Field fallbackProtocol:Ljava/lang/String;
      75: invokevirtual #31                 // Method configurePipeline:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/String;)V
      78: aload_3
      79: invokevirtual #26                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent.isSuccess:()Z
      82: ifeq          134
      85: aload_0
      86: aload_1
      87: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
      90: goto          134
      93: astore        4
      95: aload_0
      96: aload_1
      97: aload         4
      99: invokevirtual #33                 // Method exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     102: aload_3
     103: invokevirtual #26                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent.isSuccess:()Z
     106: ifeq          134
     109: aload_0
     110: aload_1
     111: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
     114: goto          134
     117: astore        6
     119: aload_3
     120: invokevirtual #26                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent.isSuccess:()Z
     123: ifeq          131
     126: aload_0
     127: aload_1
     128: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
     131: aload         6
     133: athrow
     134: aload_2
     135: instanceof    #34                 // class io/netty/channel/socket/ChannelInputShutdownEvent
     138: ifeq          145
     141: aload_0
     142: invokespecial #10                 // Method fireBufferedMessages:()V
     145: aload_1
     146: aload_2
     147: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     152: pop
     153: return
    Exception table:
       from    to  target type
          12    78    93   Class java/lang/Throwable
          12    78   117   any
          93   102   117   any
         117   119   117   any

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method fireBufferedMessages:()V
       4: aload_0
       5: aload_1
       6: invokespecial #36                 // Method io/netty/channel/ChannelInboundHandlerAdapter.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
       9: return

  private void removeSelfIfPresent(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: astore_2
       7: aload_2
       8: aload_0
       9: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
      14: ifnull        25
      17: aload_2
      18: aload_0
      19: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      24: pop
      25: return

  protected abstract void configurePipeline(io.netty.channel.ChannelHandlerContext, java.lang.String) throws java.lang.Exception;

  protected void handshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #40                 // String {} TLS handshake failed:
       5: aload_1
       6: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      11: aload_2
      12: invokeinterface #42,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_1
      18: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      23: pop
      24: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #44                 // class io/netty/handler/codec/DecoderException
       4: ifeq          41
       7: aload_2
       8: invokevirtual #45                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      11: dup
      12: astore_3
      13: instanceof    #46                 // class javax/net/ssl/SSLException
      16: ifeq          41
      19: aload_0
      20: aload_1
      21: aload_3
      22: invokevirtual #47                 // Method handshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      25: aload_0
      26: aload_1
      27: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
      30: return
      31: astore        4
      33: aload_0
      34: aload_1
      35: invokespecial #18                 // Method removeSelfIfPresent:(Lio/netty/channel/ChannelHandlerContext;)V
      38: aload         4
      40: athrow
      41: getstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      44: ldc           #48                 // String {} Failed to select the application-level protocol:
      46: aload_1
      47: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      52: aload_2
      53: invokeinterface #42,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_1
      59: aload_2
      60: invokeinterface #49,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      65: pop
      66: aload_1
      67: invokeinterface #43,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      72: pop
      73: return
    Exception table:
       from    to  target type
          19    25    31   any
          31    33    31   any

  static {};
    Code:
       0: ldc           #50                 // class io/netty/handler/ssl/ApplicationProtocolNegotiationHandler
       2: invokestatic  #51                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #39                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
