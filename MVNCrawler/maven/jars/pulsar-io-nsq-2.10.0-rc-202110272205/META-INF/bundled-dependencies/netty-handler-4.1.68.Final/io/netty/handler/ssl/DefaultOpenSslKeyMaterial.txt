Compiled from "DefaultOpenSslKeyMaterial.java"
final class io.netty.handler.ssl.DefaultOpenSslKeyMaterial extends io.netty.util.AbstractReferenceCounted implements io.netty.handler.ssl.OpenSslKeyMaterial {
  private static final io.netty.util.ResourceLeakDetector<io.netty.handler.ssl.DefaultOpenSslKeyMaterial> leakDetector;

  private final io.netty.util.ResourceLeakTracker<io.netty.handler.ssl.DefaultOpenSslKeyMaterial> leak;

  private final java.security.cert.X509Certificate[] x509CertificateChain;

  private long chain;

  private long privateKey;

  static final boolean $assertionsDisabled;

  io.netty.handler.ssl.DefaultOpenSslKeyMaterial(long, long, java.security.cert.X509Certificate[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/util/AbstractReferenceCounted."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field chain:J
       9: aload_0
      10: lload_3
      11: putfield      #3                  // Field privateKey:J
      14: aload_0
      15: aload         5
      17: putfield      #4                  // Field x509CertificateChain:[Ljava/security/cert/X509Certificate;
      20: aload_0
      21: getstatic     #5                  // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
      24: aload_0
      25: invokevirtual #6                  // Method io/netty/util/ResourceLeakDetector.track:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakTracker;
      28: putfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      31: return

  public java.security.cert.X509Certificate[] certificateChain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field x509CertificateChain:[Ljava/security/cert/X509Certificate;
       4: invokevirtual #8                  // Method "[Ljava/security/cert/X509Certificate;".clone:()Ljava/lang/Object;
       7: checkcast     #9                  // class "[Ljava/security/cert/X509Certificate;"
      10: areturn

  public long certificateChainAddress();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method refCnt:()I
       4: ifgt          15
       7: new           #11                 // class io/netty/util/IllegalReferenceCountException
      10: dup
      11: invokespecial #12                 // Method io/netty/util/IllegalReferenceCountException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #2                  // Field chain:J
      19: lreturn

  public long privateKeyAddress();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method refCnt:()I
       4: ifgt          15
       7: new           #11                 // class io/netty/util/IllegalReferenceCountException
      10: dup
      11: invokespecial #12                 // Method io/netty/util/IllegalReferenceCountException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field privateKey:J
      19: lreturn

  protected void deallocate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chain:J
       4: invokestatic  #13                 // Method io/netty/internal/tcnative/SSL.freeX509Chain:(J)V
       7: aload_0
       8: lconst_0
       9: putfield      #2                  // Field chain:J
      12: aload_0
      13: getfield      #3                  // Field privateKey:J
      16: invokestatic  #14                 // Method io/netty/internal/tcnative/SSL.freePrivateKey:(J)V
      19: aload_0
      20: lconst_0
      21: putfield      #3                  // Field privateKey:J
      24: aload_0
      25: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      28: ifnull        60
      31: aload_0
      32: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      35: aload_0
      36: invokeinterface #15,  2           // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
      41: istore_1
      42: getstatic     #16                 // Field $assertionsDisabled:Z
      45: ifne          60
      48: iload_1
      49: ifne          60
      52: new           #17                 // class java/lang/AssertionError
      55: dup
      56: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      59: athrow
      60: return

  public io.netty.handler.ssl.DefaultOpenSslKeyMaterial retain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: invokeinterface #19,  1           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:()V
      16: aload_0
      17: invokespecial #20                 // Method io/netty/util/AbstractReferenceCounted.retain:()Lio/netty/util/ReferenceCounted;
      20: pop
      21: aload_0
      22: areturn

  public io.netty.handler.ssl.DefaultOpenSslKeyMaterial retain(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: invokeinterface #19,  1           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:()V
      16: aload_0
      17: iload_1
      18: invokespecial #21                 // Method io/netty/util/AbstractReferenceCounted.retain:(I)Lio/netty/util/ReferenceCounted;
      21: pop
      22: aload_0
      23: areturn

  public io.netty.handler.ssl.DefaultOpenSslKeyMaterial touch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: invokeinterface #19,  1           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:()V
      16: aload_0
      17: invokespecial #22                 // Method io/netty/util/AbstractReferenceCounted.touch:()Lio/netty/util/ReferenceCounted;
      20: pop
      21: aload_0
      22: areturn

  public io.netty.handler.ssl.DefaultOpenSslKeyMaterial touch(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: aload_1
      12: invokeinterface #23,  2           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:(Ljava/lang/Object;)V
      17: aload_0
      18: areturn

  public boolean release();
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: invokeinterface #19,  1           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:()V
      16: aload_0
      17: invokespecial #24                 // Method io/netty/util/AbstractReferenceCounted.release:()Z
      20: ireturn

  public boolean release(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      11: invokeinterface #19,  1           // InterfaceMethod io/netty/util/ResourceLeakTracker.record:()V
      16: aload_0
      17: iload_1
      18: invokespecial #25                 // Method io/netty/util/AbstractReferenceCounted.release:(I)Z
      21: ireturn

  public io.netty.util.ReferenceCounted touch();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method touch:()Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       4: areturn

  public io.netty.util.ReferenceCounted retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method retain:(I)Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       5: areturn

  public io.netty.util.ReferenceCounted retain();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method retain:()Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       4: areturn

  public io.netty.util.ReferenceCounted touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method touch:(Ljava/lang/Object;)Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       5: areturn

  public io.netty.handler.ssl.OpenSslKeyMaterial touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method touch:(Ljava/lang/Object;)Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       5: areturn

  public io.netty.handler.ssl.OpenSslKeyMaterial touch();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method touch:()Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       4: areturn

  public io.netty.handler.ssl.OpenSslKeyMaterial retain(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method retain:(I)Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       5: areturn

  public io.netty.handler.ssl.OpenSslKeyMaterial retain();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method retain:()Lio/netty/handler/ssl/DefaultOpenSslKeyMaterial;
       4: areturn

  static {};
    Code:
       0: ldc           #30                 // class io/netty/handler/ssl/DefaultOpenSslKeyMaterial
       2: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #16                 // Field $assertionsDisabled:Z
      16: invokestatic  #32                 // Method io/netty/util/ResourceLeakDetectorFactory.instance:()Lio/netty/util/ResourceLeakDetectorFactory;
      19: ldc           #30                 // class io/netty/handler/ssl/DefaultOpenSslKeyMaterial
      21: invokevirtual #33                 // Method io/netty/util/ResourceLeakDetectorFactory.newResourceLeakDetector:(Ljava/lang/Class;)Lio/netty/util/ResourceLeakDetector;
      24: putstatic     #5                  // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
      27: return
}
