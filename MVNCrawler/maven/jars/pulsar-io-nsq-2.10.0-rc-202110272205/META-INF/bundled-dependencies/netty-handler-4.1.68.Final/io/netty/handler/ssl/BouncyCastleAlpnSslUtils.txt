Compiled from "BouncyCastleAlpnSslUtils.java"
final class io.netty.handler.ssl.BouncyCastleAlpnSslUtils {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.lang.Class BC_SSL_PARAMETERS;

  private static final java.lang.reflect.Method SET_PARAMETERS;

  private static final java.lang.reflect.Method SET_APPLICATION_PROTOCOLS;

  private static final java.lang.reflect.Method GET_APPLICATION_PROTOCOL;

  private static final java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL;

  private static final java.lang.reflect.Method SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR;

  private static final java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR;

  private static final java.lang.Class BC_APPLICATION_PROTOCOL_SELECTOR;

  private static final java.lang.reflect.Method BC_APPLICATION_PROTOCOL_SELECTOR_SELECT;

  private io.netty.handler.ssl.BouncyCastleAlpnSslUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  static java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine);
    Code:
       0: getstatic     #3                  // Field GET_APPLICATION_PROTOCOL:Ljava/lang/reflect/Method;
       3: aload_0
       4: iconst_0
       5: anewarray     #4                  // class java/lang/Object
       8: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #6                  // class java/lang/String
      14: areturn
      15: astore_1
      16: aload_1
      17: athrow
      18: astore_1
      19: new           #9                  // class java/lang/IllegalStateException
      22: dup
      23: aload_1
      24: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/UnsupportedOperationException
           0    14    18   Class java/lang/Exception

  static void setApplicationProtocols(javax.net.ssl.SSLEngine, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
       4: astore_2
       5: aload_1
       6: getstatic     #12                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
       9: invokeinterface #13,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: checkcast     #14                 // class "[Ljava/lang/String;"
      17: astore_3
      18: getstatic     #15                 // Field BC_SSL_PARAMETERS:Ljava/lang/Class;
      21: invokevirtual #16                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      24: astore        4
      26: getstatic     #17                 // Field SET_APPLICATION_PROTOCOLS:Ljava/lang/reflect/Method;
      29: aload         4
      31: iconst_1
      32: anewarray     #4                  // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_3
      38: aastore
      39: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: getstatic     #18                 // Field SET_PARAMETERS:Ljava/lang/reflect/Method;
      46: aload_0
      47: iconst_1
      48: anewarray     #4                  // class java/lang/Object
      51: dup
      52: iconst_0
      53: aload         4
      55: aastore
      56: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          80
      63: astore        4
      65: aload         4
      67: athrow
      68: astore        4
      70: new           #9                  // class java/lang/IllegalStateException
      73: dup
      74: aload         4
      76: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      79: athrow
      80: aload_0
      81: aload_2
      82: invokevirtual #19                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
      85: return
    Exception table:
       from    to  target type
          18    60    63   Class java/lang/UnsupportedOperationException
          18    60    68   Class java/lang/Exception

  static java.lang.String getHandshakeApplicationProtocol(javax.net.ssl.SSLEngine);
    Code:
       0: getstatic     #20                 // Field GET_HANDSHAKE_APPLICATION_PROTOCOL:Ljava/lang/reflect/Method;
       3: aload_0
       4: iconst_0
       5: anewarray     #4                  // class java/lang/Object
       8: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #6                  // class java/lang/String
      14: areturn
      15: astore_1
      16: aload_1
      17: athrow
      18: astore_1
      19: new           #9                  // class java/lang/IllegalStateException
      22: dup
      23: aload_1
      24: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/UnsupportedOperationException
           0    14    18   Class java/lang/Exception

  static void setHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine, java.util.function.BiFunction<javax.net.ssl.SSLEngine, java.util.List<java.lang.String>, java.lang.String>);
    Code:
       0: ldc           #21                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils
       2: invokevirtual #22                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: iconst_1
       6: anewarray     #23                 // class java/lang/Class
       9: dup
      10: iconst_0
      11: getstatic     #24                 // Field BC_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/Class;
      14: aastore
      15: new           #25                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$8
      18: dup
      19: aload_1
      20: invokespecial #26                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$8."<init>":(Ljava/util/function/BiFunction;)V
      23: invokestatic  #27                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      26: astore_2
      27: getstatic     #28                 // Field SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/reflect/Method;
      30: aload_0
      31: iconst_1
      32: anewarray     #4                  // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_2
      38: aastore
      39: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: goto          59
      46: astore_2
      47: aload_2
      48: athrow
      49: astore_2
      50: new           #9                  // class java/lang/IllegalStateException
      53: dup
      54: aload_2
      55: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      58: athrow
      59: return
    Exception table:
       from    to  target type
           0    43    46   Class java/lang/UnsupportedOperationException
           0    43    49   Class java/lang/Exception

  static java.util.function.BiFunction<javax.net.ssl.SSLEngine, java.util.List<java.lang.String>, java.lang.String> getHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine);
    Code:
       0: getstatic     #29                 // Field GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/reflect/Method;
       3: aload_0
       4: iconst_0
       5: anewarray     #4                  // class java/lang/Object
       8: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_1
      12: new           #30                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$9
      15: dup
      16: aload_1
      17: invokespecial #31                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$9."<init>":(Ljava/lang/Object;)V
      20: areturn
      21: astore_1
      22: aload_1
      23: athrow
      24: astore_1
      25: new           #9                  // class java/lang/IllegalStateException
      28: dup
      29: aload_1
      30: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/UnsupportedOperationException
           0    20    24   Class java/lang/Exception

  static java.lang.reflect.Method access$000();
    Code:
       0: getstatic     #1                  // Field BC_APPLICATION_PROTOCOL_SELECTOR_SELECT:Ljava/lang/reflect/Method;
       3: areturn

  static {};
    Code:
       0: ldc           #21                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils
       2: invokestatic  #32                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #33                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: ldc           #34                 // String org.bouncycastle.jsse.BCSSLEngine
      10: invokestatic  #35                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      13: astore_0
      14: aload_0
      15: astore        10
      17: ldc           #36                 // String org.bouncycastle.jsse.BCSSLParameters
      19: invokestatic  #35                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      22: astore_1
      23: aload_1
      24: invokevirtual #16                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      27: astore        11
      29: aload_1
      30: astore        12
      32: ldc           #37                 // String org.bouncycastle.jsse.BCApplicationProtocolSelector
      34: invokestatic  #35                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      37: astore        9
      39: aload         9
      41: astore        13
      43: new           #38                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$1
      46: dup
      47: aload         13
      49: invokespecial #39                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$1."<init>":(Ljava/lang/Class;)V
      52: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      55: checkcast     #41                 // class java/lang/reflect/Method
      58: astore        8
      60: ldc           #42                 // String BCJSSE
      62: invokestatic  #43                 // Method io/netty/handler/ssl/SslUtils.getSSLContext:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      65: astore        14
      67: aload         14
      69: invokevirtual #44                 // Method javax/net/ssl/SSLContext.createSSLEngine:()Ljavax/net/ssl/SSLEngine;
      72: astore        15
      74: new           #45                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$2
      77: dup
      78: aload         10
      80: aload         12
      82: invokespecial #46                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$2."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      85: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      88: checkcast     #41                 // class java/lang/reflect/Method
      91: astore_2
      92: aload_2
      93: aload         15
      95: iconst_1
      96: anewarray     #4                  // class java/lang/Object
      99: dup
     100: iconst_0
     101: aload         11
     103: aastore
     104: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: new           #47                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$3
     111: dup
     112: aload         12
     114: invokespecial #48                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$3."<init>":(Ljava/lang/Class;)V
     117: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     120: checkcast     #41                 // class java/lang/reflect/Method
     123: astore_3
     124: aload_3
     125: aload         11
     127: iconst_1
     128: anewarray     #4                  // class java/lang/Object
     131: dup
     132: iconst_0
     133: getstatic     #12                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
     136: aastore
     137: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: new           #49                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$4
     144: dup
     145: aload         10
     147: invokespecial #50                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$4."<init>":(Ljava/lang/Class;)V
     150: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     153: checkcast     #41                 // class java/lang/reflect/Method
     156: astore        4
     158: aload         4
     160: aload         15
     162: iconst_0
     163: anewarray     #4                  // class java/lang/Object
     166: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: new           #51                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$5
     173: dup
     174: aload         10
     176: invokespecial #52                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$5."<init>":(Ljava/lang/Class;)V
     179: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     182: checkcast     #41                 // class java/lang/reflect/Method
     185: astore        5
     187: aload         5
     189: aload         15
     191: iconst_0
     192: anewarray     #4                  // class java/lang/Object
     195: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     198: pop
     199: new           #53                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$6
     202: dup
     203: aload         10
     205: aload         13
     207: invokespecial #54                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$6."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
     210: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     213: checkcast     #41                 // class java/lang/reflect/Method
     216: astore        6
     218: new           #55                 // class io/netty/handler/ssl/BouncyCastleAlpnSslUtils$7
     221: dup
     222: aload         10
     224: invokespecial #56                 // Method io/netty/handler/ssl/BouncyCastleAlpnSslUtils$7."<init>":(Ljava/lang/Class;)V
     227: invokestatic  #40                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     230: checkcast     #41                 // class java/lang/reflect/Method
     233: astore        7
     235: aload         7
     237: aload         15
     239: iconst_0
     240: anewarray     #4                  // class java/lang/Object
     243: invokevirtual #5                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     246: pop
     247: goto          288
     250: astore        10
     252: getstatic     #33                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     255: ldc           #58                 // String Unable to initialize BouncyCastleAlpnSslUtils.
     257: aload         10
     259: invokeinterface #59,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     264: aconst_null
     265: astore_1
     266: aconst_null
     267: astore_2
     268: aconst_null
     269: astore_3
     270: aconst_null
     271: astore        4
     273: aconst_null
     274: astore        5
     276: aconst_null
     277: astore        6
     279: aconst_null
     280: astore        7
     282: aconst_null
     283: astore        8
     285: aconst_null
     286: astore        9
     288: aload_1
     289: putstatic     #15                 // Field BC_SSL_PARAMETERS:Ljava/lang/Class;
     292: aload_2
     293: putstatic     #18                 // Field SET_PARAMETERS:Ljava/lang/reflect/Method;
     296: aload_3
     297: putstatic     #17                 // Field SET_APPLICATION_PROTOCOLS:Ljava/lang/reflect/Method;
     300: aload         4
     302: putstatic     #3                  // Field GET_APPLICATION_PROTOCOL:Ljava/lang/reflect/Method;
     305: aload         5
     307: putstatic     #20                 // Field GET_HANDSHAKE_APPLICATION_PROTOCOL:Ljava/lang/reflect/Method;
     310: aload         6
     312: putstatic     #28                 // Field SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/reflect/Method;
     315: aload         7
     317: putstatic     #29                 // Field GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/reflect/Method;
     320: aload         8
     322: putstatic     #1                  // Field BC_APPLICATION_PROTOCOL_SELECTOR_SELECT:Ljava/lang/reflect/Method;
     325: aload         9
     327: putstatic     #24                 // Field BC_APPLICATION_PROTOCOL_SELECTOR:Ljava/lang/Class;
     330: return
    Exception table:
       from    to  target type
           8   247   250   Class java/lang/Throwable
}
