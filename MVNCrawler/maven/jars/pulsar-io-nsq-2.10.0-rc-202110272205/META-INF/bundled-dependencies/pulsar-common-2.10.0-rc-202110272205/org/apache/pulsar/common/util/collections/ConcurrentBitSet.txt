Compiled from "ConcurrentBitSet.java"
public class org.apache.pulsar.common.util.collections.ConcurrentBitSet extends java.util.BitSet {
  private static final long serialVersionUID;

  private final java.util.concurrent.locks.StampedLock rwLock;

  public org.apache.pulsar.common.util.collections.ConcurrentBitSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/BitSet."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/StampedLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
      12: putfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      15: return

  public org.apache.pulsar.common.util.collections.ConcurrentBitSet(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #5                  // Method java/util/BitSet."<init>":(I)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/locks/StampedLock
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
      13: putfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      16: return

  public boolean get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #7                  // Method java/util/BitSet.get:(I)Z
      13: istore        4
      15: aload_0
      16: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      19: lload_2
      20: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      23: ifne          65
      26: aload_0
      27: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      30: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      33: lstore_2
      34: aload_0
      35: iload_1
      36: invokespecial #7                  // Method java/util/BitSet.get:(I)Z
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: lload_2
      46: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      49: goto          65
      52: astore        5
      54: aload_0
      55: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      58: lload_2
      59: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      62: aload         5
      64: athrow
      65: iload         4
      67: ireturn
    Exception table:
       from    to  target type
          34    41    52   any
          52    54    52   any

  public void set(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #11                 // Method java/util/BitSet.set:(I)V
      13: aload_0
      14: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      17: lload_2
      18: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      21: ifne          61
      24: aload_0
      25: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      28: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      31: lstore_2
      32: aload_0
      33: iload_1
      34: invokespecial #11                 // Method java/util/BitSet.set:(I)V
      37: aload_0
      38: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      41: lload_2
      42: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      45: goto          61
      48: astore        4
      50: aload_0
      51: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      54: lload_2
      55: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      58: aload         4
      60: athrow
      61: return
    Exception table:
       from    to  target type
          32    37    48   any
          48    50    48   any

  public void set(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_3
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokespecial #12                 // Method java/util/BitSet.set:(II)V
      14: aload_0
      15: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      18: lload_3
      19: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      22: ifne          63
      25: aload_0
      26: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      29: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      32: lstore_3
      33: aload_0
      34: iload_1
      35: iload_2
      36: invokespecial #12                 // Method java/util/BitSet.set:(II)V
      39: aload_0
      40: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      43: lload_3
      44: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      47: goto          63
      50: astore        5
      52: aload_0
      53: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      56: lload_3
      57: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      60: aload         5
      62: athrow
      63: return
    Exception table:
       from    to  target type
          33    39    50   any
          50    52    50   any

  public int nextSetBit(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #13                 // Method java/util/BitSet.nextSetBit:(I)I
      13: istore        4
      15: aload_0
      16: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      19: lload_2
      20: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      23: ifne          65
      26: aload_0
      27: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      30: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      33: lstore_2
      34: aload_0
      35: iload_1
      36: invokespecial #13                 // Method java/util/BitSet.nextSetBit:(I)I
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: lload_2
      46: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      49: goto          65
      52: astore        5
      54: aload_0
      55: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      58: lload_2
      59: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      62: aload         5
      64: athrow
      65: iload         4
      67: ireturn
    Exception table:
       from    to  target type
          34    41    52   any
          52    54    52   any

  public int nextClearBit(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #14                 // Method java/util/BitSet.nextClearBit:(I)I
      13: istore        4
      15: aload_0
      16: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      19: lload_2
      20: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      23: ifne          65
      26: aload_0
      27: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      30: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      33: lstore_2
      34: aload_0
      35: iload_1
      36: invokespecial #14                 // Method java/util/BitSet.nextClearBit:(I)I
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: lload_2
      46: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      49: goto          65
      52: astore        5
      54: aload_0
      55: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      58: lload_2
      59: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      62: aload         5
      64: athrow
      65: iload         4
      67: ireturn
    Exception table:
       from    to  target type
          34    41    52   any
          52    54    52   any

  public int previousSetBit(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #15                 // Method java/util/BitSet.previousSetBit:(I)I
      13: istore        4
      15: aload_0
      16: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      19: lload_2
      20: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      23: ifne          65
      26: aload_0
      27: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      30: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      33: lstore_2
      34: aload_0
      35: iload_1
      36: invokespecial #15                 // Method java/util/BitSet.previousSetBit:(I)I
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: lload_2
      46: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      49: goto          65
      52: astore        5
      54: aload_0
      55: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      58: lload_2
      59: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      62: aload         5
      64: athrow
      65: iload         4
      67: ireturn
    Exception table:
       from    to  target type
          34    41    52   any
          52    54    52   any

  public int previousClearBit(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_2
       8: aload_0
       9: iload_1
      10: invokespecial #16                 // Method java/util/BitSet.previousClearBit:(I)I
      13: istore        4
      15: aload_0
      16: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      19: lload_2
      20: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      23: ifne          65
      26: aload_0
      27: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      30: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      33: lstore_2
      34: aload_0
      35: iload_1
      36: invokespecial #16                 // Method java/util/BitSet.previousClearBit:(I)I
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: lload_2
      46: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      49: goto          65
      52: astore        5
      54: aload_0
      55: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      58: lload_2
      59: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      62: aload         5
      64: athrow
      65: iload         4
      67: ireturn
    Exception table:
       from    to  target type
          34    41    52   any
          52    54    52   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
       4: invokevirtual #6                  // Method java/util/concurrent/locks/StampedLock.tryOptimisticRead:()J
       7: lstore_1
       8: aload_0
       9: invokespecial #17                 // Method java/util/BitSet.isEmpty:()Z
      12: istore_3
      13: aload_0
      14: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      17: lload_1
      18: invokevirtual #8                  // Method java/util/concurrent/locks/StampedLock.validate:(J)Z
      21: ifne          61
      24: aload_0
      25: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      28: invokevirtual #9                  // Method java/util/concurrent/locks/StampedLock.readLock:()J
      31: lstore_1
      32: aload_0
      33: invokespecial #17                 // Method java/util/BitSet.isEmpty:()Z
      36: istore_3
      37: aload_0
      38: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      41: lload_1
      42: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      45: goto          61
      48: astore        4
      50: aload_0
      51: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      54: lload_1
      55: invokevirtual #10                 // Method java/util/concurrent/locks/StampedLock.unlockRead:(J)V
      58: aload         4
      60: athrow
      61: iload_3
      62: ireturn
    Exception table:
       from    to  target type
          32    37    48   any
          48    50    48   any

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #18                 // class org/apache/pulsar/common/util/collections/ConcurrentBitSet
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #18                 // class org/apache/pulsar/common/util/collections/ConcurrentBitSet
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #19                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: aload_1
      33: invokespecial #20                 // Method java/util/BitSet.equals:(Ljava/lang/Object;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      45: astore_3
      46: aload_2
      47: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      50: astore        4
      52: aload_3
      53: ifnonnull     64
      56: aload         4
      58: ifnull        75
      61: goto          73
      64: aload_3
      65: aload         4
      67: invokevirtual #21                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: iconst_1
      76: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #18                 // class org/apache/pulsar/common/util/collections/ConcurrentBitSet
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: aload_0
       4: invokespecial #22                 // Method java/util/BitSet.hashCode:()I
       7: istore_2
       8: aload_0
       9: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/StampedLock;
      12: astore_3
      13: iload_2
      14: bipush        59
      16: imul
      17: aload_3
      18: ifnonnull     26
      21: bipush        43
      23: goto          30
      26: aload_3
      27: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      30: iadd
      31: istore_2
      32: iload_2
      33: ireturn
}
