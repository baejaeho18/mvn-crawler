Compiled from "ConcurrentOpenHashMap.java"
final class org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section<K, V> extends java.util.concurrent.locks.StampedLock {
  private volatile java.lang.Object[] table;

  private volatile int capacity;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section> SIZE_UPDATER;

  private volatile int size;

  private int usedBuckets;

  private int resizeThreshold;

  org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #6                  // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$300:(I)I
       9: putfield      #3                  // Field capacity:I
      12: aload_0
      13: iconst_2
      14: aload_0
      15: getfield      #3                  // Field capacity:I
      18: imul
      19: anewarray     #7                  // class java/lang/Object
      22: putfield      #8                  // Field table:[Ljava/lang/Object;
      25: aload_0
      26: iconst_0
      27: putfield      #4                  // Field size:I
      30: aload_0
      31: iconst_0
      32: putfield      #9                  // Field usedBuckets:I
      35: aload_0
      36: aload_0
      37: getfield      #3                  // Field capacity:I
      40: i2f
      41: ldc           #10                 // float 0.66f
      43: fmul
      44: f2i
      45: putfield      #11                 // Field resizeThreshold:I
      48: return

  V get(K, int);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method tryOptimisticRead:()J
       4: lstore_3
       5: iconst_0
       6: istore        5
       8: iload_2
       9: i2l
      10: aload_0
      11: getfield      #3                  // Field capacity:I
      14: invokestatic  #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.signSafeMod:(JI)I
      17: istore        6
      19: aload_0
      20: getfield      #8                  // Field table:[Ljava/lang/Object;
      23: iload         6
      25: aaload
      26: astore        7
      28: aload_0
      29: getfield      #8                  // Field table:[Ljava/lang/Object;
      32: iload         6
      34: iconst_1
      35: iadd
      36: aaload
      37: astore        8
      39: iload         5
      41: ifne          102
      44: aload_0
      45: lload_3
      46: invokevirtual #14                 // Method validate:(J)Z
      49: ifeq          102
      52: aload_1
      53: aload         7
      55: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          78
      61: aload         8
      63: astore        9
      65: iload         5
      67: ifeq          75
      70: aload_0
      71: lload_3
      72: invokevirtual #16                 // Method unlockRead:(J)V
      75: aload         9
      77: areturn
      78: aload         7
      80: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
      83: if_acmpne     196
      86: aconst_null
      87: astore        9
      89: iload         5
      91: ifeq          99
      94: aload_0
      95: lload_3
      96: invokevirtual #16                 // Method unlockRead:(J)V
      99: aload         9
     101: areturn
     102: iload         5
     104: ifne          146
     107: aload_0
     108: invokevirtual #18                 // Method readLock:()J
     111: lstore_3
     112: iconst_1
     113: istore        5
     115: iload_2
     116: i2l
     117: aload_0
     118: getfield      #3                  // Field capacity:I
     121: invokestatic  #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.signSafeMod:(JI)I
     124: istore        6
     126: aload_0
     127: getfield      #8                  // Field table:[Ljava/lang/Object;
     130: iload         6
     132: aaload
     133: astore        7
     135: aload_0
     136: getfield      #8                  // Field table:[Ljava/lang/Object;
     139: iload         6
     141: iconst_1
     142: iadd
     143: aaload
     144: astore        8
     146: aload_1
     147: aload         7
     149: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     152: ifeq          172
     155: aload         8
     157: astore        9
     159: iload         5
     161: ifeq          169
     164: aload_0
     165: lload_3
     166: invokevirtual #16                 // Method unlockRead:(J)V
     169: aload         9
     171: areturn
     172: aload         7
     174: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
     177: if_acmpne     196
     180: aconst_null
     181: astore        9
     183: iload         5
     185: ifeq          193
     188: aload_0
     189: lload_3
     190: invokevirtual #16                 // Method unlockRead:(J)V
     193: aload         9
     195: areturn
     196: iload         6
     198: iconst_2
     199: iadd
     200: aload_0
     201: getfield      #8                  // Field table:[Ljava/lang/Object;
     204: arraylength
     205: iconst_1
     206: isub
     207: iand
     208: istore        6
     210: goto          19
     213: astore        10
     215: iload         5
     217: ifeq          225
     220: aload_0
     221: lload_3
     222: invokevirtual #16                 // Method unlockRead:(J)V
     225: aload         10
     227: athrow
    Exception table:
       from    to  target type
          19    65   213   any
          78    89   213   any
         102   159   213   any
         172   183   213   any
         196   215   213   any

  V put(K, V, int, boolean, java.util.function.Function<K, V>);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore        6
       6: iload_3
       7: i2l
       8: aload_0
       9: getfield      #3                  // Field capacity:I
      12: invokestatic  #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.signSafeMod:(JI)I
      15: istore        8
      17: iconst_m1
      18: istore        9
      20: aload_0
      21: getfield      #8                  // Field table:[Ljava/lang/Object;
      24: iload         8
      26: aaload
      27: astore        10
      29: aload_0
      30: getfield      #8                  // Field table:[Ljava/lang/Object;
      33: iload         8
      35: iconst_1
      36: iadd
      37: aaload
      38: astore        11
      40: aload_1
      41: aload         10
      43: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          166
      49: iload         4
      51: ifne          115
      54: aload_0
      55: getfield      #8                  // Field table:[Ljava/lang/Object;
      58: iload         8
      60: iconst_1
      61: iadd
      62: aload_2
      63: aastore
      64: aload         11
      66: astore        12
      68: aload_0
      69: getfield      #9                  // Field usedBuckets:I
      72: aload_0
      73: getfield      #11                 // Field resizeThreshold:I
      76: if_icmple     106
      79: aload_0
      80: invokespecial #20                 // Method rehash:()V
      83: aload_0
      84: lload         6
      86: invokevirtual #21                 // Method unlockWrite:(J)V
      89: goto          103
      92: astore        13
      94: aload_0
      95: lload         6
      97: invokevirtual #21                 // Method unlockWrite:(J)V
     100: aload         13
     102: athrow
     103: goto          112
     106: aload_0
     107: lload         6
     109: invokevirtual #21                 // Method unlockWrite:(J)V
     112: aload         12
     114: areturn
     115: aload         11
     117: astore        12
     119: aload_0
     120: getfield      #9                  // Field usedBuckets:I
     123: aload_0
     124: getfield      #11                 // Field resizeThreshold:I
     127: if_icmple     157
     130: aload_0
     131: invokespecial #20                 // Method rehash:()V
     134: aload_0
     135: lload         6
     137: invokevirtual #21                 // Method unlockWrite:(J)V
     140: goto          154
     143: astore        14
     145: aload_0
     146: lload         6
     148: invokevirtual #21                 // Method unlockWrite:(J)V
     151: aload         14
     153: athrow
     154: goto          163
     157: aload_0
     158: lload         6
     160: invokevirtual #21                 // Method unlockWrite:(J)V
     163: aload         12
     165: areturn
     166: aload         10
     168: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
     171: if_acmpne     295
     174: iload         9
     176: iconst_m1
     177: if_icmpeq     187
     180: iload         9
     182: istore        8
     184: goto          197
     187: aload_0
     188: dup
     189: getfield      #9                  // Field usedBuckets:I
     192: iconst_1
     193: iadd
     194: putfield      #9                  // Field usedBuckets:I
     197: aload_2
     198: ifnonnull     210
     201: aload         5
     203: aload_1
     204: invokeinterface #22,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     209: astore_2
     210: aload_0
     211: getfield      #8                  // Field table:[Ljava/lang/Object;
     214: iload         8
     216: aload_1
     217: aastore
     218: aload_0
     219: getfield      #8                  // Field table:[Ljava/lang/Object;
     222: iload         8
     224: iconst_1
     225: iadd
     226: aload_2
     227: aastore
     228: getstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     231: aload_0
     232: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
     235: pop
     236: aload         5
     238: ifnull        245
     241: aload_2
     242: goto          246
     245: aconst_null
     246: astore        12
     248: aload_0
     249: getfield      #9                  // Field usedBuckets:I
     252: aload_0
     253: getfield      #11                 // Field resizeThreshold:I
     256: if_icmple     286
     259: aload_0
     260: invokespecial #20                 // Method rehash:()V
     263: aload_0
     264: lload         6
     266: invokevirtual #21                 // Method unlockWrite:(J)V
     269: goto          283
     272: astore        15
     274: aload_0
     275: lload         6
     277: invokevirtual #21                 // Method unlockWrite:(J)V
     280: aload         15
     282: athrow
     283: goto          292
     286: aload_0
     287: lload         6
     289: invokevirtual #21                 // Method unlockWrite:(J)V
     292: aload         12
     294: areturn
     295: aload         10
     297: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$500:()Ljava/lang/Object;
     300: if_acmpne     313
     303: iload         9
     305: iconst_m1
     306: if_icmpne     313
     309: iload         8
     311: istore        9
     313: iload         8
     315: iconst_2
     316: iadd
     317: aload_0
     318: getfield      #8                  // Field table:[Ljava/lang/Object;
     321: arraylength
     322: iconst_1
     323: isub
     324: iand
     325: istore        8
     327: goto          20
     330: astore        16
     332: aload_0
     333: getfield      #9                  // Field usedBuckets:I
     336: aload_0
     337: getfield      #11                 // Field resizeThreshold:I
     340: if_icmple     370
     343: aload_0
     344: invokespecial #20                 // Method rehash:()V
     347: aload_0
     348: lload         6
     350: invokevirtual #21                 // Method unlockWrite:(J)V
     353: goto          367
     356: astore        17
     358: aload_0
     359: lload         6
     361: invokevirtual #21                 // Method unlockWrite:(J)V
     364: aload         17
     366: athrow
     367: goto          376
     370: aload_0
     371: lload         6
     373: invokevirtual #21                 // Method unlockWrite:(J)V
     376: aload         16
     378: athrow
    Exception table:
       from    to  target type
          79    83    92   any
          92    94    92   any
         130   134   143   any
         143   145   143   any
         259   263   272   any
         272   274   272   any
          20    68   330   any
         115   119   330   any
         166   248   330   any
         343   347   356   any
         356   358   356   any
         295   332   330   any

  private V remove(K, java.lang.Object, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore        4
       6: iload_3
       7: i2l
       8: aload_0
       9: getfield      #3                  // Field capacity:I
      12: invokestatic  #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.signSafeMod:(JI)I
      15: istore        6
      17: aload_0
      18: getfield      #8                  // Field table:[Ljava/lang/Object;
      21: iload         6
      23: aaload
      24: astore        7
      26: aload_0
      27: getfield      #8                  // Field table:[Ljava/lang/Object;
      30: iload         6
      32: iconst_1
      33: iadd
      34: aaload
      35: astore        8
      37: aload_1
      38: aload         7
      40: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          172
      46: aload_2
      47: ifnull        59
      50: aload_2
      51: aload         8
      53: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          160
      59: getstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      62: aload_0
      63: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      66: pop
      67: iload         6
      69: iconst_2
      70: iadd
      71: aload_0
      72: getfield      #8                  // Field table:[Ljava/lang/Object;
      75: arraylength
      76: iconst_1
      77: isub
      78: iand
      79: istore        9
      81: aload_0
      82: getfield      #8                  // Field table:[Ljava/lang/Object;
      85: iload         9
      87: aaload
      88: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
      91: if_acmpne     127
      94: aload_0
      95: getfield      #8                  // Field table:[Ljava/lang/Object;
      98: iload         6
     100: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
     103: aastore
     104: aload_0
     105: getfield      #8                  // Field table:[Ljava/lang/Object;
     108: iload         6
     110: iconst_1
     111: iadd
     112: aconst_null
     113: aastore
     114: aload_0
     115: dup
     116: getfield      #9                  // Field usedBuckets:I
     119: iconst_1
     120: isub
     121: putfield      #9                  // Field usedBuckets:I
     124: goto          147
     127: aload_0
     128: getfield      #8                  // Field table:[Ljava/lang/Object;
     131: iload         6
     133: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$500:()Ljava/lang/Object;
     136: aastore
     137: aload_0
     138: getfield      #8                  // Field table:[Ljava/lang/Object;
     141: iload         6
     143: iconst_1
     144: iadd
     145: aconst_null
     146: aastore
     147: aload         8
     149: astore        10
     151: aload_0
     152: lload         4
     154: invokevirtual #21                 // Method unlockWrite:(J)V
     157: aload         10
     159: areturn
     160: aconst_null
     161: astore        9
     163: aload_0
     164: lload         4
     166: invokevirtual #21                 // Method unlockWrite:(J)V
     169: aload         9
     171: areturn
     172: aload         7
     174: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
     177: if_acmpne     192
     180: aconst_null
     181: astore        9
     183: aload_0
     184: lload         4
     186: invokevirtual #21                 // Method unlockWrite:(J)V
     189: aload         9
     191: areturn
     192: iload         6
     194: iconst_2
     195: iadd
     196: aload_0
     197: getfield      #8                  // Field table:[Ljava/lang/Object;
     200: arraylength
     201: iconst_1
     202: isub
     203: iand
     204: istore        6
     206: goto          17
     209: astore        11
     211: aload_0
     212: lload         4
     214: invokevirtual #21                 // Method unlockWrite:(J)V
     217: aload         11
     219: athrow
    Exception table:
       from    to  target type
          17   151   209   any
         160   163   209   any
         172   183   209   any
         192   211   209   any

  void clear();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore_1
       5: aload_0
       6: getfield      #8                  // Field table:[Ljava/lang/Object;
       9: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
      12: invokestatic  #27                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field size:I
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field usedBuckets:I
      25: aload_0
      26: lload_1
      27: invokevirtual #21                 // Method unlockWrite:(J)V
      30: goto          41
      33: astore_3
      34: aload_0
      35: lload_1
      36: invokevirtual #21                 // Method unlockWrite:(J)V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    25    33   any

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field table:[Ljava/lang/Object;
       4: astore_2
       5: lconst_0
       6: lstore_3
       7: iconst_0
       8: istore        5
      10: iload         5
      12: aload_2
      13: arraylength
      14: if_icmpge     121
      17: lload_3
      18: lconst_0
      19: lcmp
      20: ifne          28
      23: aload_0
      24: invokevirtual #12                 // Method tryOptimisticRead:()J
      27: lstore_3
      28: aload_2
      29: iload         5
      31: aaload
      32: astore        6
      34: aload_2
      35: iload         5
      37: iconst_1
      38: iadd
      39: aaload
      40: astore        7
      42: aload_0
      43: lload_3
      44: invokevirtual #14                 // Method validate:(J)Z
      47: ifne          89
      50: aload_0
      51: invokevirtual #18                 // Method readLock:()J
      54: lstore_3
      55: aload_2
      56: iload         5
      58: aaload
      59: astore        6
      61: aload_2
      62: iload         5
      64: iconst_1
      65: iadd
      66: aaload
      67: astore        7
      69: aload_0
      70: lload_3
      71: invokevirtual #16                 // Method unlockRead:(J)V
      74: goto          87
      77: astore        8
      79: aload_0
      80: lload_3
      81: invokevirtual #16                 // Method unlockRead:(J)V
      84: aload         8
      86: athrow
      87: lconst_0
      88: lstore_3
      89: aload         6
      91: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$500:()Ljava/lang/Object;
      94: if_acmpeq     115
      97: aload         6
      99: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
     102: if_acmpeq     115
     105: aload_1
     106: aload         6
     108: aload         7
     110: invokeinterface #28,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     115: iinc          5, 2
     118: goto          10
     121: return
    Exception table:
       from    to  target type
          55    69    77   any
          77    79    77   any

  private void rehash();
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: iconst_2
       5: imul
       6: istore_1
       7: iconst_2
       8: iload_1
       9: imul
      10: anewarray     #7                  // class java/lang/Object
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_0
      18: getfield      #8                  // Field table:[Ljava/lang/Object;
      21: arraylength
      22: if_icmpge     74
      25: aload_0
      26: getfield      #8                  // Field table:[Ljava/lang/Object;
      29: iload_3
      30: aaload
      31: astore        4
      33: aload_0
      34: getfield      #8                  // Field table:[Ljava/lang/Object;
      37: iload_3
      38: iconst_1
      39: iadd
      40: aaload
      41: astore        5
      43: aload         4
      45: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
      48: if_acmpeq     68
      51: aload         4
      53: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$500:()Ljava/lang/Object;
      56: if_acmpeq     68
      59: aload_2
      60: iload_1
      61: aload         4
      63: aload         5
      65: invokestatic  #29                 // Method insertKeyValueNoLock:([Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)V
      68: iinc          3, 2
      71: goto          16
      74: aload_0
      75: aload_2
      76: putfield      #8                  // Field table:[Ljava/lang/Object;
      79: aload_0
      80: iload_1
      81: putfield      #3                  // Field capacity:I
      84: aload_0
      85: aload_0
      86: getfield      #4                  // Field size:I
      89: putfield      #9                  // Field usedBuckets:I
      92: aload_0
      93: aload_0
      94: getfield      #3                  // Field capacity:I
      97: i2f
      98: ldc           #10                 // float 0.66f
     100: fmul
     101: f2i
     102: putfield      #11                 // Field resizeThreshold:I
     105: return

  private static <K, V> void insertKeyValueNoLock(java.lang.Object[], int, K, V);
    Code:
       0: aload_2
       1: invokestatic  #30                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.hash:(Ljava/lang/Object;)J
       4: iload_1
       5: invokestatic  #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.signSafeMod:(JI)I
       8: istore        4
      10: aload_0
      11: iload         4
      13: aaload
      14: astore        5
      16: aload         5
      18: invokestatic  #17                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap.access$400:()Ljava/lang/Object;
      21: if_acmpne     37
      24: aload_0
      25: iload         4
      27: aload_2
      28: aastore
      29: aload_0
      30: iload         4
      32: iconst_1
      33: iadd
      34: aload_3
      35: aastore
      36: return
      37: iload         4
      39: iconst_2
      40: iadd
      41: aload_0
      42: arraylength
      43: iconst_1
      44: isub
      45: iand
      46: istore        4
      48: goto          10

  static int access$000(org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section);
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ireturn

  static int access$100(org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section);
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: ireturn

  static java.lang.Object access$200(org.apache.pulsar.common.util.collections.ConcurrentOpenHashMap$Section, java.lang.Object, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #2                  // Method remove:(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
       7: areturn

  static {};
    Code:
       0: ldc           #31                 // class org/apache/pulsar/common/util/collections/ConcurrentOpenHashMap$Section
       2: ldc           #32                 // String size
       4: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
