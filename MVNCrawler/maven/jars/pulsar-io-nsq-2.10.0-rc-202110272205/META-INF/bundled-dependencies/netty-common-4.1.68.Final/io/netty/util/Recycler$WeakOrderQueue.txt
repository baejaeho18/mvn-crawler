Compiled from "Recycler.java"
final class io.netty.util.Recycler$WeakOrderQueue extends java.lang.ref.WeakReference<java.lang.Thread> {
  static final io.netty.util.Recycler$WeakOrderQueue DUMMY;

  private final io.netty.util.Recycler$WeakOrderQueue$Head head;

  private io.netty.util.Recycler$WeakOrderQueue$Link tail;

  private io.netty.util.Recycler$WeakOrderQueue next;

  private final int id;

  private final int interval;

  private int handleRecycleCount;

  static final boolean $assertionsDisabled;

  private io.netty.util.Recycler$WeakOrderQueue();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #39                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: invokestatic  #43                 // Method io/netty/util/Recycler.access$700:()Ljava/util/concurrent/atomic/AtomicInteger;
       9: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      12: putfield      #51                 // Field id:I
      15: aload_0
      16: new           #11                 // class io/netty/util/Recycler$WeakOrderQueue$Head
      19: dup
      20: aconst_null
      21: invokespecial #54                 // Method io/netty/util/Recycler$WeakOrderQueue$Head."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;)V
      24: putfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
      27: aload_0
      28: iconst_0
      29: putfield      #58                 // Field interval:I
      32: return

  private io.netty.util.Recycler$WeakOrderQueue(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #39                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: invokestatic  #43                 // Method io/netty/util/Recycler.access$700:()Ljava/util/concurrent/atomic/AtomicInteger;
       9: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      12: putfield      #51                 // Field id:I
      15: aload_0
      16: new           #14                 // class io/netty/util/Recycler$WeakOrderQueue$Link
      19: dup
      20: invokespecial #63                 // Method io/netty/util/Recycler$WeakOrderQueue$Link."<init>":()V
      23: putfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      26: aload_0
      27: new           #11                 // class io/netty/util/Recycler$WeakOrderQueue$Head
      30: dup
      31: aload_1
      32: getfield      #69                 // Field io/netty/util/Recycler$Stack.availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokespecial #54                 // Method io/netty/util/Recycler$WeakOrderQueue$Head."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;)V
      38: putfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
      41: aload_0
      42: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
      45: aload_0
      46: getfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      49: putfield      #72                 // Field io/netty/util/Recycler$WeakOrderQueue$Head.link:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      52: aload_0
      53: aload_1
      54: invokestatic  #76                 // Method io/netty/util/Recycler$Stack.access$800:(Lio/netty/util/Recycler$Stack;)I
      57: putfield      #58                 // Field interval:I
      60: aload_0
      61: aload_0
      62: getfield      #58                 // Field interval:I
      65: putfield      #78                 // Field handleRecycleCount:I
      68: return

  static io.netty.util.Recycler$WeakOrderQueue newQueue(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #69                 // Field io/netty/util/Recycler$Stack.availableSharedCapacity:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokestatic  #90                 // Method io/netty/util/Recycler$WeakOrderQueue$Head.reserveSpaceForLink:(Ljava/util/concurrent/atomic/AtomicInteger;)Z
       7: ifne          12
      10: aconst_null
      11: areturn
      12: new           #2                  // class io/netty/util/Recycler$WeakOrderQueue
      15: dup
      16: aload_0
      17: aload_1
      18: invokespecial #92                 // Method "<init>":(Lio/netty/util/Recycler$Stack;Ljava/lang/Thread;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #96                 // Method io/netty/util/Recycler$Stack.setHead:(Lio/netty/util/Recycler$WeakOrderQueue;)V
      27: aload_2
      28: areturn

  io.netty.util.Recycler$WeakOrderQueue getNext();
    Code:
       0: aload_0
       1: getfield      #101                // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
       4: areturn

  void setNext(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          19
       6: aload_1
       7: aload_0
       8: if_acmpne     19
      11: new           #106                // class java/lang/AssertionError
      14: dup
      15: invokespecial #107                // Method java/lang/AssertionError."<init>":()V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #101                // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
      24: return

  void reclaimAllSpaceAndUnlink();
    Code:
       0: aload_0
       1: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
       4: invokevirtual #110                // Method io/netty/util/Recycler$WeakOrderQueue$Head.reclaimAllSpaceAndUnlink:()V
       7: aload_0
       8: aconst_null
       9: putfield      #101                // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
      12: return

  void add(io.netty.util.Recycler$DefaultHandle<?>);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: getfield      #51                 // Field id:I
       6: invokevirtual #117                // Method io/netty/util/Recycler$DefaultHandle.compareAndSetLastRecycledId:(II)Z
       9: ifne          13
      12: return
      13: aload_1
      14: getfield      #120                // Field io/netty/util/Recycler$DefaultHandle.hasBeenRecycled:Z
      17: ifne          47
      20: aload_0
      21: getfield      #78                 // Field handleRecycleCount:I
      24: aload_0
      25: getfield      #58                 // Field interval:I
      28: if_icmpge     42
      31: aload_0
      32: dup
      33: getfield      #78                 // Field handleRecycleCount:I
      36: iconst_1
      37: iadd
      38: putfield      #78                 // Field handleRecycleCount:I
      41: return
      42: aload_0
      43: iconst_0
      44: putfield      #78                 // Field handleRecycleCount:I
      47: aload_0
      48: getfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      51: astore_2
      52: aload_2
      53: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      56: dup
      57: istore_3
      58: invokestatic  #126                // Method io/netty/util/Recycler.access$600:()I
      61: if_icmpne     97
      64: aload_0
      65: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
      68: invokevirtual #130                // Method io/netty/util/Recycler$WeakOrderQueue$Head.newLink:()Lio/netty/util/Recycler$WeakOrderQueue$Link;
      71: astore        4
      73: aload         4
      75: ifnonnull     79
      78: return
      79: aload_0
      80: aload_2
      81: aload         4
      83: dup_x1
      84: putfield      #132                // Field io/netty/util/Recycler$WeakOrderQueue$Link.next:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      87: dup
      88: astore_2
      89: putfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      92: aload_2
      93: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      96: istore_3
      97: aload_2
      98: getfield      #136                // Field io/netty/util/Recycler$WeakOrderQueue$Link.elements:[Lio/netty/util/Recycler$DefaultHandle;
     101: iload_3
     102: aload_1
     103: aastore
     104: aload_1
     105: aconst_null
     106: putfield      #138                // Field io/netty/util/Recycler$DefaultHandle.stack:Lio/netty/util/Recycler$Stack;
     109: aload_2
     110: iload_3
     111: iconst_1
     112: iadd
     113: invokevirtual #142                // Method io/netty/util/Recycler$WeakOrderQueue$Link.lazySet:(I)V
     116: return

  boolean hasFinalData();
    Code:
       0: aload_0
       1: getfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       4: getfield      #151                // Field io/netty/util/Recycler$WeakOrderQueue$Link.readIndex:I
       7: aload_0
       8: getfield      #65                 // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      11: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      14: if_icmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  boolean transfer(io.netty.util.Recycler$Stack<?>);
    Code:
       0: aload_0
       1: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
       4: getfield      #72                 // Field io/netty/util/Recycler$WeakOrderQueue$Head.link:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: aload_2
      15: getfield      #151                // Field io/netty/util/Recycler$WeakOrderQueue$Link.readIndex:I
      18: invokestatic  #126                // Method io/netty/util/Recycler.access$600:()I
      21: if_icmpne     46
      24: aload_2
      25: getfield      #132                // Field io/netty/util/Recycler$WeakOrderQueue$Link.next:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      28: ifnonnull     33
      31: iconst_0
      32: ireturn
      33: aload_2
      34: getfield      #132                // Field io/netty/util/Recycler$WeakOrderQueue$Link.next:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      37: astore_2
      38: aload_0
      39: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
      42: aload_2
      43: invokevirtual #158                // Method io/netty/util/Recycler$WeakOrderQueue$Head.relink:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)V
      46: aload_2
      47: getfield      #151                // Field io/netty/util/Recycler$WeakOrderQueue$Link.readIndex:I
      50: istore_3
      51: aload_2
      52: invokevirtual #123                // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      55: istore        4
      57: iload         4
      59: iload_3
      60: isub
      61: istore        5
      63: iload         5
      65: ifne          70
      68: iconst_0
      69: ireturn
      70: aload_1
      71: getfield      #161                // Field io/netty/util/Recycler$Stack.size:I
      74: istore        6
      76: iload         6
      78: iload         5
      80: iadd
      81: istore        7
      83: iload         7
      85: aload_1
      86: getfield      #162                // Field io/netty/util/Recycler$Stack.elements:[Lio/netty/util/Recycler$DefaultHandle;
      89: arraylength
      90: if_icmple     115
      93: aload_1
      94: iload         7
      96: invokevirtual #166                // Method io/netty/util/Recycler$Stack.increaseCapacity:(I)I
      99: istore        8
     101: iload_3
     102: iload         8
     104: iadd
     105: iload         6
     107: isub
     108: iload         4
     110: invokestatic  #172                // Method java/lang/Math.min:(II)I
     113: istore        4
     115: iload_3
     116: iload         4
     118: if_icmpeq     289
     121: aload_2
     122: getfield      #136                // Field io/netty/util/Recycler$WeakOrderQueue$Link.elements:[Lio/netty/util/Recycler$DefaultHandle;
     125: astore        8
     127: aload_1
     128: getfield      #162                // Field io/netty/util/Recycler$Stack.elements:[Lio/netty/util/Recycler$DefaultHandle;
     131: astore        9
     133: iload         6
     135: istore        10
     137: iload_3
     138: istore        11
     140: iload         11
     142: iload         4
     144: if_icmpge     238
     147: aload         8
     149: iload         11
     151: aaload
     152: astore        12
     154: aload         12
     156: getfield      #176                // Field io/netty/util/Recycler$DefaultHandle.recycleId:I
     159: ifne          175
     162: aload         12
     164: aload         12
     166: getfield      #179                // Field io/netty/util/Recycler$DefaultHandle.lastRecycledId:I
     169: putfield      #176                // Field io/netty/util/Recycler$DefaultHandle.recycleId:I
     172: goto          198
     175: aload         12
     177: getfield      #176                // Field io/netty/util/Recycler$DefaultHandle.recycleId:I
     180: aload         12
     182: getfield      #179                // Field io/netty/util/Recycler$DefaultHandle.lastRecycledId:I
     185: if_icmpeq     198
     188: new           #181                // class java/lang/IllegalStateException
     191: dup
     192: ldc           #183                // String recycled already
     194: invokespecial #186                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     197: athrow
     198: aload         8
     200: iload         11
     202: aconst_null
     203: aastore
     204: aload_1
     205: aload         12
     207: invokevirtual #190                // Method io/netty/util/Recycler$Stack.dropHandle:(Lio/netty/util/Recycler$DefaultHandle;)Z
     210: ifeq          216
     213: goto          232
     216: aload         12
     218: aload_1
     219: putfield      #138                // Field io/netty/util/Recycler$DefaultHandle.stack:Lio/netty/util/Recycler$Stack;
     222: aload         9
     224: iload         10
     226: iinc          10, 1
     229: aload         12
     231: aastore
     232: iinc          11, 1
     235: goto          140
     238: iload         4
     240: invokestatic  #126                // Method io/netty/util/Recycler.access$600:()I
     243: if_icmpne     264
     246: aload_2
     247: getfield      #132                // Field io/netty/util/Recycler$WeakOrderQueue$Link.next:Lio/netty/util/Recycler$WeakOrderQueue$Link;
     250: ifnull        264
     253: aload_0
     254: getfield      #56                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Head;
     257: aload_2
     258: getfield      #132                // Field io/netty/util/Recycler$WeakOrderQueue$Link.next:Lio/netty/util/Recycler$WeakOrderQueue$Link;
     261: invokevirtual #158                // Method io/netty/util/Recycler$WeakOrderQueue$Head.relink:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)V
     264: aload_2
     265: iload         4
     267: putfield      #151                // Field io/netty/util/Recycler$WeakOrderQueue$Link.readIndex:I
     270: aload_1
     271: getfield      #161                // Field io/netty/util/Recycler$Stack.size:I
     274: iload         10
     276: if_icmpne     281
     279: iconst_0
     280: ireturn
     281: aload_1
     282: iload         10
     284: putfield      #161                // Field io/netty/util/Recycler$Stack.size:I
     287: iconst_1
     288: ireturn
     289: iconst_0
     290: ireturn

  static {};
    Code:
       0: ldc           #8                  // class io/netty/util/Recycler
       2: invokevirtual #208                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #104                // Field $assertionsDisabled:Z
      16: new           #2                  // class io/netty/util/Recycler$WeakOrderQueue
      19: dup
      20: invokespecial #209                // Method "<init>":()V
      23: putstatic     #211                // Field DUMMY:Lio/netty/util/Recycler$WeakOrderQueue;
      26: return
}
