Compiled from "AtomicReferenceArrayQueue.java"
abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue<E> extends java.util.AbstractQueue<E> implements io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue, io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue<E>, io.netty.util.internal.shaded.org.jctools.queues.SupportsIterator {
  protected final java.util.concurrent.atomic.AtomicReferenceArray<E> buffer;

  protected final int mask;

  public io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/util/AbstractQueue."<init>":()V
       4: iload_1
       5: invokestatic  #36                 // Method io/netty/util/internal/shaded/org/jctools/util/Pow2.roundToPowerOfTwo:(I)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: iconst_1
      12: isub
      13: putfield      #38                 // Field mask:I
      16: aload_0
      17: new           #40                 // class java/util/concurrent/atomic/AtomicReferenceArray
      20: dup
      21: iload_2
      22: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      25: putfield      #44                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      28: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #62                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method poll:()Ljava/lang/Object;
       4: ifnull        10
       7: goto          0
      10: return

  public final int capacity();
    Code:
       0: aload_0
       1: getfield      #38                 // Field mask:I
       4: iconst_1
       5: iadd
       6: ireturn

  public final int size();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method io/netty/util/internal/shaded/org/jctools/queues/IndexedQueueSizeUtil.size:(Lio/netty/util/internal/shaded/org/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)I
       4: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method io/netty/util/internal/shaded/org/jctools/queues/IndexedQueueSizeUtil.isEmpty:(Lio/netty/util/internal/shaded/org/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)Z
       4: ireturn

  public final long currentProducerIndex();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method lvProducerIndex:()J
       4: lreturn

  public final long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method lvConsumerIndex:()J
       4: lreturn

  public final java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #82                 // Method lvProducerIndex:()J
       9: lstore_3
      10: new           #16                 // class io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicReferenceArrayQueue$WeakIterator
      13: dup
      14: lload_1
      15: lload_3
      16: aload_0
      17: getfield      #38                 // Field mask:I
      20: aload_0
      21: getfield      #44                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      24: invokespecial #92                 // Method io/netty/util/internal/shaded/org/jctools/queues/atomic/AtomicReferenceArrayQueue$WeakIterator."<init>":(JJILjava/util/concurrent/atomic/AtomicReferenceArray;)V
      27: areturn
}
