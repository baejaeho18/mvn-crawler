Compiled from "Recycler.java"
class io.netty.util.Recycler$2 extends io.netty.util.concurrent.FastThreadLocal<io.netty.util.Recycler$Stack<T>> {
  final io.netty.util.Recycler this$0;

  io.netty.util.Recycler$2(io.netty.util.Recycler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field this$0:Lio/netty/util/Recycler;
       5: aload_0
       6: invokespecial #20                 // Method io/netty/util/concurrent/FastThreadLocal."<init>":()V
       9: return

  protected io.netty.util.Recycler$Stack<T> initialValue();
    Code:
       0: new           #10                 // class io/netty/util/Recycler$Stack
       3: dup
       4: aload_0
       5: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
       8: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: aload_0
      12: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
      15: invokestatic  #35                 // Method io/netty/util/Recycler.access$000:(Lio/netty/util/Recycler;)I
      18: aload_0
      19: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
      22: invokestatic  #38                 // Method io/netty/util/Recycler.access$100:(Lio/netty/util/Recycler;)I
      25: aload_0
      26: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
      29: invokestatic  #41                 // Method io/netty/util/Recycler.access$200:(Lio/netty/util/Recycler;)I
      32: aload_0
      33: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
      36: invokestatic  #44                 // Method io/netty/util/Recycler.access$300:(Lio/netty/util/Recycler;)I
      39: aload_0
      40: getfield      #17                 // Field this$0:Lio/netty/util/Recycler;
      43: invokestatic  #47                 // Method io/netty/util/Recycler.access$400:(Lio/netty/util/Recycler;)I
      46: invokespecial #50                 // Method io/netty/util/Recycler$Stack."<init>":(Lio/netty/util/Recycler;Ljava/lang/Thread;IIIII)V
      49: areturn

  protected void onRemoval(io.netty.util.Recycler$Stack<T>);
    Code:
       0: aload_1
       1: getfield      #57                 // Field io/netty/util/Recycler$Stack.threadRef:Ljava/lang/ref/WeakReference;
       4: invokevirtual #63                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      10: if_acmpne     38
      13: invokestatic  #67                 // Method io/netty/util/Recycler.access$500:()Lio/netty/util/concurrent/FastThreadLocal;
      16: invokevirtual #71                 // Method io/netty/util/concurrent/FastThreadLocal.isSet:()Z
      19: ifeq          38
      22: invokestatic  #67                 // Method io/netty/util/Recycler.access$500:()Lio/netty/util/concurrent/FastThreadLocal;
      25: invokevirtual #72                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
      28: checkcast     #74                 // class java/util/Map
      31: aload_1
      32: invokeinterface #78,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  protected void onRemoval(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class io/netty/util/Recycler$Stack
       5: invokevirtual #86                 // Method onRemoval:(Lio/netty/util/Recycler$Stack;)V
       8: return

  protected java.lang.Object initialValue() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method initialValue:()Lio/netty/util/Recycler$Stack;
       4: areturn
}
