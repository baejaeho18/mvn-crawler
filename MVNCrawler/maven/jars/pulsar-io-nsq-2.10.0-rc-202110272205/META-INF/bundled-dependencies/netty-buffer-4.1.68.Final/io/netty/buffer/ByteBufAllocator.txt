Compiled from "ByteBufAllocator.java"
public interface io.netty.buffer.ByteBufAllocator {
  public static final io.netty.buffer.ByteBufAllocator DEFAULT;

  public abstract io.netty.buffer.ByteBuf buffer();

  public abstract io.netty.buffer.ByteBuf buffer(int);

  public abstract io.netty.buffer.ByteBuf buffer(int, int);

  public abstract io.netty.buffer.ByteBuf ioBuffer();

  public abstract io.netty.buffer.ByteBuf ioBuffer(int);

  public abstract io.netty.buffer.ByteBuf ioBuffer(int, int);

  public abstract io.netty.buffer.ByteBuf heapBuffer();

  public abstract io.netty.buffer.ByteBuf heapBuffer(int);

  public abstract io.netty.buffer.ByteBuf heapBuffer(int, int);

  public abstract io.netty.buffer.ByteBuf directBuffer();

  public abstract io.netty.buffer.ByteBuf directBuffer(int);

  public abstract io.netty.buffer.ByteBuf directBuffer(int, int);

  public abstract io.netty.buffer.CompositeByteBuf compositeBuffer();

  public abstract io.netty.buffer.CompositeByteBuf compositeBuffer(int);

  public abstract io.netty.buffer.CompositeByteBuf compositeHeapBuffer();

  public abstract io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int);

  public abstract io.netty.buffer.CompositeByteBuf compositeDirectBuffer();

  public abstract io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int);

  public abstract boolean isDirectBufferPooled();

  public abstract int calculateNewCapacity(int, int);

  static {};
    Code:
       0: getstatic     #1                  // Field io/netty/buffer/ByteBufUtil.DEFAULT_ALLOCATOR:Lio/netty/buffer/ByteBufAllocator;
       3: putstatic     #2                  // Field DEFAULT:Lio/netty/buffer/ByteBufAllocator;
       6: return
}
