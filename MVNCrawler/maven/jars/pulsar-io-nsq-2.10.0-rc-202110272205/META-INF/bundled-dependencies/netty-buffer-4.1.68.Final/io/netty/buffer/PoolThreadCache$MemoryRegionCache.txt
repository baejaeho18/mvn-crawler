Compiled from "PoolThreadCache.java"
abstract class io.netty.buffer.PoolThreadCache$MemoryRegionCache<T> {
  private final int size;

  private final java.util.Queue<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry<T>> queue;

  private final io.netty.buffer.PoolArena$SizeClass sizeClass;

  private int allocations;

  private static final io.netty.util.internal.ObjectPool<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry> RECYCLER;

  io.netty.buffer.PoolThreadCache$MemoryRegionCache(int, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #2                  // Method io/netty/util/internal/MathUtil.safeFindNextPositivePowerOfTwo:(I)I
       9: putfield      #3                  // Field size:I
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field size:I
      17: invokestatic  #4                  // Method io/netty/util/internal/PlatformDependent.newFixedMpscQueue:(I)Ljava/util/Queue;
      20: putfield      #5                  // Field queue:Ljava/util/Queue;
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field sizeClass:Lio/netty/buffer/PoolArena$SizeClass;
      28: return

  protected abstract void initBuf(io.netty.buffer.PoolChunk<T>, java.nio.ByteBuffer, long, io.netty.buffer.PooledByteBuf<T>, int, io.netty.buffer.PoolThreadCache);

  public final boolean add(io.netty.buffer.PoolChunk<T>, java.nio.ByteBuffer, long, int);
    Code:
       0: aload_1
       1: aload_2
       2: lload_3
       3: iload         5
       5: invokestatic  #7                  // Method newEntry:(Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JI)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry;
       8: astore        6
      10: aload_0
      11: getfield      #5                  // Field queue:Ljava/util/Queue;
      14: aload         6
      16: invokeinterface #8,  2            // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      21: istore        7
      23: iload         7
      25: ifne          33
      28: aload         6
      30: invokevirtual #9                  // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      33: iload         7
      35: ireturn

  public final boolean allocate(io.netty.buffer.PooledByteBuf<T>, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #11                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
      12: astore        4
      14: aload         4
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: aload         4
      24: getfield      #12                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
      27: aload         4
      29: getfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.nioBuffer:Ljava/nio/ByteBuffer;
      32: aload         4
      34: getfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
      37: aload_1
      38: iload_2
      39: aload_3
      40: invokevirtual #15                 // Method initBuf:(Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JLio/netty/buffer/PooledByteBuf;ILio/netty/buffer/PoolThreadCache;)V
      43: aload         4
      45: invokevirtual #9                  // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      48: aload_0
      49: dup
      50: getfield      #16                 // Field allocations:I
      53: iconst_1
      54: iadd
      55: putfield      #16                 // Field allocations:I
      58: iconst_1
      59: ireturn

  public final int free(boolean);
    Code:
       0: aload_0
       1: ldc           #18                 // int 2147483647
       3: iload_1
       4: invokespecial #19                 // Method free:(IZ)I
       7: ireturn

  private int free(int, boolean);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_1
       4: if_icmpge     44
       7: aload_0
       8: getfield      #5                  // Field queue:Ljava/util/Queue;
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      16: checkcast     #11                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
      19: astore        4
      21: aload         4
      23: ifnull        36
      26: aload_0
      27: aload         4
      29: iload_2
      30: invokespecial #20                 // Method freeEntry:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry;Z)V
      33: goto          38
      36: iload_3
      37: ireturn
      38: iinc          3, 1
      41: goto          2
      44: iload_3
      45: ireturn

  public final void trim();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: aload_0
       5: getfield      #16                 // Field allocations:I
       8: isub
       9: istore_1
      10: aload_0
      11: iconst_0
      12: putfield      #16                 // Field allocations:I
      15: iload_1
      16: ifle          26
      19: aload_0
      20: iload_1
      21: iconst_0
      22: invokespecial #19                 // Method free:(IZ)I
      25: pop
      26: return

  private void freeEntry(io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry, boolean);
    Code:
       0: aload_1
       1: getfield      #12                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
       4: astore_3
       5: aload_1
       6: getfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
       9: lstore        4
      11: aload_1
      12: getfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.nioBuffer:Ljava/nio/ByteBuffer;
      15: astore        6
      17: iload_2
      18: ifne          25
      21: aload_1
      22: invokevirtual #9                  // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      25: aload_3
      26: getfield      #21                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      29: aload_3
      30: lload         4
      32: aload_1
      33: getfield      #22                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.normCapacity:I
      36: aload_0
      37: getfield      #6                  // Field sizeClass:Lio/netty/buffer/PoolArena$SizeClass;
      40: aload         6
      42: iload_2
      43: invokevirtual #23                 // Method io/netty/buffer/PoolArena.freeChunk:(Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolArena$SizeClass;Ljava/nio/ByteBuffer;Z)V
      46: return

  private static io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newEntry(io.netty.buffer.PoolChunk<?>, java.nio.ByteBuffer, long, int);
    Code:
       0: getstatic     #24                 // Field RECYCLER:Lio/netty/util/internal/ObjectPool;
       3: invokevirtual #25                 // Method io/netty/util/internal/ObjectPool.get:()Ljava/lang/Object;
       6: checkcast     #11                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
       9: astore        5
      11: aload         5
      13: aload_0
      14: putfield      #12                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
      17: aload         5
      19: aload_1
      20: putfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.nioBuffer:Ljava/nio/ByteBuffer;
      23: aload         5
      25: lload_2
      26: putfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
      29: aload         5
      31: iload         4
      33: putfield      #22                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.normCapacity:I
      36: aload         5
      38: areturn

  static {};
    Code:
       0: new           #26                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$1
       3: dup
       4: invokespecial #27                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$1."<init>":()V
       7: invokestatic  #28                 // Method io/netty/util/internal/ObjectPool.newPool:(Lio/netty/util/internal/ObjectPool$ObjectCreator;)Lio/netty/util/internal/ObjectPool;
      10: putstatic     #24                 // Field RECYCLER:Lio/netty/util/internal/ObjectPool;
      13: return
}
