Compiled from "DirectoryWalker.java"
public abstract class org.apache.commons.io.DirectoryWalker<T> {
  private final java.io.FileFilter filter;

  private final int depthLimit;

  protected org.apache.commons.io.DirectoryWalker();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_m1
       3: invokespecial #1                  // Method "<init>":(Ljava/io/FileFilter;I)V
       6: return

  protected org.apache.commons.io.DirectoryWalker(java.io.FileFilter, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field filter:Ljava/io/FileFilter;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field depthLimit:I
      14: return

  protected org.apache.commons.io.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     20
       8: aload_2
       9: ifnonnull     20
      12: aload_0
      13: aconst_null
      14: putfield      #3                  // Field filter:Ljava/io/FileFilter;
      17: goto          73
      20: aload_1
      21: ifnull        28
      24: aload_1
      25: goto          31
      28: getstatic     #5                  // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;
      31: astore_1
      32: aload_2
      33: ifnull        40
      36: aload_2
      37: goto          43
      40: getstatic     #5                  // Field org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;
      43: astore_2
      44: aload_1
      45: invokestatic  #6                  // Method org/apache/commons/io/filefilter/FileFilterUtils.makeDirectoryOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;
      48: astore_1
      49: aload_2
      50: invokestatic  #7                  // Method org/apache/commons/io/filefilter/FileFilterUtils.makeFileOnly:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;
      53: astore_2
      54: aload_0
      55: iconst_2
      56: anewarray     #8                  // class org/apache/commons/io/filefilter/IOFileFilter
      59: dup
      60: iconst_0
      61: aload_1
      62: aastore
      63: dup
      64: iconst_1
      65: aload_2
      66: aastore
      67: invokestatic  #9                  // Method org/apache/commons/io/filefilter/FileFilterUtils.or:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;
      70: putfield      #3                  // Field filter:Ljava/io/FileFilter;
      73: aload_0
      74: iload_3
      75: putfield      #4                  // Field depthLimit:I
      78: return

  protected final void walk(java.io.File, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #10                 // String startDirectory
       3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #12                 // Method handleStart:(Ljava/io/File;Ljava/util/Collection;)V
      13: aload_0
      14: aload_1
      15: iconst_0
      16: aload_2
      17: invokespecial #13                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V
      20: aload_0
      21: aload_2
      22: invokevirtual #14                 // Method handleEnd:(Ljava/util/Collection;)V
      25: goto          36
      28: astore_3
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokevirtual #16                 // Method handleCancelled:(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V
      36: return
    Exception table:
       from    to  target type
           7    25    28   Class org/apache/commons/io/DirectoryWalker$CancelException

  private void walk(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #17                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V
       7: aload_0
       8: aload_1
       9: iload_2
      10: aload_3
      11: invokevirtual #18                 // Method handleDirectory:(Ljava/io/File;ILjava/util/Collection;)Z
      14: ifeq          188
      17: aload_0
      18: aload_1
      19: iload_2
      20: aload_3
      21: invokevirtual #19                 // Method handleDirectoryStart:(Ljava/io/File;ILjava/util/Collection;)V
      24: iload_2
      25: iconst_1
      26: iadd
      27: istore        4
      29: aload_0
      30: getfield      #4                  // Field depthLimit:I
      33: iflt          45
      36: iload         4
      38: aload_0
      39: getfield      #4                  // Field depthLimit:I
      42: if_icmpgt     181
      45: aload_0
      46: aload_1
      47: iload_2
      48: aload_3
      49: invokevirtual #17                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V
      52: aload_0
      53: getfield      #3                  // Field filter:Ljava/io/FileFilter;
      56: ifnonnull     66
      59: aload_1
      60: invokevirtual #20                 // Method java/io/File.listFiles:()[Ljava/io/File;
      63: goto          74
      66: aload_1
      67: aload_0
      68: getfield      #3                  // Field filter:Ljava/io/FileFilter;
      71: invokevirtual #21                 // Method java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;
      74: astore        5
      76: aload_0
      77: aload_1
      78: iload_2
      79: aload         5
      81: invokevirtual #22                 // Method filterDirectoryContents:(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;
      84: astore        5
      86: aload         5
      88: ifnonnull     102
      91: aload_0
      92: aload_1
      93: iload         4
      95: aload_3
      96: invokevirtual #23                 // Method handleRestricted:(Ljava/io/File;ILjava/util/Collection;)V
      99: goto          181
     102: aload         5
     104: astore        6
     106: aload         6
     108: arraylength
     109: istore        7
     111: iconst_0
     112: istore        8
     114: iload         8
     116: iload         7
     118: if_icmpge     181
     121: aload         6
     123: iload         8
     125: aaload
     126: astore        9
     128: aload         9
     130: invokevirtual #24                 // Method java/io/File.isDirectory:()Z
     133: ifeq          148
     136: aload_0
     137: aload         9
     139: iload         4
     141: aload_3
     142: invokespecial #13                 // Method walk:(Ljava/io/File;ILjava/util/Collection;)V
     145: goto          175
     148: aload_0
     149: aload         9
     151: iload         4
     153: aload_3
     154: invokevirtual #17                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V
     157: aload_0
     158: aload         9
     160: iload         4
     162: aload_3
     163: invokevirtual #25                 // Method handleFile:(Ljava/io/File;ILjava/util/Collection;)V
     166: aload_0
     167: aload         9
     169: iload         4
     171: aload_3
     172: invokevirtual #17                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V
     175: iinc          8, 1
     178: goto          114
     181: aload_0
     182: aload_1
     183: iload_2
     184: aload_3
     185: invokevirtual #26                 // Method handleDirectoryEnd:(Ljava/io/File;ILjava/util/Collection;)V
     188: aload_0
     189: aload_1
     190: iload_2
     191: aload_3
     192: invokevirtual #17                 // Method checkIfCancelled:(Ljava/io/File;ILjava/util/Collection;)V
     195: return

  protected final void checkIfCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #27                 // Method handleIsCancelled:(Ljava/io/File;ILjava/util/Collection;)Z
       7: ifeq          20
      10: new           #15                 // class org/apache/commons/io/DirectoryWalker$CancelException
      13: dup
      14: aload_1
      15: iload_2
      16: invokespecial #28                 // Method org/apache/commons/io/DirectoryWalker$CancelException."<init>":(Ljava/io/File;I)V
      19: athrow
      20: return

  protected boolean handleIsCancelled(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  protected void handleCancelled(java.io.File, java.util.Collection<T>, org.apache.commons.io.DirectoryWalker$CancelException) throws java.io.IOException;
    Code:
       0: aload_3
       1: athrow

  protected void handleStart(java.io.File, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return

  protected boolean handleDirectory(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  protected void handleDirectoryStart(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return

  protected java.io.File[] filterDirectoryContents(java.io.File, int, java.io.File...) throws java.io.IOException;
    Code:
       0: aload_3
       1: areturn

  protected void handleFile(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return

  protected void handleRestricted(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return

  protected void handleDirectoryEnd(java.io.File, int, java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return

  protected void handleEnd(java.util.Collection<T>) throws java.io.IOException;
    Code:
       0: return
}
