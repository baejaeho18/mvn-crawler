Compiled from "ReaderInputStream.java"
public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream {
  private static final int DEFAULT_BUFFER_SIZE;

  private final java.io.Reader reader;

  private final java.nio.charset.CharsetEncoder encoder;

  private final java.nio.CharBuffer encoderIn;

  private final java.nio.ByteBuffer encoderOut;

  private java.nio.charset.CoderResult lastCoderResult;

  private boolean endOfInput;

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #3                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field reader:Ljava/io/Reader;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
      14: aload_0
      15: iload_3
      16: invokestatic  #7                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      19: putfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      22: aload_0
      23: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      26: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      29: pop
      30: aload_0
      31: sipush        128
      34: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      37: putfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      40: aload_0
      41: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      44: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      47: pop
      48: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
       9: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      15: invokevirtual #16                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      18: iload_3
      19: invokespecial #3                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
      22: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #17                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokespecial #17                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
      10: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        1024
       6: invokespecial #19                 // Method "<init>":(Ljava/io/Reader;Ljava/lang/String;I)V
       9: return

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: invokespecial #21                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
       8: return

  private void fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field endOfInput:Z
       4: ifne          95
       7: aload_0
       8: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
      11: ifnull        24
      14: aload_0
      15: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
      18: invokevirtual #24                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      21: ifeq          95
      24: aload_0
      25: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      28: invokevirtual #25                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
      31: pop
      32: aload_0
      33: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      36: invokevirtual #26                 // Method java/nio/CharBuffer.position:()I
      39: istore_1
      40: aload_0
      41: getfield      #5                  // Field reader:Ljava/io/Reader;
      44: aload_0
      45: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      48: invokevirtual #27                 // Method java/nio/CharBuffer.array:()[C
      51: iload_1
      52: aload_0
      53: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      56: invokevirtual #28                 // Method java/nio/CharBuffer.remaining:()I
      59: invokevirtual #29                 // Method java/io/Reader.read:([CII)I
      62: istore_2
      63: iload_2
      64: iconst_m1
      65: if_icmpne     76
      68: aload_0
      69: iconst_1
      70: putfield      #22                 // Field endOfInput:Z
      73: goto          87
      76: aload_0
      77: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      80: iload_1
      81: iload_2
      82: iadd
      83: invokevirtual #30                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      86: pop
      87: aload_0
      88: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
      91: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      94: pop
      95: aload_0
      96: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      99: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     102: pop
     103: aload_0
     104: aload_0
     105: getfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
     108: aload_0
     109: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
     112: aload_0
     113: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
     116: aload_0
     117: getfield      #22                 // Field endOfInput:Z
     120: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
     123: putfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
     126: aload_0
     127: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
     130: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     133: pop
     134: return

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #33                 // String array
       3: invokestatic  #34                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_3
       8: iflt          23
      11: iload_2
      12: iflt          23
      15: iload_2
      16: iload_3
      17: iadd
      18: aload_1
      19: arraylength
      20: if_icmple     69
      23: new           #35                 // class java/lang/IndexOutOfBoundsException
      26: dup
      27: new           #36                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #38                 // String Array Size=
      36: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: arraylength
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #41                 // String , offset=
      46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_2
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #42                 // String , length=
      55: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_3
      59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: iconst_0
      70: istore        4
      72: iload_3
      73: ifne          78
      76: iconst_0
      77: ireturn
      78: iload_3
      79: ifle          161
      82: aload_0
      83: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      86: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      89: ifeq          137
      92: aload_0
      93: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      96: invokevirtual #46                 // Method java/nio/ByteBuffer.remaining:()I
      99: iload_3
     100: invokestatic  #47                 // Method java/lang/Math.min:(II)I
     103: istore        5
     105: aload_0
     106: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
     109: aload_1
     110: iload_2
     111: iload         5
     113: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     116: pop
     117: iload_2
     118: iload         5
     120: iadd
     121: istore_2
     122: iload_3
     123: iload         5
     125: isub
     126: istore_3
     127: iload         4
     129: iload         5
     131: iadd
     132: istore        4
     134: goto          78
     137: aload_0
     138: invokespecial #49                 // Method fillBuffer:()V
     141: aload_0
     142: getfield      #22                 // Field endOfInput:Z
     145: ifeq          78
     148: aload_0
     149: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
     152: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     155: ifne          78
     158: goto          161
     161: iload         4
     163: ifne          177
     166: aload_0
     167: getfield      #22                 // Field endOfInput:Z
     170: ifeq          177
     173: iconst_m1
     174: goto          179
     177: iload         4
     179: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #50                 // Method read:([BII)I
       8: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
       4: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          22
      10: aload_0
      11: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      14: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B
      17: sipush        255
      20: iand
      21: ireturn
      22: aload_0
      23: invokespecial #49                 // Method fillBuffer:()V
      26: aload_0
      27: getfield      #22                 // Field endOfInput:Z
      30: ifeq          0
      33: aload_0
      34: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
      37: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      40: ifne          0
      43: iconst_m1
      44: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #52                 // Method java/io/Reader.close:()V
       7: return
}
