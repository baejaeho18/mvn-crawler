Compiled from "CountingPathVisitor.java"
public class org.apache.commons.io.file.CountingPathVisitor extends org.apache.commons.io.file.SimplePathVisitor {
  static final java.lang.String[] EMPTY_STRING_ARRAY;

  private final org.apache.commons.io.file.Counters$PathCounters pathCounters;

  public static org.apache.commons.io.file.CountingPathVisitor withBigIntegerCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/CountingPathVisitor
       3: dup
       4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
      10: areturn

  public static org.apache.commons.io.file.CountingPathVisitor withLongCounters();
    Code:
       0: new           #1                  // class org/apache/commons/io/file/CountingPathVisitor
       3: dup
       4: invokestatic  #4                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
      10: areturn

  public org.apache.commons.io.file.CountingPathVisitor(org.apache.commons.io.file.Counters$PathCounters);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/commons/io/file/SimplePathVisitor."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #6                  // String pathCounter
       8: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #8                  // class org/apache/commons/io/file/Counters$PathCounters
      14: putfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
      17: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/apache/commons/io/file/CountingPathVisitor
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class org/apache/commons/io/file/CountingPathVisitor
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
      25: aload_2
      26: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
      29: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ireturn

  public org.apache.commons.io.file.Counters$PathCounters getPathCounters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
       4: areturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #11                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
      10: aastore
      11: invokestatic  #12                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;
       9: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
      14: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      17: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
       4: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  protected void updateFileCounters(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
       9: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
      14: aload_0
      15: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
      18: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
      23: aload_2
      24: invokeinterface #19,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.size:()J
      29: invokeinterface #20,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V
      34: return

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #21                 // class java/nio/file/LinkOption
       5: invokestatic  #22                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          17
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokevirtual #23                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
      17: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      20: areturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #25                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #26                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #27                 // class java/lang/String
       4: putstatic     #28                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
       7: return
}
