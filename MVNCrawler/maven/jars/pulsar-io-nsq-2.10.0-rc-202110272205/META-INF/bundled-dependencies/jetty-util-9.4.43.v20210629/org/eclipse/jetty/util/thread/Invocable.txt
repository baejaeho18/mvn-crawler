Compiled from "Invocable.java"
public interface org.eclipse.jetty.util.thread.Invocable {
  public static final java.lang.ThreadLocal<java.lang.Boolean> __nonBlocking;

  public static boolean isNonBlockingInvocation();
    Code:
       0: getstatic     #1                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: getstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
       6: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: invokevirtual #4                  // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      12: ireturn

  public static void invokeNonBlocking(java.lang.Runnable);
    Code:
       0: getstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class java/lang/Boolean
       9: astore_1
      10: getstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
      13: getstatic     #1                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      16: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      19: aload_0
      20: invokeinterface #7,  1            // InterfaceMethod java/lang/Runnable.run:()V
      25: getstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
      28: aload_1
      29: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      32: goto          45
      35: astore_2
      36: getstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
      39: aload_1
      40: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          10    25    35   any

  public static org.eclipse.jetty.util.thread.Invocable$InvocationType combine(org.eclipse.jetty.util.thread.Invocable$InvocationType, org.eclipse.jetty.util.thread.Invocable$InvocationType);
    Code:
       0: aload_0
       1: ifnull        33
       4: aload_1
       5: ifnull        33
       8: aload_0
       9: aload_1
      10: if_acmpne     15
      13: aload_0
      14: areturn
      15: aload_0
      16: getstatic     #8                  // Field org/eclipse/jetty/util/thread/Invocable$InvocationType.EITHER:Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
      19: if_acmpne     24
      22: aload_1
      23: areturn
      24: aload_1
      25: getstatic     #8                  // Field org/eclipse/jetty/util/thread/Invocable$InvocationType.EITHER:Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
      28: if_acmpne     33
      31: aload_0
      32: areturn
      33: getstatic     #9                  // Field org/eclipse/jetty/util/thread/Invocable$InvocationType.BLOCKING:Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
      36: areturn

  public static org.eclipse.jetty.util.thread.Invocable$InvocationType getInvocationType(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #10                 // class org/eclipse/jetty/util/thread/Invocable
       4: ifeq          17
       7: aload_0
       8: checkcast     #10                 // class org/eclipse/jetty/util/thread/Invocable
      11: invokeinterface #11,  1           // InterfaceMethod getInvocationType:()Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
      16: areturn
      17: getstatic     #9                  // Field org/eclipse/jetty/util/thread/Invocable$InvocationType.BLOCKING:Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
      20: areturn

  public default org.eclipse.jetty.util.thread.Invocable$InvocationType getInvocationType();
    Code:
       0: getstatic     #9                  // Field org/eclipse/jetty/util/thread/Invocable$InvocationType.BLOCKING:Lorg/eclipse/jetty/util/thread/Invocable$InvocationType;
       3: areturn

  static {};
    Code:
       0: new           #12                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #13                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #2                  // Field __nonBlocking:Ljava/lang/ThreadLocal;
      10: return
}
