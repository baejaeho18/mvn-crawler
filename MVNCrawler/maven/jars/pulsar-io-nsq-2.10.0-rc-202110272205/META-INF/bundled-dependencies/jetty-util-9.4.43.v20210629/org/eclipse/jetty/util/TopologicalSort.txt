Compiled from "TopologicalSort.java"
public class org.eclipse.jetty.util.TopologicalSort<T> {
  private final java.util.Map<T, java.util.Set<T>> _dependencies;

  public org.eclipse.jetty.util.TopologicalSort();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field _dependencies:Ljava/util/Map;
      15: return

  public void addDependency(T, T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _dependencies:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/util/Set
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: new           #7                  // class java/util/HashSet
      21: dup
      22: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      25: astore_3
      26: aload_0
      27: getfield      #4                  // Field _dependencies:Ljava/util/Map;
      30: aload_1
      31: aload_3
      32: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: aload_2
      40: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public void sort(T[]);
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #7                  // class java/util/HashSet
      11: dup
      12: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      15: astore_3
      16: new           #13                 // class org/eclipse/jetty/util/TopologicalSort$InitialOrderComparator
      19: dup
      20: aload_1
      21: invokespecial #14                 // Method org/eclipse/jetty/util/TopologicalSort$InitialOrderComparator."<init>":([Ljava/lang/Object;)V
      24: astore        4
      26: aload_1
      27: astore        5
      29: aload         5
      31: arraylength
      32: istore        6
      34: iconst_0
      35: istore        7
      37: iload         7
      39: iload         6
      41: if_icmpge     67
      44: aload         5
      46: iload         7
      48: aaload
      49: astore        8
      51: aload_0
      52: aload         8
      54: aload_3
      55: aload_2
      56: aload         4
      58: invokespecial #15                 // Method visit:(Ljava/lang/Object;Ljava/util/Set;Ljava/util/List;Ljava/util/Comparator;)V
      61: iinc          7, 1
      64: goto          37
      67: aload_2
      68: aload_1
      69: invokeinterface #16,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      74: pop
      75: return

  public void sort(java.util.Collection<T>);
    Code:
       0: new           #11                 // class java/util/ArrayList
       3: dup
       4: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #7                  // class java/util/HashSet
      11: dup
      12: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      15: astore_3
      16: new           #13                 // class org/eclipse/jetty/util/TopologicalSort$InitialOrderComparator
      19: dup
      20: aload_1
      21: invokespecial #17                 // Method org/eclipse/jetty/util/TopologicalSort$InitialOrderComparator."<init>":(Ljava/util/Collection;)V
      24: astore        4
      26: aload_1
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        5
      34: aload         5
      36: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          66
      44: aload         5
      46: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: astore        6
      53: aload_0
      54: aload         6
      56: aload_3
      57: aload_2
      58: aload         4
      60: invokespecial #15                 // Method visit:(Ljava/lang/Object;Ljava/util/Set;Ljava/util/List;Ljava/util/Comparator;)V
      63: goto          34
      66: aload_1
      67: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.clear:()V
      72: aload_1
      73: aload_2
      74: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      79: pop
      80: return

  private void visit(T, java.util.Set<T>, java.util.List<T>, java.util.Comparator<T>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #23,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       7: ifne          127
      10: aload_2
      11: aload_1
      12: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getfield      #4                  // Field _dependencies:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #6                  // class java/util/Set
      31: astore        5
      33: aload         5
      35: ifnull        116
      38: new           #24                 // class java/util/TreeSet
      41: dup
      42: aload         4
      44: invokespecial #25                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      47: astore        6
      49: aload         6
      51: aload         5
      53: invokeinterface #26,  2           // InterfaceMethod java/util/SortedSet.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: aload         6
      61: invokeinterface #27,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
      66: astore        7
      68: aload         7
      70: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          100
      78: aload         7
      80: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: astore        8
      87: aload_0
      88: aload         8
      90: aload_2
      91: aload_3
      92: aload         4
      94: invokespecial #15                 // Method visit:(Ljava/lang/Object;Ljava/util/Set;Ljava/util/List;Ljava/util/Comparator;)V
      97: goto          68
     100: goto          116
     103: astore        7
     105: new           #28                 // class org/eclipse/jetty/util/TopologicalSort$CyclicException
     108: dup
     109: aload_1
     110: aload         7
     112: invokespecial #29                 // Method org/eclipse/jetty/util/TopologicalSort$CyclicException."<init>":(Ljava/lang/Object;Lorg/eclipse/jetty/util/TopologicalSort$CyclicException;)V
     115: athrow
     116: aload_3
     117: aload_1
     118: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: goto          146
     127: aload_3
     128: aload_1
     129: invokeinterface #31,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     134: ifne          146
     137: new           #28                 // class org/eclipse/jetty/util/TopologicalSort$CyclicException
     140: dup
     141: aload_1
     142: invokespecial #32                 // Method org/eclipse/jetty/util/TopologicalSort$CyclicException."<init>":(Ljava/lang/Object;)V
     145: athrow
     146: return
    Exception table:
       from    to  target type
          59   100   103   Class org/eclipse/jetty/util/TopologicalSort$CyclicException

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String TopologicalSort
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field _dependencies:Ljava/util/Map;
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
