Compiled from "Graceful.java"
public class org.eclipse.jetty.util.component.Graceful$Shutdown implements org.eclipse.jetty.util.component.Graceful {
  private final java.util.concurrent.atomic.AtomicReference<org.eclipse.jetty.util.FutureCallback> _shutdown;

  public org.eclipse.jetty.util.component.Graceful$Shutdown();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field _shutdown:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  protected org.eclipse.jetty.util.FutureCallback newShutdownCallback();
    Code:
       0: getstatic     #5                  // Field org/eclipse/jetty/util/FutureCallback.SUCCEEDED:Lorg/eclipse/jetty/util/FutureCallback;
       3: areturn

  public java.util.concurrent.Future<java.lang.Void> shutdown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _shutdown:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/eclipse/jetty/util/component/Graceful$Shutdown;)Ljava/util/function/UnaryOperator;
      10: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.updateAndGet:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      13: checkcast     #8                  // class java/util/concurrent/Future
      16: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _shutdown:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _shutdown:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #11                 // class org/eclipse/jetty/util/FutureCallback
      11: astore_1
      12: aload_1
      13: ifnull        29
      16: aload_1
      17: invokevirtual #12                 // Method org/eclipse/jetty/util/FutureCallback.isDone:()Z
      20: ifne          29
      23: aload_1
      24: iconst_1
      25: invokevirtual #13                 // Method org/eclipse/jetty/util/FutureCallback.cancel:(Z)Z
      28: pop
      29: return

  public org.eclipse.jetty.util.FutureCallback get();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _shutdown:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class org/eclipse/jetty/util/FutureCallback
      10: areturn

  private org.eclipse.jetty.util.FutureCallback lambda$shutdown$0(org.eclipse.jetty.util.FutureCallback);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #14                 // Method newShutdownCallback:()Lorg/eclipse/jetty/util/FutureCallback;
       8: goto          12
      11: aload_1
      12: areturn
}
