Compiled from "IPAddressMap.java"
public class org.eclipse.jetty.util.IPAddressMap<TYPE> extends java.util.HashMap<java.lang.String, TYPE> {
  private final java.util.HashMap<java.lang.String, org.eclipse.jetty.util.IPAddressMap$IPAddrPattern> _patterns;

  public org.eclipse.jetty.util.IPAddressMap();
    Code:
       0: aload_0
       1: bipush        11
       3: invokespecial #1                  // Method java/util/HashMap."<init>":(I)V
       6: aload_0
       7: new           #2                  // class java/util/HashMap
      10: dup
      11: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      14: putfield      #4                  // Field _patterns:Ljava/util/HashMap;
      17: return

  public org.eclipse.jetty.util.IPAddressMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method java/util/HashMap."<init>":(I)V
       5: aload_0
       6: new           #2                  // class java/util/HashMap
       9: dup
      10: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      13: putfield      #4                  // Field _patterns:Ljava/util/HashMap;
      16: return

  public TYPE put(java.lang.String, TYPE) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #6                  // Method java/lang/String.length:()I
      11: ifne          41
      14: new           #7                  // class java/lang/IllegalArgumentException
      17: dup
      18: new           #8                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #10                 // String Invalid IP address pattern:
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      45: astore_3
      46: aload_0
      47: getfield      #4                  // Field _patterns:Ljava/util/HashMap;
      50: aload_3
      51: invokevirtual #14                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: ifnonnull     74
      57: aload_0
      58: getfield      #4                  // Field _patterns:Ljava/util/HashMap;
      61: aload_3
      62: new           #15                 // class org/eclipse/jetty/util/IPAddressMap$IPAddrPattern
      65: dup
      66: aload_3
      67: invokespecial #16                 // Method org/eclipse/jetty/util/IPAddressMap$IPAddrPattern."<init>":(Ljava/lang/String;)V
      70: invokevirtual #17                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload_0
      75: aload_3
      76: aload_2
      77: invokespecial #17                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: areturn

  public TYPE get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public TYPE match(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getMatch:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          20
      14: aload_2
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: areturn

  public java.util.Map$Entry<java.lang.String, TYPE> getMatch(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        61
       4: aload_0
       5: invokespecial #20                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       8: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          61
      23: aload_2
      24: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #24                 // class java/util/Map$Entry
      32: astore_3
      33: aload_0
      34: getfield      #4                  // Field _patterns:Ljava/util/HashMap;
      37: aload_3
      38: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      43: invokevirtual #14                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #15                 // class org/eclipse/jetty/util/IPAddressMap$IPAddrPattern
      49: aload_1
      50: invokevirtual #26                 // Method org/eclipse/jetty/util/IPAddressMap$IPAddrPattern.match:(Ljava/lang/String;)Z
      53: ifeq          58
      56: aload_3
      57: areturn
      58: goto          14
      61: aconst_null
      62: areturn

  public java.lang.Object getLazyMatches(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: invokespecial #20                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       8: invokestatic  #27                 // Method org/eclipse/jetty/util/LazyList.getList:(Ljava/lang/Object;)Ljava/util/List;
      11: areturn
      12: aconst_null
      13: astore_2
      14: aload_0
      15: invokespecial #20                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          78
      33: aload_3
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #24                 // class java/util/Map$Entry
      42: astore        4
      44: aload_0
      45: getfield      #4                  // Field _patterns:Ljava/util/HashMap;
      48: aload         4
      50: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: invokevirtual #14                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #15                 // class org/eclipse/jetty/util/IPAddressMap$IPAddrPattern
      61: aload_1
      62: invokevirtual #26                 // Method org/eclipse/jetty/util/IPAddressMap$IPAddrPattern.match:(Ljava/lang/String;)Z
      65: ifeq          75
      68: aload_2
      69: aload         4
      71: invokestatic  #28                 // Method org/eclipse/jetty/util/LazyList.add:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: astore_2
      75: goto          24
      78: aload_2
      79: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class java/lang/String
       5: aload_2
       6: invokevirtual #30                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
