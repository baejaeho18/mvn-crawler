Compiled from "ReservedThreadExecutor.java"
public class org.eclipse.jetty.util.thread.ReservedThreadExecutor extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.util.thread.TryExecutor {
  private static final org.eclipse.jetty.util.log.Logger LOG;

  private static final java.lang.Runnable STOP;

  private final java.util.concurrent.Executor _executor;

  private final int _capacity;

  private final java.util.concurrent.ConcurrentLinkedDeque<org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread> _stack;

  private final java.util.concurrent.atomic.AtomicInteger _size;

  private final java.util.concurrent.atomic.AtomicInteger _pending;

  private org.eclipse.jetty.util.thread.ThreadPoolBudget$Lease _lease;

  private long _idleTime;

  private java.util.concurrent.TimeUnit _idleTimeUnit;

  public org.eclipse.jetty.util.thread.ReservedThreadExecutor(java.util.concurrent.Executor, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/eclipse/jetty/util/component/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: lconst_1
      28: putfield      #4                  // Field _idleTime:J
      31: aload_0
      32: getstatic     #12                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      35: putfield      #3                  // Field _idleTimeUnit:Ljava/util/concurrent/TimeUnit;
      38: aload_0
      39: aload_1
      40: putfield      #13                 // Field _executor:Ljava/util/concurrent/Executor;
      43: aload_0
      44: aload_1
      45: iload_2
      46: invokestatic  #14                 // Method reservedThreads:(Ljava/util/concurrent/Executor;I)I
      49: putfield      #2                  // Field _capacity:I
      52: aload_0
      53: new           #15                 // class java/util/concurrent/ConcurrentLinkedDeque
      56: dup
      57: invokespecial #16                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      60: putfield      #6                  // Field _stack:Ljava/util/concurrent/ConcurrentLinkedDeque;
      63: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      66: invokeinterface #17,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      71: ifeq          92
      74: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      77: ldc           #18                 // String {}
      79: iconst_1
      80: anewarray     #19                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: aload_0
      86: aastore
      87: invokeinterface #20,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      92: return

  private static int reservedThreads(java.util.concurrent.Executor, int);
    Code:
       0: iload_1
       1: iflt          6
       4: iload_1
       5: ireturn
       6: invokestatic  #21                 // Method org/eclipse/jetty/util/ProcessorUtils.availableProcessors:()I
       9: istore_2
      10: aload_0
      11: instanceof    #22                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      14: ifeq          40
      17: aload_0
      18: checkcast     #22                 // class org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool
      21: invokeinterface #23,  1           // InterfaceMethod org/eclipse/jetty/util/thread/ThreadPool$SizedThreadPool.getMaxThreads:()I
      26: istore_3
      27: iconst_1
      28: iload_2
      29: iload_3
      30: bipush        10
      32: idiv
      33: invokestatic  #24                 // Method java/lang/Math.min:(II)I
      36: invokestatic  #25                 // Method java/lang/Math.max:(II)I
      39: ireturn
      40: iload_2
      41: ireturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field _executor:Ljava/util/concurrent/Executor;
       4: areturn

  public int getCapacity();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _capacity:I
       4: ireturn

  public int getAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _stack:Ljava/util/concurrent/ConcurrentLinkedDeque;
       4: invokevirtual #26                 // Method java/util/concurrent/ConcurrentLinkedDeque.size:()I
       7: ireturn

  public int getPending();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public long getIdleTimeoutMs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _idleTimeUnit:Ljava/util/concurrent/TimeUnit;
       4: ifnonnull     9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #3                  // Field _idleTimeUnit:Ljava/util/concurrent/TimeUnit;
      13: aload_0
      14: getfield      #4                  // Field _idleTime:J
      17: invokevirtual #28                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      20: lreturn

  public void setIdleTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isRunning:()Z
       4: ifeq          15
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: lload_1
      17: putfield      #4                  // Field _idleTime:J
      20: aload_0
      21: aload_3
      22: putfield      #3                  // Field _idleTimeUnit:Ljava/util/concurrent/TimeUnit;
      25: return

  public void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #32                 // Method getExecutor:()Ljava/util/concurrent/Executor;
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field _capacity:I
      10: invokestatic  #33                 // Method org/eclipse/jetty/util/thread/ThreadPoolBudget.leaseFrom:(Ljava/util/concurrent/Executor;Ljava/lang/Object;I)Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      13: putfield      #34                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      16: aload_0
      17: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      20: iconst_0
      21: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      24: aload_0
      25: invokespecial #36                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStart:()V
      28: return

  public void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #34                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
       4: ifnull        16
       7: aload_0
       8: getfield      #34                 // Field _lease:Lorg/eclipse/jetty/util/thread/ThreadPoolBudget$Lease;
      11: invokeinterface #37,  1           // InterfaceMethod org/eclipse/jetty/util/thread/ThreadPoolBudget$Lease.close:()V
      16: aload_0
      17: invokespecial #38                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStop:()V
      20: aload_0
      21: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      24: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      27: istore_1
      28: iload_1
      29: ifne          47
      32: aload_0
      33: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      36: iload_1
      37: iconst_m1
      38: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      41: ifeq          47
      44: goto          83
      47: aload_0
      48: getfield      #6                  // Field _stack:Ljava/util/concurrent/ConcurrentLinkedDeque;
      51: invokevirtual #40                 // Method java/util/concurrent/ConcurrentLinkedDeque.pollFirst:()Ljava/lang/Object;
      54: checkcast     #41                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
      57: astore_2
      58: aload_2
      59: ifnonnull     68
      62: invokestatic  #42                 // Method java/lang/Thread.yield:()V
      65: goto          20
      68: aload_0
      69: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      72: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      75: pop
      76: aload_2
      77: invokevirtual #44                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread.stop:()V
      80: goto          20
      83: return

  public void execute(java.lang.Runnable) throws java.util.concurrent.RejectedExecutionException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field _executor:Ljava/util/concurrent/Executor;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      10: return

  public boolean tryExecute(java.lang.Runnable);
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       3: invokeinterface #17,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
       8: ifeq          33
      11: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      14: ldc           #46                 // String {} tryExecute {}
      16: iconst_2
      17: anewarray     #19                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: aastore
      28: invokeinterface #20,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      33: aload_1
      34: ifnonnull     39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #6                  // Field _stack:Ljava/util/concurrent/ConcurrentLinkedDeque;
      43: invokevirtual #40                 // Method java/util/concurrent/ConcurrentLinkedDeque.pollFirst:()Ljava/lang/Object;
      46: checkcast     #41                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
      49: astore_2
      50: aload_2
      51: ifnonnull     67
      54: aload_1
      55: getstatic     #5                  // Field STOP:Ljava/lang/Runnable;
      58: if_acmpeq     65
      61: aload_0
      62: invokespecial #47                 // Method startReservedThread:()V
      65: iconst_0
      66: ireturn
      67: aload_0
      68: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      71: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      74: istore_3
      75: aload_2
      76: aload_1
      77: invokevirtual #48                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread.offer:(Ljava/lang/Runnable;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: iload_3
      86: ifne          100
      89: aload_1
      90: getstatic     #5                  // Field STOP:Ljava/lang/Runnable;
      93: if_acmpeq     100
      96: aload_0
      97: invokespecial #47                 // Method startReservedThread:()V
     100: iconst_1
     101: ireturn

  private void startReservedThread();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: aload_0
       9: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      12: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      15: istore_2
      16: iload_1
      17: iload_2
      18: iadd
      19: aload_0
      20: getfield      #2                  // Field _capacity:I
      23: if_icmplt     27
      26: return
      27: aload_0
      28: getfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
      31: iload_1
      32: iload_1
      33: iconst_1
      34: iadd
      35: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      38: ifeq          98
      41: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      44: invokeinterface #17,  1           // InterfaceMethod org/eclipse/jetty/util/log/Logger.isDebugEnabled:()Z
      49: ifeq          79
      52: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
      55: ldc           #49                 // String {} startReservedThread p={}
      57: iconst_2
      58: anewarray     #19                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: aload_0
      64: aastore
      65: dup
      66: iconst_1
      67: iload_1
      68: iconst_1
      69: iadd
      70: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: aastore
      74: invokeinterface #20,  3           // InterfaceMethod org/eclipse/jetty/util/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      79: aload_0
      80: getfield      #13                 // Field _executor:Ljava/util/concurrent/Executor;
      83: new           #41                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread
      86: dup
      87: aload_0
      88: aconst_null
      89: invokespecial #51                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$ReservedThread."<init>":(Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor;Lorg/eclipse/jetty/util/thread/ReservedThreadExecutor$1;)V
      92: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      97: return
      98: goto          0
     101: astore_1
     102: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
     105: aload_1
     106: invokeinterface #53,  2           // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
     111: return
    Exception table:
       from    to  target type
           0    26   101   Class java/util/concurrent/RejectedExecutionException
          27    97   101   Class java/util/concurrent/RejectedExecutionException
          98   101   101   Class java/util/concurrent/RejectedExecutionException

  public java.lang.String toString();
    Code:
       0: ldc           #54                 // String %s@%x{s=%d/%d,p=%d}
       2: iconst_5
       3: anewarray     #19                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #55                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #56                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: invokevirtual #57                 // Method java/lang/Object.hashCode:()I
      22: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
      32: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      35: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_3
      41: aload_0
      42: getfield      #2                  // Field _capacity:I
      45: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: dup
      50: iconst_4
      51: aload_0
      52: getfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
      55: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      58: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: areturn

  static org.eclipse.jetty.util.log.Logger access$100();
    Code:
       0: getstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       3: areturn

  static java.util.concurrent.atomic.AtomicInteger access$200(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _size:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.util.concurrent.ConcurrentLinkedDeque access$300(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _stack:Ljava/util/concurrent/ConcurrentLinkedDeque;
       4: areturn

  static java.lang.Runnable access$400();
    Code:
       0: getstatic     #5                  // Field STOP:Ljava/lang/Runnable;
       3: areturn

  static long access$500(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _idleTime:J
       4: lreturn

  static java.util.concurrent.TimeUnit access$600(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _idleTimeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  static int access$700(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _capacity:I
       4: ireturn

  static java.util.concurrent.atomic.AtomicInteger access$800(org.eclipse.jetty.util.thread.ReservedThreadExecutor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field _pending:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static {};
    Code:
       0: ldc           #59                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor
       2: invokestatic  #60                 // Method org/eclipse/jetty/util/log/Log.getLogger:(Ljava/lang/Class;)Lorg/eclipse/jetty/util/log/Logger;
       5: putstatic     #8                  // Field LOG:Lorg/eclipse/jetty/util/log/Logger;
       8: new           #61                 // class org/eclipse/jetty/util/thread/ReservedThreadExecutor$1
      11: dup
      12: invokespecial #62                 // Method org/eclipse/jetty/util/thread/ReservedThreadExecutor$1."<init>":()V
      15: putstatic     #5                  // Field STOP:Ljava/lang/Runnable;
      18: return
}
