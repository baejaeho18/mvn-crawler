Compiled from "AttributesMap.java"
public class org.eclipse.jetty.util.AttributesMap implements org.eclipse.jetty.util.Attributes,org.eclipse.jetty.util.component.Dumpable {
  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object>> _map;

  public org.eclipse.jetty.util.AttributesMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field _map:Ljava/util/concurrent/atomic/AtomicReference;
      15: return

  public org.eclipse.jetty.util.AttributesMap(org.eclipse.jetty.util.AttributesMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field _map:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_1
      16: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
      19: astore_2
      20: aload_2
      21: ifnull        39
      24: aload_0
      25: getfield      #4                  // Field _map:Ljava/util/concurrent/atomic/AtomicReference;
      28: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      31: dup
      32: aload_2
      33: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(Ljava/util/Map;)V
      36: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      39: return

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> map();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _map:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #10                 // class java/util/concurrent/ConcurrentMap
      10: areturn

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> ensureMap();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      14: dup
      15: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      18: astore_1
      19: aload_0
      20: getfield      #4                  // Field _map:Ljava/util/concurrent/atomic/AtomicReference;
      23: aconst_null
      24: aload_1
      25: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ifeq          33
      31: aload_1
      32: areturn
      33: goto          0

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: invokevirtual #14                 // Method removeAttribute:(Ljava/lang/String;)V
       9: goto          24
      12: aload_0
      13: invokespecial #15                 // Method ensureMap:()Ljava/util/concurrent/ConcurrentMap;
      16: aload_1
      17: aload_2
      18: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_2
       5: aload_2
       6: ifnonnull     13
       9: aconst_null
      10: goto          20
      13: aload_2
      14: aload_1
      15: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public java.util.Enumeration<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getAttributeNameSet:()Ljava/util/Set;
       4: invokestatic  #19                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
       7: areturn

  public java.util.Set<java.lang.String> getAttributeNameSet();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method keySet:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> getAttributeEntrySet();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #21                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      12: goto          21
      15: aload_1
      16: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: areturn

  public static java.util.Enumeration<java.lang.String> getAttributeNamesCopy(org.eclipse.jetty.util.Attributes);
    Code:
       0: aload_0
       1: instanceof    #23                 // class org/eclipse/jetty/util/AttributesMap
       4: ifeq          18
       7: aload_0
       8: checkcast     #23                 // class org/eclipse/jetty/util/AttributesMap
      11: invokespecial #20                 // Method keySet:()Ljava/util/Set;
      14: invokestatic  #19                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      17: areturn
      18: new           #24                 // class java/util/ArrayList
      21: dup
      22: aload_0
      23: invokeinterface #25,  1           // InterfaceMethod org/eclipse/jetty/util/Attributes.getAttributeNames:()Ljava/util/Enumeration;
      28: invokestatic  #26                 // Method java/util/Collections.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
      31: invokespecial #27                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      34: astore_1
      35: aload_1
      36: invokestatic  #19                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      39: areturn

  public void clearAttributes();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      15: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          19
      13: aload_1
      14: invokeinterface #29,  1           // InterfaceMethod java/util/Map.size:()I
      19: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: ldc           #30                 // String {}
      11: goto          18
      14: aload_1
      15: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
      18: areturn

  private java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #21                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      12: goto          21
      15: aload_1
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      21: areturn

  public void addAll(org.eclipse.jetty.util.Attributes);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod org/eclipse/jetty/util/Attributes.getAttributeNames:()Ljava/util/Enumeration;
       6: astore_2
       7: aload_2
       8: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      22: checkcast     #35                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: aload_1
      29: aload_3
      30: invokeinterface #36,  2           // InterfaceMethod org/eclipse/jetty/util/Attributes.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      35: invokevirtual #37                 // Method setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      38: goto          7
      41: return

  public java.lang.String dump();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod org/eclipse/jetty/util/component/Dumpable.dump:(Lorg/eclipse/jetty/util/component/Dumpable;)Ljava/lang/String;
       4: areturn

  public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: ldc           #39                 // String %s@%x
       4: iconst_2
       5: anewarray     #40                 // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
      24: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: iconst_1
      32: anewarray     #40                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_0
      38: invokespecial #5                  // Method map:()Ljava/util/concurrent/ConcurrentMap;
      41: aastore
      42: invokestatic  #46                 // InterfaceMethod org/eclipse/jetty/util/component/Dumpable.dumpObjects:(Ljava/lang/Appendable;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)V
      45: return
}
