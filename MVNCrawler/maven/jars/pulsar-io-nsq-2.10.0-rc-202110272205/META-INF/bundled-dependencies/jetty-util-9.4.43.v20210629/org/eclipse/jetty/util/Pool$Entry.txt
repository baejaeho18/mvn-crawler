Compiled from "Pool.java"
public class org.eclipse.jetty.util.Pool$Entry {
  private final org.eclipse.jetty.util.AtomicBiInteger state;

  private T pooled;

  final org.eclipse.jetty.util.Pool this$0;

  org.eclipse.jetty.util.Pool$Entry(org.eclipse.jetty.util.Pool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class org/eclipse/jetty/util/AtomicBiInteger
      13: dup
      14: ldc           #6                  // int -2147483648
      16: iconst_0
      17: invokespecial #7                  // Method org/eclipse/jetty/util/AtomicBiInteger."<init>":(II)V
      20: putfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      23: return

  void setUsageCount(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: iload_1
       5: invokevirtual #9                  // Method org/eclipse/jetty/util/AtomicBiInteger.getAndSetHi:(I)I
       8: pop
       9: return

  public boolean enable(T, boolean);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       9: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      12: ldc           #6                  // int -2147483648
      14: if_icmpeq     57
      17: aload_0
      18: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      21: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      24: iconst_m1
      25: if_icmpne     30
      28: iconst_0
      29: ireturn
      30: new           #12                 // class java/lang/IllegalStateException
      33: dup
      34: new           #13                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #15                 // String Entry already enabled:
      43: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: aload_1
      59: putfield      #1                  // Field pooled:Ljava/lang/Object;
      62: iload_2
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore_3
      72: aload_0
      73: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      76: ldc           #6                  // int -2147483648
      78: iload_3
      79: iconst_0
      80: iload_3
      81: invokevirtual #20                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(IIII)Z
      84: ifne          132
      87: aload_0
      88: aconst_null
      89: putfield      #1                  // Field pooled:Ljava/lang/Object;
      92: aload_0
      93: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      96: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      99: iconst_m1
     100: if_icmpne     105
     103: iconst_0
     104: ireturn
     105: new           #12                 // class java/lang/IllegalStateException
     108: dup
     109: new           #13                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #15                 // String Entry already enabled:
     118: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     125: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: iconst_1
     133: ireturn

  public T getPooled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pooled:Ljava/lang/Object;
       4: areturn

  public boolean release();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: aload_0
       5: invokevirtual #21                 // Method org/eclipse/jetty/util/Pool.release:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
       8: ireturn

  public boolean remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: aload_0
       5: invokevirtual #22                 // Method org/eclipse/jetty/util/Pool.remove:(Lorg/eclipse/jetty/util/Pool$Entry;)Z
       8: ireturn

  boolean tryAcquire();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: iload_3
      14: ifge          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore        4
      24: lload_1
      25: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      28: istore        5
      30: aload_0
      31: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      34: invokestatic  #26                 // Method org/eclipse/jetty/util/Pool.access$100:(Lorg/eclipse/jetty/util/Pool;)I
      37: istore        6
      39: iload         4
      41: ifne          67
      44: iload         5
      46: aload_0
      47: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      50: invokestatic  #27                 // Method org/eclipse/jetty/util/Pool.access$200:(Lorg/eclipse/jetty/util/Pool;)I
      53: if_icmpge     67
      56: iload         6
      58: ifle          69
      61: iload_3
      62: iload         6
      64: if_icmplt     69
      67: iconst_0
      68: ireturn
      69: iload_3
      70: ldc           #28                 // int 2147483647
      72: if_icmpne     80
      75: ldc           #28                 // int 2147483647
      77: goto          83
      80: iload_3
      81: iconst_1
      82: iadd
      83: istore        7
      85: aload_0
      86: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      89: lload_1
      90: iload         7
      92: iload         5
      94: iconst_1
      95: iadd
      96: invokevirtual #29                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(JII)Z
      99: ifeq          104
     102: iconst_1
     103: ireturn
     104: goto          0

  boolean tryRelease();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_3
       8: lload_3
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_2
      13: iload_2
      14: ifge          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore        5
      24: iload         5
      26: ifeq          31
      29: iconst_0
      30: ireturn
      31: lload_3
      32: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      35: iconst_1
      36: isub
      37: istore_1
      38: iload_1
      39: ifge          52
      42: new           #12                 // class java/lang/IllegalStateException
      45: dup
      46: ldc           #30                 // String Cannot release an already released entry
      48: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      56: lload_3
      57: iload_2
      58: iload_1
      59: invokevirtual #29                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(JII)Z
      62: ifeq          68
      65: goto          71
      68: goto          0
      71: aload_0
      72: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
      75: invokestatic  #26                 // Method org/eclipse/jetty/util/Pool.access$100:(Lorg/eclipse/jetty/util/Pool;)I
      78: istore_3
      79: iload_3
      80: ifle          92
      83: iload_2
      84: iload_3
      85: if_icmplt     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: istore        4
      95: iload         4
      97: ifeq          104
     100: iload_1
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ireturn

  boolean tryRemove();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload         4
      21: iconst_1
      22: isub
      23: iconst_0
      24: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      27: istore        5
      29: aload_0
      30: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      33: iload_3
      34: iconst_m1
      35: iload         4
      37: iload         5
      39: invokevirtual #20                 // Method org/eclipse/jetty/util/AtomicBiInteger.compareAndSet:(IIII)Z
      42: istore        6
      44: iload         6
      46: ifeq          60
      49: iload         5
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: goto          0

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: ifge          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isReserved();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: ldc           #6                  // int -2147483648
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isIdle();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: iflt          26
      15: lload_1
      16: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInUse();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: iflt          26
      15: lload_1
      16: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isOverUsed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: invokestatic  #26                 // Method org/eclipse/jetty/util/Pool.access$100:(Lorg/eclipse/jetty/util/Pool;)I
       7: istore_1
       8: aload_0
       9: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      12: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
      15: istore_2
      16: iload_1
      17: ifle          29
      20: iload_2
      21: iload_1
      22: if_icmplt     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  boolean isIdleAndOverUsed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
       4: invokestatic  #26                 // Method org/eclipse/jetty/util/Pool.access$100:(Lorg/eclipse/jetty/util/Pool;)I
       7: istore_1
       8: aload_0
       9: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
      12: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
      15: lstore_2
      16: lload_2
      17: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      20: istore        4
      22: lload_2
      23: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      26: istore        5
      28: iload_1
      29: ifle          47
      32: iload         4
      34: iload_1
      35: if_icmplt     47
      38: iload         5
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public int getUsageCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #11                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:()I
       7: iconst_0
       8: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      11: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:Lorg/eclipse/jetty/util/AtomicBiInteger;
       4: invokevirtual #23                 // Method org/eclipse/jetty/util/AtomicBiInteger.get:()J
       7: lstore_1
       8: lload_1
       9: invokestatic  #24                 // Method org/eclipse/jetty/util/AtomicBiInteger.getHi:(J)I
      12: istore_3
      13: lload_1
      14: invokestatic  #25                 // Method org/eclipse/jetty/util/AtomicBiInteger.getLo:(J)I
      17: istore        4
      19: iload_3
      20: ifge          28
      23: ldc           #32                 // String CLOSED
      25: goto          40
      28: iload         4
      30: ifne          38
      33: ldc           #33                 // String IDLE
      35: goto          40
      38: ldc           #34                 // String INUSE
      40: astore        5
      42: ldc           #35                 // String %s@%x{%s, usage=%d, multiplex=%d/%d, pooled=%s}
      44: bipush        7
      46: anewarray     #36                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_0
      52: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      58: aastore
      59: dup
      60: iconst_1
      61: aload_0
      62: invokevirtual #39                 // Method java/lang/Object.hashCode:()I
      65: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aastore
      69: dup
      70: iconst_2
      71: aload         5
      73: aastore
      74: dup
      75: iconst_3
      76: iload_3
      77: iconst_0
      78: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      81: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: aastore
      85: dup
      86: iconst_4
      87: iload         4
      89: iconst_0
      90: invokestatic  #31                 // Method java/lang/Math.max:(II)I
      93: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aastore
      97: dup
      98: iconst_5
      99: aload_0
     100: getfield      #2                  // Field this$0:Lorg/eclipse/jetty/util/Pool;
     103: invokevirtual #41                 // Method org/eclipse/jetty/util/Pool.getMaxMultiplex:()I
     106: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: aastore
     110: dup
     111: bipush        6
     113: aload_0
     114: getfield      #1                  // Field pooled:Ljava/lang/Object;
     117: aastore
     118: invokestatic  #42                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     121: areturn

  static java.lang.Object access$000(org.eclipse.jetty.util.Pool$Entry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pooled:Ljava/lang/Object;
       4: areturn
}
