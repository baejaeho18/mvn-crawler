Compiled from "MultiReleaseJarFile.java"
public class org.eclipse.jetty.util.MultiReleaseJarFile implements java.io.Closeable {
  private static final java.lang.String META_INF_VERSIONS;

  private final java.util.jar.JarFile jarFile;

  private final int platform;

  private final boolean multiRelease;

  private final java.util.Map<java.lang.String, org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry> entries;

  public org.eclipse.jetty.util.MultiReleaseJarFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #4                  // Field org/eclipse/jetty/util/JavaVersion.VERSION:Lorg/eclipse/jetty/util/JavaVersion;
       5: invokevirtual #5                  // Method org/eclipse/jetty/util/JavaVersion.getPlatform:()I
       8: iconst_0
       9: invokespecial #6                  // Method "<init>":(Ljava/io/File;IZ)V
      12: return

  public org.eclipse.jetty.util.MultiReleaseJarFile(java.io.File, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        29
       8: aload_1
       9: invokevirtual #8                  // Method java/io/File.exists:()Z
      12: ifeq          29
      15: aload_1
      16: invokevirtual #9                  // Method java/io/File.canRead:()Z
      19: ifeq          29
      22: aload_1
      23: invokevirtual #10                 // Method java/io/File.isDirectory:()Z
      26: ifeq          56
      29: new           #11                 // class java/lang/IllegalArgumentException
      32: dup
      33: new           #12                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #14                 // String bad jar file:
      42: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: new           #19                 // class java/util/jar/JarFile
      60: dup
      61: aload_1
      62: iconst_1
      63: iconst_1
      64: invokespecial #20                 // Method java/util/jar/JarFile."<init>":(Ljava/io/File;ZI)V
      67: putfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
      70: aload_0
      71: iload_2
      72: putfield      #1                  // Field platform:I
      75: aload_0
      76: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
      79: invokevirtual #21                 // Method java/util/jar/JarFile.getManifest:()Ljava/util/jar/Manifest;
      82: astore        4
      84: aload         4
      86: ifnonnull     97
      89: aload_0
      90: iconst_0
      91: putfield      #2                  // Field multiRelease:Z
      94: goto          117
      97: aload_0
      98: aload         4
     100: invokevirtual #22                 // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
     103: ldc           #23                 // String Multi-Release
     105: invokevirtual #24                 // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
     108: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     111: invokestatic  #26                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     114: putfield      #2                  // Field multiRelease:Z
     117: new           #27                 // class java/util/TreeMap
     120: dup
     121: invokespecial #28                 // Method java/util/TreeMap."<init>":()V
     124: astore        5
     126: aload_0
     127: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
     130: invokevirtual #29                 // Method java/util/jar/JarFile.stream:()Ljava/util/stream/Stream;
     133: aload_0
     134: invokedynamic #30,  0             // InvokeDynamic #0:apply:(Lorg/eclipse/jetty/util/MultiReleaseJarFile;)Ljava/util/function/Function;
     139: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     144: iload_3
     145: invokedynamic #32,  0             // InvokeDynamic #1:test:(Z)Ljava/util/function/Predicate;
     150: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     155: aload         5
     157: invokedynamic #34,  0             // InvokeDynamic #2:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
     162: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     167: aload         5
     169: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     174: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     179: astore        6
     181: aload         6
     183: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     188: ifeq          280
     191: aload         6
     193: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     198: checkcast     #40                 // class java/util/Map$Entry
     201: astore        7
     203: aload         7
     205: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     210: checkcast     #42                 // class org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry
     213: astore        8
     215: aload         8
     217: getfield      #43                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.inner:Z
     220: ifeq          277
     223: aload         8
     225: getfield      #44                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.outer:Ljava/lang/String;
     228: ifnonnull     235
     231: aconst_null
     232: goto          250
     235: aload         5
     237: aload         8
     239: getfield      #44                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.outer:Ljava/lang/String;
     242: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     247: checkcast     #42                 // class org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry
     250: astore        9
     252: aload         9
     254: ifnull        270
     257: aload         9
     259: getfield      #46                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.version:I
     262: aload         8
     264: getfield      #46                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.version:I
     267: if_icmpeq     277
     270: aload         6
     272: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.remove:()V
     277: goto          181
     280: aload_0
     281: aload         5
     283: invokestatic  #48                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     286: putfield      #49                 // Field entries:Ljava/util/Map;
     289: return

  public boolean isMultiRelease();
    Code:
       0: aload_0
       1: getfield      #2                  // Field multiRelease:Z
       4: ireturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #1                  // Field platform:I
       4: ireturn

  public java.util.stream.Stream<org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry> stream();
    Code:
       0: aload_0
       1: getfield      #49                 // Field entries:Ljava/util/Map;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #51,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: areturn

  public org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry getEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #49                 // Field entries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #42                 // class org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry
      13: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
       4: ifnull        14
       7: aload_0
       8: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
      11: invokevirtual #52                 // Method java/util/jar/JarFile.close:()V
      14: return

  public java.lang.String toString();
    Code:
       0: ldc           #53                 // String %s[%b,%d]
       2: iconst_3
       3: anewarray     #54                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
      12: invokevirtual #55                 // Method java/util/jar/JarFile.getName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: invokevirtual #56                 // Method isMultiRelease:()Z
      22: invokestatic  #57                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: invokevirtual #58                 // Method getVersion:()I
      32: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: invokestatic  #60                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: areturn

  private static void lambda$new$3(java.util.Map, org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #61                 // Field org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.name:Ljava/lang/String;
       5: aload_1
       6: invokedynamic #62,  0             // InvokeDynamic #3:apply:(Lorg/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry;)Ljava/util/function/BiFunction;
      11: invokeinterface #63,  3           // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      16: pop
      17: return

  private static org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry lambda$new$2(org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry, java.lang.String, org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_2
       5: aload_0
       6: invokevirtual #64                 // Method org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.isReplacedBy:(Lorg/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry;)Z
       9: ifeq          16
      12: aload_0
      13: goto          17
      16: aload_2
      17: areturn

  private static boolean lambda$new$1(boolean, org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry);
    Code:
       0: iload_0
       1: ifne          11
       4: aload_1
       5: invokevirtual #65                 // Method org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.isDirectory:()Z
       8: ifne          22
      11: aload_1
      12: invokevirtual #66                 // Method org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry.isApplicable:()Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private org.eclipse.jetty.util.MultiReleaseJarFile$VersionedJarEntry lambda$new$0(java.util.jar.JarEntry);
    Code:
       0: new           #42                 // class org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #67                 // Method org/eclipse/jetty/util/MultiReleaseJarFile$VersionedJarEntry."<init>":(Lorg/eclipse/jetty/util/MultiReleaseJarFile;Ljava/util/jar/JarEntry;)V
       9: areturn

  static java.util.jar.JarFile access$000(org.eclipse.jetty.util.MultiReleaseJarFile);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jarFile:Ljava/util/jar/JarFile;
       4: areturn

  static boolean access$100(org.eclipse.jetty.util.MultiReleaseJarFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field multiRelease:Z
       4: ireturn

  static int access$200(org.eclipse.jetty.util.MultiReleaseJarFile);
    Code:
       0: aload_0
       1: getfield      #1                  // Field platform:I
       4: ireturn
}
