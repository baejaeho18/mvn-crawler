Compiled from "BufferUtil.java"
public class org.eclipse.jetty.util.BufferUtil {
  static final int TEMP_BUFFER_SIZE;

  static final byte SPACE;

  static final byte MINUS;

  static final byte[] DIGIT;

  public static final java.nio.ByteBuffer EMPTY_BUFFER;

  private static final int[] decDivisors;

  private static final int[] hexDivisors;

  private static final long[] decDivisorsL;

  public org.eclipse.jetty.util.BufferUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.nio.ByteBuffer allocate(int);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      10: pop
      11: aload_1
      12: areturn

  public static java.nio.ByteBuffer allocateDirect(int);
    Code:
       0: iload_0
       1: invokestatic  #4                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      10: pop
      11: aload_1
      12: areturn

  public static java.nio.ByteBuffer copy(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      10: istore_1
      11: aload_0
      12: invokevirtual #6                  // Method java/nio/ByteBuffer.isDirect:()Z
      15: ifeq          28
      18: aload_0
      19: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      22: invokestatic  #4                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      25: goto          35
      28: aload_0
      29: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      32: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      41: pop
      42: aload_2
      43: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      46: pop
      47: aload_0
      48: iload_1
      49: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      52: pop
      53: aload_2
      54: areturn

  public static void clear(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: iconst_0
       6: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       9: pop
      10: aload_0
      11: iconst_0
      12: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      15: pop
      16: return

  public static void clearToFill(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        19
       4: aload_0
       5: iconst_0
       6: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       9: pop
      10: aload_0
      11: aload_0
      12: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      15: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: pop
      19: return

  public static int flipToFill(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
       9: istore_2
      10: iload_1
      11: iload_2
      12: if_icmpne     32
      15: aload_0
      16: iconst_0
      17: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      20: pop
      21: aload_0
      22: aload_0
      23: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      26: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      29: pop
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      36: istore_3
      37: iload_2
      38: iload_3
      39: if_icmpne     49
      42: aload_0
      43: invokevirtual #13                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      46: pop
      47: iconst_0
      48: ireturn
      49: aload_0
      50: iload_2
      51: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: iload_3
      57: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      60: pop
      61: iload_1
      62: ireturn

  public static void flipToFlush(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       5: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
       8: pop
       9: aload_0
      10: iload_1
      11: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      14: pop
      15: return

  public static void putIntLittleEndian(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: aload_0
       6: iload_1
       7: sipush        255
      10: iand
      11: i2b
      12: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_0
      17: iload_1
      18: bipush        8
      20: iushr
      21: sipush        255
      24: iand
      25: i2b
      26: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      29: pop
      30: aload_0
      31: iload_1
      32: bipush        16
      34: iushr
      35: sipush        255
      38: iand
      39: i2b
      40: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      43: pop
      44: aload_0
      45: iload_1
      46: bipush        24
      48: iushr
      49: sipush        255
      52: iand
      53: i2b
      54: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      57: pop
      58: aload_0
      59: iload_2
      60: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      63: return

  public static byte[] toArray(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          34
       7: aload_0
       8: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      11: astore_1
      12: aload_0
      13: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      16: aload_0
      17: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      20: iadd
      21: istore_2
      22: aload_1
      23: iload_2
      24: iload_2
      25: aload_0
      26: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      29: iadd
      30: invokestatic  #20                 // Method java/util/Arrays.copyOfRange:([BII)[B
      33: areturn
      34: aload_0
      35: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      38: newarray       byte
      40: astore_1
      41: aload_0
      42: invokevirtual #21                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      45: aload_1
      46: invokevirtual #22                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      49: pop
      50: aload_1
      51: areturn

  public static boolean isTheEmptyBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: iload_1
      14: ireturn

  public static boolean isEmpty(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static boolean isEmpty(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifne          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: astore_1
      13: aload_1
      14: arraylength
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     49
      23: aload_1
      24: iload_3
      25: aaload
      26: astore        4
      28: aload         4
      30: ifnull        43
      33: aload         4
      35: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      38: ifeq          43
      41: iconst_0
      42: ireturn
      43: iinc          3, 1
      46: goto          18
      49: iconst_1
      50: ireturn

  public static long remaining(java.nio.ByteBuffer...);
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: ifnull        48
       6: aload_0
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     48
      22: aload_3
      23: iload         5
      25: aaload
      26: astore        6
      28: aload         6
      30: ifnull        42
      33: lload_1
      34: aload         6
      36: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      39: i2l
      40: ladd
      41: lstore_1
      42: iinc          5, 1
      45: goto          15
      48: lload_1
      49: lreturn

  public static boolean hasContent(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static boolean isFull(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnull        19
       4: aload_0
       5: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
       8: aload_0
       9: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static int length(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          12
       8: aload_0
       9: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      12: ireturn

  public static int space(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      10: aload_0
      11: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      14: isub
      15: ireturn

  public static boolean compact(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      13: aload_0
      14: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      17: if_icmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_1
      26: aload_0
      27: invokevirtual #13                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      30: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      33: pop
      34: iload_1
      35: ifeq          53
      38: aload_0
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      42: aload_0
      43: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      46: if_icmpge     53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public static int put(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifle          121
       9: iload_3
      10: aload_1
      11: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      14: if_icmpgt     37
      17: aload_1
      18: aload_0
      19: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: iload_3
      24: istore_2
      25: aload_0
      26: aload_0
      27: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      30: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      33: pop
      34: goto          123
      37: aload_0
      38: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
      41: ifeq          82
      44: aload_1
      45: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      48: istore_2
      49: aload_1
      50: aload_0
      51: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      54: aload_0
      55: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      58: aload_0
      59: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      62: iadd
      63: iload_2
      64: invokevirtual #25                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      67: pop
      68: aload_0
      69: aload_0
      70: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      73: iload_2
      74: iadd
      75: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      78: pop
      79: goto          123
      82: aload_1
      83: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      86: istore_2
      87: aload_0
      88: invokevirtual #21                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      91: astore        4
      93: aload         4
      95: iload_2
      96: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      99: pop
     100: aload_1
     101: aload         4
     103: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     106: pop
     107: aload_0
     108: aload_0
     109: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
     112: iload_2
     113: iadd
     114: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     117: pop
     118: goto          123
     121: iconst_0
     122: istore_2
     123: iload_2
     124: ireturn

  public static int flipPutFlip(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #26                 // Method append:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public static void append(java.nio.ByteBuffer, byte[], int, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
       4: istore        4
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokevirtual #25                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      13: pop
      14: aload_0
      15: iload         4
      17: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      20: goto          34
      23: astore        5
      25: aload_0
      26: iload         4
      28: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      31: aload         5
      33: athrow
      34: return
    Exception table:
       from    to  target type
           6    14    23   any
          23    25    23   any

  public static void append(java.nio.ByteBuffer, byte);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: aload_0
       6: iload_1
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      10: pop
      11: aload_0
      12: iload_2
      13: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      16: goto          27
      19: astore_3
      20: aload_0
      21: iload_2
      22: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           5    11    19   any

  public static int append(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
       4: istore_2
       5: aload_1
       6: aload_0
       7: invokestatic  #27                 // Method put:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      10: istore_3
      11: aload_0
      12: iload_2
      13: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      16: iload_3
      17: ireturn
      18: astore        4
      20: aload_0
      21: iload_2
      22: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      25: aload         4
      27: athrow
    Exception table:
       from    to  target type
           5    11    18   any
          18    20    18   any

  public static int fill(java.nio.ByteBuffer, byte[], int, int);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
       4: istore        4
       6: aload_0
       7: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      10: istore        5
      12: iload         5
      14: iload_3
      15: if_icmpge     23
      18: iload         5
      20: goto          24
      23: iload_3
      24: istore        6
      26: aload_0
      27: aload_1
      28: iload_2
      29: iload         6
      31: invokevirtual #25                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      34: pop
      35: iload         6
      37: istore        7
      39: aload_0
      40: iload         4
      42: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      45: iload         7
      47: ireturn
      48: astore        8
      50: aload_0
      51: iload         4
      53: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
      56: aload         8
      58: athrow
    Exception table:
       from    to  target type
           6    39    48   any
          48    50    48   any

  public static void readFrom(java.io.File, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: new           #28                 // class java/io/RandomAccessFile
       3: dup
       4: aload_0
       5: ldc           #29                 // String r
       7: invokespecial #30                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: astore_2
      11: aload_2
      12: invokevirtual #31                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      15: astore_3
      16: aload_2
      17: invokevirtual #32                 // Method java/io/RandomAccessFile.length:()J
      20: lstore        4
      22: lload         4
      24: lconst_0
      25: lcmp
      26: ifle          50
      29: aload_1
      30: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifeq          50
      36: lload         4
      38: aload_3
      39: aload_1
      40: invokevirtual #33                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      43: i2l
      44: lsub
      45: lstore        4
      47: goto          22
      50: aload_2
      51: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
      54: goto          75
      57: astore_3
      58: aload_2
      59: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
      62: goto          73
      65: astore        4
      67: aload_3
      68: aload         4
      70: invokevirtual #36                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      73: aload_3
      74: athrow
      75: return
    Exception table:
       from    to  target type
          11    50    57   Class java/lang/Throwable
          58    62    65   Class java/lang/Throwable

  public static void readFrom(java.io.InputStream, int, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: sipush        8192
       3: invokestatic  #37                 // Method allocate:(I)Ljava/nio/ByteBuffer;
       6: astore_3
       7: iload_1
       8: ifle          62
      11: aload_2
      12: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      15: ifeq          62
      18: aload_0
      19: aload_3
      20: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      23: iconst_0
      24: sipush        8192
      27: invokevirtual #38                 // Method java/io/InputStream.read:([BII)I
      30: istore        4
      32: iload         4
      34: ifge          40
      37: goto          62
      40: aload_3
      41: iconst_0
      42: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      45: pop
      46: aload_3
      47: iload         4
      49: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      52: pop
      53: aload_2
      54: aload_3
      55: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      58: pop
      59: goto          7
      62: return

  public static void writeTo(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          45
       7: aload_1
       8: aload_0
       9: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      12: aload_0
      13: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      16: aload_0
      17: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      20: iadd
      21: aload_0
      22: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      25: invokevirtual #39                 // Method java/io/OutputStream.write:([BII)V
      28: aload_0
      29: aload_0
      30: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      33: aload_0
      34: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      37: iadd
      38: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      41: pop
      42: goto          94
      45: aload_0
      46: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      49: sipush        4096
      52: invokestatic  #41                 // Method java/lang/Math.min:(II)I
      55: newarray       byte
      57: astore_2
      58: aload_0
      59: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      62: ifeq          94
      65: aload_0
      66: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      69: sipush        4096
      72: invokestatic  #41                 // Method java/lang/Math.min:(II)I
      75: istore_3
      76: aload_0
      77: aload_2
      78: iconst_0
      79: iload_3
      80: invokevirtual #42                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      83: pop
      84: aload_1
      85: aload_2
      86: iconst_0
      87: iload_3
      88: invokevirtual #39                 // Method java/io/OutputStream.write:([BII)V
      91: goto          58
      94: return

  public static java.lang.String toString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       4: invokestatic  #44                 // Method toString:(Ljava/nio/ByteBuffer;Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public static java.lang.String toUTF8String(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getstatic     #45                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokestatic  #44                 // Method toString:(Ljava/nio/ByteBuffer;Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public static java.lang.String toString(java.nio.ByteBuffer, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          20
      13: aload_0
      14: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      17: goto          21
      20: aconst_null
      21: astore_2
      22: aload_2
      23: ifnonnull     55
      26: aload_0
      27: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      30: newarray       byte
      32: astore_3
      33: aload_0
      34: invokevirtual #21                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      37: aload_3
      38: invokevirtual #22                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      41: pop
      42: new           #46                 // class java/lang/String
      45: dup
      46: aload_3
      47: iconst_0
      48: aload_3
      49: arraylength
      50: aload_1
      51: invokespecial #47                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      54: areturn
      55: new           #46                 // class java/lang/String
      58: dup
      59: aload_2
      60: aload_0
      61: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      64: aload_0
      65: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      68: iadd
      69: aload_0
      70: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      73: aload_1
      74: invokespecial #47                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      77: areturn

  public static java.lang.String toString(java.nio.ByteBuffer, int, int, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          20
      13: aload_0
      14: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      17: goto          21
      20: aconst_null
      21: astore        4
      23: aload         4
      25: ifnonnull     78
      28: aload_0
      29: invokevirtual #48                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
      32: astore        5
      34: aload         5
      36: iload_1
      37: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      40: pop
      41: aload         5
      43: iload_1
      44: iload_2
      45: iadd
      46: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      49: pop
      50: iload_2
      51: newarray       byte
      53: astore        6
      55: aload         5
      57: aload         6
      59: invokevirtual #22                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      62: pop
      63: new           #46                 // class java/lang/String
      66: dup
      67: aload         6
      69: iconst_0
      70: aload         6
      72: arraylength
      73: aload_3
      74: invokespecial #47                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      77: areturn
      78: new           #46                 // class java/lang/String
      81: dup
      82: aload         4
      84: aload_0
      85: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      88: iload_1
      89: iadd
      90: iload_2
      91: aload_3
      92: invokespecial #47                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      95: areturn

  public static int toInt(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       5: aload_0
       6: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       9: invokestatic  #49                 // Method toInt:(Ljava/nio/ByteBuffer;II)I
      12: ireturn

  public static int toInt(java.nio.ByteBuffer, int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload_1
       9: iload_2
      10: iadd
      11: istore        6
      13: iload_2
      14: ifgt          34
      17: new           #50                 // class java/lang/NumberFormatException
      20: dup
      21: aload_0
      22: iload_1
      23: iload_2
      24: getstatic     #45                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      27: invokestatic  #51                 // Method toString:(Ljava/nio/ByteBuffer;IILjava/nio/charset/Charset;)Ljava/lang/String;
      30: invokespecial #52                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_1
      35: istore        7
      37: iload         7
      39: iload         6
      41: if_icmpge     119
      44: aload_0
      45: iload         7
      47: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      50: istore        8
      52: iload         8
      54: bipush        32
      56: if_icmpgt     67
      59: iload         4
      61: ifeq          113
      64: goto          119
      67: iload         8
      69: bipush        48
      71: if_icmplt     98
      74: iload         8
      76: bipush        57
      78: if_icmpgt     98
      81: iload_3
      82: bipush        10
      84: imul
      85: iload         8
      87: bipush        48
      89: isub
      90: iadd
      91: istore_3
      92: iconst_1
      93: istore        4
      95: goto          113
      98: iload         8
     100: bipush        45
     102: if_icmpne     119
     105: iload         4
     107: ifne          119
     110: iconst_1
     111: istore        5
     113: iinc          7, 1
     116: goto          37
     119: iload         4
     121: ifeq          136
     124: iload         5
     126: ifeq          134
     129: iload_3
     130: ineg
     131: goto          135
     134: iload_3
     135: ireturn
     136: new           #50                 // class java/lang/NumberFormatException
     139: dup
     140: aload_0
     141: invokestatic  #54                 // Method toString:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
     144: invokespecial #52                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     147: athrow

  public static int takeInt(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_0
       7: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      10: istore        4
      12: iload         4
      14: aload_0
      15: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      18: if_icmpge     92
      21: aload_0
      22: iload         4
      24: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      27: istore        5
      29: iload         5
      31: bipush        32
      33: if_icmpgt     43
      36: iload_2
      37: ifeq          86
      40: goto          92
      43: iload         5
      45: bipush        48
      47: if_icmplt     73
      50: iload         5
      52: bipush        57
      54: if_icmpgt     73
      57: iload_1
      58: bipush        10
      60: imul
      61: iload         5
      63: bipush        48
      65: isub
      66: iadd
      67: istore_1
      68: iconst_1
      69: istore_2
      70: goto          86
      73: iload         5
      75: bipush        45
      77: if_icmpne     92
      80: iload_2
      81: ifne          92
      84: iconst_1
      85: istore_3
      86: iinc          4, 1
      89: goto          12
      92: iload_2
      93: ifeq          114
      96: aload_0
      97: iload         4
      99: invokevirtual #10                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     102: pop
     103: iload_3
     104: ifeq          112
     107: iload_1
     108: ineg
     109: goto          113
     112: iload_1
     113: ireturn
     114: new           #50                 // class java/lang/NumberFormatException
     117: dup
     118: aload_0
     119: invokestatic  #54                 // Method toString:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
     122: invokespecial #52                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     125: athrow

  public static long toLong(java.nio.ByteBuffer);
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: aload_0
       8: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      11: istore        5
      13: iload         5
      15: aload_0
      16: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      19: if_icmpge     96
      22: aload_0
      23: iload         5
      25: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      28: istore        6
      30: iload         6
      32: bipush        32
      34: if_icmpgt     44
      37: iload_3
      38: ifeq          90
      41: goto          96
      44: iload         6
      46: bipush        48
      48: if_icmplt     76
      51: iload         6
      53: bipush        57
      55: if_icmpgt     76
      58: lload_1
      59: ldc2_w        #55                 // long 10l
      62: lmul
      63: iload         6
      65: bipush        48
      67: isub
      68: i2l
      69: ladd
      70: lstore_1
      71: iconst_1
      72: istore_3
      73: goto          90
      76: iload         6
      78: bipush        45
      80: if_icmpne     96
      83: iload_3
      84: ifne          96
      87: iconst_1
      88: istore        4
      90: iinc          5, 1
      93: goto          13
      96: iload_3
      97: ifeq          112
     100: iload         4
     102: ifeq          110
     105: lload_1
     106: lneg
     107: goto          111
     110: lload_1
     111: lreturn
     112: new           #50                 // class java/lang/NumberFormatException
     115: dup
     116: aload_0
     117: invokestatic  #54                 // Method toString:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
     120: invokespecial #52                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     123: athrow

  public static void putHexInt(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: ifge          77
       4: aload_0
       5: bipush        45
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      10: pop
      11: iload_1
      12: ldc           #58                 // int -2147483648
      14: if_icmpne     74
      17: aload_0
      18: bipush        56
      20: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_0
      25: bipush        48
      27: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      30: pop
      31: aload_0
      32: bipush        48
      34: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      37: pop
      38: aload_0
      39: bipush        48
      41: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      44: pop
      45: aload_0
      46: bipush        48
      48: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      51: pop
      52: aload_0
      53: bipush        48
      55: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      58: pop
      59: aload_0
      60: bipush        48
      62: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      65: pop
      66: aload_0
      67: bipush        48
      69: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      72: pop
      73: return
      74: iload_1
      75: ineg
      76: istore_1
      77: iload_1
      78: bipush        16
      80: if_icmpge     96
      83: aload_0
      84: getstatic     #59                 // Field DIGIT:[B
      87: iload_1
      88: baload
      89: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      92: pop
      93: goto          175
      96: iconst_0
      97: istore_2
      98: getstatic     #60                 // Field hexDivisors:[I
     101: astore_3
     102: aload_3
     103: arraylength
     104: istore        4
     106: iconst_0
     107: istore        5
     109: iload         5
     111: iload         4
     113: if_icmpge     175
     116: aload_3
     117: iload         5
     119: iaload
     120: istore        6
     122: iload_1
     123: iload         6
     125: if_icmpge     142
     128: iload_2
     129: ifeq          169
     132: aload_0
     133: bipush        48
     135: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     138: pop
     139: goto          169
     142: iconst_1
     143: istore_2
     144: iload_1
     145: iload         6
     147: idiv
     148: istore        7
     150: aload_0
     151: getstatic     #59                 // Field DIGIT:[B
     154: iload         7
     156: baload
     157: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     160: pop
     161: iload_1
     162: iload         7
     164: iload         6
     166: imul
     167: isub
     168: istore_1
     169: iinc          5, 1
     172: goto          109
     175: return

  public static void putDecInt(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: ifge          33
       4: aload_0
       5: bipush        45
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      10: pop
      11: iload_1
      12: ldc           #58                 // int -2147483648
      14: if_icmpne     30
      17: aload_0
      18: bipush        50
      20: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: ldc           #61                 // int 147483648
      26: istore_1
      27: goto          33
      30: iload_1
      31: ineg
      32: istore_1
      33: iload_1
      34: bipush        10
      36: if_icmpge     52
      39: aload_0
      40: getstatic     #59                 // Field DIGIT:[B
      43: iload_1
      44: baload
      45: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      48: pop
      49: goto          131
      52: iconst_0
      53: istore_2
      54: getstatic     #62                 // Field decDivisors:[I
      57: astore_3
      58: aload_3
      59: arraylength
      60: istore        4
      62: iconst_0
      63: istore        5
      65: iload         5
      67: iload         4
      69: if_icmpge     131
      72: aload_3
      73: iload         5
      75: iaload
      76: istore        6
      78: iload_1
      79: iload         6
      81: if_icmpge     98
      84: iload_2
      85: ifeq          125
      88: aload_0
      89: bipush        48
      91: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      94: pop
      95: goto          125
      98: iconst_1
      99: istore_2
     100: iload_1
     101: iload         6
     103: idiv
     104: istore        7
     106: aload_0
     107: getstatic     #59                 // Field DIGIT:[B
     110: iload         7
     112: baload
     113: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     116: pop
     117: iload_1
     118: iload         7
     120: iload         6
     122: imul
     123: isub
     124: istore_1
     125: iinc          5, 1
     128: goto          65
     131: return

  public static void putDecLong(java.nio.ByteBuffer, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: aload_0
       7: bipush        45
       9: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      12: pop
      13: lload_1
      14: ldc2_w        #64                 // long -9223372036854775808l
      17: lcmp
      18: ifne          35
      21: aload_0
      22: bipush        57
      24: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      27: pop
      28: ldc2_w        #66                 // long 223372036854775808l
      31: lstore_1
      32: goto          38
      35: lload_1
      36: lneg
      37: lstore_1
      38: lload_1
      39: ldc2_w        #55                 // long 10l
      42: lcmp
      43: ifge          60
      46: aload_0
      47: getstatic     #59                 // Field DIGIT:[B
      50: lload_1
      51: l2i
      52: baload
      53: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      56: pop
      57: goto          144
      60: iconst_0
      61: istore_3
      62: getstatic     #68                 // Field decDivisorsL:[J
      65: astore        4
      67: aload         4
      69: arraylength
      70: istore        5
      72: iconst_0
      73: istore        6
      75: iload         6
      77: iload         5
      79: if_icmpge     144
      82: aload         4
      84: iload         6
      86: laload
      87: lstore        7
      89: lload_1
      90: lload         7
      92: lcmp
      93: ifge          110
      96: iload_3
      97: ifeq          138
     100: aload_0
     101: bipush        48
     103: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     106: pop
     107: goto          138
     110: iconst_1
     111: istore_3
     112: lload_1
     113: lload         7
     115: ldiv
     116: lstore        9
     118: aload_0
     119: getstatic     #59                 // Field DIGIT:[B
     122: lload         9
     124: l2i
     125: baload
     126: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     129: pop
     130: lload_1
     131: lload         9
     133: lload         7
     135: lmul
     136: lsub
     137: lstore_1
     138: iinc          6, 1
     141: goto          75
     144: return

  public static java.nio.ByteBuffer toBuffer(int);
    Code:
       0: bipush        32
       2: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_1
       6: aload_1
       7: iload_0
       8: invokestatic  #69                 // Method putDecInt:(Ljava/nio/ByteBuffer;I)V
      11: aload_1
      12: areturn

  public static java.nio.ByteBuffer toBuffer(long);
    Code:
       0: bipush        32
       2: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_2
       6: aload_2
       7: lload_0
       8: invokestatic  #70                 // Method putDecLong:(Ljava/nio/ByteBuffer;J)V
      11: aload_2
      12: areturn

  public static java.nio.ByteBuffer toBuffer(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       4: invokestatic  #71                 // Method toBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;
       7: areturn

  public static java.nio.ByteBuffer toBuffer(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: areturn
       8: aload_0
       9: aload_1
      10: invokevirtual #72                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      13: invokestatic  #73                 // Method toBuffer:([B)Ljava/nio/ByteBuffer;
      16: areturn

  public static java.nio.ByteBuffer toBuffer(byte[]);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: areturn
       8: aload_0
       9: iconst_0
      10: aload_0
      11: arraylength
      12: invokestatic  #74                 // Method toBuffer:([BII)Ljava/nio/ByteBuffer;
      15: areturn

  public static java.nio.ByteBuffer toBuffer(byte[], int, int);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: areturn
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokestatic  #75                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      14: areturn

  public static java.nio.ByteBuffer toDirectBuffer(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       4: invokestatic  #76                 // Method toDirectBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;
       7: areturn

  public static java.nio.ByteBuffer toDirectBuffer(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: areturn
       8: aload_0
       9: aload_1
      10: invokevirtual #72                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      13: astore_2
      14: aload_2
      15: arraylength
      16: invokestatic  #4                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      19: astore_3
      20: aload_3
      21: aload_2
      22: invokevirtual #77                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_3
      27: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      30: pop
      31: aload_3
      32: areturn

  public static java.nio.ByteBuffer toMappedBuffer(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: lconst_0
       5: aload_0
       6: invokevirtual #79                 // Method java/io/File.length:()J
       9: invokestatic  #80                 // Method toMappedBuffer:(Ljava/nio/file/Path;JJ)Ljava/nio/ByteBuffer;
      12: areturn

  public static java.nio.ByteBuffer toMappedBuffer(java.nio.file.Path, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #81                 // class java/nio/file/OpenOption
       5: dup
       6: iconst_0
       7: getstatic     #82                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      10: aastore
      11: invokestatic  #83                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      14: astore        5
      16: aload         5
      18: getstatic     #84                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
      21: lload_1
      22: lload_3
      23: invokevirtual #85                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      26: astore        6
      28: aload         5
      30: ifnull        38
      33: aload         5
      35: invokevirtual #86                 // Method java/nio/channels/FileChannel.close:()V
      38: aload         6
      40: areturn
      41: astore        6
      43: aload         5
      45: ifnull        65
      48: aload         5
      50: invokevirtual #86                 // Method java/nio/channels/FileChannel.close:()V
      53: goto          65
      56: astore        7
      58: aload         6
      60: aload         7
      62: invokevirtual #36                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      65: aload         6
      67: athrow
    Exception table:
       from    to  target type
          16    28    41   Class java/lang/Throwable
          48    53    56   Class java/lang/Throwable

  public static boolean isMappedBuffer(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: ireturn

  public static java.nio.ByteBuffer toBuffer(org.eclipse.jetty.util.resource.Resource, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method org/eclipse/jetty/util/resource/Resource.length:()J
       4: lstore_2
       5: lload_2
       6: lconst_0
       7: lcmp
       8: ifge          47
      11: new           #88                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #89                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #91                 // String invalid resource:
      24: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #94                 // String  len=
      33: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_2
      37: invokevirtual #95                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: lload_2
      48: ldc2_w        #98                 // long 2147483647l
      51: lcmp
      52: ifle          57
      55: aconst_null
      56: areturn
      57: lload_2
      58: l2i
      59: istore        4
      61: iload_1
      62: ifeq          73
      65: iload         4
      67: invokestatic  #100                // Method allocateDirect:(I)Ljava/nio/ByteBuffer;
      70: goto          78
      73: iload         4
      75: invokestatic  #37                 // Method allocate:(I)Ljava/nio/ByteBuffer;
      78: astore        5
      80: aload         5
      82: invokestatic  #14                 // Method flipToFill:(Ljava/nio/ByteBuffer;)I
      85: istore        6
      87: aload_0
      88: invokevirtual #101                // Method org/eclipse/jetty/util/resource/Resource.getFile:()Ljava/io/File;
      91: ifnull        106
      94: aload_0
      95: invokevirtual #101                // Method org/eclipse/jetty/util/resource/Resource.getFile:()Ljava/io/File;
      98: aload         5
     100: invokestatic  #102                // Method readFrom:(Ljava/io/File;Ljava/nio/ByteBuffer;)V
     103: goto          161
     106: aload_0
     107: invokevirtual #103                // Method org/eclipse/jetty/util/resource/Resource.getInputStream:()Ljava/io/InputStream;
     110: astore        7
     112: aload         7
     114: iload         4
     116: aload         5
     118: invokestatic  #104                // Method readFrom:(Ljava/io/InputStream;ILjava/nio/ByteBuffer;)V
     121: aload         7
     123: ifnull        161
     126: aload         7
     128: invokevirtual #105                // Method java/io/InputStream.close:()V
     131: goto          161
     134: astore        8
     136: aload         7
     138: ifnull        158
     141: aload         7
     143: invokevirtual #105                // Method java/io/InputStream.close:()V
     146: goto          158
     149: astore        9
     151: aload         8
     153: aload         9
     155: invokevirtual #36                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     158: aload         8
     160: athrow
     161: aload         5
     163: iload         6
     165: invokestatic  #16                 // Method flipToFlush:(Ljava/nio/ByteBuffer;I)V
     168: aload         5
     170: areturn
    Exception table:
       from    to  target type
         112   121   134   Class java/lang/Throwable
         141   146   149   Class java/lang/Throwable

  public static java.lang.String toSummaryString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #106                // String null
       6: areturn
       7: new           #89                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_1
      16: ldc           #107                // String [p=
      18: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      27: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #109                // String ,l=
      34: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      43: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #110                // String ,c=
      50: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: aload_0
      56: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      59: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: ldc           #111                // String ,r=
      66: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: aload_0
      72: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      75: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: pop
      79: aload_1
      80: ldc           #112                // String ]
      82: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_1
      87: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: areturn

  public static java.lang.String toDetailString(java.nio.ByteBuffer[]);
    Code:
       0: new           #89                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        91
      11: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: arraylength
      20: if_icmpge     51
      23: iload_2
      24: ifle          34
      27: aload_1
      28: bipush        44
      30: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: aload_0
      36: iload_2
      37: aaload
      38: invokestatic  #114                // Method toDetailString:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
      41: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: iinc          2, 1
      48: goto          17
      51: aload_1
      52: bipush        93
      54: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      57: pop
      58: aload_1
      59: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  private static void idString(java.nio.ByteBuffer, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #116                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       8: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: pop
      12: aload_1
      13: ldc           #117                // String @
      15: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_0
      20: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
      23: ifeq          77
      26: aload_0
      27: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      30: iconst_4
      31: if_icmpne     77
      34: aload_1
      35: bipush        84
      37: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: pop
      41: aload_0
      42: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      45: astore_2
      46: aload_2
      47: iconst_0
      48: baload
      49: aload_1
      50: invokestatic  #118                // Method org/eclipse/jetty/util/TypeUtil.toHex:(BLjava/lang/Appendable;)V
      53: aload_2
      54: iconst_1
      55: baload
      56: aload_1
      57: invokestatic  #118                // Method org/eclipse/jetty/util/TypeUtil.toHex:(BLjava/lang/Appendable;)V
      60: aload_2
      61: iconst_2
      62: baload
      63: aload_1
      64: invokestatic  #118                // Method org/eclipse/jetty/util/TypeUtil.toHex:(BLjava/lang/Appendable;)V
      67: aload_2
      68: iconst_3
      69: baload
      70: aload_1
      71: invokestatic  #118                // Method org/eclipse/jetty/util/TypeUtil.toHex:(BLjava/lang/Appendable;)V
      74: goto          89
      77: aload_1
      78: aload_0
      79: invokestatic  #119                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      82: invokestatic  #120                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      85: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: return

  public static java.lang.String toIDString(java.nio.ByteBuffer);
    Code:
       0: new           #89                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #121                // Method idString:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;)V
      13: aload_1
      14: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public static java.lang.String toDetailString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #106                // String null
       6: areturn
       7: new           #89                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokestatic  #121                // Method idString:(Ljava/nio/ByteBuffer;Ljava/lang/StringBuilder;)V
      20: aload_1
      21: ldc           #107                // String [p=
      23: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: aload_0
      29: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      32: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: ldc           #109                // String ,l=
      39: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_1
      44: aload_0
      45: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      48: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: ldc           #110                // String ,c=
      55: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_1
      60: aload_0
      61: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      64: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: ldc           #111                // String ,r=
      71: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_1
      76: aload_0
      77: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      80: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: ldc           #122                // String ]={
      87: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: aload_0
      93: invokestatic  #123                // Method appendDebugString:(Ljava/lang/StringBuilder;Ljava/nio/ByteBuffer;)V
      96: aload_1
      97: ldc           #124                // String }
      99: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: aload_1
     104: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: areturn

  private static void appendDebugString(java.lang.StringBuilder, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/nio/ByteBuffer.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      12: if_icmpge     60
      15: aload_0
      16: aload_1
      17: iload_2
      18: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      21: invokestatic  #125                // Method appendContentChar:(Ljava/lang/StringBuilder;B)V
      24: iload_2
      25: bipush        8
      27: if_icmpne     54
      30: aload_1
      31: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      34: bipush        16
      36: if_icmple     54
      39: aload_0
      40: ldc           #126                // String ...
      42: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      50: bipush        8
      52: isub
      53: istore_2
      54: iinc          2, 1
      57: goto          7
      60: aload_0
      61: ldc           #127                // String <<<
      63: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: aload_1
      68: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      71: istore_2
      72: iload_2
      73: aload_1
      74: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      77: if_icmpge     135
      80: aload_0
      81: aload_1
      82: iload_2
      83: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      86: invokestatic  #125                // Method appendContentChar:(Ljava/lang/StringBuilder;B)V
      89: iload_2
      90: aload_1
      91: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      94: bipush        24
      96: iadd
      97: if_icmpne     129
     100: aload_1
     101: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
     104: aload_1
     105: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
     108: bipush        48
     110: iadd
     111: if_icmple     129
     114: aload_0
     115: ldc           #126                // String ...
     117: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: aload_1
     122: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
     125: bipush        24
     127: isub
     128: istore_2
     129: iinc          2, 1
     132: goto          72
     135: aload_0
     136: ldc           #128                // String >>>
     138: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload_1
     143: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
     146: istore_2
     147: aload_1
     148: aload_1
     149: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
     152: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     155: pop
     156: iload_2
     157: istore_3
     158: iload_3
     159: aload_1
     160: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
     163: if_icmpge     215
     166: aload_0
     167: aload_1
     168: iload_3
     169: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
     172: invokestatic  #125                // Method appendContentChar:(Ljava/lang/StringBuilder;B)V
     175: iload_3
     176: iload_2
     177: bipush        8
     179: iadd
     180: if_icmpne     209
     183: aload_1
     184: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
     187: iload_2
     188: bipush        16
     190: iadd
     191: if_icmple     209
     194: aload_0
     195: ldc           #126                // String ...
     197: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: pop
     201: aload_1
     202: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
     205: bipush        8
     207: isub
     208: istore_3
     209: iinc          3, 1
     212: goto          158
     215: aload_1
     216: iload_2
     217: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     220: pop
     221: goto          241
     224: astore_2
     225: invokestatic  #129                // Method org/eclipse/jetty/util/log/Log.getRootLogger:()Lorg/eclipse/jetty/util/log/Logger;
     228: aload_2
     229: invokeinterface #130,  2          // InterfaceMethod org/eclipse/jetty/util/log/Logger.ignore:(Ljava/lang/Throwable;)V
     234: aload_0
     235: ldc           #131                // String !!concurrent mod!!
     237: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: pop
     241: return
    Exception table:
       from    to  target type
           5   221   224   Class java/lang/Throwable

  private static void appendContentChar(java.lang.StringBuilder, byte);
    Code:
       0: iload_1
       1: bipush        92
       3: if_icmpne     16
       6: aload_0
       7: ldc           #132                // String \\\\
       9: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: pop
      13: goto          100
      16: iload_1
      17: bipush        32
      19: if_icmplt     38
      22: iload_1
      23: bipush        126
      25: if_icmpgt     38
      28: aload_0
      29: iload_1
      30: i2c
      31: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: pop
      35: goto          100
      38: iload_1
      39: bipush        13
      41: if_icmpne     54
      44: aload_0
      45: ldc           #133                // String \\r
      47: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: goto          100
      54: iload_1
      55: bipush        10
      57: if_icmpne     70
      60: aload_0
      61: ldc           #134                // String \\n
      63: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: goto          100
      70: iload_1
      71: bipush        9
      73: if_icmpne     86
      76: aload_0
      77: ldc           #135                // String \\t
      79: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: goto          100
      86: aload_0
      87: ldc           #136                // String \\x
      89: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload_1
      93: invokestatic  #137                // Method org/eclipse/jetty/util/TypeUtil.toHexString:(B)Ljava/lang/String;
      96: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: return

  public static java.lang.String toHexSummary(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #106                // String null
       6: areturn
       7: new           #89                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_1
      16: ldc           #138                // String b[
      18: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      25: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #139                // String ]=
      30: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_0
      35: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      38: istore_2
      39: iload_2
      40: aload_0
      41: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      44: if_icmpge     102
      47: aload_0
      48: iload_2
      49: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      52: aload_1
      53: invokestatic  #118                // Method org/eclipse/jetty/util/TypeUtil.toHex:(BLjava/lang/Appendable;)V
      56: iload_2
      57: aload_0
      58: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      61: bipush        24
      63: iadd
      64: if_icmpne     96
      67: aload_0
      68: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      71: aload_0
      72: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      75: bipush        32
      77: iadd
      78: if_icmple     96
      81: aload_1
      82: ldc           #126                // String ...
      84: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_0
      89: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      92: bipush        8
      94: isub
      95: istore_2
      96: iinc          2, 1
      99: goto          39
     102: aload_1
     103: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: areturn

  public static java.lang.String toHexString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #106                // String null
       6: areturn
       7: aload_0
       8: invokestatic  #140                // Method toArray:(Ljava/nio/ByteBuffer;)[B
      11: invokestatic  #141                // Method org/eclipse/jetty/util/TypeUtil.toHexString:([B)Ljava/lang/String;
      14: areturn

  public static void putCRLF(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: bipush        13
       3: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
       6: pop
       7: aload_0
       8: bipush        10
      10: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      13: pop
      14: return

  public static boolean isPrefix(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       4: aload_1
       5: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       8: if_icmple     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      17: istore_2
      18: aload_0
      19: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      22: istore_3
      23: iload_3
      24: aload_0
      25: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
      28: if_icmpge     55
      31: aload_0
      32: iload_3
      33: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      36: aload_1
      37: iload_2
      38: iinc          2, 1
      41: invokevirtual #53                 // Method java/nio/ByteBuffer.get:(I)B
      44: if_icmpeq     49
      47: iconst_0
      48: ireturn
      49: iinc          3, 1
      52: goto          23
      55: iconst_1
      56: ireturn

  public static java.nio.ByteBuffer ensureCapacity(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: ifnonnull     9
       4: iload_1
       5: invokestatic  #37                 // Method allocate:(I)Ljava/nio/ByteBuffer;
       8: areturn
       9: aload_0
      10: invokevirtual #11                 // Method java/nio/ByteBuffer.capacity:()I
      13: iload_1
      14: if_icmplt     19
      17: aload_0
      18: areturn
      19: aload_0
      20: invokevirtual #17                 // Method java/nio/ByteBuffer.hasArray:()Z
      23: ifeq          55
      26: aload_0
      27: invokevirtual #18                 // Method java/nio/ByteBuffer.array:()[B
      30: aload_0
      31: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      34: aload_0
      35: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
      38: iload_1
      39: iadd
      40: invokestatic  #20                 // Method java/util/Arrays.copyOfRange:([BII)[B
      43: aload_0
      44: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      47: aload_0
      48: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      51: invokestatic  #75                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      54: areturn
      55: new           #142                // class java/lang/UnsupportedOperationException
      58: dup
      59: invokespecial #143                // Method java/lang/UnsupportedOperationException."<init>":()V
      62: athrow

  static {};
    Code:
       0: bipush        16
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        48
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        49
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        50
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        51
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        52
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        53
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        54
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        55
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        56
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        57
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        65
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        66
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        67
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        68
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        69
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        70
      93: bastore
      94: putstatic     #59                 // Field DIGIT:[B
      97: iconst_0
      98: newarray       byte
     100: invokestatic  #144                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     103: putstatic     #23                 // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
     106: bipush        10
     108: newarray       int
     110: dup
     111: iconst_0
     112: ldc           #145                // int 1000000000
     114: iastore
     115: dup
     116: iconst_1
     117: ldc           #146                // int 100000000
     119: iastore
     120: dup
     121: iconst_2
     122: ldc           #147                // int 10000000
     124: iastore
     125: dup
     126: iconst_3
     127: ldc           #148                // int 1000000
     129: iastore
     130: dup
     131: iconst_4
     132: ldc           #149                // int 100000
     134: iastore
     135: dup
     136: iconst_5
     137: sipush        10000
     140: iastore
     141: dup
     142: bipush        6
     144: sipush        1000
     147: iastore
     148: dup
     149: bipush        7
     151: bipush        100
     153: iastore
     154: dup
     155: bipush        8
     157: bipush        10
     159: iastore
     160: dup
     161: bipush        9
     163: iconst_1
     164: iastore
     165: putstatic     #62                 // Field decDivisors:[I
     168: bipush        8
     170: newarray       int
     172: dup
     173: iconst_0
     174: ldc           #150                // int 268435456
     176: iastore
     177: dup
     178: iconst_1
     179: ldc           #151                // int 16777216
     181: iastore
     182: dup
     183: iconst_2
     184: ldc           #152                // int 1048576
     186: iastore
     187: dup
     188: iconst_3
     189: ldc           #153                // int 65536
     191: iastore
     192: dup
     193: iconst_4
     194: sipush        4096
     197: iastore
     198: dup
     199: iconst_5
     200: sipush        256
     203: iastore
     204: dup
     205: bipush        6
     207: bipush        16
     209: iastore
     210: dup
     211: bipush        7
     213: iconst_1
     214: iastore
     215: putstatic     #60                 // Field hexDivisors:[I
     218: bipush        19
     220: newarray       long
     222: dup
     223: iconst_0
     224: ldc2_w        #154                // long 1000000000000000000l
     227: lastore
     228: dup
     229: iconst_1
     230: ldc2_w        #156                // long 100000000000000000l
     233: lastore
     234: dup
     235: iconst_2
     236: ldc2_w        #158                // long 10000000000000000l
     239: lastore
     240: dup
     241: iconst_3
     242: ldc2_w        #160                // long 1000000000000000l
     245: lastore
     246: dup
     247: iconst_4
     248: ldc2_w        #162                // long 100000000000000l
     251: lastore
     252: dup
     253: iconst_5
     254: ldc2_w        #164                // long 10000000000000l
     257: lastore
     258: dup
     259: bipush        6
     261: ldc2_w        #166                // long 1000000000000l
     264: lastore
     265: dup
     266: bipush        7
     268: ldc2_w        #168                // long 100000000000l
     271: lastore
     272: dup
     273: bipush        8
     275: ldc2_w        #170                // long 10000000000l
     278: lastore
     279: dup
     280: bipush        9
     282: ldc2_w        #172                // long 1000000000l
     285: lastore
     286: dup
     287: bipush        10
     289: ldc2_w        #174                // long 100000000l
     292: lastore
     293: dup
     294: bipush        11
     296: ldc2_w        #176                // long 10000000l
     299: lastore
     300: dup
     301: bipush        12
     303: ldc2_w        #178                // long 1000000l
     306: lastore
     307: dup
     308: bipush        13
     310: ldc2_w        #180                // long 100000l
     313: lastore
     314: dup
     315: bipush        14
     317: ldc2_w        #182                // long 10000l
     320: lastore
     321: dup
     322: bipush        15
     324: ldc2_w        #184                // long 1000l
     327: lastore
     328: dup
     329: bipush        16
     331: ldc2_w        #186                // long 100l
     334: lastore
     335: dup
     336: bipush        17
     338: ldc2_w        #55                 // long 10l
     341: lastore
     342: dup
     343: bipush        18
     345: lconst_1
     346: lastore
     347: putstatic     #68                 // Field decDivisorsL:[J
     350: return
}
