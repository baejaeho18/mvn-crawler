Compiled from "ExecutionSequencer.java"
final class com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor extends java.util.concurrent.atomic.AtomicReference<com.google.common.util.concurrent.ExecutionSequencer$RunningState> implements java.util.concurrent.Executor, java.lang.Runnable {
  com.google.common.util.concurrent.ExecutionSequencer sequencer;

  java.util.concurrent.Executor delegate;

  java.lang.Runnable task;

  java.lang.Thread submitting;

  private com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor(java.util.concurrent.Executor, com.google.common.util.concurrent.ExecutionSequencer);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      12: aload_0
      13: aload_2
      14: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      17: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method get:()Ljava/lang/Object;
       4: getstatic     #9                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.CANCELLED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: if_acmpne     21
      10: aload_0
      11: aconst_null
      12: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      20: return
      21: aload_0
      22: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      25: putfield      #11                 // Field submitting:Ljava/lang/Thread;
      28: aload_0
      29: getfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      32: invokestatic  #12                 // Method com/google/common/util/concurrent/ExecutionSequencer.access$400:(Lcom/google/common/util/concurrent/ExecutionSequencer;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
      35: astore_2
      36: aload_2
      37: getfield      #13                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
      40: aload_0
      41: getfield      #11                 // Field submitting:Ljava/lang/Thread;
      44: if_acmpne     88
      47: aload_0
      48: aconst_null
      49: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      52: aload_2
      53: getfield      #14                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      56: ifnonnull     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      67: aload_2
      68: aload_1
      69: putfield      #14                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      72: aload_2
      73: aload_0
      74: getfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      77: putfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
      80: aload_0
      81: aconst_null
      82: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      85: goto          110
      88: aload_0
      89: getfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      92: astore_3
      93: aload_0
      94: aconst_null
      95: putfield      #6                  // Field delegate:Ljava/util/concurrent/Executor;
      98: aload_0
      99: aload_1
     100: putfield      #17                 // Field task:Ljava/lang/Runnable;
     103: aload_3
     104: aload_0
     105: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     110: aload_0
     111: aconst_null
     112: putfield      #11                 // Field submitting:Ljava/lang/Thread;
     115: goto          128
     118: astore        4
     120: aload_0
     121: aconst_null
     122: putfield      #11                 // Field submitting:Ljava/lang/Thread;
     125: aload         4
     127: athrow
     128: return
    Exception table:
       from    to  target type
          28   110   118   any
         118   120   118   any

  public void run();
    Code:
       0: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #11                 // Field submitting:Ljava/lang/Thread;
       9: if_acmpeq     29
      12: aload_0
      13: getfield      #17                 // Field task:Ljava/lang/Runnable;
      16: astore_2
      17: aload_0
      18: aconst_null
      19: putfield      #17                 // Field task:Ljava/lang/Runnable;
      22: aload_2
      23: invokeinterface #19,  1           // InterfaceMethod java/lang/Runnable.run:()V
      28: return
      29: new           #20                 // class com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue
      32: dup
      33: aconst_null
      34: invokespecial #21                 // Method com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue."<init>":(Lcom/google/common/util/concurrent/ExecutionSequencer$1;)V
      37: astore_2
      38: aload_2
      39: aload_1
      40: putfield      #13                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
      43: aload_0
      44: getfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      47: aload_2
      48: invokestatic  #22                 // Method com/google/common/util/concurrent/ExecutionSequencer.access$402:(Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
      51: pop
      52: aload_0
      53: aconst_null
      54: putfield      #7                  // Field sequencer:Lcom/google/common/util/concurrent/ExecutionSequencer;
      57: aload_0
      58: getfield      #17                 // Field task:Ljava/lang/Runnable;
      61: astore_3
      62: aload_0
      63: aconst_null
      64: putfield      #17                 // Field task:Ljava/lang/Runnable;
      67: aload_3
      68: invokeinterface #19,  1           // InterfaceMethod java/lang/Runnable.run:()V
      73: aload_2
      74: getfield      #14                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
      77: dup
      78: astore        4
      80: ifnull        87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: aload_2
      89: getfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
      92: dup
      93: astore        5
      95: ifnull        102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: iand
     104: ifeq          129
     107: aload_2
     108: aconst_null
     109: putfield      #14                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextTask:Ljava/lang/Runnable;
     112: aload_2
     113: aconst_null
     114: putfield      #16                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.nextExecutor:Ljava/util/concurrent/Executor;
     117: aload         5
     119: aload         4
     121: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     126: goto          73
     129: aload_2
     130: aconst_null
     131: putfield      #13                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
     134: goto          147
     137: astore        6
     139: aload_2
     140: aconst_null
     141: putfield      #13                 // Field com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue.thread:Ljava/lang/Thread;
     144: aload         6
     146: athrow
     147: return
    Exception table:
       from    to  target type
          57   129   137   any
         137   139   137   any

  private boolean trySetStarted();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: getstatic     #23                 // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.STARTED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: invokevirtual #24                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  private boolean trySetCancelled();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.NOT_RUN:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       4: getstatic     #9                  // Field com/google/common/util/concurrent/ExecutionSequencer$RunningState.CANCELLED:Lcom/google/common/util/concurrent/ExecutionSequencer$RunningState;
       7: invokevirtual #24                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor(java.util.concurrent.Executor, com.google.common.util.concurrent.ExecutionSequencer, com.google.common.util.concurrent.ExecutionSequencer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Executor;Lcom/google/common/util/concurrent/ExecutionSequencer;)V
       6: return

  static boolean access$200(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method trySetStarted:()Z
       4: ireturn

  static boolean access$300(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method trySetCancelled:()Z
       4: ireturn
}
