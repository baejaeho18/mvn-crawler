Compiled from "Maps.java"
class com.google.common.collect.Maps$IteratorBasedAbstractMap$1 extends com.google.common.collect.Maps$EntrySet<K, V> {
  final com.google.common.collect.Maps$IteratorBasedAbstractMap this$0;

  com.google.common.collect.Maps$IteratorBasedAbstractMap$1(com.google.common.collect.Maps$IteratorBasedAbstractMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/collect/Maps$IteratorBasedAbstractMap;
       5: aload_0
       6: invokespecial #2                  // Method com/google/common/collect/Maps$EntrySet."<init>":()V
       9: return

  java.util.Map<K, V> map();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/Maps$IteratorBasedAbstractMap;
       4: areturn

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/Maps$IteratorBasedAbstractMap;
       4: invokevirtual #3                  // Method com/google/common/collect/Maps$IteratorBasedAbstractMap.entryIterator:()Ljava/util/Iterator;
       7: areturn

  public java.util.Spliterator<java.util.Map$Entry<K, V>> spliterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/Maps$IteratorBasedAbstractMap;
       4: invokevirtual #4                  // Method com/google/common/collect/Maps$IteratorBasedAbstractMap.entrySpliterator:()Ljava/util/Spliterator;
       7: areturn

  public void forEach(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/Maps$IteratorBasedAbstractMap;
       4: aload_1
       5: invokevirtual #5                  // Method com/google/common/collect/Maps$IteratorBasedAbstractMap.forEachEntry:(Ljava/util/function/Consumer;)V
       8: return
}
