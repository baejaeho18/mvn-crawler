Compiled from "ForwardingConcurrentMap.java"
public abstract class com.google.common.collect.ForwardingConcurrentMap<K, V> extends com.google.common.collect.ForwardingMap<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  protected com.google.common.collect.ForwardingConcurrentMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/ForwardingMap."<init>":()V
       4: return

  protected abstract java.util.concurrent.ConcurrentMap<K, V> delegate();

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #3,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #4,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #6,  4            // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  protected java.util.Map delegate();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  protected java.lang.Object delegate();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
