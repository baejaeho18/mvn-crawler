Compiled from "CollectSpliterators.java"
class com.google.common.collect.CollectSpliterators$1WithCharacteristics implements java.util.Spliterator<T> {
  private final java.util.Spliterator$OfInt delegate;

  final java.util.function.IntFunction val$function;

  final int val$extraCharacteristics;

  final java.util.Comparator val$comparator;

  com.google.common.collect.CollectSpliterators$1WithCharacteristics(java.util.Spliterator$OfInt);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #1                  // Field val$function:Ljava/util/function/IntFunction;
       5: aload_0
       6: iload_3
       7: putfield      #2                  // Field val$extraCharacteristics:I
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field val$comparator:Ljava/util/Comparator;
      16: aload_0
      17: invokespecial #4                  // Method java/lang/Object."<init>":()V
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field delegate:Ljava/util/Spliterator$OfInt;
      25: return

  public boolean tryAdvance(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/Spliterator$OfInt;
       4: aload_1
       5: aload_0
       6: getfield      #1                  // Field val$function:Ljava/util/function/IntFunction;
       9: invokedynamic #6,  0              // InvokeDynamic #0:accept:(Ljava/util/function/Consumer;Ljava/util/function/IntFunction;)Ljava/util/function/IntConsumer;
      14: invokeinterface #7,  2            // InterfaceMethod java/util/Spliterator$OfInt.tryAdvance:(Ljava/util/function/IntConsumer;)Z
      19: ireturn

  public void forEachRemaining(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/Spliterator$OfInt;
       4: aload_1
       5: aload_0
       6: getfield      #1                  // Field val$function:Ljava/util/function/IntFunction;
       9: invokedynamic #8,  0              // InvokeDynamic #1:accept:(Ljava/util/function/Consumer;Ljava/util/function/IntFunction;)Ljava/util/function/IntConsumer;
      14: invokeinterface #9,  2            // InterfaceMethod java/util/Spliterator$OfInt.forEachRemaining:(Ljava/util/function/IntConsumer;)V
      19: return

  public java.util.Spliterator<T> trySplit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/Spliterator$OfInt;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Spliterator$OfInt.trySplit:()Ljava/util/Spliterator$OfInt;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: aconst_null
      15: goto          38
      18: new           #11                 // class com/google/common/collect/CollectSpliterators$1WithCharacteristics
      21: dup
      22: aload_1
      23: aload_0
      24: getfield      #1                  // Field val$function:Ljava/util/function/IntFunction;
      27: aload_0
      28: getfield      #2                  // Field val$extraCharacteristics:I
      31: aload_0
      32: getfield      #3                  // Field val$comparator:Ljava/util/Comparator;
      35: invokespecial #12                 // Method "<init>":(Ljava/util/Spliterator$OfInt;Ljava/util/function/IntFunction;ILjava/util/Comparator;)V
      38: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Ljava/util/Spliterator$OfInt;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Spliterator$OfInt.estimateSize:()J
       9: lreturn

  public int characteristics();
    Code:
       0: sipush        16464
       3: aload_0
       4: getfield      #2                  // Field val$extraCharacteristics:I
       7: ior
       8: ireturn

  public java.util.Comparator<? super T> getComparator();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #15                 // Method hasCharacteristics:(I)Z
       5: ifeq          13
       8: aload_0
       9: getfield      #3                  // Field val$comparator:Ljava/util/Comparator;
      12: areturn
      13: new           #16                 // class java/lang/IllegalStateException
      16: dup
      17: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
      20: athrow

  private static void lambda$forEachRemaining$1(java.util.function.Consumer, java.util.function.IntFunction, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokeinterface #18,  2           // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
       8: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return

  private static void lambda$tryAdvance$0(java.util.function.Consumer, java.util.function.IntFunction, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokeinterface #18,  2           // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
       8: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return
}
