Compiled from "Quantiles.java"
public final class com.google.common.math.Quantiles$ScaleAndIndexes {
  private final int scale;

  private final int[] indexes;

  private com.google.common.math.Quantiles$ScaleAndIndexes(int, int[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     38
      20: aload_3
      21: iload         5
      23: iaload
      24: istore        6
      26: iload         6
      28: iload_1
      29: invokestatic  #4                  // Method com/google/common/math/Quantiles.access$300:(II)V
      32: iinc          5, 1
      35: goto          13
      38: aload_2
      39: arraylength
      40: ifle          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ldc           #5                  // String Indexes must be a non empty array
      50: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      53: aload_0
      54: iload_1
      55: putfield      #7                  // Field scale:I
      58: aload_0
      59: aload_2
      60: putfield      #8                  // Field indexes:[I
      63: return

  public java.util.Map<java.lang.Integer, java.lang.Double> compute(java.util.Collection<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method com/google/common/primitives/Doubles.toArray:(Ljava/util/Collection;)[D
       5: invokevirtual #10                 // Method computeInPlace:([D)Ljava/util/Map;
       8: areturn

  public java.util.Map<java.lang.Integer, java.lang.Double> compute(double...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method "[D".clone:()Ljava/lang/Object;
       5: checkcast     #12                 // class "[D"
       8: invokevirtual #10                 // Method computeInPlace:([D)Ljava/util/Map;
      11: areturn

  public java.util.Map<java.lang.Integer, java.lang.Double> compute(long...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/google/common/math/Quantiles.access$400:([J)[D
       5: invokevirtual #10                 // Method computeInPlace:([D)Ljava/util/Map;
       8: areturn

  public java.util.Map<java.lang.Integer, java.lang.Double> compute(int...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method com/google/common/math/Quantiles.access$500:([I)[D
       5: invokevirtual #10                 // Method computeInPlace:([D)Ljava/util/Map;
       8: areturn

  public java.util.Map<java.lang.Integer, java.lang.Double> computeInPlace(double...);
    Code:
       0: aload_1
       1: arraylength
       2: ifle          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ldc           #15                 // String Cannot calculate quantiles of an empty dataset
      12: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      15: aload_1
      16: invokestatic  #16                 // Method com/google/common/math/Quantiles.access$600:([D)Z
      19: ifeq          84
      22: new           #17                 // class java/util/LinkedHashMap
      25: dup
      26: invokespecial #18                 // Method java/util/LinkedHashMap."<init>":()V
      29: astore_2
      30: aload_0
      31: getfield      #8                  // Field indexes:[I
      34: astore_3
      35: aload_3
      36: arraylength
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmpge     79
      49: aload_3
      50: iload         5
      52: iaload
      53: istore        6
      55: aload_2
      56: iload         6
      58: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: ldc2_w        #20                 // double NaNd
      64: invokestatic  #22                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      67: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: iinc          5, 1
      76: goto          42
      79: aload_2
      80: invokestatic  #24                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      83: areturn
      84: aload_0
      85: getfield      #8                  // Field indexes:[I
      88: arraylength
      89: newarray       int
      91: astore_2
      92: aload_0
      93: getfield      #8                  // Field indexes:[I
      96: arraylength
      97: newarray       int
      99: astore_3
     100: aload_0
     101: getfield      #8                  // Field indexes:[I
     104: arraylength
     105: iconst_2
     106: imul
     107: newarray       int
     109: astore        4
     111: iconst_0
     112: istore        5
     114: iconst_0
     115: istore        6
     117: iload         6
     119: aload_0
     120: getfield      #8                  // Field indexes:[I
     123: arraylength
     124: if_icmpge     219
     127: aload_0
     128: getfield      #8                  // Field indexes:[I
     131: iload         6
     133: iaload
     134: i2l
     135: aload_1
     136: arraylength
     137: iconst_1
     138: isub
     139: i2l
     140: lmul
     141: lstore        7
     143: lload         7
     145: aload_0
     146: getfield      #7                  // Field scale:I
     149: i2l
     150: getstatic     #25                 // Field java/math/RoundingMode.DOWN:Ljava/math/RoundingMode;
     153: invokestatic  #26                 // Method com/google/common/math/LongMath.divide:(JJLjava/math/RoundingMode;)J
     156: l2i
     157: istore        9
     159: lload         7
     161: iload         9
     163: i2l
     164: aload_0
     165: getfield      #7                  // Field scale:I
     168: i2l
     169: lmul
     170: lsub
     171: l2i
     172: istore        10
     174: aload_2
     175: iload         6
     177: iload         9
     179: iastore
     180: aload_3
     181: iload         6
     183: iload         10
     185: iastore
     186: aload         4
     188: iload         5
     190: iload         9
     192: iastore
     193: iinc          5, 1
     196: iload         10
     198: ifeq          213
     201: aload         4
     203: iload         5
     205: iload         9
     207: iconst_1
     208: iadd
     209: iastore
     210: iinc          5, 1
     213: iinc          6, 1
     216: goto          117
     219: aload         4
     221: iconst_0
     222: iload         5
     224: invokestatic  #27                 // Method java/util/Arrays.sort:([III)V
     227: aload         4
     229: iconst_0
     230: iload         5
     232: iconst_1
     233: isub
     234: aload_1
     235: iconst_0
     236: aload_1
     237: arraylength
     238: iconst_1
     239: isub
     240: invokestatic  #28                 // Method com/google/common/math/Quantiles.access$900:([III[DII)V
     243: new           #17                 // class java/util/LinkedHashMap
     246: dup
     247: invokespecial #18                 // Method java/util/LinkedHashMap."<init>":()V
     250: astore        6
     252: iconst_0
     253: istore        7
     255: iload         7
     257: aload_0
     258: getfield      #8                  // Field indexes:[I
     261: arraylength
     262: if_icmpge     358
     265: aload_2
     266: iload         7
     268: iaload
     269: istore        8
     271: aload_3
     272: iload         7
     274: iaload
     275: istore        9
     277: iload         9
     279: ifne          310
     282: aload         6
     284: aload_0
     285: getfield      #8                  // Field indexes:[I
     288: iload         7
     290: iaload
     291: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     294: aload_1
     295: iload         8
     297: daload
     298: invokestatic  #22                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     301: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: pop
     307: goto          352
     310: aload         6
     312: aload_0
     313: getfield      #8                  // Field indexes:[I
     316: iload         7
     318: iaload
     319: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     322: aload_1
     323: iload         8
     325: daload
     326: aload_1
     327: iload         8
     329: iconst_1
     330: iadd
     331: daload
     332: iload         9
     334: i2d
     335: aload_0
     336: getfield      #7                  // Field scale:I
     339: i2d
     340: invokestatic  #29                 // Method com/google/common/math/Quantiles.access$800:(DDDD)D
     343: invokestatic  #22                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     346: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     351: pop
     352: iinc          7, 1
     355: goto          255
     358: aload         6
     360: invokestatic  #24                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     363: areturn

  com.google.common.math.Quantiles$ScaleAndIndexes(int, int[], com.google.common.math.Quantiles$1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method "<init>":(I[I)V
       6: return
}
