Compiled from "Ordering.java"
class com.google.common.collect.Ordering$ArbitraryOrdering extends com.google.common.collect.Ordering<java.lang.Object> {
  private final java.util.concurrent.atomic.AtomicInteger counter;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Integer> uids;

  com.google.common.collect.Ordering$ArbitraryOrdering();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/Ordering."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #5                  // class com/google/common/collect/MapMaker
      20: dup
      21: invokespecial #6                  // Method com/google/common/collect/MapMaker."<init>":()V
      24: invokestatic  #7                  // Method com/google/common/collect/Platform.tryWeakKeys:(Lcom/google/common/collect/MapMaker;)Lcom/google/common/collect/MapMaker;
      27: invokevirtual #8                  // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      30: putfield      #9                  // Field uids:Ljava/util/concurrent/ConcurrentMap;
      33: return

  private java.lang.Integer getUid(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field uids:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: aload_0
      19: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      22: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      25: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: astore_2
      29: aload_0
      30: getfield      #9                  // Field uids:Ljava/util/concurrent/ConcurrentMap;
      33: aload_1
      34: aload_2
      35: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #11                 // class java/lang/Integer
      43: astore_3
      44: aload_3
      45: ifnull        50
      48: aload_3
      49: astore_2
      50: aload_2
      51: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_m1
      12: ireturn
      13: aload_2
      14: ifnonnull     19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: aload_1
      21: invokevirtual #15                 // Method identityHashCode:(Ljava/lang/Object;)I
      24: istore_3
      25: aload_0
      26: aload_2
      27: invokevirtual #15                 // Method identityHashCode:(Ljava/lang/Object;)I
      30: istore        4
      32: iload_3
      33: iload         4
      35: if_icmpeq     50
      38: iload_3
      39: iload         4
      41: if_icmpge     48
      44: iconst_m1
      45: goto          49
      48: iconst_1
      49: ireturn
      50: aload_0
      51: aload_1
      52: invokespecial #16                 // Method getUid:(Ljava/lang/Object;)Ljava/lang/Integer;
      55: aload_0
      56: aload_2
      57: invokespecial #16                 // Method getUid:(Ljava/lang/Object;)Ljava/lang/Integer;
      60: invokevirtual #17                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I
      63: istore        5
      65: iload         5
      67: ifne          78
      70: new           #18                 // class java/lang/AssertionError
      73: dup
      74: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      77: athrow
      78: iload         5
      80: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #20                 // String Ordering.arbitrary()
       2: areturn

  int identityHashCode(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn
}
