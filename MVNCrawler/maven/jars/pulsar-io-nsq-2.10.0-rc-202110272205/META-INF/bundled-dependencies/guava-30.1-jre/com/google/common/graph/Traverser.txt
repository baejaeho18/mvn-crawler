Compiled from "Traverser.java"
public abstract class com.google.common.graph.Traverser<N> {
  private final com.google.common.graph.SuccessorsFunction<N> successorFunction;

  private com.google.common.graph.Traverser(com.google.common.graph.SuccessorsFunction<N>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class com/google/common/graph/SuccessorsFunction
      12: putfield      #5                  // Field successorFunction:Lcom/google/common/graph/SuccessorsFunction;
      15: return

  public static <N> com.google.common.graph.Traverser<N> forGraph(com.google.common.graph.SuccessorsFunction<N>);
    Code:
       0: new           #6                  // class com/google/common/graph/Traverser$1
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #7                  // Method com/google/common/graph/Traverser$1."<init>":(Lcom/google/common/graph/SuccessorsFunction;Lcom/google/common/graph/SuccessorsFunction;)V
       9: areturn

  public static <N> com.google.common.graph.Traverser<N> forTree(com.google.common.graph.SuccessorsFunction<N>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class com/google/common/graph/BaseGraph
       4: ifeq          21
       7: aload_0
       8: checkcast     #8                  // class com/google/common/graph/BaseGraph
      11: invokeinterface #9,  1            // InterfaceMethod com/google/common/graph/BaseGraph.isDirected:()Z
      16: ldc           #10                 // String Undirected graphs can never be trees.
      18: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      21: aload_0
      22: instanceof    #12                 // class com/google/common/graph/Network
      25: ifeq          42
      28: aload_0
      29: checkcast     #12                 // class com/google/common/graph/Network
      32: invokeinterface #13,  1           // InterfaceMethod com/google/common/graph/Network.isDirected:()Z
      37: ldc           #14                 // String Undirected networks can never be trees.
      39: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      42: new           #15                 // class com/google/common/graph/Traverser$2
      45: dup
      46: aload_0
      47: aload_0
      48: invokespecial #16                 // Method com/google/common/graph/Traverser$2."<init>":(Lcom/google/common/graph/SuccessorsFunction;Lcom/google/common/graph/SuccessorsFunction;)V
      51: areturn

  public final java.lang.Iterable<N> breadthFirst(N);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       5: invokevirtual #18                 // Method breadthFirst:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<N> breadthFirst(java.lang.Iterable<? extends N>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method validate:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;
       5: astore_2
       6: new           #20                 // class com/google/common/graph/Traverser$3
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #21                 // Method com/google/common/graph/Traverser$3."<init>":(Lcom/google/common/graph/Traverser;Lcom/google/common/collect/ImmutableSet;)V
      15: areturn

  public final java.lang.Iterable<N> depthFirstPreOrder(N);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       5: invokevirtual #22                 // Method depthFirstPreOrder:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<N> depthFirstPreOrder(java.lang.Iterable<? extends N>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method validate:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;
       5: astore_2
       6: new           #23                 // class com/google/common/graph/Traverser$4
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #24                 // Method com/google/common/graph/Traverser$4."<init>":(Lcom/google/common/graph/Traverser;Lcom/google/common/collect/ImmutableSet;)V
      15: areturn

  public final java.lang.Iterable<N> depthFirstPostOrder(N);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       5: invokevirtual #25                 // Method depthFirstPostOrder:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<N> depthFirstPostOrder(java.lang.Iterable<? extends N>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method validate:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;
       5: astore_2
       6: new           #26                 // class com/google/common/graph/Traverser$5
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #27                 // Method com/google/common/graph/Traverser$5."<init>":(Lcom/google/common/graph/Traverser;Lcom/google/common/collect/ImmutableSet;)V
      15: areturn

  abstract com.google.common.graph.Traverser$Traversal<N> newTraversal();

  private com.google.common.collect.ImmutableSet<N> validate(java.lang.Iterable<? extends N>);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;
       4: astore_2
       5: aload_2
       6: invokevirtual #29                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        4
      27: aload_0
      28: getfield      #5                  // Field successorFunction:Lcom/google/common/graph/SuccessorsFunction;
      31: aload         4
      33: invokeinterface #32,  2           // InterfaceMethod com/google/common/graph/SuccessorsFunction.successors:(Ljava/lang/Object;)Ljava/lang/Iterable;
      38: pop
      39: goto          10
      42: aload_2
      43: areturn

  com.google.common.graph.Traverser(com.google.common.graph.SuccessorsFunction, com.google.common.graph.Traverser$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/google/common/graph/SuccessorsFunction;)V
       5: return
}
