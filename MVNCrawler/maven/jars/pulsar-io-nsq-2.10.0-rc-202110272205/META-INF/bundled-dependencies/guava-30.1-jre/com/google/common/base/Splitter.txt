Compiled from "Splitter.java"
public final class com.google.common.base.Splitter {
  private final com.google.common.base.CharMatcher trimmer;

  private final boolean omitEmptyStrings;

  private final com.google.common.base.Splitter$Strategy strategy;

  private final int limit;

  private com.google.common.base.Splitter(com.google.common.base.Splitter$Strategy);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #5                  // Method com/google/common/base/CharMatcher.none:()Lcom/google/common/base/CharMatcher;
       6: ldc           #7                  // int 2147483647
       8: invokespecial #8                  // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;ZLcom/google/common/base/CharMatcher;I)V
      11: return

  private com.google.common.base.Splitter(com.google.common.base.Splitter$Strategy, boolean, com.google.common.base.CharMatcher, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #10                 // Field strategy:Lcom/google/common/base/Splitter$Strategy;
       9: aload_0
      10: iload_2
      11: putfield      #2                  // Field omitEmptyStrings:Z
      14: aload_0
      15: aload_3
      16: putfield      #3                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      19: aload_0
      20: iload         4
      22: putfield      #1                  // Field limit:I
      25: return

  public static com.google.common.base.Splitter on(char);
    Code:
       0: iload_0
       1: invokestatic  #11                 // Method com/google/common/base/CharMatcher.is:(C)Lcom/google/common/base/CharMatcher;
       4: invokestatic  #12                 // Method on:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/Splitter;
       7: areturn

  public static com.google.common.base.Splitter on(com.google.common.base.CharMatcher);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #14                 // class com/google/common/base/Splitter
       8: dup
       9: new           #15                 // class com/google/common/base/Splitter$1
      12: dup
      13: aload_0
      14: invokespecial #16                 // Method com/google/common/base/Splitter$1."<init>":(Lcom/google/common/base/CharMatcher;)V
      17: invokespecial #17                 // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;)V
      20: areturn

  public static com.google.common.base.Splitter on(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method java/lang/String.length:()I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #19                 // String The separator may not be the empty string.
      14: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_0
      18: invokevirtual #18                 // Method java/lang/String.length:()I
      21: iconst_1
      22: if_icmpne     34
      25: aload_0
      26: iconst_0
      27: invokevirtual #21                 // Method java/lang/String.charAt:(I)C
      30: invokestatic  #22                 // Method on:(C)Lcom/google/common/base/Splitter;
      33: areturn
      34: new           #14                 // class com/google/common/base/Splitter
      37: dup
      38: new           #23                 // class com/google/common/base/Splitter$2
      41: dup
      42: aload_0
      43: invokespecial #24                 // Method com/google/common/base/Splitter$2."<init>":(Ljava/lang/String;)V
      46: invokespecial #17                 // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;)V
      49: areturn

  public static com.google.common.base.Splitter on(java.util.regex.Pattern);
    Code:
       0: new           #25                 // class com/google/common/base/JdkPattern
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method com/google/common/base/JdkPattern."<init>":(Ljava/util/regex/Pattern;)V
       8: invokestatic  #27                 // Method on:(Lcom/google/common/base/CommonPattern;)Lcom/google/common/base/Splitter;
      11: areturn

  private static com.google.common.base.Splitter on(com.google.common.base.CommonPattern);
    Code:
       0: aload_0
       1: ldc           #28                 // String
       3: invokevirtual #29                 // Method com/google/common/base/CommonPattern.matcher:(Ljava/lang/CharSequence;)Lcom/google/common/base/CommonMatcher;
       6: invokevirtual #30                 // Method com/google/common/base/CommonMatcher.matches:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #31                 // String The pattern may not match the empty string: %s
      19: aload_0
      20: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      23: new           #14                 // class com/google/common/base/Splitter
      26: dup
      27: new           #33                 // class com/google/common/base/Splitter$3
      30: dup
      31: aload_0
      32: invokespecial #34                 // Method com/google/common/base/Splitter$3."<init>":(Lcom/google/common/base/CommonPattern;)V
      35: invokespecial #17                 // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;)V
      38: areturn

  public static com.google.common.base.Splitter onPattern(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method com/google/common/base/Platform.compilePattern:(Ljava/lang/String;)Lcom/google/common/base/CommonPattern;
       4: invokestatic  #27                 // Method on:(Lcom/google/common/base/CommonPattern;)Lcom/google/common/base/Splitter;
       7: areturn

  public static com.google.common.base.Splitter fixedLength(int);
    Code:
       0: iload_0
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #36                 // String The length may not be less than 1
      11: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: new           #14                 // class com/google/common/base/Splitter
      17: dup
      18: new           #37                 // class com/google/common/base/Splitter$4
      21: dup
      22: iload_0
      23: invokespecial #38                 // Method com/google/common/base/Splitter$4."<init>":(I)V
      26: invokespecial #17                 // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;)V
      29: areturn

  public com.google.common.base.Splitter omitEmptyStrings();
    Code:
       0: new           #14                 // class com/google/common/base/Splitter
       3: dup
       4: aload_0
       5: getfield      #10                 // Field strategy:Lcom/google/common/base/Splitter$Strategy;
       8: iconst_1
       9: aload_0
      10: getfield      #3                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      13: aload_0
      14: getfield      #1                  // Field limit:I
      17: invokespecial #8                  // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;ZLcom/google/common/base/CharMatcher;I)V
      20: areturn

  public com.google.common.base.Splitter limit(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #39                 // String must be greater than zero: %s
      11: iload_1
      12: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;I)V
      15: new           #14                 // class com/google/common/base/Splitter
      18: dup
      19: aload_0
      20: getfield      #10                 // Field strategy:Lcom/google/common/base/Splitter$Strategy;
      23: aload_0
      24: getfield      #2                  // Field omitEmptyStrings:Z
      27: aload_0
      28: getfield      #3                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      31: iload_1
      32: invokespecial #8                  // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;ZLcom/google/common/base/CharMatcher;I)V
      35: areturn

  public com.google.common.base.Splitter trimResults();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method com/google/common/base/CharMatcher.whitespace:()Lcom/google/common/base/CharMatcher;
       4: invokevirtual #42                 // Method trimResults:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/Splitter;
       7: areturn

  public com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #14                 // class com/google/common/base/Splitter
       8: dup
       9: aload_0
      10: getfield      #10                 // Field strategy:Lcom/google/common/base/Splitter$Strategy;
      13: aload_0
      14: getfield      #2                  // Field omitEmptyStrings:Z
      17: aload_1
      18: aload_0
      19: getfield      #1                  // Field limit:I
      22: invokespecial #8                  // Method "<init>":(Lcom/google/common/base/Splitter$Strategy;ZLcom/google/common/base/CharMatcher;I)V
      25: areturn

  public java.lang.Iterable<java.lang.String> split(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #43                 // class com/google/common/base/Splitter$5
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #44                 // Method com/google/common/base/Splitter$5."<init>":(Lcom/google/common/base/Splitter;Ljava/lang/CharSequence;)V
      14: areturn

  private java.util.Iterator<java.lang.String> splittingIterator(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #10                 // Field strategy:Lcom/google/common/base/Splitter$Strategy;
       4: aload_0
       5: aload_1
       6: invokeinterface #45,  3           // InterfaceMethod com/google/common/base/Splitter$Strategy.iterator:(Lcom/google/common/base/Splitter;Ljava/lang/CharSequence;)Ljava/util/Iterator;
      11: areturn

  public java.util.List<java.lang.String> splitToList(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokespecial #4                  // Method splittingIterator:(Ljava/lang/CharSequence;)Ljava/util/Iterator;
      10: astore_2
      11: new           #46                 // class java/util/ArrayList
      14: dup
      15: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
      18: astore_3
      19: aload_2
      20: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          47
      28: aload_3
      29: aload_2
      30: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #50                 // class java/lang/String
      38: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          19
      47: aload_3
      48: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      51: areturn

  public java.util.stream.Stream<java.lang.String> splitToStream(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
       5: invokeinterface #54,  1           // InterfaceMethod java/lang/Iterable.spliterator:()Ljava/util/Spliterator;
      10: iconst_0
      11: invokestatic  #55                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      14: areturn

  public com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method on:(Ljava/lang/String;)Lcom/google/common/base/Splitter;
       5: invokevirtual #57                 // Method withKeyValueSeparator:(Lcom/google/common/base/Splitter;)Lcom/google/common/base/Splitter$MapSplitter;
       8: areturn

  public com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #22                 // Method on:(C)Lcom/google/common/base/Splitter;
       5: invokevirtual #57                 // Method withKeyValueSeparator:(Lcom/google/common/base/Splitter;)Lcom/google/common/base/Splitter$MapSplitter;
       8: areturn

  public com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(com.google.common.base.Splitter);
    Code:
       0: new           #58                 // class com/google/common/base/Splitter$MapSplitter
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #59                 // Method com/google/common/base/Splitter$MapSplitter."<init>":(Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter$1;)V
      10: areturn

  static java.util.Iterator access$000(com.google.common.base.Splitter, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method splittingIterator:(Ljava/lang/CharSequence;)Ljava/util/Iterator;
       5: areturn

  static com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field trimmer:Lcom/google/common/base/CharMatcher;
       4: areturn

  static boolean access$300(com.google.common.base.Splitter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field omitEmptyStrings:Z
       4: ireturn

  static int access$400(com.google.common.base.Splitter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field limit:I
       4: ireturn
}
