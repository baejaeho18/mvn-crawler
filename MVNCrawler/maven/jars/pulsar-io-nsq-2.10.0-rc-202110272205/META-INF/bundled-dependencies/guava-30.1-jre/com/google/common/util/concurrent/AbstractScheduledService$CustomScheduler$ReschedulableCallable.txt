Compiled from "AbstractScheduledService.java"
class com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable extends com.google.common.util.concurrent.ForwardingFuture<java.lang.Void> implements java.util.concurrent.Callable<java.lang.Void> {
  private final java.lang.Runnable wrappedRunnable;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final com.google.common.util.concurrent.AbstractService service;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private java.util.concurrent.Future<java.lang.Void> currentFuture;

  final com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler this$0;

  com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler, com.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/util/concurrent/AbstractScheduledService$CustomScheduler;
       5: aload_0
       6: invokespecial #2                  // Method com/google/common/util/concurrent/ForwardingFuture."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: aload_0
      21: aload         4
      23: putfield      #6                  // Field wrappedRunnable:Ljava/lang/Runnable;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field service:Lcom/google/common/util/concurrent/AbstractService;
      36: return

  public java.lang.Void call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field wrappedRunnable:Ljava/lang/Runnable;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/Runnable.run:()V
       9: aload_0
      10: invokevirtual #10                 // Method reschedule:()V
      13: aconst_null
      14: areturn

  public void reschedule();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/util/concurrent/AbstractScheduledService$CustomScheduler;
       4: invokevirtual #11                 // Method com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler.getNextSchedule:()Lcom/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;
       7: astore_1
       8: goto          21
      11: astore_2
      12: aload_0
      13: getfield      #8                  // Field service:Lcom/google/common/util/concurrent/AbstractService;
      16: aload_2
      17: invokevirtual #13                 // Method com/google/common/util/concurrent/AbstractService.notifyFailed:(Ljava/lang/Throwable;)V
      20: return
      21: aconst_null
      22: astore_2
      23: aload_0
      24: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      27: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      30: aload_0
      31: getfield      #15                 // Field currentFuture:Ljava/util/concurrent/Future;
      34: ifnull        49
      37: aload_0
      38: getfield      #15                 // Field currentFuture:Ljava/util/concurrent/Future;
      41: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      46: ifne          71
      49: aload_0
      50: aload_0
      51: getfield      #7                  // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      54: aload_0
      55: aload_1
      56: invokestatic  #17                 // Method com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule.access$800:(Lcom/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;)J
      59: aload_1
      60: invokestatic  #18                 // Method com/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule.access$900:(Lcom/google/common/util/concurrent/AbstractScheduledService$CustomScheduler$Schedule;)Ljava/util/concurrent/TimeUnit;
      63: invokeinterface #19,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      68: putfield      #15                 // Field currentFuture:Ljava/util/concurrent/Future;
      71: aload_0
      72: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      75: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      78: goto          106
      81: astore_3
      82: aload_3
      83: astore_2
      84: aload_0
      85: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      88: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      91: goto          106
      94: astore        4
      96: aload_0
      97: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     100: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     103: aload         4
     105: athrow
     106: aload_2
     107: ifnull        118
     110: aload_0
     111: getfield      #8                  // Field service:Lcom/google/common/util/concurrent/AbstractService;
     114: aload_2
     115: invokevirtual #13                 // Method com/google/common/util/concurrent/AbstractService.notifyFailed:(Ljava/lang/Throwable;)V
     118: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Throwable
          30    71    81   Class java/lang/Throwable
          30    71    94   any
          81    84    94   any
          94    96    94   any

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #15                 // Field currentFuture:Ljava/util/concurrent/Future;
      11: iload_1
      12: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: istore_2
      18: aload_0
      19: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      25: iload_2
      26: ireturn
      27: astore_3
      28: aload_0
      29: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      35: aload_3
      36: athrow
    Exception table:
       from    to  target type
           7    18    27   any

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #15                 // Field currentFuture:Ljava/util/concurrent/Future;
      11: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      16: istore_1
      17: aload_0
      18: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      21: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      24: iload_1
      25: ireturn
      26: astore_2
      27: aload_0
      28: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      34: aload_2
      35: athrow
    Exception table:
       from    to  target type
           7    17    26   any

  protected java.util.concurrent.Future<java.lang.Void> delegate();
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #23                 // String Only cancel and isCancelled is supported by this future
       6: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected java.lang.Object delegate();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method delegate:()Ljava/util/concurrent/Future;
       4: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method call:()Ljava/lang/Void;
       4: areturn
}
