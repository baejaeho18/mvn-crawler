Compiled from "Striped.java"
final class com.google.common.util.concurrent.Striped$WeakSafeCondition extends com.google.common.util.concurrent.ForwardingCondition {
  private final java.util.concurrent.locks.Condition delegate;

  private final com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference;

  com.google.common.util.concurrent.Striped$WeakSafeCondition(java.util.concurrent.locks.Condition, com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/util/concurrent/ForwardingCondition."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljava/util/concurrent/locks/Condition;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field strongReference:Lcom/google/common/util/concurrent/Striped$WeakSafeReadWriteLock;
      14: return

  java.util.concurrent.locks.Condition delegate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/util/concurrent/locks/Condition;
       4: areturn
}
