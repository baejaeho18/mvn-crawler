Compiled from "LocalCache.java"
class com.google.common.cache.LocalCache$LocalLoadingCache<K, V> extends com.google.common.cache.LocalCache$LocalManualCache<K, V> implements com.google.common.cache.LoadingCache<K, V> {
  private static final long serialVersionUID;

  com.google.common.cache.LocalCache$LocalLoadingCache(com.google.common.cache.CacheBuilder<? super K, ? super V>, com.google.common.cache.CacheLoader<? super K, V>);
    Code:
       0: aload_0
       1: new           #1                  // class com/google/common/cache/LocalCache
       4: dup
       5: aload_1
       6: aload_2
       7: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #3                  // class com/google/common/cache/CacheLoader
      13: invokespecial #4                  // Method com/google/common/cache/LocalCache."<init>":(Lcom/google/common/cache/CacheBuilder;Lcom/google/common/cache/CacheLoader;)V
      16: aconst_null
      17: invokespecial #5                  // Method com/google/common/cache/LocalCache$LocalManualCache."<init>":(Lcom/google/common/cache/LocalCache;Lcom/google/common/cache/LocalCache$1;)V
      20: return

  public V get(K) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field localCache:Lcom/google/common/cache/LocalCache;
       4: aload_1
       5: invokevirtual #7                  // Method com/google/common/cache/LocalCache.getOrLoad:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public V getUnchecked(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn
       6: astore_2
       7: new           #10                 // class com/google/common/util/concurrent/UncheckedExecutionException
      10: dup
      11: aload_2
      12: invokevirtual #11                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      15: invokespecial #12                 // Method com/google/common/util/concurrent/UncheckedExecutionException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/util/concurrent/ExecutionException

  public com.google.common.collect.ImmutableMap<K, V> getAll(java.lang.Iterable<? extends K>) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field localCache:Lcom/google/common/cache/LocalCache;
       4: aload_1
       5: invokevirtual #13                 // Method com/google/common/cache/LocalCache.getAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;
       8: areturn

  public void refresh(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field localCache:Lcom/google/common/cache/LocalCache;
       4: aload_1
       5: invokevirtual #14                 // Method com/google/common/cache/LocalCache.refresh:(Ljava/lang/Object;)V
       8: return

  public final V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getUnchecked:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  java.lang.Object writeReplace();
    Code:
       0: new           #16                 // class com/google/common/cache/LocalCache$LoadingSerializationProxy
       3: dup
       4: aload_0
       5: getfield      #6                  // Field localCache:Lcom/google/common/cache/LocalCache;
       8: invokespecial #17                 // Method com/google/common/cache/LocalCache$LoadingSerializationProxy."<init>":(Lcom/google/common/cache/LocalCache;)V
      11: areturn
}
