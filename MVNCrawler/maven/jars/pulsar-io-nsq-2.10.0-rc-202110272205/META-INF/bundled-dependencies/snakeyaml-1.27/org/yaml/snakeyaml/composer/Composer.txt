Compiled from "Composer.java"
public class org.yaml.snakeyaml.composer.Composer {
  protected final org.yaml.snakeyaml.parser.Parser parser;

  private final org.yaml.snakeyaml.resolver.Resolver resolver;

  private final java.util.Map<java.lang.String, org.yaml.snakeyaml.nodes.Node> anchors;

  private final java.util.Set<org.yaml.snakeyaml.nodes.Node> recursiveNodes;

  private int nonScalarAliasesCount;

  private final org.yaml.snakeyaml.LoaderOptions loadingConfig;

  public org.yaml.snakeyaml.composer.Composer(org.yaml.snakeyaml.parser.Parser, org.yaml.snakeyaml.resolver.Resolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class org/yaml/snakeyaml/LoaderOptions
       6: dup
       7: invokespecial #2                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      10: invokespecial #3                  // Method "<init>":(Lorg/yaml/snakeyaml/parser/Parser;Lorg/yaml/snakeyaml/resolver/Resolver;Lorg/yaml/snakeyaml/LoaderOptions;)V
      13: return

  public org.yaml.snakeyaml.composer.Composer(org.yaml.snakeyaml.parser.Parser, org.yaml.snakeyaml.resolver.Resolver, org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field nonScalarAliasesCount:I
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      14: aload_0
      15: aload_2
      16: putfield      #7                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      19: aload_0
      20: new           #8                  // class java/util/HashMap
      23: dup
      24: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      27: putfield      #10                 // Field anchors:Ljava/util/Map;
      30: aload_0
      31: new           #11                 // class java/util/HashSet
      34: dup
      35: invokespecial #12                 // Method java/util/HashSet."<init>":()V
      38: putfield      #13                 // Field recursiveNodes:Ljava/util/Set;
      41: aload_0
      42: aload_3
      43: putfield      #14                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
      46: return

  public boolean checkNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: getstatic     #15                 // Field org/yaml/snakeyaml/events/Event$ID.StreamStart:Lorg/yaml/snakeyaml/events/Event$ID;
       7: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
      12: ifeq          25
      15: aload_0
      16: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      19: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
      24: pop
      25: aload_0
      26: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      29: getstatic     #18                 // Field org/yaml/snakeyaml/events/Event$ID.StreamEnd:Lorg/yaml/snakeyaml/events/Event$ID;
      32: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public org.yaml.snakeyaml.nodes.Node getNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
       9: pop
      10: aload_0
      11: aconst_null
      12: invokespecial #19                 // Method composeNode:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/nodes/Node;
      15: astore_1
      16: aload_0
      17: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      20: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
      25: pop
      26: aload_0
      27: getfield      #10                 // Field anchors:Ljava/util/Map;
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Map.clear:()V
      35: aload_0
      36: getfield      #13                 // Field recursiveNodes:Ljava/util/Set;
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Set.clear:()V
      44: aload_1
      45: areturn

  public org.yaml.snakeyaml.nodes.Node getSingleNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
       9: pop
      10: aconst_null
      11: astore_1
      12: aload_0
      13: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      16: getstatic     #18                 // Field org/yaml/snakeyaml/events/Event$ID.StreamEnd:Lorg/yaml/snakeyaml/events/Event$ID;
      19: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
      24: ifne          32
      27: aload_0
      28: invokevirtual #22                 // Method getNode:()Lorg/yaml/snakeyaml/nodes/Node;
      31: astore_1
      32: aload_0
      33: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      36: getstatic     #18                 // Field org/yaml/snakeyaml/events/Event$ID.StreamEnd:Lorg/yaml/snakeyaml/events/Event$ID;
      39: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
      44: ifne          87
      47: aload_0
      48: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      51: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
      56: astore_2
      57: aload_1
      58: ifnull        68
      61: aload_1
      62: invokevirtual #23                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      65: goto          69
      68: aconst_null
      69: astore_3
      70: new           #24                 // class org/yaml/snakeyaml/composer/ComposerException
      73: dup
      74: ldc           #25                 // String expected a single document in the stream
      76: aload_3
      77: ldc           #26                 // String but found another document
      79: aload_2
      80: invokevirtual #27                 // Method org/yaml/snakeyaml/events/Event.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      83: invokespecial #28                 // Method org/yaml/snakeyaml/composer/ComposerException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
      86: athrow
      87: aload_0
      88: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      91: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
      96: pop
      97: aload_1
      98: areturn

  private org.yaml.snakeyaml.nodes.Node composeNode(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #13                 // Field recursiveNodes:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      14: pop
      15: aload_0
      16: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      19: getstatic     #30                 // Field org/yaml/snakeyaml/events/Event$ID.Alias:Lorg/yaml/snakeyaml/events/Event$ID;
      22: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
      27: ifeq          197
      30: aload_0
      31: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
      34: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
      39: checkcast     #31                 // class org/yaml/snakeyaml/events/AliasEvent
      42: astore_3
      43: aload_3
      44: invokevirtual #32                 // Method org/yaml/snakeyaml/events/AliasEvent.getAnchor:()Ljava/lang/String;
      47: astore        4
      49: aload_0
      50: getfield      #10                 // Field anchors:Ljava/util/Map;
      53: aload         4
      55: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      60: ifne          97
      63: new           #24                 // class org/yaml/snakeyaml/composer/ComposerException
      66: dup
      67: aconst_null
      68: aconst_null
      69: new           #34                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #36                 // String found undefined alias
      78: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload         4
      83: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_3
      90: invokevirtual #39                 // Method org/yaml/snakeyaml/events/AliasEvent.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      93: invokespecial #28                 // Method org/yaml/snakeyaml/composer/ComposerException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
      96: athrow
      97: aload_0
      98: getfield      #10                 // Field anchors:Ljava/util/Map;
     101: aload         4
     103: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     108: checkcast     #41                 // class org/yaml/snakeyaml/nodes/Node
     111: astore_2
     112: aload_2
     113: instanceof    #42                 // class org/yaml/snakeyaml/nodes/ScalarNode
     116: ifne          176
     119: aload_0
     120: dup
     121: getfield      #5                  // Field nonScalarAliasesCount:I
     124: iconst_1
     125: iadd
     126: putfield      #5                  // Field nonScalarAliasesCount:I
     129: aload_0
     130: getfield      #5                  // Field nonScalarAliasesCount:I
     133: aload_0
     134: getfield      #14                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     137: invokevirtual #43                 // Method org/yaml/snakeyaml/LoaderOptions.getMaxAliasesForCollections:()I
     140: if_icmple     176
     143: new           #44                 // class org/yaml/snakeyaml/error/YAMLException
     146: dup
     147: new           #34                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #45                 // String Number of aliases for non-scalar nodes exceeds the specified max=
     156: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_0
     160: getfield      #14                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     163: invokevirtual #43                 // Method org/yaml/snakeyaml/LoaderOptions.getMaxAliasesForCollections:()I
     166: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     169: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokespecial #47                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: aload_0
     177: getfield      #13                 // Field recursiveNodes:Ljava/util/Set;
     180: aload_2
     181: invokeinterface #48,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     186: ifeq          194
     189: aload_2
     190: iconst_1
     191: invokevirtual #49                 // Method org/yaml/snakeyaml/nodes/Node.setTwoStepsConstruction:(Z)V
     194: goto          273
     197: aload_0
     198: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     201: invokeinterface #50,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.peekEvent:()Lorg/yaml/snakeyaml/events/Event;
     206: checkcast     #51                 // class org/yaml/snakeyaml/events/NodeEvent
     209: astore_3
     210: aload_3
     211: invokevirtual #52                 // Method org/yaml/snakeyaml/events/NodeEvent.getAnchor:()Ljava/lang/String;
     214: astore        4
     216: aload_0
     217: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     220: getstatic     #53                 // Field org/yaml/snakeyaml/events/Event$ID.Scalar:Lorg/yaml/snakeyaml/events/Event$ID;
     223: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
     228: ifeq          241
     231: aload_0
     232: aload         4
     234: invokevirtual #54                 // Method composeScalarNode:(Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/Node;
     237: astore_2
     238: goto          273
     241: aload_0
     242: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     245: getstatic     #55                 // Field org/yaml/snakeyaml/events/Event$ID.SequenceStart:Lorg/yaml/snakeyaml/events/Event$ID;
     248: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
     253: ifeq          266
     256: aload_0
     257: aload         4
     259: invokevirtual #56                 // Method composeSequenceNode:(Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/Node;
     262: astore_2
     263: goto          273
     266: aload_0
     267: aload         4
     269: invokevirtual #57                 // Method composeMappingNode:(Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/Node;
     272: astore_2
     273: aload_0
     274: getfield      #13                 // Field recursiveNodes:Ljava/util/Set;
     277: aload_1
     278: invokeinterface #48,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     283: pop
     284: aload_2
     285: areturn

  protected org.yaml.snakeyaml.nodes.Node composeScalarNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
       9: checkcast     #58                 // class org/yaml/snakeyaml/events/ScalarEvent
      12: astore_2
      13: aload_2
      14: invokevirtual #59                 // Method org/yaml/snakeyaml/events/ScalarEvent.getTag:()Ljava/lang/String;
      17: astore_3
      18: iconst_0
      19: istore        4
      21: aload_3
      22: ifnull        34
      25: aload_3
      26: ldc           #60                 // String !
      28: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          63
      34: aload_0
      35: getfield      #7                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      38: getstatic     #62                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
      41: aload_2
      42: invokevirtual #63                 // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      45: aload_2
      46: invokevirtual #64                 // Method org/yaml/snakeyaml/events/ScalarEvent.getImplicit:()Lorg/yaml/snakeyaml/events/ImplicitTuple;
      49: invokevirtual #65                 // Method org/yaml/snakeyaml/events/ImplicitTuple.canOmitTagInPlainScalar:()Z
      52: invokevirtual #66                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
      55: astore        5
      57: iconst_1
      58: istore        4
      60: goto          73
      63: new           #67                 // class org/yaml/snakeyaml/nodes/Tag
      66: dup
      67: aload_3
      68: invokespecial #68                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
      71: astore        5
      73: new           #42                 // class org/yaml/snakeyaml/nodes/ScalarNode
      76: dup
      77: aload         5
      79: iload         4
      81: aload_2
      82: invokevirtual #63                 // Method org/yaml/snakeyaml/events/ScalarEvent.getValue:()Ljava/lang/String;
      85: aload_2
      86: invokevirtual #69                 // Method org/yaml/snakeyaml/events/ScalarEvent.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      89: aload_2
      90: invokevirtual #70                 // Method org/yaml/snakeyaml/events/ScalarEvent.getEndMark:()Lorg/yaml/snakeyaml/error/Mark;
      93: aload_2
      94: invokevirtual #71                 // Method org/yaml/snakeyaml/events/ScalarEvent.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
      97: invokespecial #72                 // Method org/yaml/snakeyaml/nodes/ScalarNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;ZLjava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)V
     100: astore        6
     102: aload_1
     103: ifnull        125
     106: aload         6
     108: aload_1
     109: invokevirtual #73                 // Method org/yaml/snakeyaml/nodes/Node.setAnchor:(Ljava/lang/String;)V
     112: aload_0
     113: getfield      #10                 // Field anchors:Ljava/util/Map;
     116: aload_1
     117: aload         6
     119: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: aload         6
     127: areturn

  protected org.yaml.snakeyaml.nodes.Node composeSequenceNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
       9: checkcast     #75                 // class org/yaml/snakeyaml/events/SequenceStartEvent
      12: astore_2
      13: aload_2
      14: invokevirtual #76                 // Method org/yaml/snakeyaml/events/SequenceStartEvent.getTag:()Ljava/lang/String;
      17: astore_3
      18: iconst_0
      19: istore        5
      21: aload_3
      22: ifnull        34
      25: aload_3
      26: ldc           #60                 // String !
      28: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          57
      34: aload_0
      35: getfield      #7                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      38: getstatic     #77                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
      41: aconst_null
      42: aload_2
      43: invokevirtual #78                 // Method org/yaml/snakeyaml/events/SequenceStartEvent.getImplicit:()Z
      46: invokevirtual #66                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
      49: astore        4
      51: iconst_1
      52: istore        5
      54: goto          67
      57: new           #67                 // class org/yaml/snakeyaml/nodes/Tag
      60: dup
      61: aload_3
      62: invokespecial #68                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
      65: astore        4
      67: new           #79                 // class java/util/ArrayList
      70: dup
      71: invokespecial #80                 // Method java/util/ArrayList."<init>":()V
      74: astore        6
      76: new           #81                 // class org/yaml/snakeyaml/nodes/SequenceNode
      79: dup
      80: aload         4
      82: iload         5
      84: aload         6
      86: aload_2
      87: invokevirtual #82                 // Method org/yaml/snakeyaml/events/SequenceStartEvent.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      90: aconst_null
      91: aload_2
      92: invokevirtual #83                 // Method org/yaml/snakeyaml/events/SequenceStartEvent.getFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      95: invokespecial #84                 // Method org/yaml/snakeyaml/nodes/SequenceNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;ZLjava/util/List;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      98: astore        7
     100: aload_1
     101: ifnull        123
     104: aload         7
     106: aload_1
     107: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setAnchor:(Ljava/lang/String;)V
     110: aload_0
     111: getfield      #10                 // Field anchors:Ljava/util/Map;
     114: aload_1
     115: aload         7
     117: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: aload_0
     124: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     127: getstatic     #86                 // Field org/yaml/snakeyaml/events/Event$ID.SequenceEnd:Lorg/yaml/snakeyaml/events/Event$ID;
     130: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
     135: ifne          153
     138: aload         6
     140: aload_0
     141: aload         7
     143: invokespecial #19                 // Method composeNode:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/nodes/Node;
     146: invokevirtual #87                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     149: pop
     150: goto          123
     153: aload_0
     154: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     157: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
     162: astore        8
     164: aload         7
     166: aload         8
     168: invokevirtual #88                 // Method org/yaml/snakeyaml/events/Event.getEndMark:()Lorg/yaml/snakeyaml/error/Mark;
     171: invokevirtual #89                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setEndMark:(Lorg/yaml/snakeyaml/error/Mark;)V
     174: aload         7
     176: areturn

  protected org.yaml.snakeyaml.nodes.Node composeMappingNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
       4: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
       9: checkcast     #90                 // class org/yaml/snakeyaml/events/MappingStartEvent
      12: astore_2
      13: aload_2
      14: invokevirtual #91                 // Method org/yaml/snakeyaml/events/MappingStartEvent.getTag:()Ljava/lang/String;
      17: astore_3
      18: iconst_0
      19: istore        5
      21: aload_3
      22: ifnull        34
      25: aload_3
      26: ldc           #60                 // String !
      28: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          57
      34: aload_0
      35: getfield      #7                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      38: getstatic     #92                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
      41: aconst_null
      42: aload_2
      43: invokevirtual #93                 // Method org/yaml/snakeyaml/events/MappingStartEvent.getImplicit:()Z
      46: invokevirtual #66                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
      49: astore        4
      51: iconst_1
      52: istore        5
      54: goto          67
      57: new           #67                 // class org/yaml/snakeyaml/nodes/Tag
      60: dup
      61: aload_3
      62: invokespecial #68                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
      65: astore        4
      67: new           #79                 // class java/util/ArrayList
      70: dup
      71: invokespecial #80                 // Method java/util/ArrayList."<init>":()V
      74: astore        6
      76: new           #94                 // class org/yaml/snakeyaml/nodes/MappingNode
      79: dup
      80: aload         4
      82: iload         5
      84: aload         6
      86: aload_2
      87: invokevirtual #95                 // Method org/yaml/snakeyaml/events/MappingStartEvent.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      90: aconst_null
      91: aload_2
      92: invokevirtual #96                 // Method org/yaml/snakeyaml/events/MappingStartEvent.getFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      95: invokespecial #97                 // Method org/yaml/snakeyaml/nodes/MappingNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;ZLjava/util/List;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      98: astore        7
     100: aload_1
     101: ifnull        123
     104: aload         7
     106: aload_1
     107: invokevirtual #98                 // Method org/yaml/snakeyaml/nodes/MappingNode.setAnchor:(Ljava/lang/String;)V
     110: aload_0
     111: getfield      #10                 // Field anchors:Ljava/util/Map;
     114: aload_1
     115: aload         7
     117: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: aload_0
     124: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     127: getstatic     #99                 // Field org/yaml/snakeyaml/events/Event$ID.MappingEnd:Lorg/yaml/snakeyaml/events/Event$ID;
     130: invokeinterface #16,  2           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.checkEvent:(Lorg/yaml/snakeyaml/events/Event$ID;)Z
     135: ifne          149
     138: aload_0
     139: aload         6
     141: aload         7
     143: invokevirtual #100                // Method composeMappingChildren:(Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;)V
     146: goto          123
     149: aload_0
     150: getfield      #6                  // Field parser:Lorg/yaml/snakeyaml/parser/Parser;
     153: invokeinterface #17,  1           // InterfaceMethod org/yaml/snakeyaml/parser/Parser.getEvent:()Lorg/yaml/snakeyaml/events/Event;
     158: astore        8
     160: aload         7
     162: aload         8
     164: invokevirtual #88                 // Method org/yaml/snakeyaml/events/Event.getEndMark:()Lorg/yaml/snakeyaml/error/Mark;
     167: invokevirtual #101                // Method org/yaml/snakeyaml/nodes/MappingNode.setEndMark:(Lorg/yaml/snakeyaml/error/Mark;)V
     170: aload         7
     172: areturn

  protected void composeMappingChildren(java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>, org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #102                // Method composeKeyNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;)Lorg/yaml/snakeyaml/nodes/Node;
       5: astore_3
       6: aload_3
       7: invokevirtual #103                // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      10: getstatic     #104                // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      13: invokevirtual #105                // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      16: ifeq          24
      19: aload_2
      20: iconst_1
      21: invokevirtual #106                // Method org/yaml/snakeyaml/nodes/MappingNode.setMerged:(Z)V
      24: aload_0
      25: aload_2
      26: invokevirtual #107                // Method composeValueNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;)Lorg/yaml/snakeyaml/nodes/Node;
      29: astore        4
      31: aload_1
      32: new           #108                // class org/yaml/snakeyaml/nodes/NodeTuple
      35: dup
      36: aload_3
      37: aload         4
      39: invokespecial #109                // Method org/yaml/snakeyaml/nodes/NodeTuple."<init>":(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
      42: invokeinterface #110,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: return

  protected org.yaml.snakeyaml.nodes.Node composeKeyNode(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method composeNode:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/nodes/Node;
       5: areturn

  protected org.yaml.snakeyaml.nodes.Node composeValueNode(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method composeNode:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/nodes/Node;
       5: areturn
}
