Compiled from "BaseConstructor.java"
public abstract class org.yaml.snakeyaml.constructor.BaseConstructor {
  protected final java.util.Map<org.yaml.snakeyaml.nodes.NodeId, org.yaml.snakeyaml.constructor.Construct> yamlClassConstructors;

  protected final java.util.Map<org.yaml.snakeyaml.nodes.Tag, org.yaml.snakeyaml.constructor.Construct> yamlConstructors;

  protected final java.util.Map<java.lang.String, org.yaml.snakeyaml.constructor.Construct> yamlMultiConstructors;

  protected org.yaml.snakeyaml.composer.Composer composer;

  final java.util.Map<org.yaml.snakeyaml.nodes.Node, java.lang.Object> constructedObjects;

  private final java.util.Set<org.yaml.snakeyaml.nodes.Node> recursiveObjects;

  private final java.util.ArrayList<org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.util.Map<java.lang.Object, java.lang.Object>, org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.lang.Object, java.lang.Object>>> maps2fill;

  private final java.util.ArrayList<org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple<java.util.Set<java.lang.Object>, java.lang.Object>> sets2fill;

  protected org.yaml.snakeyaml.nodes.Tag rootTag;

  private org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils;

  private boolean explicitPropertyUtils;

  private boolean allowDuplicateKeys;

  private boolean wrappedToRootException;

  protected final java.util.Map<java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.TypeDescription> typeDefinitions;

  protected final java.util.Map<org.yaml.snakeyaml.nodes.Tag, java.lang.Class<? extends java.lang.Object>> typeTags;

  protected org.yaml.snakeyaml.LoaderOptions loadingConfig;

  public org.yaml.snakeyaml.constructor.BaseConstructor();
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/LoaderOptions
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
      11: return

  public org.yaml.snakeyaml.constructor.BaseConstructor(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/EnumMap
       8: dup
       9: ldc_w         #6                  // class org/yaml/snakeyaml/nodes/NodeId
      12: invokespecial #7                  // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      15: putfield      #8                  // Field yamlClassConstructors:Ljava/util/Map;
      18: aload_0
      19: new           #9                  // class java/util/HashMap
      22: dup
      23: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      26: putfield      #11                 // Field yamlConstructors:Ljava/util/Map;
      29: aload_0
      30: new           #9                  // class java/util/HashMap
      33: dup
      34: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      37: putfield      #12                 // Field yamlMultiConstructors:Ljava/util/Map;
      40: aload_0
      41: iconst_1
      42: putfield      #13                 // Field allowDuplicateKeys:Z
      45: aload_0
      46: iconst_0
      47: putfield      #14                 // Field wrappedToRootException:Z
      50: aload_0
      51: new           #9                  // class java/util/HashMap
      54: dup
      55: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      58: putfield      #15                 // Field constructedObjects:Ljava/util/Map;
      61: aload_0
      62: new           #16                 // class java/util/HashSet
      65: dup
      66: invokespecial #17                 // Method java/util/HashSet."<init>":()V
      69: putfield      #18                 // Field recursiveObjects:Ljava/util/Set;
      72: aload_0
      73: new           #19                 // class java/util/ArrayList
      76: dup
      77: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      80: putfield      #21                 // Field maps2fill:Ljava/util/ArrayList;
      83: aload_0
      84: new           #19                 // class java/util/ArrayList
      87: dup
      88: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      91: putfield      #22                 // Field sets2fill:Ljava/util/ArrayList;
      94: aload_0
      95: new           #9                  // class java/util/HashMap
      98: dup
      99: invokespecial #10                 // Method java/util/HashMap."<init>":()V
     102: putfield      #23                 // Field typeDefinitions:Ljava/util/Map;
     105: aload_0
     106: new           #9                  // class java/util/HashMap
     109: dup
     110: invokespecial #10                 // Method java/util/HashMap."<init>":()V
     113: putfield      #24                 // Field typeTags:Ljava/util/Map;
     116: aload_0
     117: aconst_null
     118: putfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
     121: aload_0
     122: iconst_0
     123: putfield      #26                 // Field explicitPropertyUtils:Z
     126: aload_0
     127: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
     130: ldc_w         #27                 // class java/util/SortedMap
     133: new           #28                 // class org/yaml/snakeyaml/TypeDescription
     136: dup
     137: ldc_w         #27                 // class java/util/SortedMap
     140: getstatic     #29                 // Field org/yaml/snakeyaml/nodes/Tag.OMAP:Lorg/yaml/snakeyaml/nodes/Tag;
     143: ldc_w         #30                 // class java/util/TreeMap
     146: invokespecial #31                 // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
     149: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: aload_0
     156: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
     159: ldc_w         #33                 // class java/util/SortedSet
     162: new           #28                 // class org/yaml/snakeyaml/TypeDescription
     165: dup
     166: ldc_w         #33                 // class java/util/SortedSet
     169: getstatic     #34                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     172: ldc_w         #35                 // class java/util/TreeSet
     175: invokespecial #31                 // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/Class;)V
     178: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: pop
     184: aload_0
     185: aload_1
     186: putfield      #36                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     189: return

  public void setComposer(org.yaml.snakeyaml.composer.Composer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       5: return

  public boolean checkData();
    Code:
       0: aload_0
       1: getfield      #37                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #38                 // Method org/yaml/snakeyaml/composer/Composer.checkNode:()Z
       7: ireturn

  public java.lang.Object getData() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #38                 // Method org/yaml/snakeyaml/composer/Composer.checkNode:()Z
       7: ifne          20
      10: new           #39                 // class java/util/NoSuchElementException
      13: dup
      14: ldc           #40                 // String No document is available.
      16: invokespecial #41                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #37                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
      24: invokevirtual #42                 // Method org/yaml/snakeyaml/composer/Composer.getNode:()Lorg/yaml/snakeyaml/nodes/Node;
      27: astore_1
      28: aload_0
      29: getfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      32: ifnull        43
      35: aload_1
      36: aload_0
      37: getfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      40: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      43: aload_0
      44: aload_1
      45: invokevirtual #44                 // Method constructDocument:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      48: areturn

  public java.lang.Object getSingleData(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #37                 // Field composer:Lorg/yaml/snakeyaml/composer/Composer;
       4: invokevirtual #45                 // Method org/yaml/snakeyaml/composer/Composer.getSingleNode:()Lorg/yaml/snakeyaml/nodes/Node;
       7: astore_2
       8: aload_2
       9: ifnull        68
      12: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      15: aload_2
      16: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      19: invokevirtual #48                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      22: ifne          68
      25: ldc_w         #49                 // class java/lang/Object
      28: aload_1
      29: if_acmpeq     47
      32: aload_2
      33: new           #50                 // class org/yaml/snakeyaml/nodes/Tag
      36: dup
      37: aload_1
      38: invokespecial #51                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      41: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      44: goto          62
      47: aload_0
      48: getfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      51: ifnull        62
      54: aload_2
      55: aload_0
      56: getfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      59: invokevirtual #43                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      62: aload_0
      63: aload_2
      64: invokevirtual #44                 // Method constructDocument:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      67: areturn
      68: aload_0
      69: getfield      #11                 // Field yamlConstructors:Ljava/util/Map;
      72: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      75: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      80: checkcast     #53                 // class org/yaml/snakeyaml/constructor/Construct
      83: astore_3
      84: aload_3
      85: aload_2
      86: invokeinterface #54,  2           // InterfaceMethod org/yaml/snakeyaml/constructor/Construct.construct:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      91: areturn

  protected final java.lang.Object constructDocument(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: invokespecial #56                 // Method fillRecursive:()V
      10: aload_2
      11: astore_3
      12: aload_0
      13: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      16: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      21: aload_0
      22: getfield      #18                 // Field recursiveObjects:Ljava/util/Set;
      25: invokeinterface #58,  1           // InterfaceMethod java/util/Set.clear:()V
      30: aload_3
      31: areturn
      32: astore_2
      33: aload_0
      34: getfield      #14                 // Field wrappedToRootException:Z
      37: ifeq          56
      40: aload_2
      41: instanceof    #60                 // class org/yaml/snakeyaml/error/YAMLException
      44: ifne          56
      47: new           #60                 // class org/yaml/snakeyaml/error/YAMLException
      50: dup
      51: aload_2
      52: invokespecial #61                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      55: athrow
      56: aload_2
      57: athrow
      58: astore        4
      60: aload_0
      61: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      64: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      69: aload_0
      70: getfield      #18                 // Field recursiveObjects:Ljava/util/Set;
      73: invokeinterface #58,  1           // InterfaceMethod java/util/Set.clear:()V
      78: aload         4
      80: athrow
    Exception table:
       from    to  target type
           0    12    32   Class java/lang/RuntimeException
           0    12    58   any
          32    60    58   any

  private void fillRecursive();
    Code:
       0: aload_0
       1: getfield      #21                 // Field maps2fill:Ljava/util/ArrayList;
       4: invokevirtual #62                 // Method java/util/ArrayList.isEmpty:()Z
       7: ifne          76
      10: aload_0
      11: getfield      #21                 // Field maps2fill:Ljava/util/ArrayList;
      14: invokevirtual #63                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          69
      27: aload_1
      28: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
      36: astore_2
      37: aload_2
      38: invokevirtual #67                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
      41: checkcast     #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
      44: astore_3
      45: aload_2
      46: invokevirtual #68                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
      49: checkcast     #69                 // class java/util/Map
      52: aload_3
      53: invokevirtual #68                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
      56: aload_3
      57: invokevirtual #67                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
      60: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          18
      69: aload_0
      70: getfield      #21                 // Field maps2fill:Ljava/util/ArrayList;
      73: invokevirtual #70                 // Method java/util/ArrayList.clear:()V
      76: aload_0
      77: getfield      #22                 // Field sets2fill:Ljava/util/ArrayList;
      80: invokevirtual #62                 // Method java/util/ArrayList.isEmpty:()Z
      83: ifne          140
      86: aload_0
      87: getfield      #22                 // Field sets2fill:Ljava/util/ArrayList;
      90: invokevirtual #63                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      93: astore_1
      94: aload_1
      95: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          133
     103: aload_1
     104: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
     112: astore_2
     113: aload_2
     114: invokevirtual #68                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._1:()Ljava/lang/Object;
     117: checkcast     #71                 // class java/util/Set
     120: aload_2
     121: invokevirtual #67                 // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple._2:()Ljava/lang/Object;
     124: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     129: pop
     130: goto          94
     133: aload_0
     134: getfield      #22                 // Field sets2fill:Ljava/util/ArrayList;
     137: invokevirtual #70                 // Method java/util/ArrayList.clear:()V
     140: return

  protected java.lang.Object constructObject(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #73,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_0
      14: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn
      24: aload_0
      25: aload_1
      26: invokevirtual #74                 // Method constructObjectNoCheck:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      29: areturn

  protected java.lang.Object constructObjectNoCheck(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #18                 // Field recursiveObjects:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          29
      13: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
      16: dup
      17: aconst_null
      18: aconst_null
      19: ldc           #77                 // String found unconstructable recursive node
      21: aload_1
      22: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      25: invokespecial #79                 // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
      28: athrow
      29: aload_0
      30: getfield      #18                 // Field recursiveObjects:Ljava/util/Set;
      33: aload_1
      34: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #80                 // Method getConstructor:(Lorg/yaml/snakeyaml/nodes/Node;)Lorg/yaml/snakeyaml/constructor/Construct;
      45: astore_2
      46: aload_0
      47: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      50: aload_1
      51: invokeinterface #73,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      56: ifeq          72
      59: aload_0
      60: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      63: aload_1
      64: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: goto          79
      72: aload_2
      73: aload_1
      74: invokeinterface #54,  2           // InterfaceMethod org/yaml/snakeyaml/constructor/Construct.construct:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      79: astore_3
      80: aload_0
      81: aload_1
      82: aload_3
      83: invokevirtual #81                 // Method finalizeConstruction:(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload_0
      88: getfield      #15                 // Field constructedObjects:Ljava/util/Map;
      91: aload_1
      92: aload_3
      93: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: getfield      #18                 // Field recursiveObjects:Ljava/util/Set;
     103: aload_1
     104: invokeinterface #82,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     109: pop
     110: aload_1
     111: invokevirtual #83                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     114: ifeq          125
     117: aload_2
     118: aload_1
     119: aload_3
     120: invokeinterface #84,  3           // InterfaceMethod org/yaml/snakeyaml/constructor/Construct.construct2ndStep:(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
     125: aload_3
     126: areturn

  protected org.yaml.snakeyaml.constructor.Construct getConstructor(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Node.useClassConstructor:()Z
       4: ifeq          24
       7: aload_0
       8: getfield      #8                  // Field yamlClassConstructors:Ljava/util/Map;
      11: aload_1
      12: invokevirtual #86                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      15: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #53                 // class org/yaml/snakeyaml/constructor/Construct
      23: areturn
      24: aload_0
      25: getfield      #11                 // Field yamlConstructors:Ljava/util/Map;
      28: aload_1
      29: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      32: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #53                 // class org/yaml/snakeyaml/constructor/Construct
      40: astore_2
      41: aload_2
      42: ifnonnull     124
      45: aload_0
      46: getfield      #12                 // Field yamlMultiConstructors:Ljava/util/Map;
      49: invokeinterface #87,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      54: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_3
      60: aload_3
      61: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          110
      69: aload_3
      70: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #89                 // class java/lang/String
      78: astore        4
      80: aload_1
      81: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      84: aload         4
      86: invokevirtual #90                 // Method org/yaml/snakeyaml/nodes/Tag.startsWith:(Ljava/lang/String;)Z
      89: ifeq          107
      92: aload_0
      93: getfield      #12                 // Field yamlMultiConstructors:Ljava/util/Map;
      96: aload         4
      98: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #53                 // class org/yaml/snakeyaml/constructor/Construct
     106: areturn
     107: goto          60
     110: aload_0
     111: getfield      #11                 // Field yamlConstructors:Ljava/util/Map;
     114: aconst_null
     115: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #53                 // class org/yaml/snakeyaml/constructor/Construct
     123: areturn
     124: aload_2
     125: areturn

  protected java.lang.String constructScalar(org.yaml.snakeyaml.nodes.ScalarNode);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
       4: areturn

  protected java.util.List<java.lang.Object> createDefaultList(int);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: iload_1
       5: invokespecial #92                 // Method java/util/ArrayList."<init>":(I)V
       8: areturn

  protected java.util.Set<java.lang.Object> createDefaultSet(int);
    Code:
       0: new           #93                 // class java/util/LinkedHashSet
       3: dup
       4: iload_1
       5: invokespecial #94                 // Method java/util/LinkedHashSet."<init>":(I)V
       8: areturn

  protected java.util.Map<java.lang.Object, java.lang.Object> createDefaultMap(int);
    Code:
       0: new           #95                 // class java/util/LinkedHashMap
       3: dup
       4: iload_1
       5: invokespecial #96                 // Method java/util/LinkedHashMap."<init>":(I)V
       8: areturn

  protected java.lang.Object createArray(java.lang.Class<?>, int);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       4: iload_2
       5: invokestatic  #98                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
       8: areturn

  protected java.lang.Object finalizeConstruction(org.yaml.snakeyaml.nodes.Node, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #99                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
       9: aload_3
      10: invokeinterface #73,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          36
      18: aload_0
      19: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
      22: aload_3
      23: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #28                 // class org/yaml/snakeyaml/TypeDescription
      31: aload_2
      32: invokevirtual #100                // Method org/yaml/snakeyaml/TypeDescription.finalizeConstruction:(Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn
      36: aload_2
      37: areturn

  protected java.lang.Object newInstance(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: ldc_w         #49                 // class java/lang/Object
       4: aload_1
       5: invokevirtual #101                // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       8: areturn
       9: astore_2
      10: new           #60                 // class org/yaml/snakeyaml/error/YAMLException
      13: dup
      14: aload_2
      15: invokespecial #61                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/InstantiationException

  protected final java.lang.Object newInstance(java.lang.Class<?>, org.yaml.snakeyaml.nodes.Node) throws java.lang.InstantiationException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #103                // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;Z)Ljava/lang/Object;
       7: areturn

  protected java.lang.Object newInstance(java.lang.Class<?>, org.yaml.snakeyaml.nodes.Node, boolean) throws java.lang.InstantiationException;
    Code:
       0: aload_2
       1: invokevirtual #99                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
       4: astore        4
       6: aload_0
       7: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
      10: aload         4
      12: invokeinterface #73,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          52
      20: aload_0
      21: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
      24: aload         4
      26: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #28                 // class org/yaml/snakeyaml/TypeDescription
      34: astore        5
      36: aload         5
      38: aload_2
      39: invokevirtual #104                // Method org/yaml/snakeyaml/TypeDescription.newInstance:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      42: astore        6
      44: aload         6
      46: ifnull        52
      49: aload         6
      51: areturn
      52: iload_3
      53: ifeq          148
      56: aload_1
      57: aload         4
      59: invokevirtual #105                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      62: ifeq          148
      65: aload         4
      67: invokevirtual #106                // Method java/lang/Class.getModifiers:()I
      70: invokestatic  #107                // Method java/lang/reflect/Modifier.isAbstract:(I)Z
      73: ifne          148
      76: aload         4
      78: iconst_0
      79: anewarray     #108                // class java/lang/Class
      82: invokevirtual #109                // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      85: astore        5
      87: aload         5
      89: iconst_1
      90: invokevirtual #110                // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      93: aload         5
      95: iconst_0
      96: anewarray     #49                 // class java/lang/Object
      99: invokevirtual #111                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     102: areturn
     103: astore        5
     105: new           #102                // class java/lang/InstantiationException
     108: dup
     109: new           #113                // class java/lang/StringBuilder
     112: dup
     113: invokespecial #114                // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #115                // String NoSuchMethodException:
     118: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         5
     123: invokevirtual #117                // Method java/lang/NoSuchMethodException.getLocalizedMessage:()Ljava/lang/String;
     126: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #119                // Method java/lang/InstantiationException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: astore        5
     138: new           #60                 // class org/yaml/snakeyaml/error/YAMLException
     141: dup
     142: aload         5
     144: invokespecial #61                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     147: athrow
     148: new           #102                // class java/lang/InstantiationException
     151: dup
     152: invokespecial #121                // Method java/lang/InstantiationException."<init>":()V
     155: athrow
    Exception table:
       from    to  target type
          76   102   103   Class java/lang/NoSuchMethodException
          76   102   136   Class java/lang/Exception

  protected java.util.Set<java.lang.Object> newSet(org.yaml.snakeyaml.nodes.CollectionNode<?>);
    Code:
       0: aload_0
       1: ldc_w         #71                 // class java/util/Set
       4: aload_1
       5: invokevirtual #101                // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       8: checkcast     #71                 // class java/util/Set
      11: areturn
      12: astore_2
      13: aload_0
      14: aload_1
      15: invokevirtual #122                // Method org/yaml/snakeyaml/nodes/CollectionNode.getValue:()Ljava/util/List;
      18: invokeinterface #123,  1          // InterfaceMethod java/util/List.size:()I
      23: invokevirtual #124                // Method createDefaultSet:(I)Ljava/util/Set;
      26: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/InstantiationException

  protected java.util.List<java.lang.Object> newList(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: ldc_w         #125                // class java/util/List
       4: aload_1
       5: invokevirtual #101                // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       8: checkcast     #125                // class java/util/List
      11: areturn
      12: astore_2
      13: aload_0
      14: aload_1
      15: invokevirtual #126                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      18: invokeinterface #123,  1          // InterfaceMethod java/util/List.size:()I
      23: invokevirtual #127                // Method createDefaultList:(I)Ljava/util/List;
      26: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/InstantiationException

  protected java.util.Map<java.lang.Object, java.lang.Object> newMap(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: ldc_w         #69                 // class java/util/Map
       4: aload_1
       5: invokevirtual #101                // Method newInstance:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
       8: checkcast     #69                 // class java/util/Map
      11: areturn
      12: astore_2
      13: aload_0
      14: aload_1
      15: invokevirtual #128                // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
      18: invokeinterface #123,  1          // InterfaceMethod java/util/List.size:()I
      23: invokevirtual #129                // Method createDefaultMap:(I)Ljava/util/Map;
      26: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/InstantiationException

  protected java.util.List<? extends java.lang.Object> constructSequence(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #130                // Method newList:(Lorg/yaml/snakeyaml/nodes/SequenceNode;)Ljava/util/List;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #131                // Method constructSequenceStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/util/Collection;)V
      12: aload_2
      13: areturn

  protected java.util.Set<? extends java.lang.Object> constructSet(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method newSet:(Lorg/yaml/snakeyaml/nodes/CollectionNode;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #131                // Method constructSequenceStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/util/Collection;)V
      12: aload_2
      13: areturn

  protected java.lang.Object constructArray(org.yaml.snakeyaml.nodes.SequenceNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #133                // Method org/yaml/snakeyaml/nodes/SequenceNode.getType:()Ljava/lang/Class;
       7: aload_1
       8: invokevirtual #126                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      11: invokeinterface #123,  1          // InterfaceMethod java/util/List.size:()I
      16: invokevirtual #134                // Method createArray:(Ljava/lang/Class;I)Ljava/lang/Object;
      19: invokevirtual #135                // Method constructArrayStep2:(Lorg/yaml/snakeyaml/nodes/SequenceNode;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  protected void constructSequenceStep2(org.yaml.snakeyaml.nodes.SequenceNode, java.util.Collection<java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #126                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
       4: invokeinterface #136,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_3
      20: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #137                // class org/yaml/snakeyaml/nodes/Node
      28: astore        4
      30: aload_2
      31: aload_0
      32: aload         4
      34: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      37: invokeinterface #138,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      42: pop
      43: goto          10
      46: return

  protected java.lang.Object constructArrayStep2(org.yaml.snakeyaml.nodes.SequenceNode, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #133                // Method org/yaml/snakeyaml/nodes/SequenceNode.getType:()Ljava/lang/Class;
       4: invokevirtual #97                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       7: astore_3
       8: iconst_0
       9: istore        4
      11: aload_1
      12: invokevirtual #126                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
      15: invokeinterface #136,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        5
      22: aload         5
      24: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          349
      32: aload         5
      34: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #137                // class org/yaml/snakeyaml/nodes/Node
      42: astore        6
      44: aload         6
      46: invokevirtual #99                 // Method org/yaml/snakeyaml/nodes/Node.getType:()Ljava/lang/Class;
      49: ldc_w         #49                 // class java/lang/Object
      52: if_acmpne     61
      55: aload         6
      57: aload_3
      58: invokevirtual #139                // Method org/yaml/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      61: aload_0
      62: aload         6
      64: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      67: astore        7
      69: aload_3
      70: invokevirtual #140                // Method java/lang/Class.isPrimitive:()Z
      73: ifeq          335
      76: aload         7
      78: ifnonnull     109
      81: new           #141                // class java/lang/NullPointerException
      84: dup
      85: new           #113                // class java/lang/StringBuilder
      88: dup
      89: invokespecial #114                // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #142                // String Unable to construct element value for
      94: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload         6
      99: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #144                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: getstatic     #145                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     112: aload_3
     113: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     116: ifeq          136
     119: aload_2
     120: iload         4
     122: aload         7
     124: checkcast     #147                // class java/lang/Number
     127: invokevirtual #148                // Method java/lang/Number.byteValue:()B
     130: invokestatic  #149                // Method java/lang/reflect/Array.setByte:(Ljava/lang/Object;IB)V
     133: goto          343
     136: getstatic     #150                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     139: aload_3
     140: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     143: ifeq          163
     146: aload_2
     147: iload         4
     149: aload         7
     151: checkcast     #147                // class java/lang/Number
     154: invokevirtual #151                // Method java/lang/Number.shortValue:()S
     157: invokestatic  #152                // Method java/lang/reflect/Array.setShort:(Ljava/lang/Object;IS)V
     160: goto          343
     163: getstatic     #153                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     166: aload_3
     167: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     170: ifeq          190
     173: aload_2
     174: iload         4
     176: aload         7
     178: checkcast     #147                // class java/lang/Number
     181: invokevirtual #154                // Method java/lang/Number.intValue:()I
     184: invokestatic  #155                // Method java/lang/reflect/Array.setInt:(Ljava/lang/Object;II)V
     187: goto          343
     190: getstatic     #156                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     193: aload_3
     194: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     197: ifeq          217
     200: aload_2
     201: iload         4
     203: aload         7
     205: checkcast     #147                // class java/lang/Number
     208: invokevirtual #157                // Method java/lang/Number.longValue:()J
     211: invokestatic  #158                // Method java/lang/reflect/Array.setLong:(Ljava/lang/Object;IJ)V
     214: goto          343
     217: getstatic     #159                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     220: aload_3
     221: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     224: ifeq          244
     227: aload_2
     228: iload         4
     230: aload         7
     232: checkcast     #147                // class java/lang/Number
     235: invokevirtual #160                // Method java/lang/Number.floatValue:()F
     238: invokestatic  #161                // Method java/lang/reflect/Array.setFloat:(Ljava/lang/Object;IF)V
     241: goto          343
     244: getstatic     #162                // Field java/lang/Double.TYPE:Ljava/lang/Class;
     247: aload_3
     248: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     251: ifeq          271
     254: aload_2
     255: iload         4
     257: aload         7
     259: checkcast     #147                // class java/lang/Number
     262: invokevirtual #163                // Method java/lang/Number.doubleValue:()D
     265: invokestatic  #164                // Method java/lang/reflect/Array.setDouble:(Ljava/lang/Object;ID)V
     268: goto          343
     271: getstatic     #165                // Field java/lang/Character.TYPE:Ljava/lang/Class;
     274: aload_3
     275: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     278: ifeq          298
     281: aload_2
     282: iload         4
     284: aload         7
     286: checkcast     #166                // class java/lang/Character
     289: invokevirtual #167                // Method java/lang/Character.charValue:()C
     292: invokestatic  #168                // Method java/lang/reflect/Array.setChar:(Ljava/lang/Object;IC)V
     295: goto          343
     298: getstatic     #169                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     301: aload_3
     302: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     305: ifeq          325
     308: aload_2
     309: iload         4
     311: aload         7
     313: checkcast     #170                // class java/lang/Boolean
     316: invokevirtual #171                // Method java/lang/Boolean.booleanValue:()Z
     319: invokestatic  #172                // Method java/lang/reflect/Array.setBoolean:(Ljava/lang/Object;IZ)V
     322: goto          343
     325: new           #60                 // class org/yaml/snakeyaml/error/YAMLException
     328: dup
     329: ldc           #173                // String unexpected primitive type
     331: invokespecial #174                // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     334: athrow
     335: aload_2
     336: iload         4
     338: aload         7
     340: invokestatic  #175                // Method java/lang/reflect/Array.set:(Ljava/lang/Object;ILjava/lang/Object;)V
     343: iinc          4, 1
     346: goto          22
     349: aload_2
     350: areturn

  protected java.util.Set<java.lang.Object> constructSet(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method newSet:(Lorg/yaml/snakeyaml/nodes/CollectionNode;)Ljava/util/Set;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #176                // Method constructSet2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Set;)V
      12: aload_2
      13: areturn

  protected java.util.Map<java.lang.Object, java.lang.Object> constructMapping(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #177                // Method newMap:(Lorg/yaml/snakeyaml/nodes/MappingNode;)Ljava/util/Map;
       5: astore_2
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #178                // Method constructMapping2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Map;)V
      12: aload_2
      13: areturn

  protected void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #128                // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_3
       5: aload_3
       6: invokeinterface #136,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          179
      23: aload         4
      25: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #179                // class org/yaml/snakeyaml/nodes/NodeTuple
      33: astore        5
      35: aload         5
      37: invokevirtual #180                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      40: astore        6
      42: aload         5
      44: invokevirtual #181                // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      47: astore        7
      49: aload_0
      50: aload         6
      52: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      55: astore        8
      57: aload         8
      59: ifnull        117
      62: aload         8
      64: invokevirtual #182                // Method java/lang/Object.hashCode:()I
      67: pop
      68: goto          117
      71: astore        9
      73: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
      76: dup
      77: ldc           #183                // String while constructing a mapping
      79: aload_1
      80: invokevirtual #184                // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      83: new           #113                // class java/lang/StringBuilder
      86: dup
      87: invokespecial #114                // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #185                // String found unacceptable key
      92: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         8
      97: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload         5
     105: invokevirtual #180                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     108: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     111: aload         9
     113: invokespecial #186                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     116: athrow
     117: aload_0
     118: aload         7
     120: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     123: astore        9
     125: aload         6
     127: invokevirtual #83                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     130: ifeq          165
     133: aload_0
     134: getfield      #36                 // Field loadingConfig:Lorg/yaml/snakeyaml/LoaderOptions;
     137: invokevirtual #187                // Method org/yaml/snakeyaml/LoaderOptions.getAllowRecursiveKeys:()Z
     140: ifeq          155
     143: aload_0
     144: aload_2
     145: aload         8
     147: aload         9
     149: invokevirtual #188                // Method postponeMapFilling:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
     152: goto          176
     155: new           #60                 // class org/yaml/snakeyaml/error/YAMLException
     158: dup
     159: ldc           #189                // String Recursive key for mapping is detected but it is not configured to be allowed.
     161: invokespecial #174                // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     164: athrow
     165: aload_2
     166: aload         8
     168: aload         9
     170: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     175: pop
     176: goto          13
     179: return
    Exception table:
       from    to  target type
          62    68    71   Class java/lang/Exception

  protected void postponeMapFilling(java.util.Map<java.lang.Object, java.lang.Object>, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #21                 // Field maps2fill:Ljava/util/ArrayList;
       4: iconst_0
       5: new           #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
       8: dup
       9: aload_1
      10: new           #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
      13: dup
      14: aload_2
      15: aload_3
      16: invokespecial #190                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      19: invokespecial #190                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokevirtual #191                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      25: return

  protected void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Set<java.lang.Object>);
    Code:
       0: aload_1
       1: invokevirtual #128                // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_3
       5: aload_3
       6: invokeinterface #136,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          140
      23: aload         4
      25: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #179                // class org/yaml/snakeyaml/nodes/NodeTuple
      33: astore        5
      35: aload         5
      37: invokevirtual #180                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      40: astore        6
      42: aload_0
      43: aload         6
      45: invokevirtual #55                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      48: astore        7
      50: aload         7
      52: ifnull        110
      55: aload         7
      57: invokevirtual #182                // Method java/lang/Object.hashCode:()I
      60: pop
      61: goto          110
      64: astore        8
      66: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
      69: dup
      70: ldc           #192                // String while constructing a Set
      72: aload_1
      73: invokevirtual #184                // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
      76: new           #113                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #114                // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #185                // String found unacceptable key
      85: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         7
      90: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: aload         5
      98: invokevirtual #180                // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     101: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     104: aload         8
     106: invokespecial #186                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     109: athrow
     110: aload         6
     112: invokevirtual #83                 // Method org/yaml/snakeyaml/nodes/Node.isTwoStepsConstruction:()Z
     115: ifeq          128
     118: aload_0
     119: aload_2
     120: aload         7
     122: invokevirtual #193                // Method postponeSetFilling:(Ljava/util/Set;Ljava/lang/Object;)V
     125: goto          137
     128: aload_2
     129: aload         7
     131: invokeinterface #72,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     136: pop
     137: goto          13
     140: return
    Exception table:
       from    to  target type
          55    61    64   Class java/lang/Exception

  protected void postponeSetFilling(java.util.Set<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #22                 // Field sets2fill:Ljava/util/ArrayList;
       4: iconst_0
       5: new           #66                 // class org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple
       8: dup
       9: aload_1
      10: aload_2
      11: invokespecial #190                // Method org/yaml/snakeyaml/constructor/BaseConstructor$RecursiveTuple."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      14: invokevirtual #191                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      17: return

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #194                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       5: aload_0
       6: iconst_1
       7: putfield      #26                 // Field explicitPropertyUtils:Z
      10: aload_0
      11: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
      14: invokeinterface #195,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: astore_2
      20: aload_2
      21: invokeinterface #196,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          56
      36: aload_3
      37: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #28                 // class org/yaml/snakeyaml/TypeDescription
      45: astore        4
      47: aload         4
      49: aload_1
      50: invokevirtual #197                // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      53: goto          27
      56: return

  public final org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #194                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: ifnonnull     18
       7: aload_0
       8: new           #198                // class org/yaml/snakeyaml/introspector/PropertyUtils
      11: dup
      12: invokespecial #199                // Method org/yaml/snakeyaml/introspector/PropertyUtils."<init>":()V
      15: putfield      #194                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_0
      19: getfield      #194                // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      22: areturn

  public org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #141                // class java/lang/NullPointerException
       7: dup
       8: ldc           #200                // String TypeDescription is required.
      10: invokespecial #144                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #201                // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      18: astore_2
      19: aload_0
      20: getfield      #24                 // Field typeTags:Ljava/util/Map;
      23: aload_2
      24: aload_1
      25: invokevirtual #202                // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      28: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: aload_0
      36: invokevirtual #203                // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      39: invokevirtual #197                // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      42: aload_0
      43: getfield      #23                 // Field typeDefinitions:Ljava/util/Map;
      46: aload_1
      47: invokevirtual #202                // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      50: aload_1
      51: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #28                 // class org/yaml/snakeyaml/TypeDescription
      59: areturn

  public final boolean isExplicitPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #26                 // Field explicitPropertyUtils:Z
       4: ireturn

  public boolean isAllowDuplicateKeys();
    Code:
       0: aload_0
       1: getfield      #13                 // Field allowDuplicateKeys:Z
       4: ireturn

  public void setAllowDuplicateKeys(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field allowDuplicateKeys:Z
       5: return

  public boolean isWrappedToRootException();
    Code:
       0: aload_0
       1: getfield      #14                 // Field wrappedToRootException:Z
       4: ireturn

  public void setWrappedToRootException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field wrappedToRootException:Z
       5: return
}
