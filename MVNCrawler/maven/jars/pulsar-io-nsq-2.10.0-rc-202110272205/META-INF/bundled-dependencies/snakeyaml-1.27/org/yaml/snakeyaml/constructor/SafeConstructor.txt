Compiled from "SafeConstructor.java"
public class org.yaml.snakeyaml.constructor.SafeConstructor extends org.yaml.snakeyaml.constructor.BaseConstructor {
  public static final org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined undefinedConstructor;

  private static final java.util.Map<java.lang.String, java.lang.Boolean> BOOL_VALUES;

  private static final int[][] RADIX_MAX;

  private static final java.util.regex.Pattern TIMESTAMP_REGEXP;

  private static final java.util.regex.Pattern YMD_REGEXP;

  public org.yaml.snakeyaml.constructor.SafeConstructor();
    Code:
       0: aload_0
       1: new           #5                  // class org/yaml/snakeyaml/LoaderOptions
       4: dup
       5: invokespecial #6                  // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
       8: invokespecial #7                  // Method "<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
      11: return

  public org.yaml.snakeyaml.constructor.SafeConstructor(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/yaml/snakeyaml/constructor/BaseConstructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
       5: aload_0
       6: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
       9: getstatic     #10                 // Field org/yaml/snakeyaml/nodes/Tag.NULL:Lorg/yaml/snakeyaml/nodes/Tag;
      12: new           #11                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull
      15: dup
      16: aload_0
      17: invokespecial #12                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlNull."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      20: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
      30: getstatic     #14                 // Field org/yaml/snakeyaml/nodes/Tag.BOOL:Lorg/yaml/snakeyaml/nodes/Tag;
      33: new           #15                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool
      36: dup
      37: aload_0
      38: invokespecial #16                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBool."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      41: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
      51: getstatic     #17                 // Field org/yaml/snakeyaml/nodes/Tag.INT:Lorg/yaml/snakeyaml/nodes/Tag;
      54: new           #18                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt
      57: dup
      58: aload_0
      59: invokespecial #19                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlInt."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      62: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
      72: getstatic     #20                 // Field org/yaml/snakeyaml/nodes/Tag.FLOAT:Lorg/yaml/snakeyaml/nodes/Tag;
      75: new           #21                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat
      78: dup
      79: aload_0
      80: invokespecial #22                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlFloat."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
      83: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload_0
      90: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
      93: getstatic     #23                 // Field org/yaml/snakeyaml/nodes/Tag.BINARY:Lorg/yaml/snakeyaml/nodes/Tag;
      96: new           #24                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary
      99: dup
     100: aload_0
     101: invokespecial #25                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlBinary."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     104: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     114: getstatic     #26                 // Field org/yaml/snakeyaml/nodes/Tag.TIMESTAMP:Lorg/yaml/snakeyaml/nodes/Tag;
     117: new           #27                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp
     120: dup
     121: invokespecial #28                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlTimestamp."<init>":()V
     124: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     134: getstatic     #29                 // Field org/yaml/snakeyaml/nodes/Tag.OMAP:Lorg/yaml/snakeyaml/nodes/Tag;
     137: new           #30                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap
     140: dup
     141: aload_0
     142: invokespecial #31                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlOmap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     145: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: aload_0
     152: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     155: getstatic     #32                 // Field org/yaml/snakeyaml/nodes/Tag.PAIRS:Lorg/yaml/snakeyaml/nodes/Tag;
     158: new           #33                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs
     161: dup
     162: aload_0
     163: invokespecial #34                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlPairs."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     166: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: aload_0
     173: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     176: getstatic     #35                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     179: new           #36                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet
     182: dup
     183: aload_0
     184: invokespecial #37                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     187: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: aload_0
     194: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     197: getstatic     #38                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
     200: new           #39                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr
     203: dup
     204: aload_0
     205: invokespecial #40                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlStr."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     208: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: aload_0
     215: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     218: getstatic     #41                 // Field org/yaml/snakeyaml/nodes/Tag.SEQ:Lorg/yaml/snakeyaml/nodes/Tag;
     221: new           #42                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq
     224: dup
     225: aload_0
     226: invokespecial #43                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     229: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     234: pop
     235: aload_0
     236: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     239: getstatic     #44                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     242: new           #45                 // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap
     245: dup
     246: aload_0
     247: invokespecial #46                 // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap."<init>":(Lorg/yaml/snakeyaml/constructor/SafeConstructor;)V
     250: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     255: pop
     256: aload_0
     257: getfield      #9                  // Field yamlConstructors:Ljava/util/Map;
     260: aconst_null
     261: getstatic     #47                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     264: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     269: pop
     270: aload_0
     271: getfield      #48                 // Field yamlClassConstructors:Ljava/util/Map;
     274: getstatic     #49                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
     277: getstatic     #47                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     280: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     285: pop
     286: aload_0
     287: getfield      #48                 // Field yamlClassConstructors:Ljava/util/Map;
     290: getstatic     #50                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     293: getstatic     #47                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     296: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     301: pop
     302: aload_0
     303: getfield      #48                 // Field yamlClassConstructors:Ljava/util/Map;
     306: getstatic     #51                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     309: getstatic     #47                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
     312: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     317: pop
     318: return

  protected void flattenMapping(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method processDuplicateKeys:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_1
       6: invokevirtual #53                 // Method org/yaml/snakeyaml/nodes/MappingNode.isMerged:()Z
       9: ifeq          36
      12: aload_1
      13: aload_0
      14: aload_1
      15: iconst_1
      16: new           #54                 // class java/util/HashMap
      19: dup
      20: invokespecial #55                 // Method java/util/HashMap."<init>":()V
      23: new           #56                 // class java/util/ArrayList
      26: dup
      27: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      30: invokespecial #58                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
      33: invokevirtual #59                 // Method org/yaml/snakeyaml/nodes/MappingNode.setValue:(Ljava/util/List;)V
      36: return

  protected void processDuplicateKeys(org.yaml.snakeyaml.nodes.MappingNode);
    Code:
       0: aload_1
       1: invokevirtual #60                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: astore_2
       5: new           #54                 // class java/util/HashMap
       8: dup
       9: aload_2
      10: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
      15: invokespecial #62                 // Method java/util/HashMap."<init>":(I)V
      18: astore_3
      19: new           #63                 // class java/util/TreeSet
      22: dup
      23: invokespecial #64                 // Method java/util/TreeSet."<init>":()V
      26: astore        4
      28: iconst_0
      29: istore        5
      31: aload_2
      32: invokeinterface #65,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        6
      39: aload         6
      41: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          219
      49: aload         6
      51: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #68                 // class org/yaml/snakeyaml/nodes/NodeTuple
      59: astore        7
      61: aload         7
      63: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      66: astore        8
      68: aload         8
      70: invokevirtual #70                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      73: getstatic     #71                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      76: invokevirtual #72                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      79: ifne          210
      82: aload_0
      83: aload         8
      85: invokevirtual #73                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
      88: astore        9
      90: aload         9
      92: ifnull        150
      95: aload         9
      97: invokevirtual #74                 // Method java/lang/Object.hashCode:()I
     100: pop
     101: goto          150
     104: astore        10
     106: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
     109: dup
     110: ldc           #77                 // String while constructing a mapping
     112: aload_1
     113: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     116: new           #79                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #81                 // String found unacceptable key
     125: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload         9
     130: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: aload         7
     138: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     141: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     144: aload         10
     146: invokespecial #86                 // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Throwable;)V
     149: athrow
     150: aload_3
     151: aload         9
     153: iload         5
     155: invokestatic  #87                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: checkcast     #88                 // class java/lang/Integer
     166: astore        10
     168: aload         10
     170: ifnull        210
     173: aload_0
     174: invokevirtual #89                 // Method isAllowDuplicateKeys:()Z
     177: ifne          202
     180: new           #90                 // class org/yaml/snakeyaml/constructor/DuplicateKeyException
     183: dup
     184: aload_1
     185: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     188: aload         9
     190: aload         7
     192: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     195: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     198: invokespecial #91                 // Method org/yaml/snakeyaml/constructor/DuplicateKeyException."<init>":(Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Object;Lorg/yaml/snakeyaml/error/Mark;)V
     201: athrow
     202: aload         4
     204: aload         10
     206: invokevirtual #92                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
     209: pop
     210: iload         5
     212: iconst_1
     213: iadd
     214: istore        5
     216: goto          39
     219: aload         4
     221: invokevirtual #93                 // Method java/util/TreeSet.descendingIterator:()Ljava/util/Iterator;
     224: astore        6
     226: aload         6
     228: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     233: ifeq          259
     236: aload_2
     237: aload         6
     239: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     244: checkcast     #88                 // class java/lang/Integer
     247: invokevirtual #94                 // Method java/lang/Integer.intValue:()I
     250: invokeinterface #95,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     255: pop
     256: goto          226
     259: return
    Exception table:
       from    to  target type
          95   101   104   Class java/lang/Exception

  private java.util.List<org.yaml.snakeyaml.nodes.NodeTuple> mergeNode(org.yaml.snakeyaml.nodes.MappingNode, boolean, java.util.Map<java.lang.Object, java.lang.Integer>, java.util.List<org.yaml.snakeyaml.nodes.NodeTuple>);
    Code:
       0: aload_1
       1: invokevirtual #60                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
       4: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          377
      21: aload         5
      23: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #68                 // class org/yaml/snakeyaml/nodes/NodeTuple
      31: astore        6
      33: aload         6
      35: invokevirtual #69                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
      38: astore        7
      40: aload         6
      42: invokevirtual #97                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
      45: astore        8
      47: aload         7
      49: invokevirtual #70                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      52: getstatic     #71                 // Field org/yaml/snakeyaml/nodes/Tag.MERGE:Lorg/yaml/snakeyaml/nodes/Tag;
      55: invokevirtual #72                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
      58: ifeq          293
      61: aload         5
      63: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.remove:()V
      68: getstatic     #99                 // Field org/yaml/snakeyaml/constructor/SafeConstructor$1.$SwitchMap$org$yaml$snakeyaml$nodes$NodeId:[I
      71: aload         8
      73: invokevirtual #100                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      76: invokevirtual #101                // Method org/yaml/snakeyaml/nodes/NodeId.ordinal:()I
      79: iaload
      80: lookupswitch  { // 2
                     1: 108
                     2: 129
               default: 248
          }
     108: aload         8
     110: checkcast     #102                // class org/yaml/snakeyaml/nodes/MappingNode
     113: astore        9
     115: aload_0
     116: aload         9
     118: iconst_0
     119: aload_3
     120: aload         4
     122: invokespecial #58                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
     125: pop
     126: goto          290
     129: aload         8
     131: checkcast     #103                // class org/yaml/snakeyaml/nodes/SequenceNode
     134: astore        10
     136: aload         10
     138: invokevirtual #104                // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     141: astore        11
     143: aload         11
     145: invokeinterface #65,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     150: astore        12
     152: aload         12
     154: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     159: ifeq          245
     162: aload         12
     164: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #105                // class org/yaml/snakeyaml/nodes/Node
     172: astore        13
     174: aload         13
     176: instanceof    #102                // class org/yaml/snakeyaml/nodes/MappingNode
     179: ifne          224
     182: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
     185: dup
     186: ldc           #77                 // String while constructing a mapping
     188: aload_1
     189: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     192: new           #79                 // class java/lang/StringBuilder
     195: dup
     196: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
     199: ldc           #106                // String expected a mapping for merging, but found
     201: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload         13
     206: invokevirtual #100                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     209: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: aload         13
     217: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     220: invokespecial #107                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     223: athrow
     224: aload         13
     226: checkcast     #102                // class org/yaml/snakeyaml/nodes/MappingNode
     229: astore        14
     231: aload_0
     232: aload         14
     234: iconst_0
     235: aload_3
     236: aload         4
     238: invokespecial #58                 // Method mergeNode:(Lorg/yaml/snakeyaml/nodes/MappingNode;ZLjava/util/Map;Ljava/util/List;)Ljava/util/List;
     241: pop
     242: goto          152
     245: goto          290
     248: new           #76                 // class org/yaml/snakeyaml/constructor/ConstructorException
     251: dup
     252: ldc           #77                 // String while constructing a mapping
     254: aload_1
     255: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/MappingNode.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     258: new           #79                 // class java/lang/StringBuilder
     261: dup
     262: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
     265: ldc           #108                // String expected a mapping or list of mappings for merging, but found
     267: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: aload         8
     272: invokevirtual #100                // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     275: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     278: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     281: aload         8
     283: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Node.getStartMark:()Lorg/yaml/snakeyaml/error/Mark;
     286: invokespecial #107                // Method org/yaml/snakeyaml/constructor/ConstructorException."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;)V
     289: athrow
     290: goto          374
     293: aload_0
     294: aload         7
     296: invokevirtual #73                 // Method constructObject:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/Object;
     299: astore        9
     301: aload_3
     302: aload         9
     304: invokeinterface #109,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     309: ifne          346
     312: aload         4
     314: aload         6
     316: invokeinterface #110,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     321: pop
     322: aload_3
     323: aload         9
     325: aload         4
     327: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
     332: iconst_1
     333: isub
     334: invokestatic  #87                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     337: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     342: pop
     343: goto          374
     346: iload_2
     347: ifeq          374
     350: aload         4
     352: aload_3
     353: aload         9
     355: invokeinterface #111,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     360: checkcast     #88                 // class java/lang/Integer
     363: invokevirtual #94                 // Method java/lang/Integer.intValue:()I
     366: aload         6
     368: invokeinterface #112,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     373: pop
     374: goto          11
     377: aload         4
     379: areturn

  protected void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #114                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructMapping2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Map;)V
      11: return

  protected void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode, java.util.Set<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method flattenMapping:(Lorg/yaml/snakeyaml/nodes/MappingNode;)V
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #115                // Method org/yaml/snakeyaml/constructor/BaseConstructor.constructSet2ndStep:(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/util/Set;)V
      11: return

  private static int maxLen(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #116                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
       5: invokevirtual #117                // Method java/lang/String.length:()I
       8: ireturn

  private static int maxLen(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #118                // Method java/lang/Long.toString:(JI)Ljava/lang/String;
       5: invokevirtual #117                // Method java/lang/String.length:()I
       8: ireturn

  private java.lang.Number createNumber(int, java.lang.String, int);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #117                // Method java/lang/String.length:()I
       8: goto          12
      11: iconst_0
      12: istore        4
      14: iload_1
      15: ifge          38
      18: new           #79                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #119                // String -
      27: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: astore_2
      38: iload_3
      39: getstatic     #120                // Field RADIX_MAX:[[I
      42: arraylength
      43: if_icmpge     54
      46: getstatic     #120                // Field RADIX_MAX:[[I
      49: iload_3
      50: aaload
      51: goto          55
      54: aconst_null
      55: astore        5
      57: aload         5
      59: ifnull        108
      62: iload         4
      64: aload         5
      66: iconst_0
      67: iaload
      68: if_icmple     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        6
      78: iload         6
      80: ifeq          108
      83: iload         4
      85: aload         5
      87: iconst_1
      88: iaload
      89: if_icmple     102
      92: new           #121                // class java/math/BigInteger
      95: dup
      96: aload_2
      97: iload_3
      98: invokespecial #122                // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     101: areturn
     102: aload_2
     103: iload_3
     104: invokestatic  #123                // Method createLongOrBigInteger:(Ljava/lang/String;I)Ljava/lang/Number;
     107: areturn
     108: aload_2
     109: iload_3
     110: invokestatic  #124                // Method java/lang/Integer.valueOf:(Ljava/lang/String;I)Ljava/lang/Integer;
     113: astore        6
     115: goto          127
     118: astore        7
     120: aload_2
     121: iload_3
     122: invokestatic  #123                // Method createLongOrBigInteger:(Ljava/lang/String;I)Ljava/lang/Number;
     125: astore        6
     127: aload         6
     129: areturn
    Exception table:
       from    to  target type
         108   115   118   Class java/lang/NumberFormatException

  protected static java.lang.Number createLongOrBigInteger(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #126                // Method java/lang/Long.valueOf:(Ljava/lang/String;I)Ljava/lang/Long;
       5: areturn
       6: astore_2
       7: new           #121                // class java/math/BigInteger
      10: dup
      11: aload_0
      12: iload_1
      13: invokespecial #122                // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      16: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/NumberFormatException

  static java.util.Map access$000();
    Code:
       0: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
       3: areturn

  static java.lang.Number access$100(org.yaml.snakeyaml.constructor.SafeConstructor, int, java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3                  // Method createNumber:(ILjava/lang/String;I)Ljava/lang/Number;
       7: areturn

  static java.util.regex.Pattern access$200();
    Code:
       0: getstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static java.util.regex.Pattern access$300();
    Code:
       0: getstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
       3: areturn

  static {};
    Code:
       0: new           #127                // class org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined
       3: dup
       4: invokespecial #128                // Method org/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined."<init>":()V
       7: putstatic     #47                 // Field undefinedConstructor:Lorg/yaml/snakeyaml/constructor/SafeConstructor$ConstructUndefined;
      10: new           #54                 // class java/util/HashMap
      13: dup
      14: invokespecial #55                 // Method java/util/HashMap."<init>":()V
      17: putstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      20: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      23: ldc           #129                // String yes
      25: getstatic     #130                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      28: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      37: ldc           #131                // String no
      39: getstatic     #132                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      42: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      51: ldc           #133                // String true
      53: getstatic     #130                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      56: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      65: ldc           #134                // String false
      67: getstatic     #132                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      70: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      79: ldc           #135                // String on
      81: getstatic     #130                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      84: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: getstatic     #4                  // Field BOOL_VALUES:Ljava/util/Map;
      93: ldc           #136                // String off
      95: getstatic     #132                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      98: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: bipush        17
     106: iconst_2
     107: multianewarray #137,  2           // class "[[I"
     111: putstatic     #120                // Field RADIX_MAX:[[I
     114: iconst_4
     115: newarray       int
     117: dup
     118: iconst_0
     119: iconst_2
     120: iastore
     121: dup
     122: iconst_1
     123: bipush        8
     125: iastore
     126: dup
     127: iconst_2
     128: bipush        10
     130: iastore
     131: dup
     132: iconst_3
     133: bipush        16
     135: iastore
     136: astore_0
     137: aload_0
     138: astore_1
     139: aload_1
     140: arraylength
     141: istore_2
     142: iconst_0
     143: istore_3
     144: iload_3
     145: iload_2
     146: if_icmpge     190
     149: aload_1
     150: iload_3
     151: iaload
     152: istore        4
     154: getstatic     #120                // Field RADIX_MAX:[[I
     157: iload         4
     159: iconst_2
     160: newarray       int
     162: dup
     163: iconst_0
     164: ldc           #138                // int 2147483647
     166: iload         4
     168: invokestatic  #139                // Method maxLen:(II)I
     171: iastore
     172: dup
     173: iconst_1
     174: ldc2_w        #140                // long 9223372036854775807l
     177: iload         4
     179: invokestatic  #142                // Method maxLen:(JI)I
     182: iastore
     183: aastore
     184: iinc          3, 1
     187: goto          144
     190: ldc           #143                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \t]*(?:Z|([-+][0-9][0-9]?)(?::([0-9][0-9])?)?))?)?$
     192: invokestatic  #144                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     195: putstatic     #1                  // Field TIMESTAMP_REGEXP:Ljava/util/regex/Pattern;
     198: ldc           #145                // String ^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)$
     200: invokestatic  #144                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     203: putstatic     #2                  // Field YMD_REGEXP:Ljava/util/regex/Pattern;
     206: return
}
