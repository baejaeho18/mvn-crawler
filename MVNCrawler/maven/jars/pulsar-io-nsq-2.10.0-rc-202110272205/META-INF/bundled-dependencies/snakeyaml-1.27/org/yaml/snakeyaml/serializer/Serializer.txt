Compiled from "Serializer.java"
public final class org.yaml.snakeyaml.serializer.Serializer {
  private final org.yaml.snakeyaml.emitter.Emitable emitter;

  private final org.yaml.snakeyaml.resolver.Resolver resolver;

  private boolean explicitStart;

  private boolean explicitEnd;

  private org.yaml.snakeyaml.DumperOptions$Version useVersion;

  private java.util.Map<java.lang.String, java.lang.String> useTags;

  private java.util.Set<org.yaml.snakeyaml.nodes.Node> serializedNodes;

  private java.util.Map<org.yaml.snakeyaml.nodes.Node, java.lang.String> anchors;

  private org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator;

  private java.lang.Boolean closed;

  private org.yaml.snakeyaml.nodes.Tag explicitRoot;

  public org.yaml.snakeyaml.serializer.Serializer(org.yaml.snakeyaml.emitter.Emitable, org.yaml.snakeyaml.resolver.Resolver, org.yaml.snakeyaml.DumperOptions, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
      14: aload_0
      15: aload_3
      16: invokevirtual #4                  // Method org/yaml/snakeyaml/DumperOptions.isExplicitStart:()Z
      19: putfield      #5                  // Field explicitStart:Z
      22: aload_0
      23: aload_3
      24: invokevirtual #6                  // Method org/yaml/snakeyaml/DumperOptions.isExplicitEnd:()Z
      27: putfield      #7                  // Field explicitEnd:Z
      30: aload_3
      31: invokevirtual #8                  // Method org/yaml/snakeyaml/DumperOptions.getVersion:()Lorg/yaml/snakeyaml/DumperOptions$Version;
      34: ifnull        45
      37: aload_0
      38: aload_3
      39: invokevirtual #8                  // Method org/yaml/snakeyaml/DumperOptions.getVersion:()Lorg/yaml/snakeyaml/DumperOptions$Version;
      42: putfield      #9                  // Field useVersion:Lorg/yaml/snakeyaml/DumperOptions$Version;
      45: aload_0
      46: aload_3
      47: invokevirtual #10                 // Method org/yaml/snakeyaml/DumperOptions.getTags:()Ljava/util/Map;
      50: putfield      #11                 // Field useTags:Ljava/util/Map;
      53: aload_0
      54: new           #12                 // class java/util/HashSet
      57: dup
      58: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      61: putfield      #14                 // Field serializedNodes:Ljava/util/Set;
      64: aload_0
      65: new           #15                 // class java/util/HashMap
      68: dup
      69: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      72: putfield      #17                 // Field anchors:Ljava/util/Map;
      75: aload_0
      76: aload_3
      77: invokevirtual #18                 // Method org/yaml/snakeyaml/DumperOptions.getAnchorGenerator:()Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
      80: putfield      #19                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
      83: aload_0
      84: aconst_null
      85: putfield      #20                 // Field closed:Ljava/lang/Boolean;
      88: aload_0
      89: aload         4
      91: putfield      #21                 // Field explicitRoot:Lorg/yaml/snakeyaml/nodes/Tag;
      94: return

  public void open() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Ljava/lang/Boolean;
       4: ifnonnull     35
       7: aload_0
       8: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
      11: new           #22                 // class org/yaml/snakeyaml/events/StreamStartEvent
      14: dup
      15: aconst_null
      16: aconst_null
      17: invokespecial #23                 // Method org/yaml/snakeyaml/events/StreamStartEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;)V
      20: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
      25: aload_0
      26: getstatic     #25                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      29: putfield      #20                 // Field closed:Ljava/lang/Boolean;
      32: goto          68
      35: getstatic     #26                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      38: aload_0
      39: getfield      #20                 // Field closed:Ljava/lang/Boolean;
      42: invokevirtual #27                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      45: ifeq          58
      48: new           #28                 // class org/yaml/snakeyaml/serializer/SerializerException
      51: dup
      52: ldc           #29                 // String serializer is closed
      54: invokespecial #30                 // Method org/yaml/snakeyaml/serializer/SerializerException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #28                 // class org/yaml/snakeyaml/serializer/SerializerException
      61: dup
      62: ldc           #31                 // String serializer is already opened
      64: invokespecial #30                 // Method org/yaml/snakeyaml/serializer/SerializerException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Ljava/lang/Boolean;
       4: ifnonnull     17
       7: new           #28                 // class org/yaml/snakeyaml/serializer/SerializerException
      10: dup
      11: ldc           #32                 // String serializer is not opened
      13: invokespecial #30                 // Method org/yaml/snakeyaml/serializer/SerializerException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #26                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      20: aload_0
      21: getfield      #20                 // Field closed:Ljava/lang/Boolean;
      24: invokevirtual #27                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      27: ifne          73
      30: aload_0
      31: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
      34: new           #33                 // class org/yaml/snakeyaml/events/StreamEndEvent
      37: dup
      38: aconst_null
      39: aconst_null
      40: invokespecial #34                 // Method org/yaml/snakeyaml/events/StreamEndEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;)V
      43: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
      48: aload_0
      49: getstatic     #26                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      52: putfield      #20                 // Field closed:Ljava/lang/Boolean;
      55: aload_0
      56: getfield      #14                 // Field serializedNodes:Ljava/util/Set;
      59: invokeinterface #35,  1           // InterfaceMethod java/util/Set.clear:()V
      64: aload_0
      65: getfield      #17                 // Field anchors:Ljava/util/Map;
      68: invokeinterface #36,  1           // InterfaceMethod java/util/Map.clear:()V
      73: return

  public void serialize(org.yaml.snakeyaml.nodes.Node) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field closed:Ljava/lang/Boolean;
       4: ifnonnull     17
       7: new           #28                 // class org/yaml/snakeyaml/serializer/SerializerException
      10: dup
      11: ldc           #32                 // String serializer is not opened
      13: invokespecial #30                 // Method org/yaml/snakeyaml/serializer/SerializerException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #20                 // Field closed:Ljava/lang/Boolean;
      21: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      24: ifeq          37
      27: new           #28                 // class org/yaml/snakeyaml/serializer/SerializerException
      30: dup
      31: ldc           #29                 // String serializer is closed
      33: invokespecial #30                 // Method org/yaml/snakeyaml/serializer/SerializerException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
      41: new           #38                 // class org/yaml/snakeyaml/events/DocumentStartEvent
      44: dup
      45: aconst_null
      46: aconst_null
      47: aload_0
      48: getfield      #5                  // Field explicitStart:Z
      51: aload_0
      52: getfield      #9                  // Field useVersion:Lorg/yaml/snakeyaml/DumperOptions$Version;
      55: aload_0
      56: getfield      #11                 // Field useTags:Ljava/util/Map;
      59: invokespecial #39                 // Method org/yaml/snakeyaml/events/DocumentStartEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;ZLorg/yaml/snakeyaml/DumperOptions$Version;Ljava/util/Map;)V
      62: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
      67: aload_0
      68: aload_1
      69: invokespecial #40                 // Method anchorNode:(Lorg/yaml/snakeyaml/nodes/Node;)V
      72: aload_0
      73: getfield      #21                 // Field explicitRoot:Lorg/yaml/snakeyaml/nodes/Tag;
      76: ifnull        87
      79: aload_1
      80: aload_0
      81: getfield      #21                 // Field explicitRoot:Lorg/yaml/snakeyaml/nodes/Tag;
      84: invokevirtual #41                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      87: aload_0
      88: aload_1
      89: aconst_null
      90: invokespecial #42                 // Method serializeNode:(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
      93: aload_0
      94: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
      97: new           #43                 // class org/yaml/snakeyaml/events/DocumentEndEvent
     100: dup
     101: aconst_null
     102: aconst_null
     103: aload_0
     104: getfield      #7                  // Field explicitEnd:Z
     107: invokespecial #44                 // Method org/yaml/snakeyaml/events/DocumentEndEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Z)V
     110: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     115: aload_0
     116: getfield      #14                 // Field serializedNodes:Ljava/util/Set;
     119: invokeinterface #35,  1           // InterfaceMethod java/util/Set.clear:()V
     124: aload_0
     125: getfield      #17                 // Field anchors:Ljava/util/Map;
     128: invokeinterface #36,  1           // InterfaceMethod java/util/Map.clear:()V
     133: return

  private void anchorNode(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
       4: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/NodeId.anchor:Lorg/yaml/snakeyaml/nodes/NodeId;
       7: if_acmpne     18
      10: aload_1
      11: checkcast     #47                 // class org/yaml/snakeyaml/nodes/AnchorNode
      14: invokevirtual #48                 // Method org/yaml/snakeyaml/nodes/AnchorNode.getRealNode:()Lorg/yaml/snakeyaml/nodes/Node;
      17: astore_1
      18: aload_0
      19: getfield      #17                 // Field anchors:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      28: ifeq          76
      31: aload_0
      32: getfield      #17                 // Field anchors:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #50,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #51                 // class java/lang/String
      44: astore_2
      45: aconst_null
      46: aload_2
      47: if_acmpne     73
      50: aload_0
      51: getfield      #19                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
      54: aload_1
      55: invokeinterface #52,  2           // InterfaceMethod org/yaml/snakeyaml/serializer/AnchorGenerator.nextAnchor:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/String;
      60: astore_2
      61: aload_0
      62: getfield      #17                 // Field anchors:Ljava/util/Map;
      65: aload_1
      66: aload_2
      67: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          269
      76: aload_0
      77: getfield      #17                 // Field anchors:Ljava/util/Map;
      80: aload_1
      81: aload_1
      82: invokevirtual #54                 // Method org/yaml/snakeyaml/nodes/Node.getAnchor:()Ljava/lang/String;
      85: ifnull        101
      88: aload_0
      89: getfield      #19                 // Field anchorGenerator:Lorg/yaml/snakeyaml/serializer/AnchorGenerator;
      92: aload_1
      93: invokeinterface #52,  2           // InterfaceMethod org/yaml/snakeyaml/serializer/AnchorGenerator.nextAnchor:(Lorg/yaml/snakeyaml/nodes/Node;)Ljava/lang/String;
      98: goto          102
     101: aconst_null
     102: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: getstatic     #55                 // Field org/yaml/snakeyaml/serializer/Serializer$1.$SwitchMap$org$yaml$snakeyaml$nodes$NodeId:[I
     111: aload_1
     112: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     115: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/NodeId.ordinal:()I
     118: iaload
     119: lookupswitch  { // 2
                     1: 144
                     2: 196
               default: 269
          }
     144: aload_1
     145: checkcast     #57                 // class org/yaml/snakeyaml/nodes/SequenceNode
     148: astore_2
     149: aload_2
     150: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     153: astore_3
     154: aload_3
     155: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     160: astore        4
     162: aload         4
     164: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     169: ifeq          193
     172: aload         4
     174: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     179: checkcast     #62                 // class org/yaml/snakeyaml/nodes/Node
     182: astore        5
     184: aload_0
     185: aload         5
     187: invokespecial #40                 // Method anchorNode:(Lorg/yaml/snakeyaml/nodes/Node;)V
     190: goto          162
     193: goto          269
     196: aload_1
     197: checkcast     #63                 // class org/yaml/snakeyaml/nodes/MappingNode
     200: astore        4
     202: aload         4
     204: invokevirtual #64                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     207: astore        5
     209: aload         5
     211: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     216: astore        6
     218: aload         6
     220: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     225: ifeq          269
     228: aload         6
     230: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     235: checkcast     #65                 // class org/yaml/snakeyaml/nodes/NodeTuple
     238: astore        7
     240: aload         7
     242: invokevirtual #66                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     245: astore        8
     247: aload         7
     249: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     252: astore        9
     254: aload_0
     255: aload         8
     257: invokespecial #40                 // Method anchorNode:(Lorg/yaml/snakeyaml/nodes/Node;)V
     260: aload_0
     261: aload         9
     263: invokespecial #40                 // Method anchorNode:(Lorg/yaml/snakeyaml/nodes/Node;)V
     266: goto          218
     269: return

  private void serializeNode(org.yaml.snakeyaml.nodes.Node, org.yaml.snakeyaml.nodes.Node) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
       4: getstatic     #46                 // Field org/yaml/snakeyaml/nodes/NodeId.anchor:Lorg/yaml/snakeyaml/nodes/NodeId;
       7: if_acmpne     18
      10: aload_1
      11: checkcast     #47                 // class org/yaml/snakeyaml/nodes/AnchorNode
      14: invokevirtual #48                 // Method org/yaml/snakeyaml/nodes/AnchorNode.getRealNode:()Lorg/yaml/snakeyaml/nodes/Node;
      17: astore_1
      18: aload_0
      19: getfield      #17                 // Field anchors:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #50,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #51                 // class java/lang/String
      31: astore_3
      32: aload_0
      33: getfield      #14                 // Field serializedNodes:Ljava/util/Set;
      36: aload_1
      37: invokeinterface #68,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      42: ifeq          67
      45: aload_0
      46: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
      49: new           #69                 // class org/yaml/snakeyaml/events/AliasEvent
      52: dup
      53: aload_3
      54: aconst_null
      55: aconst_null
      56: invokespecial #70                 // Method org/yaml/snakeyaml/events/AliasEvent."<init>":(Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;)V
      59: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
      64: goto          514
      67: aload_0
      68: getfield      #14                 // Field serializedNodes:Ljava/util/Set;
      71: aload_1
      72: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      77: pop
      78: getstatic     #55                 // Field org/yaml/snakeyaml/serializer/Serializer$1.$SwitchMap$org$yaml$snakeyaml$nodes$NodeId:[I
      81: aload_1
      82: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      85: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/NodeId.ordinal:()I
      88: iaload
      89: lookupswitch  { // 2
                     1: 230
                     3: 116
               default: 359
          }
     116: aload_1
     117: checkcast     #72                 // class org/yaml/snakeyaml/nodes/ScalarNode
     120: astore        4
     122: aload_0
     123: getfield      #3                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
     126: getstatic     #73                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
     129: aload         4
     131: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
     134: iconst_1
     135: invokevirtual #75                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
     138: astore        5
     140: aload_0
     141: getfield      #3                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
     144: getstatic     #73                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
     147: aload         4
     149: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
     152: iconst_0
     153: invokevirtual #75                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
     156: astore        6
     158: new           #76                 // class org/yaml/snakeyaml/events/ImplicitTuple
     161: dup
     162: aload_1
     163: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     166: aload         5
     168: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     171: aload_1
     172: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     175: aload         6
     177: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     180: invokespecial #79                 // Method org/yaml/snakeyaml/events/ImplicitTuple."<init>":(ZZ)V
     183: astore        7
     185: new           #80                 // class org/yaml/snakeyaml/events/ScalarEvent
     188: dup
     189: aload_3
     190: aload_1
     191: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     194: invokevirtual #81                 // Method org/yaml/snakeyaml/nodes/Tag.getValue:()Ljava/lang/String;
     197: aload         7
     199: aload         4
     201: invokevirtual #74                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getValue:()Ljava/lang/String;
     204: aconst_null
     205: aconst_null
     206: aload         4
     208: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getScalarStyle:()Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
     211: invokespecial #83                 // Method org/yaml/snakeyaml/events/ScalarEvent."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/yaml/snakeyaml/events/ImplicitTuple;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;)V
     214: astore        8
     216: aload_0
     217: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
     220: aload         8
     222: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     227: goto          514
     230: aload_1
     231: checkcast     #57                 // class org/yaml/snakeyaml/nodes/SequenceNode
     234: astore        9
     236: aload_1
     237: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     240: aload_0
     241: getfield      #3                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
     244: getstatic     #84                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     247: aconst_null
     248: iconst_1
     249: invokevirtual #75                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
     252: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     255: istore        10
     257: aload_0
     258: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
     261: new           #85                 // class org/yaml/snakeyaml/events/SequenceStartEvent
     264: dup
     265: aload_3
     266: aload_1
     267: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     270: invokevirtual #81                 // Method org/yaml/snakeyaml/nodes/Tag.getValue:()Ljava/lang/String;
     273: iload         10
     275: aconst_null
     276: aconst_null
     277: aload         9
     279: invokevirtual #86                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     282: invokespecial #87                 // Method org/yaml/snakeyaml/events/SequenceStartEvent."<init>":(Ljava/lang/String;Ljava/lang/String;ZLorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     285: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     290: aload         9
     292: invokevirtual #58                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     295: astore        11
     297: aload         11
     299: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     304: astore        12
     306: aload         12
     308: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     313: ifeq          338
     316: aload         12
     318: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     323: checkcast     #62                 // class org/yaml/snakeyaml/nodes/Node
     326: astore        13
     328: aload_0
     329: aload         13
     331: aload_1
     332: invokespecial #42                 // Method serializeNode:(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     335: goto          306
     338: aload_0
     339: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
     342: new           #88                 // class org/yaml/snakeyaml/events/SequenceEndEvent
     345: dup
     346: aconst_null
     347: aconst_null
     348: invokespecial #89                 // Method org/yaml/snakeyaml/events/SequenceEndEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;)V
     351: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     356: goto          514
     359: aload_0
     360: getfield      #3                  // Field resolver:Lorg/yaml/snakeyaml/resolver/Resolver;
     363: getstatic     #90                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     366: aconst_null
     367: iconst_1
     368: invokevirtual #75                 // Method org/yaml/snakeyaml/resolver/Resolver.resolve:(Lorg/yaml/snakeyaml/nodes/NodeId;Ljava/lang/String;Z)Lorg/yaml/snakeyaml/nodes/Tag;
     371: astore        12
     373: aload_1
     374: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     377: aload         12
     379: invokevirtual #78                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     382: istore        13
     384: aload_0
     385: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
     388: new           #91                 // class org/yaml/snakeyaml/events/MappingStartEvent
     391: dup
     392: aload_3
     393: aload_1
     394: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     397: invokevirtual #81                 // Method org/yaml/snakeyaml/nodes/Tag.getValue:()Ljava/lang/String;
     400: iload         13
     402: aconst_null
     403: aconst_null
     404: aload_1
     405: checkcast     #92                 // class org/yaml/snakeyaml/nodes/CollectionNode
     408: invokevirtual #93                 // Method org/yaml/snakeyaml/nodes/CollectionNode.getFlowStyle:()Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     411: invokespecial #94                 // Method org/yaml/snakeyaml/events/MappingStartEvent."<init>":(Ljava/lang/String;Ljava/lang/String;ZLorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     414: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     419: aload_1
     420: checkcast     #63                 // class org/yaml/snakeyaml/nodes/MappingNode
     423: astore        14
     425: aload         14
     427: invokevirtual #64                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     430: astore        15
     432: aload         15
     434: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     439: astore        16
     441: aload         16
     443: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     448: ifeq          496
     451: aload         16
     453: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     458: checkcast     #65                 // class org/yaml/snakeyaml/nodes/NodeTuple
     461: astore        17
     463: aload         17
     465: invokevirtual #66                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     468: astore        18
     470: aload         17
     472: invokevirtual #67                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     475: astore        19
     477: aload_0
     478: aload         18
     480: aload         14
     482: invokespecial #42                 // Method serializeNode:(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     485: aload_0
     486: aload         19
     488: aload         14
     490: invokespecial #42                 // Method serializeNode:(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     493: goto          441
     496: aload_0
     497: getfield      #2                  // Field emitter:Lorg/yaml/snakeyaml/emitter/Emitable;
     500: new           #95                 // class org/yaml/snakeyaml/events/MappingEndEvent
     503: dup
     504: aconst_null
     505: aconst_null
     506: invokespecial #96                 // Method org/yaml/snakeyaml/events/MappingEndEvent."<init>":(Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;)V
     509: invokeinterface #24,  2           // InterfaceMethod org/yaml/snakeyaml/emitter/Emitable.emit:(Lorg/yaml/snakeyaml/events/Event;)V
     514: return
}
