Compiled from "Representer.java"
public class org.yaml.snakeyaml.representer.Representer extends org.yaml.snakeyaml.representer.SafeRepresenter {
  protected java.util.Map<java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.TypeDescription> typeDefinitions;

  public org.yaml.snakeyaml.representer.Representer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/yaml/snakeyaml/representer/SafeRepresenter."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      11: aload_0
      12: getfield      #4                  // Field representers:Ljava/util/Map;
      15: aconst_null
      16: new           #5                  // class org/yaml/snakeyaml/representer/Representer$RepresentJavaBean
      19: dup
      20: aload_0
      21: invokespecial #6                  // Method org/yaml/snakeyaml/representer/Representer$RepresentJavaBean."<init>":(Lorg/yaml/snakeyaml/representer/Representer;)V
      24: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public org.yaml.snakeyaml.representer.Representer(org.yaml.snakeyaml.DumperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/yaml/snakeyaml/representer/SafeRepresenter."<init>":(Lorg/yaml/snakeyaml/DumperOptions;)V
       5: aload_0
       6: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       9: putfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      12: aload_0
      13: getfield      #4                  // Field representers:Ljava/util/Map;
      16: aconst_null
      17: new           #5                  // class org/yaml/snakeyaml/representer/Representer$RepresentJavaBean
      20: dup
      21: aload_0
      22: invokespecial #6                  // Method org/yaml/snakeyaml/representer/Representer$RepresentJavaBean."<init>":(Lorg/yaml/snakeyaml/representer/Representer;)V
      25: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: getstatic     #9                  // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
       3: aload_0
       4: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       7: if_acmpne     21
      10: aload_0
      11: new           #10                 // class java/util/HashMap
      14: dup
      15: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      18: putfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      21: aload_1
      22: invokevirtual #12                 // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      25: ifnull        41
      28: aload_0
      29: aload_1
      30: invokevirtual #13                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      33: aload_1
      34: invokevirtual #12                 // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      37: invokevirtual #14                 // Method addClassTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/Tag;
      40: pop
      41: aload_1
      42: aload_0
      43: invokevirtual #15                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      46: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      49: aload_0
      50: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      53: aload_1
      54: invokevirtual #13                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      57: aload_1
      58: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #17                 // class org/yaml/snakeyaml/TypeDescription
      66: areturn

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
       5: aload_0
       6: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       9: invokeinterface #19,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: astore_2
      15: aload_2
      16: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          51
      31: aload_3
      32: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #17                 // class org/yaml/snakeyaml/TypeDescription
      40: astore        4
      42: aload         4
      44: aload_1
      45: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.setPropertyUtils:(Lorg/yaml/snakeyaml/introspector/PropertyUtils;)V
      48: goto          22
      51: return

  protected org.yaml.snakeyaml.nodes.MappingNode representJavaBean(java.util.Set<org.yaml.snakeyaml.introspector.Property>, java.lang.Object);
    Code:
       0: new           #23                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #24,  1           // InterfaceMethod java/util/Set.size:()I
      10: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_0
      15: getfield      #26                 // Field classTags:Ljava/util/Map;
      18: aload_2
      19: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #29                 // class org/yaml/snakeyaml/nodes/Tag
      30: astore        5
      32: aload         5
      34: ifnull        42
      37: aload         5
      39: goto          53
      42: new           #29                 // class org/yaml/snakeyaml/nodes/Tag
      45: dup
      46: aload_2
      47: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokespecial #30                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      53: astore        4
      55: new           #31                 // class org/yaml/snakeyaml/nodes/MappingNode
      58: dup
      59: aload         4
      61: aload_3
      62: getstatic     #32                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      65: invokespecial #33                 // Method org/yaml/snakeyaml/nodes/MappingNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
      68: astore        6
      70: aload_0
      71: getfield      #34                 // Field representedObjects:Ljava/util/Map;
      74: aload_2
      75: aload         6
      77: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: getstatic     #35                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.FLOW:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      86: astore        7
      88: aload_1
      89: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      94: astore        8
      96: aload         8
      98: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          237
     106: aload         8
     108: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #37                 // class org/yaml/snakeyaml/introspector/Property
     116: astore        9
     118: aload         9
     120: aload_2
     121: invokevirtual #38                 // Method org/yaml/snakeyaml/introspector/Property.get:(Ljava/lang/Object;)Ljava/lang/Object;
     124: astore        10
     126: aload         10
     128: ifnonnull     135
     131: aconst_null
     132: goto          152
     135: aload_0
     136: getfield      #26                 // Field classTags:Ljava/util/Map;
     139: aload         10
     141: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     144: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #29                 // class org/yaml/snakeyaml/nodes/Tag
     152: astore        11
     154: aload_0
     155: aload_2
     156: aload         9
     158: aload         10
     160: aload         11
     162: invokevirtual #39                 // Method representJavaBeanProperty:(Ljava/lang/Object;Lorg/yaml/snakeyaml/introspector/Property;Ljava/lang/Object;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/NodeTuple;
     165: astore        12
     167: aload         12
     169: ifnonnull     175
     172: goto          96
     175: aload         12
     177: invokevirtual #40                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     180: checkcast     #41                 // class org/yaml/snakeyaml/nodes/ScalarNode
     183: invokevirtual #42                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     186: ifne          194
     189: getstatic     #43                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     192: astore        7
     194: aload         12
     196: invokevirtual #44                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     199: astore        13
     201: aload         13
     203: instanceof    #41                 // class org/yaml/snakeyaml/nodes/ScalarNode
     206: ifeq          220
     209: aload         13
     211: checkcast     #41                 // class org/yaml/snakeyaml/nodes/ScalarNode
     214: invokevirtual #42                 // Method org/yaml/snakeyaml/nodes/ScalarNode.isPlain:()Z
     217: ifne          225
     220: getstatic     #43                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.BLOCK:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     223: astore        7
     225: aload_3
     226: aload         12
     228: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     233: pop
     234: goto          96
     237: aload_0
     238: getfield      #46                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     241: getstatic     #32                 // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     244: if_acmpeq     259
     247: aload         6
     249: aload_0
     250: getfield      #46                 // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     253: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     256: goto          266
     259: aload         6
     261: aload         7
     263: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;)V
     266: aload         6
     268: areturn

  protected org.yaml.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object, org.yaml.snakeyaml.introspector.Property, java.lang.Object, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #48                 // Method org/yaml/snakeyaml/introspector/Property.getName:()Ljava/lang/String;
       5: invokevirtual #49                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       8: checkcast     #41                 // class org/yaml/snakeyaml/nodes/ScalarNode
      11: astore        5
      13: aload_0
      14: getfield      #34                 // Field representedObjects:Ljava/util/Map;
      17: aload_3
      18: invokeinterface #50,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      23: istore        6
      25: aload_0
      26: aload_3
      27: invokevirtual #49                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      30: astore        7
      32: aload_3
      33: ifnull        145
      36: iload         6
      38: ifne          145
      41: aload         7
      43: invokevirtual #51                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      46: astore        8
      48: aload         4
      50: ifnonnull     145
      53: aload         8
      55: getstatic     #52                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
      58: if_acmpne     89
      61: aload_2
      62: invokevirtual #53                 // Method org/yaml/snakeyaml/introspector/Property.getType:()Ljava/lang/Class;
      65: ldc_w         #54                 // class java/lang/Enum
      68: if_acmpeq     145
      71: aload_3
      72: instanceof    #54                 // class java/lang/Enum
      75: ifeq          145
      78: aload         7
      80: getstatic     #55                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
      83: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      86: goto          145
      89: aload         8
      91: getstatic     #57                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
      94: if_acmpne     137
      97: aload_2
      98: invokevirtual #53                 // Method org/yaml/snakeyaml/introspector/Property.getType:()Ljava/lang/Class;
     101: aload_3
     102: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: if_acmpne     137
     108: aload_3
     109: instanceof    #58                 // class java/util/Map
     112: ifne          137
     115: aload         7
     117: invokevirtual #59                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
     120: getstatic     #60                 // Field org/yaml/snakeyaml/nodes/Tag.SET:Lorg/yaml/snakeyaml/nodes/Tag;
     123: invokevirtual #61                 // Method org/yaml/snakeyaml/nodes/Tag.equals:(Ljava/lang/Object;)Z
     126: ifne          137
     129: aload         7
     131: getstatic     #62                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     134: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     137: aload_0
     138: aload_2
     139: aload         7
     141: aload_3
     142: invokevirtual #63                 // Method checkGlobalTag:(Lorg/yaml/snakeyaml/introspector/Property;Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/Object;)V
     145: new           #64                 // class org/yaml/snakeyaml/nodes/NodeTuple
     148: dup
     149: aload         5
     151: aload         7
     153: invokespecial #65                 // Method org/yaml/snakeyaml/nodes/NodeTuple."<init>":(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     156: areturn

  protected void checkGlobalTag(org.yaml.snakeyaml.introspector.Property, org.yaml.snakeyaml.nodes.Node, java.lang.Object);
    Code:
       0: aload_3
       1: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #66                 // Method java/lang/Class.isArray:()Z
       7: ifeq          24
      10: aload_3
      11: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #67                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      17: invokevirtual #68                 // Method java/lang/Class.isPrimitive:()Z
      20: ifeq          24
      23: return
      24: aload_1
      25: invokevirtual #69                 // Method org/yaml/snakeyaml/introspector/Property.getActualTypeArguments:()[Ljava/lang/Class;
      28: astore        4
      30: aload         4
      32: ifnull        411
      35: aload_2
      36: invokevirtual #51                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
      39: getstatic     #70                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
      42: if_acmpne     205
      45: aload         4
      47: iconst_0
      48: aaload
      49: astore        5
      51: aload_2
      52: checkcast     #71                 // class org/yaml/snakeyaml/nodes/SequenceNode
      55: astore        6
      57: getstatic     #72                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      60: astore        7
      62: aload_3
      63: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #66                 // Method java/lang/Class.isArray:()Z
      69: ifeq          87
      72: aload_3
      73: checkcast     #73                 // class "[Ljava/lang/Object;"
      76: checkcast     #73                 // class "[Ljava/lang/Object;"
      79: invokestatic  #74                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      82: astore        7
      84: goto          100
      87: aload_3
      88: instanceof    #75                 // class java/lang/Iterable
      91: ifeq          100
      94: aload_3
      95: checkcast     #75                 // class java/lang/Iterable
      98: astore        7
     100: aload         7
     102: invokeinterface #76,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     107: astore        8
     109: aload         8
     111: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     116: ifeq          202
     119: aload         6
     121: invokevirtual #77                 // Method org/yaml/snakeyaml/nodes/SequenceNode.getValue:()Ljava/util/List;
     124: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     129: astore        9
     131: aload         9
     133: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          202
     141: aload         9
     143: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #79                 // class org/yaml/snakeyaml/nodes/Node
     151: astore        10
     153: aload         8
     155: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     160: astore        11
     162: aload         11
     164: ifnull        199
     167: aload         5
     169: aload         11
     171: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     174: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     177: ifeq          199
     180: aload         10
     182: invokevirtual #51                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     185: getstatic     #57                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     188: if_acmpne     199
     191: aload         10
     193: getstatic     #62                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     196: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     199: goto          131
     202: goto          411
     205: aload_3
     206: instanceof    #81                 // class java/util/Set
     209: ifeq          327
     212: aload         4
     214: iconst_0
     215: aaload
     216: astore        5
     218: aload_2
     219: checkcast     #31                 // class org/yaml/snakeyaml/nodes/MappingNode
     222: astore        6
     224: aload         6
     226: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     229: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     234: astore        7
     236: aload_3
     237: checkcast     #81                 // class java/util/Set
     240: astore        8
     242: aload         8
     244: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     249: astore        9
     251: aload         9
     253: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     258: ifeq          324
     261: aload         9
     263: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     268: astore        10
     270: aload         7
     272: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     277: checkcast     #64                 // class org/yaml/snakeyaml/nodes/NodeTuple
     280: astore        11
     282: aload         11
     284: invokevirtual #40                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     287: astore        12
     289: aload         5
     291: aload         10
     293: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     296: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     299: ifeq          321
     302: aload         12
     304: invokevirtual #51                 // Method org/yaml/snakeyaml/nodes/Node.getNodeId:()Lorg/yaml/snakeyaml/nodes/NodeId;
     307: getstatic     #57                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     310: if_acmpne     321
     313: aload         12
     315: getstatic     #62                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
     318: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
     321: goto          251
     324: goto          411
     327: aload_3
     328: instanceof    #58                 // class java/util/Map
     331: ifeq          411
     334: aload         4
     336: iconst_0
     337: aaload
     338: astore        5
     340: aload         4
     342: iconst_1
     343: aaload
     344: astore        6
     346: aload_2
     347: checkcast     #31                 // class org/yaml/snakeyaml/nodes/MappingNode
     350: astore        7
     352: aload         7
     354: invokevirtual #82                 // Method org/yaml/snakeyaml/nodes/MappingNode.getValue:()Ljava/util/List;
     357: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     362: astore        8
     364: aload         8
     366: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     371: ifeq          411
     374: aload         8
     376: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     381: checkcast     #64                 // class org/yaml/snakeyaml/nodes/NodeTuple
     384: astore        9
     386: aload_0
     387: aload         5
     389: aload         9
     391: invokevirtual #40                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getKeyNode:()Lorg/yaml/snakeyaml/nodes/Node;
     394: invokespecial #84                 // Method resetTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)V
     397: aload_0
     398: aload         6
     400: aload         9
     402: invokevirtual #44                 // Method org/yaml/snakeyaml/nodes/NodeTuple.getValueNode:()Lorg/yaml/snakeyaml/nodes/Node;
     405: invokespecial #84                 // Method resetTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Node;)V
     408: goto          364
     411: return

  private void resetTag(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_2
       1: invokevirtual #59                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #85                 // Method org/yaml/snakeyaml/nodes/Tag.matches:(Ljava/lang/Class;)Z
      10: ifeq          40
      13: ldc_w         #54                 // class java/lang/Enum
      16: aload_1
      17: invokevirtual #86                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          33
      23: aload_2
      24: getstatic     #55                 // Field org/yaml/snakeyaml/nodes/Tag.STR:Lorg/yaml/snakeyaml/nodes/Tag;
      27: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      30: goto          40
      33: aload_2
      34: getstatic     #62                 // Field org/yaml/snakeyaml/nodes/Tag.MAP:Lorg/yaml/snakeyaml/nodes/Tag;
      37: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/Node.setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      40: return

  protected java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #50,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          30
      13: aload_0
      14: getfield      #3                  // Field typeDefinitions:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #17                 // class org/yaml/snakeyaml/TypeDescription
      26: invokevirtual #87                 // Method org/yaml/snakeyaml/TypeDescription.getProperties:()Ljava/util/Set;
      29: areturn
      30: aload_0
      31: invokevirtual #15                 // Method getPropertyUtils:()Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      34: aload_1
      35: invokevirtual #88                 // Method org/yaml/snakeyaml/introspector/PropertyUtils.getProperties:(Ljava/lang/Class;)Ljava/util/Set;
      38: areturn

  public void setTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #89                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.setTimeZone:(Ljava/util/TimeZone;)V
       5: return

  public java.util.TimeZone getTimeZone();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.getTimeZone:()Ljava/util/TimeZone;
       4: areturn

  public org.yaml.snakeyaml.nodes.Tag addClassTag(java.lang.Class, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #91                 // Method org/yaml/snakeyaml/representer/SafeRepresenter.addClassTag:(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)Lorg/yaml/snakeyaml/nodes/Tag;
       6: areturn
}
