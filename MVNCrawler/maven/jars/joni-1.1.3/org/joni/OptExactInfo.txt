Compiled from "OptExactInfo.java"
final class org.joni.OptExactInfo {
  static final int OPT_EXACT_MAXLEN;

  final org.joni.MinMaxLen mmd;

  final org.joni.OptAnchorInfo anchor;

  boolean reachEnd;

  boolean ignoreCase;

  int length;

  final byte[] s;

  private static final int COMP_EM_BASE;

  org.joni.OptExactInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/joni/MinMaxLen
       8: dup
       9: invokespecial #3                  // Method org/joni/MinMaxLen."<init>":()V
      12: putfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
      15: aload_0
      16: new           #5                  // class org/joni/OptAnchorInfo
      19: dup
      20: invokespecial #6                  // Method org/joni/OptAnchorInfo."<init>":()V
      23: putfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
      26: aload_0
      27: bipush        24
      29: newarray       byte
      31: putfield      #8                  // Field s:[B
      34: return

  boolean isFull();
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: bipush        24
       6: if_icmplt     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
       4: invokevirtual #10                 // Method org/joni/MinMaxLen.clear:()V
       7: aload_0
       8: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
      11: invokevirtual #11                 // Method org/joni/OptAnchorInfo.clear:()V
      14: aload_0
      15: iconst_0
      16: putfield      #12                 // Field reachEnd:Z
      19: aload_0
      20: iconst_0
      21: putfield      #13                 // Field ignoreCase:Z
      24: aload_0
      25: iconst_0
      26: putfield      #9                  // Field length:I
      29: aload_0
      30: getfield      #8                  // Field s:[B
      33: iconst_0
      34: iconst_0
      35: bastore
      36: return

  void copy(org.joni.OptExactInfo);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
       4: aload_1
       5: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
       8: invokevirtual #14                 // Method org/joni/MinMaxLen.copy:(Lorg/joni/MinMaxLen;)V
      11: aload_0
      12: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
      15: aload_1
      16: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
      19: invokevirtual #15                 // Method org/joni/OptAnchorInfo.copy:(Lorg/joni/OptAnchorInfo;)V
      22: aload_0
      23: aload_1
      24: getfield      #12                 // Field reachEnd:Z
      27: putfield      #12                 // Field reachEnd:Z
      30: aload_0
      31: aload_1
      32: getfield      #13                 // Field ignoreCase:Z
      35: putfield      #13                 // Field ignoreCase:Z
      38: aload_0
      39: aload_1
      40: getfield      #9                  // Field length:I
      43: putfield      #9                  // Field length:I
      46: aload_1
      47: getfield      #8                  // Field s:[B
      50: iconst_0
      51: aload_0
      52: getfield      #8                  // Field s:[B
      55: iconst_0
      56: bipush        24
      58: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: return

  void concat(org.joni.OptExactInfo, org.jcodings.Encoding);
    Code:
       0: aload_0
       1: getfield      #13                 // Field ignoreCase:Z
       4: ifne          31
       7: aload_1
       8: getfield      #13                 // Field ignoreCase:Z
      11: ifeq          31
      14: aload_0
      15: getfield      #9                  // Field length:I
      18: aload_1
      19: getfield      #9                  // Field length:I
      22: if_icmplt     26
      25: return
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field ignoreCase:Z
      31: iconst_0
      32: istore_3
      33: iload_3
      34: aload_1
      35: getfield      #9                  // Field length:I
      38: iadd
      39: istore        4
      41: aload_0
      42: getfield      #9                  // Field length:I
      45: istore        5
      47: iload_3
      48: iload         4
      50: if_icmpge     123
      53: aload_2
      54: aload_1
      55: getfield      #8                  // Field s:[B
      58: iload_3
      59: iload         4
      61: invokevirtual #17                 // Method org/jcodings/Encoding.length:([BII)I
      64: istore        6
      66: iload         5
      68: iload         6
      70: iadd
      71: bipush        24
      73: if_icmple     79
      76: goto          123
      79: iconst_0
      80: istore        7
      82: iload         7
      84: iload         6
      86: if_icmpge     120
      89: iload_3
      90: iload         4
      92: if_icmpge     120
      95: aload_0
      96: getfield      #8                  // Field s:[B
      99: iload         5
     101: iinc          5, 1
     104: aload_1
     105: getfield      #8                  // Field s:[B
     108: iload_3
     109: iinc          3, 1
     112: baload
     113: bastore
     114: iinc          7, 1
     117: goto          82
     120: goto          47
     123: aload_0
     124: iload         5
     126: putfield      #9                  // Field length:I
     129: aload_0
     130: iload_3
     131: iload         4
     133: if_icmpne     143
     136: aload_1
     137: getfield      #12                 // Field reachEnd:Z
     140: goto          144
     143: iconst_0
     144: putfield      #12                 // Field reachEnd:Z
     147: new           #5                  // class org/joni/OptAnchorInfo
     150: dup
     151: invokespecial #6                  // Method org/joni/OptAnchorInfo."<init>":()V
     154: astore        6
     156: aload         6
     158: aload_0
     159: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     162: aload_1
     163: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     166: iconst_1
     167: iconst_1
     168: invokevirtual #18                 // Method org/joni/OptAnchorInfo.concat:(Lorg/joni/OptAnchorInfo;Lorg/joni/OptAnchorInfo;II)V
     171: aload_1
     172: getfield      #12                 // Field reachEnd:Z
     175: ifne          184
     178: aload         6
     180: iconst_0
     181: putfield      #19                 // Field org/joni/OptAnchorInfo.rightAnchor:I
     184: aload_0
     185: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     188: aload         6
     190: invokevirtual #15                 // Method org/joni/OptAnchorInfo.copy:(Lorg/joni/OptAnchorInfo;)V
     193: return

  void concatStr(byte[], int, int, boolean, org.jcodings.Encoding);
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: istore        6
       6: iload_2
       7: iload_3
       8: if_icmpge     81
      11: iload         6
      13: bipush        24
      15: if_icmpge     81
      18: aload         5
      20: aload_1
      21: iload_2
      22: iload_3
      23: invokevirtual #17                 // Method org/jcodings/Encoding.length:([BII)I
      26: istore        7
      28: iload         6
      30: iload         7
      32: iadd
      33: bipush        24
      35: if_icmple     41
      38: goto          81
      41: iconst_0
      42: istore        8
      44: iload         8
      46: iload         7
      48: if_icmpge     78
      51: iload_2
      52: iload_3
      53: if_icmpge     78
      56: aload_0
      57: getfield      #8                  // Field s:[B
      60: iload         6
      62: iinc          6, 1
      65: aload_1
      66: iload_2
      67: iinc          2, 1
      70: baload
      71: bastore
      72: iinc          8, 1
      75: goto          44
      78: goto          6
      81: aload_0
      82: iload         6
      84: putfield      #9                  // Field length:I
      87: return

  void altMerge(org.joni.OptExactInfo, org.joni.OptEnvironment);
    Code:
       0: aload_1
       1: getfield      #9                  // Field length:I
       4: ifeq          14
       7: aload_0
       8: getfield      #9                  // Field length:I
      11: ifne          19
      14: aload_0
      15: invokevirtual #20                 // Method clear:()V
      18: return
      19: aload_0
      20: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
      23: aload_1
      24: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
      27: invokevirtual #21                 // Method org/joni/MinMaxLen.equal:(Lorg/joni/MinMaxLen;)Z
      30: ifne          38
      33: aload_0
      34: invokevirtual #20                 // Method clear:()V
      37: return
      38: iconst_0
      39: istore_3
      40: iload_3
      41: aload_0
      42: getfield      #9                  // Field length:I
      45: if_icmpge     150
      48: iload_3
      49: aload_1
      50: getfield      #9                  // Field length:I
      53: if_icmpge     150
      56: aload_0
      57: getfield      #8                  // Field s:[B
      60: iload_3
      61: baload
      62: aload_1
      63: getfield      #8                  // Field s:[B
      66: iload_3
      67: baload
      68: if_icmpeq     74
      71: goto          150
      74: aload_2
      75: getfield      #22                 // Field org/joni/OptEnvironment.enc:Lorg/jcodings/Encoding;
      78: aload_0
      79: getfield      #8                  // Field s:[B
      82: iload_3
      83: aload_0
      84: getfield      #9                  // Field length:I
      87: invokevirtual #17                 // Method org/jcodings/Encoding.length:([BII)I
      90: istore        4
      92: iconst_1
      93: istore        5
      95: iload         5
      97: iload         4
      99: if_icmpge     132
     102: aload_0
     103: getfield      #8                  // Field s:[B
     106: iload_3
     107: iload         5
     109: iadd
     110: baload
     111: aload_1
     112: getfield      #8                  // Field s:[B
     115: iload_3
     116: iload         5
     118: iadd
     119: baload
     120: if_icmpeq     126
     123: goto          132
     126: iinc          5, 1
     129: goto          95
     132: iload         5
     134: iload         4
     136: if_icmpge     142
     139: goto          150
     142: iload_3
     143: iload         4
     145: iadd
     146: istore_3
     147: goto          40
     150: aload_1
     151: getfield      #12                 // Field reachEnd:Z
     154: ifeq          173
     157: iload_3
     158: aload_1
     159: getfield      #9                  // Field length:I
     162: if_icmplt     173
     165: iload_3
     166: aload_0
     167: getfield      #9                  // Field length:I
     170: if_icmpge     178
     173: aload_0
     174: iconst_0
     175: putfield      #12                 // Field reachEnd:Z
     178: aload_0
     179: iload_3
     180: putfield      #9                  // Field length:I
     183: aload_0
     184: dup
     185: getfield      #13                 // Field ignoreCase:Z
     188: aload_1
     189: getfield      #13                 // Field ignoreCase:Z
     192: ior
     193: putfield      #13                 // Field ignoreCase:Z
     196: aload_0
     197: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     200: aload_1
     201: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     204: invokevirtual #23                 // Method org/joni/OptAnchorInfo.altMerge:(Lorg/joni/OptAnchorInfo;)V
     207: aload_0
     208: getfield      #12                 // Field reachEnd:Z
     211: ifne          222
     214: aload_0
     215: getfield      #7                  // Field anchor:Lorg/joni/OptAnchorInfo;
     218: iconst_0
     219: putfield      #19                 // Field org/joni/OptAnchorInfo.rightAnchor:I
     222: return

  void select(org.joni.OptExactInfo, org.jcodings.Encoding);
    Code:
       0: aload_0
       1: getfield      #9                  // Field length:I
       4: istore_3
       5: aload_1
       6: getfield      #9                  // Field length:I
       9: istore        4
      11: iload         4
      13: ifne          17
      16: return
      17: iload_3
      18: ifne          27
      21: aload_0
      22: aload_1
      23: invokevirtual #24                 // Method copy:(Lorg/joni/OptExactInfo;)V
      26: return
      27: iload_3
      28: iconst_2
      29: if_icmpgt     91
      32: iload         4
      34: iconst_2
      35: if_icmpgt     91
      38: aload_2
      39: aload_0
      40: getfield      #8                  // Field s:[B
      43: iconst_0
      44: baload
      45: sipush        255
      48: iand
      49: invokestatic  #25                 // Method org/joni/OptMapInfo.positionValue:(Lorg/jcodings/Encoding;I)I
      52: istore        4
      54: aload_2
      55: aload_1
      56: getfield      #8                  // Field s:[B
      59: iconst_0
      60: baload
      61: sipush        255
      64: iand
      65: invokestatic  #25                 // Method org/joni/OptMapInfo.positionValue:(Lorg/jcodings/Encoding;I)I
      68: istore_3
      69: aload_0
      70: getfield      #9                  // Field length:I
      73: iconst_1
      74: if_icmple     80
      77: iinc          3, 5
      80: aload_1
      81: getfield      #9                  // Field length:I
      84: iconst_1
      85: if_icmple     91
      88: iinc          4, 5
      91: aload_0
      92: getfield      #13                 // Field ignoreCase:Z
      95: ifne          102
      98: iload_3
      99: iconst_2
     100: imul
     101: istore_3
     102: aload_1
     103: getfield      #13                 // Field ignoreCase:Z
     106: ifne          115
     109: iload         4
     111: iconst_2
     112: imul
     113: istore        4
     115: aload_0
     116: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
     119: aload_1
     120: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
     123: iload_3
     124: iload         4
     126: invokevirtual #26                 // Method org/joni/MinMaxLen.compareDistanceValue:(Lorg/joni/MinMaxLen;II)I
     129: ifle          137
     132: aload_0
     133: aload_1
     134: invokevirtual #24                 // Method copy:(Lorg/joni/OptExactInfo;)V
     137: return

  int compare(org.joni.OptMapInfo);
    Code:
       0: aload_1
       1: getfield      #27                 // Field org/joni/OptMapInfo.value:I
       4: ifgt          9
       7: iconst_m1
       8: ireturn
       9: bipush        20
      11: aload_0
      12: getfield      #9                  // Field length:I
      15: imul
      16: aload_0
      17: getfield      #13                 // Field ignoreCase:Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_2
      28: imul
      29: istore_2
      30: sipush        200
      33: aload_1
      34: getfield      #27                 // Field org/joni/OptMapInfo.value:I
      37: idiv
      38: istore_3
      39: aload_0
      40: getfield      #4                  // Field mmd:Lorg/joni/MinMaxLen;
      43: aload_1
      44: getfield      #28                 // Field org/joni/OptMapInfo.mmd:Lorg/joni/MinMaxLen;
      47: iload_2
      48: iload_3
      49: invokevirtual #26                 // Method org/joni/MinMaxLen.compareDistanceValue:(Lorg/joni/MinMaxLen;II)I
      52: ireturn
}
