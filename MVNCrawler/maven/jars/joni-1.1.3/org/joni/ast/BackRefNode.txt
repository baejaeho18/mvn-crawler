Compiled from "BackRefNode.java"
public final class org.joni.ast.BackRefNode extends org.joni.ast.StateNode {
  public int backNum;

  public int[] back;

  public int nestLevel;

  public org.joni.ast.BackRefNode(int, int[], boolean, org.joni.ScanEnvironment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/joni/ast/StateNode."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field backNum:I
       9: iload_3
      10: ifeq          17
      13: aload_0
      14: invokevirtual #3                  // Method setNameRef:()V
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload_1
      23: if_icmpge     64
      26: aload_2
      27: iload         5
      29: iaload
      30: aload         4
      32: getfield      #4                  // Field org/joni/ScanEnvironment.numMem:I
      35: if_icmpgt     58
      38: aload         4
      40: getfield      #5                  // Field org/joni/ScanEnvironment.memNodes:[Lorg/joni/ast/Node;
      43: aload_2
      44: iload         5
      46: iaload
      47: aaload
      48: ifnonnull     58
      51: aload_0
      52: invokevirtual #6                  // Method setRecursion:()V
      55: goto          64
      58: iinc          5, 1
      61: goto          20
      64: aload_0
      65: iload_1
      66: newarray       int
      68: putfield      #7                  // Field back:[I
      71: aload_2
      72: iconst_0
      73: aload_0
      74: getfield      #7                  // Field back:[I
      77: iconst_0
      78: iload_1
      79: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: return

  public org.joni.ast.BackRefNode(int, int[], boolean, boolean, int, org.joni.ScanEnvironment);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         6
       6: invokespecial #9                  // Method "<init>":(I[IZLorg/joni/ScanEnvironment;)V
       9: iload         4
      11: ifeq          24
      14: aload_0
      15: invokevirtual #10                 // Method setNestLevel:()V
      18: aload_0
      19: iload         5
      21: putfield      #11                 // Field nestLevel:I
      24: return

  public int getType();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String getName();
    Code:
       0: ldc           #12                 // String Back Ref
       2: areturn

  public java.lang.String toString(int);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #14                 // Method org/joni/ast/StateNode.toString:(I)Ljava/lang/String;
       9: invokespecial #15                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      12: astore_2
      13: aload_2
      14: new           #13                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #17                 // String \n  backNum:
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #2                  // Field backNum:I
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: ldc           #21                 // String
      42: astore_3
      43: iconst_0
      44: istore        4
      46: iload         4
      48: aload_0
      49: getfield      #7                  // Field back:[I
      52: arraylength
      53: if_icmpge     92
      56: new           #13                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_3
      64: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #7                  // Field back:[I
      71: iload         4
      73: iaload
      74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: ldc           #22                 // String ,
      79: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: astore_3
      86: iinc          4, 1
      89: goto          46
      92: aload_2
      93: new           #13                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #23                 // String \n  back:
     102: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_3
     106: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: pop
     116: aload_2
     117: new           #13                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #24                 // String \n  nextLevel:
     126: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: getfield      #11                 // Field nestLevel:I
     133: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: aload_2
     144: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: areturn

  public void renumber(int[]);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method isNameRef:()Z
       4: ifne          17
       7: new           #26                 // class org/joni/exception/ValueException
      10: dup
      11: ldc           #27                 // String numbered backref/call is not allowed. (use name)
      13: invokespecial #28                 // Method org/joni/exception/ValueException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field backNum:I
      21: istore_2
      22: iconst_0
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_2
      30: if_icmpge     66
      33: aload_1
      34: aload_0
      35: getfield      #7                  // Field back:[I
      38: iload         4
      40: iaload
      41: iaload
      42: istore        5
      44: iload         5
      46: ifle          60
      49: aload_0
      50: getfield      #7                  // Field back:[I
      53: iload_3
      54: iload         5
      56: iastore
      57: iinc          3, 1
      60: iinc          4, 1
      63: goto          27
      66: aload_0
      67: iload_3
      68: putfield      #2                  // Field backNum:I
      71: return
}
