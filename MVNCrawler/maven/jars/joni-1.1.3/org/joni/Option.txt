Compiled from "Option.java"
public class org.joni.Option {
  public static final int NONE;

  public static final int IGNORECASE;

  public static final int EXTEND;

  public static final int MULTILINE;

  public static final int SINGLELINE;

  public static final int FIND_LONGEST;

  public static final int FIND_NOT_EMPTY;

  public static final int NEGATE_SINGLELINE;

  public static final int DONT_CAPTURE_GROUP;

  public static final int CAPTURE_GROUP;

  public static final int NOTBOL;

  public static final int NOTEOL;

  public static final int POSIX_REGION;

  public static final int MAXBIT;

  public static final int DEFAULT;

  public org.joni.Option();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String toString(int);
    Code:
       0: ldc           #2                  // String
       2: astore_1
       3: iload_0
       4: invokestatic  #3                  // Method isIgnoreCase:(I)Z
       7: ifeq          30
      10: new           #4                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #7                  // String IGNORECASE
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_1
      30: iload_0
      31: invokestatic  #9                  // Method isExtend:(I)Z
      34: ifeq          57
      37: new           #4                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #10                 // String EXTEND
      50: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: astore_1
      57: iload_0
      58: invokestatic  #11                 // Method isMultiline:(I)Z
      61: ifeq          84
      64: new           #4                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      71: aload_1
      72: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #12                 // String MULTILINE
      77: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: astore_1
      84: iload_0
      85: invokestatic  #13                 // Method isSingleline:(I)Z
      88: ifeq          111
      91: new           #4                  // class java/lang/StringBuilder
      94: dup
      95: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      98: aload_1
      99: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #14                 // String SINGLELINE
     104: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: astore_1
     111: iload_0
     112: invokestatic  #15                 // Method isFindLongest:(I)Z
     115: ifeq          138
     118: new           #4                  // class java/lang/StringBuilder
     121: dup
     122: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     125: aload_1
     126: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #16                 // String FIND_LONGEST
     131: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: astore_1
     138: iload_0
     139: invokestatic  #17                 // Method isFindNotEmpty:(I)Z
     142: ifeq          165
     145: new           #4                  // class java/lang/StringBuilder
     148: dup
     149: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     152: aload_1
     153: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: ldc           #18                 // String FIND_NOT_EMPTY
     158: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: astore_1
     165: iload_0
     166: invokestatic  #19                 // Method isNegateSingleline:(I)Z
     169: ifeq          192
     172: new           #4                  // class java/lang/StringBuilder
     175: dup
     176: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     179: aload_1
     180: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: ldc           #20                 // String NEGATE_SINGLELINE
     185: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: astore_1
     192: iload_0
     193: invokestatic  #21                 // Method isDontCaptureGroup:(I)Z
     196: ifeq          219
     199: new           #4                  // class java/lang/StringBuilder
     202: dup
     203: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     206: aload_1
     207: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: ldc           #22                 // String DONT_CAPTURE_GROUP
     212: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: astore_1
     219: iload_0
     220: invokestatic  #23                 // Method isCaptureGroup:(I)Z
     223: ifeq          246
     226: new           #4                  // class java/lang/StringBuilder
     229: dup
     230: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     233: aload_1
     234: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #24                 // String CAPTURE_GROUP
     239: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: astore_1
     246: iload_0
     247: invokestatic  #25                 // Method isNotBol:(I)Z
     250: ifeq          273
     253: new           #4                  // class java/lang/StringBuilder
     256: dup
     257: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     260: aload_1
     261: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: ldc           #26                 // String NOTBOL
     266: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     272: astore_1
     273: iload_0
     274: invokestatic  #27                 // Method isNotEol:(I)Z
     277: ifeq          300
     280: new           #4                  // class java/lang/StringBuilder
     283: dup
     284: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     287: aload_1
     288: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: ldc           #28                 // String NOTEOL
     293: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     296: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     299: astore_1
     300: iload_0
     301: invokestatic  #29                 // Method isPosixRegion:(I)Z
     304: ifeq          327
     307: new           #4                  // class java/lang/StringBuilder
     310: dup
     311: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     314: aload_1
     315: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     318: ldc           #30                 // String POSIX_REGION
     320: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     323: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     326: astore_1
     327: aload_1
     328: areturn

  public static boolean isIgnoreCase(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iand
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static boolean isExtend(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iand
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static boolean isSingleline(int);
    Code:
       0: iload_0
       1: bipush        8
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isMultiline(int);
    Code:
       0: iload_0
       1: iconst_4
       2: iand
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static boolean isFindLongest(int);
    Code:
       0: iload_0
       1: bipush        16
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isFindNotEmpty(int);
    Code:
       0: iload_0
       1: bipush        32
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isFindCondition(int);
    Code:
       0: iload_0
       1: bipush        48
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isNegateSingleline(int);
    Code:
       0: iload_0
       1: bipush        64
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isDontCaptureGroup(int);
    Code:
       0: iload_0
       1: sipush        128
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isCaptureGroup(int);
    Code:
       0: iload_0
       1: sipush        256
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isNotBol(int);
    Code:
       0: iload_0
       1: sipush        512
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isNotEol(int);
    Code:
       0: iload_0
       1: sipush        1024
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isPosixRegion(int);
    Code:
       0: iload_0
       1: sipush        2048
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isDynamic(int);
    Code:
       0: iconst_0
       1: ireturn
}
