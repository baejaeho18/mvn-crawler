Compiled from "StackMachine.java"
abstract class org.joni.StackMachine extends org.joni.Matcher implements org.joni.constants.StackType {
  protected static final int INVALID_INDEX;

  protected org.joni.StackEntry[] stack;

  protected int stk;

  protected final int[] repeatStk;

  protected final int memStartStk;

  protected final int memEndStk;

  protected byte[] stateCheckBuff;

  int stateCheckBuffSize;

  static final java.lang.ThreadLocal<java.lang.ref.WeakReference<org.joni.StackEntry[]>> stacks;

  private static final int STATE_CHECK_BUFF_MALLOC_THRESHOLD_SIZE;

  protected org.joni.StackMachine(org.joni.Regex, byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method org/joni/Matcher."<init>":(Lorg/joni/Regex;[BII)V
       9: aload_0
      10: aload_1
      11: getfield      #3                  // Field org/joni/Regex.stackNeeded:Z
      14: ifeq          23
      17: invokestatic  #4                  // Method fetchStack:()[Lorg/joni/StackEntry;
      20: goto          24
      23: aconst_null
      24: putfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      27: aload_1
      28: getfield      #6                  // Field org/joni/Regex.numRepeat:I
      31: aload_1
      32: getfield      #7                  // Field org/joni/Regex.numMem:I
      35: iconst_1
      36: ishl
      37: iadd
      38: istore        5
      40: aload_0
      41: iload         5
      43: ifle          53
      46: iload         5
      48: newarray       int
      50: goto          54
      53: aconst_null
      54: putfield      #8                  // Field repeatStk:[I
      57: aload_0
      58: aload_1
      59: getfield      #6                  // Field org/joni/Regex.numRepeat:I
      62: iconst_1
      63: isub
      64: putfield      #9                  // Field memStartStk:I
      67: aload_0
      68: aload_0
      69: getfield      #9                  // Field memStartStk:I
      72: aload_1
      73: getfield      #7                  // Field org/joni/Regex.numMem:I
      76: iadd
      77: putfield      #10                 // Field memEndStk:I
      80: return

  private static org.joni.StackEntry[] allocateStack();
    Code:
       0: bipush        64
       2: anewarray     #11                 // class org/joni/StackEntry
       5: astore_0
       6: aload_0
       7: iconst_0
       8: new           #11                 // class org/joni/StackEntry
      11: dup
      12: invokespecial #12                 // Method org/joni/StackEntry."<init>":()V
      15: aastore
      16: aload_0
      17: areturn

  private void doubleStack();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: arraylength
       5: iconst_1
       6: ishl
       7: anewarray     #11                 // class org/joni/StackEntry
      10: astore_1
      11: aload_0
      12: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      15: iconst_0
      16: aload_1
      17: iconst_0
      18: aload_0
      19: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      22: arraylength
      23: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload_0
      27: aload_1
      28: putfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      31: return

  private static org.joni.StackEntry[] fetchStack();
    Code:
       0: getstatic     #14                 // Field stacks:Ljava/lang/ThreadLocal;
       3: invokevirtual #15                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #16                 // class java/lang/ref/WeakReference
       9: astore_0
      10: aload_0
      11: invokevirtual #17                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      14: checkcast     #18                 // class "[Lorg/joni/StackEntry;"
      17: astore_1
      18: aload_1
      19: ifnonnull     42
      22: new           #16                 // class java/lang/ref/WeakReference
      25: dup
      26: invokestatic  #1                  // Method allocateStack:()[Lorg/joni/StackEntry;
      29: dup
      30: astore_1
      31: invokespecial #19                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      34: astore_0
      35: getstatic     #14                 // Field stacks:Ljava/lang/ThreadLocal;
      38: aload_0
      39: invokevirtual #20                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      42: aload_1
      43: areturn

  protected final void init();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: ifnull        21
       7: aload_0
       8: iconst_1
       9: aload_0
      10: getfield      #21                 // Field regex:Lorg/joni/Regex;
      13: getfield      #22                 // Field org/joni/Regex.codeLength:I
      16: iconst_1
      17: isub
      18: invokevirtual #23                 // Method pushEnsured:(II)V
      21: aload_0
      22: getfield      #8                  // Field repeatStk:[I
      25: ifnull        71
      28: iconst_1
      29: istore_1
      30: iload_1
      31: aload_0
      32: getfield      #21                 // Field regex:Lorg/joni/Regex;
      35: getfield      #7                  // Field org/joni/Regex.numMem:I
      38: if_icmpgt     71
      41: aload_0
      42: getfield      #8                  // Field repeatStk:[I
      45: iload_1
      46: aload_0
      47: getfield      #9                  // Field memStartStk:I
      50: iadd
      51: aload_0
      52: getfield      #8                  // Field repeatStk:[I
      55: iload_1
      56: aload_0
      57: getfield      #10                 // Field memEndStk:I
      60: iadd
      61: iconst_m1
      62: dup_x2
      63: iastore
      64: iastore
      65: iinc          1, 1
      68: goto          30
      71: return

  protected final org.joni.StackEntry ensure1();
    Code:
       0: aload_0
       1: getfield      #24                 // Field stk:I
       4: aload_0
       5: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokespecial #25                 // Method doubleStack:()V
      16: aload_0
      17: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      20: aload_0
      21: getfield      #24                 // Field stk:I
      24: aaload
      25: astore_1
      26: aload_1
      27: ifnonnull     48
      30: aload_0
      31: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      34: aload_0
      35: getfield      #24                 // Field stk:I
      38: new           #11                 // class org/joni/StackEntry
      41: dup
      42: invokespecial #12                 // Method org/joni/StackEntry."<init>":()V
      45: dup
      46: astore_1
      47: aastore
      48: aload_1
      49: areturn

  protected final void pushType(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: iload_1
       5: putfield      #27                 // Field org/joni/StackEntry.type:I
       8: aload_0
       9: dup
      10: getfield      #24                 // Field stk:I
      13: iconst_1
      14: iadd
      15: putfield      #24                 // Field stk:I
      18: return

  private int stateCheckPos(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #28                 // Field str:I
       5: isub
       6: aload_0
       7: getfield      #21                 // Field regex:Lorg/joni/Regex;
      10: getfield      #29                 // Field org/joni/Regex.numCombExpCheck:I
      13: imul
      14: iload_2
      15: iconst_1
      16: isub
      17: iadd
      18: ireturn

  protected final boolean stateCheckVal(int, int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field stateCheckBuff:[B
       4: ifnull        39
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #31                 // Method stateCheckPos:(II)I
      13: istore_3
      14: aload_0
      15: getfield      #30                 // Field stateCheckBuff:[B
      18: iload_3
      19: bipush        8
      21: idiv
      22: baload
      23: iconst_1
      24: iload_3
      25: bipush        8
      27: irem
      28: ishl
      29: iand
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn
      39: iconst_0
      40: ireturn

  private void stateCheckMark();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: aload_0
       5: getfield      #24                 // Field stk:I
       8: aaload
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokevirtual #32                 // Method org/joni/StackEntry.getStatePStr:()I
      15: aload_1
      16: invokevirtual #33                 // Method org/joni/StackEntry.getStateCheck:()I
      19: invokespecial #31                 // Method stateCheckPos:(II)I
      22: istore_2
      23: aload_0
      24: getfield      #30                 // Field stateCheckBuff:[B
      27: iload_2
      28: bipush        8
      30: idiv
      31: dup2
      32: baload
      33: iconst_1
      34: iload_2
      35: bipush        8
      37: irem
      38: ishl
      39: ior
      40: i2b
      41: bastore
      42: return

  protected final void stateCheckBuffInit(int, int, int);
    Code:
       0: iload_3
       1: ifle          108
       4: iload_1
       5: bipush        7
       7: if_icmplt     108
      10: iload_1
      11: iconst_1
      12: iadd
      13: iload_3
      14: imul
      15: bipush        7
      17: iadd
      18: iconst_3
      19: iushr
      20: istore        4
      22: iload_2
      23: iload_3
      24: imul
      25: iconst_3
      26: iushr
      27: istore_2
      28: iload         4
      30: ifle          95
      33: iload_2
      34: iload         4
      36: if_icmpge     95
      39: iload         4
      41: sipush        16384
      44: if_icmpge     95
      47: iload         4
      49: bipush        16
      51: if_icmplt     65
      54: aload_0
      55: iload         4
      57: newarray       byte
      59: putfield      #30                 // Field stateCheckBuff:[B
      62: goto          73
      65: aload_0
      66: iload         4
      68: newarray       byte
      70: putfield      #30                 // Field stateCheckBuff:[B
      73: aload_0
      74: getfield      #30                 // Field stateCheckBuff:[B
      77: iload_2
      78: iload         4
      80: iload_2
      81: isub
      82: iconst_0
      83: invokestatic  #34                 // Method java/util/Arrays.fill:([BIIB)V
      86: aload_0
      87: iload         4
      89: putfield      #35                 // Field stateCheckBuffSize:I
      92: goto          105
      95: aload_0
      96: aconst_null
      97: putfield      #30                 // Field stateCheckBuff:[B
     100: aload_0
     101: iconst_0
     102: putfield      #35                 // Field stateCheckBuffSize:I
     105: goto          118
     108: aload_0
     109: aconst_null
     110: putfield      #30                 // Field stateCheckBuff:[B
     113: aload_0
     114: iconst_0
     115: putfield      #35                 // Field stateCheckBuffSize:I
     118: return

  protected final void stateCheckBuffClear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #30                 // Field stateCheckBuff:[B
       5: aload_0
       6: iconst_0
       7: putfield      #35                 // Field stateCheckBuffSize:I
      10: return

  private void push(int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore        5
       6: aload         5
       8: iload_1
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload         5
      14: iload_2
      15: invokevirtual #36                 // Method org/joni/StackEntry.setStatePCode:(I)V
      18: aload         5
      20: iload_3
      21: invokevirtual #37                 // Method org/joni/StackEntry.setStatePStr:(I)V
      24: aload         5
      26: iload         4
      28: invokevirtual #38                 // Method org/joni/StackEntry.setStatePStrPrev:(I)V
      31: aload_0
      32: dup
      33: getfield      #24                 // Field stk:I
      36: iconst_1
      37: iadd
      38: putfield      #24                 // Field stk:I
      41: return

  protected final void pushEnsured(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: aload_0
       5: getfield      #24                 // Field stk:I
       8: aaload
       9: astore_3
      10: aload_3
      11: iload_1
      12: putfield      #27                 // Field org/joni/StackEntry.type:I
      15: aload_3
      16: iload_2
      17: invokevirtual #36                 // Method org/joni/StackEntry.setStatePCode:(I)V
      20: aload_0
      21: dup
      22: getfield      #24                 // Field stk:I
      25: iconst_1
      26: iadd
      27: putfield      #24                 // Field stk:I
      30: return

  protected final void pushAltWithStateCheck(int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore        5
       6: aload         5
       8: iconst_1
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload         5
      14: iload_1
      15: invokevirtual #36                 // Method org/joni/StackEntry.setStatePCode:(I)V
      18: aload         5
      20: iload_2
      21: invokevirtual #37                 // Method org/joni/StackEntry.setStatePStr:(I)V
      24: aload         5
      26: iload_3
      27: invokevirtual #38                 // Method org/joni/StackEntry.setStatePStrPrev:(I)V
      30: aload_0
      31: dup
      32: getfield      #24                 // Field stk:I
      35: iconst_1
      36: iadd
      37: putfield      #24                 // Field stk:I
      40: return

  protected final void pushStateCheck(int, int);
    Code:
       0: aload_0
       1: getfield      #30                 // Field stateCheckBuff:[B
       4: ifnull        39
       7: aload_0
       8: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
      11: astore_3
      12: aload_3
      13: sipush        4096
      16: putfield      #27                 // Field org/joni/StackEntry.type:I
      19: aload_3
      20: iload_1
      21: invokevirtual #37                 // Method org/joni/StackEntry.setStatePStr:(I)V
      24: aload_3
      25: iload_2
      26: invokevirtual #39                 // Method org/joni/StackEntry.setStateCheck:(I)V
      29: aload_0
      30: dup
      31: getfield      #24                 // Field stk:I
      34: iconst_1
      35: iadd
      36: putfield      #24                 // Field stk:I
      39: return

  protected final void pushAlt(int, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: iload_2
       4: iload_3
       5: invokespecial #40                 // Method push:(IIII)V
       8: return

  protected final void pushPos(int, int);
    Code:
       0: aload_0
       1: sipush        1280
       4: iconst_m1
       5: iload_1
       6: iload_2
       7: invokespecial #40                 // Method push:(IIII)V
      10: return

  protected final void pushPosNot(int, int, int);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: iload_2
       4: iload_3
       5: invokespecial #40                 // Method push:(IIII)V
       8: return

  protected final void pushStopBT();
    Code:
       0: aload_0
       1: sipush        1536
       4: invokevirtual #41                 // Method pushType:(I)V
       7: return

  protected final void pushLookBehindNot(int, int, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: iload_2
       4: iload_3
       5: invokespecial #40                 // Method push:(IIII)V
       8: return

  protected final void pushRepeat(int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_3
       5: aload_3
       6: sipush        1792
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_3
      13: iload_1
      14: invokevirtual #42                 // Method org/joni/StackEntry.setRepeatNum:(I)V
      17: aload_3
      18: iload_2
      19: invokevirtual #43                 // Method org/joni/StackEntry.setRepeatPCode:(I)V
      22: aload_3
      23: iconst_0
      24: invokevirtual #44                 // Method org/joni/StackEntry.setRepeatCount:(I)V
      27: aload_0
      28: dup
      29: getfield      #24                 // Field stk:I
      32: iconst_1
      33: iadd
      34: putfield      #24                 // Field stk:I
      37: return

  protected final void pushRepeatInc(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_2
       5: aload_2
       6: sipush        768
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_2
      13: iload_1
      14: invokevirtual #45                 // Method org/joni/StackEntry.setSi:(I)V
      17: aload_0
      18: dup
      19: getfield      #24                 // Field stk:I
      22: iconst_1
      23: iadd
      24: putfield      #24                 // Field stk:I
      27: return

  protected final void pushMemStart(int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_3
       5: aload_3
       6: sipush        256
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_3
      13: iload_1
      14: invokevirtual #46                 // Method org/joni/StackEntry.setMemNum:(I)V
      17: aload_3
      18: iload_2
      19: invokevirtual #47                 // Method org/joni/StackEntry.setMemPstr:(I)V
      22: aload_3
      23: aload_0
      24: getfield      #8                  // Field repeatStk:[I
      27: aload_0
      28: getfield      #9                  // Field memStartStk:I
      31: iload_1
      32: iadd
      33: iaload
      34: invokevirtual #48                 // Method org/joni/StackEntry.setMemStart:(I)V
      37: aload_3
      38: aload_0
      39: getfield      #8                  // Field repeatStk:[I
      42: aload_0
      43: getfield      #10                 // Field memEndStk:I
      46: iload_1
      47: iadd
      48: iaload
      49: invokevirtual #49                 // Method org/joni/StackEntry.setMemEnd:(I)V
      52: aload_0
      53: getfield      #8                  // Field repeatStk:[I
      56: aload_0
      57: getfield      #9                  // Field memStartStk:I
      60: iload_1
      61: iadd
      62: aload_0
      63: getfield      #24                 // Field stk:I
      66: iastore
      67: aload_0
      68: getfield      #8                  // Field repeatStk:[I
      71: aload_0
      72: getfield      #10                 // Field memEndStk:I
      75: iload_1
      76: iadd
      77: iconst_m1
      78: iastore
      79: aload_0
      80: dup
      81: getfield      #24                 // Field stk:I
      84: iconst_1
      85: iadd
      86: putfield      #24                 // Field stk:I
      89: return

  protected final void pushMemEnd(int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_3
       5: aload_3
       6: ldc           #50                 // int 33280
       8: putfield      #27                 // Field org/joni/StackEntry.type:I
      11: aload_3
      12: iload_1
      13: invokevirtual #46                 // Method org/joni/StackEntry.setMemNum:(I)V
      16: aload_3
      17: iload_2
      18: invokevirtual #47                 // Method org/joni/StackEntry.setMemPstr:(I)V
      21: aload_3
      22: aload_0
      23: getfield      #8                  // Field repeatStk:[I
      26: aload_0
      27: getfield      #9                  // Field memStartStk:I
      30: iload_1
      31: iadd
      32: iaload
      33: invokevirtual #48                 // Method org/joni/StackEntry.setMemStart:(I)V
      36: aload_3
      37: aload_0
      38: getfield      #8                  // Field repeatStk:[I
      41: aload_0
      42: getfield      #10                 // Field memEndStk:I
      45: iload_1
      46: iadd
      47: iaload
      48: invokevirtual #49                 // Method org/joni/StackEntry.setMemEnd:(I)V
      51: aload_0
      52: getfield      #8                  // Field repeatStk:[I
      55: aload_0
      56: getfield      #10                 // Field memEndStk:I
      59: iload_1
      60: iadd
      61: aload_0
      62: getfield      #24                 // Field stk:I
      65: iastore
      66: aload_0
      67: dup
      68: getfield      #24                 // Field stk:I
      71: iconst_1
      72: iadd
      73: putfield      #24                 // Field stk:I
      76: return

  protected final void pushMemEndMark(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_2
       5: aload_2
       6: ldc           #51                 // int 33792
       8: putfield      #27                 // Field org/joni/StackEntry.type:I
      11: aload_2
      12: iload_1
      13: invokevirtual #46                 // Method org/joni/StackEntry.setMemNum:(I)V
      16: aload_0
      17: dup
      18: getfield      #24                 // Field stk:I
      21: iconst_1
      22: iadd
      23: putfield      #24                 // Field stk:I
      26: return

  protected final int getMemStart(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #24                 // Field stk:I
       6: istore_3
       7: iload_3
       8: ifle          81
      11: iinc          3, -1
      14: aload_0
      15: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      18: iload_3
      19: aaload
      20: astore        4
      22: aload         4
      24: getfield      #27                 // Field org/joni/StackEntry.type:I
      27: ldc           #52                 // int 32768
      29: iand
      30: ifeq          48
      33: aload         4
      35: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      38: iload_1
      39: if_icmpne     48
      42: iinc          2, 1
      45: goto          78
      48: aload         4
      50: getfield      #27                 // Field org/joni/StackEntry.type:I
      53: sipush        256
      56: if_icmpne     78
      59: aload         4
      61: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      64: iload_1
      65: if_icmpne     78
      68: iload_2
      69: ifne          75
      72: goto          81
      75: iinc          2, -1
      78: goto          7
      81: iload_3
      82: ireturn

  protected final void pushNullCheckStart(int, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_3
       5: aload_3
       6: sipush        12288
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_3
      13: iload_1
      14: invokevirtual #54                 // Method org/joni/StackEntry.setNullCheckNum:(I)V
      17: aload_3
      18: iload_2
      19: invokevirtual #55                 // Method org/joni/StackEntry.setNullCheckPStr:(I)V
      22: aload_0
      23: dup
      24: getfield      #24                 // Field stk:I
      27: iconst_1
      28: iadd
      29: putfield      #24                 // Field stk:I
      32: return

  protected final void pushNullCheckEnd(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_2
       5: aload_2
       6: sipush        20480
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_2
      13: iload_1
      14: invokevirtual #54                 // Method org/joni/StackEntry.setNullCheckNum:(I)V
      17: aload_0
      18: dup
      19: getfield      #24                 // Field stk:I
      22: iconst_1
      23: iadd
      24: putfield      #24                 // Field stk:I
      27: return

  protected final void pushCallFrame(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_2
       5: aload_2
       6: sipush        2048
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_2
      13: iload_1
      14: invokevirtual #56                 // Method org/joni/StackEntry.setCallFrameRetAddr:(I)V
      17: aload_0
      18: dup
      19: getfield      #24                 // Field stk:I
      22: iconst_1
      23: iadd
      24: putfield      #24                 // Field stk:I
      27: return

  protected final void pushReturn();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method ensure1:()Lorg/joni/StackEntry;
       4: astore_1
       5: aload_1
       6: sipush        2304
       9: putfield      #27                 // Field org/joni/StackEntry.type:I
      12: aload_0
      13: dup
      14: getfield      #24                 // Field stk:I
      17: iconst_1
      18: iadd
      19: putfield      #24                 // Field stk:I
      22: return

  protected final void popOne();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field stk:I
       5: iconst_1
       6: isub
       7: putfield      #24                 // Field stk:I
      10: return

  protected final org.joni.StackEntry pop();
    Code:
       0: aload_0
       1: getfield      #21                 // Field regex:Lorg/joni/Regex;
       4: getfield      #57                 // Field org/joni/Regex.stackPopLevel:I
       7: lookupswitch  { // 2
                     0: 32
                     1: 37
               default: 42
          }
      32: aload_0
      33: invokespecial #58                 // Method popFree:()Lorg/joni/StackEntry;
      36: areturn
      37: aload_0
      38: invokespecial #59                 // Method popMemStart:()Lorg/joni/StackEntry;
      41: areturn
      42: aload_0
      43: invokespecial #60                 // Method popDefault:()Lorg/joni/StackEntry;
      46: areturn

  private org.joni.StackEntry popFree();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: aload_0
       5: dup
       6: getfield      #24                 // Field stk:I
       9: iconst_1
      10: isub
      11: dup_x1
      12: putfield      #24                 // Field stk:I
      15: aaload
      16: astore_1
      17: aload_1
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        255
      24: iand
      25: ifeq          30
      28: aload_1
      29: areturn
      30: goto          0

  private org.joni.StackEntry popMemStart();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: aload_0
       5: dup
       6: getfield      #24                 // Field stk:I
       9: iconst_1
      10: isub
      11: dup_x1
      12: putfield      #24                 // Field stk:I
      15: aaload
      16: astore_1
      17: aload_1
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        255
      24: iand
      25: ifeq          30
      28: aload_1
      29: areturn
      30: aload_1
      31: getfield      #27                 // Field org/joni/StackEntry.type:I
      34: sipush        256
      37: if_icmpne     76
      40: aload_0
      41: getfield      #8                  // Field repeatStk:[I
      44: aload_0
      45: getfield      #9                  // Field memStartStk:I
      48: aload_1
      49: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      52: iadd
      53: aload_1
      54: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
      57: iastore
      58: aload_0
      59: getfield      #8                  // Field repeatStk:[I
      62: aload_0
      63: getfield      #10                 // Field memEndStk:I
      66: aload_1
      67: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      70: iadd
      71: aload_1
      72: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
      75: iastore
      76: goto          0

  private org.joni.StackEntry popDefault();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
       4: aload_0
       5: dup
       6: getfield      #24                 // Field stk:I
       9: iconst_1
      10: isub
      11: dup_x1
      12: putfield      #24                 // Field stk:I
      15: aaload
      16: astore_1
      17: aload_1
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        255
      24: iand
      25: ifeq          30
      28: aload_1
      29: areturn
      30: aload_1
      31: getfield      #27                 // Field org/joni/StackEntry.type:I
      34: sipush        256
      37: if_icmpne     79
      40: aload_0
      41: getfield      #8                  // Field repeatStk:[I
      44: aload_0
      45: getfield      #9                  // Field memStartStk:I
      48: aload_1
      49: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      52: iadd
      53: aload_1
      54: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
      57: iastore
      58: aload_0
      59: getfield      #8                  // Field repeatStk:[I
      62: aload_0
      63: getfield      #10                 // Field memEndStk:I
      66: aload_1
      67: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      70: iadd
      71: aload_1
      72: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
      75: iastore
      76: goto          149
      79: aload_1
      80: getfield      #27                 // Field org/joni/StackEntry.type:I
      83: sipush        768
      86: if_icmpne     104
      89: aload_0
      90: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      93: aload_1
      94: invokevirtual #63                 // Method org/joni/StackEntry.getSi:()I
      97: aaload
      98: invokevirtual #64                 // Method org/joni/StackEntry.decreaseRepeatCount:()V
     101: goto          149
     104: aload_1
     105: getfield      #27                 // Field org/joni/StackEntry.type:I
     108: ldc           #50                 // int 33280
     110: if_icmpne     149
     113: aload_0
     114: getfield      #8                  // Field repeatStk:[I
     117: aload_0
     118: getfield      #9                  // Field memStartStk:I
     121: aload_1
     122: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     125: iadd
     126: aload_1
     127: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     130: iastore
     131: aload_0
     132: getfield      #8                  // Field repeatStk:[I
     135: aload_0
     136: getfield      #10                 // Field memEndStk:I
     139: aload_1
     140: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     143: iadd
     144: aload_1
     145: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     148: iastore
     149: goto          0

  protected final void popTilPosNot();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field stk:I
       5: iconst_1
       6: isub
       7: putfield      #24                 // Field stk:I
      10: aload_0
      11: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      14: aload_0
      15: getfield      #24                 // Field stk:I
      18: aaload
      19: astore_1
      20: aload_1
      21: getfield      #27                 // Field org/joni/StackEntry.type:I
      24: iconst_3
      25: if_icmpne     31
      28: goto          153
      31: aload_1
      32: getfield      #27                 // Field org/joni/StackEntry.type:I
      35: sipush        256
      38: if_icmpne     80
      41: aload_0
      42: getfield      #8                  // Field repeatStk:[I
      45: aload_0
      46: getfield      #9                  // Field memStartStk:I
      49: aload_1
      50: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      53: iadd
      54: aload_1
      55: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
      58: iastore
      59: aload_0
      60: getfield      #8                  // Field repeatStk:[I
      63: aload_0
      64: getfield      #10                 // Field memEndStk:I
      67: aload_1
      68: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      71: iadd
      72: aload_1
      73: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
      76: iastore
      77: goto          150
      80: aload_1
      81: getfield      #27                 // Field org/joni/StackEntry.type:I
      84: sipush        768
      87: if_icmpne     105
      90: aload_0
      91: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      94: aload_1
      95: invokevirtual #63                 // Method org/joni/StackEntry.getSi:()I
      98: aaload
      99: invokevirtual #64                 // Method org/joni/StackEntry.decreaseRepeatCount:()V
     102: goto          150
     105: aload_1
     106: getfield      #27                 // Field org/joni/StackEntry.type:I
     109: ldc           #50                 // int 33280
     111: if_icmpne     150
     114: aload_0
     115: getfield      #8                  // Field repeatStk:[I
     118: aload_0
     119: getfield      #9                  // Field memStartStk:I
     122: aload_1
     123: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     126: iadd
     127: aload_1
     128: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     131: iastore
     132: aload_0
     133: getfield      #8                  // Field repeatStk:[I
     136: aload_0
     137: getfield      #10                 // Field memEndStk:I
     140: aload_1
     141: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     144: iadd
     145: aload_1
     146: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     149: iastore
     150: goto          0
     153: return

  protected final void popTilLookBehindNot();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field stk:I
       5: iconst_1
       6: isub
       7: putfield      #24                 // Field stk:I
      10: aload_0
      11: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      14: aload_0
      15: getfield      #24                 // Field stk:I
      18: aaload
      19: astore_1
      20: aload_1
      21: getfield      #27                 // Field org/joni/StackEntry.type:I
      24: iconst_2
      25: if_icmpne     31
      28: goto          153
      31: aload_1
      32: getfield      #27                 // Field org/joni/StackEntry.type:I
      35: sipush        256
      38: if_icmpne     80
      41: aload_0
      42: getfield      #8                  // Field repeatStk:[I
      45: aload_0
      46: getfield      #9                  // Field memStartStk:I
      49: aload_1
      50: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      53: iadd
      54: aload_1
      55: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
      58: iastore
      59: aload_0
      60: getfield      #8                  // Field repeatStk:[I
      63: aload_0
      64: getfield      #10                 // Field memEndStk:I
      67: aload_1
      68: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
      71: iadd
      72: aload_1
      73: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
      76: iastore
      77: goto          150
      80: aload_1
      81: getfield      #27                 // Field org/joni/StackEntry.type:I
      84: sipush        768
      87: if_icmpne     105
      90: aload_0
      91: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      94: aload_1
      95: invokevirtual #63                 // Method org/joni/StackEntry.getSi:()I
      98: aaload
      99: invokevirtual #64                 // Method org/joni/StackEntry.decreaseRepeatCount:()V
     102: goto          150
     105: aload_1
     106: getfield      #27                 // Field org/joni/StackEntry.type:I
     109: ldc           #50                 // int 33280
     111: if_icmpne     150
     114: aload_0
     115: getfield      #8                  // Field repeatStk:[I
     118: aload_0
     119: getfield      #9                  // Field memStartStk:I
     122: aload_1
     123: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     126: iadd
     127: aload_1
     128: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     131: iastore
     132: aload_0
     133: getfield      #8                  // Field repeatStk:[I
     136: aload_0
     137: getfield      #10                 // Field memEndStk:I
     140: aload_1
     141: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     144: iadd
     145: aload_1
     146: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     149: iastore
     150: goto          0
     153: return

  protected final int posEnd();
    Code:
       0: aload_0
       1: getfield      #24                 // Field stk:I
       4: istore_1
       5: iinc          1, -1
       8: aload_0
       9: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      12: iload_1
      13: aaload
      14: astore_2
      15: aload_2
      16: getfield      #27                 // Field org/joni/StackEntry.type:I
      19: sipush        4351
      22: iand
      23: ifeq          36
      26: aload_2
      27: sipush        2560
      30: putfield      #27                 // Field org/joni/StackEntry.type:I
      33: goto          56
      36: aload_2
      37: getfield      #27                 // Field org/joni/StackEntry.type:I
      40: sipush        1280
      43: if_icmpne     56
      46: aload_2
      47: sipush        2560
      50: putfield      #27                 // Field org/joni/StackEntry.type:I
      53: goto          59
      56: goto          5
      59: iload_1
      60: ireturn

  protected final void stopBtEnd();
    Code:
       0: aload_0
       1: getfield      #24                 // Field stk:I
       4: istore_1
       5: iinc          1, -1
       8: aload_0
       9: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      12: iload_1
      13: aaload
      14: astore_2
      15: aload_2
      16: getfield      #27                 // Field org/joni/StackEntry.type:I
      19: sipush        4351
      22: iand
      23: ifeq          36
      26: aload_2
      27: sipush        2560
      30: putfield      #27                 // Field org/joni/StackEntry.type:I
      33: goto          56
      36: aload_2
      37: getfield      #27                 // Field org/joni/StackEntry.type:I
      40: sipush        1536
      43: if_icmpne     56
      46: aload_2
      47: sipush        2560
      50: putfield      #27                 // Field org/joni/StackEntry.type:I
      53: goto          59
      56: goto          5
      59: return

  protected final int nullCheck(int, int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field stk:I
       4: istore_3
       5: iinc          3, -1
       8: aload_0
       9: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      12: iload_3
      13: aaload
      14: astore        4
      16: aload         4
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        12288
      24: if_icmpne     51
      27: aload         4
      29: invokevirtual #65                 // Method org/joni/StackEntry.getNullCheckNum:()I
      32: iload_1
      33: if_icmpne     51
      36: aload         4
      38: invokevirtual #66                 // Method org/joni/StackEntry.getNullCheckPStr:()I
      41: iload_2
      42: if_icmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: goto          5

  protected final int nullCheckRec(int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #24                 // Field stk:I
       6: istore        4
       8: iinc          4, -1
      11: aload_0
      12: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: getfield      #27                 // Field org/joni/StackEntry.type:I
      25: sipush        12288
      28: if_icmpne     65
      31: aload         5
      33: invokevirtual #65                 // Method org/joni/StackEntry.getNullCheckNum:()I
      36: iload_1
      37: if_icmpne     79
      40: iload_3
      41: ifne          59
      44: aload         5
      46: invokevirtual #66                 // Method org/joni/StackEntry.getNullCheckPStr:()I
      49: iload_2
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
      59: iinc          3, -1
      62: goto          79
      65: aload         5
      67: getfield      #27                 // Field org/joni/StackEntry.type:I
      70: sipush        20480
      73: if_icmpne     79
      76: iinc          3, 1
      79: goto          8

  protected final int nullCheckMemSt(int, int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field stk:I
       4: istore_3
       5: iinc          3, -1
       8: aload_0
       9: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      12: iload_3
      13: aaload
      14: astore        5
      16: aload         5
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        12288
      24: if_icmpne     178
      27: aload         5
      29: invokevirtual #65                 // Method org/joni/StackEntry.getNullCheckNum:()I
      32: iload_1
      33: if_icmpne     178
      36: aload         5
      38: invokevirtual #66                 // Method org/joni/StackEntry.getNullCheckPStr:()I
      41: iload_2
      42: if_icmpeq     51
      45: iconst_0
      46: istore        4
      48: goto          181
      51: iconst_1
      52: istore        4
      54: iload_3
      55: aload_0
      56: getfield      #24                 // Field stk:I
      59: if_icmpge     181
      62: aload         5
      64: getfield      #27                 // Field org/joni/StackEntry.type:I
      67: sipush        256
      70: if_icmpne     164
      73: aload         5
      75: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
      78: iconst_m1
      79: if_icmpne     88
      82: iconst_0
      83: istore        4
      85: goto          181
      88: aload_0
      89: getfield      #21                 // Field regex:Lorg/joni/Regex;
      92: getfield      #67                 // Field org/joni/Regex.btMemEnd:I
      95: aload         5
      97: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     100: invokestatic  #68                 // Method org/joni/BitStatus.bsAt:(II)Z
     103: ifeq          124
     106: aload_0
     107: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     110: aload         5
     112: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     115: aaload
     116: invokevirtual #69                 // Method org/joni/StackEntry.getMemPStr:()I
     119: istore        6
     121: goto          131
     124: aload         5
     126: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     129: istore        6
     131: aload_0
     132: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     135: aload         5
     137: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     140: aaload
     141: invokevirtual #69                 // Method org/joni/StackEntry.getMemPStr:()I
     144: iload         6
     146: if_icmpeq     155
     149: iconst_0
     150: istore        4
     152: goto          181
     155: iload         6
     157: iload_2
     158: if_icmpeq     164
     161: iconst_m1
     162: istore        4
     164: iinc          3, 1
     167: aload_0
     168: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     171: iload_3
     172: aaload
     173: astore        5
     175: goto          54
     178: goto          5
     181: iload         4
     183: ireturn

  protected final int nullCheckMemStRec(int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #24                 // Field stk:I
       6: istore        4
       8: iinc          4, -1
      11: aload_0
      12: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      15: iload         4
      17: aaload
      18: astore        6
      20: aload         6
      22: getfield      #27                 // Field org/joni/StackEntry.type:I
      25: sipush        12288
      28: if_icmpne     194
      31: aload         6
      33: invokevirtual #65                 // Method org/joni/StackEntry.getNullCheckNum:()I
      36: iload_1
      37: if_icmpne     217
      40: iload_3
      41: ifne          188
      44: aload         6
      46: invokevirtual #66                 // Method org/joni/StackEntry.getNullCheckPStr:()I
      49: iload_2
      50: if_icmpeq     59
      53: iconst_0
      54: istore        5
      56: goto          220
      59: iconst_1
      60: istore        5
      62: iload         4
      64: aload_0
      65: getfield      #24                 // Field stk:I
      68: if_icmpge     220
      71: aload         6
      73: getfield      #27                 // Field org/joni/StackEntry.type:I
      76: sipush        256
      79: if_icmpne     173
      82: aload         6
      84: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
      87: iconst_m1
      88: if_icmpne     97
      91: iconst_0
      92: istore        5
      94: goto          220
      97: aload_0
      98: getfield      #21                 // Field regex:Lorg/joni/Regex;
     101: getfield      #67                 // Field org/joni/Regex.btMemEnd:I
     104: aload         6
     106: invokevirtual #53                 // Method org/joni/StackEntry.getMemNum:()I
     109: invokestatic  #68                 // Method org/joni/BitStatus.bsAt:(II)Z
     112: ifeq          133
     115: aload_0
     116: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     119: aload         6
     121: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     124: aaload
     125: invokevirtual #69                 // Method org/joni/StackEntry.getMemPStr:()I
     128: istore        7
     130: goto          140
     133: aload         6
     135: invokevirtual #62                 // Method org/joni/StackEntry.getMemEnd:()I
     138: istore        7
     140: aload_0
     141: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     144: aload         6
     146: invokevirtual #61                 // Method org/joni/StackEntry.getMemStart:()I
     149: aaload
     150: invokevirtual #69                 // Method org/joni/StackEntry.getMemPStr:()I
     153: iload         7
     155: if_icmpeq     164
     158: iconst_0
     159: istore        5
     161: goto          220
     164: iload         7
     166: iload_2
     167: if_icmpeq     173
     170: iconst_m1
     171: istore        5
     173: iinc          4, 1
     176: aload_0
     177: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
     180: iload         4
     182: aaload
     183: astore        6
     185: goto          62
     188: iinc          3, -1
     191: goto          217
     194: aload         6
     196: getfield      #27                 // Field org/joni/StackEntry.type:I
     199: sipush        20480
     202: if_icmpne     217
     205: aload         6
     207: invokevirtual #65                 // Method org/joni/StackEntry.getNullCheckNum:()I
     210: iload_1
     211: if_icmpne     217
     214: iinc          3, 1
     217: goto          8
     220: iload         5
     222: ireturn

  protected final int getRepeat(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #24                 // Field stk:I
       6: istore_3
       7: iinc          3, -1
      10: aload_0
      11: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      14: iload_3
      15: aaload
      16: astore        4
      18: aload         4
      20: getfield      #27                 // Field org/joni/StackEntry.type:I
      23: sipush        1792
      26: if_icmpne     44
      29: iload_2
      30: ifne          75
      33: aload         4
      35: invokevirtual #70                 // Method org/joni/StackEntry.getRepeatNum:()I
      38: iload_1
      39: if_icmpne     75
      42: iload_3
      43: ireturn
      44: aload         4
      46: getfield      #27                 // Field org/joni/StackEntry.type:I
      49: sipush        2048
      52: if_icmpne     61
      55: iinc          2, -1
      58: goto          75
      61: aload         4
      63: getfield      #27                 // Field org/joni/StackEntry.type:I
      66: sipush        2304
      69: if_icmpne     75
      72: iinc          2, 1
      75: goto          7

  protected final int sreturn();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #24                 // Field stk:I
       6: istore_2
       7: iinc          2, -1
      10: aload_0
      11: getfield      #5                  // Field stack:[Lorg/joni/StackEntry;
      14: iload_2
      15: aaload
      16: astore_3
      17: aload_3
      18: getfield      #27                 // Field org/joni/StackEntry.type:I
      21: sipush        2048
      24: if_icmpne     42
      27: iload_1
      28: ifne          36
      31: aload_3
      32: invokevirtual #71                 // Method org/joni/StackEntry.getCallFrameRetAddr:()I
      35: ireturn
      36: iinc          1, -1
      39: goto          55
      42: aload_3
      43: getfield      #27                 // Field org/joni/StackEntry.type:I
      46: sipush        2304
      49: if_icmpne     55
      52: iinc          1, 1
      55: goto          7

  static org.joni.StackEntry[] access$000();
    Code:
       0: invokestatic  #1                  // Method allocateStack:()[Lorg/joni/StackEntry;
       3: areturn

  static {};
    Code:
       0: new           #72                 // class org/joni/StackMachine$1
       3: dup
       4: invokespecial #73                 // Method org/joni/StackMachine$1."<init>":()V
       7: putstatic     #14                 // Field stacks:Ljava/lang/ThreadLocal;
      10: return
}
