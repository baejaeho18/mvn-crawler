Compiled from "ReadWriteLockAspect.scala"
public interface net.java.truevfs.kernel.impl.ReadWriteLockAspect<L extends java.util.concurrent.locks.ReadWriteLock> {
  public abstract L lock();

  public static java.util.concurrent.locks.Lock readLock$(net.java.truevfs.kernel.impl.ReadWriteLockAspect);
    Code:
       0: aload_0
       1: invokespecial #24                 // InterfaceMethod readLock:()Ljava/util/concurrent/locks/Lock;
       4: areturn

  public default java.util.concurrent.locks.Lock readLock();
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod lock:()Ljava/util/concurrent/locks/ReadWriteLock;
       6: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      11: areturn

  public static scala.Function1 readLocked$(net.java.truevfs.kernel.impl.ReadWriteLockAspect);
    Code:
       0: aload_0
       1: invokespecial #37                 // InterfaceMethod readLocked:()Lscala/Function1;
       4: areturn

  public default <V> scala.Function1<scala.Function0<V>, V> readLocked();
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod readLock:()Ljava/util/concurrent/locks/Lock;
       6: astore_1
       7: aload_1
       8: invokedynamic #61,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/locks/Lock;)Lscala/Function1;
      13: areturn

  public static java.util.concurrent.locks.Lock writeLock$(net.java.truevfs.kernel.impl.ReadWriteLockAspect);
    Code:
       0: aload_0
       1: invokespecial #65                 // InterfaceMethod writeLock:()Ljava/util/concurrent/locks/Lock;
       4: areturn

  public default java.util.concurrent.locks.Lock writeLock();
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod lock:()Ljava/util/concurrent/locks/ReadWriteLock;
       6: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      11: areturn

  public static scala.Function1 writeLocked$(net.java.truevfs.kernel.impl.ReadWriteLockAspect);
    Code:
       0: aload_0
       1: invokespecial #70                 // InterfaceMethod writeLocked:()Lscala/Function1;
       4: areturn

  public default <V> scala.Function1<scala.Function0<V>, V> writeLocked();
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod writeLock:()Ljava/util/concurrent/locks/Lock;
       6: astore_1
       7: aload_1
       8: invokedynamic #75,  0             // InvokeDynamic #1:apply:(Ljava/util/concurrent/locks/Lock;)Lscala/Function1;
      13: areturn

  public static java.lang.Object $anonfun$readLocked$1(java.util.concurrent.locks.Lock, scala.Function0);
    Code:
       0: getstatic     #83                 // Field net/java/truevfs/kernel/impl/LockOn$.MODULE$:Lnet/java/truevfs/kernel/impl/LockOn$;
       3: aload_0
       4: aload_1
       5: invokevirtual #85                 // Method net/java/truevfs/kernel/impl/LockOn$.apply:(Ljava/util/concurrent/locks/Lock;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object $anonfun$writeLocked$1(java.util.concurrent.locks.Lock, scala.Function0);
    Code:
       0: getstatic     #83                 // Field net/java/truevfs/kernel/impl/LockOn$.MODULE$:Lnet/java/truevfs/kernel/impl/LockOn$;
       3: aload_0
       4: aload_1
       5: invokevirtual #85                 // Method net/java/truevfs/kernel/impl/LockOn$.apply:(Ljava/util/concurrent/locks/Lock;Lscala/Function0;)Ljava/lang/Object;
       8: areturn

  public static void $init$(net.java.truevfs.kernel.impl.ReadWriteLockAspect);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #102,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
