Compiled from "ThreadLocalisedExceptionHandler.java"
public class net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler implements net.openhft.chronicle.core.onoes.ExceptionHandler {
  private net.openhft.chronicle.core.onoes.ExceptionHandler defaultHandler;

  private java.lang.ThreadLocal<net.openhft.chronicle.core.onoes.ExceptionHandler> handlerTL;

  public net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler(net.openhft.chronicle.core.onoes.Slf4jExceptionHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field defaultHandler:Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       9: aload_0
      10: invokevirtual #3                  // Method resetThreadLocalHandler:()V
      13: return

  public void on(java.lang.Class, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method exceptionHandler:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       4: astore        4
       6: aload         4
       8: ifnonnull     12
      11: return
      12: invokestatic  #5                  // Method java/lang/Thread.interrupted:()Z
      15: istore        5
      17: aload         4
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokeinterface #6,  4            // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
      27: iload         5
      29: ifeq          57
      32: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      35: invokevirtual #8                  // Method java/lang/Thread.interrupt:()V
      38: goto          57
      41: astore        6
      43: iload         5
      45: ifeq          54
      48: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      51: invokevirtual #8                  // Method java/lang/Thread.interrupt:()V
      54: aload         6
      56: athrow
      57: return
    Exception table:
       from    to  target type
          17    27    41   any
          41    43    41   any

  private net.openhft.chronicle.core.onoes.ExceptionHandler exceptionHandler();
    Code:
       0: aload_0
       1: getfield      #9                  // Field handlerTL:Ljava/lang/ThreadLocal;
       4: invokevirtual #10                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class net/openhft/chronicle/core/onoes/ExceptionHandler
      10: astore_1
      11: aload_1
      12: ifnonnull     20
      15: aload_0
      16: getfield      #2                  // Field defaultHandler:Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      19: astore_1
      20: aload_1
      21: areturn

  public net.openhft.chronicle.core.onoes.ExceptionHandler defaultHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultHandler:Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       4: areturn

  public net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler defaultHandler(net.openhft.chronicle.core.onoes.ExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #12                 // Field net/openhft/chronicle/core/onoes/NullExceptionHandler.NOTHING:Lnet/openhft/chronicle/core/onoes/NullExceptionHandler;
       8: goto          12
      11: aload_1
      12: putfield      #2                  // Field defaultHandler:Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      15: aload_0
      16: areturn

  public net.openhft.chronicle.core.onoes.ExceptionHandler threadLocalHandler();
    Code:
       0: aload_0
       1: getfield      #9                  // Field handlerTL:Ljava/lang/ThreadLocal;
       4: invokevirtual #10                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class net/openhft/chronicle/core/onoes/ExceptionHandler
      10: areturn

  public net.openhft.chronicle.core.onoes.ThreadLocalisedExceptionHandler threadLocalHandler(net.openhft.chronicle.core.onoes.ExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #9                  // Field handlerTL:Ljava/lang/ThreadLocal;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public void resetThreadLocalHandler();
    Code:
       0: aload_0
       1: new           #14                 // class java/lang/InheritableThreadLocal
       4: dup
       5: invokespecial #15                 // Method java/lang/InheritableThreadLocal."<init>":()V
       8: putfield      #9                  // Field handlerTL:Ljava/lang/ThreadLocal;
      11: return

  public boolean isEnabled(java.lang.Class);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method exceptionHandler:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_1
      10: ireturn
      11: aload_2
      12: aload_1
      13: invokeinterface #16,  2           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.isEnabled:(Ljava/lang/Class;)Z
      18: ireturn
}
