Compiled from "ByteBuffers.java"
public final class net.openhft.chronicle.core.util.ByteBuffers extends java.lang.Enum<net.openhft.chronicle.core.util.ByteBuffers> {
  private static final java.lang.reflect.Field ADDRESS;

  private static final java.lang.reflect.Field CAPACITY;

  private static final net.openhft.chronicle.core.util.ByteBuffers[] $VALUES;

  public static net.openhft.chronicle.core.util.ByteBuffers[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/util/ByteBuffers;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/core/util/ByteBuffers;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/core/util/ByteBuffers;"
       9: areturn

  public static net.openhft.chronicle.core.util.ByteBuffers valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/core/util/ByteBuffers
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/core/util/ByteBuffers
       9: areturn

  private net.openhft.chronicle.core.util.ByteBuffers();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static void setAddressCapacity(java.nio.ByteBuffer, long, long);
    Code:
       0: lload_3
       1: invokestatic  #7                  // Method java/lang/Math.toIntExact:(J)I
       4: istore        5
       6: getstatic     #8                  // Field ADDRESS:Ljava/lang/reflect/Field;
       9: aload_0
      10: lload_1
      11: invokevirtual #9                  // Method java/lang/reflect/Field.setLong:(Ljava/lang/Object;J)V
      14: getstatic     #10                 // Field CAPACITY:Ljava/lang/reflect/Field;
      17: aload_0
      18: iload         5
      20: invokevirtual #11                 // Method java/lang/reflect/Field.setInt:(Ljava/lang/Object;I)V
      23: goto          38
      26: astore        6
      28: new           #13                 // class java/lang/AssertionError
      31: dup
      32: aload         6
      34: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      37: athrow
      38: return
    Exception table:
       from    to  target type
           6    23    26   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/core/util/ByteBuffers
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/util/ByteBuffers;
       7: iconst_0
       8: invokestatic  #15                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      11: astore_0
      12: aload_0
      13: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: ldc           #17                 // String address
      18: invokestatic  #18                 // Method net/openhft/chronicle/core/Jvm.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      21: putstatic     #8                  // Field ADDRESS:Ljava/lang/reflect/Field;
      24: aload_0
      25: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: ldc           #19                 // String capacity
      30: invokestatic  #18                 // Method net/openhft/chronicle/core/Jvm.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      33: putstatic     #10                 // Field CAPACITY:Ljava/lang/reflect/Field;
      36: return
}
