Compiled from "RecordingExceptionHandler.java"
public class net.openhft.chronicle.core.onoes.RecordingExceptionHandler implements net.openhft.chronicle.core.onoes.ExceptionHandler {
  private final net.openhft.chronicle.core.onoes.LogLevel level;

  private final java.util.Map<net.openhft.chronicle.core.onoes.ExceptionKey, java.lang.Integer> exceptionKeyCountMap;

  private final boolean exceptionsOnly;

  public net.openhft.chronicle.core.onoes.RecordingExceptionHandler(net.openhft.chronicle.core.onoes.LogLevel, java.util.Map<net.openhft.chronicle.core.onoes.ExceptionKey, java.lang.Integer>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field level:Lnet/openhft/chronicle/core/onoes/LogLevel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field exceptionsOnly:Z
      19: return

  public void on(java.lang.Class, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptionsOnly:Z
       4: ifeq          12
       7: aload_3
       8: ifnonnull     12
      11: return
      12: aload_3
      13: ifnull        35
      16: aload_3
      17: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: ldc           #6                  // class net/openhft/chronicle/core/StackTrace
      22: if_acmpeq     34
      25: aload_3
      26: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: ldc           #7                  // class java/lang/Throwable
      31: if_acmpne     35
      34: return
      35: aload_0
      36: getfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      39: dup
      40: astore        4
      42: monitorenter
      43: new           #8                  // class net/openhft/chronicle/core/onoes/ExceptionKey
      46: dup
      47: aload_0
      48: getfield      #2                  // Field level:Lnet/openhft/chronicle/core/onoes/LogLevel;
      51: aload_1
      52: aload_2
      53: aload_3
      54: invokespecial #9                  // Method net/openhft/chronicle/core/onoes/ExceptionKey."<init>":(Lnet/openhft/chronicle/core/onoes/LogLevel;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
      57: astore        5
      59: aload_0
      60: getfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      63: aload         5
      65: iconst_1
      66: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      74: invokeinterface #12,  4           // InterfaceMethod java/util/Map.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      79: pop
      80: aload         4
      82: monitorexit
      83: goto          94
      86: astore        6
      88: aload         4
      90: monitorexit
      91: aload         6
      93: athrow
      94: return
    Exception table:
       from    to  target type
          43    83    86   any
          86    91    86   any

  private static java.lang.Integer lambda$on$0(java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_0
       1: ifnonnull     11
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/Integer.intValue:()I
       8: goto          20
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Integer.intValue:()I
      15: aload_1
      16: invokevirtual #13                 // Method java/lang/Integer.intValue:()I
      19: iadd
      20: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: areturn
}
