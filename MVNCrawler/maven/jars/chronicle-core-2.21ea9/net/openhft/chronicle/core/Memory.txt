Compiled from "Memory.java"
public interface net.openhft.chronicle.core.Memory {
  public default long heapUsed();
    Code:
       0: invokestatic  #1                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: astore_1
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/Runtime.totalMemory:()J
       8: aload_1
       9: invokevirtual #3                  // Method java/lang/Runtime.freeMemory:()J
      12: lsub
      13: lreturn

  public abstract void storeFence();

  public abstract void loadFence();

  public abstract void setMemory(long, long, byte);

  public abstract void freeMemory(long, long);

  public abstract long allocate(long) throws java.lang.IllegalArgumentException, java.lang.OutOfMemoryError;

  public abstract long nativeMemoryUsed();

  public abstract void writeByte(long, byte);

  public abstract void writeByte(java.lang.Object, long, byte);

  public abstract byte readByte(java.lang.Object, long);

  public abstract void writeBytes(long, byte[], int, int);

  public abstract void readBytes(long, byte[], long, int);

  public abstract byte readByte(long);

  public abstract void writeShort(long, short);

  public abstract void writeShort(java.lang.Object, long, short);

  public abstract short readShort(long);

  public abstract short readShort(java.lang.Object, long);

  public abstract void writeInt(long, int);

  public abstract void writeInt(java.lang.Object, long, int);

  public abstract void writeOrderedInt(long, int);

  public abstract void writeOrderedInt(java.lang.Object, long, int);

  public abstract int readInt(long);

  public abstract int readInt(java.lang.Object, long);

  public abstract void writeLong(long, long);

  public abstract void writeLong(java.lang.Object, long, long);

  public abstract long readLong(long);

  public abstract long readLong(java.lang.Object, long);

  public abstract void writeFloat(long, float);

  public abstract void writeFloat(java.lang.Object, long, float);

  public abstract float readFloat(long);

  public abstract float readFloat(java.lang.Object, long);

  public abstract void writeDouble(long, double);

  public abstract void writeDouble(java.lang.Object, long, double);

  public abstract double readDouble(long);

  public abstract double readDouble(java.lang.Object, long);

  public abstract void copyMemory(byte[], int, long, int);

  public abstract void copyMemory(long, long, long);

  public abstract void copyMemory(byte[], int, java.lang.Object, long, int);

  public abstract void copyMemory(long, java.lang.Object, long, int);

  public abstract void writeOrderedLong(long, long);

  public abstract void writeOrderedLong(java.lang.Object, long, long);

  public abstract void testAndSetInt(long, long, int, int) throws java.lang.IllegalStateException;

  public abstract void testAndSetInt(java.lang.Object, long, int, int) throws java.lang.IllegalStateException;

  public abstract boolean compareAndSwapInt(long, int, int);

  public abstract boolean compareAndSwapInt(java.lang.Object, long, int, int);

  public abstract boolean compareAndSwapLong(long, long, long);

  public abstract boolean compareAndSwapLong(java.lang.Object, long, long, long);

  public abstract int pageSize();

  public abstract byte readVolatileByte(long);

  public abstract byte readVolatileByte(java.lang.Object, long);

  public abstract short readVolatileShort(long);

  public abstract short readVolatileShort(java.lang.Object, long);

  public abstract int readVolatileInt(long);

  public abstract int readVolatileInt(java.lang.Object, long);

  public abstract float readVolatileFloat(long);

  public abstract float readVolatileFloat(java.lang.Object, long);

  public abstract long readVolatileLong(long);

  public abstract long readVolatileLong(java.lang.Object, long);

  public abstract double readVolatileDouble(long);

  public abstract double readVolatileDouble(java.lang.Object, long);

  public abstract void writeVolatileByte(long, byte);

  public abstract void writeVolatileByte(java.lang.Object, long, byte);

  public abstract void writeVolatileShort(long, short);

  public abstract void writeVolatileShort(java.lang.Object, long, short);

  public abstract void writeVolatileInt(long, int);

  public abstract void writeVolatileInt(java.lang.Object, long, int);

  public abstract void writeVolatileFloat(long, float);

  public abstract void writeVolatileFloat(java.lang.Object, long, float);

  public abstract void writeVolatileLong(long, long);

  public abstract void writeVolatileLong(java.lang.Object, long, long);

  public abstract void writeVolatileDouble(long, double);

  public abstract void writeVolatileDouble(java.lang.Object, long, double);

  public abstract int addInt(long, int);

  public abstract int addInt(java.lang.Object, long, int);

  public abstract long addLong(long, long);

  public abstract long addLong(java.lang.Object, long, long);

  public abstract <E> E allocateInstance(java.lang.Class<? extends E>) throws java.lang.InstantiationException;

  public abstract long getFieldOffset(java.lang.reflect.Field);

  public abstract void setInt(java.lang.Object, long, int);

  public abstract <T> T getObject(java.lang.Object, long);
}
