Compiled from "IOTools.java"
public final class net.openhft.chronicle.core.io.IOTools extends java.lang.Enum<net.openhft.chronicle.core.io.IOTools> {
  static volatile java.util.Map<java.lang.Class, java.util.concurrent.atomic.AtomicInteger> COUNTER_MAP;

  private static final net.openhft.chronicle.core.io.IOTools[] $VALUES;

  public static net.openhft.chronicle.core.io.IOTools[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/io/IOTools;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/core/io/IOTools;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/core/io/IOTools;"
       9: areturn

  public static net.openhft.chronicle.core.io.IOTools valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/core/io/IOTools
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/core/io/IOTools
       9: areturn

  private net.openhft.chronicle.core.io.IOTools();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static boolean shallowDeleteDirWithFiles(java.lang.String) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: invokestatic  #9                  // Method shallowDeleteDirWithFiles:(Ljava/io/File;)Z
      11: ireturn

  public static boolean shallowDeleteDirWithFiles(java.io.File) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // Method deleteDirWithFiles:(Ljava/io/File;I)Z
       5: ireturn

  public static boolean deleteDirWithFiles(java.lang.String...) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: astore_2
       4: aload_2
       5: arraylength
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     42
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: aload         5
      24: bipush        20
      26: invokestatic  #11                 // Method deleteDirWithFiles:(Ljava/lang/String;I)Z
      29: istore        6
      31: iload_1
      32: iload         6
      34: iand
      35: istore_1
      36: iinc          4, 1
      39: goto          10
      42: iload_1
      43: ireturn

  public static boolean deleteDirWithFiles(java.lang.String, int) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: iload_1
       9: invokestatic  #10                 // Method deleteDirWithFiles:(Ljava/io/File;I)Z
      12: ireturn

  public static boolean deleteDirWithFiles(java.io.File) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: bipush        20
       3: invokestatic  #10                 // Method deleteDirWithFiles:(Ljava/io/File;I)Z
       6: ireturn

  public static boolean deleteDirWithFiles(java.io.File, int) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokestatic  #13                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      15: invokedynamic #14,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      20: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: iload_1
      26: invokedynamic #16,  0             // InvokeDynamic #1:accept:(I)Ljava/util/function/Consumer;
      31: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      36: aload_2
      37: invokestatic  #13                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      40: invokedynamic #18,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      45: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      50: aload_0
      51: invokevirtual #19                 // Method java/io/File.delete:()Z
      54: ireturn

  public static void deleteDirWithFilesOrThrow(java.lang.String...) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: invokedynamic #21,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      14: invokedynamic #23,  0             // InvokeDynamic #4:apply:()Ljava/util/function/IntFunction;
      19: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      24: checkcast     #25                 // class "[Ljava/io/File;"
      27: astore_1
      28: aload_1
      29: invokestatic  #26                 // Method deleteDirWithFilesOrThrow:([Ljava/io/File;)V
      32: return

  public static void deleteDirWithFilesOrThrow(java.io.File...) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     67
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokestatic  #27                 // Method deleteDirWithFiles:(Ljava/io/File;)Z
      22: ifne          61
      25: aload         4
      27: invokevirtual #28                 // Method java/io/File.exists:()Z
      30: ifeq          61
      33: new           #29                 // class java/lang/AssertionError
      36: dup
      37: new           #30                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #32                 // String Could not delete
      46: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload         4
      51: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #36                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      60: athrow
      61: iinc          3, 1
      64: goto          7
      67: return

  public static java.net.URL urlFor(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: invokestatic  #37                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #38                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: aload_0
       7: invokestatic  #39                 // Method urlFor:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;
      10: areturn

  public static java.net.URL urlFor(java.lang.Class, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: aload_1
       5: invokestatic  #39                 // Method urlFor:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;
       8: areturn

  public static java.net.URL urlFor(java.lang.ClassLoader, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
       5: astore_2
       6: aload_2
       7: ifnonnull     29
      10: aload_1
      11: ldc           #42                 // String /
      13: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ifeq          29
      19: aload_0
      20: aload_1
      21: iconst_1
      22: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: invokevirtual #41                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      28: astore_2
      29: aload_2
      30: ifnonnull     57
      33: aload_0
      34: new           #30                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_1
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #45                 // String .gz
      47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #41                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      56: astore_2
      57: aload_2
      58: ifnonnull     122
      61: new           #7                  // class java/io/File
      64: dup
      65: aload_1
      66: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      69: invokevirtual #28                 // Method java/io/File.exists:()Z
      72: ifeq          122
      75: new           #46                 // class java/net/URL
      78: dup
      79: ldc           #47                 // String file
      81: ldc           #48                 // String
      83: new           #7                  // class java/io/File
      86: dup
      87: aload_1
      88: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      91: invokevirtual #49                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      94: invokespecial #50                 // Method java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      97: astore_2
      98: goto          122
     101: astore_3
     102: new           #52                 // class java/io/FileNotFoundException
     105: dup
     106: aload_1
     107: invokespecial #53                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     110: astore        4
     112: aload         4
     114: aload_3
     115: invokevirtual #54                 // Method java/io/FileNotFoundException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     118: pop
     119: aload         4
     121: athrow
     122: aload_2
     123: ifnonnull     135
     126: new           #52                 // class java/io/FileNotFoundException
     129: dup
     130: aload_1
     131: invokespecial #53                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: aload_2
     136: areturn
    Exception table:
       from    to  target type
          75    98   101   Class java/net/MalformedURLException

  public static java.io.InputStream open(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_1
       5: aload_0
       6: invokevirtual #56                 // Method java/net/URL.getFile:()Ljava/lang/String;
       9: ldc           #45                 // String .gz
      11: invokevirtual #57                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      14: ifeq          26
      17: new           #58                 // class java/util/zip/GZIPInputStream
      20: dup
      21: aload_1
      22: invokespecial #59                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
      25: astore_1
      26: aload_1
      27: areturn

  public static byte[] readFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method urlFor:(Ljava/lang/String;)Ljava/net/URL;
       4: invokestatic  #61                 // Method open:(Ljava/net/URL;)Ljava/io/InputStream;
       7: astore_1
       8: aload_1
       9: invokestatic  #62                 // Method readAsBytes:(Ljava/io/InputStream;)[B
      12: areturn

  public static byte[] readFile(java.lang.Class, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: aload_1
       5: invokestatic  #39                 // Method urlFor:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/net/URL;
       8: astore_2
       9: aload_2
      10: invokestatic  #61                 // Method open:(Ljava/net/URL;)Ljava/io/InputStream;
      13: astore_3
      14: aload_3
      15: invokestatic  #62                 // Method readAsBytes:(Ljava/io/InputStream;)[B
      18: areturn

  public static byte[] readAsBytes(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #63                 // class java/io/FileInputStream
       4: ifeq          119
       7: aload_0
       8: checkcast     #63                 // class java/io/FileInputStream
      11: astore_1
      12: aconst_null
      13: astore_2
      14: aload_1
      15: invokevirtual #64                 // Method java/io/FileInputStream.available:()I
      18: newarray       byte
      20: astore_3
      21: aload_1
      22: aload_3
      23: invokevirtual #65                 // Method java/io/FileInputStream.read:([B)I
      26: istore        4
      28: iload         4
      30: aload_3
      31: arraylength
      32: if_icmpeq     43
      35: new           #29                 // class java/lang/AssertionError
      38: dup
      39: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: aload_3
      44: astore        5
      46: aload_1
      47: ifnull        76
      50: aload_2
      51: ifnull        72
      54: aload_1
      55: invokevirtual #67                 // Method java/io/FileInputStream.close:()V
      58: goto          76
      61: astore        6
      63: aload_2
      64: aload         6
      66: invokevirtual #69                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      69: goto          76
      72: aload_1
      73: invokevirtual #67                 // Method java/io/FileInputStream.close:()V
      76: aload         5
      78: areturn
      79: astore_3
      80: aload_3
      81: astore_2
      82: aload_3
      83: athrow
      84: astore        7
      86: aload_1
      87: ifnull        116
      90: aload_2
      91: ifnull        112
      94: aload_1
      95: invokevirtual #67                 // Method java/io/FileInputStream.close:()V
      98: goto          116
     101: astore        8
     103: aload_2
     104: aload         8
     106: invokevirtual #69                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     109: goto          116
     112: aload_1
     113: invokevirtual #67                 // Method java/io/FileInputStream.close:()V
     116: aload         7
     118: athrow
     119: new           #70                 // class java/io/ByteArrayOutputStream
     122: dup
     123: sipush        512
     126: aload_0
     127: invokevirtual #71                 // Method java/io/InputStream.available:()I
     130: invokestatic  #72                 // Method java/lang/Math.min:(II)I
     133: invokespecial #73                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
     136: astore_1
     137: sipush        1024
     140: newarray       byte
     142: astore_2
     143: aload_0
     144: aload_2
     145: invokevirtual #74                 // Method java/io/InputStream.read:([B)I
     148: dup
     149: istore_3
     150: ifle          163
     153: aload_1
     154: aload_2
     155: iconst_0
     156: iload_3
     157: invokevirtual #75                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     160: goto          143
     163: aload_1
     164: invokevirtual #76                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     167: astore_3
     168: aload_0
     169: invokestatic  #77                 // InterfaceMethod net/openhft/chronicle/core/io/Closeable.closeQuietly:(Ljava/lang/Object;)V
     172: aload_3
     173: areturn
     174: astore        9
     176: aload_0
     177: invokestatic  #77                 // InterfaceMethod net/openhft/chronicle/core/io/Closeable.closeQuietly:(Ljava/lang/Object;)V
     180: aload         9
     182: athrow
    Exception table:
       from    to  target type
          54    58    61   Class java/lang/Throwable
          14    46    79   Class java/lang/Throwable
          14    46    84   any
          94    98   101   Class java/lang/Throwable
          79    86    84   any
         119   168   174   any
         174   176   174   any

  public static void writeFile(java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: new           #78                 // class java/io/FileOutputStream
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: aload_2
      12: astore        4
      14: aload_0
      15: ldc           #45                 // String .gz
      17: invokevirtual #57                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      20: ifeq          34
      23: new           #80                 // class java/util/zip/GZIPOutputStream
      26: dup
      27: aload         4
      29: invokespecial #81                 // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
      32: astore        4
      34: aload         4
      36: aload_1
      37: invokevirtual #82                 // Method java/io/OutputStream.write:([B)V
      40: aload         4
      42: invokevirtual #83                 // Method java/io/OutputStream.close:()V
      45: aload_2
      46: ifnull        121
      49: aload_3
      50: ifnull        71
      53: aload_2
      54: invokevirtual #83                 // Method java/io/OutputStream.close:()V
      57: goto          121
      60: astore        4
      62: aload_3
      63: aload         4
      65: invokevirtual #69                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      68: goto          121
      71: aload_2
      72: invokevirtual #83                 // Method java/io/OutputStream.close:()V
      75: goto          121
      78: astore        4
      80: aload         4
      82: astore_3
      83: aload         4
      85: athrow
      86: astore        5
      88: aload_2
      89: ifnull        118
      92: aload_3
      93: ifnull        114
      96: aload_2
      97: invokevirtual #83                 // Method java/io/OutputStream.close:()V
     100: goto          118
     103: astore        6
     105: aload_3
     106: aload         6
     108: invokevirtual #69                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     111: goto          118
     114: aload_2
     115: invokevirtual #83                 // Method java/io/OutputStream.close:()V
     118: aload         5
     120: athrow
     121: return
    Exception table:
       from    to  target type
          53    57    60   Class java/lang/Throwable
          11    45    78   Class java/lang/Throwable
          11    45    86   any
          96   100   103   Class java/lang/Throwable
          78    88    86   any

  public static java.lang.String tempName(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokevirtual #84                 // Method java/lang/String.lastIndexOf:(I)I
       6: istore_1
       7: iload_1
       8: ifle          55
      11: iload_1
      12: aload_0
      13: invokevirtual #85                 // Method java/lang/String.length:()I
      16: iconst_5
      17: isub
      18: if_icmple     55
      21: new           #30                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      28: aload_0
      29: iconst_0
      30: iload_1
      31: invokevirtual #86                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      34: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokestatic  #87                 // Method java/lang/System.nanoTime:()J
      40: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: aload_0
      44: iload_1
      45: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      48: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn
      55: new           #30                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      62: aload_0
      63: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokestatic  #87                 // Method java/lang/System.nanoTime:()J
      69: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public static void clean(java.nio.ByteBuffer);
    Code:
       0: invokestatic  #89                 // Method net/openhft/chronicle/core/cleaner/CleanerServiceLocator.cleanerService:()Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService;
       3: aload_0
       4: invokeinterface #90,  2           // InterfaceMethod net/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService.clean:(Ljava/nio/ByteBuffer;)V
       9: return

  public static void createDirectories(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        24
       4: aload_0
       5: invokeinterface #91,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
      10: ifeq          24
      13: aload_0
      14: iconst_0
      15: anewarray     #92                 // class java/nio/file/LinkOption
      18: invokestatic  #93                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      21: ifeq          25
      24: return
      25: aload_0
      26: invokeinterface #94,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      31: invokestatic  #95                 // Method createDirectories:(Ljava/nio/file/Path;)V
      34: aload_0
      35: iconst_0
      36: anewarray     #96                 // class java/nio/file/attribute/FileAttribute
      39: invokestatic  #97                 // Method java/nio/file/Files.createDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      42: pop
      43: goto          182
      46: astore_1
      47: aload_0
      48: invokestatic  #99                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      51: ifeq          99
      54: new           #100                // class java/io/IOException
      57: dup
      58: new           #30                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #101                // String Symbolic link from
      67: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc           #102                // String  to
      76: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokestatic  #103                // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #104                // String  is broken
      88: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: aload_1
      95: invokespecial #105                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: athrow
      99: aload_0
     100: iconst_0
     101: anewarray     #92                 // class java/nio/file/LinkOption
     104: invokestatic  #106                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     107: ifeq          138
     110: new           #100                // class java/io/IOException
     113: dup
     114: new           #30                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #107                // String Cannot create a directory with the same name as a file
     123: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: aload_1
     134: invokespecial #105                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     137: athrow
     138: goto          182
     141: astore_1
     142: aload_0
     143: invokeinterface #109,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     148: invokevirtual #110                // Method java/io/File.canWrite:()Z
     151: ifne          182
     154: new           #100                // class java/io/IOException
     157: dup
     158: new           #30                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     165: ldc           #111                // String Cannot write to
     167: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: aload_1
     178: invokespecial #105                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     181: athrow
     182: return
    Exception table:
       from    to  target type
          34    43    46   Class java/nio/file/FileAlreadyExistsException
          34    43   141   Class java/nio/file/AccessDeniedException

  static java.util.concurrent.atomic.AtomicInteger counter(java.lang.Class);
    Code:
       0: getstatic     #112                // Field COUNTER_MAP:Ljava/util/Map;
       3: aload_0
       4: invokedynamic #113,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
       9: invokeinterface #114,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #115                // class java/util/concurrent/atomic/AtomicInteger
      17: areturn

  public static java.io.File createTempFile(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #116                // Method createTempDirectory:(Ljava/lang/String;)Ljava/nio/file/Path;
       4: invokeinterface #109,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       9: astore_1
      10: aload_1
      11: invokevirtual #117                // Method java/io/File.deleteOnExit:()V
      14: aload_1
      15: areturn

  public static java.nio.file.Path createTempDirectory(java.lang.String);
    Code:
       0: new           #7                  // class java/io/File
       3: dup
       4: invokestatic  #118                // Method net/openhft/chronicle/core/OS.getTarget:()Ljava/lang/String;
       7: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      10: invokevirtual #119                // Method java/io/File.mkdir:()Z
      13: pop
      14: invokestatic  #118                // Method net/openhft/chronicle/core/OS.getTarget:()Ljava/lang/String;
      17: iconst_1
      18: anewarray     #120                // class java/lang/String
      21: dup
      22: iconst_0
      23: new           #30                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #121                // String -
      36: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokestatic  #122                // Method net/openhft/chronicle/core/util/Time.uniqueId:()Ljava/lang/String;
      42: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #123                // String .tmp
      47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: aastore
      54: invokestatic  #124                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      57: areturn

  public static void unmonitor(java.lang.Object);
    Code:
       0: aload_0
       1: iconst_4
       2: invokestatic  #125                // Method unmonitor:(Ljava/lang/Object;I)V
       5: return

  private static void unmonitor(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: instanceof    #126                // class java/io/Serializable
       9: ifne          19
      12: aload_0
      13: instanceof    #127                // class net/openhft/chronicle/core/io/MonitorReferenceCounted
      16: ifeq          20
      19: return
      20: aload_0
      21: instanceof    #128                // class net/openhft/chronicle/core/io/Closeable
      24: ifeq          34
      27: aload_0
      28: checkcast     #128                // class net/openhft/chronicle/core/io/Closeable
      31: invokestatic  #129                // Method net/openhft/chronicle/core/io/AbstractCloseable.unmonitor:(Lnet/openhft/chronicle/core/io/Closeable;)V
      34: aload_0
      35: instanceof    #130                // class net/openhft/chronicle/core/io/ReferenceCounted
      38: ifeq          48
      41: aload_0
      42: checkcast     #130                // class net/openhft/chronicle/core/io/ReferenceCounted
      45: invokestatic  #131                // Method net/openhft/chronicle/core/io/AbstractReferenceCounted.unmonitor:(Lnet/openhft/chronicle/core/io/ReferenceCounted;)V
      48: iload_1
      49: ifle          63
      52: aload_0
      53: invokevirtual #132                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: aload_0
      57: iload_1
      58: iconst_1
      59: isub
      60: invokestatic  #133                // Method unmonitor:(Ljava/lang/Class;Ljava/lang/Object;I)V
      63: return

  private static <T> void unmonitor(java.lang.Class, java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: ldc           #134                // class java/lang/Object
       7: if_acmpne     11
      10: return
      11: aload_0
      12: invokevirtual #135                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      15: aload_1
      16: iload_2
      17: invokestatic  #133                // Method unmonitor:(Ljava/lang/Class;Ljava/lang/Object;I)V
      20: aload_0
      21: invokevirtual #136                // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     147
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: invokevirtual #137                // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      50: invokevirtual #138                // Method java/lang/Class.isPrimitive:()Z
      53: ifeq          59
      56: goto          141
      59: aload         6
      61: invokevirtual #139                // Method java/lang/reflect/Field.getModifiers:()I
      64: invokestatic  #140                // Method java/lang/reflect/Modifier.isStatic:(I)Z
      67: ifeq          73
      70: goto          141
      73: aload         6
      75: iconst_1
      76: invokevirtual #141                // Method java/lang/reflect/Field.setAccessible:(Z)V
      79: goto          105
      82: astore        7
      84: invokestatic  #143                // Method net/openhft/chronicle/core/Jvm.isJava9Plus:()Z
      87: ifne          102
      90: invokestatic  #144                // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      93: ldc           #4                  // class net/openhft/chronicle/core/io/IOTools
      95: aload         7
      97: invokeinterface #145,  3          // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
     102: goto          141
     105: aload         6
     107: aload_1
     108: invokevirtual #146                // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: astore        7
     113: aload         7
     115: ifnull        124
     118: aload         7
     120: iload_2
     121: invokestatic  #125                // Method unmonitor:(Ljava/lang/Object;I)V
     124: goto          141
     127: astore        7
     129: invokestatic  #144                // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     132: ldc           #4                  // class net/openhft/chronicle/core/io/IOTools
     134: aload         7
     136: invokeinterface #145,  3          // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
     141: iinc          5, 1
     144: goto          32
     147: return
    Exception table:
       from    to  target type
          73    79    82   Class java/lang/Exception
         105   124   127   Class java/lang/IllegalAccessException

  private static java.util.concurrent.atomic.AtomicInteger lambda$counter$3(java.lang.Class);
    Code:
       0: new           #115                // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #148                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: areturn

  private static java.io.File[] lambda$deleteDirWithFilesOrThrow$2(int);
    Code:
       0: iload_0
       1: anewarray     #7                  // class java/io/File
       4: areturn

  private static void lambda$deleteDirWithFiles$1(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #149                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: invokestatic  #150                // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
       7: goto          45
      10: astore_1
      11: goto          45
      14: astore_1
      15: invokestatic  #152                // Method net/openhft/chronicle/core/Jvm.debug:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      18: ldc           #128                // class net/openhft/chronicle/core/io/Closeable
      20: new           #30                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #153                // String Failed to delete
      29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: aload_1
      40: invokeinterface #154,  4          // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
      45: return
    Exception table:
       from    to  target type
           0     7    10   Class java/nio/file/NoSuchFileException
           0     7    14   Class java/io/IOException

  private static void lambda$deleteDirWithFiles$0(int, java.io.File);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     32
       5: new           #29                 // class java/lang/AssertionError
       8: dup
       9: new           #30                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #155                // String Contains directory
      18: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #36                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      31: athrow
      32: aload_1
      33: iload_0
      34: iconst_1
      35: isub
      36: invokestatic  #10                 // Method deleteDirWithFiles:(Ljava/io/File;I)Z
      39: pop
      40: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/core/io/IOTools
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/io/IOTools;
       7: new           #156                // class java/util/concurrent/ConcurrentHashMap
      10: dup
      11: invokespecial #157                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      14: putstatic     #112                // Field COUNTER_MAP:Ljava/util/Map;
      17: return
}
