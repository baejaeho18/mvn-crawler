Compiled from "ExtendedJsonWrapper.java"
public class org.apache.logging.log4j.core.layout.ExtendedJsonWrapper {
  private final org.apache.logging.log4j.core.LogEvent origin;

  private final java.util.Map<java.lang.String, java.lang.Object> mixed;

  public org.apache.logging.log4j.core.layout.ExtendedJsonWrapper(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/HashMap
       5: dup
       6: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/apache/logging/log4j/core/LogEvent;Ljava/util/Map;)V
      12: return

  public org.apache.logging.log4j.core.layout.ExtendedJsonWrapper(org.apache.logging.log4j.core.LogEvent, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field origin:Lorg/apache/logging/log4j/core/LogEvent;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field mixed:Ljava/util/Map;
      14: return

  public void add(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field mixed:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<java.lang.String, java.lang.Object> getMixed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field mixed:Ljava/util/Map;
       4: areturn

  public org.apache.logging.log4j.core.LogEvent getOrigin();
    Code:
       0: aload_0
       1: getfield      #5                  // Field origin:Lorg/apache/logging/log4j/core/LogEvent;
       4: areturn
}
