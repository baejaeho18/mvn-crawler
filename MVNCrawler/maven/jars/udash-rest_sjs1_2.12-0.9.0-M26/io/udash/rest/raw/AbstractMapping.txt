Compiled from "AbstractMapping.scala"
public abstract class io.udash.rest.raw.AbstractMapping<V> implements scala.PartialFunction<java.lang.String, V> {
  private scala.collection.immutable.Map<java.lang.String, V> toMap;

  private volatile boolean bitmap$0;

  public <A1 extends java.lang.String, B1> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // InterfaceMethod scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
       5: areturn

  public <C> scala.PartialFunction<java.lang.String, C> andThen(scala.Function1<V, C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public scala.Function1<java.lang.String, scala.Option<V>> lift();
    Code:
       0: aload_0
       1: invokestatic  #56                 // InterfaceMethod scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
       4: areturn

  public <U> scala.Function1<java.lang.String, java.lang.Object> runWith(scala.Function1<V, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // InterfaceMethod scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #73                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #80                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #86                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #92                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #98                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #104                // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #110                // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #117                // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #123                // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #129                // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #135                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #141                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #147                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #154                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #160                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #166                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #172                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #178                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #184                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #191                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #197                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #203                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #209                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #215                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, V> compose(scala.Function1<A, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public abstract scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, V>> entries();

  public abstract boolean caseSensitive();

  public abstract io.udash.rest.raw.AbstractMapping createNew(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, V>>);

  private java.lang.String normKey(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #236                // Method caseSensitive:()Z
       4: ifeq          11
       7: aload_1
       8: goto          15
      11: aload_1
      12: invokevirtual #242                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      15: areturn

  private scala.collection.immutable.Map<java.lang.String, V> toMap$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #248                // Field bitmap$0:Z
       8: ifne          51
      11: aload_0
      12: aload_0
      13: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      16: invokeinterface #256,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
      21: aload_0
      22: invokedynamic #280,  0            // InvokeDynamic #0:apply:(Lio/udash/rest/raw/AbstractMapping;)Lscala/Function1;
      27: invokeinterface #286,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      32: getstatic     #292                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      35: invokevirtual #296                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      38: invokeinterface #299,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      43: putfield      #301                // Field toMap:Lscala/collection/immutable/Map;
      46: aload_0
      47: iconst_1
      48: putfield      #248                // Field bitmap$0:Z
      51: aload_1
      52: monitorexit
      53: goto          59
      56: aload_1
      57: monitorexit
      58: athrow
      59: aload_0
      60: getfield      #301                // Field toMap:Lscala/collection/immutable/Map;
      63: areturn
    Exception table:
       from    to  target type
           4    51    56   any

  public scala.collection.immutable.Map<java.lang.String, V> toMap();
    Code:
       0: aload_0
       1: getfield      #248                // Field bitmap$0:Z
       4: ifne          14
       7: aload_0
       8: invokespecial #305                // Method toMap$lzycompute:()Lscala/collection/immutable/Map;
      11: goto          18
      14: aload_0
      15: getfield      #301                // Field toMap:Lscala/collection/immutable/Map;
      18: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       9: ireturn

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #313,  1          // InterfaceMethod scala/collection/immutable/Seq.nonEmpty:()Z
       9: ireturn

  public scala.collection.Iterator<scala.Tuple2<java.lang.String, V>> iterator();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #256,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
       9: areturn

  public boolean isDefinedAt(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #318                // Method toMap:()Lscala/collection/immutable/Map;
       4: aload_0
       5: aload_1
       6: invokespecial #320                // Method normKey:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #324,  2          // InterfaceMethod scala/collection/immutable/Map.contains:(Ljava/lang/Object;)Z
      14: ireturn

  public V apply(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #318                // Method toMap:()Lscala/collection/immutable/Map;
       4: aload_0
       5: aload_1
       6: invokespecial #320                // Method normKey:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #328,  2          // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public <A extends java.lang.String, B> B applyOrElse(A, scala.Function1<A, B>);
    Code:
       0: aload_0
       1: invokevirtual #236                // Method caseSensitive:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #318                // Method toMap:()Lscala/collection/immutable/Map;
      11: aload_1
      12: aload_2
      13: invokeinterface #335,  3          // InterfaceMethod scala/collection/immutable/Map.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      18: goto          42
      21: aload_0
      22: invokevirtual #318                // Method toMap:()Lscala/collection/immutable/Map;
      25: aload_0
      26: aload_1
      27: invokespecial #320                // Method normKey:(Ljava/lang/String;)Ljava/lang/String;
      30: aload_2
      31: aload_1
      32: invokedynamic #344,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/String;)Lscala/Function1;
      37: invokeinterface #335,  3          // InterfaceMethod scala/collection/immutable/Map.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      42: areturn

  public io.udash.rest.raw.AbstractMapping append(java.lang.String, V);
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       9: ifeq          38
      12: aload_0
      13: new           #350                // class scala/collection/immutable/$colon$colon
      16: dup
      17: new           #352                // class scala/Tuple2
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #356                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      26: getstatic     #361                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      29: invokespecial #364                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      32: invokevirtual #366                // Method createNew:(Lscala/collection/immutable/Seq;)Lio/udash/rest/raw/AbstractMapping;
      35: goto          72
      38: aload_0
      39: new           #13                 // class io/udash/rest/raw/AbstractMapping$ConcatSeq
      42: dup
      43: aload_0
      44: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      47: new           #350                // class scala/collection/immutable/$colon$colon
      50: dup
      51: new           #352                // class scala/Tuple2
      54: dup
      55: aload_1
      56: aload_2
      57: invokespecial #356                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: getstatic     #361                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      63: invokespecial #364                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      66: invokespecial #369                // Method io/udash/rest/raw/AbstractMapping$ConcatSeq."<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)V
      69: invokevirtual #366                // Method createNew:(Lscala/collection/immutable/Seq;)Lio/udash/rest/raw/AbstractMapping;
      72: areturn

  public io.udash.rest.raw.AbstractMapping prepend(java.lang.String, V);
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       9: ifeq          38
      12: aload_0
      13: new           #350                // class scala/collection/immutable/$colon$colon
      16: dup
      17: new           #352                // class scala/Tuple2
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #356                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      26: getstatic     #361                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      29: invokespecial #364                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      32: invokevirtual #366                // Method createNew:(Lscala/collection/immutable/Seq;)Lio/udash/rest/raw/AbstractMapping;
      35: goto          72
      38: aload_0
      39: new           #13                 // class io/udash/rest/raw/AbstractMapping$ConcatSeq
      42: dup
      43: new           #350                // class scala/collection/immutable/$colon$colon
      46: dup
      47: new           #352                // class scala/Tuple2
      50: dup
      51: aload_1
      52: aload_2
      53: invokespecial #356                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      56: getstatic     #361                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      59: invokespecial #364                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      62: aload_0
      63: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      66: invokespecial #369                // Method io/udash/rest/raw/AbstractMapping$ConcatSeq."<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)V
      69: invokevirtual #366                // Method createNew:(Lscala/collection/immutable/Seq;)Lio/udash/rest/raw/AbstractMapping;
      72: areturn

  public io.udash.rest.raw.AbstractMapping $plus$plus(io.udash.rest.raw.AbstractMapping);
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       9: ifeq          16
      12: aload_1
      13: goto          51
      16: aload_1
      17: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      20: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
      25: ifeq          32
      28: aload_0
      29: goto          51
      32: aload_0
      33: new           #13                 // class io/udash/rest/raw/AbstractMapping$ConcatSeq
      36: dup
      37: aload_0
      38: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      41: aload_1
      42: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      45: invokespecial #369                // Method io/udash/rest/raw/AbstractMapping$ConcatSeq."<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)V
      48: invokevirtual #366                // Method createNew:(Lscala/collection/immutable/Seq;)Lio/udash/rest/raw/AbstractMapping;
      51: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
       4: invokeinterface #380,  1          // InterfaceMethod scala/collection/GenSeqLike.hashCode:()I
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #2                  // class io/udash/rest/raw/AbstractMapping
       6: ifeq          68
       9: aload_3
      10: checkcast     #2                  // class io/udash/rest/raw/AbstractMapping
      13: astore        4
      15: aload_0
      16: invokevirtual #236                // Method caseSensitive:()Z
      19: aload         4
      21: invokevirtual #236                // Method caseSensitive:()Z
      24: if_icmpne     63
      27: aload_0
      28: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      31: aload         4
      33: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      36: astore        5
      38: dup
      39: ifnonnull     51
      42: pop
      43: aload         5
      45: ifnull        59
      48: goto          63
      51: aload         5
      53: invokevirtual #384                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore_2
      65: goto          76
      68: goto          71
      71: iconst_0
      72: istore_2
      73: goto          76
      76: iload_2
      77: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #236                // Method caseSensitive:()Z
       4: ifeq          13
       7: ldc_w         #387                // String Mapping(
      10: goto          16
      13: ldc_w         #389                // String IMapping(
      16: astore_1
      17: aload_0
      18: invokevirtual #250                // Method entries:()Lscala/collection/immutable/Seq;
      21: invokeinterface #256,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
      26: invokedynamic #397,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      31: invokeinterface #286,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      36: aload_1
      37: ldc_w         #399                // String ,
      40: ldc_w         #401                // String )
      43: invokeinterface #405,  4          // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: areturn

  public scala.Function1 andThen(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #408                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
       5: areturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #238                // class java/lang/String
       5: aload_2
       6: invokevirtual #411                // Method applyOrElse:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #238                // class java/lang/String
       5: invokevirtual #413                // Method apply:(Ljava/lang/String;)Ljava/lang/Object;
       8: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #238                // class java/lang/String
       5: invokevirtual #415                // Method isDefinedAt:(Ljava/lang/String;)Z
       8: ireturn

  public static final scala.Tuple2 $anonfun$toMap$1(io.udash.rest.raw.AbstractMapping, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        40
       6: aload_3
       7: invokevirtual #421                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #238                // class java/lang/String
      13: astore        4
      15: aload_3
      16: invokevirtual #424                // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: astore        5
      21: new           #352                // class scala/Tuple2
      24: dup
      25: aload_0
      26: aload         4
      28: invokespecial #320                // Method normKey:(Ljava/lang/String;)Ljava/lang/String;
      31: aload         5
      33: invokespecial #356                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      36: astore_2
      37: goto          52
      40: goto          43
      43: new           #426                // class scala/MatchError
      46: dup
      47: aload_3
      48: invokespecial #429                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: aload_2
      53: areturn

  public static final java.lang.Object $anonfun$applyOrElse$1(scala.Function1, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #435,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static final java.lang.String $anonfun$toString$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        52
       6: aload_2
       7: invokevirtual #421                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #238                // class java/lang/String
      13: astore_3
      14: aload_2
      15: invokevirtual #424                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: new           #437                // class java/lang/StringBuilder
      23: dup
      24: ldc_w         #438                // int 2
      27: invokespecial #440                // Method java/lang/StringBuilder."<init>":(I)V
      30: aload_3
      31: invokevirtual #443                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #445                // String ->
      37: invokevirtual #443                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload         4
      42: invokevirtual #448                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: invokevirtual #450                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_1
      49: goto          64
      52: goto          55
      55: new           #426                // class scala/MatchError
      58: dup
      59: aload_2
      60: invokespecial #429                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      63: athrow
      64: aload_1
      65: areturn

  public io.udash.rest.raw.AbstractMapping();
    Code:
       0: aload_0
       1: invokespecial #454                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #458                // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
       8: aload_0
       9: invokestatic  #461                // InterfaceMethod scala/PartialFunction.$init$:(Lscala/PartialFunction;)V
      12: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #473,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
