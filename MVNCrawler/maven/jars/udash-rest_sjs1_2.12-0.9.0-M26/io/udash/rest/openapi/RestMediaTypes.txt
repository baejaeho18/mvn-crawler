Compiled from "RestSchema.scala"
public interface io.udash.rest.openapi.RestMediaTypes<T> {
  public static <T> com.avsystem.commons.misc.ImplicitNotFound<io.udash.rest.openapi.RestMediaTypes<T>> notFound(com.avsystem.commons.misc.ImplicitNotFound<io.udash.rest.openapi.RestSchema<T>>);
    Code:
       0: getstatic     #19                 // Field io/udash/rest/openapi/RestMediaTypes$.MODULE$:Lio/udash/rest/openapi/RestMediaTypes$;
       3: aload_0
       4: invokevirtual #21                 // Method io/udash/rest/openapi/RestMediaTypes$.notFound:(Lcom/avsystem/commons/misc/ImplicitNotFound;)Lcom/avsystem/commons/misc/ImplicitNotFound;
       7: areturn

  public static <T> io.udash.rest.openapi.RestMediaTypes<T> fromSchema(io.udash.rest.openapi.RestSchema<T>);
    Code:
       0: getstatic     #19                 // Field io/udash/rest/openapi/RestMediaTypes$.MODULE$:Lio/udash/rest/openapi/RestMediaTypes$;
       3: aload_0
       4: invokevirtual #27                 // Method io/udash/rest/openapi/RestMediaTypes$.fromSchema:(Lio/udash/rest/openapi/RestSchema;)Lio/udash/rest/openapi/RestMediaTypes;
       7: areturn

  public static io.udash.rest.openapi.RestMediaTypes<byte[]> ByteArrayMediaTypes();
    Code:
       0: getstatic     #19                 // Field io/udash/rest/openapi/RestMediaTypes$.MODULE$:Lio/udash/rest/openapi/RestMediaTypes$;
       3: invokevirtual #32                 // Method io/udash/rest/openapi/RestMediaTypes$.ByteArrayMediaTypes:()Lio/udash/rest/openapi/RestMediaTypes;
       6: areturn

  public static <T> io.udash.rest.openapi.RestMediaTypes<T> apply(io.udash.rest.openapi.RestMediaTypes<T>);
    Code:
       0: getstatic     #19                 // Field io/udash/rest/openapi/RestMediaTypes$.MODULE$:Lio/udash/rest/openapi/RestMediaTypes$;
       3: aload_0
       4: invokevirtual #38                 // Method io/udash/rest/openapi/RestMediaTypes$.apply:(Lio/udash/rest/openapi/RestMediaTypes;)Lio/udash/rest/openapi/RestMediaTypes;
       7: areturn

  public abstract scala.collection.immutable.Map<java.lang.String, io.udash.rest.openapi.MediaType> mediaTypes(io.udash.rest.openapi.SchemaResolver, scala.Function1<io.udash.rest.openapi.RestSchema<?>, io.udash.rest.openapi.RestSchema<?>>);
}
