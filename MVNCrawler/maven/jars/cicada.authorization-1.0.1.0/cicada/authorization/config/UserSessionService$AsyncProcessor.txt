Compiled from "UserSessionService.java"
public class cicada.authorization.config.UserSessionService$AsyncProcessor<I extends cicada.authorization.config.UserSessionService$AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
  private static final org.slf4j.Logger _LOGGER;

  public cicada.authorization.config.UserSessionService$AsyncProcessor(I);
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class java/util/HashMap
       5: dup
       6: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       9: invokestatic  #4                  // Method getProcessMap:(Ljava/util/Map;)Ljava/util/Map;
      12: invokespecial #5                  // Method org/apache/thrift/TBaseAsyncProcessor."<init>":(Ljava/lang/Object;Ljava/util/Map;)V
      15: return

  protected cicada.authorization.config.UserSessionService$AsyncProcessor(I, java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #4                  // Method getProcessMap:(Ljava/util/Map;)Ljava/util/Map;
       6: invokespecial #5                  // Method org/apache/thrift/TBaseAsyncProcessor."<init>":(Ljava/lang/Object;Ljava/util/Map;)V
       9: return

  private static <I extends cicada.authorization.config.UserSessionService$AsyncIface> java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>);
    Code:
       0: aload_0
       1: ldc           #6                  // String CreateSession
       3: new           #7                  // class cicada/authorization/config/UserSessionService$AsyncProcessor$CreateSession
       6: dup
       7: invokespecial #8                  // Method cicada/authorization/config/UserSessionService$AsyncProcessor$CreateSession."<init>":()V
      10: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: ldc           #10                 // String GetUserId
      19: new           #11                 // class cicada/authorization/config/UserSessionService$AsyncProcessor$GetUserId
      22: dup
      23: invokespecial #12                 // Method cicada/authorization/config/UserSessionService$AsyncProcessor$GetUserId."<init>":()V
      26: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: ldc           #13                 // String RemoveSession
      35: new           #14                 // class cicada/authorization/config/UserSessionService$AsyncProcessor$RemoveSession
      38: dup
      39: invokespecial #15                 // Method cicada/authorization/config/UserSessionService$AsyncProcessor$RemoveSession."<init>":()V
      42: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field _LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #16                 // class cicada/authorization/config/UserSessionService$AsyncProcessor
       2: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       8: putstatic     #1                  // Field _LOGGER:Lorg/slf4j/Logger;
      11: return
}
