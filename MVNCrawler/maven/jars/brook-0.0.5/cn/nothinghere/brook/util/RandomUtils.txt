Compiled from "RandomUtils.java"
public final class cn.nothinghere.brook.util.RandomUtils {
  private cn.nothinghere.brook.util.RandomUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K> K choice(java.util.Map<K, java.lang.Integer>);
    Code:
       0: new           #2                  // class java/util/TreeMap
       3: dup
       4: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
       7: astore_1
       8: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      11: dup
      12: dconst_0
      13: invokestatic  #5                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      19: astore_2
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Ljava/util/TreeMap;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/BiConsumer;
      28: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      33: aload_1
      34: invokevirtual #9                  // Method java/util/TreeMap.lastKey:()Ljava/lang/Object;
      37: checkcast     #10                 // class java/lang/Double
      40: invokevirtual #11                 // Method java/lang/Double.doubleValue:()D
      43: invokestatic  #12                 // Method java/lang/Math.random:()D
      46: dmul
      47: dstore_3
      48: aload_1
      49: dload_3
      50: invokestatic  #5                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      53: iconst_0
      54: invokevirtual #13                 // Method java/util/TreeMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
      57: astore        5
      59: aload_1
      60: aload         5
      62: invokeinterface #14,  1           // InterfaceMethod java/util/SortedMap.firstKey:()Ljava/lang/Object;
      67: invokevirtual #15                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      70: areturn

  public static <T> java.util.List<T> choice(java.util.List<T>, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
       7: if_icmpgt     14
      10: iload_1
      11: ifgt          24
      14: new           #17                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #18                 // String 选取的元素个数必须为正数且不能大于源列表长度
      20: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokestatic  #20                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      28: aload_0
      29: invokeinterface #21,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      34: iload_1
      35: i2l
      36: invokeinterface #22,  3           // InterfaceMethod java/util/stream/Stream.limit:(J)Ljava/util/stream/Stream;
      41: invokestatic  #23                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      44: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      49: checkcast     #25                 // class java/util/List
      52: areturn

  public static <T> T choice(java.util.List<T>);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: new           #27                 // class java/security/SecureRandom
      15: dup
      16: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
      19: aload_0
      20: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      25: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      28: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: areturn

  public static <T> java.util.Set<T> choice(java.util.Set<T>, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokeinterface #31,  1           // InterfaceMethod java/util/Set.size:()I
       7: if_icmpgt     14
      10: iload_1
      11: ifgt          24
      14: new           #17                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #18                 // String 选取的元素个数必须为正数且不能大于源列表长度
      20: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #32                 // class java/util/ArrayList
      27: dup
      28: aload_0
      29: invokespecial #33                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      32: astore_2
      33: aload_2
      34: invokestatic  #20                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      37: aload_2
      38: iload_1
      39: invokestatic  #34                 // Method choice:(Ljava/util/List;I)Ljava/util/List;
      42: astore_3
      43: new           #35                 // class java/util/HashSet
      46: dup
      47: aload_3
      48: invokespecial #36                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      51: areturn

  public static <T> T choice(java.util.Set<T>);
    Code:
       0: new           #32                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_1
       9: aload_1
      10: invokestatic  #20                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      13: aload_1
      14: invokestatic  #37                 // Method choice:(Ljava/util/List;)Ljava/lang/Object;
      17: areturn

  public static <T> T[] choice(T[], int);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          15
       5: new           #17                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #38                 // String 数组不能为空
      11: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_1
      16: iconst_1
      17: if_icmpge     30
      20: new           #17                 // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #39                 // String 选取的数目必须为正数
      26: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: arraylength
      32: iload_1
      33: if_icmpgt     38
      36: aload_0
      37: areturn
      38: aload_0
      39: invokestatic  #40                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      42: iload_1
      43: invokestatic  #34                 // Method choice:(Ljava/util/List;I)Ljava/util/List;
      46: astore_2
      47: aload_0
      48: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokevirtual #42                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      54: aload_2
      55: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      60: invokestatic  #43                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      63: checkcast     #44                 // class "[Ljava/lang/Object;"
      66: checkcast     #44                 // class "[Ljava/lang/Object;"
      69: astore_3
      70: iconst_0
      71: istore        4
      73: iload         4
      75: aload_2
      76: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      81: if_icmpge     102
      84: aload_3
      85: iload         4
      87: aload_2
      88: iload         4
      90: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: aastore
      96: iinc          4, 1
      99: goto          73
     102: aload_3
     103: areturn

  public static <T> T choice(T[]);
    Code:
       0: aload_0
       1: new           #27                 // class java/security/SecureRandom
       4: dup
       5: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
       8: aload_0
       9: arraylength
      10: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      13: aaload
      14: areturn

  public static <K, V> V choiceV(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: aload_0
       2: invokestatic  #45                 // Method choiceK:(Ljava/util/Map;)Ljava/lang/Object;
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static <K, V> K choiceK(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: astore_1
       7: aload_1
       8: invokestatic  #48                 // Method choice:(Ljava/util/Set;)Ljava/lang/Object;
      11: areturn

  public static int odd(int);
    Code:
       0: new           #27                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
       7: iload_0
       8: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      11: iconst_1
      12: ior
      13: ireturn

  public static int even(int);
    Code:
       0: new           #27                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
       7: iload_0
       8: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      11: bipush        -2
      13: iand
      14: ireturn

  public static int nextInt(int);
    Code:
       0: new           #27                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
       7: iload_0
       8: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      11: ireturn

  public static int nextInt(int, int);
    Code:
       0: new           #27                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #28                 // Method java/security/SecureRandom."<init>":()V
       7: iload_1
       8: iload_0
       9: isub
      10: invokevirtual #29                 // Method java/security/SecureRandom.nextInt:(I)I
      13: iload_0
      14: iadd
      15: ireturn

  private static void lambda$choice$1(java.util.TreeMap, java.util.concurrent.atomic.AtomicReference, java.lang.Object, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokedynamic #49,  0             // InvokeDynamic #1:apply:(Ljava/lang/Integer;)Ljava/util/function/UnaryOperator;
       8: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReference.updateAndGet:(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      11: aload_2
      12: invokevirtual #51                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  private static java.lang.Double lambda$null$0(java.lang.Integer, java.lang.Double);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/Double.doubleValue:()D
       4: aload_0
       5: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
       8: i2d
       9: dadd
      10: invokestatic  #5                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      13: areturn
}
