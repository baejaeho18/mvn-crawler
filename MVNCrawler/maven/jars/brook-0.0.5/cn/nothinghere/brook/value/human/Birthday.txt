Compiled from "Birthday.java"
public class cn.nothinghere.brook.value.human.Birthday implements cn.nothinghere.brook.Field,cn.nothinghere.brook.Randomize,java.io.Serializable {
  private static final long serialVersionUID;

  private static final int MIN_AGE;

  private static final int MAX_AGE;

  private java.time.LocalDate birth;

  public cn.nothinghere.brook.value.human.Birthday();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.time.LocalDate getBirth();
    Code:
       0: aload_0
       1: getfield      #2                  // Field birth:Ljava/time/LocalDate;
       4: areturn

  public void setBirth(java.time.LocalDate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field birth:Ljava/time/LocalDate;
       5: return

  public void setBirth(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field java/time/format/DateTimeFormatter.BASIC_ISO_DATE:Ljava/time/format/DateTimeFormatter;
       5: invokestatic  #4                  // Method java/time/LocalDate.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate;
       8: putfield      #2                  // Field birth:Ljava/time/LocalDate;
      11: return

  public static java.time.LocalDate choiceByAge(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_1
       3: iadd
       4: invokestatic  #5                  // Method choiceByAge:(II)Ljava/time/LocalDate;
       7: areturn

  public static java.time.LocalDate choiceByAge(int, int);
    Code:
       0: iload_0
       1: ifle          8
       4: iload_1
       5: ifgt          18
       8: new           #6                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #7                  // String 起始年龄和结束年龄必须为正数
      14: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_0
      19: iload_1
      20: if_icmplt     33
      23: new           #6                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #9                  // String 结束年龄不允许小于等于起始年龄
      29: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: invokestatic  #10                 // Method java/time/LocalDate.now:()Ljava/time/LocalDate;
      36: astore_2
      37: aload_2
      38: iload_1
      39: ineg
      40: i2l
      41: invokevirtual #11                 // Method java/time/LocalDate.plusYears:(J)Ljava/time/LocalDate;
      44: lconst_1
      45: invokevirtual #12                 // Method java/time/LocalDate.plusDays:(J)Ljava/time/LocalDate;
      48: astore_3
      49: aload_2
      50: iload_0
      51: ineg
      52: i2l
      53: invokevirtual #11                 // Method java/time/LocalDate.plusYears:(J)Ljava/time/LocalDate;
      56: astore        4
      58: aload_3
      59: aload         4
      61: lconst_1
      62: invokevirtual #12                 // Method java/time/LocalDate.plusDays:(J)Ljava/time/LocalDate;
      65: invokestatic  #13                 // Method randomDate:(Ljava/time/LocalDate;Ljava/time/LocalDate;)Ljava/time/LocalDate;
      68: areturn

  private static java.time.LocalDate randomDate(java.time.LocalDate, java.time.LocalDate);
    Code:
       0: getstatic     #14                 // Field java/time/temporal/ChronoUnit.DAYS:Ljava/time/temporal/ChronoUnit;
       3: aload_0
       4: aload_1
       5: invokevirtual #15                 // Method java/time/temporal/ChronoUnit.between:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)J
       8: lstore_2
       9: aload_0
      10: lload_2
      11: l2i
      12: invokestatic  #16                 // Method cn/nothinghere/brook/util/RandomUtils.nextInt:(I)I
      15: i2l
      16: invokevirtual #12                 // Method java/time/LocalDate.plusDays:(J)Ljava/time/LocalDate;
      19: areturn

  public java.lang.String asString();
    Code:
       0: getstatic     #3                  // Field java/time/format/DateTimeFormatter.BASIC_ISO_DATE:Ljava/time/format/DateTimeFormatter;
       3: aload_0
       4: getfield      #2                  // Field birth:Ljava/time/LocalDate;
       7: invokevirtual #17                 // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
      10: areturn

  public void randomIfNull();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getBirth:()Ljava/time/LocalDate;
       4: ifnonnull     18
       7: aload_0
       8: bipush        18
      10: bipush        81
      12: invokestatic  #5                  // Method choiceByAge:(II)Ljava/time/LocalDate;
      15: invokevirtual #20                 // Method setBirth:(Ljava/time/LocalDate;)V
      18: return
}
