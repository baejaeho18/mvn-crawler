<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
	<l:layout title="Remote API">
		<l:main-panel>
      <h1>Remote API</h1>

      <p>
        Many objects of Hudson provides the remote access API. They are available
        at <tt>${rootURL}/.../api/</tt> where "..." portion is the object for
        which you'd like to access.
      </p>

      <dl>
        <dt><a href="xml">XML API</a></dt>
        <dd>
          Access data exposed in <a href="..">HTML</a> as XML for machine consumption.
          <a href="schema">Schema</a> is also available.
          You can also specify optional XPath to control the fragment you'd like to obtain.
          For example, <tt>../api/xml?xpath=/*/*[0]</tt>. If the XPath only matches a text node,
          the result will be sent with <tt>text/plain</tt> MIME type to simplify
          further processing.

          For XPath that matches multiple nodes, you need to also specify the "wrapper" query parameter
          to specify the name of the root XML element to be create so that the resulting XML becomes well-formed.
        </dd>

        <dt><a href="json">JSON API</a></dt>
        <dd>
          Access the same data as JSON for JavaScript-based access. Supports
          <a href="http://ajaxian.com/archives/jsonp-json-with-padding">JSONP</a> through
          the optional <tt>jsonp=<i>callbackname</i></tt> query parameter.
        </dd>
      </dl>

      <p>
        For more information about remote API in Hudson, see
        <a href="http://hudson.gotdns.com/wiki/display/HUDSON/Remote+access+API">the documentation</a>.
      </p>

      <h2>Controling the amount of data you fetch</h2>
      <p>
        In both formats, the <tt>depth</tt> query parameter can be used to control the amount of data
        you'll receive. The default is <tt>depth=0</tt>, but by increasing this value you can get
        a lot of data by single remote API invocation (the downside is bigger bandwidth requirement.)
        Compare <a href="xml">depth=0</a> and <a href="xml?depth=1">depth=1</a> and see what the difference
        is for yourself. Also note that data created by a smaller depth value is always a subset of
        the data created by a bigger depth value.
      </p>

      <st:include it="${it.bean}" page="_api.jelly" optional="true" />
    </l:main-panel>
	</l:layout>
</j:jelly>
