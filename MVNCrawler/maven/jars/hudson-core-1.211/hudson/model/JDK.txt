Compiled from "JDK.java"
public final class hudson.model.JDK {
  private final java.lang.String name;

  private final java.lang.String javaHome;

  public hudson.model.JDK(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field javaHome:Ljava/lang/String;
      14: return

  public java.lang.String getJavaHome();
    Code:
       0: aload_0
       1: getfield      #3                  // Field javaHome:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public java.io.File getBinDir();
    Code:
       0: new           #4                  // class java/io/File
       3: dup
       4: aload_0
       5: invokevirtual #5                  // Method getJavaHome:()Ljava/lang/String;
       8: ldc           #6                  // String bin
      10: invokespecial #7                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: areturn

  private java.io.File getExecutable();
    Code:
       0: getstatic     #8                  // Field java/io/File.separatorChar:C
       3: bipush        92
       5: if_icmpne     14
       8: ldc           #9                  // String java.exe
      10: astore_1
      11: goto          17
      14: ldc           #10                 // String java
      16: astore_1
      17: new           #4                  // class java/io/File
      20: dup
      21: aload_0
      22: invokevirtual #5                  // Method getJavaHome:()Ljava/lang/String;
      25: new           #11                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #13                 // String bin/
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #7                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      47: areturn

  public boolean getExists();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getExecutable:()Ljava/io/File;
       4: invokevirtual #17                 // Method java/io/File.exists:()Z
       7: ireturn

  public void buildEnvVars(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #18                 // String PATH+JDK
       3: aload_0
       4: invokevirtual #19                 // Method getBinDir:()Ljava/io/File;
       7: invokevirtual #20                 // Method java/io/File.getPath:()Ljava/lang/String;
      10: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_1
      17: ldc           #22                 // String JAVA_HOME
      19: aload_0
      20: getfield      #3                  // Field javaHome:Ljava/lang/String;
      23: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_1
      30: ldc           #23                 // String HUDSON_HOME
      32: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      37: ifne          58
      40: aload_1
      41: ldc           #23                 // String HUDSON_HOME
      43: invokestatic  #25                 // Method hudson/model/Hudson.getInstance:()Lhudson/model/Hudson;
      46: invokevirtual #26                 // Method hudson/model/Hudson.getRootDir:()Ljava/io/File;
      49: invokevirtual #20                 // Method java/io/File.getPath:()Ljava/lang/String;
      52: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: return

  public static boolean isDefaultJDKValid(hudson.model.Node);
    Code:
       0: new           #27                 // class hudson/util/StreamTaskListener
       3: dup
       4: new           #28                 // class hudson/util/NullStream
       7: dup
       8: invokespecial #29                 // Method hudson/util/NullStream."<init>":()V
      11: invokespecial #30                 // Method hudson/util/StreamTaskListener."<init>":(Ljava/io/OutputStream;)V
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokeinterface #31,  2           // InterfaceMethod hudson/model/Node.createLauncher:(Lhudson/model/TaskListener;)Lhudson/Launcher;
      22: astore_2
      23: aload_2
      24: ldc           #32                 // String java -fullversion
      26: iconst_0
      27: anewarray     #33                 // class java/lang/String
      30: aload_1
      31: invokeinterface #34,  1           // InterfaceMethod hudson/model/TaskListener.getLogger:()Ljava/io/PrintStream;
      36: aconst_null
      37: invokevirtual #35                 // Method hudson/Launcher.launch:(Ljava/lang/String;[Ljava/lang/String;Ljava/io/OutputStream;Lhudson/FilePath;)Lhudson/Proc;
      40: invokevirtual #36                 // Method hudson/Proc.join:()I
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: astore_1
      53: iconst_0
      54: ireturn
      55: astore_1
      56: iconst_0
      57: ireturn
    Exception table:
       from    to  target type
           0    51    52   Class java/io/IOException
           0    51    55   Class java/lang/InterruptedException
}
