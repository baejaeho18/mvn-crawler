Compiled from "DaemonThreadFactory.java"
public class hudson.util.DaemonThreadFactory implements java.util.concurrent.ThreadFactory {
  private final java.util.concurrent.ThreadFactory core;

  public hudson.util.DaemonThreadFactory();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: invokespecial #2                  // Method "<init>":(Ljava/util/concurrent/ThreadFactory;)V
       7: return

  public hudson.util.DaemonThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field core:Ljava/util/concurrent/ThreadFactory;
       9: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field core:Ljava/util/concurrent/ThreadFactory;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      10: astore_2
      11: aload_2
      12: iconst_1
      13: invokevirtual #6                  // Method java/lang/Thread.setDaemon:(Z)V
      16: aload_2
      17: areturn
}
