Compiled from "AdaptedIterator.java"
public abstract class hudson.util.AdaptedIterator<T, U> implements java.util.Iterator<U> {
  private final java.util.Iterator<? extends T> core;

  protected hudson.util.AdaptedIterator(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field core:Ljava/util/Iterator;
       9: return

  protected hudson.util.AdaptedIterator(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       7: invokespecial #4                  // Method "<init>":(Ljava/util/Iterator;)V
      10: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field core:Ljava/util/Iterator;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public U next();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field core:Ljava/util/Iterator;
       5: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      10: invokevirtual #7                  // Method adapt:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  protected abstract U adapt(T);

  public void remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field core:Ljava/util/Iterator;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.remove:()V
       9: return
}
