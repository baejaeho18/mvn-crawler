Compiled from "WriterOutputStream.java"
public class hudson.util.WriterOutputStream extends java.io.OutputStream {
  private final java.io.Writer writer;

  private final java.nio.charset.CharsetDecoder decoder;

  private java.nio.ByteBuffer buf;

  private java.nio.CharBuffer out;

  private static final java.nio.charset.Charset DEFAULT_CHARSET;

  public hudson.util.WriterOutputStream(java.io.Writer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: sipush        1024
       8: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      11: putfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      14: aload_0
      15: sipush        1024
      18: invokestatic  #4                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      21: putfield      #5                  // Field out:Ljava/nio/CharBuffer;
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field writer:Ljava/io/Writer;
      29: aload_0
      30: getstatic     #7                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      33: invokevirtual #8                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      36: putfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      39: aload_0
      40: getfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      43: getstatic     #10                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      46: invokevirtual #11                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      49: pop
      50: aload_0
      51: getfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      54: getstatic     #10                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      57: invokevirtual #12                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      60: pop
      61: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
       7: ifne          15
      10: aload_0
      11: iconst_0
      12: invokespecial #14                 // Method decode:(Z)V
      15: aload_0
      16: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      19: iload_1
      20: i2b
      21: invokevirtual #15                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      24: pop
      25: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          57
       4: aload_0
       5: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       8: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
      11: ifne          19
      14: aload_0
      15: iconst_0
      16: invokespecial #14                 // Method decode:(Z)V
      19: aload_0
      20: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      23: invokevirtual #13                 // Method java/nio/ByteBuffer.remaining:()I
      26: iload_3
      27: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      30: istore        4
      32: aload_0
      33: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      36: aload_1
      37: iload_2
      38: iload         4
      40: invokevirtual #17                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      43: pop
      44: iload_2
      45: iload         4
      47: iadd
      48: istore_2
      49: iload_3
      50: iload         4
      52: isub
      53: istore_3
      54: goto          0
      57: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #14                 // Method decode:(Z)V
       5: aload_0
       6: invokespecial #18                 // Method flushOutput:()V
       9: aload_0
      10: getfield      #6                  // Field writer:Ljava/io/Writer;
      13: invokevirtual #19                 // Method java/io/Writer.flush:()V
      16: return

  private void flushOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writer:Ljava/io/Writer;
       4: aload_0
       5: getfield      #5                  // Field out:Ljava/nio/CharBuffer;
       8: invokevirtual #20                 // Method java/nio/CharBuffer.array:()[C
      11: iconst_0
      12: aload_0
      13: getfield      #5                  // Field out:Ljava/nio/CharBuffer;
      16: invokevirtual #21                 // Method java/nio/CharBuffer.position:()I
      19: invokevirtual #22                 // Method java/io/Writer.write:([CII)V
      22: aload_0
      23: getfield      #5                  // Field out:Ljava/nio/CharBuffer;
      26: invokevirtual #23                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      29: pop
      30: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #14                 // Method decode:(Z)V
       5: aload_0
       6: invokespecial #18                 // Method flushOutput:()V
       9: aload_0
      10: getfield      #6                  // Field writer:Ljava/io/Writer;
      13: invokevirtual #24                 // Method java/io/Writer.close:()V
      16: aload_0
      17: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      20: invokevirtual #25                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      23: pop
      24: return

  private void decode(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #26                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      12: aload_0
      13: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      16: aload_0
      17: getfield      #5                  // Field out:Ljava/nio/CharBuffer;
      20: iload_1
      21: invokevirtual #27                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      24: astore_2
      25: aload_2
      26: getstatic     #28                 // Field java/nio/charset/CoderResult.OVERFLOW:Ljava/nio/charset/CoderResult;
      29: if_acmpne     39
      32: aload_0
      33: invokespecial #18                 // Method flushOutput:()V
      36: goto          8
      39: aload_2
      40: getstatic     #29                 // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
      43: if_acmpne     55
      46: aload_0
      47: getfield      #3                  // Field buf:Ljava/nio/ByteBuffer;
      50: invokevirtual #30                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      53: pop
      54: return
      55: aload_2
      56: invokevirtual #31                 // Method java/nio/charset/CoderResult.throwException:()V
      59: goto          8

  private static java.nio.charset.Charset getDefaultCharset();
    Code:
       0: ldc           #32                 // String file.encoding
       2: invokestatic  #33                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: aload_0
       7: invokestatic  #34                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      10: areturn
      11: astore_0
      12: ldc           #36                 // String UTF-8
      14: invokestatic  #34                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      17: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/nio/charset/UnsupportedCharsetException

  static {};
    Code:
       0: invokestatic  #37                 // Method getDefaultCharset:()Ljava/nio/charset/Charset;
       3: putstatic     #7                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
