Compiled from "BuildTrigger.java"
public class hudson.tasks.BuildTrigger extends hudson.tasks.Publisher implements hudson.model.DependecyDeclarer,hudson.matrix.MatrixAggregatable {
  private java.lang.String childProjects;

  private final hudson.model.Result threshold;

  public static final hudson.model.Descriptor<hudson.tasks.Publisher> DESCRIPTOR;

  private static final java.util.logging.Logger LOGGER;

  public hudson.tasks.BuildTrigger(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ifeq          12
       6: getstatic     #3                  // Field hudson/model/Result.UNSTABLE:Lhudson/model/Result;
       9: goto          15
      12: getstatic     #4                  // Field hudson/model/Result.SUCCESS:Lhudson/model/Result;
      15: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Lhudson/model/Result;)V
      18: return

  public hudson.tasks.BuildTrigger(java.lang.String, hudson.model.Result);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method hudson/tasks/Publisher."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #7                  // class java/lang/IllegalArgumentException
      11: dup
      12: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field childProjects:Ljava/lang/String;
      21: aload_0
      22: aload_2
      23: putfield      #10                 // Field threshold:Lhudson/model/Result;
      26: return

  public hudson.tasks.BuildTrigger(java.util.List<hudson.model.AbstractProject>, hudson.model.Result);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method hudson/model/Items.toNameList:(Ljava/util/Collection;)Ljava/lang/String;
       5: aload_2
       6: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Lhudson/model/Result;)V
       9: return

  public java.lang.String getChildProjectsValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field childProjects:Ljava/lang/String;
       4: areturn

  public hudson.model.Result getThreshold();
    Code:
       0: aload_0
       1: getfield      #10                 // Field threshold:Lhudson/model/Result;
       4: ifnonnull     11
       7: getstatic     #4                  // Field hudson/model/Result.SUCCESS:Lhudson/model/Result;
      10: areturn
      11: aload_0
      12: getfield      #10                 // Field threshold:Lhudson/model/Result;
      15: areturn

  public java.util.List<hudson.model.AbstractProject> getChildProjects();
    Code:
       0: aload_0
       1: getfield      #9                  // Field childProjects:Ljava/lang/String;
       4: ldc_w         #12                 // class hudson/model/AbstractProject
       7: invokestatic  #13                 // Method hudson/model/Items.fromNameList:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
      10: areturn

  public boolean hasSame(java.util.Collection<? extends hudson.model.AbstractProject>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getChildProjects:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokeinterface #15,  1           // InterfaceMethod java/util/List.size:()I
      11: aload_1
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.size:()I
      17: if_icmpne     34
      20: aload_2
      21: aload_1
      22: invokeinterface #17,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean perform(hudson.model.AbstractBuild, hudson.Launcher, hudson.model.BuildListener);
    Code:
       0: aload_1
       1: instanceof    #18                 // class hudson/matrix/MatrixRun
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: instanceof    #19                 // class hudson/maven/MavenModuleSetBuild
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: aload_1
      20: aload_3
      21: invokespecial #2                  // Method execute:(Lhudson/model/AbstractBuild;Lhudson/model/BuildListener;)Z
      24: ireturn

  private boolean execute(hudson.model.AbstractBuild, hudson.model.BuildListener);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method hudson/model/AbstractBuild.getResult:()Lhudson/model/Result;
       4: aload_0
       5: invokevirtual #21                 // Method getThreshold:()Lhudson/model/Result;
       8: invokevirtual #22                 // Method hudson/model/Result.isWorseThan:(Lhudson/model/Result;)Z
      11: ifne          142
      14: aload_2
      15: invokeinterface #23,  1           // InterfaceMethod hudson/model/BuildListener.getLogger:()Ljava/io/PrintStream;
      20: astore_3
      21: aload_0
      22: invokevirtual #14                 // Method getChildProjects:()Ljava/util/List;
      25: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          142
      42: aload         4
      44: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #12                 // class hudson/model/AbstractProject
      52: astore        5
      54: aload         5
      56: invokevirtual #27                 // Method hudson/model/AbstractProject.isDisabled:()Z
      59: ifeq          77
      62: aload_3
      63: aload         5
      65: invokevirtual #28                 // Method hudson/model/AbstractProject.getName:()Ljava/lang/String;
      68: invokestatic  #29                 // Method hudson/tasks/Messages.BuildTrigger_Disabled:(Ljava/lang/Object;)Ljava/lang/String;
      71: invokevirtual #30                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      74: goto          32
      77: new           #31                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      84: aload         5
      86: invokevirtual #28                 // Method hudson/model/AbstractProject.getName:()Ljava/lang/String;
      89: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #34                 // String  #
      94: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload         5
      99: invokevirtual #35                 // Method hudson/model/AbstractProject.getNextBuildNumber:()I
     102: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: astore        6
     110: aload         5
     112: invokevirtual #38                 // Method hudson/model/AbstractProject.scheduleBuild:()Z
     115: ifeq          130
     118: aload_3
     119: aload         6
     121: invokestatic  #39                 // Method hudson/tasks/Messages.BuildTrigger_Triggering:(Ljava/lang/Object;)Ljava/lang/String;
     124: invokevirtual #30                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     127: goto          139
     130: aload_3
     131: aload         6
     133: invokestatic  #40                 // Method hudson/tasks/Messages.BuildTrigger_InQueue:(Ljava/lang/Object;)Ljava/lang/String;
     136: invokevirtual #30                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     139: goto          32
     142: iconst_1
     143: ireturn

  public void buildDependencyGraph(hudson.model.AbstractProject, hudson.model.DependencyGraph);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #14                 // Method getChildProjects:()Ljava/util/List;
       6: invokevirtual #41                 // Method hudson/model/DependencyGraph.addDependency:(Lhudson/model/AbstractProject;Ljava/util/Collection;)V
       9: return

  public boolean needsToRunAfterFinalized();
    Code:
       0: iconst_1
       1: ireturn

  public hudson.matrix.MatrixAggregator createAggregator(hudson.matrix.MatrixBuild, hudson.Launcher, hudson.model.BuildListener);
    Code:
       0: new           #42                 // class hudson/tasks/BuildTrigger$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #43                 // Method hudson/tasks/BuildTrigger$1."<init>":(Lhudson/tasks/BuildTrigger;Lhudson/matrix/MatrixBuild;Lhudson/Launcher;Lhudson/model/BuildListener;)V
      11: areturn

  public boolean onJobRenamed(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field childProjects:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #44                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: iconst_0
      14: istore_3
      15: aload_0
      16: getfield      #9                  // Field childProjects:Ljava/lang/String;
      19: ldc           #45                 // String ,
      21: invokevirtual #46                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      24: astore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload         4
      33: arraylength
      34: if_icmpge     66
      37: aload         4
      39: iload         5
      41: aaload
      42: invokevirtual #47                 // Method java/lang/String.trim:()Ljava/lang/String;
      45: aload_1
      46: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          60
      52: aload         4
      54: iload         5
      56: aload_2
      57: aastore
      58: iconst_1
      59: istore_3
      60: iinc          5, 1
      63: goto          29
      66: iload_3
      67: ifeq          144
      70: new           #31                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      77: astore        5
      79: aload         4
      81: astore        6
      83: aload         6
      85: arraylength
      86: istore        7
      88: iconst_0
      89: istore        8
      91: iload         8
      93: iload         7
      95: if_icmpge     135
      98: aload         6
     100: iload         8
     102: aaload
     103: astore        9
     105: aload         5
     107: invokevirtual #49                 // Method java/lang/StringBuilder.length:()I
     110: ifle          121
     113: aload         5
     115: bipush        44
     117: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: pop
     121: aload         5
     123: aload         9
     125: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: iinc          8, 1
     132: goto          91
     135: aload_0
     136: aload         5
     138: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: putfield      #9                  // Field childProjects:Ljava/lang/String;
     144: iload_3
     145: ireturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #9                  // Field childProjects:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: ldc           #51                 // String
      10: dup_x1
      11: putfield      #9                  // Field childProjects:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: areturn

  public hudson.model.Descriptor<hudson.tasks.Publisher> getDescriptor();
    Code:
       0: getstatic     #52                 // Field DESCRIPTOR:Lhudson/model/Descriptor;
       3: areturn

  static boolean access$000(hudson.tasks.BuildTrigger, hudson.model.AbstractBuild, hudson.model.BuildListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method execute:(Lhudson/model/AbstractBuild;Lhudson/model/BuildListener;)Z
       6: ireturn

  static java.util.logging.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOGGER:Ljava/util/logging/Logger;
       3: areturn

  static {};
    Code:
       0: new           #53                 // class hudson/tasks/BuildTrigger$DescriptorImpl
       3: dup
       4: invokespecial #54                 // Method hudson/tasks/BuildTrigger$DescriptorImpl."<init>":()V
       7: putstatic     #52                 // Field DESCRIPTOR:Lhudson/model/Descriptor;
      10: ldc_w         #55                 // class hudson/tasks/BuildTrigger
      13: invokevirtual #56                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokestatic  #57                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      19: putstatic     #1                  // Field LOGGER:Ljava/util/logging/Logger;
      22: return
}
