<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jvnet.hudson.main</groupId>
    <artifactId>pom</artifactId>
    <version>1.211</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>hudson-core</artifactId>
  <packaging>stapler-jar</packaging>
  <name>Hudson core</name>

  <build>
    <plugins>
      <!--plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
          - There is a bug in JDK 1.5's compiler therefore need to compile with 1.6 -
          <requireJavaVersion>
            <version>[1.6.0,]</version>
          </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin-->
      <plugin>
        <groupId>org.kohsuke.stapler</groupId>
        <artifactId>maven-stapler-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.jvnet.localizer</groupId>
        <artifactId>maven-localizer-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <fileMask>Messages.properties</fileMask>
              <outputDirectory>target/generated-sources/localizer</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antlr-plugin</artifactId>
        <configuration>
          <sourceDirectory>${basedir}/src/main/grammar</sourceDirectory>
          <grammars>crontab.g</grammars>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
        Generate retrotranslated 1.4 jar "on the side". I tried various approaches like
        "profile" (like http://testng.googlecode.com/svn/trunk/pom.xml), but in the
        end using Ant seems to be the easiest.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <tstamp>
                  <format property="now" pattern="MM/dd/yyyy hh:mm" unit="hour" />
                </tstamp>
                <property name="build.version" value="${version} (private-${now}-${user.name})" />
                <!-- default to release version -->
                <!-- put the version file -->
                <echo message="The build id is: ${build.version}" />
                <mkdir dir="target/classes/hudson" />
                <echo file="target/classes/hudson/hudson-version.properties">version=${build.version}
                </echo>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- set main class -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>hudson.Main</mainClass>
              <addClasspath>true</addClasspath>
              <classpathPrefix />
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>debug</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
	    <id>release</id>
      <properties>
        <!-- for releases, just use the POM version. See above ant-run plugin for how this gets used. -->
        <build.version>${version}</build.version>
      </properties>
    </profile>
    <profile>
      <id>hudson-libs-local</id>
      <!-- if we have the libs checked out of CVS, use them directly -->
      <activation>
        <file>
          <exists>main/lib</exists>
          <!-- this is relative to the current directory where you start
             maven.  Most likely if building for the first time
             you will be in ../.. relative to this pom.xml. So we
             use that path in order to speed you up.
        -->
        </file>
      </activation>
      <repositories>
        <!-- checking the file system is fastest of all -->
        <repository>
          <id>hudson-libs</id>
          <url>file:main/lib</url>
          <layout>legacy</layout>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <!-- put central second to speed majority artifact resolution -->
        <repository>
          <id>central</id>
          <url>http://repo1.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
            <!-- only look for jars here when they are not present locally -->
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <!-- last, but not least -->
        <repository>
          <id>java.net2</id>
          <url>http://download.java.net/maven/2/</url>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
    <profile>
      <id>hudson-libs-remote</id>
      <!-- otherwise, we'll have to use the slower route -->
      <activation>
        <file>
          <missing>main/lib</missing>
        </file>
      </activation>
      <repositories>
        <!-- put central first to speed majority artifact resolution -->
        <repository>
          <id>central</id>
          <url>http://repo1.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
            <!-- only look for jars here when they are not present locally -->
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <!-- put hudson-libs last as it is the slowest to access -->
        <repository>
          <id>hudson-libs</id>
          <url>https://hudson.dev.java.net/source/browse/*checkout*/hudson/hudson/main/lib</url>
          <layout>legacy</layout>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.jvnet.hudson.main</groupId>
      <artifactId>remoting</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <version>${maven.version}</version>
      <!--exclusions>   These are needed for Maven embedder to resolve parent POMs in remote repositories
        <exclusion>
          <groupId>org.apache.maven.wagon</groupId>
          <artifactId>wagon-file</artifactId>
        </exclusion>
        <exclusion>t r
          <groupId>org.apache.maven.wagon</groupId>
          <artifactId>wagon-http-lightweight</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven.wagon</groupId>
          <artifactId>wagon-ssh-external</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven.wagon</groupId>
          <artifactId>wagon-ssh</artifactId>
        </exclusion>
      </exclusions-->
    </dependency>

    <dependency>
      <!-- commonly used wagon provider -->
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>wagon-webdav</artifactId>
      <version>1.0-beta-2-hudson-1</version>
    </dependency>
    <dependency>
      <!-- and somehow without this, we'd end up picking up plexus-utils 1.0.4 -->
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.1</version>
    </dependency>

    <dependency>
      <groupId>org.jvnet.hudson.svnkit</groupId>
      <artifactId>svnkit</artifactId>
      <version>1.1.6-hudson-3</version>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>maven-agent</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kohsuke.stapler</groupId>
      <artifactId>stapler</artifactId>
      <version>1.69</version>
    </dependency>
    <dependency>
      <!-- until the next rev of stapler picks up localizer 1.5 -->
      <groupId>org.jvnet.localizer</groupId>
      <artifactId>localizer</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.kohsuke</groupId>
      <artifactId>graph-layouter</artifactId>
      <classifier>jdk14</classifier>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>2.7.6</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>jfree</groupId>
      <artifactId>jfreechart</artifactId>
      <version>1.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-junit</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <!--
        The version included in the transitive dependency doesn't have the source zip,
        so explicitly using the newer version.
      -->
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hudson.dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1-hudson-1</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <version>1.1-beta-11</version>
      <exclusions>
        <exclusion>
          <groupId>dom4j</groupId>
          <artifactId>dom4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-jelly</groupId>
      <artifactId>commons-jelly-tags-fmt</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-jelly</groupId>
      <artifactId>commons-jelly-tags-xml</artifactId>
      <version>1.1</version>
      <exclusions>
        <exclusion>
          <groupId>commons-jelly</groupId>
          <artifactId>commons-jelly</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-jexl</groupId>
          <artifactId>commons-jexl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-jelly</groupId>
          <artifactId>commons-jelly-tags-junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>commons-jelly-tags-define</artifactId>
      <version>1.0.1-hudson-20071021</version>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>commons-jexl</artifactId>
      <version>1.1-hudson-20071129</version>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>commons-jelly</artifactId>
      <version>1.1-hudson-20071224</version>
    </dependency>
    <dependency>
      <groupId>org.acegisecurity</groupId>
      <artifactId>acegi-security</artifactId>
      <version>1.0.5</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-remoting</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <version>1.1-rc-2</version>
    </dependency>
    <dependency>
      <!--
        for Grails spring bean builder.
        Ideally we should be able to modify BeanBuilder so as not to depend on this.
      -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
      <version>1.1.3.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8</version>
    </dependency>
    <dependency><!-- needed by Jelly -->
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.txw2</groupId>
      <artifactId>txw2</artifactId>
      <version>20070624</version>
    </dependency>
    <dependency>
      <groupId>org.kohsuke.stapler</groupId>
      <artifactId>json-lib</artifactId>
      <version>2.1</version>
      <classifier>jdk15</classifier>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.jvnet.winp</groupId>
      <artifactId>winp</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>com.octo.captcha</groupId>
      <artifactId>jcaptcha-all</artifactId>
      <version>1.0-RC6</version>
      <exclusions>
        <exclusion>
          <groupId>hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
        </exclusion>
        <exclusion>
          <groupId>hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
        </exclusion>
        <exclusion>
          <groupId>net.sf.ehcache</groupId>
          <artifactId>ehcache</artifactId>
        </exclusion>
        <exclusion>
          <groupId>quartz</groupId>
          <artifactId>quartz</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xmlParserAPIs</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>concurrent</groupId>
          <artifactId>concurrent</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

</project>
