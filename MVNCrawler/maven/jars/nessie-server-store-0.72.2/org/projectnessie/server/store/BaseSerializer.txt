Compiled from "BaseSerializer.java"
abstract class org.projectnessie.server.store.BaseSerializer<C extends org.projectnessie.model.Content> implements org.projectnessie.versioned.store.LegacyContentSerializer<C> {
  org.projectnessie.server.store.BaseSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.projectnessie.nessie.relocated.protobuf.ByteString toStoreOnReferenceState(C);
    Code:
       0: invokestatic  #2                  // Method org/projectnessie/server/store/proto/ObjectTypes$Content.newBuilder:()Lorg/projectnessie/server/store/proto/ObjectTypes$Content$Builder;
       3: aload_1
       4: invokevirtual #3                  // Method org/projectnessie/model/Content.getId:()Ljava/lang/String;
       7: invokevirtual #4                  // Method org/projectnessie/server/store/proto/ObjectTypes$Content$Builder.setId:(Ljava/lang/String;)Lorg/projectnessie/server/store/proto/ObjectTypes$Content$Builder;
      10: astore_2
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokevirtual #5                  // Method toStoreOnRefState:(Lorg/projectnessie/model/Content;Lorg/projectnessie/server/store/proto/ObjectTypes$Content$Builder;)V
      17: aload_2
      18: invokevirtual #6                  // Method org/projectnessie/server/store/proto/ObjectTypes$Content$Builder.build:()Lorg/projectnessie/server/store/proto/ObjectTypes$Content;
      21: invokevirtual #7                  // Method org/projectnessie/server/store/proto/ObjectTypes$Content.toByteString:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      24: areturn

  public C valueFromStore(int, org.projectnessie.nessie.relocated.protobuf.ByteString, java.util.function.Supplier<org.projectnessie.nessie.relocated.protobuf.ByteString>);
    Code:
       0: aload_2
       1: invokestatic  #8                  // Method parse:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/server/store/proto/ObjectTypes$Content;
       4: astore        4
       6: aload_0
       7: aload         4
       9: aload_3
      10: invokevirtual #9                  // Method valueFromStore:(Lorg/projectnessie/server/store/proto/ObjectTypes$Content;Ljava/util/function/Supplier;)Lorg/projectnessie/model/Content;
      13: areturn

  protected abstract C valueFromStore(org.projectnessie.server.store.proto.ObjectTypes$Content, java.util.function.Supplier<org.projectnessie.nessie.relocated.protobuf.ByteString>);

  static org.projectnessie.model.ImmutableDeltaLakeTable valueFromStoreDeltaLakeTable(org.projectnessie.server.store.proto.ObjectTypes$Content);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getDeltaLakeTable:()Lorg/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable;
       4: astore_1
       5: invokestatic  #11                 // Method org/projectnessie/model/ImmutableDeltaLakeTable.builder:()Lorg/projectnessie/model/ImmutableDeltaLakeTable$Builder;
       8: aload_0
       9: invokevirtual #12                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getId:()Ljava/lang/String;
      12: invokevirtual #13                 // Method org/projectnessie/model/ImmutableDeltaLakeTable$Builder.id:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableDeltaLakeTable$Builder;
      15: aload_1
      16: invokevirtual #14                 // Method org/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable.getMetadataLocationHistoryList:()Lorg/projectnessie/nessie/relocated/protobuf/ProtocolStringList;
      19: invokevirtual #15                 // Method org/projectnessie/model/ImmutableDeltaLakeTable$Builder.addAllMetadataLocationHistory:(Ljava/lang/Iterable;)Lorg/projectnessie/model/ImmutableDeltaLakeTable$Builder;
      22: aload_1
      23: invokevirtual #16                 // Method org/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable.getCheckpointLocationHistoryList:()Lorg/projectnessie/nessie/relocated/protobuf/ProtocolStringList;
      26: invokevirtual #17                 // Method org/projectnessie/model/ImmutableDeltaLakeTable$Builder.addAllCheckpointLocationHistory:(Ljava/lang/Iterable;)Lorg/projectnessie/model/ImmutableDeltaLakeTable$Builder;
      29: astore_2
      30: aload_1
      31: invokevirtual #18                 // Method org/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable.hasLastCheckpoint:()Z
      34: ifeq          49
      37: aload_2
      38: aload_0
      39: invokevirtual #10                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getDeltaLakeTable:()Lorg/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable;
      42: invokevirtual #19                 // Method org/projectnessie/server/store/proto/ObjectTypes$DeltaLakeTable.getLastCheckpoint:()Ljava/lang/String;
      45: invokevirtual #20                 // Method org/projectnessie/model/ImmutableDeltaLakeTable$Builder.lastCheckpoint:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableDeltaLakeTable$Builder;
      48: pop
      49: aload_2
      50: invokevirtual #21                 // Method org/projectnessie/model/ImmutableDeltaLakeTable$Builder.build:()Lorg/projectnessie/model/ImmutableDeltaLakeTable;
      53: areturn

  static org.projectnessie.model.UDF valueFromStoreUDF(org.projectnessie.server.store.proto.ObjectTypes$Content);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getUdf:()Lorg/projectnessie/server/store/proto/ObjectTypes$UDF;
       4: astore_1
       5: aload_0
       6: invokevirtual #12                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getId:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #23                 // Method org/projectnessie/server/store/proto/ObjectTypes$UDF.getDialect:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #24                 // Method org/projectnessie/server/store/proto/ObjectTypes$UDF.getSqlText:()Ljava/lang/String;
      17: invokestatic  #25                 // Method org/projectnessie/model/UDF.of:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/model/UDF;
      20: areturn

  static org.projectnessie.model.Namespace valueFromStoreNamespace(org.projectnessie.server.store.proto.ObjectTypes$Content);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getNamespace:()Lorg/projectnessie/server/store/proto/ObjectTypes$Namespace;
       4: astore_1
       5: invokestatic  #27                 // Method org/projectnessie/model/Namespace.builder:()Lorg/projectnessie/model/ImmutableNamespace$Builder;
       8: aload_0
       9: invokevirtual #12                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getId:()Ljava/lang/String;
      12: invokevirtual #28                 // Method org/projectnessie/model/ImmutableNamespace$Builder.id:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableNamespace$Builder;
      15: aload_1
      16: invokevirtual #29                 // Method org/projectnessie/server/store/proto/ObjectTypes$Namespace.getElementsList:()Lorg/projectnessie/nessie/relocated/protobuf/ProtocolStringList;
      19: invokevirtual #30                 // Method org/projectnessie/model/ImmutableNamespace$Builder.elements:(Ljava/lang/Iterable;)Lorg/projectnessie/model/ImmutableNamespace$Builder;
      22: aload_1
      23: invokevirtual #31                 // Method org/projectnessie/server/store/proto/ObjectTypes$Namespace.getPropertiesMap:()Ljava/util/Map;
      26: invokevirtual #32                 // Method org/projectnessie/model/ImmutableNamespace$Builder.putAllProperties:(Ljava/util/Map;)Lorg/projectnessie/model/ImmutableNamespace$Builder;
      29: invokevirtual #33                 // Method org/projectnessie/model/ImmutableNamespace$Builder.build:()Lorg/projectnessie/model/ImmutableNamespace;
      32: areturn

  static org.projectnessie.model.IcebergTable valueFromStoreIcebergTable(org.projectnessie.server.store.proto.ObjectTypes$Content, java.util.function.Supplier<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getIcebergRefState:()Lorg/projectnessie/server/store/proto/ObjectTypes$IcebergRefState;
       4: astore_2
       5: aload_2
       6: invokevirtual #35                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.hasMetadataLocation:()Z
       9: ifeq          19
      12: aload_2
      13: invokevirtual #36                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.getMetadataLocation:()Ljava/lang/String;
      16: goto          28
      19: aload_1
      20: invokeinterface #37,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      25: checkcast     #38                 // class java/lang/String
      28: astore_3
      29: invokestatic  #39                 // Method org/projectnessie/model/IcebergTable.builder:()Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      32: aload_3
      33: invokevirtual #40                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.metadataLocation:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      36: aload_2
      37: invokevirtual #41                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.getSnapshotId:()J
      40: invokevirtual #42                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.snapshotId:(J)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      43: aload_2
      44: invokevirtual #43                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.getSchemaId:()I
      47: invokevirtual #44                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.schemaId:(I)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      50: aload_2
      51: invokevirtual #45                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.getSpecId:()I
      54: invokevirtual #46                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.specId:(I)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      57: aload_2
      58: invokevirtual #47                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergRefState.getSortOrderId:()I
      61: invokevirtual #48                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.sortOrderId:(I)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      64: aload_0
      65: invokevirtual #12                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getId:()Ljava/lang/String;
      68: invokevirtual #49                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.id:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergTable$Builder;
      71: astore        4
      73: aload         4
      75: invokevirtual #50                 // Method org/projectnessie/model/ImmutableIcebergTable$Builder.build:()Lorg/projectnessie/model/ImmutableIcebergTable;
      78: areturn

  static org.projectnessie.model.IcebergView valueFromStoreIcebergView(org.projectnessie.server.store.proto.ObjectTypes$Content, java.util.function.Supplier<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getIcebergViewState:()Lorg/projectnessie/server/store/proto/ObjectTypes$IcebergViewState;
       4: astore_2
       5: aload_2
       6: invokevirtual #52                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.hasMetadataLocation:()Z
       9: ifeq          19
      12: aload_2
      13: invokevirtual #53                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.getMetadataLocation:()Ljava/lang/String;
      16: goto          28
      19: aload_1
      20: invokeinterface #37,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      25: checkcast     #38                 // class java/lang/String
      28: astore_3
      29: invokestatic  #54                 // Method org/projectnessie/model/IcebergView.builder:()Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      32: aload_3
      33: invokevirtual #55                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.metadataLocation:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      36: aload_2
      37: invokevirtual #56                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.getVersionId:()J
      40: invokevirtual #57                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.versionId:(J)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      43: aload_2
      44: invokevirtual #58                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.getSchemaId:()I
      47: invokevirtual #59                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.schemaId:(I)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      50: aload_2
      51: invokevirtual #60                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.getDialect:()Ljava/lang/String;
      54: invokevirtual #61                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.dialect:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      57: aload_2
      58: invokevirtual #62                 // Method org/projectnessie/server/store/proto/ObjectTypes$IcebergViewState.getSqlText:()Ljava/lang/String;
      61: invokevirtual #63                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.sqlText:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      64: aload_0
      65: invokevirtual #12                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.getId:()Ljava/lang/String;
      68: invokevirtual #64                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.id:(Ljava/lang/String;)Lorg/projectnessie/model/ImmutableIcebergView$Builder;
      71: astore        4
      73: aload         4
      75: invokevirtual #65                 // Method org/projectnessie/model/ImmutableIcebergView$Builder.build:()Lorg/projectnessie/model/ImmutableIcebergView;
      78: areturn

  static java.lang.IllegalArgumentException noIcebergMetadataPointer();
    Code:
       0: new           #66                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #67                 // String Iceberg content from reference must have global state, but has none
       6: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  protected abstract void toStoreOnRefState(C, org.projectnessie.server.store.proto.ObjectTypes$Content$Builder);

  static org.projectnessie.server.store.proto.ObjectTypes$Content parse(org.projectnessie.nessie.relocated.protobuf.ByteString);
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method org/projectnessie/server/store/proto/ObjectTypes$Content.parseFrom:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/server/store/proto/ObjectTypes$Content;
       4: areturn
       5: astore_1
       6: new           #71                 // class java/lang/RuntimeException
       9: dup
      10: ldc           #72                 // String Failure parsing data
      12: aload_1
      13: invokespecial #73                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class org/projectnessie/nessie/relocated/protobuf/InvalidProtocolBufferException
}
