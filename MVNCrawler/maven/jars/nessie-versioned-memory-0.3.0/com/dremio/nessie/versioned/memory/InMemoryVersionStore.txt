Compiled from "InMemoryVersionStore.java"
public class com.dremio.nessie.versioned.memory.InMemoryVersionStore<ValueT, MetadataT> implements com.dremio.nessie.versioned.VersionStore<ValueT, MetadataT> {
  private static final org.slf4j.Logger LOGGER;

  private final java.util.concurrent.ConcurrentMap<com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.memory.Commit<ValueT, MetadataT>> commits;

  private final java.util.concurrent.ConcurrentMap<com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash> namedReferences;

  private final com.dremio.nessie.versioned.Serializer<ValueT> valueSerializer;

  private final com.dremio.nessie.versioned.Serializer<MetadataT> metadataSerializer;

  private com.dremio.nessie.versioned.memory.InMemoryVersionStore(com.dremio.nessie.versioned.memory.InMemoryVersionStore$Builder<ValueT, MetadataT>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: aload_1
      28: invokestatic  #7                  // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder.access$100:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder;)Lcom/dremio/nessie/versioned/Serializer;
      31: putfield      #8                  // Field valueSerializer:Lcom/dremio/nessie/versioned/Serializer;
      34: aload_0
      35: aload_1
      36: invokestatic  #9                  // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder.access$200:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder;)Lcom/dremio/nessie/versioned/Serializer;
      39: putfield      #10                 // Field metadataSerializer:Lcom/dremio/nessie/versioned/Serializer;
      42: return

  public static <ValueT, MetadataT> com.dremio.nessie.versioned.memory.InMemoryVersionStore$Builder<ValueT, MetadataT> builder();
    Code:
       0: new           #11                 // class com/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder
       3: dup
       4: invokespecial #12                 // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder."<init>":()V
       7: areturn

  public com.dremio.nessie.versioned.Hash toHash(com.dremio.nessie.versioned.NamedRef) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      16: astore_2
      17: aload_2
      18: ifnonnull     26
      21: aload_1
      22: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
      25: athrow
      26: aload_2
      27: areturn

  private com.dremio.nessie.versioned.Hash toHash(com.dremio.nessie.versioned.Ref) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_1
       1: instanceof    #17                 // class com/dremio/nessie/versioned/NamedRef
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #17                 // class com/dremio/nessie/versioned/NamedRef
      12: invokevirtual #18                 // Method toHash:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/Hash;
      15: areturn
      16: aload_1
      17: instanceof    #15                 // class com/dremio/nessie/versioned/Hash
      20: ifeq          58
      23: aload_1
      24: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      27: astore_2
      28: aload_2
      29: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
      32: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
      35: ifne          56
      38: aload_0
      39: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      42: aload_2
      43: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      48: ifne          56
      51: aload_2
      52: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
      55: athrow
      56: aload_2
      57: areturn
      58: new           #22                 // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #23                 // String Unsupported reference type for ref %s
      64: iconst_1
      65: anewarray     #24                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      75: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow

  private void checkValidReferenceHash(com.dremio.nessie.versioned.BranchName, com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_3
       1: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
       4: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
      14: dup
      15: aload_0
      16: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      19: dup
      20: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
      29: aload_2
      30: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
      33: invokestatic  #30                 // Method com/google/common/collect/Streams.stream:(Ljava/util/Iterator;)Ljava/util/stream/Stream;
      36: invokedynamic #31,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      41: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: aload_3
      47: invokedynamic #33,  0             // InvokeDynamic #2:test:(Lcom/dremio/nessie/versioned/Hash;)Ljava/util/function/Predicate;
      52: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      57: invokestatic  #35                 // Method com/google/common/collect/MoreCollectors.toOptional:()Ljava/util/stream/Collector;
      60: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      65: checkcast     #37                 // class java/util/Optional
      68: astore        4
      70: aload         4
      72: aload_3
      73: aload_1
      74: aload_2
      75: invokedynamic #38,  0             // InvokeDynamic #3:get:(Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;)Ljava/util/function/Supplier;
      80: invokevirtual #39                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      83: pop
      84: return

  public com.dremio.nessie.versioned.WithHash<com.dremio.nessie.versioned.Ref> toRef(java.lang.String) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_3
       6: anewarray     #40                 // class java/util/function/Function
       9: dup
      10: iconst_0
      11: invokedynamic #41,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      16: aastore
      17: dup
      18: iconst_1
      19: invokedynamic #42,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      24: aastore
      25: dup
      26: iconst_2
      27: invokedynamic #43,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      32: aastore
      33: invokestatic  #44                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      36: aload_0
      37: aload_1
      38: invokedynamic #45,  0             // InvokeDynamic #7:apply:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;Ljava/lang/String;)Ljava/util/function/Function;
      43: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokedynamic #46,  0             // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
      53: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      58: invokeinterface #47,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      63: astore_2
      64: aload_2
      65: aload_1
      66: invokedynamic #48,  0             // InvokeDynamic #9:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      71: invokevirtual #39                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      74: checkcast     #49                 // class com/dremio/nessie/versioned/WithHash
      77: areturn

  public void commit(com.dremio.nessie.versioned.BranchName, java.util.Optional<com.dremio.nessie.versioned.Hash>, MetadataT, java.util.List<com.dremio.nessie.versioned.Operation<ValueT>>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method toHash:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/Hash;
       5: astore        5
       7: aload         4
       9: invokeinterface #50,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #51,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      19: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokeinterface #52,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      29: invokestatic  #53                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      32: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      37: checkcast     #54                 // class java/util/List
      40: astore        6
      42: aload_0
      43: aload_1
      44: aload         5
      46: aload_2
      47: aload         6
      49: invokespecial #55                 // Method checkConcurrentModification:(Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;Ljava/util/Optional;Ljava/util/List;)V
      52: aload_0
      53: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
      56: aload_1
      57: aload_0
      58: aload         5
      60: aload_3
      61: aload         4
      63: aload_1
      64: aload_2
      65: invokedynamic #56,  0             // InvokeDynamic #11:apply:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;Ljava/util/List;Lcom/dremio/nessie/versioned/BranchName;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
      70: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
      73: pop
      74: return

  public void transplant(com.dremio.nessie.versioned.BranchName, java.util.Optional<com.dremio.nessie.versioned.Hash>, java.util.List<com.dremio.nessie.versioned.Hash>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_3
       6: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #18                 // Method toHash:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/Hash;
      15: astore        4
      17: aload_3
      18: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      23: ifeq          27
      26: return
      27: new           #59                 // class java/util/HashSet
      30: dup
      31: invokespecial #60                 // Method java/util/HashSet."<init>":()V
      34: astore        5
      36: new           #61                 // class java/util/ArrayList
      39: dup
      40: aload_3
      41: invokeinterface #62,  1           // InterfaceMethod java/util/List.size:()I
      46: invokespecial #63                 // Method java/util/ArrayList."<init>":(I)V
      49: astore        6
      51: aconst_null
      52: astore        7
      54: aload         4
      56: astore        8
      58: aload_3
      59: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      64: astore        9
      66: aload         9
      68: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          229
      76: aload         9
      78: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      86: astore        10
      88: aload_0
      89: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      92: aload         10
      94: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
     102: astore        11
     104: aload         11
     106: ifnonnull     115
     109: aload         10
     111: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
     114: athrow
     115: aload         7
     117: ifnull        160
     120: aload         7
     122: aload         11
     124: invokevirtual #68                 // Method com/dremio/nessie/versioned/memory/Commit.getAncestor:()Lcom/dremio/nessie/versioned/Hash;
     127: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
     130: ifne          160
     133: new           #22                 // class java/lang/IllegalArgumentException
     136: dup
     137: ldc           #69                 // String Hash %s is not the ancestor for commit %s
     139: iconst_2
     140: anewarray     #24                 // class java/lang/Object
     143: dup
     144: iconst_0
     145: aload         7
     147: aastore
     148: dup
     149: iconst_1
     150: aload         10
     152: aastore
     153: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     156: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: aload         11
     162: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
     165: aload         5
     167: invokedynamic #71,  0             // InvokeDynamic #12:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     172: invokeinterface #72,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     177: aload_0
     178: getfield      #8                  // Field valueSerializer:Lcom/dremio/nessie/versioned/Serializer;
     181: aload_0
     182: getfield      #10                 // Field metadataSerializer:Lcom/dremio/nessie/versioned/Serializer;
     185: aload         8
     187: aload         11
     189: invokevirtual #73                 // Method com/dremio/nessie/versioned/memory/Commit.getMetadata:()Ljava/lang/Object;
     192: aload         11
     194: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
     197: invokestatic  #74                 // Method com/dremio/nessie/versioned/memory/Commit.of:(Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;Ljava/util/List;)Lcom/dremio/nessie/versioned/memory/Commit;
     200: astore        12
     202: aload         6
     204: aload         12
     206: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     211: pop
     212: aload         11
     214: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
     217: astore        7
     219: aload         12
     221: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
     224: astore        8
     226: goto          66
     229: aload_0
     230: aload_1
     231: aload         4
     233: aload_2
     234: new           #61                 // class java/util/ArrayList
     237: dup
     238: aload         5
     240: invokespecial #77                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     243: invokespecial #55                 // Method checkConcurrentModification:(Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;Ljava/util/Optional;Ljava/util/List;)V
     246: aload_0
     247: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
     250: aload_1
     251: aload_0
     252: aload         4
     254: aload_1
     255: aload_2
     256: aload         6
     258: invokedynamic #78,  0             // InvokeDynamic #13:apply:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/BranchName;Ljava/util/Optional;Ljava/util/List;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
     263: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
     266: pop
     267: return

  private void checkConcurrentModification(com.dremio.nessie.versioned.BranchName, com.dremio.nessie.versioned.Hash, java.util.Optional<com.dremio.nessie.versioned.Hash>, java.util.List<com.dremio.nessie.versioned.Key>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload         4
       6: aload_3
       7: invokedynamic #79,  0             // InvokeDynamic #14:accept:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;Ljava/util/List;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;
      12: invokestatic  #80                 // Method ifPresent:(Ljava/util/Optional;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;)V
      15: goto          35
      18: astore        5
      20: aload         5
      22: athrow
      23: astore        5
      25: new           #84                 // class java/lang/AssertionError
      28: dup
      29: aload         5
      31: invokespecial #85                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    15    18   Class com/dremio/nessie/versioned/ReferenceNotFoundException
           0    15    18   Class com/dremio/nessie/versioned/ReferenceConflictException
           0    15    23   Class com/dremio/nessie/versioned/VersionStoreException

  public void merge(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.BranchName, java.util.Optional<com.dremio.nessie.versioned.Hash>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      14: aload_1
      15: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      20: ifne          28
      23: aload_1
      24: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
      27: athrow
      28: aload_0
      29: aload_2
      30: invokevirtual #18                 // Method toHash:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/Hash;
      33: astore        4
      35: aload_3
      36: aload         4
      38: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      44: astore        5
      46: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
      49: dup
      50: aload_0
      51: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      54: dup
      55: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
      64: aload         5
      66: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
      69: invokestatic  #30                 // Method com/google/common/collect/Streams.stream:(Ljava/util/Iterator;)Ljava/util/stream/Stream;
      72: invokedynamic #31,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      77: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      82: invokestatic  #87                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      85: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      90: checkcast     #88                 // class java/util/Set
      93: astore        6
      95: new           #59                 // class java/util/HashSet
      98: dup
      99: invokespecial #60                 // Method java/util/HashSet."<init>":()V
     102: astore        7
     104: new           #61                 // class java/util/ArrayList
     107: dup
     108: invokespecial #89                 // Method java/util/ArrayList."<init>":()V
     111: astore        8
     113: aconst_null
     114: astore        9
     116: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
     119: dup
     120: aload_0
     121: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
     124: dup
     125: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
     134: aload_1
     135: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
     138: astore        10
     140: aload         10
     142: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     147: ifeq          237
     150: aload         10
     152: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     157: checkcast     #49                 // class com/dremio/nessie/versioned/WithHash
     160: astore        11
     162: aload         6
     164: aload         11
     166: invokeinterface #90,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getHash:()Lcom/dremio/nessie/versioned/Hash;
     171: invokeinterface #91,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     176: ifeq          191
     179: aload         11
     181: invokeinterface #90,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getHash:()Lcom/dremio/nessie/versioned/Hash;
     186: astore        9
     188: goto          237
     191: aload         8
     193: aload         11
     195: invokeinterface #92,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getValue:()Ljava/lang/Object;
     200: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
     203: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     208: pop
     209: aload         11
     211: invokeinterface #92,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getValue:()Ljava/lang/Object;
     216: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
     219: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
     222: aload         7
     224: invokedynamic #93,  0             // InvokeDynamic #15:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     229: invokeinterface #72,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     234: goto          140
     237: aload_0
     238: aload_2
     239: aload         4
     241: aload_3
     242: new           #61                 // class java/util/ArrayList
     245: dup
     246: aload         7
     248: invokespecial #77                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     251: invokespecial #55                 // Method checkConcurrentModification:(Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;Ljava/util/Optional;Ljava/util/List;)V
     254: new           #61                 // class java/util/ArrayList
     257: dup
     258: aload         8
     260: invokeinterface #62,  1           // InterfaceMethod java/util/List.size:()I
     265: invokespecial #63                 // Method java/util/ArrayList."<init>":(I)V
     268: astore        10
     270: aload         4
     272: astore        11
     274: aload         8
     276: invokestatic  #94                 // Method com/google/common/collect/Lists.reverse:(Ljava/util/List;)Ljava/util/List;
     279: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     284: astore        12
     286: aload         12
     288: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     293: ifeq          353
     296: aload         12
     298: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     303: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
     306: astore        13
     308: aload_0
     309: getfield      #8                  // Field valueSerializer:Lcom/dremio/nessie/versioned/Serializer;
     312: aload_0
     313: getfield      #10                 // Field metadataSerializer:Lcom/dremio/nessie/versioned/Serializer;
     316: aload         11
     318: aload         13
     320: invokevirtual #73                 // Method com/dremio/nessie/versioned/memory/Commit.getMetadata:()Ljava/lang/Object;
     323: aload         13
     325: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
     328: invokestatic  #74                 // Method com/dremio/nessie/versioned/memory/Commit.of:(Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;Ljava/util/List;)Lcom/dremio/nessie/versioned/memory/Commit;
     331: astore        14
     333: aload         10
     335: aload         14
     337: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     342: pop
     343: aload         14
     345: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
     348: astore        11
     350: goto          286
     353: aload_0
     354: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
     357: aload_2
     358: aload_0
     359: aload         4
     361: aload_2
     362: aload_3
     363: aload         10
     365: invokedynamic #95,  0             // InvokeDynamic #16:apply:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/BranchName;Ljava/util/Optional;Ljava/util/List;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
     370: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
     373: pop
     374: return

  public void assign(com.dremio.nessie.versioned.NamedRef, java.util.Optional<com.dremio.nessie.versioned.Hash>, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_3
       6: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #18                 // Method toHash:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/Hash;
      15: astore        4
      17: aload_2
      18: aload         4
      20: aload_1
      21: aload_2
      22: invokedynamic #96,  0             // InvokeDynamic #17:accept:(Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;
      27: invokestatic  #80                 // Method ifPresent:(Ljava/util/Optional;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;)V
      30: aload_0
      31: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      34: aload_3
      35: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      40: ifne          48
      43: aload_3
      44: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
      47: athrow
      48: aload_0
      49: aload_1
      50: aload         4
      52: aload_3
      53: invokespecial #97                 // Method doAssign:(Lcom/dremio/nessie/versioned/NamedRef;Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/Hash;)V
      56: return

  private void doAssign(com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: aload_1
       7: aload_3
       8: invokedynamic #98,  0             // InvokeDynamic #18:apply:(Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/NamedRef;Lcom/dremio/nessie/versioned/Hash;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
      13: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
      16: pop
      17: return

  public void create(com.dremio.nessie.versioned.NamedRef, java.util.Optional<com.dremio.nessie.versioned.Hash>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceAlreadyExistsException;
    Code:
       0: aload_1
       1: instanceof    #99                 // class com/dremio/nessie/versioned/BranchName
       4: ifne          14
       7: aload_2
       8: invokevirtual #100                // Method java/util/Optional.isPresent:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #101                // String Cannot create an unassigned tag reference
      21: invokestatic  #102                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      24: aload_0
      25: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
      28: aload_1
      29: aload_1
      30: aload_2
      31: invokedynamic #103,  0            // InvokeDynamic #19:apply:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
      36: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
      39: pop
      40: return

  public void delete(com.dremio.nessie.versioned.NamedRef, java.util.Optional<com.dremio.nessie.versioned.Hash>) throws com.dremio.nessie.versioned.ReferenceNotFoundException, com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_1
       6: aload_2
       7: invokedynamic #104,  0            // InvokeDynamic #20:apply:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;
      12: invokestatic  #57                 // Method compute:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/lang/Object;
      15: pop
      16: goto          32
      19: astore_3
      20: aload_3
      21: athrow
      22: astore_3
      23: new           #84                 // class java/lang/AssertionError
      26: dup
      27: aload_3
      28: invokespecial #85                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    16    19   Class com/dremio/nessie/versioned/ReferenceNotFoundException
           0    16    19   Class com/dremio/nessie/versioned/ReferenceConflictException
           0    16    22   Class com/dremio/nessie/versioned/VersionStoreException

  public java.util.stream.Stream<com.dremio.nessie.versioned.WithHash<com.dremio.nessie.versioned.NamedRef>> getNamedRefs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #105,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #106,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #107,  0            // InvokeDynamic #21:apply:()Ljava/util/function/Function;
      19: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: areturn

  public java.util.stream.Stream<com.dremio.nessie.versioned.WithHash<MetadataT>> getCommits(com.dremio.nessie.versioned.Ref) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method toHash:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/Hash;
       5: astore_2
       6: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
       9: dup
      10: aload_0
      11: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      14: dup
      15: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
      24: aload_2
      25: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
      28: astore_3
      29: aload_3
      30: invokestatic  #30                 // Method com/google/common/collect/Streams.stream:(Ljava/util/Iterator;)Ljava/util/stream/Stream;
      33: invokedynamic #109,  0            // InvokeDynamic #22:apply:()Ljava/util/function/Function;
      38: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: areturn

  public java.util.stream.Stream<com.dremio.nessie.versioned.Key> getKeys(com.dremio.nessie.versioned.Ref) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method toHash:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/Hash;
       5: astore_2
       6: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
       9: dup
      10: aload_0
      11: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      14: dup
      15: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
      24: aload_2
      25: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
      28: astore_3
      29: new           #59                 // class java/util/HashSet
      32: dup
      33: invokespecial #60                 // Method java/util/HashSet."<init>":()V
      36: astore        4
      38: aload_3
      39: invokestatic  #30                 // Method com/google/common/collect/Streams.stream:(Ljava/util/Iterator;)Ljava/util/stream/Stream;
      42: invokedynamic #110,  0            // InvokeDynamic #23:apply:()Ljava/util/function/Function;
      47: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      52: aload         4
      54: invokedynamic #112,  0            // InvokeDynamic #24:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      59: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      64: invokedynamic #51,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      69: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      74: invokeinterface #52,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      79: areturn

  public ValueT getValue(com.dremio.nessie.versioned.Ref, com.dremio.nessie.versioned.Key) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #113                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: invokevirtual #114                // Method getValues:(Lcom/dremio/nessie/versioned/Ref;Ljava/util/List;)Ljava/util/List;
       9: iconst_0
      10: invokeinterface #115,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: checkcast     #37                 // class java/util/Optional
      18: aconst_null
      19: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn

  public java.util.List<java.util.Optional<ValueT>> getValues(com.dremio.nessie.versioned.Ref, java.util.List<com.dremio.nessie.versioned.Key>) throws com.dremio.nessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method toHash:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/Hash;
       5: astore_3
       6: aload_2
       7: invokeinterface #62,  1           // InterfaceMethod java/util/List.size:()I
      12: istore        4
      14: new           #61                 // class java/util/ArrayList
      17: dup
      18: iload         4
      20: invokespecial #63                 // Method java/util/ArrayList."<init>":(I)V
      23: astore        5
      25: aload         5
      27: iload         4
      29: invokestatic  #116                // Method java/util/Optional.empty:()Ljava/util/Optional;
      32: invokestatic  #117                // Method java/util/Collections.nCopies:(ILjava/lang/Object;)Ljava/util/List;
      35: invokeinterface #118,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      40: pop
      41: new           #59                 // class java/util/HashSet
      44: dup
      45: invokespecial #60                 // Method java/util/HashSet."<init>":()V
      48: astore        6
      50: aload         6
      52: aload_2
      53: invokeinterface #119,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: new           #27                 // class com/dremio/nessie/versioned/memory/CommitsIterator
      62: dup
      63: aload_0
      64: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      67: dup
      68: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentMap;)Ljava/util/function/Function;
      77: aload_3
      78: invokespecial #29                 // Method com/dremio/nessie/versioned/memory/CommitsIterator."<init>":(Ljava/util/function/Function;Lcom/dremio/nessie/versioned/Hash;)V
      81: astore        7
      83: aload         7
      85: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          311
      93: aload         6
      95: invokeinterface #120,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     100: ifeq          106
     103: goto          311
     106: aload         7
     108: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #49                 // class com/dremio/nessie/versioned/WithHash
     116: invokeinterface #92,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getValue:()Ljava/lang/Object;
     121: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
     124: astore        8
     126: aload         8
     128: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
     131: invokestatic  #94                 // Method com/google/common/collect/Lists.reverse:(Ljava/util/List;)Ljava/util/List;
     134: invokeinterface #64,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     139: astore        9
     141: aload         9
     143: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     148: ifeq          308
     151: aload         9
     153: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     158: checkcast     #121                // class com/dremio/nessie/versioned/Operation
     161: astore        10
     163: aload         10
     165: invokeinterface #122,  1          // InterfaceMethod com/dremio/nessie/versioned/Operation.getKey:()Lcom/dremio/nessie/versioned/Key;
     170: astore        11
     172: aload         6
     174: aload         11
     176: invokeinterface #91,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     181: ifne          187
     184: goto          141
     187: aload         10
     189: instanceof    #123                // class com/dremio/nessie/versioned/Put
     192: ifeq          245
     195: aload         10
     197: checkcast     #123                // class com/dremio/nessie/versioned/Put
     200: astore        12
     202: aload_2
     203: aload         11
     205: invokeinterface #124,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     210: istore        13
     212: aload         5
     214: iload         13
     216: aload         12
     218: invokeinterface #125,  1          // InterfaceMethod com/dremio/nessie/versioned/Put.getValue:()Ljava/lang/Object;
     223: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     226: invokeinterface #127,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     231: pop
     232: aload         6
     234: aload         11
     236: invokeinterface #128,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     241: pop
     242: goto          305
     245: aload         10
     247: instanceof    #129                // class com/dremio/nessie/versioned/Delete
     250: ifeq          266
     253: aload         6
     255: aload         11
     257: invokeinterface #128,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     262: pop
     263: goto          305
     266: aload         10
     268: instanceof    #130                // class com/dremio/nessie/versioned/Unchanged
     271: ifeq          277
     274: goto          141
     277: new           #84                 // class java/lang/AssertionError
     280: dup
     281: new           #131                // class java/lang/StringBuilder
     284: dup
     285: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
     288: ldc           #133                // String Unsupported operation type for
     290: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     293: aload         10
     295: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     298: invokevirtual #136                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     301: invokespecial #85                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     304: athrow
     305: goto          141
     308: goto          83
     311: aload         5
     313: areturn

  public java.util.stream.Stream<com.dremio.nessie.versioned.Diff<ValueT>> getDiffs(com.dremio.nessie.versioned.Ref, com.dremio.nessie.versioned.Ref);
    Code:
       0: new           #137                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #138                // String Not yet implemented.
       6: invokespecial #139                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public com.dremio.nessie.versioned.VersionStore$Collector collectGarbage();
    Code:
       0: invokestatic  #140                // Method com/dremio/nessie/versioned/memory/InactiveCollector.of:()Lcom/dremio/nessie/versioned/VersionStore$Collector;
       3: areturn

  public void clearUnsafe();
    Code:
       0: aload_0
       1: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #141,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: getfield      #6                  // Field namedReferences:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #141,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      18: aload_0
      19: ldc           #142                // String main
      21: invokestatic  #143                // InterfaceMethod com/dremio/nessie/versioned/BranchName.of:(Ljava/lang/String;)Lcom/dremio/nessie/versioned/BranchName;
      24: invokestatic  #116                // Method java/util/Optional.empty:()Ljava/util/Optional;
      27: invokevirtual #144                // Method create:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;)V
      30: goto          44
      33: astore_1
      34: new           #146                // class java/lang/RuntimeException
      37: dup
      38: ldc           #147                // String Failed to reset the InMemoryVersionStore for tests
      40: invokespecial #148                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
          18    30    33   Class com/dremio/nessie/versioned/ReferenceNotFoundException
          18    30    33   Class com/dremio/nessie/versioned/ReferenceAlreadyExistsException

  private static <K, V, E extends com.dremio.nessie.versioned.VersionStoreException> V compute(java.util.concurrent.ConcurrentMap<K, V>, K, com.dremio.nessie.versioned.memory.InMemoryVersionStore$ComputeFunction<K, V, E>) throws E;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #149,  0            // InvokeDynamic #25:apply:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction;)Ljava/util/function/BiFunction;
       8: invokeinterface #150,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      13: areturn
      14: astore_3
      15: aload_3
      16: invokevirtual #152                // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError.getCause:()Lcom/dremio/nessie/versioned/VersionStoreException;
      19: astore        4
      21: aload         4
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError

  private static <T, E extends com.dremio.nessie.versioned.VersionStoreException> void ifPresent(java.util.Optional<T>, com.dremio.nessie.versioned.memory.InMemoryVersionStore$IfPresentConsumer<? super T, E>) throws E;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #153,  0            // InvokeDynamic #26:accept:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;)Ljava/util/function/Consumer;
       7: invokevirtual #154                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      10: goto          21
      13: astore_2
      14: aload_2
      15: invokevirtual #152                // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError.getCause:()Lcom/dremio/nessie/versioned/VersionStoreException;
      18: astore_3
      19: aload_3
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0    10    13   Class com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError

  private static void lambda$ifPresent$22(com.dremio.nessie.versioned.memory.InMemoryVersionStore$IfPresentConsumer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #155,  2          // InterfaceMethod com/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer.accept:(Ljava/lang/Object;)V
       7: goto          21
      10: astore_2
      11: new           #151                // class com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError
      14: dup
      15: aload_2
      16: aconst_null
      17: invokespecial #156                // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError."<init>":(Lcom/dremio/nessie/versioned/VersionStoreException;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$1;)V
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    10   Class com/dremio/nessie/versioned/VersionStoreException

  private static java.lang.Object lambda$compute$21(com.dremio.nessie.versioned.memory.InMemoryVersionStore$ComputeFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #157,  3          // InterfaceMethod com/dremio/nessie/versioned/memory/InMemoryVersionStore$ComputeFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn
       9: astore_3
      10: new           #151                // class com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError
      13: dup
      14: aload_3
      15: aconst_null
      16: invokespecial #156                // Method com/dremio/nessie/versioned/memory/InMemoryVersionStore$VersionStoreExecutionError."<init>":(Lcom/dremio/nessie/versioned/VersionStoreException;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$1;)V
      19: athrow
    Exception table:
       from    to  target type
           0     8     9   Class com/dremio/nessie/versioned/VersionStoreException

  private static boolean lambda$getKeys$20(java.util.Set, com.dremio.nessie.versioned.Operation);
    Code:
       0: aload_1
       1: invokeinterface #122,  1          // InterfaceMethod com/dremio/nessie/versioned/Operation.getKey:()Lcom/dremio/nessie/versioned/Key;
       6: astore_2
       7: aload_1
       8: instanceof    #129                // class com/dremio/nessie/versioned/Delete
      11: ifeq          22
      14: aload_0
      15: aload_2
      16: invokeinterface #158,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: aload_2
      24: invokeinterface #91,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private static java.util.stream.Stream lambda$getKeys$19(com.dremio.nessie.versioned.WithHash);
    Code:
       0: aload_0
       1: invokeinterface #92,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getValue:()Ljava/lang/Object;
       6: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
       9: invokevirtual #70                 // Method com/dremio/nessie/versioned/memory/Commit.getOperations:()Ljava/util/List;
      12: invokestatic  #94                 // Method com/google/common/collect/Lists.reverse:(Ljava/util/List;)Ljava/util/List;
      15: invokeinterface #50,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      20: areturn

  private static com.dremio.nessie.versioned.WithHash lambda$getCommits$18(com.dremio.nessie.versioned.WithHash);
    Code:
       0: aload_0
       1: invokeinterface #90,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getHash:()Lcom/dremio/nessie/versioned/Hash;
       6: aload_0
       7: invokeinterface #92,  1           // InterfaceMethod com/dremio/nessie/versioned/WithHash.getValue:()Ljava/lang/Object;
      12: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
      15: invokevirtual #73                 // Method com/dremio/nessie/versioned/memory/Commit.getMetadata:()Ljava/lang/Object;
      18: invokestatic  #159                // InterfaceMethod com/dremio/nessie/versioned/WithHash.of:(Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;)Lcom/dremio/nessie/versioned/WithHash;
      21: areturn

  private static com.dremio.nessie.versioned.WithHash lambda$getNamedRefs$17(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #160,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
       9: aload_0
      10: invokeinterface #161,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      15: checkcast     #17                 // class com/dremio/nessie/versioned/NamedRef
      18: invokestatic  #159                // InterfaceMethod com/dremio/nessie/versioned/WithHash.of:(Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;)Lcom/dremio/nessie/versioned/WithHash;
      21: areturn

  private static com.dremio.nessie.versioned.Hash lambda$delete$16(com.dremio.nessie.versioned.NamedRef, java.util.Optional, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.VersionStoreException;
    Code:
       0: aload_3
       1: ifnonnull     9
       4: aload_0
       5: invokestatic  #16                 // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
       8: athrow
       9: aload_1
      10: aload_3
      11: aload_0
      12: aload_1
      13: invokedynamic #162,  0            // InvokeDynamic #27:accept:(Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;
      18: invokestatic  #80                 // Method ifPresent:(Ljava/util/Optional;Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$IfPresentConsumer;)V
      21: aconst_null
      22: areturn

  private static void lambda$delete$15(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.NamedRef, java.util.Optional, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
       5: ifne          18
       8: aload_1
       9: aload_2
      10: aload_0
      11: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      17: athrow
      18: return

  private static com.dremio.nessie.versioned.Hash lambda$create$14(com.dremio.nessie.versioned.NamedRef, java.util.Optional, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceAlreadyExistsException;
    Code:
       0: aload_3
       1: ifnull        9
       4: aload_0
       5: invokestatic  #164                // Method com/dremio/nessie/versioned/ReferenceAlreadyExistsException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;)Lcom/dremio/nessie/versioned/ReferenceAlreadyExistsException;
       8: athrow
       9: aload_1
      10: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
      13: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      19: areturn

  private static com.dremio.nessie.versioned.Hash lambda$doAssign$13(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload         4
       2: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: aload_0
       6: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      12: astore        5
      14: aload_0
      15: aload         5
      17: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
      20: ifne          37
      23: aload_1
      24: aload_0
      25: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      28: aload         5
      30: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      33: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      36: athrow
      37: aload_2
      38: areturn

  private static void lambda$assign$12(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.NamedRef, java.util.Optional, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
       5: ifne          18
       8: aload_1
       9: aload_2
      10: aload_0
      11: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      17: athrow
      18: return

  private com.dremio.nessie.versioned.Hash lambda$merge$11(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.BranchName, java.util.Optional, java.util.List, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload         6
       2: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
       8: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      14: astore        7
      16: aload         7
      18: aload_1
      19: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
      22: ifne          36
      25: aload_2
      26: aload_3
      27: aload         7
      29: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      32: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      35: athrow
      36: aload         4
      38: aload_0
      39: invokedynamic #166,  0            // InvokeDynamic #28:accept:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;)Ljava/util/function/Consumer;
      44: invokeinterface #72,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      49: aload         4
      51: invokestatic  #167                // Method com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;
      54: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
      57: astore        8
      59: aload         8
      61: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
      64: areturn

  private void lambda$merge$10(com.dremio.nessie.versioned.memory.Commit);
    Code:
       0: aload_0
       1: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
       8: aload_1
       9: invokeinterface #168,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  private static void lambda$merge$9(java.util.Set, com.dremio.nessie.versioned.Operation);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #122,  1          // InterfaceMethod com/dremio/nessie/versioned/Operation.getKey:()Lcom/dremio/nessie/versioned/Key;
       7: invokeinterface #158,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      12: pop
      13: return

  private void lambda$checkConcurrentModification$8(com.dremio.nessie.versioned.BranchName, com.dremio.nessie.versioned.Hash, java.util.List, java.util.Optional, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.VersionStoreException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         5
       5: invokespecial #169                // Method checkValidReferenceHash:(Lcom/dremio/nessie/versioned/BranchName;Lcom/dremio/nessie/versioned/Hash;Lcom/dremio/nessie/versioned/Hash;)V
       8: aload_0
       9: aload         5
      11: aload_3
      12: invokevirtual #114                // Method getValues:(Lcom/dremio/nessie/versioned/Ref;Ljava/util/List;)Ljava/util/List;
      15: astore        6
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokevirtual #114                // Method getValues:(Lcom/dremio/nessie/versioned/Ref;Ljava/util/List;)Ljava/util/List;
      23: astore        7
      25: aload         6
      27: aload         7
      29: invokeinterface #170,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      34: ifne          48
      37: aload_1
      38: aload         4
      40: aload_2
      41: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      44: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      47: athrow
      48: return

  private com.dremio.nessie.versioned.Hash lambda$transplant$7(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.BranchName, java.util.Optional, java.util.List, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload         6
       2: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
       8: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      14: astore        7
      16: aload         7
      18: aload_1
      19: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
      22: ifne          36
      25: aload_2
      26: aload_3
      27: aload         7
      29: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      32: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      35: athrow
      36: aload         4
      38: aload_0
      39: invokedynamic #171,  0            // InvokeDynamic #29:accept:(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore;)Ljava/util/function/Consumer;
      44: invokeinterface #72,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      49: aload         4
      51: invokestatic  #167                // Method com/google/common/collect/Iterables.getLast:(Ljava/lang/Iterable;)Ljava/lang/Object;
      54: checkcast     #67                 // class com/dremio/nessie/versioned/memory/Commit
      57: astore        8
      59: aload         8
      61: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
      64: areturn

  private void lambda$transplant$6(com.dremio.nessie.versioned.memory.Commit);
    Code:
       0: aload_0
       1: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
       8: aload_1
       9: invokeinterface #168,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  private static void lambda$transplant$5(java.util.Set, com.dremio.nessie.versioned.Operation);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #122,  1          // InterfaceMethod com/dremio/nessie/versioned/Operation.getKey:()Lcom/dremio/nessie/versioned/Key;
       7: invokeinterface #158,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      12: pop
      13: return

  private com.dremio.nessie.versioned.Hash lambda$commit$4(com.dremio.nessie.versioned.Hash, java.lang.Object, java.util.List, com.dremio.nessie.versioned.BranchName, java.util.Optional, com.dremio.nessie.versioned.NamedRef, com.dremio.nessie.versioned.Hash) throws com.dremio.nessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field valueSerializer:Lcom/dremio/nessie/versioned/Serializer;
       4: aload_0
       5: getfield      #10                 // Field metadataSerializer:Lcom/dremio/nessie/versioned/Serializer;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokestatic  #74                 // Method com/dremio/nessie/versioned/memory/Commit.of:(Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Serializer;Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;Ljava/util/List;)Lcom/dremio/nessie/versioned/memory/Commit;
      14: astore        8
      16: aload         7
      18: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      21: getstatic     #19                 // Field com/dremio/nessie/versioned/memory/Commit.NO_ANCESTOR:Lcom/dremio/nessie/versioned/Hash;
      24: invokevirtual #86                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #15                 // class com/dremio/nessie/versioned/Hash
      30: astore        9
      32: aload         9
      34: aload_1
      35: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
      38: ifne          54
      41: aload         4
      43: aload         5
      45: aload         9
      47: invokestatic  #126                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      50: invokestatic  #163                // Method com/dremio/nessie/versioned/ReferenceConflictException.forReference:(Lcom/dremio/nessie/versioned/NamedRef;Ljava/util/Optional;Ljava/util/Optional;)Lcom/dremio/nessie/versioned/ReferenceConflictException;
      53: athrow
      54: aload         8
      56: invokevirtual #76                 // Method com/dremio/nessie/versioned/memory/Commit.getHash:()Lcom/dremio/nessie/versioned/Hash;
      59: astore        10
      61: aload_0
      62: getfield      #5                  // Field commits:Ljava/util/concurrent/ConcurrentMap;
      65: aload         10
      67: aload         8
      69: invokeinterface #168,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload         10
      77: areturn

  private static com.dremio.nessie.versioned.ReferenceNotFoundException lambda$toRef$3(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #172                // Method com/dremio/nessie/versioned/ReferenceNotFoundException.forReference:(Ljava/lang/String;)Lcom/dremio/nessie/versioned/ReferenceNotFoundException;
       4: areturn

  private com.dremio.nessie.versioned.WithHash lambda$toRef$2(java.lang.String, java.util.function.Function);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #173,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #174                // class com/dremio/nessie/versioned/Ref
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokespecial #108                // Method toHash:(Lcom/dremio/nessie/versioned/Ref;)Lcom/dremio/nessie/versioned/Hash;
      16: aload_3
      17: invokestatic  #159                // InterfaceMethod com/dremio/nessie/versioned/WithHash.of:(Lcom/dremio/nessie/versioned/Hash;Ljava/lang/Object;)Lcom/dremio/nessie/versioned/WithHash;
      20: areturn
      21: astore_3
      22: aconst_null
      23: areturn
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/IllegalArgumentException
           0    20    21   Class com/dremio/nessie/versioned/ReferenceNotFoundException

  private static com.dremio.nessie.versioned.ReferenceNotFoundException lambda$checkValidReferenceHash$1(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.BranchName, com.dremio.nessie.versioned.Hash);
    Code:
       0: new           #81                 // class com/dremio/nessie/versioned/ReferenceNotFoundException
       3: dup
       4: ldc           #175                // String \'%s\' hash is not a valid commit from branch \'%s\'(%s)
       6: iconst_3
       7: anewarray     #24                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: dup
      15: iconst_1
      16: aload_1
      17: aastore
      18: dup
      19: iconst_2
      20: aload_2
      21: aastore
      22: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: invokespecial #176                // Method com/dremio/nessie/versioned/ReferenceNotFoundException."<init>":(Ljava/lang/String;)V
      28: areturn

  private static boolean lambda$checkValidReferenceHash$0(com.dremio.nessie.versioned.Hash, com.dremio.nessie.versioned.Hash);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method com/dremio/nessie/versioned/Hash.equals:(Ljava/lang/Object;)Z
       5: ireturn

  com.dremio.nessie.versioned.memory.InMemoryVersionStore(com.dremio.nessie.versioned.memory.InMemoryVersionStore$Builder, com.dremio.nessie.versioned.memory.InMemoryVersionStore$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/dremio/nessie/versioned/memory/InMemoryVersionStore$Builder;)V
       5: return

  static {};
    Code:
       0: ldc           #177                // class com/dremio/nessie/versioned/memory/InMemoryVersionStore
       2: invokestatic  #178                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #179                // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
