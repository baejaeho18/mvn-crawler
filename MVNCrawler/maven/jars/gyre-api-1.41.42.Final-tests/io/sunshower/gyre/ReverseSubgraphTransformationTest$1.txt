Compiled from "ReverseSubgraphTransformationTest.java"
class io.sunshower.gyre.ReverseSubgraphTransformationTest$1 implements io.sunshower.gyre.Task<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> {
  final java.lang.String val$t;

  final io.sunshower.gyre.ReverseSubgraphTransformationTest this$0;

  io.sunshower.gyre.ReverseSubgraphTransformationTest$1(io.sunshower.gyre.ReverseSubgraphTransformationTest, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/sunshower/gyre/ReverseSubgraphTransformationTest;
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field val$t:Ljava/lang/String;
      10: aload_0
      11: invokespecial #11                 // Method java/lang/Object."<init>":()V
      14: return

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field val$t:Ljava/lang/String;
       4: areturn

  public io.sunshower.gyre.Scope getScope();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<io.sunshower.gyre.Task<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>> getPredecessors();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>> getEdges();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getValue:()Ljava/lang/String;
       4: areturn
}
