Compiled from "ParallelSchedulerTest.java"
class io.sunshower.gyre.ParallelSchedulerTest {
  java.lang.String toSchedule;

  io.sunshower.gyre.Graph<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> graph;

  io.sunshower.gyre.ParallelScheduler<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> scheduler;

  io.sunshower.gyre.ParallelSchedulerTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #7                  // String des_system_lib std synopsys std_cell_lib dw02 dw01 ramlib ieee\ndw01           ieee dware gtech\ndw02           ieee dware\ndw03           std synopsys dware dw02 dw01 ieee gtech\ndw04           ieee dw01 dware gtech\ndw05           ieee dware\ndw06           ieee dware\ndw07           ieee dware\ndware          ieee\ngtech          ieee\nramlib         std ieee\nstd_cell_lib   ieee\nsynopsys
       7: putfield      #9                  // Field toSchedule:Ljava/lang/String;
      10: return

  void setUp();
    Code:
       0: aload_0
       1: new           #15                 // class io/sunshower/gyre/AbstractDirectedGraph
       4: dup
       5: invokespecial #17                 // Method io/sunshower/gyre/AbstractDirectedGraph."<init>":()V
       8: putfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      11: aload_0
      12: new           #22                 // class io/sunshower/gyre/ParallelScheduler
      15: dup
      16: invokespecial #24                 // Method io/sunshower/gyre/ParallelScheduler."<init>":()V
      19: putfield      #25                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      22: return

  void ensureGraphPrintsCorrectly();
    Code:
       0: aload_0
       1: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #29                 // String a
       6: ldc           #31                 // String b
       8: ldc           #33                 // String a -> b
      10: invokestatic  #35                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.incoming:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #41,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      23: ldc           #31                 // String b
      25: ldc           #47                 // String c
      27: ldc           #49                 // String b -> c
      29: invokestatic  #35                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.incoming:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      32: invokeinterface #41,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      42: ldc           #31                 // String b
      44: ldc           #51                 // String d
      46: ldc           #53                 // String b -> d
      48: invokestatic  #35                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.incoming:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      51: invokeinterface #41,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: new           #55                 // class io/sunshower/gyre/GraphWriter
      60: dup
      61: invokespecial #57                 // Method io/sunshower/gyre/GraphWriter."<init>":()V
      64: aload_0
      65: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      68: invokevirtual #58                 // Method io/sunshower/gyre/GraphWriter.write:(Lio/sunshower/gyre/Graph;)Ljava/lang/String;
      71: astore_1
      72: aload_1
      73: ldc           #62                 // String must have a result
      75: invokestatic  #64                 // Method org/junit/jupiter/api/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      78: return

  void testPlan();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field toSchedule:Ljava/lang/String;
       5: invokevirtual #70                 // Method parse:(Ljava/lang/String;)V
       8: getstatic     #74                 // Field java/lang/System.out:Ljava/io/PrintStream;
      11: aload_0
      12: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      15: invokevirtual #80                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #25                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      22: aload_0
      23: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      26: invokevirtual #86                 // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Schedule;
      29: astore_1
      30: aload_1
      31: invokeinterface #90,  1           // InterfaceMethod io/sunshower/gyre/Schedule.size:()I
      36: iconst_4
      37: ldc           #96                 // String must have 4 elements
      39: invokestatic  #98                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      42: return

  void ensureDependentsAreCorrect();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field toSchedule:Ljava/lang/String;
       5: invokevirtual #70                 // Method parse:(Ljava/lang/String;)V
       8: aload_0
       9: getfield      #25                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      12: aload_0
      13: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      16: invokevirtual #86                 // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Schedule;
      19: astore_1
      20: aload_0
      21: ldc           #102                // String dware
      23: aload_1
      24: invokevirtual #104                // Method find:(Ljava/lang/String;Lio/sunshower/gyre/Schedule;)Lio/sunshower/gyre/Task;
      27: astore_2
      28: aload_2
      29: invokeinterface #108,  1          // InterfaceMethod io/sunshower/gyre/Task.getPredecessors:()Ljava/util/Set;
      34: aload_0
      35: ldc           #114                // String ieee
      37: aload_1
      38: invokevirtual #104                // Method find:(Ljava/lang/String;Lio/sunshower/gyre/Schedule;)Lio/sunshower/gyre/Task;
      41: invokeinterface #116,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      46: ldc           #122                // String must contain correct simple neighbor
      48: invokestatic  #124                // Method org/junit/jupiter/api/Assertions.assertTrue:(ZLjava/lang/String;)V
      51: return

  private void parse(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #128                // String \n
       3: invokevirtual #130                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     110
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: aload         6
      31: ldc           #136                // String \\s+
      33: invokevirtual #130                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      36: astore        7
      38: aload         7
      40: iconst_0
      41: aaload
      42: astore        8
      44: iconst_1
      45: istore        9
      47: iload         9
      49: aload         7
      51: arraylength
      52: if_icmpge     104
      55: aload         7
      57: iload         9
      59: aaload
      60: astore        10
      62: aload_0
      63: getfield      #18                 // Field graph:Lio/sunshower/gyre/Graph;
      66: aload         8
      68: aload         10
      70: ldc           #138                // String %s <- %s
      72: iconst_2
      73: anewarray     #2                  // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload         6
      80: aastore
      81: dup
      82: iconst_1
      83: aload         10
      85: aastore
      86: invokestatic  #140                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      89: invokestatic  #35                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.incoming:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      92: invokeinterface #41,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: iinc          9, 1
     101: goto          47
     104: iinc          5, 1
     107: goto          16
     110: return

  io.sunshower.gyre.Task<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> find(java.lang.String, io.sunshower.gyre.Schedule<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>);
    Code:
       0: aload_2
       1: invokeinterface #144,  1          // InterfaceMethod io/sunshower/gyre/Schedule.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          89
      16: aload_3
      17: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #158                // class io/sunshower/gyre/TaskSet
      25: astore        4
      27: aload         4
      29: invokeinterface #160,  1          // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      34: invokeinterface #164,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        5
      41: aload         5
      43: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          86
      51: aload         5
      53: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #109                // class io/sunshower/gyre/Task
      61: astore        6
      63: aload         6
      65: invokeinterface #167,  1          // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
      70: checkcast     #131                // class java/lang/String
      73: aload_1
      74: invokevirtual #170                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          83
      80: aload         6
      82: areturn
      83: goto          41
      86: goto          7
      89: aconst_null
      90: areturn
}
