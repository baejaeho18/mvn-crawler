Compiled from "SchedulerTest.java"
class io.sunshower.gyre.SchedulerTest {
  io.sunshower.gyre.Graph<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> graph;

  private io.sunshower.gyre.ParallelScheduler<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> scheduler;

  io.sunshower.gyre.SchedulerTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  void setUp();
    Code:
       0: aload_0
       1: new           #7                  // class io/sunshower/gyre/AbstractDirectedGraph
       4: dup
       5: invokespecial #9                  // Method io/sunshower/gyre/AbstractDirectedGraph."<init>":()V
       8: putfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      11: aload_0
      12: new           #16                 // class io/sunshower/gyre/ParallelScheduler
      15: dup
      16: invokespecial #18                 // Method io/sunshower/gyre/ParallelScheduler."<init>":()V
      19: putfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      22: return

  void ensureSimpleParallelScheduleWorksWithFilter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #23                 // String a
       6: ldc           #25                 // String b
       8: ldc           #27                 // String a -> b
      10: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      23: aload_0
      24: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      27: getstatic     #41                 // Field io/sunshower/gyre/DirectedGraph$Direction.Outgoing:Lio/sunshower/gyre/DirectedGraph$Direction;
      30: invokestatic  #47                 // Method io/sunshower/gyre/EdgeFilters.directionFilter:(Lio/sunshower/gyre/DirectedGraph$Direction;)Ljava/util/function/Predicate;
      33: invokevirtual #53                 // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;Ljava/util/function/Predicate;)Ljava/lang/Object;
      36: checkcast     #57                 // class io/sunshower/gyre/Schedule
      39: astore_1
      40: aload_1
      41: invokeinterface #59,  1           // InterfaceMethod io/sunshower/gyre/Schedule.size:()I
      46: iconst_2
      47: ldc           #63                 // String parallel schedule must have 2 elements
      49: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      52: return

  void ensureParallelScheduleHasCorrectElementsForSimpleCaseWithOutgoing();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #23                 // String a
       6: ldc           #25                 // String b
       8: ldc           #27                 // String a -> b
      10: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      23: aload_0
      24: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      27: invokestatic  #71                 // Method io/sunshower/gyre/EdgeFilters.outgoing:()Ljava/util/function/Predicate;
      30: invokevirtual #53                 // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;Ljava/util/function/Predicate;)Ljava/lang/Object;
      33: checkcast     #57                 // class io/sunshower/gyre/Schedule
      36: astore_1
      37: aload_1
      38: iconst_0
      39: invokeinterface #74,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
      44: invokeinterface #78,  1           // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      49: astore_2
      50: aload_2
      51: invokeinterface #84,  1           // InterfaceMethod java/util/List.size:()I
      56: iconst_1
      57: ldc           #87                 // String must have single task in first level
      59: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      62: aload_2
      63: iconst_0
      64: invokeinterface #89,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #92                 // class io/sunshower/gyre/Task
      72: invokeinterface #94,  1           // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
      77: ldc           #25                 // String b
      79: invokestatic  #98                 // Method org/junit/jupiter/api/Assertions.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      82: return

  void ensureSimpleParallelScheduleWorks();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #23                 // String a
       6: ldc           #25                 // String b
       8: ldc           #27                 // String a -> b
      10: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      23: aload_0
      24: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      27: invokevirtual #101                // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Schedule;
      30: astore_1
      31: aload_1
      32: invokeinterface #59,  1           // InterfaceMethod io/sunshower/gyre/Schedule.size:()I
      37: iconst_2
      38: ldc           #63                 // String parallel schedule must have 2 elements
      40: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      43: return

  void ensureParallelScheduleHasCorrectElementsForSimpleCase();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #23                 // String a
       6: ldc           #25                 // String b
       8: ldc           #27                 // String a -> b
      10: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
      23: aload_0
      24: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      27: invokevirtual #101                // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Schedule;
      30: astore_1
      31: aload_1
      32: iconst_0
      33: invokeinterface #74,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
      38: invokeinterface #78,  1           // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      43: astore_2
      44: aload_2
      45: invokeinterface #84,  1           // InterfaceMethod java/util/List.size:()I
      50: iconst_1
      51: ldc           #87                 // String must have single task in first level
      53: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      56: aload_2
      57: iconst_0
      58: invokeinterface #89,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #92                 // class io/sunshower/gyre/Task
      66: invokeinterface #94,  1           // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
      71: ldc           #25                 // String b
      73: invokestatic  #98                 // Method org/junit/jupiter/api/Assertions.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      76: return

  void ensureParallelScheduleWorksForComplexDependencyGraph();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
       4: ldc           #104                // String 5
       6: ldc           #106                // String 11
       8: ldc           #108                // String 5 -> 11
      10: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      13: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      23: ldc           #106                // String 11
      25: ldc           #110                // String 2
      27: ldc           #112                // String 11 -> 2
      29: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      32: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      42: ldc           #114                // String 7
      44: ldc           #106                // String 11
      46: ldc           #116                // String 7 -> 11
      48: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      51: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_0
      58: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      61: ldc           #114                // String 7
      63: ldc           #118                // String 8
      65: ldc           #120                // String 7 -> 8
      67: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      70: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_0
      77: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      80: ldc           #122                // String 3
      82: ldc           #118                // String 8
      84: ldc           #124                // String 3 -> 8
      86: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      89: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: aload_0
      96: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
      99: ldc           #122                // String 3
     101: ldc           #126                // String 10
     103: ldc           #128                // String 3 -> 10
     105: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
     108: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_0
     115: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
     118: ldc           #106                // String 11
     120: ldc           #130                // String 9
     122: ldc           #132                // String 11 -> 9
     124: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
     127: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: aload_0
     134: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
     137: ldc           #118                // String 8
     139: ldc           #130                // String 9
     141: ldc           #134                // String 8 -> 9
     143: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
     146: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: aload_0
     153: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
     156: ldc           #106                // String 11
     158: ldc           #126                // String 10
     160: ldc           #136                // String 11 -> 10
     162: invokestatic  #29                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.outgoing:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
     165: invokeinterface #35,  4           // InterfaceMethod io/sunshower/gyre/Graph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_0
     172: getfield      #19                 // Field scheduler:Lio/sunshower/gyre/ParallelScheduler;
     175: new           #138                // class io/sunshower/gyre/TransitiveReduction
     178: dup
     179: invokespecial #140                // Method io/sunshower/gyre/TransitiveReduction."<init>":()V
     182: aload_0
     183: getfield      #10                 // Field graph:Lio/sunshower/gyre/Graph;
     186: invokevirtual #141                // Method io/sunshower/gyre/TransitiveReduction.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Graph;
     189: getstatic     #41                 // Field io/sunshower/gyre/DirectedGraph$Direction.Outgoing:Lio/sunshower/gyre/DirectedGraph$Direction;
     192: invokestatic  #47                 // Method io/sunshower/gyre/EdgeFilters.directionFilter:(Lio/sunshower/gyre/DirectedGraph$Direction;)Ljava/util/function/Predicate;
     195: invokevirtual #53                 // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;Ljava/util/function/Predicate;)Ljava/lang/Object;
     198: checkcast     #57                 // class io/sunshower/gyre/Schedule
     201: astore_1
     202: aload_1
     203: invokeinterface #59,  1           // InterfaceMethod io/sunshower/gyre/Schedule.size:()I
     208: iconst_3
     209: ldc           #144                // String must have 3 levels
     211: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
     214: aload_0
     215: aload_1
     216: iconst_0
     217: invokeinterface #74,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
     222: iconst_3
     223: anewarray     #146                // class java/lang/String
     226: dup
     227: iconst_0
     228: ldc           #110                // String 2
     230: aastore
     231: dup
     232: iconst_1
     233: ldc           #126                // String 10
     235: aastore
     236: dup
     237: iconst_2
     238: ldc           #130                // String 9
     240: aastore
     241: invokevirtual #148                // Method expect:(Lio/sunshower/gyre/TaskSet;[Ljava/lang/String;)V
     244: aload_0
     245: aload_1
     246: iconst_1
     247: invokeinterface #74,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
     252: iconst_2
     253: anewarray     #146                // class java/lang/String
     256: dup
     257: iconst_0
     258: ldc           #106                // String 11
     260: aastore
     261: dup
     262: iconst_1
     263: ldc           #118                // String 8
     265: aastore
     266: invokevirtual #148                // Method expect:(Lio/sunshower/gyre/TaskSet;[Ljava/lang/String;)V
     269: aload_0
     270: aload_1
     271: iconst_2
     272: invokeinterface #74,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
     277: iconst_3
     278: anewarray     #146                // class java/lang/String
     281: dup
     282: iconst_0
     283: ldc           #104                // String 5
     285: aastore
     286: dup
     287: iconst_1
     288: ldc           #114                // String 7
     290: aastore
     291: dup
     292: iconst_2
     293: ldc           #122                // String 3
     295: aastore
     296: invokevirtual #148                // Method expect:(Lio/sunshower/gyre/TaskSet;[Ljava/lang/String;)V
     299: return

  private void expect(io.sunshower.gyre.TaskSet<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>, java.lang.String...);
    Code:
       0: aload_1
       1: invokeinterface #78,  1           // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
       6: invokeinterface #84,  1           // InterfaceMethod java/util/List.size:()I
      11: aload_2
      12: arraylength
      13: ldc           #152                // String size must be equal to expected size
      15: invokestatic  #65                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      18: aload_1
      19: invokeinterface #78,  1           // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      24: invokeinterface #154,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_2
      31: astore        4
      33: aload         4
      35: arraylength
      36: istore        5
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload         5
      45: if_icmpge     82
      48: aload         4
      50: iload         6
      52: aaload
      53: astore        7
      55: aload         7
      57: aload_3
      58: invokeinterface #158,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #92                 // class io/sunshower/gyre/Task
      66: invokeinterface #94,  1           // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
      71: ldc           #163                // String must have expected label
      73: invokestatic  #165                // Method org/junit/jupiter/api/Assertions.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
      76: iinc          6, 1
      79: goto          41
      82: return
}
