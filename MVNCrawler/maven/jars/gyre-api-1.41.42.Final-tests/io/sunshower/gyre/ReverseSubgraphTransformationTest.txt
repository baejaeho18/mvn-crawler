Compiled from "ReverseSubgraphTransformationTest.java"
class io.sunshower.gyre.ReverseSubgraphTransformationTest {
  private io.sunshower.gyre.AbstractDirectedGraph<java.lang.String, java.lang.String> graph;

  io.sunshower.gyre.ReverseSubgraphTransformationTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  void setUp();
    Code:
       0: aload_0
       1: new           #7                  // class io/sunshower/gyre/AbstractDirectedGraph
       4: dup
       5: invokespecial #9                  // Method io/sunshower/gyre/AbstractDirectedGraph."<init>":()V
       8: putfield      #10                 // Field graph:Lio/sunshower/gyre/AbstractDirectedGraph;
      11: return

  void ensureTrivialDependentClosureIsCorrect();
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/AbstractDirectedGraph;
       4: ldc           #16                 // String a
       6: invokevirtual #18                 // Method io/sunshower/gyre/AbstractDirectedGraph.add:(Ljava/lang/Object;)Z
       9: pop
      10: aload_0
      11: ldc           #16                 // String a
      13: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
      16: astore_1
      17: aload_0
      18: aload_1
      19: iconst_1
      20: anewarray     #26                 // class io/sunshower/gyre/TaskSet
      23: dup
      24: iconst_0
      25: aload_0
      26: iconst_1
      27: anewarray     #28                 // class java/lang/String
      30: dup
      31: iconst_0
      32: ldc           #16                 // String a
      34: aastore
      35: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
      38: aastore
      39: invokevirtual #34                 // Method assertSchedule:(Lio/sunshower/gyre/Schedule;[Lio/sunshower/gyre/TaskSet;)V
      42: return

  void ensureSimpleScenarioWorks();
    Code:
       0: aload_0
       1: ldc           #38                 // String plugin2
       3: ldc           #40                 // String plugin1
       5: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
       8: aload_0
       9: ldc           #38                 // String plugin2
      11: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
      14: astore_1
      15: aload_0
      16: aload_1
      17: iconst_1
      18: anewarray     #26                 // class io/sunshower/gyre/TaskSet
      21: dup
      22: iconst_0
      23: aload_0
      24: iconst_1
      25: anewarray     #28                 // class java/lang/String
      28: dup
      29: iconst_0
      30: ldc           #38                 // String plugin2
      32: aastore
      33: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
      36: aastore
      37: invokevirtual #34                 // Method assertSchedule:(Lio/sunshower/gyre/Schedule;[Lio/sunshower/gyre/TaskSet;)V
      40: return

  void ensureLargeScenarioIsCorrect();
    Code:
       0: aload_0
       1: ldc           #16                 // String a
       3: ldc           #46                 // String b
       5: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
       8: aload_0
       9: ldc           #46                 // String b
      11: ldc           #48                 // String c
      13: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      16: aload_0
      17: ldc           #46                 // String b
      19: ldc           #50                 // String d
      21: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      24: aload_0
      25: ldc           #50                 // String d
      27: ldc           #52                 // String f
      29: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      32: aload_0
      33: ldc           #50                 // String d
      35: ldc           #54                 // String e
      37: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      40: aload_0
      41: ldc           #52                 // String f
      43: ldc           #56                 // String x
      45: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      48: aload_0
      49: ldc           #54                 // String e
      51: ldc           #56                 // String x
      53: invokevirtual #42                 // Method connect:(Ljava/lang/String;Ljava/lang/String;)V
      56: aload_0
      57: ldc           #16                 // String a
      59: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
      62: astore_1
      63: aload_0
      64: aload_1
      65: iconst_1
      66: anewarray     #26                 // class io/sunshower/gyre/TaskSet
      69: dup
      70: iconst_0
      71: aload_0
      72: iconst_1
      73: anewarray     #28                 // class java/lang/String
      76: dup
      77: iconst_0
      78: ldc           #16                 // String a
      80: aastore
      81: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
      84: aastore
      85: invokevirtual #34                 // Method assertSchedule:(Lio/sunshower/gyre/Schedule;[Lio/sunshower/gyre/TaskSet;)V
      88: aload_0
      89: ldc           #46                 // String b
      91: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
      94: astore_1
      95: aload_0
      96: aload_1
      97: iconst_2
      98: anewarray     #26                 // class io/sunshower/gyre/TaskSet
     101: dup
     102: iconst_0
     103: aload_0
     104: iconst_1
     105: anewarray     #28                 // class java/lang/String
     108: dup
     109: iconst_0
     110: ldc           #16                 // String a
     112: aastore
     113: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
     116: aastore
     117: dup
     118: iconst_1
     119: aload_0
     120: iconst_1
     121: anewarray     #28                 // class java/lang/String
     124: dup
     125: iconst_0
     126: ldc           #46                 // String b
     128: aastore
     129: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
     132: aastore
     133: invokevirtual #34                 // Method assertSchedule:(Lio/sunshower/gyre/Schedule;[Lio/sunshower/gyre/TaskSet;)V
     136: aload_0
     137: ldc           #50                 // String d
     139: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
     142: astore_1
     143: aload_0
     144: aload_1
     145: iconst_3
     146: anewarray     #26                 // class io/sunshower/gyre/TaskSet
     149: dup
     150: iconst_0
     151: aload_0
     152: iconst_1
     153: anewarray     #28                 // class java/lang/String
     156: dup
     157: iconst_0
     158: ldc           #16                 // String a
     160: aastore
     161: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
     164: aastore
     165: dup
     166: iconst_1
     167: aload_0
     168: iconst_1
     169: anewarray     #28                 // class java/lang/String
     172: dup
     173: iconst_0
     174: ldc           #46                 // String b
     176: aastore
     177: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
     180: aastore
     181: dup
     182: iconst_2
     183: aload_0
     184: iconst_1
     185: anewarray     #28                 // class java/lang/String
     188: dup
     189: iconst_0
     190: ldc           #50                 // String d
     192: aastore
     193: invokevirtual #30                 // Method level:([Ljava/lang/String;)Lio/sunshower/gyre/TaskSet;
     196: aastore
     197: invokevirtual #34                 // Method assertSchedule:(Lio/sunshower/gyre/Schedule;[Lio/sunshower/gyre/TaskSet;)V
     200: aload_0
     201: ldc           #56                 // String x
     203: invokevirtual #22                 // Method scheduleFrom:(Ljava/lang/String;)Lio/sunshower/gyre/Schedule;
     206: astore_1
     207: getstatic     #58                 // Field java/lang/System.out:Ljava/io/PrintStream;
     210: aload_1
     211: invokevirtual #64                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
     214: return

  private void connect(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field graph:Lio/sunshower/gyre/AbstractDirectedGraph;
       4: aload_1
       5: aload_2
       6: ldc           #70                 // String %s dependsOn %s
       8: iconst_2
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #72                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokestatic  #76                 // InterfaceMethod io/sunshower/gyre/DirectedGraph.incoming:(Ljava/lang/Object;)Lio/sunshower/gyre/DirectedGraph$Edge;
      26: invokevirtual #82                 // Method io/sunshower/gyre/AbstractDirectedGraph.connect:(Ljava/lang/Object;Ljava/lang/Object;Lio/sunshower/gyre/DirectedGraph$Edge;)Lio/sunshower/gyre/DirectedGraph$Edge;
      29: pop
      30: return

  private void assertSchedule(io.sunshower.gyre.Schedule<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>, io.sunshower.gyre.TaskSet<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>...);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod io/sunshower/gyre/Schedule.size:()I
       6: aload_2
       7: arraylength
       8: ldc           #91                 // String must have same number of tasks
      10: invokestatic  #93                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      13: iconst_0
      14: istore_3
      15: iload_3
      16: aload_2
      17: arraylength
      18: if_icmpge     134
      21: aload_1
      22: iload_3
      23: invokeinterface #99,  2           // InterfaceMethod io/sunshower/gyre/Schedule.get:(I)Lio/sunshower/gyre/TaskSet;
      28: astore        4
      30: aload_2
      31: iload_3
      32: aaload
      33: astore        5
      35: aload         4
      37: invokeinterface #103,  1          // InterfaceMethod io/sunshower/gyre/TaskSet.size:()I
      42: aload         5
      44: invokeinterface #103,  1          // InterfaceMethod io/sunshower/gyre/TaskSet.size:()I
      49: ldc           #104                // String level set must have same size
      51: invokestatic  #93                 // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V
      54: aload         4
      56: invokeinterface #106,  1          // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      61: invokeinterface #110,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore        6
      68: aload         5
      70: invokeinterface #106,  1          // InterfaceMethod io/sunshower/gyre/TaskSet.getTasks:()Ljava/util/List;
      75: invokeinterface #110,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      80: astore        7
      82: aload         6
      84: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          128
      92: aload         6
      94: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #126                // class io/sunshower/gyre/Task
     102: invokeinterface #128,  1          // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
     107: aload         7
     109: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #126                // class io/sunshower/gyre/Task
     117: invokeinterface #128,  1          // InterfaceMethod io/sunshower/gyre/Task.getValue:()Ljava/lang/Object;
     122: invokestatic  #131                // Method org/junit/jupiter/api/Assertions.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     125: goto          82
     128: iinc          3, 1
     131: goto          15
     134: return

  io.sunshower.gyre.TaskSet<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> level(java.lang.String...);
    Code:
       0: new           #134                // class io/sunshower/gyre/MutableTaskSet
       3: dup
       4: invokespecial #136                // Method io/sunshower/gyre/MutableTaskSet."<init>":()V
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     56
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_2
      31: getfield      #137                // Field io/sunshower/gyre/MutableTaskSet.tasks:Ljava/util/List;
      34: new           #141                // class io/sunshower/gyre/ReverseSubgraphTransformationTest$1
      37: dup
      38: aload_0
      39: aload         6
      41: invokespecial #143                // Method io/sunshower/gyre/ReverseSubgraphTransformationTest$1."<init>":(Lio/sunshower/gyre/ReverseSubgraphTransformationTest;Ljava/lang/String;)V
      44: invokeinterface #146,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          5, 1
      53: goto          17
      56: aload_2
      57: areturn

  private io.sunshower.gyre.Schedule<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String> scheduleFrom(java.lang.String);
    Code:
       0: new           #147                // class io/sunshower/gyre/ParallelScheduler
       3: dup
       4: invokespecial #149                // Method io/sunshower/gyre/ParallelScheduler."<init>":()V
       7: aload_0
       8: aload_1
       9: invokevirtual #150                // Method t:(Ljava/lang/String;)Lio/sunshower/gyre/Transformation;
      12: aload_0
      13: getfield      #10                 // Field graph:Lio/sunshower/gyre/AbstractDirectedGraph;
      16: invokeinterface #154,  2          // InterfaceMethod io/sunshower/gyre/Transformation.apply:(Lio/sunshower/gyre/Graph;)Ljava/lang/Object;
      21: checkcast     #160                // class io/sunshower/gyre/Graph
      24: invokevirtual #162                // Method io/sunshower/gyre/ParallelScheduler.apply:(Lio/sunshower/gyre/Graph;)Lio/sunshower/gyre/Schedule;
      27: invokeinterface #165,  1          // InterfaceMethod io/sunshower/gyre/Schedule.reverse:()Lio/sunshower/gyre/Schedule;
      32: areturn

  io.sunshower.gyre.Transformation<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String, io.sunshower.gyre.Graph<io.sunshower.gyre.DirectedGraph$Edge<java.lang.String>, java.lang.String>> t(java.lang.String);
    Code:
       0: new           #169                // class io/sunshower/gyre/ReverseSubgraphTransformation
       3: dup
       4: aload_1
       5: invokespecial #171                // Method io/sunshower/gyre/ReverseSubgraphTransformation."<init>":(Ljava/lang/Object;)V
       8: areturn
}
