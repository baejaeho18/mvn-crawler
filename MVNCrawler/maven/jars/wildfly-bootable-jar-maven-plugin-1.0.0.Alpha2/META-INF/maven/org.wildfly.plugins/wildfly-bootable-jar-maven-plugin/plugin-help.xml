<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>WildFly Bootable Jar Maven Plugin</name>
  <description>Provides, via submodules, a base configuration for JBoss project builds, as well as a derived configuration supporting multi-release JARs</description>
  <groupId>org.wildfly.plugins</groupId>
  <artifactId>wildfly-bootable-jar-maven-plugin</artifactId>
  <version>1.0.0.Alpha2</version>
  <goalPrefix>wildfly-bootable-jar</goalPrefix>
  <mojos>
    <mojo>
      <goal>package</goal>
      <description>Build a bootable jar containing application and provisioned server</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.wildfly.plugins.bootablejar.maven.goals.BuildBootableJarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>cliScriptFiles</name>
          <alias>cli-script-files</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path to JBoss CLI scripts to execute once the server is provisioned and application installed in server.</description>
        </parameter>
        <parameter>
          <name>defaultFpl</name>
          <alias>default-feature-pack-location</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WildFly galleon feature-pack location to use if no provisioning.xml file found.</description>
        </parameter>
        <parameter>
          <name>devApp</name>
          <alias>dev-app</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>App in dev, copied to deployments dir, expected to be run with a dev-server.</description>
        </parameter>
        <parameter>
          <name>devServer</name>
          <alias>dev-server</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Hollow server + activate scan of deployments dir</description>
        </parameter>
        <parameter>
          <name>excludeLayers</name>
          <alias>exclude-layers</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of galleon layers to exclude.</description>
        </parameter>
        <parameter>
          <name>hollowJar</name>
          <alias>hollow-jar</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Hollow jar. Create a bootable jar that doesn&apos;t contain application.</description>
        </parameter>
        <parameter>
          <name>layers</name>
          <alias>layers</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of galleon layers to provision.</description>
        </parameter>
        <parameter>
          <name>logTime</name>
          <alias>log-time</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to log provisioning time at the end</description>
        </parameter>
        <parameter>
          <name>offline</name>
          <alias>offline</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use offline mode when the plugin resolves an artifact. In offline mode the plugin will only use the local Maven repository for an artifact resolution.</description>
        </parameter>
        <parameter>
          <name>outputFileName</name>
          <alias>output-file-name</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>By default the generated jar is ${project.build.finalName}-wildfly-bootable.jar</description>
        </parameter>
        <parameter>
          <name>pluginOptions</name>
          <alias>plugin-options</alias>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Arbitrary Galleon options used when provisioning the server.</description>
        </parameter>
        <parameter>
          <name>projectBuildDir</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>propertiesFile</name>
          <alias>cli-properties-file</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path to a JBoss CLI script properties file.</description>
        </parameter>
        <parameter>
          <name>recordState</name>
          <alias>record-state</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to record provisioned state in .galleon directory.</description>
        </parameter>
        <parameter>
          <name>rootUrlPath</name>
          <alias>root-url-path</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>To make the war registered under root resource path (&apos;/&apos;).</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true if you want the deployment to be skipped, otherwise false.</description>
        </parameter>
      </parameters>
      <configuration>
        <defaultFpl implementation="java.lang.String" default-value="wildfly@maven(org.jboss.universe:community-universe)">${wildfly.bootable.fpl}</defaultFpl>
        <devApp implementation="boolean">${wildfly.bootable.dev.app}</devApp>
        <devServer implementation="boolean">${wildfly.bootable.dev.server}</devServer>
        <hollowJar implementation="boolean">${wildfly.bootable.hollow}</hollowJar>
        <logTime implementation="boolean" default-value="false"/>
        <offline implementation="boolean" default-value="false"/>
        <outputFileName implementation="java.lang.String">${wildfly.bootable.package.output.file.name}</outputFileName>
        <projectBuildDir implementation="java.lang.String" default-value="${project.build.directory}"/>
        <recordState implementation="boolean" default-value="false"/>
        <rootUrlPath implementation="boolean" default-value="true">${wildfly.bootable.root.url}</rootUrlPath>
        <skip implementation="boolean" default-value="false">${wildfly.bootable.package.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>run</goal>
      <description>Run the bootable jar. This is blocking.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.wildfly.plugins.bootablejar.maven.goals.RunBootableJarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>arguments</name>
          <alias>arguments</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bootable jar arguments.</description>
        </parameter>
        <parameter>
          <name>jvmArguments</name>
          <alias>jvmArguments</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional JVM options.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true if you want the deployment to be skipped, otherwise false.</description>
        </parameter>
      </parameters>
      <configuration>
        <arguments implementation="java.util.List">${wildfly.bootable.run.arguments}</arguments>
        <jvmArguments implementation="java.util.List">${wildfly.bootable.run.jvmArguments}</jvmArguments>
        <skip implementation="boolean" default-value="false">${wildfly.bootable.run.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>shutdown</goal>
      <description>Shutdown the bootable jar. XXX POC, No shutdown operation in embedded.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.wildfly.plugins.bootablejar.maven.goals.ShutdownBootableJarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>authenticationConfig</name>
          <alias>authentication-config</alias>
          <type>java.net.URL</type>
          <required>false</required>
          <editable>true</editable>
          <description>A URL which points to the authentication configuration (wildfly-config.xml) the client uses to authenticate with the server.</description>
        </parameter>
        <parameter>
          <name>hostname</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the host name of the server where the deployment plan should be executed.</description>
        </parameter>
        <parameter>
          <name>id</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the id of the server if the username and password is to be retrieved from the settings.xml file</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the password to use if prompted to authenticate by the server. If no password is specified and the server requests authentication the user will be prompted to supply the password,</description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the port number the server is listening on.</description>
        </parameter>
        <parameter>
          <name>protocol</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The protocol used to connect to the server for management.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true if you want the deployment to be skipped, otherwise false.</description>
        </parameter>
        <parameter>
          <name>timeout</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The timeout, in seconds, to wait for a management connection.</description>
        </parameter>
        <parameter>
          <name>username</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the username to use if prompted to authenticate by the server. If no username is specified and the server requests authentication the user will be prompted to supply the username,</description>
        </parameter>
      </parameters>
      <configuration>
        <authenticationConfig implementation="java.net.URL">${wildfly.authConfig}</authenticationConfig>
        <hostname implementation="java.lang.String" default-value="localhost">${wildfly.hostname}</hostname>
        <id implementation="java.lang.String">${wildfly.id}</id>
        <password implementation="java.lang.String">${wildfly.password}</password>
        <port implementation="int" default-value="9990">${wildfly.port}</port>
        <protocol implementation="java.lang.String">${wildfly.protocol}</protocol>
        <skip implementation="boolean" default-value="false">${wildfly.bootable.shutdown.skip}</skip>
        <timeout implementation="int" default-value="60">${wildfly.timeout}</timeout>
        <username implementation="java.lang.String">${wildfly.username}</username>
      </configuration>
    </mojo>
    <mojo>
      <goal>start</goal>
      <description>Start the bootable jar. The plugin execution keeps the process running.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.wildfly.plugins.bootablejar.maven.goals.StartBootableJarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>arguments</name>
          <alias>arguments</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bootable jar arguments.</description>
        </parameter>
        <parameter>
          <name>authenticationConfig</name>
          <alias>authentication-config</alias>
          <type>java.net.URL</type>
          <required>false</required>
          <editable>true</editable>
          <description>A URL which points to the authentication configuration (wildfly-config.xml) the client uses to authenticate with the server.</description>
        </parameter>
        <parameter>
          <name>checkStarted</name>
          <alias>check-server-start</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to false if you don&apos;t want the plugin to check for server status before to return. In case the started server has no management interface enabled this parameter should be set to true.</description>
        </parameter>
        <parameter>
          <name>hostname</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the host name of the server where the deployment plan should be executed.</description>
        </parameter>
        <parameter>
          <name>id</name>
          <alias>id</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Bootable Jar Process id.</description>
        </parameter>
        <parameter>
          <name>jvmArguments</name>
          <alias>jvmArguments</alias>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional JVM options.</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the password to use if prompted to authenticate by the server. If no password is specified and the server requests authentication the user will be prompted to supply the password,</description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the port number the server is listening on.</description>
        </parameter>
        <parameter>
          <name>protocol</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The protocol used to connect to the server for management.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true if you want the deployment to be skipped, otherwise false.</description>
        </parameter>
        <parameter>
          <name>startupTimeout</name>
          <alias>startup-timeout</alias>
          <type>long</type>
          <required>false</required>
          <editable>true</editable>
          <description>The timeout value to use when checking for the server to be running.</description>
        </parameter>
        <parameter>
          <name>timeout</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The timeout, in seconds, to wait for a management connection.</description>
        </parameter>
        <parameter>
          <name>username</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the username to use if prompted to authenticate by the server. If no username is specified and the server requests authentication the user will be prompted to supply the username,</description>
        </parameter>
      </parameters>
      <configuration>
        <arguments implementation="java.util.List">${wildfly.bootable.start.arguments}</arguments>
        <authenticationConfig implementation="java.net.URL">${wildfly.authConfig}</authenticationConfig>
        <checkStarted implementation="boolean" default-value="true">${wildfly.bootable.start.check.start}</checkStarted>
        <hostname implementation="java.lang.String" default-value="localhost">${wildfly.hostname}</hostname>
        <id implementation="java.lang.String" default-value="60">${wildfly.bootable.start.id}</id>
        <jvmArguments implementation="java.util.List">${wildfly.bootable.start.jvmArguments}</jvmArguments>
        <password implementation="java.lang.String">${wildfly.password}</password>
        <port implementation="int" default-value="9990">${wildfly.port}</port>
        <protocol implementation="java.lang.String">${wildfly.protocol}</protocol>
        <skip implementation="boolean" default-value="false">${wildfly.bootable.start.skip}</skip>
        <startupTimeout implementation="long" default-value="60">${wildfly.bootable.start.timeout}</startupTimeout>
        <timeout implementation="int" default-value="60">${wildfly.timeout}</timeout>
        <username implementation="java.lang.String">${wildfly.username}</username>
      </configuration>
    </mojo>
  </mojos>
</plugin>