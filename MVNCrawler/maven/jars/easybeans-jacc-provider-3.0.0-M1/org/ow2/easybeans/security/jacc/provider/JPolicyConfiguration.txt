Compiled from "JPolicyConfiguration.java"
public class org.ow2.easybeans.security.jacc.provider.JPolicyConfiguration implements javax.security.jacc.PolicyConfiguration {
  private org.ow2.easybeans.security.jacc.provider.JPolicyConfiguration$State state;

  private java.lang.String contextID;

  private static org.ow2.util.log.Log logger;

  private java.security.PermissionCollection excludedPermissions;

  private java.security.PermissionCollection uncheckedPermissions;

  private java.util.Map<java.lang.String, java.security.PermissionCollection> rolePermissions;

  public org.ow2.easybeans.security.jacc.provider.JPolicyConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field contextID:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field rolePermissions:Ljava/util/Map;
      24: aload_0
      25: aload_1
      26: putfield      #2                  // Field contextID:Ljava/lang/String;
      29: aload_0
      30: invokevirtual #6                  // Method resetState:()V
      33: aload_0
      34: new           #7                  // class java/security/Permissions
      37: dup
      38: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      41: putfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      44: aload_0
      45: new           #7                  // class java/security/Permissions
      48: dup
      49: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      52: putfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      55: aload_0
      56: new           #9                  // class java/util/HashMap
      59: dup
      60: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      63: putfield      #5                  // Field rolePermissions:Ljava/util/Map;
      66: return

  public void addToExcludedPolicy(java.security.Permission) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #12                 // String Adding permission \'\'{0}\'\' as excluded policy.
       5: iconst_1
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #15                 // Method checkSetPolicy:()V
      22: aload_0
      23: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      26: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      29: aload_1
      30: ifnull        41
      33: aload_0
      34: getfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      37: aload_1
      38: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
      41: return

  public void addToExcludedPolicy(java.security.PermissionCollection) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #19                 // String Adding permissions \'\'{0}\'\' as excluded policy.
       5: iconst_1
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #15                 // Method checkSetPolicy:()V
      22: aload_0
      23: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      26: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      29: aload_1
      30: ifnull        66
      33: aload_1
      34: invokevirtual #20                 // Method java/security/PermissionCollection.elements:()Ljava/util/Enumeration;
      37: astore_2
      38: aload_2
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      44: ifeq          66
      47: aload_0
      48: getfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      51: aload_2
      52: invokeinterface #22,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      57: checkcast     #23                 // class java/security/Permission
      60: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
      63: goto          38
      66: return

  public void addToRole(java.lang.String, java.security.Permission) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #24                 // String Adding permission \'\'{0}\'\' to role \'\'{1}\'\'.
       5: iconst_2
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: aastore
      17: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      22: aload_0
      23: invokespecial #15                 // Method checkSetPolicy:()V
      26: aload_0
      27: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      30: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      33: aload_1
      34: ifnonnull     62
      37: new           #25                 // class javax/security/jacc/PolicyContextException
      40: dup
      41: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      44: invokeinterface #26,  1           // InterfaceMethod org/ow2/util/log/Log.getI18n:()Lorg/ow2/util/i18n/I18n;
      49: ldc           #27                 // String JPolicyConfiguration.addToRole
      51: iconst_0
      52: anewarray     #13                 // class java/lang/Object
      55: invokevirtual #28                 // Method org/ow2/util/i18n/I18n.getMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      58: invokespecial #29                 // Method javax/security/jacc/PolicyContextException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_2
      63: ifnonnull     67
      66: return
      67: aload_0
      68: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
      71: aload_1
      72: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #31                 // class java/security/PermissionCollection
      80: astore_3
      81: aload_3
      82: ifnonnull     93
      85: new           #7                  // class java/security/Permissions
      88: dup
      89: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      92: astore_3
      93: aload_3
      94: aload_2
      95: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
      98: aload_0
      99: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
     102: aload_1
     103: aload_3
     104: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: return

  public void addToRole(java.lang.String, java.security.PermissionCollection) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #33                 // String Adding permissions \'\'{0}\'\' to role \'\'{1}\'\'.
       5: iconst_2
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: aastore
      17: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      22: aload_0
      23: invokespecial #15                 // Method checkSetPolicy:()V
      26: aload_0
      27: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      30: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      33: aload_1
      34: ifnonnull     62
      37: new           #25                 // class javax/security/jacc/PolicyContextException
      40: dup
      41: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      44: invokeinterface #26,  1           // InterfaceMethod org/ow2/util/log/Log.getI18n:()Lorg/ow2/util/i18n/I18n;
      49: ldc           #27                 // String JPolicyConfiguration.addToRole
      51: iconst_0
      52: anewarray     #13                 // class java/lang/Object
      55: invokevirtual #28                 // Method org/ow2/util/i18n/I18n.getMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      58: invokespecial #29                 // Method javax/security/jacc/PolicyContextException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_2
      63: ifnonnull     67
      66: return
      67: aload_0
      68: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
      71: aload_1
      72: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #31                 // class java/security/PermissionCollection
      80: astore_3
      81: aload_3
      82: ifnonnull     93
      85: new           #7                  // class java/security/Permissions
      88: dup
      89: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      92: astore_3
      93: aload_2
      94: invokevirtual #20                 // Method java/security/PermissionCollection.elements:()Ljava/util/Enumeration;
      97: astore        4
      99: aload         4
     101: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     106: ifeq          126
     109: aload_3
     110: aload         4
     112: invokeinterface #22,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     117: checkcast     #23                 // class java/security/Permission
     120: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
     123: goto          99
     126: aload_0
     127: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
     130: aload_1
     131: aload_3
     132: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: return

  public void addToUncheckedPolicy(java.security.Permission) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #34                 // String Adding permission \'\'{0}\'\' as unchecked policy.
       5: iconst_1
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #15                 // Method checkSetPolicy:()V
      22: aload_0
      23: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      26: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      29: aload_1
      30: ifnull        41
      33: aload_0
      34: getfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      37: aload_1
      38: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
      41: return

  public void addToUncheckedPolicy(java.security.PermissionCollection) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #35                 // String Adding permissions \'\'{0}\'\' as unchecked policy.
       5: iconst_1
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #15                 // Method checkSetPolicy:()V
      22: aload_0
      23: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      26: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      29: aload_1
      30: ifnull        66
      33: aload_1
      34: invokevirtual #20                 // Method java/security/PermissionCollection.elements:()Ljava/util/Enumeration;
      37: astore_2
      38: aload_2
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      44: ifeq          66
      47: aload_0
      48: getfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      51: aload_2
      52: invokeinterface #22,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      57: checkcast     #23                 // class java/security/Permission
      60: invokevirtual #18                 // Method java/security/PermissionCollection.add:(Ljava/security/Permission;)V
      63: goto          38
      66: return

  public void commit() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getstatic     #36                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.DELETED:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: invokespecial #37                 // Method checkCurrentStateNotInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      11: aload_0
      12: getstatic     #38                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.IN_SERVICE:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      15: putfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      18: aload_0
      19: invokestatic  #40                 // Method org/ow2/easybeans/security/jacc/provider/JPolicyConfigurationKeeper.addConfiguration:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration;)V
      22: return

  public void delete() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: new           #7                  // class java/security/Permissions
       8: dup
       9: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      12: putfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      15: aload_0
      16: new           #7                  // class java/security/Permissions
      19: dup
      20: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      23: putfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      26: aload_0
      27: new           #9                  // class java/util/HashMap
      30: dup
      31: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      34: putfield      #5                  // Field rolePermissions:Ljava/util/Map;
      37: aload_0
      38: getstatic     #36                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.DELETED:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      41: putfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      44: aload_0
      45: invokestatic  #41                 // Method org/ow2/easybeans/security/jacc/provider/JPolicyConfigurationKeeper.removeConfiguration:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration;)V
      48: return

  public java.lang.String getContextID() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getfield      #2                  // Field contextID:Ljava/lang/String;
       8: areturn

  public boolean inService() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: getstatic     #38                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.IN_SERVICE:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      11: if_acmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void linkConfiguration(javax.security.jacc.PolicyConfiguration) throws java.lang.IllegalArgumentException, javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #42                 // Method equals:(Ljava/lang/Object;)Z
      16: ifeq          52
      19: new           #43                 // class java/lang/IllegalArgumentException
      22: dup
      23: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      26: invokeinterface #26,  1           // InterfaceMethod org/ow2/util/log/Log.getI18n:()Lorg/ow2/util/i18n/I18n;
      31: ldc           #44                 // String JPolicyConfiguration.linkConfiguration.equivalent
      33: iconst_2
      34: anewarray     #13                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: aastore
      45: invokevirtual #28                 // Method org/ow2/util/i18n/I18n.getMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      48: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: return

  public void removeExcludedPolicy() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      11: aload_0
      12: new           #7                  // class java/security/Permissions
      15: dup
      16: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      19: putfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      22: return

  public void removeRole(java.lang.String) throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      11: aload_0
      12: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #46,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public void removeUncheckedPolicy() throws javax.security.jacc.PolicyContextException, java.lang.SecurityException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method checkSetPolicy:()V
       4: aload_0
       5: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       8: invokespecial #17                 // Method checkCurrentStateIsInState:(Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;)V
      11: aload_0
      12: new           #7                  // class java/security/Permissions
      15: dup
      16: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      19: putfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      22: return

  private void checkCurrentStateNotInState(org.ow2.easybeans.security.jacc.provider.JPolicyConfiguration$State) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       4: aload_1
       5: if_acmpne     46
       8: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      11: invokeinterface #26,  1           // InterfaceMethod org/ow2/util/log/Log.getI18n:()Lorg/ow2/util/i18n/I18n;
      16: ldc           #47                 // String JPolicyConfiguration.checkCurrentStateNotInState.notValidState
      18: iconst_2
      19: anewarray     #13                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      32: aastore
      33: invokevirtual #28                 // Method org/ow2/util/i18n/I18n.getMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: astore_2
      37: new           #48                 // class java/lang/UnsupportedOperationException
      40: dup
      41: aload_2
      42: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: return

  private void checkCurrentStateIsInState(org.ow2.easybeans.security.jacc.provider.JPolicyConfiguration$State) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       4: aload_1
       5: if_acmpeq     46
       8: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      11: invokeinterface #26,  1           // InterfaceMethod org/ow2/util/log/Log.getI18n:()Lorg/ow2/util/i18n/I18n;
      16: ldc           #47                 // String JPolicyConfiguration.checkCurrentStateNotInState.notValidState
      18: iconst_2
      19: anewarray     #13                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokevirtual #28                 // Method org/ow2/util/i18n/I18n.getMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: astore_2
      37: new           #48                 // class java/lang/UnsupportedOperationException
      40: dup
      41: aload_2
      42: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: return

  private void checkSetPolicy() throws java.lang.SecurityException;
    Code:
       0: invokestatic  #50                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        21
       8: aload_1
       9: new           #51                 // class java/security/SecurityPermission
      12: dup
      13: ldc           #52                 // String setPolicy
      15: invokespecial #53                 // Method java/security/SecurityPermission."<init>":(Ljava/lang/String;)V
      18: invokevirtual #54                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      21: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #55                 // class javax/security/jacc/PolicyConfiguration
       4: ifne          23
       7: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      10: ldc           #56                 // String JPolicyConfiguration.equals.notInstanceOf
      12: iconst_0
      13: anewarray     #13                 // class java/lang/Object
      16: invokeinterface #57,  3           // InterfaceMethod org/ow2/util/log/Log.error:(Ljava/lang/Object;[Ljava/lang/Object;)V
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #2                  // Field contextID:Ljava/lang/String;
      27: aload_1
      28: checkcast     #55                 // class javax/security/jacc/PolicyConfiguration
      31: invokeinterface #58,  1           // InterfaceMethod javax/security/jacc/PolicyConfiguration.getContextID:()Ljava/lang/String;
      36: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ireturn
      40: astore_2
      41: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      44: ldc           #60                 // String JPolicyConfiguration.equals.canNotCheck
      46: iconst_1
      47: anewarray     #13                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_2
      53: aastore
      54: invokeinterface #57,  3           // InterfaceMethod org/ow2/util/log/Log.error:(Ljava/lang/Object;[Ljava/lang/Object;)V
      59: iconst_0
      60: ireturn
    Exception table:
       from    to  target type
          23    39    40   Class javax/security/jacc/PolicyContextException

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field contextID:Ljava/lang/String;
       4: invokevirtual #61                 // Method java/lang/String.hashCode:()I
       7: ireturn

  protected void resetState();
    Code:
       0: aload_0
       1: getstatic     #16                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.OPEN:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       4: putfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       7: return

  public java.security.PermissionCollection getExcludedPermissions();
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       4: getstatic     #38                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.IN_SERVICE:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       7: if_acmpeq     18
      10: new           #7                  // class java/security/Permissions
      13: dup
      14: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      17: areturn
      18: aload_0
      19: getfield      #3                  // Field excludedPermissions:Ljava/security/PermissionCollection;
      22: areturn

  public java.security.PermissionCollection getUncheckedPermissions();
    Code:
       0: aload_0
       1: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       4: getstatic     #38                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.IN_SERVICE:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
       7: if_acmpeq     18
      10: new           #7                  // class java/security/Permissions
      13: dup
      14: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      17: areturn
      18: aload_0
      19: getfield      #4                  // Field uncheckedPermissions:Ljava/security/PermissionCollection;
      22: areturn

  public java.security.PermissionCollection getPermissionsForPrincipal(java.security.Principal);
    Code:
       0: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       3: ldc           #62                 // String principal = \'\'{0}\'\'
       5: iconst_1
       6: anewarray     #13                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      18: aload_1
      19: ifnull        32
      22: aload_0
      23: getfield      #39                 // Field state:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      26: getstatic     #38                 // Field org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State.IN_SERVICE:Lorg/ow2/easybeans/security/jacc/provider/JPolicyConfiguration$State;
      29: if_acmpeq     40
      32: new           #7                  // class java/security/Permissions
      35: dup
      36: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      39: areturn
      40: aload_0
      41: getfield      #5                  // Field rolePermissions:Ljava/util/Map;
      44: aload_1
      45: invokeinterface #63,  1           // InterfaceMethod java/security/Principal.getName:()Ljava/lang/String;
      50: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #31                 // class java/security/PermissionCollection
      58: astore_2
      59: getstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
      62: ldc           #64                 // String Permissions found = \'\'{0}\'\'
      64: iconst_1
      65: anewarray     #13                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_2
      71: aastore
      72: invokeinterface #14,  3           // InterfaceMethod org/ow2/util/log/Log.debug:(Ljava/lang/Object;[Ljava/lang/Object;)V
      77: aload_2
      78: ifnonnull     89
      81: new           #7                  // class java/security/Permissions
      84: dup
      85: invokespecial #8                  // Method java/security/Permissions."<init>":()V
      88: astore_2
      89: aload_2
      90: areturn

  static {};
    Code:
       0: ldc_w         #65                 // class org/ow2/easybeans/security/jacc/provider/JPolicyConfiguration
       3: invokestatic  #66                 // Method org/ow2/util/log/LogFactory.getLog:(Ljava/lang/Class;)Lorg/ow2/util/log/Log;
       6: putstatic     #11                 // Field logger:Lorg/ow2/util/log/Log;
       9: return
}
