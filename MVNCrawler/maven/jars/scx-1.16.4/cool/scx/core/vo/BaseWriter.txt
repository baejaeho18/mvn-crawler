Compiled from "BaseWriter.java"
class cool.scx.core.vo.BaseWriter implements cool.scx.core.vo.BaseVo {
  private static final java.util.regex.Pattern RANGE;

  private static final int bucketSize;

  protected final java.io.InputStream inputStream;

  protected final java.nio.file.Path path;

  protected final byte[] bytes;

  protected final cool.scx.core.vo.BaseWriter$Type type;

  protected final java.lang.String contentType;

  protected final java.lang.String contentDisposition;

  private cool.scx.core.vo.BaseWriter(java.io.InputStream, java.nio.file.Path, byte[], cool.scx.core.vo.BaseWriter$Type, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field inputStream:Ljava/io/InputStream;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field path:Ljava/nio/file/Path;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field bytes:[B
      19: aload_0
      20: aload         4
      22: putfield      #21                 // Field type:Lcool/scx/core/vo/BaseWriter$Type;
      25: aload_0
      26: aload         5
      28: putfield      #25                 // Field contentType:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #29                 // Field contentDisposition:Ljava/lang/String;
      37: return

  protected cool.scx.core.vo.BaseWriter(java.io.InputStream, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: getstatic     #32                 // Field cool/scx/core/vo/BaseWriter$Type.INPUT_STREAM:Lcool/scx/core/vo/BaseWriter$Type;
       7: aload_2
       8: aload_3
       9: invokespecial #37                 // Method "<init>":(Ljava/io/InputStream;Ljava/nio/file/Path;[BLcool/scx/core/vo/BaseWriter$Type;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  protected cool.scx.core.vo.BaseWriter(java.nio.file.Path, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aconst_null
       4: getstatic     #40                 // Field cool/scx/core/vo/BaseWriter$Type.PATH:Lcool/scx/core/vo/BaseWriter$Type;
       7: aload_2
       8: aload_3
       9: invokespecial #37                 // Method "<init>":(Ljava/io/InputStream;Ljava/nio/file/Path;[BLcool/scx/core/vo/BaseWriter$Type;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  protected cool.scx.core.vo.BaseWriter(byte[], java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: getstatic     #43                 // Field cool/scx/core/vo/BaseWriter$Type.BYTE_ARRAY:Lcool/scx/core/vo/BaseWriter$Type;
       7: aload_2
       8: aload_3
       9: invokespecial #37                 // Method "<init>":(Ljava/io/InputStream;Ljava/nio/file/Path;[BLcool/scx/core/vo/BaseWriter$Type;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public final void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: getstatic     #46                 // Field cool/scx/core/vo/BaseWriter$1.$SwitchMap$cool$scx$core$vo$BaseWriter$Type:[I
       3: aload_0
       4: getfield      #21                 // Field type:Lcool/scx/core/vo/BaseWriter$Type;
       7: invokevirtual #52                 // Method cool/scx/core/vo/BaseWriter$Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 44
                     3: 52
               default: 57
          }
      36: aload_0
      37: aload_1
      38: invokevirtual #56                 // Method sendBytes:(Lio/vertx/ext/web/RoutingContext;)V
      41: goto          57
      44: aload_0
      45: aload_1
      46: invokevirtual #60                 // Method sendFile:(Lio/vertx/ext/web/RoutingContext;)V
      49: goto          57
      52: aload_0
      53: aload_1
      54: invokevirtual #63                 // Method sendInputStream:(Lio/vertx/ext/web/RoutingContext;)V
      57: return

  protected void sendBytes(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #25                 // Field contentType:Ljava/lang/String;
       4: aload_1
       5: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      10: invokeinterface #72,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      15: invokestatic  #78                 // InterfaceMethod cool/scx/core/vo/BaseVo.fillContentType:(Ljava/lang/String;Lio/vertx/core/http/HttpServerResponse;)Lio/vertx/core/http/HttpServerResponse;
      18: getstatic     #84                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_DISPOSITION:Lio/netty/util/AsciiString;
      21: aload_0
      22: getfield      #29                 // Field contentDisposition:Ljava/lang/String;
      25: invokeinterface #90,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      30: pop
      31: aload_0
      32: aload_1
      33: invokeinterface #96,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      38: getstatic     #97                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
      41: aload_0
      42: getfield      #17                 // Field bytes:[B
      45: arraylength
      46: invokestatic  #100                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      49: invokeinterface #90,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      54: iconst_0
      55: invokevirtual #106                // Method writeBytes:(Lio/vertx/core/http/HttpServerResponse;I)V
      58: return

  protected void sendInputStream(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #25                 // Field contentType:Ljava/lang/String;
       4: aload_1
       5: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      10: invokeinterface #72,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      15: invokestatic  #78                 // InterfaceMethod cool/scx/core/vo/BaseVo.fillContentType:(Ljava/lang/String;Lio/vertx/core/http/HttpServerResponse;)Lio/vertx/core/http/HttpServerResponse;
      18: getstatic     #84                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_DISPOSITION:Lio/netty/util/AsciiString;
      21: aload_0
      22: getfield      #29                 // Field contentDisposition:Ljava/lang/String;
      25: invokeinterface #90,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      30: pop
      31: aload_0
      32: aload_1
      33: invokeinterface #96,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      38: iconst_1
      39: invokeinterface #110,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.setChunked:(Z)Lio/vertx/core/http/HttpServerResponse;
      44: invokevirtual #114                // Method writeInputStream:(Lio/vertx/core/http/HttpServerResponse;)V
      47: return

  protected void sendFile(io.vertx.ext.web.RoutingContext) throws cool.scx.core.http.exception.impl.NotFoundException;
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: invokeinterface #72,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      11: getstatic     #84                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_DISPOSITION:Lio/netty/util/AsciiString;
      14: aload_0
      15: getfield      #29                 // Field contentDisposition:Ljava/lang/String;
      18: invokeinterface #90,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      23: pop
      24: aload_0
      25: aload_1
      26: invokevirtual #118                // Method writeFile:(Lio/vertx/ext/web/RoutingContext;)V
      29: return

  private void writeBytes(io.vertx.core.http.HttpServerResponse, int);
    Code:
       0: iload_2
       1: ldc           #121                // int 1024000
       3: iadd
       4: istore_3
       5: iload_3
       6: aload_0
       7: getfield      #17                 // Field bytes:[B
      10: arraylength
      11: if_icmplt     40
      14: aload_1
      15: aload_0
      16: getfield      #17                 // Field bytes:[B
      19: iload_2
      20: aload_0
      21: getfield      #17                 // Field bytes:[B
      24: arraylength
      25: invokestatic  #122                // Method java/util/Arrays.copyOfRange:([BII)[B
      28: invokestatic  #128                // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:([B)Lio/vertx/core/buffer/Buffer;
      31: invokeinterface #134,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
      36: pop
      37: goto          66
      40: aload_1
      41: aload_0
      42: getfield      #17                 // Field bytes:[B
      45: iload_2
      46: iload_3
      47: invokestatic  #122                // Method java/util/Arrays.copyOfRange:([BII)[B
      50: invokestatic  #128                // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:([B)Lio/vertx/core/buffer/Buffer;
      53: aload_0
      54: aload_1
      55: iload_3
      56: invokedynamic #138,  0            // InvokeDynamic #0:handle:(Lcool/scx/core/vo/BaseWriter;Lio/vertx/core/http/HttpServerResponse;I)Lio/vertx/core/Handler;
      61: invokeinterface #142,  3          // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/Object;Lio/vertx/core/Handler;)V
      66: return

  private void writeInputStream(io.vertx.core.http.HttpServerResponse);
    Code:
       0: ldc           #121                // int 1024000
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokedynamic #146,  0            // InvokeDynamic #1:handle:(Lcool/scx/core/vo/BaseWriter;[B)Lcool/scx/functional/ScxHandlerRE;
      12: invokestatic  #149                // Method cool/scx/util/exception/ScxExceptionHelper.wrap:(Lcool/scx/functional/ScxHandlerRE;)Ljava/lang/Object;
      15: checkcast     #155                // class java/lang/Integer
      18: astore_3
      19: aload_3
      20: invokevirtual #157                // Method java/lang/Integer.intValue:()I
      23: iconst_m1
      24: if_icmpne     37
      27: aload_1
      28: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      33: pop
      34: goto          62
      37: aload_1
      38: aload_2
      39: iconst_0
      40: aload_3
      41: invokevirtual #157                // Method java/lang/Integer.intValue:()I
      44: invokestatic  #122                // Method java/util/Arrays.copyOfRange:([BII)[B
      47: invokestatic  #128                // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:([B)Lio/vertx/core/buffer/Buffer;
      50: aload_0
      51: aload_1
      52: invokedynamic #163,  0            // InvokeDynamic #2:handle:(Lcool/scx/core/vo/BaseWriter;Lio/vertx/core/http/HttpServerResponse;)Lio/vertx/core/Handler;
      57: invokeinterface #142,  3          // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/Object;Lio/vertx/core/Handler;)V
      62: return

  private void writeFile(io.vertx.ext.web.RoutingContext) throws cool.scx.core.http.exception.impl.NotFoundException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field path:Ljava/nio/file/Path;
       4: invokeinterface #166,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       9: astore_2
      10: aload_2
      11: invokevirtual #172                // Method java/io/File.exists:()Z
      14: ifne          25
      17: new           #178                // class cool/scx/core/http/exception/impl/NotFoundException
      20: dup
      21: invokespecial #180                // Method cool/scx/core/http/exception/impl/NotFoundException."<init>":()V
      24: athrow
      25: aload_1
      26: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      31: astore_3
      32: aload_1
      33: invokeinterface #96,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      38: astore        4
      40: aconst_null
      41: astore        5
      43: aload         4
      45: invokeinterface #181,  1          // InterfaceMethod io/vertx/core/http/HttpServerResponse.closed:()Z
      50: ifeq          54
      53: return
      54: aload_3
      55: ldc           #184                // String Range
      57: invokeinterface #186,  2          // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      62: astore        9
      64: aload_2
      65: invokevirtual #190                // Method java/io/File.length:()J
      68: lconst_1
      69: lsub
      70: lstore        6
      72: aload         9
      74: ifnull        250
      77: getstatic     #194                // Field RANGE:Ljava/util/regex/Pattern;
      80: aload         9
      82: invokevirtual #198                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      85: astore        10
      87: aload         10
      89: invokevirtual #204                // Method java/util/regex/Matcher.matches:()Z
      92: ifeq          250
      95: aload         10
      97: iconst_1
      98: invokevirtual #209                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     101: astore        11
     103: aload         11
     105: invokestatic  #212                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     108: invokestatic  #218                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     111: astore        5
     113: aload         5
     115: invokevirtual #221                // Method java/lang/Long.longValue:()J
     118: lconst_0
     119: lcmp
     120: iflt          136
     123: aload         5
     125: invokevirtual #221                // Method java/lang/Long.longValue:()J
     128: aload_2
     129: invokevirtual #190                // Method java/io/File.length:()J
     132: lcmp
     133: iflt          144
     136: new           #224                // class java/lang/IndexOutOfBoundsException
     139: dup
     140: invokespecial #226                // Method java/lang/IndexOutOfBoundsException."<init>":()V
     143: athrow
     144: aload         10
     146: iconst_2
     147: invokevirtual #209                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     150: astore        11
     152: aload         11
     154: ifnull        196
     157: aload         11
     159: invokevirtual #227                // Method java/lang/String.length:()I
     162: ifle          196
     165: lload         6
     167: aload         11
     169: invokestatic  #212                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     172: invokestatic  #229                // Method java/lang/Math.min:(JJ)J
     175: lstore        6
     177: lload         6
     179: aload         5
     181: invokevirtual #221                // Method java/lang/Long.longValue:()J
     184: lcmp
     185: ifge          196
     188: new           #224                // class java/lang/IndexOutOfBoundsException
     191: dup
     192: invokespecial #226                // Method java/lang/IndexOutOfBoundsException."<init>":()V
     195: athrow
     196: goto          250
     199: astore        11
     201: aload_1
     202: invokeinterface #96,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     207: getstatic     #237                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_RANGE:Lio/netty/util/AsciiString;
     210: aload_2
     211: invokevirtual #190                // Method java/io/File.length:()J
     214: invokedynamic #240,  0            // InvokeDynamic #3:makeConcatWithConstants:(J)Ljava/lang/String;
     219: invokeinterface #90,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     224: pop
     225: aload_1
     226: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
     231: invokeinterface #244,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
     236: pop
     237: aload_1
     238: getstatic     #247                // Field io/netty/handler/codec/http/HttpResponseStatus.REQUESTED_RANGE_NOT_SATISFIABLE:Lio/netty/handler/codec/http/HttpResponseStatus;
     241: invokevirtual #253                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     244: invokeinterface #256,  2          // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(I)V
     249: return
     250: aload         4
     252: invokeinterface #260,  1          // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
     257: astore        8
     259: aload         8
     261: getstatic     #264                // Field io/netty/handler/codec/http/HttpHeaderNames.ACCEPT_RANGES:Lio/netty/util/AsciiString;
     264: ldc_w         #267                // String bytes
     267: invokeinterface #268,  3          // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
     272: pop
     273: aload         8
     275: getstatic     #97                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_LENGTH:Lio/netty/util/AsciiString;
     278: lload         6
     280: lconst_1
     281: ladd
     282: aload         5
     284: ifnonnull     291
     287: lconst_0
     288: goto          296
     291: aload         5
     293: invokevirtual #221                // Method java/lang/Long.longValue:()J
     296: lsub
     297: invokestatic  #274                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     300: invokeinterface #268,  3          // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
     305: pop
     306: aload_3
     307: invokeinterface #277,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.method:()Lio/vertx/core/http/HttpMethod;
     312: getstatic     #281                // Field io/vertx/core/http/HttpMethod.HEAD:Lio/vertx/core/http/HttpMethod;
     315: if_acmpne     329
     318: aload         4
     320: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
     325: pop
     326: goto          447
     329: aload_2
     330: invokevirtual #287                // Method java/io/File.getName:()Ljava/lang/String;
     333: invokestatic  #291                // Method io/vertx/core/http/impl/MimeMapping.getMimeTypeForFilename:(Ljava/lang/String;)Ljava/lang/String;
     336: aload         4
     338: invokestatic  #78                 // InterfaceMethod cool/scx/core/vo/BaseVo.fillContentType:(Ljava/lang/String;Lio/vertx/core/http/HttpServerResponse;)Lio/vertx/core/http/HttpServerResponse;
     341: pop
     342: aload         5
     344: ifnull        429
     347: aload         8
     349: getstatic     #237                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_RANGE:Lio/netty/util/AsciiString;
     352: aload         5
     354: lload         6
     356: aload_2
     357: invokevirtual #190                // Method java/io/File.length:()J
     360: invokedynamic #296,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/Long;JJ)Ljava/lang/String;
     365: invokeinterface #268,  3          // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
     370: pop
     371: aload         4
     373: getstatic     #299                // Field io/netty/handler/codec/http/HttpResponseStatus.PARTIAL_CONTENT:Lio/netty/handler/codec/http/HttpResponseStatus;
     376: invokevirtual #253                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     379: invokeinterface #302,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
     384: pop
     385: aload         5
     387: invokevirtual #221                // Method java/lang/Long.longValue:()J
     390: lstore        10
     392: lload         6
     394: lconst_1
     395: ladd
     396: aload         5
     398: invokevirtual #221                // Method java/lang/Long.longValue:()J
     401: lsub
     402: lstore        12
     404: aload         4
     406: aload_2
     407: invokevirtual #306                // Method java/io/File.getPath:()Ljava/lang/String;
     410: lload         10
     412: lload         12
     414: aload_1
     415: invokedynamic #309,  0            // InvokeDynamic #5:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
     420: invokeinterface #312,  7          // InterfaceMethod io/vertx/core/http/HttpServerResponse.sendFile:(Ljava/lang/String;JJLio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
     425: pop
     426: goto          447
     429: aload         4
     431: aload_2
     432: invokevirtual #306                // Method java/io/File.getPath:()Ljava/lang/String;
     435: aload_1
     436: invokedynamic #315,  0            // InvokeDynamic #6:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
     441: invokeinterface #316,  3          // InterfaceMethod io/vertx/core/http/HttpServerResponse.sendFile:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
     446: pop
     447: return
    Exception table:
       from    to  target type
          95   196   199   Class java/lang/NumberFormatException
          95   196   199   Class java/lang/IndexOutOfBoundsException

  public void handle(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #67                 // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #319                // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return

  private static void lambda$writeFile$4(io.vertx.ext.web.RoutingContext, io.vertx.core.AsyncResult);
    Code:
       0: aload_1
       1: invokeinterface #321,  1          // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       6: ifeq          33
       9: aload_0
      10: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      15: invokeinterface #244,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
      20: pop
      21: aload_0
      22: aload_1
      23: invokeinterface #326,  1          // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      28: invokeinterface #330,  2          // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(Ljava/lang/Throwable;)V
      33: return

  private static void lambda$writeFile$3(io.vertx.ext.web.RoutingContext, io.vertx.core.AsyncResult);
    Code:
       0: aload_1
       1: invokeinterface #321,  1          // InterfaceMethod io/vertx/core/AsyncResult.failed:()Z
       6: ifeq          33
       9: aload_0
      10: invokeinterface #66,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      15: invokeinterface #244,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
      20: pop
      21: aload_0
      22: aload_1
      23: invokeinterface #326,  1          // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      28: invokeinterface #330,  2          // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(Ljava/lang/Throwable;)V
      33: return

  private void lambda$writeInputStream$2(io.vertx.core.http.HttpServerResponse, io.vertx.core.AsyncResult);
    Code:
       0: aload_2
       1: invokeinterface #333,  1          // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          14
       9: aload_0
      10: aload_1
      11: invokevirtual #114                // Method writeInputStream:(Lio/vertx/core/http/HttpServerResponse;)V
      14: return

  private java.lang.Integer lambda$writeInputStream$1(byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputStream:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #336                // Method java/io/InputStream.read:([B)I
       8: invokestatic  #342                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: areturn

  private void lambda$writeBytes$0(io.vertx.core.http.HttpServerResponse, int, io.vertx.core.AsyncResult);
    Code:
       0: aload_3
       1: invokeinterface #333,  1          // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          15
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokevirtual #106                // Method writeBytes:(Lio/vertx/core/http/HttpServerResponse;I)V
      15: return

  static {};
    Code:
       0: ldc_w         #345                // String ^bytes=(\\d+)-(\\d*)$
       3: invokestatic  #347                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       6: putstatic     #194                // Field RANGE:Ljava/util/regex/Pattern;
       9: return
}
