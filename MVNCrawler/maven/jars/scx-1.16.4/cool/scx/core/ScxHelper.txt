Compiled from "ScxHelper.java"
public final class cool.scx.core.ScxHelper {
  private static final java.util.List<java.lang.Class<? extends java.lang.annotation.Annotation>> beanFilterAnnotation;

  public cool.scx.core.ScxHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isBeanClass(java.lang.Class<?>);
    Code:
       0: getstatic     #7                  // Field beanFilterAnnotation:Ljava/util/List;
       3: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_1
      19: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #29                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #31                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: ifnull        38
      36: iconst_1
      37: ireturn
      38: goto          9
      41: iconst_0
      42: ireturn

  public static java.util.List<java.lang.Class<?>> filterBeanClassList(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #39,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      11: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokeinterface #49,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      21: areturn

  static java.util.List<java.lang.Class<? extends cool.scx.core.base.BaseWebSocketHandler>> filterScxWebSocketRouteClassList(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #53,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      11: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokedynamic #54,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      21: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #14                 // class java/util/List
      37: areturn

  static java.util.List<java.lang.Class<?>> filterScxMappingClassList(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #71,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      11: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokeinterface #49,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      21: areturn

  static java.util.List<java.lang.Class<? extends cool.scx.core.base.BaseModelService<?>>> filterScxBaseModelServiceClassList(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #72,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      11: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokedynamic #73,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      21: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #14                 // class java/util/List
      37: areturn

  static java.util.List<java.lang.Class<? extends cool.scx.core.base.BaseModel>> filterScxBaseModelClassList(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #74,  0             // InvokeDynamic #6:test:()Ljava/util/function/Predicate;
      11: invokeinterface #43,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokedynamic #75,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      21: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #14                 // class java/util/List
      37: areturn

  private static java.lang.Class lambda$filterScxBaseModelClassList$6(java.lang.Class);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$filterScxBaseModelClassList$5(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #76                 // class cool/scx/core/annotation/ScxModel
       3: invokevirtual #78                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          29
       9: aload_0
      10: invokestatic  #82                 // Method cool/scx/util/ScanClassUtils.isInstantiableClass:(Ljava/lang/Class;)Z
      13: ifeq          29
      16: ldc           #87                 // class cool/scx/core/base/BaseModel
      18: aload_0
      19: invokevirtual #89                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private static java.lang.Class lambda$filterScxBaseModelServiceClassList$4(java.lang.Class);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$filterScxBaseModelServiceClassList$3(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #92                 // class cool/scx/core/annotation/ScxService
       3: invokevirtual #78                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          48
       9: aload_0
      10: invokestatic  #94                 // Method cool/scx/util/ScanClassUtils.isNormalClass:(Ljava/lang/Class;)Z
      13: ifeq          48
      16: aload_0
      17: invokevirtual #97                 // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;
      20: astore_2
      21: aload_2
      22: instanceof    #101                // class java/lang/reflect/ParameterizedType
      25: ifeq          48
      28: aload_2
      29: checkcast     #101                // class java/lang/reflect/ParameterizedType
      32: astore_1
      33: aload_1
      34: invokeinterface #103,  1          // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      39: arraylength
      40: iconst_1
      41: if_icmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  private static boolean lambda$filterScxMappingClassList$2(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #107                // class cool/scx/core/annotation/ScxMapping
       3: invokevirtual #78                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifne          18
       9: aload_0
      10: ldc           #109                // class org/springframework/stereotype/Controller
      12: invokevirtual #78                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      15: ifeq          29
      18: aload_0
      19: invokestatic  #94                 // Method cool/scx/util/ScanClassUtils.isNormalClass:(Ljava/lang/Class;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private static java.lang.Class lambda$filterScxWebSocketRouteClassList$1(java.lang.Class);
    Code:
       0: aload_0
       1: areturn

  private static boolean lambda$filterScxWebSocketRouteClassList$0(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #111                // class cool/scx/core/annotation/ScxWebSocketMapping
       3: invokevirtual #78                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          29
       9: aload_0
      10: invokestatic  #94                 // Method cool/scx/util/ScanClassUtils.isNormalClass:(Ljava/lang/Class;)Z
      13: ifeq          29
      16: ldc           #113                // class cool/scx/core/base/BaseWebSocketHandler
      18: aload_0
      19: invokevirtual #89                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  static {};
    Code:
       0: ldc           #115                // class cool/scx/core/annotation/ScxComponent
       2: ldc           #107                // class cool/scx/core/annotation/ScxMapping
       4: ldc           #76                 // class cool/scx/core/annotation/ScxModel
       6: ldc           #92                 // class cool/scx/core/annotation/ScxService
       8: ldc           #111                // class cool/scx/core/annotation/ScxWebSocketMapping
      10: ldc           #117                // class org/springframework/stereotype/Component
      12: ldc           #109                // class org/springframework/stereotype/Controller
      14: ldc           #119                // class org/springframework/stereotype/Service
      16: ldc           #121                // class org/springframework/stereotype/Repository
      18: invokestatic  #123                // InterfaceMethod java/util/List.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;
      21: putstatic     #7                  // Field beanFilterAnnotation:Ljava/util/List;
      24: return
}
