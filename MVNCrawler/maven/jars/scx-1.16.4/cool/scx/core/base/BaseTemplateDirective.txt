Compiled from "BaseTemplateDirective.java"
public interface cool.scx.core.base.BaseTemplateDirective extends freemarker.template.TemplateDirectiveModel {
  public static java.util.Map<java.lang.String, java.lang.Object> formatMapParams(java.util.Map<?, ?>);
    Code:
       0: new           #1                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          78
      29: aload_2
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #29                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: checkcast     #34                 // class java/lang/String
      49: aload_3
      50: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #39                 // class freemarker/template/TemplateModel
      58: invokestatic  #41                 // Method freemarker/template/utility/DeepUnwrap.unwrap:(Lfreemarker/template/TemplateModel;)Ljava/lang/Object;
      61: invokevirtual #47                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          75
      68: astore        4
      70: aload         4
      72: invokevirtual #53                 // Method java/lang/Exception.printStackTrace:()V
      75: goto          20
      78: aload_1
      79: areturn
    Exception table:
       from    to  target type
          39    65    68   Class java/lang/Exception

  public default void execute(freemarker.core.Environment, java.util.Map, freemarker.template.TemplateModel[], freemarker.template.TemplateDirectiveBody) throws freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #56                 // InterfaceMethod formatMapParams:(Ljava/util/Map;)Ljava/util/Map;
       5: invokeinterface #62,  2           // InterfaceMethod handle:(Ljava/util/Map;)Ljava/lang/Object;
      10: astore        5
      12: aload_1
      13: invokevirtual #66                 // Method freemarker/core/Environment.getObjectWrapper:()Lfreemarker/template/ObjectWrapper;
      16: aload         5
      18: invokeinterface #72,  2           // InterfaceMethod freemarker/template/ObjectWrapper.wrap:(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
      23: astore        6
      25: aload_1
      26: aload_0
      27: invokeinterface #78,  1           // InterfaceMethod variableName:()Ljava/lang/String;
      32: aload         6
      34: invokevirtual #82                 // Method freemarker/core/Environment.setVariable:(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
      37: aload         4
      39: aload_1
      40: invokevirtual #86                 // Method freemarker/core/Environment.getOut:()Ljava/io/Writer;
      43: invokeinterface #90,  2           // InterfaceMethod freemarker/template/TemplateDirectiveBody.render:(Ljava/io/Writer;)V
      48: return

  public abstract java.lang.String directiveName();

  public abstract java.lang.String variableName();

  public abstract java.lang.Object handle(java.util.Map<java.lang.String, java.lang.Object>);
}
