Compiled from "UpdateFilter.java"
public final class cool.scx.core.base.UpdateFilter extends cool.scx.core.base.AbstractFilter<cool.scx.core.base.UpdateFilter> {
  private final boolean excludeIfFieldValueIsNull;

  private cool.scx.core.base.UpdateFilter(cool.scx.core.base.AbstractFilter$FilterMode, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cool/scx/core/base/AbstractFilter."<init>":(Lcool/scx/core/base/AbstractFilter$FilterMode;)V
       5: aload_0
       6: iload_2
       7: putfield      #7                  // Field excludeIfFieldValueIsNull:Z
      10: return

  public static cool.scx.core.base.UpdateFilter ofIncluded();
    Code:
       0: iconst_1
       1: invokestatic  #13                 // Method ofIncluded:(Z)Lcool/scx/core/base/UpdateFilter;
       4: areturn

  public static cool.scx.core.base.UpdateFilter ofExcluded();
    Code:
       0: iconst_1
       1: invokestatic  #17                 // Method ofExcluded:(Z)Lcool/scx/core/base/UpdateFilter;
       4: areturn

  public static cool.scx.core.base.UpdateFilter ofIncluded(boolean);
    Code:
       0: new           #8                  // class cool/scx/core/base/UpdateFilter
       3: dup
       4: getstatic     #20                 // Field cool/scx/core/base/AbstractFilter$FilterMode.INCLUDED:Lcool/scx/core/base/AbstractFilter$FilterMode;
       7: iload_0
       8: invokespecial #26                 // Method "<init>":(Lcool/scx/core/base/AbstractFilter$FilterMode;Z)V
      11: areturn

  public static cool.scx.core.base.UpdateFilter ofExcluded(boolean);
    Code:
       0: new           #8                  // class cool/scx/core/base/UpdateFilter
       3: dup
       4: getstatic     #29                 // Field cool/scx/core/base/AbstractFilter$FilterMode.EXCLUDED:Lcool/scx/core/base/AbstractFilter$FilterMode;
       7: iload_0
       8: invokespecial #26                 // Method "<init>":(Lcool/scx/core/base/AbstractFilter$FilterMode;Z)V
      11: areturn

  public static cool.scx.core.base.UpdateFilter ofIncluded(java.lang.String...);
    Code:
       0: invokestatic  #32                 // Method ofIncluded:()Lcool/scx/core/base/UpdateFilter;
       3: aload_0
       4: invokevirtual #35                 // Method addIncluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       7: checkcast     #8                  // class cool/scx/core/base/UpdateFilter
      10: areturn

  public static cool.scx.core.base.UpdateFilter ofExcluded(java.lang.String...);
    Code:
       0: invokestatic  #39                 // Method ofExcluded:()Lcool/scx/core/base/UpdateFilter;
       3: aload_0
       4: invokevirtual #41                 // Method addExcluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       7: checkcast     #8                  // class cool/scx/core/base/UpdateFilter
      10: areturn

  public static cool.scx.core.base.UpdateFilter ofIncluded(boolean, java.lang.String...);
    Code:
       0: iload_0
       1: invokestatic  #13                 // Method ofIncluded:(Z)Lcool/scx/core/base/UpdateFilter;
       4: aload_1
       5: invokevirtual #35                 // Method addIncluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       8: checkcast     #8                  // class cool/scx/core/base/UpdateFilter
      11: areturn

  public static cool.scx.core.base.UpdateFilter ofExcluded(boolean, java.lang.String...);
    Code:
       0: iload_0
       1: invokestatic  #17                 // Method ofExcluded:(Z)Lcool/scx/core/base/UpdateFilter;
       4: aload_1
       5: invokevirtual #41                 // Method addExcluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       8: checkcast     #8                  // class cool/scx/core/base/UpdateFilter
      11: areturn

  public cool.scx.core.dao.ScxDaoColumnInfo[] filter(java.lang.Object, cool.scx.core.dao.ScxDaoColumnInfo...);
    Code:
       0: aload_0
       1: getfield      #7                  // Field excludeIfFieldValueIsNull:Z
       4: ifeq          20
       7: aload_0
       8: aload_1
       9: aload_0
      10: aload_2
      11: invokevirtual #44                 // Method filter:([Lcool/scx/core/dao/ScxDaoColumnInfo;)[Lcool/scx/core/dao/ScxDaoColumnInfo;
      14: invokevirtual #48                 // Method excludeIfFieldValueIsNull:(Ljava/lang/Object;[Lcool/scx/core/dao/ScxDaoColumnInfo;)[Lcool/scx/core/dao/ScxDaoColumnInfo;
      17: goto          25
      20: aload_0
      21: aload_2
      22: invokevirtual #44                 // Method filter:([Lcool/scx/core/dao/ScxDaoColumnInfo;)[Lcool/scx/core/dao/ScxDaoColumnInfo;
      25: areturn

  private cool.scx.core.dao.ScxDaoColumnInfo[] excludeIfFieldValueIsNull(java.lang.Object, cool.scx.core.dao.ScxDaoColumnInfo...);
    Code:
       0: aload_2
       1: invokestatic  #51                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: aload_1
       5: invokedynamic #57,  0             // InvokeDynamic #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      10: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      15: invokedynamic #66,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      20: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      25: checkcast     #74                 // class "[Lcool/scx/core/dao/ScxDaoColumnInfo;"
      28: areturn

  private static cool.scx.core.dao.ScxDaoColumnInfo[] lambda$excludeIfFieldValueIsNull$1(int);
    Code:
       0: iload_0
       1: anewarray     #76                 // class cool/scx/core/dao/ScxDaoColumnInfo
       4: areturn

  private static boolean lambda$excludeIfFieldValueIsNull$0(java.lang.Object, cool.scx.core.dao.ScxDaoColumnInfo);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #78                 // Method cool/scx/core/dao/ScxDaoColumnInfo.getFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
}
