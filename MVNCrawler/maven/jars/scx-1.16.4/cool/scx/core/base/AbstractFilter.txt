Compiled from "AbstractFilter.java"
public abstract class cool.scx.core.base.AbstractFilter<E extends cool.scx.core.base.AbstractFilter<E>> {
  private final java.util.Set<java.lang.String> fieldNames;

  private final cool.scx.core.base.AbstractFilter$FilterMode filterMode;

  protected cool.scx.core.base.AbstractFilter(cool.scx.core.base.AbstractFilter$FilterMode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashSet
       8: dup
       9: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      12: putfield      #10                 // Field fieldNames:Ljava/util/Set;
      15: aload_0
      16: aload_1
      17: putfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
      20: return

  private E _addFieldNames(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNames:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #26,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: invokevirtual #32                 // Method self:()Lcool/scx/core/base/AbstractFilter;
      18: areturn

  private E _removeFieldNames(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #10                 // Field fieldNames:Ljava/util/Set;
      24: aload         5
      26: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      31: pop
      32: iinc          4, 1
      35: goto          8
      38: aload_0
      39: invokevirtual #32                 // Method self:()Lcool/scx/core/base/AbstractFilter;
      42: areturn

  public final E addIncluded(java.lang.String...);
    Code:
       0: getstatic     #40                 // Field cool/scx/core/base/AbstractFilter$1.$SwitchMap$cool$scx$core$base$AbstractFilter$FilterMode:[I
       3: aload_0
       4: getfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
       7: invokevirtual #46                 // Method cool/scx/core/base/AbstractFilter$FilterMode.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 44
                     2: 52
               default: 36
          }
      36: new           #52                 // class java/lang/IncompatibleClassChangeError
      39: dup
      40: invokespecial #54                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      43: athrow
      44: aload_0
      45: aload_1
      46: invokevirtual #55                 // Method _addFieldNames:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
      49: goto          57
      52: aload_0
      53: aload_1
      54: invokevirtual #59                 // Method _removeFieldNames:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
      57: areturn

  public final E addExcluded(java.lang.String...);
    Code:
       0: getstatic     #40                 // Field cool/scx/core/base/AbstractFilter$1.$SwitchMap$cool$scx$core$base$AbstractFilter$FilterMode:[I
       3: aload_0
       4: getfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
       7: invokevirtual #46                 // Method cool/scx/core/base/AbstractFilter$FilterMode.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 52
                     2: 44
               default: 36
          }
      36: new           #52                 // class java/lang/IncompatibleClassChangeError
      39: dup
      40: invokespecial #54                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      43: athrow
      44: aload_0
      45: aload_1
      46: invokevirtual #55                 // Method _addFieldNames:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
      49: goto          57
      52: aload_0
      53: aload_1
      54: invokevirtual #59                 // Method _removeFieldNames:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
      57: areturn

  public final E removeIncluded(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method addExcluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       5: areturn

  public final E removeExcluded(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #65                 // Method addIncluded:([Ljava/lang/String;)Lcool/scx/core/base/AbstractFilter;
       5: areturn

  public final E clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNames:Ljava/util/Set;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: invokevirtual #32                 // Method self:()Lcool/scx/core/base/AbstractFilter;
      13: areturn

  public final cool.scx.core.dao.ScxDaoColumnInfo[] filter(cool.scx.core.dao.ScxDaoColumnInfo...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNames:Ljava/util/Set;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/Set.size:()I
       9: ifne          67
      12: getstatic     #40                 // Field cool/scx/core/base/AbstractFilter$1.$SwitchMap$cool$scx$core$base$AbstractFilter$FilterMode:[I
      15: aload_0
      16: getfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
      19: invokevirtual #46                 // Method cool/scx/core/base/AbstractFilter$FilterMode.ordinal:()I
      22: iaload
      23: lookupswitch  { // 2
                     1: 56
                     2: 63
               default: 48
          }
      48: new           #52                 // class java/lang/IncompatibleClassChangeError
      51: dup
      52: invokespecial #54                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
      55: athrow
      56: iconst_0
      57: anewarray     #74                 // class cool/scx/core/dao/ScxDaoColumnInfo
      60: goto          171
      63: aload_1
      64: goto          171
      67: getstatic     #40                 // Field cool/scx/core/base/AbstractFilter$1.$SwitchMap$cool$scx$core$base$AbstractFilter$FilterMode:[I
      70: aload_0
      71: getfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
      74: invokevirtual #46                 // Method cool/scx/core/base/AbstractFilter$FilterMode.ordinal:()I
      77: iaload
      78: lookupswitch  { // 2
                     1: 112
                     2: 143
               default: 104
          }
     104: new           #52                 // class java/lang/IncompatibleClassChangeError
     107: dup
     108: invokespecial #54                 // Method java/lang/IncompatibleClassChangeError."<init>":()V
     111: athrow
     112: aload_1
     113: invokestatic  #76                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     116: aload_0
     117: invokedynamic #80,  0             // InvokeDynamic #0:test:(Lcool/scx/core/base/AbstractFilter;)Ljava/util/function/Predicate;
     122: invokeinterface #84,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     127: invokedynamic #90,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
     132: invokeinterface #94,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     137: checkcast     #98                 // class "[Lcool/scx/core/dao/ScxDaoColumnInfo;"
     140: goto          171
     143: aload_1
     144: invokestatic  #76                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     147: aload_0
     148: invokedynamic #100,  0            // InvokeDynamic #2:test:(Lcool/scx/core/base/AbstractFilter;)Ljava/util/function/Predicate;
     153: invokeinterface #84,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     158: invokedynamic #101,  0            // InvokeDynamic #3:apply:()Ljava/util/function/IntFunction;
     163: invokeinterface #94,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     168: checkcast     #98                 // class "[Lcool/scx/core/dao/ScxDaoColumnInfo;"
     171: areturn

  public cool.scx.core.base.AbstractFilter$FilterMode filterMode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field filterMode:Lcool/scx/core/base/AbstractFilter$FilterMode;
       4: areturn

  private E self();
    Code:
       0: aload_0
       1: areturn

  private static cool.scx.core.dao.ScxDaoColumnInfo[] lambda$filter$3(int);
    Code:
       0: iload_0
       1: anewarray     #74                 // class cool/scx/core/dao/ScxDaoColumnInfo
       4: areturn

  private boolean lambda$filter$2(cool.scx.core.dao.ScxDaoColumnInfo);
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNames:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #102                // Method cool/scx/core/dao/ScxDaoColumnInfo.fieldName:()Ljava/lang/String;
       8: invokeinterface #106,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static cool.scx.core.dao.ScxDaoColumnInfo[] lambda$filter$1(int);
    Code:
       0: iload_0
       1: anewarray     #74                 // class cool/scx/core/dao/ScxDaoColumnInfo
       4: areturn

  private boolean lambda$filter$0(cool.scx.core.dao.ScxDaoColumnInfo);
    Code:
       0: aload_0
       1: getfield      #10                 // Field fieldNames:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #102                // Method cool/scx/core/dao/ScxDaoColumnInfo.fieldName:()Ljava/lang/String;
       8: invokeinterface #106,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn
}
