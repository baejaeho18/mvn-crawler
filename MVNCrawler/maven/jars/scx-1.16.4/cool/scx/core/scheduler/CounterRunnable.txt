Compiled from "CounterRunnable.java"
class cool.scx.core.scheduler.CounterRunnable implements java.lang.Runnable {
  final java.util.concurrent.atomic.AtomicLong runCount;

  final cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus> scxHandler;

  java.util.concurrent.ScheduledFuture<?> scheduledFuture;

  public cool.scx.core.scheduler.CounterRunnable(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_1
      10: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #12                 // Field runCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: aconst_null
      18: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      21: aload_0
      22: aload_1
      23: putfield      #22                 // Field scxHandler:Lcool/scx/functional/ScxHandlerA;
      26: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #22                 // Field scxHandler:Lcool/scx/functional/ScxHandlerA;
       4: new           #26                 // class cool/scx/core/scheduler/ScheduleStatus
       7: dup
       8: aload_0
       9: getfield      #12                 // Field runCount:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      15: aload_0
      16: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      19: invokespecial #32                 // Method cool/scx/core/scheduler/ScheduleStatus."<init>":(JLjava/util/concurrent/ScheduledFuture;)V
      22: invokeinterface #35,  2           // InterfaceMethod cool/scx/functional/ScxHandlerA.handle:(Ljava/lang/Object;)V
      27: return

  public java.util.concurrent.ScheduledFuture<?> schedule(org.springframework.scheduling.TaskScheduler, org.springframework.scheduling.Trigger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokeinterface #41,  3           // InterfaceMethod org/springframework/scheduling/TaskScheduler.schedule:(Ljava/lang/Runnable;Lorg/springframework/scheduling/Trigger;)Ljava/util/concurrent/ScheduledFuture;
       9: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      12: aload_0
      13: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      16: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(org.springframework.scheduling.TaskScheduler, java.time.Instant, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload_3
       5: invokeinterface #47,  4           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      10: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      13: aload_0
      14: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(org.springframework.scheduling.TaskScheduler, java.time.Instant, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: aload_3
       5: invokeinterface #51,  4           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      10: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      13: aload_0
      14: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(org.springframework.scheduling.TaskScheduler, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokeinterface #54,  3           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
       9: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      12: aload_0
      13: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      16: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(org.springframework.scheduling.TaskScheduler, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokeinterface #57,  3           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleAtFixedRate:(Ljava/lang/Runnable;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
       9: putfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      12: aload_0
      13: getfield      #18                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      16: areturn
}
