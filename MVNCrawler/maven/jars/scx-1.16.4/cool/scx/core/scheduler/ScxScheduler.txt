Compiled from "ScxScheduler.java"
public final class cool.scx.core.scheduler.ScxScheduler {
  private final java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  private final org.springframework.scheduling.TaskScheduler taskScheduler;

  public cool.scx.core.scheduler.ScxScheduler(io.netty.channel.EventLoopGroup);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       9: aload_0
      10: new           #13                 // class org/springframework/scheduling/concurrent/ConcurrentTaskScheduler
      13: dup
      14: aload_0
      15: getfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      18: invokespecial #15                 // Method org/springframework/scheduling/concurrent/ConcurrentTaskScheduler."<init>":(Ljava/util/concurrent/ScheduledExecutorService;)V
      21: putfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      24: return

  public <R> java.util.concurrent.Future<R> submit(cool.scx.functional.ScxHandlerR<R>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: dup
       6: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #28,  0             // InvokeDynamic #0:call:(Lcool/scx/functional/ScxHandlerR;)Ljava/util/concurrent/Callable;
      15: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      20: areturn

  public java.util.concurrent.Future<?> submit(cool.scx.functional.ScxHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: dup
       6: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #38,  0             // InvokeDynamic #1:run:(Lcool/scx/functional/ScxHandler;)Ljava/lang/Runnable;
      15: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      20: areturn

  public <R> java.util.concurrent.ScheduledFuture<R> schedule(cool.scx.functional.ScxHandlerR<R>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: dup
       6: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #28,  0             // InvokeDynamic #0:call:(Lcool/scx/functional/ScxHandlerR;)Ljava/util/concurrent/Callable;
      15: lload_2
      16: aload         4
      18: invokeinterface #45,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      23: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(cool.scx.functional.ScxHandler, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_1
       5: dup
       6: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #38,  0             // InvokeDynamic #1:run:(Lcool/scx/functional/ScxHandler;)Ljava/lang/Runnable;
      15: lload_2
      16: aload         4
      18: invokeinterface #49,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      23: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, org.springframework.scheduling.Trigger);
    Code:
       0: new           #52                 // class cool/scx/core/scheduler/CounterRunnable
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       8: aload_0
       9: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      12: aload_2
      13: invokevirtual #57                 // Method cool/scx/core/scheduler/CounterRunnable.schedule:(Lorg/springframework/scheduling/TaskScheduler;Lorg/springframework/scheduling/Trigger;)Ljava/util/concurrent/ScheduledFuture;
      16: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Instant, java.time.Duration);
    Code:
       0: new           #52                 // class cool/scx/core/scheduler/CounterRunnable
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       8: aload_0
       9: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      12: aload_2
      13: aload_3
      14: invokevirtual #60                 // Method cool/scx/core/scheduler/CounterRunnable.scheduleWithFixedDelay:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Instant, java.time.Duration);
    Code:
       0: new           #52                 // class cool/scx/core/scheduler/CounterRunnable
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       8: aload_0
       9: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      12: aload_2
      13: aload_3
      14: invokevirtual #64                 // Method cool/scx/core/scheduler/CounterRunnable.scheduleAtFixedRate:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Instant, java.time.Duration, long);
    Code:
       0: new           #67                 // class cool/scx/core/scheduler/FixedRunCountRunnable
       3: dup
       4: aload_1
       5: lload         4
       7: invokespecial #69                 // Method cool/scx/core/scheduler/FixedRunCountRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;J)V
      10: aload_0
      11: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      14: aload_2
      15: aload_3
      16: invokevirtual #72                 // Method cool/scx/core/scheduler/FixedRunCountRunnable.scheduleWithFixedDelay:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      19: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Instant, java.time.Duration, long);
    Code:
       0: new           #67                 // class cool/scx/core/scheduler/FixedRunCountRunnable
       3: dup
       4: aload_1
       5: lload         4
       7: invokespecial #69                 // Method cool/scx/core/scheduler/FixedRunCountRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;J)V
      10: aload_0
      11: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      14: aload_2
      15: aload_3
      16: invokevirtual #73                 // Method cool/scx/core/scheduler/FixedRunCountRunnable.scheduleAtFixedRate:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Instant;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      19: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Duration);
    Code:
       0: new           #52                 // class cool/scx/core/scheduler/CounterRunnable
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       8: aload_0
       9: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      12: aload_2
      13: invokevirtual #74                 // Method cool/scx/core/scheduler/CounterRunnable.scheduleWithFixedDelay:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      16: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Duration);
    Code:
       0: new           #52                 // class cool/scx/core/scheduler/CounterRunnable
       3: dup
       4: aload_1
       5: invokespecial #54                 // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       8: aload_0
       9: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      12: aload_2
      13: invokevirtual #77                 // Method cool/scx/core/scheduler/CounterRunnable.scheduleAtFixedRate:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      16: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Duration, long);
    Code:
       0: new           #67                 // class cool/scx/core/scheduler/FixedRunCountRunnable
       3: dup
       4: aload_1
       5: lload_3
       6: invokespecial #69                 // Method cool/scx/core/scheduler/FixedRunCountRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;J)V
       9: aload_0
      10: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      13: aload_2
      14: invokevirtual #79                 // Method cool/scx/core/scheduler/FixedRunCountRunnable.scheduleWithFixedDelay:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, java.time.Duration, long);
    Code:
       0: new           #67                 // class cool/scx/core/scheduler/FixedRunCountRunnable
       3: dup
       4: aload_1
       5: lload_3
       6: invokespecial #69                 // Method cool/scx/core/scheduler/FixedRunCountRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;J)V
       9: aload_0
      10: getfield      #18                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      13: aload_2
      14: invokevirtual #80                 // Method cool/scx/core/scheduler/FixedRunCountRunnable.scheduleAtFixedRate:(Lorg/springframework/scheduling/TaskScheduler;Ljava/time/Duration;)Ljava/util/concurrent/ScheduledFuture;
      17: areturn
}
