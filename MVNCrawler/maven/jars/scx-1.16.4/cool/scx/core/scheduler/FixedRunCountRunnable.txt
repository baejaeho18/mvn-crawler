Compiled from "FixedRunCountRunnable.java"
final class cool.scx.core.scheduler.FixedRunCountRunnable extends cool.scx.core.scheduler.CounterRunnable {
  private final long maxRunCount;

  public cool.scx.core.scheduler.FixedRunCountRunnable(cool.scx.functional.ScxHandlerA<cool.scx.core.scheduler.ScheduleStatus>, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cool/scx/core/scheduler/CounterRunnable."<init>":(Lcool/scx/functional/ScxHandlerA;)V
       5: aload_0
       6: lload_2
       7: putfield      #7                  // Field maxRunCount:J
      10: return

  public void run();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method cool/scx/core/scheduler/CounterRunnable.run:()V
       4: aload_0
       5: getfield      #17                 // Field runCount:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      11: aload_0
      12: getfield      #7                  // Field maxRunCount:J
      15: lcmp
      16: ifle          30
      19: aload_0
      20: getfield      #27                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      23: iconst_0
      24: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      29: pop
      30: return
}
