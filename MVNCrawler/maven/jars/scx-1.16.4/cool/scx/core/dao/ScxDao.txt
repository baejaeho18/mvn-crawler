Compiled from "ScxDao.java"
public final class cool.scx.core.dao.ScxDao {
  private static final org.slf4j.Logger logger;

  private final javax.sql.DataSource dataSource;

  private final cool.scx.sql.SQLRunner sqlRunner;

  public cool.scx.core.dao.ScxDao(cool.scx.core.ScxCoreConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #7                  // Method getMySQLDataSource:(Lcool/scx/core/ScxCoreConfig;)Lcom/mysql/cj/jdbc/MysqlDataSource;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokestatic  #13                 // Method getHikariDataSource:(Lcom/mysql/cj/jdbc/MysqlDataSource;)Ljavax/sql/DataSource;
      14: putfield      #17                 // Field dataSource:Ljavax/sql/DataSource;
      17: aload_0
      18: new           #21                 // class cool/scx/sql/SQLRunner
      21: dup
      22: aload_0
      23: getfield      #17                 // Field dataSource:Ljavax/sql/DataSource;
      26: invokespecial #23                 // Method cool/scx/sql/SQLRunner."<init>":(Ljavax/sql/DataSource;)V
      29: putfield      #26                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
      32: return

  private static javax.sql.DataSource getHikariDataSource(com.mysql.cj.jdbc.MysqlDataSource);
    Code:
       0: new           #30                 // class com/zaxxer/hikari/HikariDataSource
       3: dup
       4: invokespecial #32                 // Method com/zaxxer/hikari/HikariDataSource."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #33                 // Method com/zaxxer/hikari/HikariDataSource.setDataSource:(Ljavax/sql/DataSource;)V
      13: aload_1
      14: areturn

  private static com.mysql.cj.jdbc.MysqlDataSource getMySQLDataSource(cool.scx.core.ScxCoreConfig);
    Code:
       0: new           #36                 // class com/mysql/cj/jdbc/MysqlDataSource
       3: dup
       4: invokespecial #38                 // Method com/mysql/cj/jdbc/MysqlDataSource."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #39                 // Method cool/scx/core/ScxCoreConfig.dataSourceHost:()Ljava/lang/String;
      13: invokevirtual #45                 // Method com/mysql/cj/jdbc/MysqlDataSource.setServerName:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #49                 // Method cool/scx/core/ScxCoreConfig.dataSourceDatabase:()Ljava/lang/String;
      21: invokevirtual #52                 // Method com/mysql/cj/jdbc/MysqlDataSource.setDatabaseName:(Ljava/lang/String;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #55                 // Method cool/scx/core/ScxCoreConfig.dataSourceUsername:()Ljava/lang/String;
      29: invokevirtual #58                 // Method com/mysql/cj/jdbc/MysqlDataSource.setUser:(Ljava/lang/String;)V
      32: aload_1
      33: aload_0
      34: invokevirtual #61                 // Method cool/scx/core/ScxCoreConfig.dataSourcePassword:()Ljava/lang/String;
      37: invokevirtual #64                 // Method com/mysql/cj/jdbc/MysqlDataSource.setPassword:(Ljava/lang/String;)V
      40: aload_1
      41: aload_0
      42: invokevirtual #67                 // Method cool/scx/core/ScxCoreConfig.dataSourcePort:()I
      45: invokevirtual #71                 // Method com/mysql/cj/jdbc/MysqlDataSource.setPort:(I)V
      48: aload_0
      49: invokevirtual #75                 // Method cool/scx/core/ScxCoreConfig.dataSourceParameters:()Ljava/util/Set;
      52: invokeinterface #79,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore_2
      58: aload_2
      59: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          129
      67: aload_2
      68: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #95                 // class java/lang/String
      76: astore_3
      77: aload_3
      78: ldc           #97                 // String =
      80: invokevirtual #99                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      83: astore        4
      85: aload         4
      87: arraylength
      88: iconst_2
      89: if_icmpne     126
      92: aload_1
      93: aload         4
      95: iconst_0
      96: aaload
      97: invokevirtual #103                // Method com/mysql/cj/jdbc/MysqlDataSource.getProperty:(Ljava/lang/String;)Lcom/mysql/cj/conf/RuntimeProperty;
     100: astore        5
     102: aload         5
     104: aload         5
     106: invokeinterface #107,  1          // InterfaceMethod com/mysql/cj/conf/RuntimeProperty.getPropertyDefinition:()Lcom/mysql/cj/conf/PropertyDefinition;
     111: aload         4
     113: iconst_1
     114: aaload
     115: aconst_null
     116: invokeinterface #113,  3          // InterfaceMethod com/mysql/cj/conf/PropertyDefinition.parseObject:(Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/lang/Object;
     121: invokeinterface #119,  2          // InterfaceMethod com/mysql/cj/conf/RuntimeProperty.setValue:(Ljava/lang/Object;)V
     126: goto          58
     129: aload_1
     130: areturn

  public static void dataSourceExceptionHandler(java.lang.Exception);
    Code:
       0: ldc           #123                // String **************************************************************\n*                                                            *\n*           X 数据源连接失败 !!! 是否忽略错误并继续运行 ?            *\n*                                                            *\n*        [Y] 忽略错误并继续运行    |     [N] 退出程序              *\n*                                                            *\n**************************************************************\n
       2: astore_1
       3: getstatic     #125                // Field java/lang/System.err:Ljava/io/PrintStream;
       6: aload_1
       7: invokevirtual #131                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      10: invokestatic  #136                // Method cool/scx/util/ConsoleUtils.readLine:()Ljava/lang/String;
      13: invokevirtual #141                // Method java/lang/String.trim:()Ljava/lang/String;
      16: astore_2
      17: ldc           #144                // String Y
      19: aload_2
      20: invokevirtual #146                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      23: ifeq          39
      26: ldc           #150                // String *******************************************\n*                                         *\n*       N 数据源链接错误,用户已忽略 !!!         *\n*                                         *\n*******************************************\n
      28: astore_3
      29: getstatic     #125                // Field java/lang/System.err:Ljava/io/PrintStream;
      32: aload_3
      33: invokevirtual #131                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      36: goto          62
      39: ldc           #152                // String N
      41: aload_2
      42: invokevirtual #146                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      45: ifeq          59
      48: aload_0
      49: invokevirtual #154                // Method java/lang/Exception.printStackTrace:()V
      52: iconst_m1
      53: invokestatic  #159                // Method java/lang/System.exit:(I)V
      56: goto          62
      59: goto          0
      62: return

  public boolean checkDataSource();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method dataSource:()Ljavax/sql/DataSource;
       4: invokeinterface #165,  1          // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: astore_1
      10: aload_1
      11: invokeinterface #171,  1          // InterfaceMethod java/sql/Connection.getMetaData:()Ljava/sql/DatabaseMetaData;
      16: astore_2
      17: getstatic     #177                // Field logger:Lorg/slf4j/Logger;
      20: ldc           #181                // String 数据源连接成功 : 类型 [{}]  版本 [{}]
      22: aload_2
      23: invokeinterface #183,  1          // InterfaceMethod java/sql/DatabaseMetaData.getDatabaseProductName:()Ljava/lang/String;
      28: aload_2
      29: invokeinterface #188,  1          // InterfaceMethod java/sql/DatabaseMetaData.getDatabaseProductVersion:()Ljava/lang/String;
      34: invokeinterface #191,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      39: iconst_1
      40: istore_3
      41: aload_1
      42: ifnull        51
      45: aload_1
      46: invokeinterface #197,  1          // InterfaceMethod java/sql/Connection.close:()V
      51: iload_3
      52: ireturn
      53: astore_2
      54: aload_1
      55: ifnull        73
      58: aload_1
      59: invokeinterface #197,  1          // InterfaceMethod java/sql/Connection.close:()V
      64: goto          73
      67: astore_3
      68: aload_2
      69: aload_3
      70: invokevirtual #202                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      73: aload_2
      74: athrow
      75: astore_1
      76: aload_1
      77: invokestatic  #206                // Method dataSourceExceptionHandler:(Ljava/lang/Exception;)V
      80: iconst_0
      81: ireturn
    Exception table:
       from    to  target type
          10    41    53   Class java/lang/Throwable
          58    64    67   Class java/lang/Throwable
           0    51    75   Class java/lang/Exception
          53    75    75   Class java/lang/Exception

  public javax.sql.DataSource dataSource();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public cool.scx.sql.SQLRunner sqlRunner();
    Code:
       0: aload_0
       1: getfield      #26                 // Field sqlRunner:Lcool/scx/sql/SQLRunner;
       4: areturn

  static {};
    Code:
       0: ldc           #8                  // class cool/scx/core/dao/ScxDao
       2: invokestatic  #210                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #177                // Field logger:Lorg/slf4j/Logger;
       8: return
}
