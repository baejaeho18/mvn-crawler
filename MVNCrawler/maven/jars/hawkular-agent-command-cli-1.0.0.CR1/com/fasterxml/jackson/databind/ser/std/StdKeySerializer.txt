Compiled from "StdKeySerializer.java"
public class com.fasterxml.jackson.databind.ser.std.StdKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {
  public com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       7: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        5
       6: aload         5
       8: ldc_w         #4                  // class java/lang/String
      11: if_acmpne     23
      14: aload_1
      15: checkcast     #4                  // class java/lang/String
      18: astore        4
      20: goto          70
      23: ldc_w         #5                  // class java/util/Date
      26: aload         5
      28: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      31: ifeq          44
      34: aload_3
      35: aload_1
      36: checkcast     #5                  // class java/util/Date
      39: aload_2
      40: invokevirtual #7                  // Method com/fasterxml/jackson/databind/SerializerProvider.defaultSerializeDateKey:(Ljava/util/Date;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      43: return
      44: aload         5
      46: ldc_w         #8                  // class java/lang/Class
      49: if_acmpne     64
      52: aload_1
      53: checkcast     #8                  // class java/lang/Class
      56: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      59: astore        4
      61: goto          70
      64: aload_1
      65: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
      68: astore        4
      70: aload_2
      71: aload         4
      73: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      76: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: ldc           #12                 // String string
       3: invokevirtual #13                 // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       6: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #14,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectStringFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonStringFormatVisitor;
       7: pop
       8: return
}
