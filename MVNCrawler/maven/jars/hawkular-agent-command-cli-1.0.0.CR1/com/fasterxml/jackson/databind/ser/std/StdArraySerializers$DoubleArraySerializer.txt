Compiled from "StdArraySerializers.java"
public class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer extends com.fasterxml.jackson.databind.ser.std.ArraySerializerBase<double[]> {
  private static final com.fasterxml.jackson.databind.JavaType VALUE_TYPE;

  public com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class "[D"
       4: aconst_null
       5: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/ArraySerializerBase."<init>":(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/BeanProperty;)V
       8: return

  public com.fasterxml.jackson.databind.ser.ContainerSerializer<?> _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.databind.JavaType getContentType();
    Code:
       0: getstatic     #3                  // Field VALUE_TYPE:Lcom/fasterxml/jackson/databind/JavaType;
       3: areturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> getContentSerializer();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, double[]);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean hasSingleElement(double[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public final void serialize(double[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: arraylength
       2: istore        4
       4: iload         4
       6: iconst_1
       7: if_icmpne     28
      10: aload_3
      11: getstatic     #4                  // Field com/fasterxml/jackson/databind/SerializationFeature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED:Lcom/fasterxml/jackson/databind/SerializationFeature;
      14: invokevirtual #5                  // Method com/fasterxml/jackson/databind/SerializerProvider.isEnabled:(Lcom/fasterxml/jackson/databind/SerializationFeature;)Z
      17: ifeq          28
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokevirtual #6                  // Method serializeContents:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      27: return
      28: aload_2
      29: iload         4
      31: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload_3
      38: invokevirtual #6                  // Method serializeContents:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      41: aload_2
      42: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
      45: return

  public void serializeContents(double[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_1
       4: arraylength
       5: istore        5
       7: iload         4
       9: iload         5
      11: if_icmpge     28
      14: aload_2
      15: aload_1
      16: iload         4
      18: daload
      19: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      22: iinc          4, 1
      25: goto          7
      28: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #10                 // String array
       3: iconst_1
       4: invokevirtual #11                 // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: ldc           #12                 // String items
       9: aload_0
      10: ldc           #13                 // String number
      12: invokevirtual #14                 // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      15: invokevirtual #15                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      18: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectArrayFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor;
      11: astore_3
      12: aload_3
      13: ifnull        25
      16: aload_3
      17: getstatic     #17                 // Field com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.NUMBER:Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;
      20: invokeinterface #18,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor.itemsFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;)V
      25: return

  public void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[D"
       5: aload_2
       6: aload_3
       7: invokevirtual #6                  // Method serializeContents:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[D"
       5: aload_2
       6: aload_3
       7: invokevirtual #19                 // Method serialize:([DLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  public boolean hasSingleElement(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class "[D"
       5: invokevirtual #20                 // Method hasSingleElement:([D)Z
       8: ireturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #1                  // class "[D"
       6: invokevirtual #21                 // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[D)Z
       9: ireturn

  static {};
    Code:
       0: invokestatic  #22                 // Method com/fasterxml/jackson/databind/type/TypeFactory.defaultInstance:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       3: getstatic     #23                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
       6: invokevirtual #24                 // Method com/fasterxml/jackson/databind/type/TypeFactory.uncheckedSimpleType:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JavaType;
       9: putstatic     #3                  // Field VALUE_TYPE:Lcom/fasterxml/jackson/databind/JavaType;
      12: return
}
