Compiled from "StaticListSerializerBase.java"
public abstract class com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase<T extends java.util.Collection<?>> extends com.fasterxml.jackson.databind.ser.std.StdSerializer<T> {
  protected com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;Z)V
       6: return

  public boolean isEmpty(T);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #2                  // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/Collection;)Z
       6: ireturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, T);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: invokeinterface #3,  1            // InterfaceMethod java/util/Collection.size:()I
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #4                  // String array
       3: iconst_1
       4: invokevirtual #5                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: ldc           #6                  // String items
       9: aload_0
      10: invokevirtual #7                  // Method contentSchema:()Lcom/fasterxml/jackson/databind/JsonNode;
      13: invokevirtual #8                  // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      16: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #9,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectArrayFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor;
       8: invokevirtual #10                 // Method acceptContentVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor;)V
      11: return

  protected abstract com.fasterxml.jackson.databind.JsonNode contentSchema();

  protected abstract void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) throws com.fasterxml.jackson.databind.JsonMappingException;

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class java/util/Collection
       6: invokevirtual #2                  // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/Collection;)Z
       9: ireturn

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/util/Collection
       5: invokevirtual #12                 // Method isEmpty:(Ljava/util/Collection;)Z
       8: ireturn
}
