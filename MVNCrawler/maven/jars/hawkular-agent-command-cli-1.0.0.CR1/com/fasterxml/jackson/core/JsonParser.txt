Compiled from "JsonParser.java"
public abstract class com.fasterxml.jackson.core.JsonParser implements java.io.Closeable,com.fasterxml.jackson.core.Versioned {
  private static final int MIN_BYTE_I;

  private static final int MAX_BYTE_I;

  private static final int MIN_SHORT_I;

  private static final int MAX_SHORT_I;

  protected int _features;

  protected com.fasterxml.jackson.core.JsonParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected com.fasterxml.jackson.core.JsonParser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _features:I
       9: return

  public abstract com.fasterxml.jackson.core.ObjectCodec getCodec();

  public abstract void setCodec(com.fasterxml.jackson.core.ObjectCodec);

  public java.lang.Object getInputSource();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getCurrentValue();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getParsingContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;
      17: areturn

  public void setCurrentValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getParsingContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_2
      10: aload_1
      11: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V
      14: return

  public void setSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #9                  // String Parser of type
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #13                 // String  does not support schema of type \'
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokeinterface #14,  1           // InterfaceMethod com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #15                 // String \'
      42: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow

  public com.fasterxml.jackson.core.FormatSchema getSchema();
    Code:
       0: aconst_null
       1: areturn

  public boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: iconst_0
       1: ireturn

  public boolean requiresCustomCodec();
    Code:
       0: iconst_0
       1: ireturn

  public abstract com.fasterxml.jackson.core.Version version();

  public abstract void close() throws java.io.IOException;

  public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: ireturn

  public int releaseBuffered(java.io.Writer) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: ireturn

  public com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I
       9: ior
      10: putfield      #2                  // Field _features:I
      13: aload_0
      14: areturn

  public com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I
       9: iconst_m1
      10: ixor
      11: iand
      12: putfield      #2                  // Field _features:I
      15: aload_0
      16: areturn

  public com.fasterxml.jackson.core.JsonParser configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean);
    Code:
       0: iload_2
       1: ifeq          13
       4: aload_0
       5: aload_1
       6: invokevirtual #19                 // Method enable:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Lcom/fasterxml/jackson/core/JsonParser;
       9: pop
      10: goto          19
      13: aload_0
      14: aload_1
      15: invokevirtual #20                 // Method disable:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Lcom/fasterxml/jackson/core/JsonParser;
      18: pop
      19: aload_0
      20: areturn

  public boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field _features:I
       5: invokevirtual #21                 // Method com/fasterxml/jackson/core/JsonParser$Feature.enabledIn:(I)Z
       8: ireturn

  public int getFeatureMask();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _features:I
       4: ireturn

  public com.fasterxml.jackson.core.JsonParser setFeatureMask(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field _features:I
       5: aload_0
       6: areturn

  public abstract com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;

  public abstract com.fasterxml.jackson.core.JsonToken nextValue() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;

  public boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #23                 // Field com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     30
      10: aload_1
      11: invokeinterface #24,  1           // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #25                 // Method getCurrentName:()Ljava/lang/String;
      20: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.lang.String nextFieldName() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #23                 // Field com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #25                 // Method getCurrentName:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public java.lang.String nextTextValue() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #27                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #28                 // Method getText:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public int nextIntValue(int) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #29                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #30                 // Method getIntValue:()I
      14: goto          18
      17: iload_1
      18: ireturn

  public long nextLongValue(long) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #29                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #31                 // Method getLongValue:()J
      14: goto          18
      17: lload_1
      18: lreturn

  public java.lang.Boolean nextBooleanValue() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #32                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;
       9: if_acmpne     16
      12: getstatic     #33                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      15: areturn
      16: aload_1
      17: getstatic     #34                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;
      20: if_acmpne     27
      23: getstatic     #35                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      26: areturn
      27: aconst_null
      28: areturn

  public abstract com.fasterxml.jackson.core.JsonParser skipChildren() throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;

  public abstract boolean isClosed();

  public abstract com.fasterxml.jackson.core.JsonToken getCurrentToken();

  public abstract int getCurrentTokenId();

  public abstract boolean hasCurrentToken();

  public abstract boolean hasTokenId(int);

  public abstract java.lang.String getCurrentName() throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonStreamContext getParsingContext();

  public abstract com.fasterxml.jackson.core.JsonLocation getTokenLocation();

  public abstract com.fasterxml.jackson.core.JsonLocation getCurrentLocation();

  public boolean isExpectedStartArrayToken();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getCurrentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #37                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isExpectedStartObjectToken();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getCurrentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: getstatic     #38                 // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public abstract void clearCurrentToken();

  public abstract com.fasterxml.jackson.core.JsonToken getLastClearedToken();

  public abstract void overrideCurrentName(java.lang.String);

  public abstract java.lang.String getText() throws java.io.IOException;

  public abstract char[] getTextCharacters() throws java.io.IOException;

  public abstract int getTextLength() throws java.io.IOException;

  public abstract int getTextOffset() throws java.io.IOException;

  public abstract boolean hasTextCharacters();

  public abstract java.lang.Number getNumberValue() throws java.io.IOException;

  public abstract com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() throws java.io.IOException;

  public byte getByteValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getIntValue:()I
       4: istore_1
       5: iload_1
       6: bipush        -128
       8: if_icmplt     18
      11: iload_1
      12: sipush        255
      15: if_icmple     50
      18: aload_0
      19: new           #7                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #39                 // String Numeric value (
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #28                 // Method getText:()Ljava/lang/String;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #40                 // String ) out of range of Java byte
      40: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokevirtual #41                 // Method _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;
      49: athrow
      50: iload_1
      51: i2b
      52: ireturn

  public short getShortValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getIntValue:()I
       4: istore_1
       5: iload_1
       6: sipush        -32768
       9: if_icmplt     19
      12: iload_1
      13: sipush        32767
      16: if_icmple     51
      19: aload_0
      20: new           #7                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #39                 // String Numeric value (
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #28                 // Method getText:()Ljava/lang/String;
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #42                 // String ) out of range of Java short
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokevirtual #41                 // Method _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;
      50: athrow
      51: iload_1
      52: i2s
      53: ireturn

  public abstract int getIntValue() throws java.io.IOException;

  public abstract long getLongValue() throws java.io.IOException;

  public abstract java.math.BigInteger getBigIntegerValue() throws java.io.IOException;

  public abstract float getFloatValue() throws java.io.IOException;

  public abstract double getDoubleValue() throws java.io.IOException;

  public abstract java.math.BigDecimal getDecimalValue() throws java.io.IOException;

  public boolean getBooleanValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getCurrentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #32                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;
       9: if_acmpne     14
      12: iconst_1
      13: ireturn
      14: aload_1
      15: getstatic     #34                 // Field com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;
      18: if_acmpne     23
      21: iconst_0
      22: ireturn
      23: new           #43                 // class com/fasterxml/jackson/core/JsonParseException
      26: dup
      27: new           #7                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #44                 // String Current token (
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #46                 // String ) not of boolean type
      45: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: aload_0
      52: invokevirtual #47                 // Method getCurrentLocation:()Lcom/fasterxml/jackson/core/JsonLocation;
      55: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonParseException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;)V
      58: athrow

  public abstract java.lang.Object getEmbeddedObject() throws java.io.IOException;

  public abstract byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) throws java.io.IOException;

  public byte[] getBinaryValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;
       4: invokevirtual #50                 // Method getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B
       7: areturn

  public int readBinaryValue(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;
       4: aload_1
       5: invokevirtual #51                 // Method readBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I
       8: ireturn

  public int readBinaryValue(com.fasterxml.jackson.core.Base64Variant, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method _reportUnsupportedOperation:()V
       4: iconst_0
       5: ireturn

  public int getValueAsInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #53                 // Method getValueAsInt:(I)I
       5: ireturn

  public int getValueAsInt(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ireturn

  public long getValueAsLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #54                 // Method getValueAsLong:(J)J
       5: lreturn

  public long getValueAsLong(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lreturn

  public double getValueAsDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: dconst_0
       2: invokevirtual #55                 // Method getValueAsDouble:(D)D
       5: dreturn

  public double getValueAsDouble(double) throws java.io.IOException;
    Code:
       0: dload_1
       1: dreturn

  public boolean getValueAsBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #56                 // Method getValueAsBoolean:(Z)Z
       5: ireturn

  public boolean getValueAsBoolean(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ireturn

  public java.lang.String getValueAsString() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #57                 // Method getValueAsString:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public abstract java.lang.String getValueAsString(java.lang.String) throws java.io.IOException;

  public boolean canReadObjectId();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canReadTypeId();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object getObjectId() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getTypeId() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T readValueAs(java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method _codec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_0
       5: aload_1
       6: invokevirtual #59                 // Method com/fasterxml/jackson/core/ObjectCodec.readValue:(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/Class;)Ljava/lang/Object;
       9: areturn

  public <T> T readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method _codec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_0
       5: aload_1
       6: invokevirtual #60                 // Method com/fasterxml/jackson/core/ObjectCodec.readValue:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/type/TypeReference;)Ljava/lang/Object;
       9: areturn

  public <T> java.util.Iterator<T> readValuesAs(java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method _codec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_0
       5: aload_1
       6: invokevirtual #61                 // Method com/fasterxml/jackson/core/ObjectCodec.readValues:(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/Class;)Ljava/util/Iterator;
       9: areturn

  public <T> java.util.Iterator<T> readValuesAs(com.fasterxml.jackson.core.type.TypeReference<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method _codec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_0
       5: aload_1
       6: invokevirtual #62                 // Method com/fasterxml/jackson/core/ObjectCodec.readValues:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/type/TypeReference;)Ljava/util/Iterator;
       9: areturn

  public <T extends com.fasterxml.jackson.core.TreeNode> T readValueAsTree() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method _codec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: aload_0
       5: invokevirtual #63                 // Method com/fasterxml/jackson/core/ObjectCodec.readTree:(Lcom/fasterxml/jackson/core/JsonParser;)Lcom/fasterxml/jackson/core/TreeNode;
       8: areturn

  protected com.fasterxml.jackson.core.ObjectCodec _codec();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getCodec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #65                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #66                 // String No ObjectCodec defined for parser, needed for deserialization
      15: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: areturn

  protected com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String);
    Code:
       0: new           #43                 // class com/fasterxml/jackson/core/JsonParseException
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #47                 // Method getCurrentLocation:()Lcom/fasterxml/jackson/core/JsonLocation;
       9: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonParseException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;)V
      12: areturn

  protected void _reportUnsupportedOperation();
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #68                 // String Operation not supported by parser of type
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow
}
