Compiled from "RealBufferedSource.java"
final class okio.RealBufferedSource implements okio.BufferedSource {
  public final okio.Buffer buffer;

  public final okio.Source source;

  boolean closed;

  okio.RealBufferedSource(okio.Source);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class okio/Buffer
       8: dup
       9: invokespecial #3                  // Method okio/Buffer."<init>":()V
      12: putfield      #4                  // Field buffer:Lokio/Buffer;
      15: aload_1
      16: ifnonnull     29
      19: new           #5                  // class java/lang/NullPointerException
      22: dup
      23: ldc           #6                  // String source == null
      25: invokespecial #7                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field source:Lokio/Source;
      34: return

  public okio.Buffer buffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lokio/Buffer;
       4: areturn

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String sink == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: lload_2
      15: lconst_0
      16: lcmp
      17: ifge          47
      20: new           #9                  // class java/lang/IllegalArgumentException
      23: dup
      24: new           #12                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #14                 // String byteCount < 0:
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_2
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #18                 // Field closed:Z
      51: ifeq          64
      54: new           #19                 // class java/lang/IllegalStateException
      57: dup
      58: ldc           #20                 // String closed
      60: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: getfield      #4                  // Field buffer:Lokio/Buffer;
      68: getfield      #22                 // Field okio/Buffer.size:J
      71: lconst_0
      72: lcmp
      73: ifne          107
      76: aload_0
      77: getfield      #8                  // Field source:Lokio/Source;
      80: aload_0
      81: getfield      #4                  // Field buffer:Lokio/Buffer;
      84: ldc2_w        #24                 // long 8192l
      87: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      92: lstore        4
      94: lload         4
      96: ldc2_w        #27                 // long -1l
      99: lcmp
     100: ifne          107
     103: ldc2_w        #27                 // long -1l
     106: lreturn
     107: lload_2
     108: aload_0
     109: getfield      #4                  // Field buffer:Lokio/Buffer;
     112: getfield      #22                 // Field okio/Buffer.size:J
     115: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
     118: lstore        4
     120: aload_0
     121: getfield      #4                  // Field buffer:Lokio/Buffer;
     124: aload_1
     125: lload         4
     127: invokevirtual #30                 // Method okio/Buffer.read:(Lokio/Buffer;J)J
     130: lreturn

  public boolean exhausted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field buffer:Lokio/Buffer;
      21: invokevirtual #31                 // Method okio/Buffer.exhausted:()Z
      24: ifeq          54
      27: aload_0
      28: getfield      #8                  // Field source:Lokio/Source;
      31: aload_0
      32: getfield      #4                  // Field buffer:Lokio/Buffer;
      35: ldc2_w        #24                 // long 8192l
      38: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      43: ldc2_w        #27                 // long -1l
      46: lcmp
      47: ifne          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  public void require(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #32                 // Method request:(J)Z
       5: ifne          16
       8: new           #33                 // class java/io/EOFException
      11: dup
      12: invokespecial #34                 // Method java/io/EOFException."<init>":()V
      15: athrow
      16: return

  public boolean request(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #9                  // class java/lang/IllegalArgumentException
       9: dup
      10: new           #12                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #14                 // String byteCount < 0:
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #18                 // Field closed:Z
      37: ifeq          50
      40: new           #19                 // class java/lang/IllegalStateException
      43: dup
      44: ldc           #20                 // String closed
      46: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #4                  // Field buffer:Lokio/Buffer;
      54: getfield      #22                 // Field okio/Buffer.size:J
      57: lload_1
      58: lcmp
      59: ifge          87
      62: aload_0
      63: getfield      #8                  // Field source:Lokio/Source;
      66: aload_0
      67: getfield      #4                  // Field buffer:Lokio/Buffer;
      70: ldc2_w        #24                 // long 8192l
      73: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      78: ldc2_w        #27                 // long -1l
      81: lcmp
      82: ifne          50
      85: iconst_0
      86: ireturn
      87: iconst_1
      88: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_0
       6: getfield      #4                  // Field buffer:Lokio/Buffer;
       9: invokevirtual #36                 // Method okio/Buffer.readByte:()B
      12: ireturn

  public okio.ByteString readByteString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lokio/Buffer;
       4: aload_0
       5: getfield      #8                  // Field source:Lokio/Source;
       8: invokevirtual #37                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
      11: pop2
      12: aload_0
      13: getfield      #4                  // Field buffer:Lokio/Buffer;
      16: invokevirtual #38                 // Method okio/Buffer.readByteString:()Lokio/ByteString;
      19: areturn

  public okio.ByteString readByteString(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_0
       6: getfield      #4                  // Field buffer:Lokio/Buffer;
       9: lload_1
      10: invokevirtual #39                 // Method okio/Buffer.readByteString:(J)Lokio/ByteString;
      13: areturn

  public int select(okio.Options) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field buffer:Lokio/Buffer;
      21: aload_1
      22: invokevirtual #40                 // Method okio/Buffer.selectPrefix:(Lokio/Options;)I
      25: istore_2
      26: iload_2
      27: iconst_m1
      28: if_icmpne     33
      31: iconst_m1
      32: ireturn
      33: aload_1
      34: getfield      #41                 // Field okio/Options.byteStrings:[Lokio/ByteString;
      37: iload_2
      38: aaload
      39: invokevirtual #42                 // Method okio/ByteString.size:()I
      42: istore_3
      43: iload_3
      44: i2l
      45: aload_0
      46: getfield      #4                  // Field buffer:Lokio/Buffer;
      49: getfield      #22                 // Field okio/Buffer.size:J
      52: lcmp
      53: ifgt          67
      56: aload_0
      57: getfield      #4                  // Field buffer:Lokio/Buffer;
      60: iload_3
      61: i2l
      62: invokevirtual #43                 // Method okio/Buffer.skip:(J)V
      65: iload_2
      66: ireturn
      67: aload_0
      68: getfield      #8                  // Field source:Lokio/Source;
      71: aload_0
      72: getfield      #4                  // Field buffer:Lokio/Buffer;
      75: ldc2_w        #24                 // long 8192l
      78: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      83: ldc2_w        #27                 // long -1l
      86: lcmp
      87: ifne          92
      90: iconst_m1
      91: ireturn
      92: goto          17

  public byte[] readByteArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lokio/Buffer;
       4: aload_0
       5: getfield      #8                  // Field source:Lokio/Source;
       8: invokevirtual #37                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
      11: pop2
      12: aload_0
      13: getfield      #4                  // Field buffer:Lokio/Buffer;
      16: invokevirtual #44                 // Method okio/Buffer.readByteArray:()[B
      19: areturn

  public byte[] readByteArray(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_0
       6: getfield      #4                  // Field buffer:Lokio/Buffer;
       9: lload_1
      10: invokevirtual #45                 // Method okio/Buffer.readByteArray:(J)[B
      13: areturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #46                 // Method read:([BII)I
       8: ireturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: i2l
       4: invokevirtual #35                 // Method require:(J)V
       7: goto          68
      10: astore_2
      11: iconst_0
      12: istore_3
      13: aload_0
      14: getfield      #4                  // Field buffer:Lokio/Buffer;
      17: getfield      #22                 // Field okio/Buffer.size:J
      20: lconst_0
      21: lcmp
      22: ifle          66
      25: aload_0
      26: getfield      #4                  // Field buffer:Lokio/Buffer;
      29: aload_1
      30: iload_3
      31: aload_0
      32: getfield      #4                  // Field buffer:Lokio/Buffer;
      35: getfield      #22                 // Field okio/Buffer.size:J
      38: l2i
      39: invokevirtual #47                 // Method okio/Buffer.read:([BII)I
      42: istore        4
      44: iload         4
      46: iconst_m1
      47: if_icmpne     58
      50: new           #48                 // class java/lang/AssertionError
      53: dup
      54: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: iload_3
      59: iload         4
      61: iadd
      62: istore_3
      63: goto          13
      66: aload_2
      67: athrow
      68: aload_0
      69: getfield      #4                  // Field buffer:Lokio/Buffer;
      72: aload_1
      73: invokevirtual #50                 // Method okio/Buffer.readFully:([B)V
      76: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/EOFException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: arraylength
       2: i2l
       3: iload_2
       4: i2l
       5: iload_3
       6: i2l
       7: invokestatic  #51                 // Method okio/Util.checkOffsetAndCount:(JJJ)V
      10: aload_0
      11: getfield      #4                  // Field buffer:Lokio/Buffer;
      14: getfield      #22                 // Field okio/Buffer.size:J
      17: lconst_0
      18: lcmp
      19: ifne          51
      22: aload_0
      23: getfield      #8                  // Field source:Lokio/Source;
      26: aload_0
      27: getfield      #4                  // Field buffer:Lokio/Buffer;
      30: ldc2_w        #24                 // long 8192l
      33: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      38: lstore        4
      40: lload         4
      42: ldc2_w        #27                 // long -1l
      45: lcmp
      46: ifne          51
      49: iconst_m1
      50: ireturn
      51: iload_3
      52: i2l
      53: aload_0
      54: getfield      #4                  // Field buffer:Lokio/Buffer;
      57: getfield      #22                 // Field okio/Buffer.size:J
      60: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      63: l2i
      64: istore        4
      66: aload_0
      67: getfield      #4                  // Field buffer:Lokio/Buffer;
      70: aload_1
      71: iload_2
      72: iload         4
      74: invokevirtual #47                 // Method okio/Buffer.read:([BII)I
      77: ireturn

  public void readFully(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_2
       2: invokevirtual #35                 // Method require:(J)V
       5: goto          22
       8: astore        4
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field buffer:Lokio/Buffer;
      15: invokevirtual #37                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
      18: pop2
      19: aload         4
      21: athrow
      22: aload_0
      23: getfield      #4                  // Field buffer:Lokio/Buffer;
      26: aload_1
      27: lload_2
      28: invokevirtual #52                 // Method okio/Buffer.readFully:(Lokio/Buffer;J)V
      31: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/EOFException

  public long readAll(okio.Sink) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String sink == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: lconst_0
      15: lstore_2
      16: aload_0
      17: getfield      #8                  // Field source:Lokio/Source;
      20: aload_0
      21: getfield      #4                  // Field buffer:Lokio/Buffer;
      24: ldc2_w        #24                 // long 8192l
      27: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      32: ldc2_w        #27                 // long -1l
      35: lcmp
      36: ifeq          75
      39: aload_0
      40: getfield      #4                  // Field buffer:Lokio/Buffer;
      43: invokevirtual #53                 // Method okio/Buffer.completeSegmentByteCount:()J
      46: lstore        4
      48: lload         4
      50: lconst_0
      51: lcmp
      52: ifle          72
      55: lload_2
      56: lload         4
      58: ladd
      59: lstore_2
      60: aload_1
      61: aload_0
      62: getfield      #4                  // Field buffer:Lokio/Buffer;
      65: lload         4
      67: invokeinterface #54,  4           // InterfaceMethod okio/Sink.write:(Lokio/Buffer;J)V
      72: goto          16
      75: aload_0
      76: getfield      #4                  // Field buffer:Lokio/Buffer;
      79: invokevirtual #55                 // Method okio/Buffer.size:()J
      82: lconst_0
      83: lcmp
      84: ifle          114
      87: lload_2
      88: aload_0
      89: getfield      #4                  // Field buffer:Lokio/Buffer;
      92: invokevirtual #55                 // Method okio/Buffer.size:()J
      95: ladd
      96: lstore_2
      97: aload_1
      98: aload_0
      99: getfield      #4                  // Field buffer:Lokio/Buffer;
     102: aload_0
     103: getfield      #4                  // Field buffer:Lokio/Buffer;
     106: invokevirtual #55                 // Method okio/Buffer.size:()J
     109: invokeinterface #54,  4           // InterfaceMethod okio/Sink.write:(Lokio/Buffer;J)V
     114: lload_2
     115: lreturn

  public java.lang.String readUtf8() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lokio/Buffer;
       4: aload_0
       5: getfield      #8                  // Field source:Lokio/Source;
       8: invokevirtual #37                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
      11: pop2
      12: aload_0
      13: getfield      #4                  // Field buffer:Lokio/Buffer;
      16: invokevirtual #56                 // Method okio/Buffer.readUtf8:()Ljava/lang/String;
      19: areturn

  public java.lang.String readUtf8(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_0
       6: getfield      #4                  // Field buffer:Lokio/Buffer;
       9: lload_1
      10: invokevirtual #57                 // Method okio/Buffer.readUtf8:(J)Ljava/lang/String;
      13: areturn

  public java.lang.String readString(java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #58                 // String charset == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field buffer:Lokio/Buffer;
      18: aload_0
      19: getfield      #8                  // Field source:Lokio/Source;
      22: invokevirtual #37                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
      25: pop2
      26: aload_0
      27: getfield      #4                  // Field buffer:Lokio/Buffer;
      30: aload_1
      31: invokevirtual #59                 // Method okio/Buffer.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
      34: areturn

  public java.lang.String readString(long, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_3
       6: ifnonnull     19
       9: new           #9                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #58                 // String charset == null
      15: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #4                  // Field buffer:Lokio/Buffer;
      23: lload_1
      24: aload_3
      25: invokevirtual #60                 // Method okio/Buffer.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;
      28: areturn

  public java.lang.String readUtf8Line() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #61                 // Method indexOf:(B)J
       6: lstore_1
       7: lload_1
       8: ldc2_w        #27                 // long -1l
      11: lcmp
      12: ifne          43
      15: aload_0
      16: getfield      #4                  // Field buffer:Lokio/Buffer;
      19: getfield      #22                 // Field okio/Buffer.size:J
      22: lconst_0
      23: lcmp
      24: ifeq          41
      27: aload_0
      28: aload_0
      29: getfield      #4                  // Field buffer:Lokio/Buffer;
      32: getfield      #22                 // Field okio/Buffer.size:J
      35: invokevirtual #62                 // Method readUtf8:(J)Ljava/lang/String;
      38: goto          42
      41: aconst_null
      42: areturn
      43: aload_0
      44: getfield      #4                  // Field buffer:Lokio/Buffer;
      47: lload_1
      48: invokevirtual #63                 // Method okio/Buffer.readUtf8Line:(J)Ljava/lang/String;
      51: areturn

  public java.lang.String readUtf8LineStrict() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #61                 // Method indexOf:(B)J
       6: lstore_1
       7: lload_1
       8: ldc2_w        #27                 // long -1l
      11: lcmp
      12: ifne          99
      15: new           #2                  // class okio/Buffer
      18: dup
      19: invokespecial #3                  // Method okio/Buffer."<init>":()V
      22: astore_3
      23: aload_0
      24: getfield      #4                  // Field buffer:Lokio/Buffer;
      27: aload_3
      28: lconst_0
      29: ldc2_w        #64                 // long 32l
      32: aload_0
      33: getfield      #4                  // Field buffer:Lokio/Buffer;
      36: invokevirtual #55                 // Method okio/Buffer.size:()J
      39: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      42: invokevirtual #66                 // Method okio/Buffer.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;
      45: pop
      46: new           #33                 // class java/io/EOFException
      49: dup
      50: new           #12                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #67                 // String \\n not found: size=
      59: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #4                  // Field buffer:Lokio/Buffer;
      66: invokevirtual #55                 // Method okio/Buffer.size:()J
      69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: ldc           #68                 // String  content=
      74: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_3
      78: invokevirtual #38                 // Method okio/Buffer.readByteString:()Lokio/ByteString;
      81: invokevirtual #69                 // Method okio/ByteString.hex:()Ljava/lang/String;
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #70                 // String …
      89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #71                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: getfield      #4                  // Field buffer:Lokio/Buffer;
     103: lload_1
     104: invokevirtual #63                 // Method okio/Buffer.readUtf8Line:(J)Ljava/lang/String;
     107: areturn

  public int readUtf8CodePoint() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #35                 // Method require:(J)V
       5: aload_0
       6: getfield      #4                  // Field buffer:Lokio/Buffer;
       9: lconst_0
      10: invokevirtual #72                 // Method okio/Buffer.getByte:(J)B
      13: istore_1
      14: iload_1
      15: sipush        224
      18: iand
      19: sipush        192
      22: if_icmpne     35
      25: aload_0
      26: ldc2_w        #73                 // long 2l
      29: invokevirtual #35                 // Method require:(J)V
      32: goto          74
      35: iload_1
      36: sipush        240
      39: iand
      40: sipush        224
      43: if_icmpne     56
      46: aload_0
      47: ldc2_w        #75                 // long 3l
      50: invokevirtual #35                 // Method require:(J)V
      53: goto          74
      56: iload_1
      57: sipush        248
      60: iand
      61: sipush        240
      64: if_icmpne     74
      67: aload_0
      68: ldc2_w        #77                 // long 4l
      71: invokevirtual #35                 // Method require:(J)V
      74: aload_0
      75: getfield      #4                  // Field buffer:Lokio/Buffer;
      78: invokevirtual #79                 // Method okio/Buffer.readUtf8CodePoint:()I
      81: ireturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #73                 // long 2l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #80                 // Method okio/Buffer.readShort:()S
      14: ireturn

  public short readShortLe() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #73                 // long 2l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #81                 // Method okio/Buffer.readShortLe:()S
      14: ireturn

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #77                 // long 4l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #82                 // Method okio/Buffer.readInt:()I
      14: ireturn

  public int readIntLe() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #77                 // long 4l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #83                 // Method okio/Buffer.readIntLe:()I
      14: ireturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #84                 // long 8l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #86                 // Method okio/Buffer.readLong:()J
      14: lreturn

  public long readLongLe() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc2_w        #84                 // long 8l
       4: invokevirtual #35                 // Method require:(J)V
       7: aload_0
       8: getfield      #4                  // Field buffer:Lokio/Buffer;
      11: invokevirtual #87                 // Method okio/Buffer.readLongLe:()J
      14: lreturn

  public long readDecimalLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #35                 // Method require:(J)V
       5: iconst_0
       6: istore_1
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: i2l
      12: invokevirtual #32                 // Method request:(J)Z
      15: ifeq          84
      18: aload_0
      19: getfield      #4                  // Field buffer:Lokio/Buffer;
      22: iload_1
      23: i2l
      24: invokevirtual #72                 // Method okio/Buffer.getByte:(J)B
      27: istore_2
      28: iload_2
      29: bipush        48
      31: if_icmplt     40
      34: iload_2
      35: bipush        57
      37: if_icmple     78
      40: iload_1
      41: ifne          50
      44: iload_2
      45: bipush        45
      47: if_icmpeq     78
      50: iload_1
      51: ifne          84
      54: new           #88                 // class java/lang/NumberFormatException
      57: dup
      58: ldc           #89                 // String Expected leading [0-9] or \'-\' character but was %#x
      60: iconst_1
      61: anewarray     #90                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: iload_2
      67: invokestatic  #91                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      70: aastore
      71: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokespecial #93                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iinc          1, 1
      81: goto          7
      84: aload_0
      85: getfield      #4                  // Field buffer:Lokio/Buffer;
      88: invokevirtual #94                 // Method okio/Buffer.readDecimalLong:()J
      91: lreturn

  public long readHexadecimalUnsignedLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #35                 // Method require:(J)V
       5: iconst_0
       6: istore_1
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: i2l
      12: invokevirtual #32                 // Method request:(J)Z
      15: ifeq          98
      18: aload_0
      19: getfield      #4                  // Field buffer:Lokio/Buffer;
      22: iload_1
      23: i2l
      24: invokevirtual #72                 // Method okio/Buffer.getByte:(J)B
      27: istore_2
      28: iload_2
      29: bipush        48
      31: if_icmplt     40
      34: iload_2
      35: bipush        57
      37: if_icmple     92
      40: iload_2
      41: bipush        97
      43: if_icmplt     52
      46: iload_2
      47: bipush        102
      49: if_icmple     92
      52: iload_2
      53: bipush        65
      55: if_icmplt     64
      58: iload_2
      59: bipush        70
      61: if_icmple     92
      64: iload_1
      65: ifne          98
      68: new           #88                 // class java/lang/NumberFormatException
      71: dup
      72: ldc           #95                 // String Expected leading [0-9a-fA-F] character but was %#x
      74: iconst_1
      75: anewarray     #90                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: iload_2
      81: invokestatic  #91                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      84: aastore
      85: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      88: invokespecial #93                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: iinc          1, 1
      95: goto          7
      98: aload_0
      99: getfield      #4                  // Field buffer:Lokio/Buffer;
     102: invokevirtual #96                 // Method okio/Buffer.readHexadecimalUnsignedLong:()J
     105: lreturn

  public void skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: lload_1
      18: lconst_0
      19: lcmp
      20: ifle          93
      23: aload_0
      24: getfield      #4                  // Field buffer:Lokio/Buffer;
      27: getfield      #22                 // Field okio/Buffer.size:J
      30: lconst_0
      31: lcmp
      32: ifne          66
      35: aload_0
      36: getfield      #8                  // Field source:Lokio/Source;
      39: aload_0
      40: getfield      #4                  // Field buffer:Lokio/Buffer;
      43: ldc2_w        #24                 // long 8192l
      46: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      51: ldc2_w        #27                 // long -1l
      54: lcmp
      55: ifne          66
      58: new           #33                 // class java/io/EOFException
      61: dup
      62: invokespecial #34                 // Method java/io/EOFException."<init>":()V
      65: athrow
      66: lload_1
      67: aload_0
      68: getfield      #4                  // Field buffer:Lokio/Buffer;
      71: invokevirtual #55                 // Method okio/Buffer.size:()J
      74: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      77: lstore_3
      78: aload_0
      79: getfield      #4                  // Field buffer:Lokio/Buffer;
      82: lload_3
      83: invokevirtual #43                 // Method okio/Buffer.skip:(J)V
      86: lload_1
      87: lload_3
      88: lsub
      89: lstore_1
      90: goto          17
      93: return

  public long indexOf(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: lconst_0
       3: invokevirtual #97                 // Method indexOf:(BJ)J
       6: lreturn

  public long indexOf(byte, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field buffer:Lokio/Buffer;
      21: iload_1
      22: lload_2
      23: invokevirtual #98                 // Method okio/Buffer.indexOf:(BJ)J
      26: lstore        4
      28: lload         4
      30: ldc2_w        #27                 // long -1l
      33: lcmp
      34: ifeq          40
      37: lload         4
      39: lreturn
      40: aload_0
      41: getfield      #4                  // Field buffer:Lokio/Buffer;
      44: getfield      #22                 // Field okio/Buffer.size:J
      47: lstore        6
      49: aload_0
      50: getfield      #8                  // Field source:Lokio/Source;
      53: aload_0
      54: getfield      #4                  // Field buffer:Lokio/Buffer;
      57: ldc2_w        #24                 // long 8192l
      60: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      65: ldc2_w        #27                 // long -1l
      68: lcmp
      69: ifne          76
      72: ldc2_w        #27                 // long -1l
      75: lreturn
      76: lload_2
      77: lload         6
      79: invokestatic  #99                 // Method java/lang/Math.max:(JJ)J
      82: lstore_2
      83: goto          17

  public long indexOf(okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #100                // Method indexOf:(Lokio/ByteString;J)J
       6: lreturn

  public long indexOf(okio.ByteString, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field buffer:Lokio/Buffer;
      21: aload_1
      22: lload_2
      23: invokevirtual #101                // Method okio/Buffer.indexOf:(Lokio/ByteString;J)J
      26: lstore        4
      28: lload         4
      30: ldc2_w        #27                 // long -1l
      33: lcmp
      34: ifeq          40
      37: lload         4
      39: lreturn
      40: aload_0
      41: getfield      #4                  // Field buffer:Lokio/Buffer;
      44: getfield      #22                 // Field okio/Buffer.size:J
      47: lstore        6
      49: aload_0
      50: getfield      #8                  // Field source:Lokio/Source;
      53: aload_0
      54: getfield      #4                  // Field buffer:Lokio/Buffer;
      57: ldc2_w        #24                 // long 8192l
      60: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      65: ldc2_w        #27                 // long -1l
      68: lcmp
      69: ifne          76
      72: ldc2_w        #27                 // long -1l
      75: lreturn
      76: lload_2
      77: lload         6
      79: aload_1
      80: invokevirtual #42                 // Method okio/ByteString.size:()I
      83: i2l
      84: lsub
      85: lconst_1
      86: ladd
      87: invokestatic  #99                 // Method java/lang/Math.max:(JJ)J
      90: lstore_2
      91: goto          17

  public long indexOfElement(okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: invokevirtual #102                // Method indexOfElement:(Lokio/ByteString;J)J
       6: lreturn

  public long indexOfElement(okio.ByteString, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field buffer:Lokio/Buffer;
      21: aload_1
      22: lload_2
      23: invokevirtual #103                // Method okio/Buffer.indexOfElement:(Lokio/ByteString;J)J
      26: lstore        4
      28: lload         4
      30: ldc2_w        #27                 // long -1l
      33: lcmp
      34: ifeq          40
      37: lload         4
      39: lreturn
      40: aload_0
      41: getfield      #4                  // Field buffer:Lokio/Buffer;
      44: getfield      #22                 // Field okio/Buffer.size:J
      47: lstore        6
      49: aload_0
      50: getfield      #8                  // Field source:Lokio/Source;
      53: aload_0
      54: getfield      #4                  // Field buffer:Lokio/Buffer;
      57: ldc2_w        #24                 // long 8192l
      60: invokeinterface #26,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      65: ldc2_w        #27                 // long -1l
      68: lcmp
      69: ifne          76
      72: ldc2_w        #27                 // long -1l
      75: lreturn
      76: lload_2
      77: lload         6
      79: invokestatic  #99                 // Method java/lang/Math.max:(JJ)J
      82: lstore_2
      83: goto          17

  public boolean rangeEquals(long, okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_0
       4: aload_3
       5: invokevirtual #42                 // Method okio/ByteString.size:()I
       8: invokevirtual #104                // Method rangeEquals:(JLokio/ByteString;II)Z
      11: ireturn

  public boolean rangeEquals(long, okio.ByteString, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String closed
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: lload_1
      18: lconst_0
      19: lcmp
      20: iflt          45
      23: iload         4
      25: iflt          45
      28: iload         5
      30: iflt          45
      33: aload_3
      34: invokevirtual #42                 // Method okio/ByteString.size:()I
      37: iload         4
      39: isub
      40: iload         5
      42: if_icmpge     47
      45: iconst_0
      46: ireturn
      47: iconst_0
      48: istore        6
      50: iload         6
      52: iload         5
      54: if_icmpge     106
      57: lload_1
      58: iload         6
      60: i2l
      61: ladd
      62: lstore        7
      64: aload_0
      65: lload         7
      67: lconst_1
      68: ladd
      69: invokevirtual #32                 // Method request:(J)Z
      72: ifne          77
      75: iconst_0
      76: ireturn
      77: aload_0
      78: getfield      #4                  // Field buffer:Lokio/Buffer;
      81: lload         7
      83: invokevirtual #72                 // Method okio/Buffer.getByte:(J)B
      86: aload_3
      87: iload         4
      89: iload         6
      91: iadd
      92: invokevirtual #105                // Method okio/ByteString.getByte:(I)B
      95: if_icmpeq     100
      98: iconst_0
      99: ireturn
     100: iinc          6, 1
     103: goto          50
     106: iconst_1
     107: ireturn

  public java.io.InputStream inputStream();
    Code:
       0: new           #106                // class okio/RealBufferedSource$1
       3: dup
       4: aload_0
       5: invokespecial #107                // Method okio/RealBufferedSource$1."<init>":(Lokio/RealBufferedSource;)V
       8: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #18                 // Field closed:Z
      13: aload_0
      14: getfield      #8                  // Field source:Lokio/Source;
      17: invokeinterface #108,  1          // InterfaceMethod okio/Source.close:()V
      22: aload_0
      23: getfield      #4                  // Field buffer:Lokio/Buffer;
      26: invokevirtual #109                // Method okio/Buffer.clear:()V
      29: return

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lokio/Source;
       4: invokeinterface #110,  1          // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
       9: areturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #111                // String buffer(
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field source:Lokio/Source;
      16: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #113                // String )
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
