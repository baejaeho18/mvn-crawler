Compiled from "Cache.java"
public final class okhttp3.Cache implements java.io.Closeable,java.io.Flushable {
  private static final int VERSION;

  private static final int ENTRY_METADATA;

  private static final int ENTRY_BODY;

  private static final int ENTRY_COUNT;

  final okhttp3.internal.cache.InternalCache internalCache;

  private final okhttp3.internal.cache.DiskLruCache cache;

  private int writeSuccessCount;

  private int writeAbortCount;

  private int networkCount;

  private int hitCount;

  private int requestCount;

  public okhttp3.Cache(java.io.File, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: getstatic     #10                 // Field okhttp3/internal/io/FileSystem.SYSTEM:Lokhttp3/internal/io/FileSystem;
       6: invokespecial #11                 // Method "<init>":(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V
       9: return

  okhttp3.Cache(java.io.File, long, okhttp3.internal.io.FileSystem);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #13                 // class okhttp3/Cache$1
       8: dup
       9: aload_0
      10: invokespecial #14                 // Method okhttp3/Cache$1."<init>":(Lokhttp3/Cache;)V
      13: putfield      #15                 // Field internalCache:Lokhttp3/internal/cache/InternalCache;
      16: aload_0
      17: aload         4
      19: aload_1
      20: ldc           #17                 // int 201105
      22: iconst_2
      23: lload_2
      24: invokestatic  #18                 // Method okhttp3/internal/cache/DiskLruCache.create:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;
      27: putfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
      30: return

  private static java.lang.String urlToKey(okhttp3.Request);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
       4: invokevirtual #20                 // Method okhttp3/HttpUrl.toString:()Ljava/lang/String;
       7: invokestatic  #21                 // Method okhttp3/internal/Util.md5Hex:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  okhttp3.Response get(okhttp3.Request);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method urlToKey:(Lokhttp3/Request;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       9: aload_2
      10: invokevirtual #23                 // Method okhttp3/internal/cache/DiskLruCache.get:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;
      13: astore_3
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: goto          27
      23: astore        5
      25: aconst_null
      26: areturn
      27: new           #25                 // class okhttp3/Cache$Entry
      30: dup
      31: aload_3
      32: iconst_0
      33: invokevirtual #26                 // Method okhttp3/internal/cache/DiskLruCache$Snapshot.getSource:(I)Lokio/Source;
      36: invokespecial #27                 // Method okhttp3/Cache$Entry."<init>":(Lokio/Source;)V
      39: astore        4
      41: goto          52
      44: astore        5
      46: aload_3
      47: invokestatic  #28                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      50: aconst_null
      51: areturn
      52: aload         4
      54: aload_3
      55: invokevirtual #29                 // Method okhttp3/Cache$Entry.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;
      58: astore        5
      60: aload         4
      62: aload_1
      63: aload         5
      65: invokevirtual #30                 // Method okhttp3/Cache$Entry.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z
      68: ifne          81
      71: aload         5
      73: invokevirtual #31                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      76: invokestatic  #28                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      79: aconst_null
      80: areturn
      81: aload         5
      83: areturn
    Exception table:
       from    to  target type
           5    19    23   Class java/io/IOException
          27    41    44   Class java/io/IOException

  private okhttp3.internal.cache.CacheRequest put(okhttp3.Response);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method okhttp3/Response.request:()Lokhttp3/Request;
       4: invokevirtual #33                 // Method okhttp3/Request.method:()Ljava/lang/String;
       7: astore_2
       8: aload_1
       9: invokevirtual #32                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      12: invokevirtual #33                 // Method okhttp3/Request.method:()Ljava/lang/String;
      15: invokestatic  #34                 // Method okhttp3/internal/http/HttpMethod.invalidatesCache:(Ljava/lang/String;)Z
      18: ifeq          35
      21: aload_0
      22: aload_1
      23: invokevirtual #32                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      26: invokespecial #8                  // Method remove:(Lokhttp3/Request;)V
      29: goto          33
      32: astore_3
      33: aconst_null
      34: areturn
      35: aload_2
      36: ldc           #35                 // String GET
      38: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: aconst_null
      45: areturn
      46: aload_1
      47: invokestatic  #37                 // Method okhttp3/internal/http/HttpHeaders.hasVaryAll:(Lokhttp3/Response;)Z
      50: ifeq          55
      53: aconst_null
      54: areturn
      55: new           #25                 // class okhttp3/Cache$Entry
      58: dup
      59: aload_1
      60: invokespecial #38                 // Method okhttp3/Cache$Entry."<init>":(Lokhttp3/Response;)V
      63: astore_3
      64: aconst_null
      65: astore        4
      67: aload_0
      68: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
      71: aload_1
      72: invokevirtual #32                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      75: invokestatic  #22                 // Method urlToKey:(Lokhttp3/Request;)Ljava/lang/String;
      78: invokevirtual #39                 // Method okhttp3/internal/cache/DiskLruCache.edit:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Editor;
      81: astore        4
      83: aload         4
      85: ifnonnull     90
      88: aconst_null
      89: areturn
      90: aload_3
      91: aload         4
      93: invokevirtual #40                 // Method okhttp3/Cache$Entry.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V
      96: new           #41                 // class okhttp3/Cache$CacheRequestImpl
      99: dup
     100: aload_0
     101: aload         4
     103: invokespecial #42                 // Method okhttp3/Cache$CacheRequestImpl."<init>":(Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V
     106: areturn
     107: astore        5
     109: aload_0
     110: aload         4
     112: invokespecial #43                 // Method abortQuietly:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V
     115: aconst_null
     116: areturn
    Exception table:
       from    to  target type
          21    29    32   Class java/io/IOException
          67    89   107   Class java/io/IOException
          90   106   107   Class java/io/IOException

  private void remove(okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: aload_1
       5: invokestatic  #22                 // Method urlToKey:(Lokhttp3/Request;)Ljava/lang/String;
       8: invokevirtual #44                 // Method okhttp3/internal/cache/DiskLruCache.remove:(Ljava/lang/String;)Z
      11: pop
      12: return

  private void update(okhttp3.Response, okhttp3.Response);
    Code:
       0: new           #25                 // class okhttp3/Cache$Entry
       3: dup
       4: aload_2
       5: invokespecial #38                 // Method okhttp3/Cache$Entry."<init>":(Lokhttp3/Response;)V
       8: astore_3
       9: aload_1
      10: invokevirtual #31                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      13: checkcast     #45                 // class okhttp3/Cache$CacheResponseBody
      16: invokestatic  #46                 // Method okhttp3/Cache$CacheResponseBody.access$500:(Lokhttp3/Cache$CacheResponseBody;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;
      19: astore        4
      21: aconst_null
      22: astore        5
      24: aload         4
      26: invokevirtual #47                 // Method okhttp3/internal/cache/DiskLruCache$Snapshot.edit:()Lokhttp3/internal/cache/DiskLruCache$Editor;
      29: astore        5
      31: aload         5
      33: ifnull        47
      36: aload_3
      37: aload         5
      39: invokevirtual #40                 // Method okhttp3/Cache$Entry.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V
      42: aload         5
      44: invokevirtual #48                 // Method okhttp3/internal/cache/DiskLruCache$Editor.commit:()V
      47: goto          58
      50: astore        6
      52: aload_0
      53: aload         5
      55: invokespecial #43                 // Method abortQuietly:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V
      58: return
    Exception table:
       from    to  target type
          24    47    50   Class java/io/IOException

  private void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokevirtual #49                 // Method okhttp3/internal/cache/DiskLruCache$Editor.abort:()V
       8: goto          12
      11: astore_2
      12: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public void initialize() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #50                 // Method okhttp3/internal/cache/DiskLruCache.initialize:()V
       7: return

  public void delete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #51                 // Method okhttp3/internal/cache/DiskLruCache.delete:()V
       7: return

  public void evictAll() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #52                 // Method okhttp3/internal/cache/DiskLruCache.evictAll:()V
       7: return

  public java.util.Iterator<java.lang.String> urls() throws java.io.IOException;
    Code:
       0: new           #53                 // class okhttp3/Cache$2
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method okhttp3/Cache$2."<init>":(Lokhttp3/Cache;)V
       8: areturn

  public synchronized int writeAbortCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeAbortCount:I
       4: ireturn

  public synchronized int writeSuccessCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeSuccessCount:I
       4: ireturn

  public long size() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #55                 // Method okhttp3/internal/cache/DiskLruCache.size:()J
       7: lreturn

  public long maxSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #56                 // Method okhttp3/internal/cache/DiskLruCache.getMaxSize:()J
       7: lreturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #57                 // Method okhttp3/internal/cache/DiskLruCache.flush:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #58                 // Method okhttp3/internal/cache/DiskLruCache.close:()V
       7: return

  public java.io.File directory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #59                 // Method okhttp3/internal/cache/DiskLruCache.getDirectory:()Ljava/io/File;
       7: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: invokevirtual #60                 // Method okhttp3/internal/cache/DiskLruCache.isClosed:()Z
       7: ireturn

  private synchronized void trackResponse(okhttp3.internal.cache.CacheStrategy);
    Code:
       0: aload_0
       1: dup
       2: getfield      #61                 // Field requestCount:I
       5: iconst_1
       6: iadd
       7: putfield      #61                 // Field requestCount:I
      10: aload_1
      11: getfield      #62                 // Field okhttp3/internal/cache/CacheStrategy.networkRequest:Lokhttp3/Request;
      14: ifnull        30
      17: aload_0
      18: dup
      19: getfield      #63                 // Field networkCount:I
      22: iconst_1
      23: iadd
      24: putfield      #63                 // Field networkCount:I
      27: goto          47
      30: aload_1
      31: getfield      #64                 // Field okhttp3/internal/cache/CacheStrategy.cacheResponse:Lokhttp3/Response;
      34: ifnull        47
      37: aload_0
      38: dup
      39: getfield      #65                 // Field hitCount:I
      42: iconst_1
      43: iadd
      44: putfield      #65                 // Field hitCount:I
      47: return

  private synchronized void trackConditionalCacheHit();
    Code:
       0: aload_0
       1: dup
       2: getfield      #65                 // Field hitCount:I
       5: iconst_1
       6: iadd
       7: putfield      #65                 // Field hitCount:I
      10: return

  public synchronized int networkCount();
    Code:
       0: aload_0
       1: getfield      #63                 // Field networkCount:I
       4: ireturn

  public synchronized int hitCount();
    Code:
       0: aload_0
       1: getfield      #65                 // Field hitCount:I
       4: ireturn

  public synchronized int requestCount();
    Code:
       0: aload_0
       1: getfield      #61                 // Field requestCount:I
       4: ireturn

  private static int readInt(okio.BufferedSource) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod okio/BufferedSource.readDecimalLong:()J
       6: lstore_1
       7: aload_0
       8: invokeinterface #67,  1           // InterfaceMethod okio/BufferedSource.readUtf8LineStrict:()Ljava/lang/String;
      13: astore_3
      14: lload_1
      15: lconst_0
      16: lcmp
      17: iflt          35
      20: lload_1
      21: ldc2_w        #69                 // long 2147483647l
      24: lcmp
      25: ifgt          35
      28: aload_3
      29: invokevirtual #71                 // Method java/lang/String.isEmpty:()Z
      32: ifne          71
      35: new           #24                 // class java/io/IOException
      38: dup
      39: new           #72                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #74                 // String expected an int but was \"
      48: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: lload_1
      52: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #77                 // String \"
      61: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #79                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: lload_1
      72: l2i
      73: ireturn
      74: astore_1
      75: new           #24                 // class java/io/IOException
      78: dup
      79: aload_1
      80: invokevirtual #81                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;
      83: invokespecial #79                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      86: athrow
    Exception table:
       from    to  target type
           0    73    74   Class java/lang/NumberFormatException

  static okhttp3.internal.cache.CacheRequest access$000(okhttp3.Cache, okhttp3.Response);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;
       5: areturn

  static void access$100(okhttp3.Cache, okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method remove:(Lokhttp3/Request;)V
       5: return

  static void access$200(okhttp3.Cache, okhttp3.Response, okhttp3.Response);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method update:(Lokhttp3/Response;Lokhttp3/Response;)V
       6: return

  static void access$300(okhttp3.Cache);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method trackConditionalCacheHit:()V
       4: return

  static void access$400(okhttp3.Cache, okhttp3.internal.cache.CacheStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V
       5: return

  static okhttp3.internal.cache.DiskLruCache access$600(okhttp3.Cache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Lokhttp3/internal/cache/DiskLruCache;
       4: areturn

  static int access$808(okhttp3.Cache);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field writeSuccessCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #3                  // Field writeSuccessCount:I
      11: ireturn

  static int access$908(okhttp3.Cache);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field writeAbortCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field writeAbortCount:I
      11: ireturn

  static int access$1000(okio.BufferedSource) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method readInt:(Lokio/BufferedSource;)I
       4: ireturn
}
