Compiled from "CacheControl.java"
public final class okhttp3.CacheControl {
  public static final okhttp3.CacheControl FORCE_NETWORK;

  public static final okhttp3.CacheControl FORCE_CACHE;

  private final boolean noCache;

  private final boolean noStore;

  private final int maxAgeSeconds;

  private final int sMaxAgeSeconds;

  private final boolean isPrivate;

  private final boolean isPublic;

  private final boolean mustRevalidate;

  private final int maxStaleSeconds;

  private final int minFreshSeconds;

  private final boolean onlyIfCached;

  private final boolean noTransform;

  java.lang.String headerValue;

  private okhttp3.CacheControl(boolean, boolean, int, int, boolean, boolean, boolean, int, int, boolean, boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field noCache:Z
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field noStore:Z
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field maxAgeSeconds:I
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field sMaxAgeSeconds:I
      25: aload_0
      26: iload         5
      28: putfield      #7                  // Field isPrivate:Z
      31: aload_0
      32: iload         6
      34: putfield      #8                  // Field isPublic:Z
      37: aload_0
      38: iload         7
      40: putfield      #9                  // Field mustRevalidate:Z
      43: aload_0
      44: iload         8
      46: putfield      #10                 // Field maxStaleSeconds:I
      49: aload_0
      50: iload         9
      52: putfield      #11                 // Field minFreshSeconds:I
      55: aload_0
      56: iload         10
      58: putfield      #12                 // Field onlyIfCached:Z
      61: aload_0
      62: iload         11
      64: putfield      #13                 // Field noTransform:Z
      67: aload_0
      68: aload         12
      70: putfield      #14                 // Field headerValue:Ljava/lang/String;
      73: return

  private okhttp3.CacheControl(okhttp3.CacheControl$Builder);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #15                 // Field okhttp3/CacheControl$Builder.noCache:Z
       9: putfield      #3                  // Field noCache:Z
      12: aload_0
      13: aload_1
      14: getfield      #16                 // Field okhttp3/CacheControl$Builder.noStore:Z
      17: putfield      #4                  // Field noStore:Z
      20: aload_0
      21: aload_1
      22: getfield      #17                 // Field okhttp3/CacheControl$Builder.maxAgeSeconds:I
      25: putfield      #5                  // Field maxAgeSeconds:I
      28: aload_0
      29: iconst_m1
      30: putfield      #6                  // Field sMaxAgeSeconds:I
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field isPrivate:Z
      38: aload_0
      39: iconst_0
      40: putfield      #8                  // Field isPublic:Z
      43: aload_0
      44: iconst_0
      45: putfield      #9                  // Field mustRevalidate:Z
      48: aload_0
      49: aload_1
      50: getfield      #18                 // Field okhttp3/CacheControl$Builder.maxStaleSeconds:I
      53: putfield      #10                 // Field maxStaleSeconds:I
      56: aload_0
      57: aload_1
      58: getfield      #19                 // Field okhttp3/CacheControl$Builder.minFreshSeconds:I
      61: putfield      #11                 // Field minFreshSeconds:I
      64: aload_0
      65: aload_1
      66: getfield      #20                 // Field okhttp3/CacheControl$Builder.onlyIfCached:Z
      69: putfield      #12                 // Field onlyIfCached:Z
      72: aload_0
      73: aload_1
      74: getfield      #21                 // Field okhttp3/CacheControl$Builder.noTransform:Z
      77: putfield      #13                 // Field noTransform:Z
      80: return

  public boolean noCache();
    Code:
       0: aload_0
       1: getfield      #3                  // Field noCache:Z
       4: ireturn

  public boolean noStore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field noStore:Z
       4: ireturn

  public int maxAgeSeconds();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxAgeSeconds:I
       4: ireturn

  public int sMaxAgeSeconds();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sMaxAgeSeconds:I
       4: ireturn

  public boolean isPrivate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isPrivate:Z
       4: ireturn

  public boolean isPublic();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isPublic:Z
       4: ireturn

  public boolean mustRevalidate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field mustRevalidate:Z
       4: ireturn

  public int maxStaleSeconds();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxStaleSeconds:I
       4: ireturn

  public int minFreshSeconds();
    Code:
       0: aload_0
       1: getfield      #11                 // Field minFreshSeconds:I
       4: ireturn

  public boolean onlyIfCached();
    Code:
       0: aload_0
       1: getfield      #12                 // Field onlyIfCached:Z
       4: ireturn

  public boolean noTransform();
    Code:
       0: aload_0
       1: getfield      #13                 // Field noTransform:Z
       4: ireturn

  public static okhttp3.CacheControl parse(okhttp3.Headers);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_m1
       5: istore_3
       6: iconst_m1
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iconst_0
      13: istore        6
      15: iconst_0
      16: istore        7
      18: iconst_m1
      19: istore        8
      21: iconst_m1
      22: istore        9
      24: iconst_0
      25: istore        10
      27: iconst_0
      28: istore        11
      30: iconst_1
      31: istore        12
      33: aconst_null
      34: astore        13
      36: iconst_0
      37: istore        14
      39: aload_0
      40: invokevirtual #22                 // Method okhttp3/Headers.size:()I
      43: istore        15
      45: iload         14
      47: iload         15
      49: if_icmpge     492
      52: aload_0
      53: iload         14
      55: invokevirtual #23                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      58: astore        16
      60: aload_0
      61: iload         14
      63: invokevirtual #24                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      66: astore        17
      68: aload         16
      70: ldc           #25                 // String Cache-Control
      72: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      75: ifeq          96
      78: aload         13
      80: ifnull        89
      83: iconst_0
      84: istore        12
      86: goto          109
      89: aload         17
      91: astore        13
      93: goto          109
      96: aload         16
      98: ldc           #27                 // String Pragma
     100: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     103: ifeq          486
     106: iconst_0
     107: istore        12
     109: iconst_0
     110: istore        18
     112: iload         18
     114: aload         17
     116: invokevirtual #28                 // Method java/lang/String.length:()I
     119: if_icmpge     486
     122: iload         18
     124: istore        19
     126: aload         17
     128: iload         18
     130: ldc           #29                 // String =,;
     132: invokestatic  #30                 // Method okhttp3/internal/http/HttpHeaders.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
     135: istore        18
     137: aload         17
     139: iload         19
     141: iload         18
     143: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     146: invokevirtual #32                 // Method java/lang/String.trim:()Ljava/lang/String;
     149: astore        20
     151: iload         18
     153: aload         17
     155: invokevirtual #28                 // Method java/lang/String.length:()I
     158: if_icmpeq     185
     161: aload         17
     163: iload         18
     165: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
     168: bipush        44
     170: if_icmpeq     185
     173: aload         17
     175: iload         18
     177: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
     180: bipush        59
     182: if_icmpne     194
     185: iinc          18, 1
     188: aconst_null
     189: astore        21
     191: goto          292
     194: iinc          18, 1
     197: aload         17
     199: iload         18
     201: invokestatic  #34                 // Method okhttp3/internal/http/HttpHeaders.skipWhitespace:(Ljava/lang/String;I)I
     204: istore        18
     206: iload         18
     208: aload         17
     210: invokevirtual #28                 // Method java/lang/String.length:()I
     213: if_icmpge     263
     216: aload         17
     218: iload         18
     220: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
     223: bipush        34
     225: if_icmpne     263
     228: iinc          18, 1
     231: iload         18
     233: istore        22
     235: aload         17
     237: iload         18
     239: ldc           #35                 // String \"
     241: invokestatic  #30                 // Method okhttp3/internal/http/HttpHeaders.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
     244: istore        18
     246: aload         17
     248: iload         22
     250: iload         18
     252: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     255: astore        21
     257: iinc          18, 1
     260: goto          292
     263: iload         18
     265: istore        22
     267: aload         17
     269: iload         18
     271: ldc           #36                 // String ,;
     273: invokestatic  #30                 // Method okhttp3/internal/http/HttpHeaders.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
     276: istore        18
     278: aload         17
     280: iload         22
     282: iload         18
     284: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     287: invokevirtual #32                 // Method java/lang/String.trim:()Ljava/lang/String;
     290: astore        21
     292: ldc           #37                 // String no-cache
     294: aload         20
     296: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     299: ifeq          307
     302: iconst_1
     303: istore_1
     304: goto          483
     307: ldc           #38                 // String no-store
     309: aload         20
     311: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     314: ifeq          322
     317: iconst_1
     318: istore_2
     319: goto          483
     322: ldc           #39                 // String max-age
     324: aload         20
     326: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     329: ifeq          342
     332: aload         21
     334: iconst_m1
     335: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.parseSeconds:(Ljava/lang/String;I)I
     338: istore_3
     339: goto          483
     342: ldc           #41                 // String s-maxage
     344: aload         20
     346: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     349: ifeq          363
     352: aload         21
     354: iconst_m1
     355: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.parseSeconds:(Ljava/lang/String;I)I
     358: istore        4
     360: goto          483
     363: ldc           #42                 // String private
     365: aload         20
     367: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     370: ifeq          379
     373: iconst_1
     374: istore        5
     376: goto          483
     379: ldc           #43                 // String public
     381: aload         20
     383: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     386: ifeq          395
     389: iconst_1
     390: istore        6
     392: goto          483
     395: ldc           #44                 // String must-revalidate
     397: aload         20
     399: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     402: ifeq          411
     405: iconst_1
     406: istore        7
     408: goto          483
     411: ldc           #45                 // String max-stale
     413: aload         20
     415: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     418: ifeq          433
     421: aload         21
     423: ldc           #47                 // int 2147483647
     425: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.parseSeconds:(Ljava/lang/String;I)I
     428: istore        8
     430: goto          483
     433: ldc           #48                 // String min-fresh
     435: aload         20
     437: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     440: ifeq          454
     443: aload         21
     445: iconst_m1
     446: invokestatic  #40                 // Method okhttp3/internal/http/HttpHeaders.parseSeconds:(Ljava/lang/String;I)I
     449: istore        9
     451: goto          483
     454: ldc           #49                 // String only-if-cached
     456: aload         20
     458: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     461: ifeq          470
     464: iconst_1
     465: istore        10
     467: goto          483
     470: ldc           #50                 // String no-transform
     472: aload         20
     474: invokevirtual #26                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     477: ifeq          483
     480: iconst_1
     481: istore        11
     483: goto          112
     486: iinc          14, 1
     489: goto          45
     492: iload         12
     494: ifne          500
     497: aconst_null
     498: astore        13
     500: new           #51                 // class okhttp3/CacheControl
     503: dup
     504: iload_1
     505: iload_2
     506: iload_3
     507: iload         4
     509: iload         5
     511: iload         6
     513: iload         7
     515: iload         8
     517: iload         9
     519: iload         10
     521: iload         11
     523: aload         13
     525: invokespecial #52                 // Method "<init>":(ZZIIZZZIIZZLjava/lang/String;)V
     528: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #14                 // Field headerValue:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          22
      13: aload_0
      14: aload_0
      15: invokespecial #53                 // Method headerValue:()Ljava/lang/String;
      18: dup_x1
      19: putfield      #14                 // Field headerValue:Ljava/lang/String;
      22: areturn

  private java.lang.String headerValue();
    Code:
       0: new           #54                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field noCache:Z
      12: ifeq          22
      15: aload_1
      16: ldc           #56                 // String no-cache,
      18: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: getfield      #4                  // Field noStore:Z
      26: ifeq          36
      29: aload_1
      30: ldc           #58                 // String no-store,
      32: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_0
      37: getfield      #5                  // Field maxAgeSeconds:I
      40: iconst_m1
      41: if_icmpeq     63
      44: aload_1
      45: ldc           #59                 // String max-age=
      47: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #5                  // Field maxAgeSeconds:I
      54: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #61                 // String ,
      59: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_0
      64: getfield      #6                  // Field sMaxAgeSeconds:I
      67: iconst_m1
      68: if_icmpeq     90
      71: aload_1
      72: ldc           #62                 // String s-maxage=
      74: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #6                  // Field sMaxAgeSeconds:I
      81: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: ldc           #61                 // String ,
      86: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_0
      91: getfield      #7                  // Field isPrivate:Z
      94: ifeq          104
      97: aload_1
      98: ldc           #63                 // String private,
     100: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_0
     105: getfield      #8                  // Field isPublic:Z
     108: ifeq          118
     111: aload_1
     112: ldc           #64                 // String public,
     114: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: aload_0
     119: getfield      #9                  // Field mustRevalidate:Z
     122: ifeq          132
     125: aload_1
     126: ldc           #65                 // String must-revalidate,
     128: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: getfield      #10                 // Field maxStaleSeconds:I
     136: iconst_m1
     137: if_icmpeq     159
     140: aload_1
     141: ldc           #66                 // String max-stale=
     143: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: getfield      #10                 // Field maxStaleSeconds:I
     150: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: ldc           #61                 // String ,
     155: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: pop
     159: aload_0
     160: getfield      #11                 // Field minFreshSeconds:I
     163: iconst_m1
     164: if_icmpeq     186
     167: aload_1
     168: ldc           #67                 // String min-fresh=
     170: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: getfield      #11                 // Field minFreshSeconds:I
     177: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     180: ldc           #61                 // String ,
     182: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: pop
     186: aload_0
     187: getfield      #12                 // Field onlyIfCached:Z
     190: ifeq          200
     193: aload_1
     194: ldc           #68                 // String only-if-cached,
     196: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: pop
     200: aload_0
     201: getfield      #13                 // Field noTransform:Z
     204: ifeq          214
     207: aload_1
     208: ldc           #69                 // String no-transform,
     210: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: pop
     214: aload_1
     215: invokevirtual #70                 // Method java/lang/StringBuilder.length:()I
     218: ifne          224
     221: ldc           #71                 // String
     223: areturn
     224: aload_1
     225: aload_1
     226: invokevirtual #70                 // Method java/lang/StringBuilder.length:()I
     229: iconst_2
     230: isub
     231: aload_1
     232: invokevirtual #70                 // Method java/lang/StringBuilder.length:()I
     235: invokevirtual #72                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
     238: pop
     239: aload_1
     240: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: areturn

  okhttp3.CacheControl(okhttp3.CacheControl$Builder, okhttp3.CacheControl$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lokhttp3/CacheControl$Builder;)V
       5: return

  static {};
    Code:
       0: new           #74                 // class okhttp3/CacheControl$Builder
       3: dup
       4: invokespecial #75                 // Method okhttp3/CacheControl$Builder."<init>":()V
       7: invokevirtual #76                 // Method okhttp3/CacheControl$Builder.noCache:()Lokhttp3/CacheControl$Builder;
      10: invokevirtual #77                 // Method okhttp3/CacheControl$Builder.build:()Lokhttp3/CacheControl;
      13: putstatic     #78                 // Field FORCE_NETWORK:Lokhttp3/CacheControl;
      16: new           #74                 // class okhttp3/CacheControl$Builder
      19: dup
      20: invokespecial #75                 // Method okhttp3/CacheControl$Builder."<init>":()V
      23: invokevirtual #79                 // Method okhttp3/CacheControl$Builder.onlyIfCached:()Lokhttp3/CacheControl$Builder;
      26: ldc           #47                 // int 2147483647
      28: getstatic     #80                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      31: invokevirtual #81                 // Method okhttp3/CacheControl$Builder.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
      34: invokevirtual #77                 // Method okhttp3/CacheControl$Builder.build:()Lokhttp3/CacheControl;
      37: putstatic     #82                 // Field FORCE_CACHE:Lokhttp3/CacheControl;
      40: return
}
