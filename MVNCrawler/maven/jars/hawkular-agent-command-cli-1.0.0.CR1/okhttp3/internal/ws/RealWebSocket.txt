Compiled from "RealWebSocket.java"
public abstract class okhttp3.internal.ws.RealWebSocket implements okhttp3.ws.WebSocket {
  private static final int CLOSE_PROTOCOL_EXCEPTION;

  private final okhttp3.internal.ws.WebSocketWriter writer;

  private final okhttp3.internal.ws.WebSocketReader reader;

  private final okhttp3.ws.WebSocketListener listener;

  private volatile boolean writerSentClose;

  private boolean writerWantsClose;

  private boolean readerSentClose;

  private final java.util.concurrent.atomic.AtomicBoolean connectionClosed;

  public okhttp3.internal.ws.RealWebSocket(boolean, okio.BufferedSource, okio.BufferedSink, java.util.Random, java.util.concurrent.Executor, okhttp3.ws.WebSocketListener, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #8                  // Field connectionClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload         6
      18: putfield      #9                  // Field listener:Lokhttp3/ws/WebSocketListener;
      21: aload_0
      22: new           #10                 // class okhttp3/internal/ws/WebSocketWriter
      25: dup
      26: iload_1
      27: aload_3
      28: aload         4
      30: invokespecial #11                 // Method okhttp3/internal/ws/WebSocketWriter."<init>":(ZLokio/BufferedSink;Ljava/util/Random;)V
      33: putfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      36: aload_0
      37: new           #12                 // class okhttp3/internal/ws/WebSocketReader
      40: dup
      41: iload_1
      42: aload_2
      43: new           #13                 // class okhttp3/internal/ws/RealWebSocket$1
      46: dup
      47: aload_0
      48: aload         6
      50: aload         5
      52: aload         7
      54: invokespecial #14                 // Method okhttp3/internal/ws/RealWebSocket$1."<init>":(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/ws/WebSocketListener;Ljava/util/concurrent/Executor;Ljava/lang/String;)V
      57: invokespecial #15                 // Method okhttp3/internal/ws/WebSocketReader."<init>":(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V
      60: putfield      #16                 // Field reader:Lokhttp3/internal/ws/WebSocketReader;
      63: return

  public boolean readMessage();
    Code:
       0: aload_0
       1: getfield      #16                 // Field reader:Lokhttp3/internal/ws/WebSocketReader;
       4: invokevirtual #17                 // Method okhttp3/internal/ws/WebSocketReader.processNextFrame:()V
       7: aload_0
       8: getfield      #3                  // Field readerSentClose:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
      20: astore_1
      21: aload_0
      22: aload_1
      23: invokespecial #19                 // Method readerErrorClose:(Ljava/io/IOException;)V
      26: iconst_0
      27: ireturn
    Exception table:
       from    to  target type
           0    19    20   Class java/io/IOException

  public void sendMessage(okhttp3.RequestBody) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #21                 // String message == null
      10: invokespecial #22                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #23                 // Field writerSentClose:Z
      18: ifeq          31
      21: new           #24                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #25                 // String closed
      27: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #27                 // Field writerWantsClose:Z
      35: ifeq          48
      38: new           #24                 // class java/lang/IllegalStateException
      41: dup
      42: ldc           #28                 // String must call close()
      44: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: invokevirtual #29                 // Method okhttp3/RequestBody.contentType:()Lokhttp3/MediaType;
      52: astore_2
      53: aload_2
      54: ifnonnull     67
      57: new           #30                 // class java/lang/IllegalArgumentException
      60: dup
      61: ldc           #31                 // String Message content type was null. Must use WebSocket.TEXT or WebSocket.BINARY.
      63: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_2
      68: invokevirtual #33                 // Method okhttp3/MediaType.subtype:()Ljava/lang/String;
      71: astore_3
      72: getstatic     #34                 // Field okhttp3/ws/WebSocket.TEXT:Lokhttp3/MediaType;
      75: invokevirtual #33                 // Method okhttp3/MediaType.subtype:()Ljava/lang/String;
      78: aload_3
      79: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          91
      85: iconst_1
      86: istore        4
      88: goto          157
      91: getstatic     #36                 // Field okhttp3/ws/WebSocket.BINARY:Lokhttp3/MediaType;
      94: invokevirtual #33                 // Method okhttp3/MediaType.subtype:()Ljava/lang/String;
      97: aload_3
      98: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     101: ifeq          110
     104: iconst_2
     105: istore        4
     107: goto          157
     110: new           #30                 // class java/lang/IllegalArgumentException
     113: dup
     114: new           #37                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #39                 // String Unknown message content type:
     123: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_2
     127: invokevirtual #41                 // Method okhttp3/MediaType.type:()Ljava/lang/String;
     130: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #42                 // String /
     135: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_2
     139: invokevirtual #33                 // Method okhttp3/MediaType.subtype:()Ljava/lang/String;
     142: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #43                 // String . Must use WebSocket.TEXT or WebSocket.BINARY.
     147: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: aload_0
     158: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
     161: iload         4
     163: aload_1
     164: invokevirtual #45                 // Method okhttp3/RequestBody.contentLength:()J
     167: invokevirtual #46                 // Method okhttp3/internal/ws/WebSocketWriter.newMessageSink:(IJ)Lokio/Sink;
     170: invokestatic  #47                 // Method okio/Okio.buffer:(Lokio/Sink;)Lokio/BufferedSink;
     173: astore        5
     175: aload_1
     176: aload         5
     178: invokevirtual #48                 // Method okhttp3/RequestBody.writeTo:(Lokio/BufferedSink;)V
     181: aload         5
     183: invokeinterface #49,  1           // InterfaceMethod okio/BufferedSink.close:()V
     188: goto          201
     191: astore        6
     193: aload_0
     194: iconst_1
     195: putfield      #27                 // Field writerWantsClose:Z
     198: aload         6
     200: athrow
     201: return
    Exception table:
       from    to  target type
         175   188   191   Class java/io/IOException

  public void sendPing(okio.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field writerSentClose:Z
       4: ifeq          17
       7: new           #24                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String closed
      13: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #27                 // Field writerWantsClose:Z
      21: ifeq          34
      24: new           #24                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #28                 // String must call close()
      30: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      38: aload_1
      39: invokevirtual #50                 // Method okhttp3/internal/ws/WebSocketWriter.writePing:(Lokio/Buffer;)V
      42: goto          53
      45: astore_2
      46: aload_0
      47: iconst_1
      48: putfield      #27                 // Field writerWantsClose:Z
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
          34    42    45   Class java/io/IOException

  public void sendPong(okio.Buffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field writerSentClose:Z
       4: ifeq          17
       7: new           #24                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String closed
      13: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #27                 // Field writerWantsClose:Z
      21: ifeq          34
      24: new           #24                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #28                 // String must call close()
      30: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      38: aload_1
      39: invokevirtual #51                 // Method okhttp3/internal/ws/WebSocketWriter.writePong:(Lokio/Buffer;)V
      42: goto          53
      45: astore_2
      46: aload_0
      47: iconst_1
      48: putfield      #27                 // Field writerWantsClose:Z
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
          34    42    45   Class java/io/IOException

  public void close(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field writerSentClose:Z
       4: ifeq          17
       7: new           #24                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String closed
      13: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #23                 // Field writerSentClose:Z
      22: aload_0
      23: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      26: iload_1
      27: aload_2
      28: invokevirtual #52                 // Method okhttp3/internal/ws/WebSocketWriter.writeClose:(ILjava/lang/String;)V
      31: goto          58
      34: astore_3
      35: aload_0
      36: getfield      #8                  // Field connectionClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_0
      40: iconst_1
      41: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      44: ifeq          56
      47: aload_0
      48: invokevirtual #54                 // Method close:()V
      51: goto          56
      54: astore        4
      56: aload_3
      57: athrow
      58: return
    Exception table:
       from    to  target type
          22    31    34   Class java/io/IOException
          47    51    54   Class java/io/IOException

  private void peerClose(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field writerSentClose:Z
       4: ifne          20
       7: aload_0
       8: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      11: iload_1
      12: aload_2
      13: invokevirtual #52                 // Method okhttp3/internal/ws/WebSocketWriter.writeClose:(ILjava/lang/String;)V
      16: goto          20
      19: astore_3
      20: aload_0
      21: getfield      #8                  // Field connectionClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_0
      25: iconst_1
      26: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      29: ifeq          40
      32: aload_0
      33: invokevirtual #54                 // Method close:()V
      36: goto          40
      39: astore_3
      40: aload_0
      41: getfield      #9                  // Field listener:Lokhttp3/ws/WebSocketListener;
      44: iload_1
      45: aload_2
      46: invokeinterface #55,  3           // InterfaceMethod okhttp3/ws/WebSocketListener.onClose:(ILjava/lang/String;)V
      51: return
    Exception table:
       from    to  target type
           7    16    19   Class java/io/IOException
          32    36    39   Class java/io/IOException

  private void readerErrorClose(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #23                 // Field writerSentClose:Z
       4: ifne          29
       7: aload_1
       8: instanceof    #56                 // class java/net/ProtocolException
      11: ifeq          29
      14: aload_0
      15: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
      18: sipush        1002
      21: aconst_null
      22: invokevirtual #52                 // Method okhttp3/internal/ws/WebSocketWriter.writeClose:(ILjava/lang/String;)V
      25: goto          29
      28: astore_2
      29: aload_0
      30: getfield      #8                  // Field connectionClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      33: iconst_0
      34: iconst_1
      35: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      38: ifeq          49
      41: aload_0
      42: invokevirtual #54                 // Method close:()V
      45: goto          49
      48: astore_2
      49: aload_0
      50: getfield      #9                  // Field listener:Lokhttp3/ws/WebSocketListener;
      53: aload_1
      54: aconst_null
      55: invokeinterface #58,  3           // InterfaceMethod okhttp3/ws/WebSocketListener.onFailure:(Ljava/io/IOException;Lokhttp3/Response;)V
      60: return
    Exception table:
       from    to  target type
          14    25    28   Class java/io/IOException
          41    45    48   Class java/io/IOException

  protected abstract void close() throws java.io.IOException;

  static okhttp3.internal.ws.WebSocketWriter access$000(okhttp3.internal.ws.RealWebSocket);
    Code:
       0: aload_0
       1: getfield      #4                  // Field writer:Lokhttp3/internal/ws/WebSocketWriter;
       4: areturn

  static boolean access$102(okhttp3.internal.ws.RealWebSocket, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field readerSentClose:Z
       6: ireturn

  static void access$200(okhttp3.internal.ws.RealWebSocket, int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method peerClose:(ILjava/lang/String;)V
       6: return
}
