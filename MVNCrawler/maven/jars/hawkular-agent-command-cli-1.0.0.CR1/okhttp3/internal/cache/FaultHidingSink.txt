Compiled from "FaultHidingSink.java"
class okhttp3.internal.cache.FaultHidingSink extends okio.ForwardingSink {
  private boolean hasErrors;

  public okhttp3.internal.cache.FaultHidingSink(okio.Sink);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method okio/ForwardingSink."<init>":(Lokio/Sink;)V
       5: return

  public void write(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasErrors:Z
       4: ifeq          13
       7: aload_1
       8: lload_2
       9: invokevirtual #3                  // Method okio/Buffer.skip:(J)V
      12: return
      13: aload_0
      14: aload_1
      15: lload_2
      16: invokespecial #4                  // Method okio/ForwardingSink.write:(Lokio/Buffer;J)V
      19: goto          35
      22: astore        4
      24: aload_0
      25: iconst_1
      26: putfield      #2                  // Field hasErrors:Z
      29: aload_0
      30: aload         4
      32: invokevirtual #6                  // Method onException:(Ljava/io/IOException;)V
      35: return
    Exception table:
       from    to  target type
          13    19    22   Class java/io/IOException

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasErrors:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #7                  // Method okio/ForwardingSink.flush:()V
      12: goto          26
      15: astore_1
      16: aload_0
      17: iconst_1
      18: putfield      #2                  // Field hasErrors:Z
      21: aload_0
      22: aload_1
      23: invokevirtual #6                  // Method onException:(Ljava/io/IOException;)V
      26: return
    Exception table:
       from    to  target type
           8    12    15   Class java/io/IOException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasErrors:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #8                  // Method okio/ForwardingSink.close:()V
      12: goto          26
      15: astore_1
      16: aload_0
      17: iconst_1
      18: putfield      #2                  // Field hasErrors:Z
      21: aload_0
      22: aload_1
      23: invokevirtual #6                  // Method onException:(Ljava/io/IOException;)V
      26: return
    Exception table:
       from    to  target type
           8    12    15   Class java/io/IOException

  protected void onException(java.io.IOException);
    Code:
       0: return
}
