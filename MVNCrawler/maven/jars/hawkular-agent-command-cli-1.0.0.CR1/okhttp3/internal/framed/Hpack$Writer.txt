Compiled from "Hpack.java"
final class okhttp3.internal.framed.Hpack$Writer {
  private static final int SETTINGS_HEADER_TABLE_SIZE;

  private static final int SETTINGS_HEADER_TABLE_SIZE_LIMIT;

  private final okio.Buffer out;

  private int smallestHeaderTableSizeSetting;

  private boolean emitDynamicTableSizeUpdate;

  int headerTableSizeSetting;

  int maxDynamicTableByteCount;

  okhttp3.internal.framed.Header[] dynamicTable;

  int nextHeaderIndex;

  int headerCount;

  int dynamicTableByteCount;

  okhttp3.internal.framed.Hpack$Writer(okio.Buffer);
    Code:
       0: aload_0
       1: sipush        4096
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(ILokio/Buffer;)V
       8: return

  okhttp3.internal.framed.Hpack$Writer(int, okio.Buffer);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #6                  // int 2147483647
       7: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      10: aload_0
      11: bipush        8
      13: anewarray     #8                  // class okhttp3/internal/framed/Header
      16: putfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      19: aload_0
      20: aload_0
      21: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      24: arraylength
      25: iconst_1
      26: isub
      27: putfield      #10                 // Field nextHeaderIndex:I
      30: aload_0
      31: iconst_0
      32: putfield      #11                 // Field headerCount:I
      35: aload_0
      36: iconst_0
      37: putfield      #12                 // Field dynamicTableByteCount:I
      40: aload_0
      41: iload_1
      42: putfield      #13                 // Field headerTableSizeSetting:I
      45: aload_0
      46: iload_1
      47: putfield      #14                 // Field maxDynamicTableByteCount:I
      50: aload_0
      51: aload_2
      52: putfield      #15                 // Field out:Lokio/Buffer;
      55: return

  private void clearDynamicTable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
       4: aconst_null
       5: invokestatic  #16                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: aload_0
      10: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      13: arraylength
      14: iconst_1
      15: isub
      16: putfield      #10                 // Field nextHeaderIndex:I
      19: aload_0
      20: iconst_0
      21: putfield      #11                 // Field headerCount:I
      24: aload_0
      25: iconst_0
      26: putfield      #12                 // Field dynamicTableByteCount:I
      29: return

  private int evictToRecoverBytes(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: ifle          136
       6: aload_0
       7: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      10: arraylength
      11: iconst_1
      12: isub
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #10                 // Field nextHeaderIndex:I
      19: if_icmplt     75
      22: iload_1
      23: ifle          75
      26: iload_1
      27: aload_0
      28: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      31: iload_3
      32: aaload
      33: getfield      #17                 // Field okhttp3/internal/framed/Header.hpackSize:I
      36: isub
      37: istore_1
      38: aload_0
      39: dup
      40: getfield      #12                 // Field dynamicTableByteCount:I
      43: aload_0
      44: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      47: iload_3
      48: aaload
      49: getfield      #17                 // Field okhttp3/internal/framed/Header.hpackSize:I
      52: isub
      53: putfield      #12                 // Field dynamicTableByteCount:I
      56: aload_0
      57: dup
      58: getfield      #11                 // Field headerCount:I
      61: iconst_1
      62: isub
      63: putfield      #11                 // Field headerCount:I
      66: iinc          2, 1
      69: iinc          3, -1
      72: goto          14
      75: aload_0
      76: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      79: aload_0
      80: getfield      #10                 // Field nextHeaderIndex:I
      83: iconst_1
      84: iadd
      85: aload_0
      86: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      89: aload_0
      90: getfield      #10                 // Field nextHeaderIndex:I
      93: iconst_1
      94: iadd
      95: iload_2
      96: iadd
      97: aload_0
      98: getfield      #11                 // Field headerCount:I
     101: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     104: aload_0
     105: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     108: aload_0
     109: getfield      #10                 // Field nextHeaderIndex:I
     112: iconst_1
     113: iadd
     114: aload_0
     115: getfield      #10                 // Field nextHeaderIndex:I
     118: iconst_1
     119: iadd
     120: iload_2
     121: iadd
     122: aconst_null
     123: invokestatic  #19                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     126: aload_0
     127: dup
     128: getfield      #10                 // Field nextHeaderIndex:I
     131: iload_2
     132: iadd
     133: putfield      #10                 // Field nextHeaderIndex:I
     136: iload_2
     137: ireturn

  private void insertIntoDynamicTable(okhttp3.internal.framed.Header);
    Code:
       0: aload_1
       1: getfield      #17                 // Field okhttp3/internal/framed/Header.hpackSize:I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #14                 // Field maxDynamicTableByteCount:I
      10: if_icmple     18
      13: aload_0
      14: invokespecial #20                 // Method clearDynamicTable:()V
      17: return
      18: aload_0
      19: getfield      #12                 // Field dynamicTableByteCount:I
      22: iload_2
      23: iadd
      24: aload_0
      25: getfield      #14                 // Field maxDynamicTableByteCount:I
      28: isub
      29: istore_3
      30: aload_0
      31: iload_3
      32: invokespecial #21                 // Method evictToRecoverBytes:(I)I
      35: pop
      36: aload_0
      37: getfield      #11                 // Field headerCount:I
      40: iconst_1
      41: iadd
      42: aload_0
      43: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      46: arraylength
      47: if_icmple     99
      50: aload_0
      51: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      54: arraylength
      55: iconst_2
      56: imul
      57: anewarray     #8                  // class okhttp3/internal/framed/Header
      60: astore        4
      62: aload_0
      63: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      66: iconst_0
      67: aload         4
      69: aload_0
      70: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      73: arraylength
      74: aload_0
      75: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      78: arraylength
      79: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_0
      83: aload_0
      84: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      87: arraylength
      88: iconst_1
      89: isub
      90: putfield      #10                 // Field nextHeaderIndex:I
      93: aload_0
      94: aload         4
      96: putfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      99: aload_0
     100: dup
     101: getfield      #10                 // Field nextHeaderIndex:I
     104: dup_x1
     105: iconst_1
     106: isub
     107: putfield      #10                 // Field nextHeaderIndex:I
     110: istore        4
     112: aload_0
     113: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     116: iload         4
     118: aload_1
     119: aastore
     120: aload_0
     121: dup
     122: getfield      #11                 // Field headerCount:I
     125: iconst_1
     126: iadd
     127: putfield      #11                 // Field headerCount:I
     130: aload_0
     131: dup
     132: getfield      #12                 // Field dynamicTableByteCount:I
     135: iload_2
     136: iadd
     137: putfield      #12                 // Field dynamicTableByteCount:I
     140: return

  void writeHeaders(java.util.List<okhttp3.internal.framed.Header>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field emitDynamicTableSizeUpdate:Z
       4: ifeq          53
       7: aload_0
       8: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      11: aload_0
      12: getfield      #14                 // Field maxDynamicTableByteCount:I
      15: if_icmpge     30
      18: aload_0
      19: aload_0
      20: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      23: bipush        31
      25: bipush        32
      27: invokevirtual #23                 // Method writeInt:(III)V
      30: aload_0
      31: iconst_0
      32: putfield      #22                 // Field emitDynamicTableSizeUpdate:Z
      35: aload_0
      36: ldc           #6                  // int 2147483647
      38: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      41: aload_0
      42: aload_0
      43: getfield      #14                 // Field maxDynamicTableByteCount:I
      46: bipush        31
      48: bipush        32
      50: invokevirtual #23                 // Method writeInt:(III)V
      53: iconst_0
      54: istore_2
      55: aload_1
      56: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      61: istore_3
      62: iload_2
      63: iload_3
      64: if_icmpge     214
      67: aload_1
      68: iload_2
      69: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #8                  // class okhttp3/internal/framed/Header
      77: astore        4
      79: aload         4
      81: getfield      #26                 // Field okhttp3/internal/framed/Header.name:Lokio/ByteString;
      84: invokevirtual #27                 // Method okio/ByteString.toAsciiLowercase:()Lokio/ByteString;
      87: astore        5
      89: aload         4
      91: getfield      #28                 // Field okhttp3/internal/framed/Header.value:Lokio/ByteString;
      94: astore        6
      96: invokestatic  #29                 // Method okhttp3/internal/framed/Hpack.access$200:()Ljava/util/Map;
      99: aload         5
     101: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #5                  // class java/lang/Integer
     109: astore        7
     111: aload         7
     113: ifnull        139
     116: aload_0
     117: aload         7
     119: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
     122: iconst_1
     123: iadd
     124: bipush        15
     126: iconst_0
     127: invokevirtual #23                 // Method writeInt:(III)V
     130: aload_0
     131: aload         6
     133: invokevirtual #32                 // Method writeByteString:(Lokio/ByteString;)V
     136: goto          208
     139: aload_0
     140: getfield      #9                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     143: aload         4
     145: invokestatic  #33                 // Method okhttp3/internal/Util.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I
     148: istore        8
     150: iload         8
     152: iconst_m1
     153: if_icmpeq     180
     156: aload_0
     157: iload         8
     159: aload_0
     160: getfield      #10                 // Field nextHeaderIndex:I
     163: isub
     164: invokestatic  #34                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
     167: arraylength
     168: iadd
     169: bipush        127
     171: sipush        128
     174: invokevirtual #23                 // Method writeInt:(III)V
     177: goto          208
     180: aload_0
     181: getfield      #15                 // Field out:Lokio/Buffer;
     184: bipush        64
     186: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
     189: pop
     190: aload_0
     191: aload         5
     193: invokevirtual #32                 // Method writeByteString:(Lokio/ByteString;)V
     196: aload_0
     197: aload         6
     199: invokevirtual #32                 // Method writeByteString:(Lokio/ByteString;)V
     202: aload_0
     203: aload         4
     205: invokespecial #36                 // Method insertIntoDynamicTable:(Lokhttp3/internal/framed/Header;)V
     208: iinc          2, 1
     211: goto          62
     214: return

  void writeInt(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     17
       5: aload_0
       6: getfield      #15                 // Field out:Lokio/Buffer;
       9: iload_3
      10: iload_1
      11: ior
      12: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      15: pop
      16: return
      17: aload_0
      18: getfield      #15                 // Field out:Lokio/Buffer;
      21: iload_3
      22: iload_2
      23: ior
      24: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      27: pop
      28: iload_1
      29: iload_2
      30: isub
      31: istore_1
      32: iload_1
      33: sipush        128
      36: if_icmplt     67
      39: iload_1
      40: bipush        127
      42: iand
      43: istore        4
      45: aload_0
      46: getfield      #15                 // Field out:Lokio/Buffer;
      49: iload         4
      51: sipush        128
      54: ior
      55: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      58: pop
      59: iload_1
      60: bipush        7
      62: iushr
      63: istore_1
      64: goto          32
      67: aload_0
      68: getfield      #15                 // Field out:Lokio/Buffer;
      71: iload_1
      72: invokevirtual #35                 // Method okio/Buffer.writeByte:(I)Lokio/Buffer;
      75: pop
      76: return

  void writeByteString(okio.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method okio/ByteString.size:()I
       5: bipush        127
       7: iconst_0
       8: invokevirtual #23                 // Method writeInt:(III)V
      11: aload_0
      12: getfield      #15                 // Field out:Lokio/Buffer;
      15: aload_1
      16: invokevirtual #38                 // Method okio/Buffer.write:(Lokio/ByteString;)Lokio/Buffer;
      19: pop
      20: return

  void setHeaderTableSizeSetting(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field headerTableSizeSetting:I
       5: iload_1
       6: sipush        16384
       9: invokestatic  #39                 // Method java/lang/Math.min:(II)I
      12: istore_2
      13: aload_0
      14: getfield      #14                 // Field maxDynamicTableByteCount:I
      17: iload_2
      18: if_icmpne     22
      21: return
      22: iload_2
      23: aload_0
      24: getfield      #14                 // Field maxDynamicTableByteCount:I
      27: if_icmpge     42
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field smallestHeaderTableSizeSetting:I
      35: iload_2
      36: invokestatic  #39                 // Method java/lang/Math.min:(II)I
      39: putfield      #7                  // Field smallestHeaderTableSizeSetting:I
      42: aload_0
      43: iconst_1
      44: putfield      #22                 // Field emitDynamicTableSizeUpdate:Z
      47: aload_0
      48: iload_2
      49: putfield      #14                 // Field maxDynamicTableByteCount:I
      52: aload_0
      53: invokespecial #40                 // Method adjustDynamicTableByteCount:()V
      56: return

  private void adjustDynamicTableByteCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxDynamicTableByteCount:I
       4: aload_0
       5: getfield      #12                 // Field dynamicTableByteCount:I
       8: if_icmpge     39
      11: aload_0
      12: getfield      #14                 // Field maxDynamicTableByteCount:I
      15: ifne          25
      18: aload_0
      19: invokespecial #20                 // Method clearDynamicTable:()V
      22: goto          39
      25: aload_0
      26: aload_0
      27: getfield      #12                 // Field dynamicTableByteCount:I
      30: aload_0
      31: getfield      #14                 // Field maxDynamicTableByteCount:I
      34: isub
      35: invokespecial #21                 // Method evictToRecoverBytes:(I)I
      38: pop
      39: return
}
