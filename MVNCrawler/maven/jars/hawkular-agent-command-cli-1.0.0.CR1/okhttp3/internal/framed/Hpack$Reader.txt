Compiled from "Hpack.java"
final class okhttp3.internal.framed.Hpack$Reader {
  private final java.util.List<okhttp3.internal.framed.Header> headerList;

  private final okio.BufferedSource source;

  private final int headerTableSizeSetting;

  private int maxDynamicTableByteCount;

  okhttp3.internal.framed.Header[] dynamicTable;

  int nextHeaderIndex;

  int headerCount;

  int dynamicTableByteCount;

  okhttp3.internal.framed.Hpack$Reader(int, okio.Source);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: aload_2
       4: invokespecial #2                  // Method "<init>":(IILokio/Source;)V
       7: return

  okhttp3.internal.framed.Hpack$Reader(int, int, okio.Source);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #6                  // Field headerList:Ljava/util/List;
      15: aload_0
      16: bipush        8
      18: anewarray     #7                  // class okhttp3/internal/framed/Header
      21: putfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      24: aload_0
      25: aload_0
      26: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      29: arraylength
      30: iconst_1
      31: isub
      32: putfield      #9                  // Field nextHeaderIndex:I
      35: aload_0
      36: iconst_0
      37: putfield      #10                 // Field headerCount:I
      40: aload_0
      41: iconst_0
      42: putfield      #11                 // Field dynamicTableByteCount:I
      45: aload_0
      46: iload_1
      47: putfield      #12                 // Field headerTableSizeSetting:I
      50: aload_0
      51: iload_2
      52: putfield      #13                 // Field maxDynamicTableByteCount:I
      55: aload_0
      56: aload_3
      57: invokestatic  #14                 // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
      60: putfield      #15                 // Field source:Lokio/BufferedSource;
      63: return

  int maxDynamicTableByteCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxDynamicTableByteCount:I
       4: ireturn

  private void adjustDynamicTableByteCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxDynamicTableByteCount:I
       4: aload_0
       5: getfield      #11                 // Field dynamicTableByteCount:I
       8: if_icmpge     39
      11: aload_0
      12: getfield      #13                 // Field maxDynamicTableByteCount:I
      15: ifne          25
      18: aload_0
      19: invokespecial #16                 // Method clearDynamicTable:()V
      22: goto          39
      25: aload_0
      26: aload_0
      27: getfield      #11                 // Field dynamicTableByteCount:I
      30: aload_0
      31: getfield      #13                 // Field maxDynamicTableByteCount:I
      34: isub
      35: invokespecial #17                 // Method evictToRecoverBytes:(I)I
      38: pop
      39: return

  private void clearDynamicTable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headerList:Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      13: aconst_null
      14: invokestatic  #19                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_0
      18: aload_0
      19: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      22: arraylength
      23: iconst_1
      24: isub
      25: putfield      #9                  // Field nextHeaderIndex:I
      28: aload_0
      29: iconst_0
      30: putfield      #10                 // Field headerCount:I
      33: aload_0
      34: iconst_0
      35: putfield      #11                 // Field dynamicTableByteCount:I
      38: return

  private int evictToRecoverBytes(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: ifle          114
       6: aload_0
       7: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      10: arraylength
      11: iconst_1
      12: isub
      13: istore_3
      14: iload_3
      15: aload_0
      16: getfield      #9                  // Field nextHeaderIndex:I
      19: if_icmplt     75
      22: iload_1
      23: ifle          75
      26: iload_1
      27: aload_0
      28: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      31: iload_3
      32: aaload
      33: getfield      #20                 // Field okhttp3/internal/framed/Header.hpackSize:I
      36: isub
      37: istore_1
      38: aload_0
      39: dup
      40: getfield      #11                 // Field dynamicTableByteCount:I
      43: aload_0
      44: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      47: iload_3
      48: aaload
      49: getfield      #20                 // Field okhttp3/internal/framed/Header.hpackSize:I
      52: isub
      53: putfield      #11                 // Field dynamicTableByteCount:I
      56: aload_0
      57: dup
      58: getfield      #10                 // Field headerCount:I
      61: iconst_1
      62: isub
      63: putfield      #10                 // Field headerCount:I
      66: iinc          2, 1
      69: iinc          3, -1
      72: goto          14
      75: aload_0
      76: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      79: aload_0
      80: getfield      #9                  // Field nextHeaderIndex:I
      83: iconst_1
      84: iadd
      85: aload_0
      86: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      89: aload_0
      90: getfield      #9                  // Field nextHeaderIndex:I
      93: iconst_1
      94: iadd
      95: iload_2
      96: iadd
      97: aload_0
      98: getfield      #10                 // Field headerCount:I
     101: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     104: aload_0
     105: dup
     106: getfield      #9                  // Field nextHeaderIndex:I
     109: iload_2
     110: iadd
     111: putfield      #9                  // Field nextHeaderIndex:I
     114: iload_2
     115: ireturn

  void readHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field source:Lokio/BufferedSource;
       4: invokeinterface #22,  1           // InterfaceMethod okio/BufferedSource.exhausted:()Z
       9: ifne          222
      12: aload_0
      13: getfield      #15                 // Field source:Lokio/BufferedSource;
      16: invokeinterface #23,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
      21: sipush        255
      24: iand
      25: istore_1
      26: iload_1
      27: sipush        128
      30: if_icmpne     43
      33: new           #24                 // class java/io/IOException
      36: dup
      37: ldc           #25                 // String index == 0
      39: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_1
      44: sipush        128
      47: iand
      48: sipush        128
      51: if_icmpne     72
      54: aload_0
      55: iload_1
      56: bipush        127
      58: invokevirtual #27                 // Method readInt:(II)I
      61: istore_2
      62: aload_0
      63: iload_2
      64: iconst_1
      65: isub
      66: invokespecial #28                 // Method readIndexedHeader:(I)V
      69: goto          219
      72: iload_1
      73: bipush        64
      75: if_icmpne     85
      78: aload_0
      79: invokespecial #29                 // Method readLiteralHeaderWithIncrementalIndexingNewName:()V
      82: goto          219
      85: iload_1
      86: bipush        64
      88: iand
      89: bipush        64
      91: if_icmpne     112
      94: aload_0
      95: iload_1
      96: bipush        63
      98: invokevirtual #27                 // Method readInt:(II)I
     101: istore_2
     102: aload_0
     103: iload_2
     104: iconst_1
     105: isub
     106: invokespecial #30                 // Method readLiteralHeaderWithIncrementalIndexingIndexedName:(I)V
     109: goto          219
     112: iload_1
     113: bipush        32
     115: iand
     116: bipush        32
     118: if_icmpne     187
     121: aload_0
     122: aload_0
     123: iload_1
     124: bipush        31
     126: invokevirtual #27                 // Method readInt:(II)I
     129: putfield      #13                 // Field maxDynamicTableByteCount:I
     132: aload_0
     133: getfield      #13                 // Field maxDynamicTableByteCount:I
     136: iflt          150
     139: aload_0
     140: getfield      #13                 // Field maxDynamicTableByteCount:I
     143: aload_0
     144: getfield      #12                 // Field headerTableSizeSetting:I
     147: if_icmple     180
     150: new           #24                 // class java/io/IOException
     153: dup
     154: new           #31                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     161: ldc           #33                 // String Invalid dynamic table size update
     163: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: getfield      #13                 // Field maxDynamicTableByteCount:I
     170: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     173: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: aload_0
     181: invokespecial #37                 // Method adjustDynamicTableByteCount:()V
     184: goto          219
     187: iload_1
     188: bipush        16
     190: if_icmpeq     197
     193: iload_1
     194: ifne          204
     197: aload_0
     198: invokespecial #38                 // Method readLiteralHeaderWithoutIndexingNewName:()V
     201: goto          219
     204: aload_0
     205: iload_1
     206: bipush        15
     208: invokevirtual #27                 // Method readInt:(II)I
     211: istore_2
     212: aload_0
     213: iload_2
     214: iconst_1
     215: isub
     216: invokespecial #39                 // Method readLiteralHeaderWithoutIndexingIndexedName:(I)V
     219: goto          0
     222: return

  public java.util.List<okhttp3.internal.framed.Header> getAndResetHeaderList();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #6                  // Field headerList:Ljava/util/List;
       8: invokespecial #40                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_0
      13: getfield      #6                  // Field headerList:Ljava/util/List;
      16: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
      21: aload_1
      22: areturn

  private void readIndexedHeader(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method isStaticHeader:(I)Z
       5: ifeq          28
       8: invokestatic  #42                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
      11: iload_1
      12: aaload
      13: astore_2
      14: aload_0
      15: getfield      #6                  // Field headerList:Ljava/util/List;
      18: aload_2
      19: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: goto          99
      28: aload_0
      29: iload_1
      30: invokestatic  #42                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
      33: arraylength
      34: isub
      35: invokespecial #44                 // Method dynamicTableIndex:(I)I
      38: istore_2
      39: iload_2
      40: iflt          54
      43: iload_2
      44: aload_0
      45: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      48: arraylength
      49: iconst_1
      50: isub
      51: if_icmple     83
      54: new           #24                 // class java/io/IOException
      57: dup
      58: new           #31                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #45                 // String Header index too large
      67: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_1
      71: iconst_1
      72: iadd
      73: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: getfield      #6                  // Field headerList:Ljava/util/List;
      87: aload_0
      88: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      91: iload_2
      92: aaload
      93: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: return

  private int dynamicTableIndex(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field nextHeaderIndex:I
       4: iconst_1
       5: iadd
       6: iload_1
       7: iadd
       8: ireturn

  private void readLiteralHeaderWithoutIndexingIndexedName(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method getName:(I)Lokio/ByteString;
       5: astore_2
       6: aload_0
       7: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
      10: astore_3
      11: aload_0
      12: getfield      #6                  // Field headerList:Ljava/util/List;
      15: new           #7                  // class okhttp3/internal/framed/Header
      18: dup
      19: aload_2
      20: aload_3
      21: invokespecial #48                 // Method okhttp3/internal/framed/Header."<init>":(Lokio/ByteString;Lokio/ByteString;)V
      24: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: return

  private void readLiteralHeaderWithoutIndexingNewName() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
       4: invokestatic  #49                 // Method okhttp3/internal/framed/Hpack.access$100:(Lokio/ByteString;)Lokio/ByteString;
       7: astore_1
       8: aload_0
       9: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
      12: astore_2
      13: aload_0
      14: getfield      #6                  // Field headerList:Ljava/util/List;
      17: new           #7                  // class okhttp3/internal/framed/Header
      20: dup
      21: aload_1
      22: aload_2
      23: invokespecial #48                 // Method okhttp3/internal/framed/Header."<init>":(Lokio/ByteString;Lokio/ByteString;)V
      26: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  private void readLiteralHeaderWithIncrementalIndexingIndexedName(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method getName:(I)Lokio/ByteString;
       5: astore_2
       6: aload_0
       7: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
      10: astore_3
      11: aload_0
      12: iconst_m1
      13: new           #7                  // class okhttp3/internal/framed/Header
      16: dup
      17: aload_2
      18: aload_3
      19: invokespecial #48                 // Method okhttp3/internal/framed/Header."<init>":(Lokio/ByteString;Lokio/ByteString;)V
      22: invokespecial #50                 // Method insertIntoDynamicTable:(ILokhttp3/internal/framed/Header;)V
      25: return

  private void readLiteralHeaderWithIncrementalIndexingNewName() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
       4: invokestatic  #49                 // Method okhttp3/internal/framed/Hpack.access$100:(Lokio/ByteString;)Lokio/ByteString;
       7: astore_1
       8: aload_0
       9: invokevirtual #47                 // Method readByteString:()Lokio/ByteString;
      12: astore_2
      13: aload_0
      14: iconst_m1
      15: new           #7                  // class okhttp3/internal/framed/Header
      18: dup
      19: aload_1
      20: aload_2
      21: invokespecial #48                 // Method okhttp3/internal/framed/Header."<init>":(Lokio/ByteString;Lokio/ByteString;)V
      24: invokespecial #50                 // Method insertIntoDynamicTable:(ILokhttp3/internal/framed/Header;)V
      27: return

  private okio.ByteString getName(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method isStaticHeader:(I)Z
       5: ifeq          17
       8: invokestatic  #42                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
      11: iload_1
      12: aaload
      13: getfield      #51                 // Field okhttp3/internal/framed/Header.name:Lokio/ByteString;
      16: areturn
      17: aload_0
      18: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      21: aload_0
      22: iload_1
      23: invokestatic  #42                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
      26: arraylength
      27: isub
      28: invokespecial #44                 // Method dynamicTableIndex:(I)I
      31: aaload
      32: getfield      #51                 // Field okhttp3/internal/framed/Header.name:Lokio/ByteString;
      35: areturn

  private boolean isStaticHeader(int);
    Code:
       0: iload_1
       1: iflt          18
       4: iload_1
       5: invokestatic  #42                 // Method okhttp3/internal/framed/Hpack.access$000:()[Lokhttp3/internal/framed/Header;
       8: arraylength
       9: iconst_1
      10: isub
      11: if_icmpgt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void insertIntoDynamicTable(int, okhttp3.internal.framed.Header);
    Code:
       0: aload_0
       1: getfield      #6                  // Field headerList:Ljava/util/List;
       4: aload_2
       5: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_2
      12: getfield      #20                 // Field okhttp3/internal/framed/Header.hpackSize:I
      15: istore_3
      16: iload_1
      17: iconst_m1
      18: if_icmpeq     37
      21: iload_3
      22: aload_0
      23: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      26: aload_0
      27: iload_1
      28: invokespecial #44                 // Method dynamicTableIndex:(I)I
      31: aaload
      32: getfield      #20                 // Field okhttp3/internal/framed/Header.hpackSize:I
      35: isub
      36: istore_3
      37: iload_3
      38: aload_0
      39: getfield      #13                 // Field maxDynamicTableByteCount:I
      42: if_icmple     50
      45: aload_0
      46: invokespecial #16                 // Method clearDynamicTable:()V
      49: return
      50: aload_0
      51: getfield      #11                 // Field dynamicTableByteCount:I
      54: iload_3
      55: iadd
      56: aload_0
      57: getfield      #13                 // Field maxDynamicTableByteCount:I
      60: isub
      61: istore        4
      63: aload_0
      64: iload         4
      66: invokespecial #17                 // Method evictToRecoverBytes:(I)I
      69: istore        5
      71: iload_1
      72: iconst_m1
      73: if_icmpne     171
      76: aload_0
      77: getfield      #10                 // Field headerCount:I
      80: iconst_1
      81: iadd
      82: aload_0
      83: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      86: arraylength
      87: if_icmple     139
      90: aload_0
      91: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
      94: arraylength
      95: iconst_2
      96: imul
      97: anewarray     #7                  // class okhttp3/internal/framed/Header
     100: astore        6
     102: aload_0
     103: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     106: iconst_0
     107: aload         6
     109: aload_0
     110: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     113: arraylength
     114: aload_0
     115: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     118: arraylength
     119: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     122: aload_0
     123: aload_0
     124: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     127: arraylength
     128: iconst_1
     129: isub
     130: putfield      #9                  // Field nextHeaderIndex:I
     133: aload_0
     134: aload         6
     136: putfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     139: aload_0
     140: dup
     141: getfield      #9                  // Field nextHeaderIndex:I
     144: dup_x1
     145: iconst_1
     146: isub
     147: putfield      #9                  // Field nextHeaderIndex:I
     150: istore_1
     151: aload_0
     152: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     155: iload_1
     156: aload_2
     157: aastore
     158: aload_0
     159: dup
     160: getfield      #10                 // Field headerCount:I
     163: iconst_1
     164: iadd
     165: putfield      #10                 // Field headerCount:I
     168: goto          189
     171: iload_1
     172: aload_0
     173: iload_1
     174: invokespecial #44                 // Method dynamicTableIndex:(I)I
     177: iload         5
     179: iadd
     180: iadd
     181: istore_1
     182: aload_0
     183: getfield      #8                  // Field dynamicTable:[Lokhttp3/internal/framed/Header;
     186: iload_1
     187: aload_2
     188: aastore
     189: aload_0
     190: dup
     191: getfield      #11                 // Field dynamicTableByteCount:I
     194: iload_3
     195: iadd
     196: putfield      #11                 // Field dynamicTableByteCount:I
     199: return

  private int readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field source:Lokio/BufferedSource;
       4: invokeinterface #23,  1           // InterfaceMethod okio/BufferedSource.readByte:()B
       9: sipush        255
      12: iand
      13: ireturn

  int readInt(int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iload_2
       2: iand
       3: istore_3
       4: iload_3
       5: iload_2
       6: if_icmpge     11
       9: iload_3
      10: ireturn
      11: iload_2
      12: istore        4
      14: iconst_0
      15: istore        5
      17: aload_0
      18: invokespecial #52                 // Method readByte:()I
      21: istore        6
      23: iload         6
      25: sipush        128
      28: iand
      29: ifeq          51
      32: iload         4
      34: iload         6
      36: bipush        127
      38: iand
      39: iload         5
      41: ishl
      42: iadd
      43: istore        4
      45: iinc          5, 7
      48: goto          64
      51: iload         4
      53: iload         6
      55: iload         5
      57: ishl
      58: iadd
      59: istore        4
      61: goto          67
      64: goto          17
      67: iload         4
      69: ireturn

  okio.ByteString readByteString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #52                 // Method readByte:()I
       4: istore_1
       5: iload_1
       6: sipush        128
       9: iand
      10: sipush        128
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: aload_0
      23: iload_1
      24: bipush        127
      26: invokevirtual #27                 // Method readInt:(II)I
      29: istore_3
      30: iload_2
      31: ifeq          55
      34: invokestatic  #53                 // Method okhttp3/internal/framed/Huffman.get:()Lokhttp3/internal/framed/Huffman;
      37: aload_0
      38: getfield      #15                 // Field source:Lokio/BufferedSource;
      41: iload_3
      42: i2l
      43: invokeinterface #54,  3           // InterfaceMethod okio/BufferedSource.readByteArray:(J)[B
      48: invokevirtual #55                 // Method okhttp3/internal/framed/Huffman.decode:([B)[B
      51: invokestatic  #56                 // Method okio/ByteString.of:([B)Lokio/ByteString;
      54: areturn
      55: aload_0
      56: getfield      #15                 // Field source:Lokio/BufferedSource;
      59: iload_3
      60: i2l
      61: invokeinterface #57,  3           // InterfaceMethod okio/BufferedSource.readByteString:(J)Lokio/ByteString;
      66: areturn
}
