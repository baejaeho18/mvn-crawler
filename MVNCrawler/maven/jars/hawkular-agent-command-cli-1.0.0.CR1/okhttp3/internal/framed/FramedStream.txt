Compiled from "FramedStream.java"
public final class okhttp3.internal.framed.FramedStream {
  long unacknowledgedBytesRead;

  long bytesLeftInWriteWindow;

  private final int id;

  private final okhttp3.internal.framed.FramedConnection connection;

  private final java.util.List<okhttp3.internal.framed.Header> requestHeaders;

  private java.util.List<okhttp3.internal.framed.Header> responseHeaders;

  private final okhttp3.internal.framed.FramedStream$FramedDataSource source;

  final okhttp3.internal.framed.FramedStream$FramedDataSink sink;

  private final okhttp3.internal.framed.FramedStream$StreamTimeout readTimeout;

  private final okhttp3.internal.framed.FramedStream$StreamTimeout writeTimeout;

  private okhttp3.internal.framed.ErrorCode errorCode;

  static final boolean $assertionsDisabled;

  okhttp3.internal.framed.FramedStream(int, okhttp3.internal.framed.FramedConnection, boolean, boolean, java.util.List<okhttp3.internal.framed.Header>);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #11                 // Field unacknowledgedBytesRead:J
       9: aload_0
      10: new           #12                 // class okhttp3/internal/framed/FramedStream$StreamTimeout
      13: dup
      14: aload_0
      15: invokespecial #13                 // Method okhttp3/internal/framed/FramedStream$StreamTimeout."<init>":(Lokhttp3/internal/framed/FramedStream;)V
      18: putfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
      21: aload_0
      22: new           #12                 // class okhttp3/internal/framed/FramedStream$StreamTimeout
      25: dup
      26: aload_0
      27: invokespecial #13                 // Method okhttp3/internal/framed/FramedStream$StreamTimeout."<init>":(Lokhttp3/internal/framed/FramedStream;)V
      30: putfield      #3                  // Field writeTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
      33: aload_0
      34: aconst_null
      35: putfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      38: aload_2
      39: ifnonnull     52
      42: new           #14                 // class java/lang/NullPointerException
      45: dup
      46: ldc           #15                 // String connection == null
      48: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload         5
      54: ifnonnull     67
      57: new           #14                 // class java/lang/NullPointerException
      60: dup
      61: ldc           #17                 // String requestHeaders == null
      63: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: iload_1
      69: putfield      #8                  // Field id:I
      72: aload_0
      73: aload_2
      74: putfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      77: aload_0
      78: aload_2
      79: getfield      #18                 // Field okhttp3/internal/framed/FramedConnection.peerSettings:Lokhttp3/internal/framed/Settings;
      82: ldc           #19                 // int 65536
      84: invokevirtual #20                 // Method okhttp3/internal/framed/Settings.getInitialWindowSize:(I)I
      87: i2l
      88: putfield      #21                 // Field bytesLeftInWriteWindow:J
      91: aload_0
      92: new           #22                 // class okhttp3/internal/framed/FramedStream$FramedDataSource
      95: dup
      96: aload_0
      97: aload_2
      98: getfield      #23                 // Field okhttp3/internal/framed/FramedConnection.okHttpSettings:Lokhttp3/internal/framed/Settings;
     101: ldc           #19                 // int 65536
     103: invokevirtual #20                 // Method okhttp3/internal/framed/Settings.getInitialWindowSize:(I)I
     106: i2l
     107: aconst_null
     108: invokespecial #24                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource."<init>":(Lokhttp3/internal/framed/FramedStream;JLokhttp3/internal/framed/FramedStream$1;)V
     111: putfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
     114: aload_0
     115: new           #26                 // class okhttp3/internal/framed/FramedStream$FramedDataSink
     118: dup
     119: aload_0
     120: invokespecial #27                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink."<init>":(Lokhttp3/internal/framed/FramedStream;)V
     123: putfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
     126: aload_0
     127: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
     130: iload         4
     132: invokestatic  #29                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$102:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;Z)Z
     135: pop
     136: aload_0
     137: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
     140: iload_3
     141: invokestatic  #30                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$202:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;Z)Z
     144: pop
     145: aload_0
     146: aload         5
     148: putfield      #31                 // Field requestHeaders:Ljava/util/List;
     151: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field id:I
       4: ireturn

  public synchronized boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      13: invokestatic  #32                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$100:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z
      16: ifne          29
      19: aload_0
      20: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      23: invokestatic  #33                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$300:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z
      26: ifeq          58
      29: aload_0
      30: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      33: invokestatic  #34                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$200:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      36: ifne          49
      39: aload_0
      40: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      43: invokestatic  #35                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$400:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      46: ifeq          58
      49: aload_0
      50: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      53: ifnull        58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public boolean isLocallyInitiated();
    Code:
       0: aload_0
       1: getfield      #8                  // Field id:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: aload_0
      17: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      20: getfield      #37                 // Field okhttp3/internal/framed/FramedConnection.client:Z
      23: iload_1
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public okhttp3.internal.framed.FramedConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
       4: areturn

  public java.util.List<okhttp3.internal.framed.Header> getRequestHeaders();
    Code:
       0: aload_0
       1: getfield      #31                 // Field requestHeaders:Ljava/util/List;
       4: areturn

  public synchronized java.util.List<okhttp3.internal.framed.Header> getResponseHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
       4: invokevirtual #38                 // Method okhttp3/internal/framed/FramedStream$StreamTimeout.enter:()V
       7: aload_0
       8: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      11: ifnonnull     28
      14: aload_0
      15: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      18: ifnonnull     28
      21: aload_0
      22: invokespecial #5                  // Method waitForIo:()V
      25: goto          7
      28: aload_0
      29: getfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
      32: invokevirtual #39                 // Method okhttp3/internal/framed/FramedStream$StreamTimeout.exitAndThrowIfTimedOut:()V
      35: goto          48
      38: astore_1
      39: aload_0
      40: getfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
      43: invokevirtual #39                 // Method okhttp3/internal/framed/FramedStream$StreamTimeout.exitAndThrowIfTimedOut:()V
      46: aload_1
      47: athrow
      48: aload_0
      49: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      52: ifnull        60
      55: aload_0
      56: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      59: areturn
      60: new           #40                 // class okhttp3/internal/framed/StreamResetException
      63: dup
      64: aload_0
      65: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      68: invokespecial #41                 // Method okhttp3/internal/framed/StreamResetException."<init>":(Lokhttp3/internal/framed/ErrorCode;)V
      71: athrow
    Exception table:
       from    to  target type
           7    28    38   any

  public synchronized okhttp3.internal.framed.ErrorCode getErrorCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
       4: areturn

  public void reply(java.util.List<okhttp3.internal.framed.Header>, boolean) throws java.io.IOException;
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_3
      23: aload_0
      24: dup
      25: astore        4
      27: monitorenter
      28: aload_1
      29: ifnonnull     42
      32: new           #14                 // class java/lang/NullPointerException
      35: dup
      36: ldc           #46                 // String responseHeaders == null
      38: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      46: ifnull        59
      49: new           #47                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #48                 // String reply already sent
      55: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: aload_1
      61: putfield      #36                 // Field responseHeaders:Ljava/util/List;
      64: iload_2
      65: ifne          79
      68: aload_0
      69: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      72: iconst_1
      73: invokestatic  #30                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$202:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;Z)Z
      76: pop
      77: iconst_1
      78: istore_3
      79: aload         4
      81: monitorexit
      82: goto          93
      85: astore        5
      87: aload         4
      89: monitorexit
      90: aload         5
      92: athrow
      93: aload_0
      94: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      97: aload_0
      98: getfield      #8                  // Field id:I
     101: iload_3
     102: aload_1
     103: invokevirtual #50                 // Method okhttp3/internal/framed/FramedConnection.writeSynReply:(IZLjava/util/List;)V
     106: iload_3
     107: ifeq          117
     110: aload_0
     111: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
     114: invokevirtual #51                 // Method okhttp3/internal/framed/FramedConnection.flush:()V
     117: return
    Exception table:
       from    to  target type
          28    82    85   any
          85    90    85   any

  public okio.Timeout readTimeout();
    Code:
       0: aload_0
       1: getfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
       4: areturn

  public okio.Timeout writeTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
       4: areturn

  public okio.Source getSource();
    Code:
       0: aload_0
       1: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
       4: areturn

  public okio.Sink getSink();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #36                 // Field responseHeaders:Ljava/util/List;
       8: ifnonnull     28
      11: aload_0
      12: invokevirtual #52                 // Method isLocallyInitiated:()Z
      15: ifne          28
      18: new           #47                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #53                 // String reply before requesting the sink
      24: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: aload_0
      39: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      42: areturn
    Exception table:
       from    to  target type
           4    30    33   any
          33    36    33   any

  public void close(okhttp3.internal.framed.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method closeInternal:(Lokhttp3/internal/framed/ErrorCode;)Z
       5: ifne          9
       8: return
       9: aload_0
      10: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      13: aload_0
      14: getfield      #8                  // Field id:I
      17: aload_1
      18: invokevirtual #55                 // Method okhttp3/internal/framed/FramedConnection.writeSynReset:(ILokhttp3/internal/framed/ErrorCode;)V
      21: return

  public void closeLater(okhttp3.internal.framed.ErrorCode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method closeInternal:(Lokhttp3/internal/framed/ErrorCode;)Z
       5: ifne          9
       8: return
       9: aload_0
      10: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      13: aload_0
      14: getfield      #8                  // Field id:I
      17: aload_1
      18: invokevirtual #56                 // Method okhttp3/internal/framed/FramedConnection.writeSynResetLater:(ILokhttp3/internal/framed/ErrorCode;)V
      21: return

  private boolean closeInternal(okhttp3.internal.framed.ErrorCode);
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: dup
      23: astore_2
      24: monitorenter
      25: aload_0
      26: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      29: ifnull        36
      32: iconst_0
      33: aload_2
      34: monitorexit
      35: ireturn
      36: aload_0
      37: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      40: invokestatic  #32                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$100:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z
      43: ifeq          60
      46: aload_0
      47: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      50: invokestatic  #34                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$200:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      53: ifeq          60
      56: iconst_0
      57: aload_2
      58: monitorexit
      59: ireturn
      60: aload_0
      61: aload_1
      62: putfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      65: aload_0
      66: invokevirtual #57                 // Method java/lang/Object.notifyAll:()V
      69: aload_2
      70: monitorexit
      71: goto          79
      74: astore_3
      75: aload_2
      76: monitorexit
      77: aload_3
      78: athrow
      79: aload_0
      80: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      83: aload_0
      84: getfield      #8                  // Field id:I
      87: invokevirtual #58                 // Method okhttp3/internal/framed/FramedConnection.removeStream:(I)Lokhttp3/internal/framed/FramedStream;
      90: pop
      91: iconst_1
      92: ireturn
    Exception table:
       from    to  target type
          25    35    74   any
          36    59    74   any
          60    71    74   any
          74    77    74   any

  void receiveHeaders(java.util.List<okhttp3.internal.framed.Header>, okhttp3.internal.framed.HeadersMode);
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aconst_null
      22: astore_3
      23: iconst_1
      24: istore        4
      26: aload_0
      27: dup
      28: astore        5
      30: monitorenter
      31: aload_0
      32: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      35: ifnonnull     70
      38: aload_2
      39: invokevirtual #59                 // Method okhttp3/internal/framed/HeadersMode.failIfHeadersAbsent:()Z
      42: ifeq          52
      45: getstatic     #60                 // Field okhttp3/internal/framed/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/framed/ErrorCode;
      48: astore_3
      49: goto          120
      52: aload_0
      53: aload_1
      54: putfield      #36                 // Field responseHeaders:Ljava/util/List;
      57: aload_0
      58: invokevirtual #61                 // Method isOpen:()Z
      61: istore        4
      63: aload_0
      64: invokevirtual #57                 // Method java/lang/Object.notifyAll:()V
      67: goto          120
      70: aload_2
      71: invokevirtual #62                 // Method okhttp3/internal/framed/HeadersMode.failIfHeadersPresent:()Z
      74: ifeq          84
      77: getstatic     #63                 // Field okhttp3/internal/framed/ErrorCode.STREAM_IN_USE:Lokhttp3/internal/framed/ErrorCode;
      80: astore_3
      81: goto          120
      84: new           #64                 // class java/util/ArrayList
      87: dup
      88: invokespecial #65                 // Method java/util/ArrayList."<init>":()V
      91: astore        6
      93: aload         6
      95: aload_0
      96: getfield      #36                 // Field responseHeaders:Ljava/util/List;
      99: invokeinterface #66,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     104: pop
     105: aload         6
     107: aload_1
     108: invokeinterface #66,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     113: pop
     114: aload_0
     115: aload         6
     117: putfield      #36                 // Field responseHeaders:Ljava/util/List;
     120: aload         5
     122: monitorexit
     123: goto          134
     126: astore        7
     128: aload         5
     130: monitorexit
     131: aload         7
     133: athrow
     134: aload_3
     135: ifnull        146
     138: aload_0
     139: aload_3
     140: invokevirtual #67                 // Method closeLater:(Lokhttp3/internal/framed/ErrorCode;)V
     143: goto          163
     146: iload         4
     148: ifne          163
     151: aload_0
     152: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
     155: aload_0
     156: getfield      #8                  // Field id:I
     159: invokevirtual #58                 // Method okhttp3/internal/framed/FramedConnection.removeStream:(I)Lokhttp3/internal/framed/FramedStream;
     162: pop
     163: return
    Exception table:
       from    to  target type
          31   123   126   any
         126   131   126   any

  void receiveData(okio.BufferedSource, int) throws java.io.IOException;
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      25: aload_1
      26: iload_2
      27: i2l
      28: invokevirtual #68                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.receive:(Lokio/BufferedSource;J)V
      31: return

  void receiveFin();
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: dup
      23: astore_2
      24: monitorenter
      25: aload_0
      26: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      29: iconst_1
      30: invokestatic  #29                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$102:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;Z)Z
      33: pop
      34: aload_0
      35: invokevirtual #61                 // Method isOpen:()Z
      38: istore_1
      39: aload_0
      40: invokevirtual #57                 // Method java/lang/Object.notifyAll:()V
      43: aload_2
      44: monitorexit
      45: goto          53
      48: astore_3
      49: aload_2
      50: monitorexit
      51: aload_3
      52: athrow
      53: iload_1
      54: ifne          69
      57: aload_0
      58: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
      61: aload_0
      62: getfield      #8                  // Field id:I
      65: invokevirtual #58                 // Method okhttp3/internal/framed/FramedConnection.removeStream:(I)Lokhttp3/internal/framed/FramedStream;
      68: pop
      69: return
    Exception table:
       from    to  target type
          25    45    48   any
          48    51    48   any

  synchronized void receiveRstStream(okhttp3.internal.framed.ErrorCode);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
       4: ifnonnull     16
       7: aload_0
       8: aload_1
       9: putfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      12: aload_0
      13: invokevirtual #57                 // Method java/lang/Object.notifyAll:()V
      16: return

  private void cancelStreamIfNecessary() throws java.io.IOException;
    Code:
       0: getstatic     #42                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #43                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #44                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #45                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_0
      26: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      29: invokestatic  #32                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$100:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z
      32: ifne          69
      35: aload_0
      36: getfield      #25                 // Field source:Lokhttp3/internal/framed/FramedStream$FramedDataSource;
      39: invokestatic  #33                 // Method okhttp3/internal/framed/FramedStream$FramedDataSource.access$300:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z
      42: ifeq          69
      45: aload_0
      46: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      49: invokestatic  #34                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$200:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      52: ifne          65
      55: aload_0
      56: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      59: invokestatic  #35                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$400:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore_2
      71: aload_0
      72: invokevirtual #61                 // Method isOpen:()Z
      75: istore_1
      76: aload_3
      77: monitorexit
      78: goto          88
      81: astore        4
      83: aload_3
      84: monitorexit
      85: aload         4
      87: athrow
      88: iload_2
      89: ifeq          102
      92: aload_0
      93: getstatic     #69                 // Field okhttp3/internal/framed/ErrorCode.CANCEL:Lokhttp3/internal/framed/ErrorCode;
      96: invokevirtual #70                 // Method close:(Lokhttp3/internal/framed/ErrorCode;)V
      99: goto          118
     102: iload_1
     103: ifne          118
     106: aload_0
     107: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
     110: aload_0
     111: getfield      #8                  // Field id:I
     114: invokevirtual #58                 // Method okhttp3/internal/framed/FramedConnection.removeStream:(I)Lokhttp3/internal/framed/FramedStream;
     117: pop
     118: return
    Exception table:
       from    to  target type
          25    78    81   any
          81    85    81   any

  void addBytesToWriteWindow(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #21                 // Field bytesLeftInWriteWindow:J
       5: lload_1
       6: ladd
       7: putfield      #21                 // Field bytesLeftInWriteWindow:J
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          20
      16: aload_0
      17: invokevirtual #57                 // Method java/lang/Object.notifyAll:()V
      20: return

  private void checkOutNotClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
       4: invokestatic  #35                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$400:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
       7: ifeq          20
      10: new           #71                 // class java/io/IOException
      13: dup
      14: ldc           #72                 // String stream closed
      16: invokespecial #73                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #28                 // Field sink:Lokhttp3/internal/framed/FramedStream$FramedDataSink;
      24: invokestatic  #34                 // Method okhttp3/internal/framed/FramedStream$FramedDataSink.access$200:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z
      27: ifeq          40
      30: new           #71                 // class java/io/IOException
      33: dup
      34: ldc           #74                 // String stream finished
      36: invokespecial #73                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      44: ifnull        59
      47: new           #40                 // class okhttp3/internal/framed/StreamResetException
      50: dup
      51: aload_0
      52: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
      55: invokespecial #41                 // Method okhttp3/internal/framed/StreamResetException."<init>":(Lokhttp3/internal/framed/ErrorCode;)V
      58: athrow
      59: return

  private void waitForIo() throws java.io.InterruptedIOException;
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method java/lang/Object.wait:()V
       4: goto          16
       7: astore_1
       8: new           #77                 // class java/io/InterruptedIOException
      11: dup
      12: invokespecial #78                 // Method java/io/InterruptedIOException."<init>":()V
      15: athrow
      16: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException

  static okhttp3.internal.framed.FramedConnection access$500(okhttp3.internal.framed.FramedStream);
    Code:
       0: aload_0
       1: getfield      #9                  // Field connection:Lokhttp3/internal/framed/FramedConnection;
       4: areturn

  static int access$600(okhttp3.internal.framed.FramedStream);
    Code:
       0: aload_0
       1: getfield      #8                  // Field id:I
       4: ireturn

  static okhttp3.internal.framed.FramedStream$StreamTimeout access$700(okhttp3.internal.framed.FramedStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field readTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
       4: areturn

  static okhttp3.internal.framed.ErrorCode access$800(okhttp3.internal.framed.FramedStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorCode:Lokhttp3/internal/framed/ErrorCode;
       4: areturn

  static void access$900(okhttp3.internal.framed.FramedStream) throws java.io.InterruptedIOException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method waitForIo:()V
       4: return

  static void access$1000(okhttp3.internal.framed.FramedStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method cancelStreamIfNecessary:()V
       4: return

  static okhttp3.internal.framed.FramedStream$StreamTimeout access$1100(okhttp3.internal.framed.FramedStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeTimeout:Lokhttp3/internal/framed/FramedStream$StreamTimeout;
       4: areturn

  static void access$1200(okhttp3.internal.framed.FramedStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkOutNotClosed:()V
       4: return

  static {};
    Code:
       0: ldc           #79                 // class okhttp3/internal/framed/FramedStream
       2: invokevirtual #80                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #42                 // Field $assertionsDisabled:Z
      16: return
}
