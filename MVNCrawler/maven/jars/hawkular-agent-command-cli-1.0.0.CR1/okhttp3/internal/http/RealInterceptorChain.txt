Compiled from "RealInterceptorChain.java"
public final class okhttp3.internal.http.RealInterceptorChain implements okhttp3.Interceptor$Chain {
  private final java.util.List<okhttp3.Interceptor> interceptors;

  private final okhttp3.internal.connection.StreamAllocation streamAllocation;

  private final okhttp3.internal.http.HttpStream httpStream;

  private final okhttp3.Connection connection;

  private final int index;

  private final okhttp3.Request request;

  private int calls;

  public okhttp3.internal.http.RealInterceptorChain(java.util.List<okhttp3.Interceptor>, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpStream, okhttp3.Connection, int, okhttp3.Request);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field interceptors:Ljava/util/List;
       9: aload_0
      10: aload         4
      12: putfield      #3                  // Field connection:Lokhttp3/Connection;
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      20: aload_0
      21: aload_3
      22: putfield      #5                  // Field httpStream:Lokhttp3/internal/http/HttpStream;
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field index:I
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field request:Lokhttp3/Request;
      37: return

  public okhttp3.Connection connection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connection:Lokhttp3/Connection;
       4: areturn

  public okhttp3.internal.connection.StreamAllocation streamAllocation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       4: areturn

  public okhttp3.internal.http.HttpStream httpStream();
    Code:
       0: aload_0
       1: getfield      #5                  // Field httpStream:Lokhttp3/internal/http/HttpStream;
       4: areturn

  public okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #7                  // Field request:Lokhttp3/Request;
       4: areturn

  public okhttp3.Response proceed(okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       6: aload_0
       7: getfield      #5                  // Field httpStream:Lokhttp3/internal/http/HttpStream;
      10: aload_0
      11: getfield      #3                  // Field connection:Lokhttp3/Connection;
      14: invokevirtual #8                  // Method proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;)Lokhttp3/Response;
      17: areturn

  public okhttp3.Response proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpStream, okhttp3.Connection) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field index:I
       4: aload_0
       5: getfield      #2                  // Field interceptors:Ljava/util/List;
       8: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      13: if_icmplt     24
      16: new           #10                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: dup
      26: getfield      #12                 // Field calls:I
      29: iconst_1
      30: iadd
      31: putfield      #12                 // Field calls:I
      34: aload_0
      35: getfield      #5                  // Field httpStream:Lokhttp3/internal/http/HttpStream;
      38: ifnull        98
      41: aload_0
      42: aload_1
      43: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      46: invokespecial #14                 // Method sameConnection:(Lokhttp3/HttpUrl;)Z
      49: ifne          98
      52: new           #15                 // class java/lang/IllegalStateException
      55: dup
      56: new           #16                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #18                 // String network interceptor
      65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #2                  // Field interceptors:Ljava/util/List;
      72: aload_0
      73: getfield      #6                  // Field index:I
      76: iconst_1
      77: isub
      78: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #22                 // String  must retain the same host and port
      88: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: getfield      #5                  // Field httpStream:Lokhttp3/internal/http/HttpStream;
     102: ifnull        159
     105: aload_0
     106: getfield      #12                 // Field calls:I
     109: iconst_1
     110: if_icmple     159
     113: new           #15                 // class java/lang/IllegalStateException
     116: dup
     117: new           #16                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #18                 // String network interceptor
     126: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: getfield      #2                  // Field interceptors:Ljava/util/List;
     133: aload_0
     134: getfield      #6                  // Field index:I
     137: iconst_1
     138: isub
     139: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     144: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     147: ldc           #25                 // String  must call proceed() exactly once
     149: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: new           #26                 // class okhttp3/internal/http/RealInterceptorChain
     162: dup
     163: aload_0
     164: getfield      #2                  // Field interceptors:Ljava/util/List;
     167: aload_2
     168: aload_3
     169: aload         4
     171: aload_0
     172: getfield      #6                  // Field index:I
     175: iconst_1
     176: iadd
     177: aload_1
     178: invokespecial #27                 // Method "<init>":(Ljava/util/List;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpStream;Lokhttp3/Connection;ILokhttp3/Request;)V
     181: astore        5
     183: aload_0
     184: getfield      #2                  // Field interceptors:Ljava/util/List;
     187: aload_0
     188: getfield      #6                  // Field index:I
     191: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     196: checkcast     #28                 // class okhttp3/Interceptor
     199: astore        6
     201: aload         6
     203: aload         5
     205: invokeinterface #29,  2           // InterfaceMethod okhttp3/Interceptor.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
     210: astore        7
     212: aload_3
     213: ifnull        276
     216: aload_0
     217: getfield      #6                  // Field index:I
     220: iconst_1
     221: iadd
     222: aload_0
     223: getfield      #2                  // Field interceptors:Ljava/util/List;
     226: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
     231: if_icmpge     276
     234: aload         5
     236: getfield      #12                 // Field calls:I
     239: iconst_1
     240: if_icmpeq     276
     243: new           #15                 // class java/lang/IllegalStateException
     246: dup
     247: new           #16                 // class java/lang/StringBuilder
     250: dup
     251: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     254: ldc           #18                 // String network interceptor
     256: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: aload         6
     261: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     264: ldc           #25                 // String  must call proceed() exactly once
     266: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     272: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     275: athrow
     276: aload         7
     278: ifnonnull     314
     281: new           #30                 // class java/lang/NullPointerException
     284: dup
     285: new           #16                 // class java/lang/StringBuilder
     288: dup
     289: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     292: ldc           #31                 // String interceptor
     294: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: aload         6
     299: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     302: ldc           #32                 // String  returned null
     304: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     310: invokespecial #33                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     313: athrow
     314: aload         7
     316: areturn

  private boolean sameConnection(okhttp3.HttpUrl);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
       4: aload_0
       5: getfield      #3                  // Field connection:Lokhttp3/Connection;
       8: invokeinterface #35,  1           // InterfaceMethod okhttp3/Connection.route:()Lokhttp3/Route;
      13: invokevirtual #36                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      16: invokevirtual #37                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      19: invokevirtual #34                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      22: invokevirtual #38                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          57
      28: aload_1
      29: invokevirtual #39                 // Method okhttp3/HttpUrl.port:()I
      32: aload_0
      33: getfield      #3                  // Field connection:Lokhttp3/Connection;
      36: invokeinterface #35,  1           // InterfaceMethod okhttp3/Connection.route:()Lokhttp3/Route;
      41: invokevirtual #36                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      44: invokevirtual #37                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      47: invokevirtual #39                 // Method okhttp3/HttpUrl.port:()I
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
}
