Compiled from "HttpHeaders.java"
public final class okhttp3.internal.http.HttpHeaders {
  private okhttp3.internal.http.HttpHeaders();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static long contentLength(okhttp3.Response);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method okhttp3/Response.headers:()Lokhttp3/Headers;
       4: invokestatic  #5                  // Method contentLength:(Lokhttp3/Headers;)J
       7: lreturn

  public static long contentLength(okhttp3.Headers);
    Code:
       0: aload_0
       1: ldc           #6                  // String Content-Length
       3: invokevirtual #7                  // Method okhttp3/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #8                  // Method stringToLong:(Ljava/lang/String;)J
       9: lreturn

  private static long stringToLong(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: ldc2_w        #9                  // long -1l
       7: lreturn
       8: aload_0
       9: invokestatic  #11                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      12: lreturn
      13: astore_1
      14: ldc2_w        #9                  // long -1l
      17: lreturn
    Exception table:
       from    to  target type
           8    12    13   Class java/lang/NumberFormatException

  public static boolean varyMatches(okhttp3.Response, okhttp3.Headers, okhttp3.Request);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method varyFields:(Lokhttp3/Response;)Ljava/util/Set;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_3
      20: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #17                 // class java/lang/String
      28: astore        4
      30: aload_1
      31: aload         4
      33: invokevirtual #18                 // Method okhttp3/Headers.values:(Ljava/lang/String;)Ljava/util/List;
      36: aload_2
      37: aload         4
      39: invokevirtual #19                 // Method okhttp3/Request.headers:(Ljava/lang/String;)Ljava/util/List;
      42: invokestatic  #20                 // Method okhttp3/internal/Util.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: goto          10
      53: iconst_1
      54: ireturn

  public static boolean hasVaryAll(okhttp3.Response);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method okhttp3/Response.headers:()Lokhttp3/Headers;
       4: invokestatic  #21                 // Method hasVaryAll:(Lokhttp3/Headers;)Z
       7: ireturn

  public static boolean hasVaryAll(okhttp3.Headers);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method varyFields:(Lokhttp3/Headers;)Ljava/util/Set;
       4: ldc           #23                 // String *
       6: invokeinterface #24,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ireturn

  private static java.util.Set<java.lang.String> varyFields(okhttp3.Response);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method okhttp3/Response.headers:()Lokhttp3/Headers;
       4: invokestatic  #22                 // Method varyFields:(Lokhttp3/Headers;)Ljava/util/Set;
       7: areturn

  public static java.util.Set<java.lang.String> varyFields(okhttp3.Headers);
    Code:
       0: invokestatic  #25                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: astore_1
       4: iconst_0
       5: istore_2
       6: aload_0
       7: invokevirtual #26                 // Method okhttp3/Headers.size:()I
      10: istore_3
      11: iload_2
      12: iload_3
      13: if_icmpge     114
      16: ldc           #27                 // String Vary
      18: aload_0
      19: iload_2
      20: invokevirtual #28                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      23: invokevirtual #29                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      26: ifne          32
      29: goto          108
      32: aload_0
      33: iload_2
      34: invokevirtual #30                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      37: astore        4
      39: aload_1
      40: invokeinterface #31,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      45: ifeq          59
      48: new           #32                 // class java/util/TreeSet
      51: dup
      52: getstatic     #33                 // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      55: invokespecial #34                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      58: astore_1
      59: aload         4
      61: ldc           #35                 // String ,
      63: invokevirtual #36                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      66: astore        5
      68: aload         5
      70: arraylength
      71: istore        6
      73: iconst_0
      74: istore        7
      76: iload         7
      78: iload         6
      80: if_icmpge     108
      83: aload         5
      85: iload         7
      87: aaload
      88: astore        8
      90: aload_1
      91: aload         8
      93: invokevirtual #37                 // Method java/lang/String.trim:()Ljava/lang/String;
      96: invokeinterface #38,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     101: pop
     102: iinc          7, 1
     105: goto          76
     108: iinc          2, 1
     111: goto          11
     114: aload_1
     115: areturn

  public static okhttp3.Headers varyHeaders(okhttp3.Response);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method okhttp3/Response.networkResponse:()Lokhttp3/Response;
       4: invokevirtual #40                 // Method okhttp3/Response.request:()Lokhttp3/Request;
       7: invokevirtual #41                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      10: astore_1
      11: aload_0
      12: invokevirtual #4                  // Method okhttp3/Response.headers:()Lokhttp3/Headers;
      15: astore_2
      16: aload_1
      17: aload_2
      18: invokestatic  #42                 // Method varyHeaders:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;
      21: areturn

  public static okhttp3.Headers varyHeaders(okhttp3.Headers, okhttp3.Headers);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method varyFields:(Lokhttp3/Headers;)Ljava/util/Set;
       4: astore_2
       5: aload_2
       6: invokeinterface #31,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifeq          25
      14: new           #43                 // class okhttp3/Headers$Builder
      17: dup
      18: invokespecial #44                 // Method okhttp3/Headers$Builder."<init>":()V
      21: invokevirtual #45                 // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      24: areturn
      25: new           #43                 // class okhttp3/Headers$Builder
      28: dup
      29: invokespecial #44                 // Method okhttp3/Headers$Builder."<init>":()V
      32: astore_3
      33: iconst_0
      34: istore        4
      36: aload_0
      37: invokevirtual #26                 // Method okhttp3/Headers.size:()I
      40: istore        5
      42: iload         4
      44: iload         5
      46: if_icmpge     87
      49: aload_0
      50: iload         4
      52: invokevirtual #28                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      55: astore        6
      57: aload_2
      58: aload         6
      60: invokeinterface #24,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      65: ifeq          81
      68: aload_3
      69: aload         6
      71: aload_0
      72: iload         4
      74: invokevirtual #30                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      77: invokevirtual #46                 // Method okhttp3/Headers$Builder.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
      80: pop
      81: iinc          4, 1
      84: goto          42
      87: aload_3
      88: invokevirtual #45                 // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      91: areturn

  public static java.util.List<okhttp3.Challenge> parseChallenges(okhttp3.Headers, java.lang.String);
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_0
      11: invokevirtual #26                 // Method okhttp3/Headers.size:()I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     206
      22: aload_1
      23: aload_0
      24: iload_3
      25: invokevirtual #28                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      28: invokevirtual #29                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifne          37
      34: goto          200
      37: aload_0
      38: iload_3
      39: invokevirtual #30                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      42: astore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: aload         5
      51: invokevirtual #49                 // Method java/lang/String.length:()I
      54: if_icmpge     200
      57: iload         6
      59: istore        7
      61: aload         5
      63: iload         6
      65: ldc           #50                 // String
      67: invokestatic  #51                 // Method skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
      70: istore        6
      72: aload         5
      74: iload         7
      76: iload         6
      78: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      81: invokevirtual #37                 // Method java/lang/String.trim:()Ljava/lang/String;
      84: astore        8
      86: aload         5
      88: iload         6
      90: invokestatic  #53                 // Method skipWhitespace:(Ljava/lang/String;I)I
      93: istore        6
      95: aload         5
      97: iconst_1
      98: iload         6
     100: ldc           #54                 // String realm=\"
     102: iconst_0
     103: ldc           #54                 // String realm=\"
     105: invokevirtual #49                 // Method java/lang/String.length:()I
     108: invokevirtual #55                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
     111: ifne          117
     114: goto          200
     117: iload         6
     119: ldc           #54                 // String realm=\"
     121: invokevirtual #49                 // Method java/lang/String.length:()I
     124: iadd
     125: istore        6
     127: iload         6
     129: istore        9
     131: aload         5
     133: iload         6
     135: ldc           #56                 // String \"
     137: invokestatic  #51                 // Method skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
     140: istore        6
     142: aload         5
     144: iload         9
     146: iload         6
     148: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     151: astore        10
     153: iinc          6, 1
     156: aload         5
     158: iload         6
     160: ldc           #35                 // String ,
     162: invokestatic  #51                 // Method skipUntil:(Ljava/lang/String;ILjava/lang/String;)I
     165: istore        6
     167: iinc          6, 1
     170: aload         5
     172: iload         6
     174: invokestatic  #53                 // Method skipWhitespace:(Ljava/lang/String;I)I
     177: istore        6
     179: aload_2
     180: new           #57                 // class okhttp3/Challenge
     183: dup
     184: aload         8
     186: aload         10
     188: invokespecial #58                 // Method okhttp3/Challenge."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     191: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     196: pop
     197: goto          47
     200: iinc          3, 1
     203: goto          16
     206: aload_2
     207: areturn

  public static void receiveHeaders(okhttp3.CookieJar, okhttp3.HttpUrl, okhttp3.Headers);
    Code:
       0: aload_0
       1: getstatic     #60                 // Field okhttp3/CookieJar.NO_COOKIES:Lokhttp3/CookieJar;
       4: if_acmpne     8
       7: return
       8: aload_1
       9: aload_2
      10: invokestatic  #61                 // Method okhttp3/Cookie.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;
      13: astore_3
      14: aload_3
      15: invokeinterface #62,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: aload_1
      26: aload_3
      27: invokeinterface #63,  3           // InterfaceMethod okhttp3/CookieJar.saveFromResponse:(Lokhttp3/HttpUrl;Ljava/util/List;)V
      32: return

  public static boolean hasBody(okhttp3.Response);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method okhttp3/Response.request:()Lokhttp3/Request;
       4: invokevirtual #64                 // Method okhttp3/Request.method:()Ljava/lang/String;
       7: ldc           #65                 // String HEAD
       9: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #67                 // Method okhttp3/Response.code:()I
      21: istore_1
      22: iload_1
      23: bipush        100
      25: if_icmplt     35
      28: iload_1
      29: sipush        200
      32: if_icmplt     51
      35: iload_1
      36: sipush        204
      39: if_icmpeq     51
      42: iload_1
      43: sipush        304
      46: if_icmpeq     51
      49: iconst_1
      50: ireturn
      51: aload_0
      52: invokestatic  #68                 // Method contentLength:(Lokhttp3/Response;)J
      55: ldc2_w        #9                  // long -1l
      58: lcmp
      59: ifne          76
      62: ldc           #69                 // String chunked
      64: aload_0
      65: ldc           #70                 // String Transfer-Encoding
      67: invokevirtual #71                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      70: invokevirtual #29                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      73: ifeq          78
      76: iconst_1
      77: ireturn
      78: iconst_0
      79: ireturn

  public static int skipUntil(java.lang.String, int, java.lang.String);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #49                 // Method java/lang/String.length:()I
       5: if_icmpge     30
       8: aload_2
       9: aload_0
      10: iload_1
      11: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      14: invokevirtual #73                 // Method java/lang/String.indexOf:(I)I
      17: iconst_m1
      18: if_icmpeq     24
      21: goto          30
      24: iinc          1, 1
      27: goto          0
      30: iload_1
      31: ireturn

  public static int skipWhitespace(java.lang.String, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #49                 // Method java/lang/String.length:()I
       5: if_icmpge     35
       8: aload_0
       9: iload_1
      10: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      13: istore_2
      14: iload_2
      15: bipush        32
      17: if_icmpeq     29
      20: iload_2
      21: bipush        9
      23: if_icmpeq     29
      26: goto          35
      29: iinc          1, 1
      32: goto          0
      35: iload_1
      36: ireturn

  public static int parseSeconds(java.lang.String, int);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
       4: lstore_2
       5: lload_2
       6: ldc2_w        #75                 // long 2147483647l
       9: lcmp
      10: ifle          16
      13: ldc           #77                 // int 2147483647
      15: ireturn
      16: lload_2
      17: lconst_0
      18: lcmp
      19: ifge          24
      22: iconst_0
      23: ireturn
      24: lload_2
      25: l2i
      26: ireturn
      27: astore_2
      28: iload_1
      29: ireturn
    Exception table:
       from    to  target type
           0    15    27   Class java/lang/NumberFormatException
          16    23    27   Class java/lang/NumberFormatException
          24    26    27   Class java/lang/NumberFormatException
}
