Compiled from "ConnectionPool.java"
public final class okhttp3.ConnectionPool {
  private static final java.util.concurrent.Executor executor;

  private final int maxIdleConnections;

  private final long keepAliveDurationNs;

  private final java.lang.Runnable cleanupRunnable;

  private final java.util.Deque<okhttp3.internal.connection.RealConnection> connections;

  final okhttp3.internal.connection.RouteDatabase routeDatabase;

  boolean cleanupRunning;

  static final boolean $assertionsDisabled;

  public okhttp3.ConnectionPool();
    Code:
       0: aload_0
       1: iconst_5
       2: ldc2_w        #2                  // long 5l
       5: getstatic     #4                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       8: invokespecial #5                  // Method "<init>":(IJLjava/util/concurrent/TimeUnit;)V
      11: return

  public okhttp3.ConnectionPool(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class okhttp3/ConnectionPool$1
       8: dup
       9: aload_0
      10: invokespecial #8                  // Method okhttp3/ConnectionPool$1."<init>":(Lokhttp3/ConnectionPool;)V
      13: putfield      #9                  // Field cleanupRunnable:Ljava/lang/Runnable;
      16: aload_0
      17: new           #10                 // class java/util/ArrayDeque
      20: dup
      21: invokespecial #11                 // Method java/util/ArrayDeque."<init>":()V
      24: putfield      #12                 // Field connections:Ljava/util/Deque;
      27: aload_0
      28: new           #13                 // class okhttp3/internal/connection/RouteDatabase
      31: dup
      32: invokespecial #14                 // Method okhttp3/internal/connection/RouteDatabase."<init>":()V
      35: putfield      #15                 // Field routeDatabase:Lokhttp3/internal/connection/RouteDatabase;
      38: aload_0
      39: iload_1
      40: putfield      #16                 // Field maxIdleConnections:I
      43: aload_0
      44: aload         4
      46: lload_2
      47: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      50: putfield      #18                 // Field keepAliveDurationNs:J
      53: lload_2
      54: lconst_0
      55: lcmp
      56: ifgt          86
      59: new           #19                 // class java/lang/IllegalArgumentException
      62: dup
      63: new           #20                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #22                 // String keepAliveDuration <= 0:
      72: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: lload_2
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      79: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: return

  public synchronized int idleConnectionCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #12                 // Field connections:Ljava/util/Deque;
       6: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #30                 // class okhttp3/internal/connection/RealConnection
      30: astore_3
      31: aload_3
      32: getfield      #31                 // Field okhttp3/internal/connection/RealConnection.allocations:Ljava/util/List;
      35: invokeinterface #32,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      40: ifeq          46
      43: iinc          1, 1
      46: goto          12
      49: iload_1
      50: ireturn

  public synchronized int connectionCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field connections:Ljava/util/Deque;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Deque.size:()I
       9: ireturn

  okhttp3.internal.connection.RealConnection get(okhttp3.Address, okhttp3.internal.connection.StreamAllocation);
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #35                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #36                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #37                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #12                 // Field connections:Ljava/util/Deque;
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_3
      32: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          104
      40: aload_3
      41: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #30                 // class okhttp3/internal/connection/RealConnection
      49: astore        4
      51: aload         4
      53: getfield      #31                 // Field okhttp3/internal/connection/RealConnection.allocations:Ljava/util/List;
      56: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      61: aload         4
      63: getfield      #39                 // Field okhttp3/internal/connection/RealConnection.allocationLimit:I
      66: if_icmpge     101
      69: aload_1
      70: aload         4
      72: invokevirtual #40                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
      75: getfield      #41                 // Field okhttp3/Route.address:Lokhttp3/Address;
      78: invokevirtual #42                 // Method okhttp3/Address.equals:(Ljava/lang/Object;)Z
      81: ifeq          101
      84: aload         4
      86: getfield      #43                 // Field okhttp3/internal/connection/RealConnection.noNewStreams:Z
      89: ifne          101
      92: aload_2
      93: aload         4
      95: invokevirtual #44                 // Method okhttp3/internal/connection/StreamAllocation.acquire:(Lokhttp3/internal/connection/RealConnection;)V
      98: aload         4
     100: areturn
     101: goto          31
     104: aconst_null
     105: areturn

  void put(okhttp3.internal.connection.RealConnection);
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #35                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #36                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #37                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #45                 // Field cleanupRunning:Z
      25: ifne          45
      28: aload_0
      29: iconst_1
      30: putfield      #45                 // Field cleanupRunning:Z
      33: getstatic     #46                 // Field executor:Ljava/util/concurrent/Executor;
      36: aload_0
      37: getfield      #9                  // Field cleanupRunnable:Ljava/lang/Runnable;
      40: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      45: aload_0
      46: getfield      #12                 // Field connections:Ljava/util/Deque;
      49: aload_1
      50: invokeinterface #48,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      55: pop
      56: return

  boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection);
    Code:
       0: getstatic     #34                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #35                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #36                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #37                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: getfield      #43                 // Field okhttp3/internal/connection/RealConnection.noNewStreams:Z
      25: ifne          35
      28: aload_0
      29: getfield      #16                 // Field maxIdleConnections:I
      32: ifne          48
      35: aload_0
      36: getfield      #12                 // Field connections:Ljava/util/Deque;
      39: aload_1
      40: invokeinterface #49,  2           // InterfaceMethod java/util/Deque.remove:(Ljava/lang/Object;)Z
      45: pop
      46: iconst_1
      47: ireturn
      48: aload_0
      49: invokevirtual #50                 // Method java/lang/Object.notifyAll:()V
      52: iconst_0
      53: ireturn

  public void evictAll();
    Code:
       0: new           #51                 // class java/util/ArrayList
       3: dup
       4: invokespecial #52                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #12                 // Field connections:Ljava/util/Deque;
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          79
      31: aload_3
      32: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #30                 // class okhttp3/internal/connection/RealConnection
      40: astore        4
      42: aload         4
      44: getfield      #31                 // Field okhttp3/internal/connection/RealConnection.allocations:Ljava/util/List;
      47: invokeinterface #32,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      52: ifeq          76
      55: aload         4
      57: iconst_1
      58: putfield      #43                 // Field okhttp3/internal/connection/RealConnection.noNewStreams:Z
      61: aload_1
      62: aload         4
      64: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: aload_3
      71: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.remove:()V
      76: goto          22
      79: aload_2
      80: monitorexit
      81: goto          91
      84: astore        5
      86: aload_2
      87: monitorexit
      88: aload         5
      90: athrow
      91: aload_1
      92: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      97: astore_2
      98: aload_2
      99: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifeq          127
     107: aload_2
     108: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #30                 // class okhttp3/internal/connection/RealConnection
     116: astore_3
     117: aload_3
     118: invokevirtual #56                 // Method okhttp3/internal/connection/RealConnection.socket:()Ljava/net/Socket;
     121: invokestatic  #57                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     124: goto          98
     127: return
    Exception table:
       from    to  target type
          12    81    84   any
          84    88    84   any

  long cleanup(long);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: aconst_null
       6: astore        5
       8: ldc2_w        #59                 // long -9223372036854775808l
      11: lstore        6
      13: aload_0
      14: dup
      15: astore        8
      17: monitorenter
      18: aload_0
      19: getfield      #12                 // Field connections:Ljava/util/Deque;
      22: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      27: astore        9
      29: aload         9
      31: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          98
      39: aload         9
      41: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #30                 // class okhttp3/internal/connection/RealConnection
      49: astore        10
      51: aload_0
      52: aload         10
      54: lload_1
      55: invokespecial #61                 // Method pruneAndGetAllocationCount:(Lokhttp3/internal/connection/RealConnection;J)I
      58: ifle          67
      61: iinc          3, 1
      64: goto          29
      67: iinc          4, 1
      70: lload_1
      71: aload         10
      73: getfield      #62                 // Field okhttp3/internal/connection/RealConnection.idleAtNanos:J
      76: lsub
      77: lstore        11
      79: lload         11
      81: lload         6
      83: lcmp
      84: ifle          95
      87: lload         11
      89: lstore        6
      91: aload         10
      93: astore        5
      95: goto          29
      98: lload         6
     100: aload_0
     101: getfield      #18                 // Field keepAliveDurationNs:J
     104: lcmp
     105: ifge          117
     108: iload         4
     110: aload_0
     111: getfield      #16                 // Field maxIdleConnections:I
     114: if_icmple     132
     117: aload_0
     118: getfield      #12                 // Field connections:Ljava/util/Deque;
     121: aload         5
     123: invokeinterface #49,  2           // InterfaceMethod java/util/Deque.remove:(Ljava/lang/Object;)Z
     128: pop
     129: goto          172
     132: iload         4
     134: ifle          148
     137: aload_0
     138: getfield      #18                 // Field keepAliveDurationNs:J
     141: lload         6
     143: lsub
     144: aload         8
     146: monitorexit
     147: lreturn
     148: iload_3
     149: ifle          160
     152: aload_0
     153: getfield      #18                 // Field keepAliveDurationNs:J
     156: aload         8
     158: monitorexit
     159: lreturn
     160: aload_0
     161: iconst_0
     162: putfield      #45                 // Field cleanupRunning:Z
     165: ldc2_w        #63                 // long -1l
     168: aload         8
     170: monitorexit
     171: lreturn
     172: aload         8
     174: monitorexit
     175: goto          186
     178: astore        13
     180: aload         8
     182: monitorexit
     183: aload         13
     185: athrow
     186: aload         5
     188: invokevirtual #56                 // Method okhttp3/internal/connection/RealConnection.socket:()Ljava/net/Socket;
     191: invokestatic  #57                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     194: lconst_0
     195: lreturn
    Exception table:
       from    to  target type
          18   147   178   any
         148   159   178   any
         160   171   178   any
         172   175   178   any
         178   183   178   any

  private int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection, long);
    Code:
       0: aload_1
       1: getfield      #31                 // Field okhttp3/internal/connection/RealConnection.allocations:Ljava/util/List;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: aload         4
      13: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmpge     130
      21: aload         4
      23: iload         5
      25: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #66                 // class java/lang/ref/Reference
      33: astore        6
      35: aload         6
      37: invokevirtual #67                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      40: ifnull        49
      43: iinc          5, 1
      46: goto          9
      49: invokestatic  #68                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
      52: iconst_5
      53: new           #20                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #69                 // String A connection to
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #40                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
      69: invokevirtual #70                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      72: invokevirtual #71                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      75: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: ldc           #73                 // String  was leaked. Did you forget to close a response body?
      80: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: aconst_null
      87: invokevirtual #74                 // Method okhttp3/internal/platform/Platform.log:(ILjava/lang/String;Ljava/lang/Throwable;)V
      90: aload         4
      92: iload         5
      94: invokeinterface #75,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      99: pop
     100: aload_1
     101: iconst_1
     102: putfield      #43                 // Field okhttp3/internal/connection/RealConnection.noNewStreams:Z
     105: aload         4
     107: invokeinterface #32,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     112: ifeq          127
     115: aload_1
     116: lload_2
     117: aload_0
     118: getfield      #18                 // Field keepAliveDurationNs:J
     121: lsub
     122: putfield      #62                 // Field okhttp3/internal/connection/RealConnection.idleAtNanos:J
     125: iconst_0
     126: ireturn
     127: goto          9
     130: aload         4
     132: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
     137: ireturn

  static {};
    Code:
       0: ldc           #76                 // class okhttp3/ConnectionPool
       2: invokevirtual #77                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #34                 // Field $assertionsDisabled:Z
      16: new           #78                 // class java/util/concurrent/ThreadPoolExecutor
      19: dup
      20: iconst_0
      21: ldc           #80                 // int 2147483647
      23: ldc2_w        #81                 // long 60l
      26: getstatic     #83                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      29: new           #84                 // class java/util/concurrent/SynchronousQueue
      32: dup
      33: invokespecial #85                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      36: ldc           #86                 // String OkHttp ConnectionPool
      38: iconst_1
      39: invokestatic  #87                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
      42: invokespecial #88                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      45: putstatic     #46                 // Field executor:Ljava/util/concurrent/Executor;
      48: return
}
