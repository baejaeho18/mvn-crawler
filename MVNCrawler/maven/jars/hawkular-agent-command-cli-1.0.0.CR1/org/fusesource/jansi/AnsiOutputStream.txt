Compiled from "AnsiOutputStream.java"
public class org.fusesource.jansi.AnsiOutputStream extends java.io.FilterOutputStream {
  public static final byte[] REST_CODE;

  private static final int MAX_ESCAPE_SEQUENCE_LENGTH;

  private byte[] buffer;

  private int pos;

  private int startOfValue;

  private final java.util.ArrayList<java.lang.Object> options;

  private static final int LOOKING_FOR_FIRST_ESC_CHAR;

  private static final int LOOKING_FOR_SECOND_ESC_CHAR;

  private static final int LOOKING_FOR_NEXT_ARG;

  private static final int LOOKING_FOR_STR_ARG_END;

  private static final int LOOKING_FOR_INT_ARG_END;

  private static final int LOOKING_FOR_OSC_COMMAND;

  private static final int LOOKING_FOR_OSC_COMMAND_END;

  private static final int LOOKING_FOR_OSC_PARAM;

  private static final int LOOKING_FOR_ST;

  int state;

  private static final int FIRST_ESC_CHAR;

  private static final int SECOND_ESC_CHAR;

  private static final int SECOND_OSC_CHAR;

  private static final int BEL;

  private static final int SECOND_ST_CHAR;

  protected static final int ERASE_SCREEN_TO_END;

  protected static final int ERASE_SCREEN_TO_BEGINING;

  protected static final int ERASE_SCREEN;

  protected static final int ERASE_LINE_TO_END;

  protected static final int ERASE_LINE_TO_BEGINING;

  protected static final int ERASE_LINE;

  protected static final int ATTRIBUTE_INTENSITY_BOLD;

  protected static final int ATTRIBUTE_INTENSITY_FAINT;

  protected static final int ATTRIBUTE_ITALIC;

  protected static final int ATTRIBUTE_UNDERLINE;

  protected static final int ATTRIBUTE_BLINK_SLOW;

  protected static final int ATTRIBUTE_BLINK_FAST;

  protected static final int ATTRIBUTE_NEGATIVE_ON;

  protected static final int ATTRIBUTE_CONCEAL_ON;

  protected static final int ATTRIBUTE_UNDERLINE_DOUBLE;

  protected static final int ATTRIBUTE_INTENSITY_NORMAL;

  protected static final int ATTRIBUTE_UNDERLINE_OFF;

  protected static final int ATTRIBUTE_BLINK_OFF;

  protected static final int ATTRIBUTE_NEGATIVE_Off;

  protected static final int ATTRIBUTE_CONCEAL_OFF;

  protected static final int BLACK;

  protected static final int RED;

  protected static final int GREEN;

  protected static final int YELLOW;

  protected static final int BLUE;

  protected static final int MAGENTA;

  protected static final int CYAN;

  protected static final int WHITE;

  public org.fusesource.jansi.AnsiOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: bipush        100
       8: newarray       byte
      10: putfield      #2                  // Field buffer:[B
      13: aload_0
      14: iconst_0
      15: putfield      #3                  // Field pos:I
      18: aload_0
      19: new           #4                  // class java/util/ArrayList
      22: dup
      23: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      26: putfield      #6                  // Field options:Ljava/util/ArrayList;
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field state:I
      34: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:I
       4: tableswitch   { // 0 to 8
                     0: 56
                     1: 99
                     2: 153
                     3: 418
                     4: 311
                     5: 510
                     6: 567
                     7: 678
                     8: 770
               default: 853
          }
      56: iload_1
      57: bipush        27
      59: if_icmpne     88
      62: aload_0
      63: getfield      #2                  // Field buffer:[B
      66: aload_0
      67: dup
      68: getfield      #3                  // Field pos:I
      71: dup_x1
      72: iconst_1
      73: iadd
      74: putfield      #3                  // Field pos:I
      77: iload_1
      78: i2b
      79: bastore
      80: aload_0
      81: iconst_1
      82: putfield      #7                  // Field state:I
      85: goto          853
      88: aload_0
      89: getfield      #8                  // Field out:Ljava/io/OutputStream;
      92: iload_1
      93: invokevirtual #9                  // Method java/io/OutputStream.write:(I)V
      96: goto          853
      99: aload_0
     100: getfield      #2                  // Field buffer:[B
     103: aload_0
     104: dup
     105: getfield      #3                  // Field pos:I
     108: dup_x1
     109: iconst_1
     110: iadd
     111: putfield      #3                  // Field pos:I
     114: iload_1
     115: i2b
     116: bastore
     117: iload_1
     118: bipush        91
     120: if_icmpne     131
     123: aload_0
     124: iconst_2
     125: putfield      #7                  // Field state:I
     128: goto          853
     131: iload_1
     132: bipush        93
     134: if_icmpne     145
     137: aload_0
     138: iconst_5
     139: putfield      #7                  // Field state:I
     142: goto          853
     145: aload_0
     146: iconst_0
     147: invokespecial #10                 // Method reset:(Z)V
     150: goto          853
     153: aload_0
     154: getfield      #2                  // Field buffer:[B
     157: aload_0
     158: dup
     159: getfield      #3                  // Field pos:I
     162: dup_x1
     163: iconst_1
     164: iadd
     165: putfield      #3                  // Field pos:I
     168: iload_1
     169: i2b
     170: bastore
     171: bipush        34
     173: iload_1
     174: if_icmpne     195
     177: aload_0
     178: aload_0
     179: getfield      #3                  // Field pos:I
     182: iconst_1
     183: isub
     184: putfield      #11                 // Field startOfValue:I
     187: aload_0
     188: iconst_3
     189: putfield      #7                  // Field state:I
     192: goto          853
     195: bipush        48
     197: iload_1
     198: if_icmpgt     225
     201: iload_1
     202: bipush        57
     204: if_icmpgt     225
     207: aload_0
     208: aload_0
     209: getfield      #3                  // Field pos:I
     212: iconst_1
     213: isub
     214: putfield      #11                 // Field startOfValue:I
     217: aload_0
     218: iconst_4
     219: putfield      #7                  // Field state:I
     222: goto          853
     225: bipush        59
     227: iload_1
     228: if_icmpne     243
     231: aload_0
     232: getfield      #6                  // Field options:Ljava/util/ArrayList;
     235: aconst_null
     236: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     239: pop
     240: goto          853
     243: bipush        63
     245: iload_1
     246: if_icmpne     269
     249: aload_0
     250: getfield      #6                  // Field options:Ljava/util/ArrayList;
     253: new           #13                 // class java/lang/Character
     256: dup
     257: bipush        63
     259: invokespecial #14                 // Method java/lang/Character."<init>":(C)V
     262: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     265: pop
     266: goto          853
     269: bipush        61
     271: iload_1
     272: if_icmpne     295
     275: aload_0
     276: getfield      #6                  // Field options:Ljava/util/ArrayList;
     279: new           #13                 // class java/lang/Character
     282: dup
     283: bipush        61
     285: invokespecial #14                 // Method java/lang/Character."<init>":(C)V
     288: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     291: pop
     292: goto          853
     295: aload_0
     296: aload_0
     297: aload_0
     298: getfield      #6                  // Field options:Ljava/util/ArrayList;
     301: iload_1
     302: invokespecial #15                 // Method processEscapeCommand:(Ljava/util/ArrayList;I)Z
     305: invokespecial #10                 // Method reset:(Z)V
     308: goto          853
     311: aload_0
     312: getfield      #2                  // Field buffer:[B
     315: aload_0
     316: dup
     317: getfield      #3                  // Field pos:I
     320: dup_x1
     321: iconst_1
     322: iadd
     323: putfield      #3                  // Field pos:I
     326: iload_1
     327: i2b
     328: bastore
     329: bipush        48
     331: iload_1
     332: if_icmpgt     341
     335: iload_1
     336: bipush        57
     338: if_icmple     853
     341: new           #16                 // class java/lang/String
     344: dup
     345: aload_0
     346: getfield      #2                  // Field buffer:[B
     349: aload_0
     350: getfield      #11                 // Field startOfValue:I
     353: aload_0
     354: getfield      #3                  // Field pos:I
     357: iconst_1
     358: isub
     359: aload_0
     360: getfield      #11                 // Field startOfValue:I
     363: isub
     364: ldc           #17                 // String UTF-8
     366: invokespecial #18                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     369: astore_2
     370: new           #19                 // class java/lang/Integer
     373: dup
     374: aload_2
     375: invokespecial #20                 // Method java/lang/Integer."<init>":(Ljava/lang/String;)V
     378: astore_3
     379: aload_0
     380: getfield      #6                  // Field options:Ljava/util/ArrayList;
     383: aload_3
     384: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     387: pop
     388: iload_1
     389: bipush        59
     391: if_icmpne     402
     394: aload_0
     395: iconst_2
     396: putfield      #7                  // Field state:I
     399: goto          415
     402: aload_0
     403: aload_0
     404: aload_0
     405: getfield      #6                  // Field options:Ljava/util/ArrayList;
     408: iload_1
     409: invokespecial #15                 // Method processEscapeCommand:(Ljava/util/ArrayList;I)Z
     412: invokespecial #10                 // Method reset:(Z)V
     415: goto          853
     418: aload_0
     419: getfield      #2                  // Field buffer:[B
     422: aload_0
     423: dup
     424: getfield      #3                  // Field pos:I
     427: dup_x1
     428: iconst_1
     429: iadd
     430: putfield      #3                  // Field pos:I
     433: iload_1
     434: i2b
     435: bastore
     436: bipush        34
     438: iload_1
     439: if_icmpeq     853
     442: new           #16                 // class java/lang/String
     445: dup
     446: aload_0
     447: getfield      #2                  // Field buffer:[B
     450: aload_0
     451: getfield      #11                 // Field startOfValue:I
     454: aload_0
     455: getfield      #3                  // Field pos:I
     458: iconst_1
     459: isub
     460: aload_0
     461: getfield      #11                 // Field startOfValue:I
     464: isub
     465: ldc           #17                 // String UTF-8
     467: invokespecial #18                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     470: astore_2
     471: aload_0
     472: getfield      #6                  // Field options:Ljava/util/ArrayList;
     475: aload_2
     476: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     479: pop
     480: iload_1
     481: bipush        59
     483: if_icmpne     494
     486: aload_0
     487: iconst_2
     488: putfield      #7                  // Field state:I
     491: goto          507
     494: aload_0
     495: aload_0
     496: aload_0
     497: getfield      #6                  // Field options:Ljava/util/ArrayList;
     500: iload_1
     501: invokespecial #15                 // Method processEscapeCommand:(Ljava/util/ArrayList;I)Z
     504: invokespecial #10                 // Method reset:(Z)V
     507: goto          853
     510: aload_0
     511: getfield      #2                  // Field buffer:[B
     514: aload_0
     515: dup
     516: getfield      #3                  // Field pos:I
     519: dup_x1
     520: iconst_1
     521: iadd
     522: putfield      #3                  // Field pos:I
     525: iload_1
     526: i2b
     527: bastore
     528: bipush        48
     530: iload_1
     531: if_icmpgt     559
     534: iload_1
     535: bipush        57
     537: if_icmpgt     559
     540: aload_0
     541: aload_0
     542: getfield      #3                  // Field pos:I
     545: iconst_1
     546: isub
     547: putfield      #11                 // Field startOfValue:I
     550: aload_0
     551: bipush        6
     553: putfield      #7                  // Field state:I
     556: goto          853
     559: aload_0
     560: iconst_0
     561: invokespecial #10                 // Method reset:(Z)V
     564: goto          853
     567: aload_0
     568: getfield      #2                  // Field buffer:[B
     571: aload_0
     572: dup
     573: getfield      #3                  // Field pos:I
     576: dup_x1
     577: iconst_1
     578: iadd
     579: putfield      #3                  // Field pos:I
     582: iload_1
     583: i2b
     584: bastore
     585: bipush        59
     587: iload_1
     588: if_icmpne     655
     591: new           #16                 // class java/lang/String
     594: dup
     595: aload_0
     596: getfield      #2                  // Field buffer:[B
     599: aload_0
     600: getfield      #11                 // Field startOfValue:I
     603: aload_0
     604: getfield      #3                  // Field pos:I
     607: iconst_1
     608: isub
     609: aload_0
     610: getfield      #11                 // Field startOfValue:I
     613: isub
     614: ldc           #17                 // String UTF-8
     616: invokespecial #18                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     619: astore_2
     620: new           #19                 // class java/lang/Integer
     623: dup
     624: aload_2
     625: invokespecial #20                 // Method java/lang/Integer."<init>":(Ljava/lang/String;)V
     628: astore_3
     629: aload_0
     630: getfield      #6                  // Field options:Ljava/util/ArrayList;
     633: aload_3
     634: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     637: pop
     638: aload_0
     639: aload_0
     640: getfield      #3                  // Field pos:I
     643: putfield      #11                 // Field startOfValue:I
     646: aload_0
     647: bipush        7
     649: putfield      #7                  // Field state:I
     652: goto          853
     655: bipush        48
     657: iload_1
     658: if_icmpgt     670
     661: iload_1
     662: bipush        57
     664: if_icmpgt     670
     667: goto          853
     670: aload_0
     671: iconst_0
     672: invokespecial #10                 // Method reset:(Z)V
     675: goto          853
     678: aload_0
     679: getfield      #2                  // Field buffer:[B
     682: aload_0
     683: dup
     684: getfield      #3                  // Field pos:I
     687: dup_x1
     688: iconst_1
     689: iadd
     690: putfield      #3                  // Field pos:I
     693: iload_1
     694: i2b
     695: bastore
     696: bipush        7
     698: iload_1
     699: if_icmpne     755
     702: new           #16                 // class java/lang/String
     705: dup
     706: aload_0
     707: getfield      #2                  // Field buffer:[B
     710: aload_0
     711: getfield      #11                 // Field startOfValue:I
     714: aload_0
     715: getfield      #3                  // Field pos:I
     718: iconst_1
     719: isub
     720: aload_0
     721: getfield      #11                 // Field startOfValue:I
     724: isub
     725: ldc           #17                 // String UTF-8
     727: invokespecial #18                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     730: astore_2
     731: aload_0
     732: getfield      #6                  // Field options:Ljava/util/ArrayList;
     735: aload_2
     736: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     739: pop
     740: aload_0
     741: aload_0
     742: aload_0
     743: getfield      #6                  // Field options:Ljava/util/ArrayList;
     746: invokespecial #21                 // Method processOperatingSystemCommand:(Ljava/util/ArrayList;)Z
     749: invokespecial #10                 // Method reset:(Z)V
     752: goto          853
     755: bipush        27
     757: iload_1
     758: if_icmpne     853
     761: aload_0
     762: bipush        8
     764: putfield      #7                  // Field state:I
     767: goto          853
     770: aload_0
     771: getfield      #2                  // Field buffer:[B
     774: aload_0
     775: dup
     776: getfield      #3                  // Field pos:I
     779: dup_x1
     780: iconst_1
     781: iadd
     782: putfield      #3                  // Field pos:I
     785: iload_1
     786: i2b
     787: bastore
     788: bipush        92
     790: iload_1
     791: if_icmpne     847
     794: new           #16                 // class java/lang/String
     797: dup
     798: aload_0
     799: getfield      #2                  // Field buffer:[B
     802: aload_0
     803: getfield      #11                 // Field startOfValue:I
     806: aload_0
     807: getfield      #3                  // Field pos:I
     810: iconst_2
     811: isub
     812: aload_0
     813: getfield      #11                 // Field startOfValue:I
     816: isub
     817: ldc           #17                 // String UTF-8
     819: invokespecial #18                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     822: astore_2
     823: aload_0
     824: getfield      #6                  // Field options:Ljava/util/ArrayList;
     827: aload_2
     828: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     831: pop
     832: aload_0
     833: aload_0
     834: aload_0
     835: getfield      #6                  // Field options:Ljava/util/ArrayList;
     838: invokespecial #21                 // Method processOperatingSystemCommand:(Ljava/util/ArrayList;)Z
     841: invokespecial #10                 // Method reset:(Z)V
     844: goto          853
     847: aload_0
     848: bipush        7
     850: putfield      #7                  // Field state:I
     853: aload_0
     854: getfield      #3                  // Field pos:I
     857: aload_0
     858: getfield      #2                  // Field buffer:[B
     861: arraylength
     862: if_icmplt     870
     865: aload_0
     866: iconst_0
     867: invokespecial #10                 // Method reset:(Z)V
     870: return

  private void reset(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifne          20
       4: aload_0
       5: getfield      #8                  // Field out:Ljava/io/OutputStream;
       8: aload_0
       9: getfield      #2                  // Field buffer:[B
      12: iconst_0
      13: aload_0
      14: getfield      #3                  // Field pos:I
      17: invokevirtual #22                 // Method java/io/OutputStream.write:([BII)V
      20: aload_0
      21: iconst_0
      22: putfield      #3                  // Field pos:I
      25: aload_0
      26: iconst_0
      27: putfield      #11                 // Field startOfValue:I
      30: aload_0
      31: getfield      #6                  // Field options:Ljava/util/ArrayList;
      34: invokevirtual #23                 // Method java/util/ArrayList.clear:()V
      37: aload_0
      38: iconst_0
      39: putfield      #7                  // Field state:I
      42: return

  private boolean processEscapeCommand(java.util.ArrayList<java.lang.Object>, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: tableswitch   { // 65 to 117
                    65: 228
                    66: 241
                    67: 254
                    68: 267
                    69: 280
                    70: 293
                    71: 306
                    72: 318
                    73: 624
                    74: 338
                    75: 351
                    76: 624
                    77: 624
                    78: 624
                    79: 624
                    80: 624
                    81: 624
                    82: 624
                    83: 364
                    84: 377
                    85: 624
                    86: 624
                    87: 624
                    88: 624
                    89: 624
                    90: 624
                    91: 624
                    92: 624
                    93: 624
                    94: 624
                    95: 624
                    96: 624
                    97: 624
                    98: 624
                    99: 624
                   100: 624
                   101: 624
                   102: 318
                   103: 624
                   104: 624
                   105: 624
                   106: 624
                   107: 624
                   108: 624
                   109: 390
                   110: 624
                   111: 624
                   112: 624
                   113: 624
                   114: 624
                   115: 612
                   116: 624
                   117: 618
               default: 624
          }
     228: aload_0
     229: aload_0
     230: aload_1
     231: iconst_0
     232: iconst_1
     233: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     236: invokevirtual #25                 // Method processCursorUp:(I)V
     239: iconst_1
     240: ireturn
     241: aload_0
     242: aload_0
     243: aload_1
     244: iconst_0
     245: iconst_1
     246: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     249: invokevirtual #26                 // Method processCursorDown:(I)V
     252: iconst_1
     253: ireturn
     254: aload_0
     255: aload_0
     256: aload_1
     257: iconst_0
     258: iconst_1
     259: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     262: invokevirtual #27                 // Method processCursorRight:(I)V
     265: iconst_1
     266: ireturn
     267: aload_0
     268: aload_0
     269: aload_1
     270: iconst_0
     271: iconst_1
     272: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     275: invokevirtual #28                 // Method processCursorLeft:(I)V
     278: iconst_1
     279: ireturn
     280: aload_0
     281: aload_0
     282: aload_1
     283: iconst_0
     284: iconst_1
     285: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     288: invokevirtual #29                 // Method processCursorDownLine:(I)V
     291: iconst_1
     292: ireturn
     293: aload_0
     294: aload_0
     295: aload_1
     296: iconst_0
     297: iconst_1
     298: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     301: invokevirtual #30                 // Method processCursorUpLine:(I)V
     304: iconst_1
     305: ireturn
     306: aload_0
     307: aload_0
     308: aload_1
     309: iconst_0
     310: invokespecial #31                 // Method optionInt:(Ljava/util/ArrayList;I)I
     313: invokevirtual #32                 // Method processCursorToColumn:(I)V
     316: iconst_1
     317: ireturn
     318: aload_0
     319: aload_0
     320: aload_1
     321: iconst_0
     322: iconst_1
     323: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     326: aload_0
     327: aload_1
     328: iconst_1
     329: iconst_1
     330: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     333: invokevirtual #33                 // Method processCursorTo:(II)V
     336: iconst_1
     337: ireturn
     338: aload_0
     339: aload_0
     340: aload_1
     341: iconst_0
     342: iconst_0
     343: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     346: invokevirtual #34                 // Method processEraseScreen:(I)V
     349: iconst_1
     350: ireturn
     351: aload_0
     352: aload_0
     353: aload_1
     354: iconst_0
     355: iconst_0
     356: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     359: invokevirtual #35                 // Method processEraseLine:(I)V
     362: iconst_1
     363: ireturn
     364: aload_0
     365: aload_0
     366: aload_1
     367: iconst_0
     368: iconst_1
     369: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     372: invokevirtual #36                 // Method processScrollUp:(I)V
     375: iconst_1
     376: ireturn
     377: aload_0
     378: aload_0
     379: aload_1
     380: iconst_0
     381: iconst_1
     382: invokespecial #24                 // Method optionInt:(Ljava/util/ArrayList;II)I
     385: invokevirtual #37                 // Method processScrollDown:(I)V
     388: iconst_1
     389: ireturn
     390: aload_1
     391: invokevirtual #38                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     394: astore_3
     395: aload_3
     396: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     401: ifeq          439
     404: aload_3
     405: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     410: astore        4
     412: aload         4
     414: ifnull        436
     417: aload         4
     419: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     422: ldc_w         #19                 // class java/lang/Integer
     425: if_acmpeq     436
     428: new           #42                 // class java/lang/IllegalArgumentException
     431: dup
     432: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
     435: athrow
     436: goto          395
     439: iconst_0
     440: istore_3
     441: aload_1
     442: invokevirtual #38                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     445: astore        4
     447: aload         4
     449: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     454: ifeq          602
     457: aload         4
     459: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     464: astore        5
     466: aload         5
     468: ifnull        599
     471: iinc          3, 1
     474: aload         5
     476: checkcast     #19                 // class java/lang/Integer
     479: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     482: istore        6
     484: bipush        30
     486: iload         6
     488: if_icmpgt     510
     491: iload         6
     493: bipush        37
     495: if_icmpgt     510
     498: aload_0
     499: iload         6
     501: bipush        30
     503: isub
     504: invokevirtual #45                 // Method processSetForegroundColor:(I)V
     507: goto          599
     510: bipush        40
     512: iload         6
     514: if_icmpgt     536
     517: iload         6
     519: bipush        47
     521: if_icmpgt     536
     524: aload_0
     525: iload         6
     527: bipush        40
     529: isub
     530: invokevirtual #46                 // Method processSetBackgroundColor:(I)V
     533: goto          599
     536: iload         6
     538: lookupswitch  { // 3
                     0: 586
                    39: 572
                    49: 579
               default: 593
          }
     572: aload_0
     573: invokevirtual #47                 // Method processDefaultTextColor:()V
     576: goto          599
     579: aload_0
     580: invokevirtual #48                 // Method processDefaultBackgroundColor:()V
     583: goto          599
     586: aload_0
     587: invokevirtual #49                 // Method processAttributeRest:()V
     590: goto          599
     593: aload_0
     594: iload         6
     596: invokevirtual #50                 // Method processSetAttribute:(I)V
     599: goto          447
     602: iload_3
     603: ifne          610
     606: aload_0
     607: invokevirtual #49                 // Method processAttributeRest:()V
     610: iconst_1
     611: ireturn
     612: aload_0
     613: invokevirtual #51                 // Method processSaveCursorPosition:()V
     616: iconst_1
     617: ireturn
     618: aload_0
     619: invokevirtual #52                 // Method processRestoreCursorPosition:()V
     622: iconst_1
     623: ireturn
     624: bipush        97
     626: iload_2
     627: if_icmpgt     644
     630: bipush        122
     632: iload_2
     633: if_icmpgt     644
     636: aload_0
     637: aload_1
     638: iload_2
     639: invokevirtual #53                 // Method processUnknownExtension:(Ljava/util/ArrayList;I)V
     642: iconst_1
     643: ireturn
     644: bipush        65
     646: iload_2
     647: if_icmpgt     664
     650: bipush        90
     652: iload_2
     653: if_icmpgt     664
     656: aload_0
     657: aload_1
     658: iload_2
     659: invokevirtual #53                 // Method processUnknownExtension:(Ljava/util/ArrayList;I)V
     662: iconst_1
     663: ireturn
     664: iconst_0
     665: ireturn
     666: astore_3
     667: iconst_0
     668: ireturn
    Exception table:
       from    to  target type
           0   240   666   Class java/lang/IllegalArgumentException
         241   253   666   Class java/lang/IllegalArgumentException
         254   266   666   Class java/lang/IllegalArgumentException
         267   279   666   Class java/lang/IllegalArgumentException
         280   292   666   Class java/lang/IllegalArgumentException
         293   305   666   Class java/lang/IllegalArgumentException
         306   317   666   Class java/lang/IllegalArgumentException
         318   337   666   Class java/lang/IllegalArgumentException
         338   350   666   Class java/lang/IllegalArgumentException
         351   363   666   Class java/lang/IllegalArgumentException
         364   376   666   Class java/lang/IllegalArgumentException
         377   389   666   Class java/lang/IllegalArgumentException
         390   611   666   Class java/lang/IllegalArgumentException
         612   617   666   Class java/lang/IllegalArgumentException
         618   623   666   Class java/lang/IllegalArgumentException
         624   643   666   Class java/lang/IllegalArgumentException
         644   663   666   Class java/lang/IllegalArgumentException
         664   665   666   Class java/lang/IllegalArgumentException

  private boolean processOperatingSystemCommand(java.util.ArrayList<java.lang.Object>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #31                 // Method optionInt:(Ljava/util/ArrayList;I)I
       6: istore_2
       7: aload_1
       8: iconst_1
       9: invokevirtual #54                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      12: checkcast     #16                 // class java/lang/String
      15: astore_3
      16: iload_2
      17: tableswitch   { // 0 to 2
                     0: 44
                     1: 51
                     2: 58
               default: 65
          }
      44: aload_0
      45: aload_3
      46: invokevirtual #55                 // Method processChangeIconNameAndWindowTitle:(Ljava/lang/String;)V
      49: iconst_1
      50: ireturn
      51: aload_0
      52: aload_3
      53: invokevirtual #56                 // Method processChangeIconName:(Ljava/lang/String;)V
      56: iconst_1
      57: ireturn
      58: aload_0
      59: aload_3
      60: invokevirtual #57                 // Method processChangeWindowTitle:(Ljava/lang/String;)V
      63: iconst_1
      64: ireturn
      65: aload_0
      66: iload_2
      67: aload_3
      68: invokevirtual #58                 // Method processUnknownOperatingSystemCommand:(ILjava/lang/String;)V
      71: iconst_1
      72: ireturn
      73: astore        4
      75: iconst_0
      76: ireturn
    Exception table:
       from    to  target type
          16    50    73   Class java/lang/IllegalArgumentException
          51    57    73   Class java/lang/IllegalArgumentException
          58    64    73   Class java/lang/IllegalArgumentException
          65    72    73   Class java/lang/IllegalArgumentException

  protected void processRestoreCursorPosition() throws java.io.IOException;
    Code:
       0: return

  protected void processSaveCursorPosition() throws java.io.IOException;
    Code:
       0: return

  protected void processScrollDown(int) throws java.io.IOException;
    Code:
       0: return

  protected void processScrollUp(int) throws java.io.IOException;
    Code:
       0: return

  protected void processEraseScreen(int) throws java.io.IOException;
    Code:
       0: return

  protected void processEraseLine(int) throws java.io.IOException;
    Code:
       0: return

  protected void processSetAttribute(int) throws java.io.IOException;
    Code:
       0: return

  protected void processSetForegroundColor(int) throws java.io.IOException;
    Code:
       0: return

  protected void processSetBackgroundColor(int) throws java.io.IOException;
    Code:
       0: return

  protected void processDefaultTextColor() throws java.io.IOException;
    Code:
       0: return

  protected void processDefaultBackgroundColor() throws java.io.IOException;
    Code:
       0: return

  protected void processAttributeRest() throws java.io.IOException;
    Code:
       0: return

  protected void processCursorTo(int, int) throws java.io.IOException;
    Code:
       0: return

  protected void processCursorToColumn(int) throws java.io.IOException;
    Code:
       0: return

  protected void processCursorUpLine(int) throws java.io.IOException;
    Code:
       0: return

  protected void processCursorDownLine(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     22
       7: aload_0
       8: getfield      #8                  // Field out:Ljava/io/OutputStream;
      11: bipush        10
      13: invokevirtual #9                  // Method java/io/OutputStream.write:(I)V
      16: iinc          2, 1
      19: goto          2
      22: return

  protected void processCursorLeft(int) throws java.io.IOException;
    Code:
       0: return

  protected void processCursorRight(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     22
       7: aload_0
       8: getfield      #8                  // Field out:Ljava/io/OutputStream;
      11: bipush        32
      13: invokevirtual #9                  // Method java/io/OutputStream.write:(I)V
      16: iinc          2, 1
      19: goto          2
      22: return

  protected void processCursorDown(int) throws java.io.IOException;
    Code:
       0: return

  protected void processCursorUp(int) throws java.io.IOException;
    Code:
       0: return

  protected void processUnknownExtension(java.util.ArrayList<java.lang.Object>, int);
    Code:
       0: return

  protected void processChangeIconNameAndWindowTitle(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method processChangeIconName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #57                 // Method processChangeWindowTitle:(Ljava/lang/String;)V
      10: return

  protected void processChangeIconName(java.lang.String);
    Code:
       0: return

  protected void processChangeWindowTitle(java.lang.String);
    Code:
       0: return

  protected void processUnknownOperatingSystemCommand(int, java.lang.String);
    Code:
       0: return

  private int optionInt(java.util.ArrayList<java.lang.Object>, int);
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/util/ArrayList.size:()I
       4: iload_2
       5: if_icmpgt     16
       8: new           #42                 // class java/lang/IllegalArgumentException
      11: dup
      12: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
      15: athrow
      16: aload_1
      17: iload_2
      18: invokevirtual #54                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      21: astore_3
      22: aload_3
      23: ifnonnull     34
      26: new           #42                 // class java/lang/IllegalArgumentException
      29: dup
      30: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
      33: athrow
      34: aload_3
      35: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: ldc_w         #19                 // class java/lang/Integer
      41: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifne          55
      47: new           #42                 // class java/lang/IllegalArgumentException
      50: dup
      51: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
      54: athrow
      55: aload_3
      56: checkcast     #19                 // class java/lang/Integer
      59: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      62: ireturn

  private int optionInt(java.util.ArrayList<java.lang.Object>, int, int);
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/util/ArrayList.size:()I
       4: iload_2
       5: if_icmple     31
       8: aload_1
       9: iload_2
      10: invokevirtual #54                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      13: astore        4
      15: aload         4
      17: ifnonnull     22
      20: iload_3
      21: ireturn
      22: aload         4
      24: checkcast     #19                 // class java/lang/Integer
      27: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      30: ireturn
      31: iload_3
      32: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #61                 // Field REST_CODE:[B
       4: invokevirtual #62                 // Method write:([B)V
       7: aload_0
       8: invokevirtual #63                 // Method flush:()V
      11: aload_0
      12: invokespecial #64                 // Method java/io/FilterOutputStream.close:()V
      15: return

  private static byte[] resetCode();
    Code:
       0: new           #65                 // class org/fusesource/jansi/Ansi
       3: dup
       4: invokespecial #66                 // Method org/fusesource/jansi/Ansi."<init>":()V
       7: invokevirtual #67                 // Method org/fusesource/jansi/Ansi.reset:()Lorg/fusesource/jansi/Ansi;
      10: invokevirtual #68                 // Method org/fusesource/jansi/Ansi.toString:()Ljava/lang/String;
      13: ldc           #17                 // String UTF-8
      15: invokevirtual #69                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      18: areturn
      19: astore_0
      20: new           #71                 // class java/lang/RuntimeException
      23: dup
      24: aload_0
      25: invokespecial #72                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      28: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/io/UnsupportedEncodingException

  static {};
    Code:
       0: invokestatic  #73                 // Method resetCode:()[B
       3: putstatic     #61                 // Field REST_CODE:[B
       6: return
}
