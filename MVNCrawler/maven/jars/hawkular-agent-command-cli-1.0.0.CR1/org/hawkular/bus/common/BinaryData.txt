Compiled from "BinaryData.java"
public class org.hawkular.bus.common.BinaryData extends java.io.InputStream {
  private java.io.InputStream backingStream;

  private java.lang.Runnable onCloseAction;

  public org.hawkular.bus.common.BinaryData(byte[], java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aconst_null
       5: aload_1
       6: if_acmpeq     14
       9: aload_1
      10: arraylength
      11: ifne          22
      14: aload_0
      15: aload_2
      16: putfield      #2                  // Field backingStream:Ljava/io/InputStream;
      19: goto          44
      22: new           #3                  // class java/io/ByteArrayInputStream
      25: dup
      26: aload_1
      27: invokespecial #4                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      30: astore_3
      31: aload_0
      32: new           #5                  // class java/io/SequenceInputStream
      35: dup
      36: aload_3
      37: aload_2
      38: invokespecial #6                  // Method java/io/SequenceInputStream."<init>":(Ljava/io/InputStream;Ljava/io/InputStream;)V
      41: putfield      #2                  // Field backingStream:Ljava/io/InputStream;
      44: aload_0
      45: aconst_null
      46: putfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
      49: return

  public void setOnCloseAction(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
       5: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: invokevirtual #8                  // Method java/io/InputStream.close:()V
       7: aload_0
       8: getfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
      11: ifnull        45
      14: aload_0
      15: getfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
      18: invokeinterface #9,  1            // InterfaceMethod java/lang/Runnable.run:()V
      23: goto          45
      26: astore_1
      27: aload_0
      28: getfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
      31: ifnull        43
      34: aload_0
      35: getfield      #7                  // Field onCloseAction:Ljava/lang/Runnable;
      38: invokeinterface #9,  1            // InterfaceMethod java/lang/Runnable.run:()V
      43: aload_1
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0     7    26   any

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V
       8: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: invokevirtual #11                 // Method java/io/InputStream.reset:()V
       7: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: invokevirtual #12                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: invokevirtual #13                 // Method java/io/InputStream.read:()I
       7: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #14                 // Method java/io/InputStream.read:([B)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #15                 // Method java/io/InputStream.read:([BII)I
      10: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #16                 // Method java/io/InputStream.skip:(J)J
       8: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStream:Ljava/io/InputStream;
       4: invokevirtual #17                 // Method java/io/InputStream.available:()I
       7: ireturn
}
