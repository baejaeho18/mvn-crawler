Compiled from "YamlReader.scala"
public final class wvlet.airframe.config.YamlReader$ implements wvlet.airframe.config.YamlReaderCompat,wvlet.log.LogSupport {
  public static wvlet.airframe.config.YamlReader$ MODULE$;

  private wvlet.log.Logger logger;

  private volatile boolean bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/config/YamlReader$
       3: invokespecial #48                 // Method "<init>":()V
       6: return

  public <A> A load(java.lang.String, java.lang.String, scala.reflect.api.TypeTags$TypeTag<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #58                 // InterfaceMethod wvlet/airframe/config/YamlReaderCompat.load$:(Lwvlet/airframe/config/YamlReaderCompat;Ljava/lang/String;Ljava/lang/String;Lscala/reflect/api/TypeTags$TypeTag;)Ljava/lang/Object;
       7: areturn

  public <A> scala.collection.immutable.Map<java.lang.String, A> loadMapOf(java.lang.String, scala.reflect.api.TypeTags$TypeTag<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #69                 // InterfaceMethod wvlet/airframe/config/YamlReaderCompat.loadMapOf$:(Lwvlet/airframe/config/YamlReaderCompat;Ljava/lang/String;Lscala/reflect/api/TypeTags$TypeTag;)Lscala/collection/immutable/Map;
       6: areturn

  public <A> A bind(scala.collection.immutable.Map<java.lang.Object, java.lang.Object>, scala.reflect.api.TypeTags$TypeTag<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #78                 // InterfaceMethod wvlet/airframe/config/YamlReaderCompat.bind$:(Lwvlet/airframe/config/YamlReaderCompat;Lscala/collection/immutable/Map;Lscala/reflect/api/TypeTags$TypeTag;)Ljava/lang/Object;
       6: areturn

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #83                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #89                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      16: putfield      #91                 // Field logger:Lwvlet/log/Logger;
      19: aload_0
      20: iconst_1
      21: putfield      #83                 // Field bitmap$0:Z
      24: aload_1
      25: monitorexit
      26: goto          32
      29: aload_1
      30: monitorexit
      31: athrow
      32: aload_0
      33: getfield      #91                 // Field logger:Lwvlet/log/Logger;
      36: areturn
    Exception table:
       from    to  target type
           4    24    29   any

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #83                 // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #95                 // Method logger$lzycompute:()Lwvlet/log/Logger;
      11: areturn
      12: aload_0
      13: getfield      #91                 // Field logger:Lwvlet/log/Logger;
      16: areturn

  public <A> A load(wvlet.airframe.surface.Surface, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #101                // Method loadMapOf:(Lwvlet/airframe/surface/Surface;Ljava/lang/String;)Lscala/collection/immutable/Map;
       6: astore        4
       8: aload         4
      10: aload_3
      11: invokeinterface #107,  2          // InterfaceMethod scala/collection/immutable/Map.contains:(Ljava/lang/Object;)Z
      16: ifne          57
      19: new           #109                // class java/lang/IllegalArgumentException
      22: dup
      23: new           #111                // class java/lang/StringBuilder
      26: dup
      27: ldc           #112                // int 21
      29: invokespecial #115                // Method java/lang/StringBuilder."<init>":(I)V
      32: ldc           #117                // String Env
      34: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #123                // String  is not found in
      43: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #130                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload         4
      59: aload_3
      60: invokeinterface #134,  2          // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      65: areturn

  public <A> scala.collection.immutable.Map<java.lang.String, A> loadMapOf(wvlet.airframe.surface.Surface, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #141                // Method loadYaml:(Ljava/lang/String;)Lscala/collection/immutable/Map;
       5: astore_3
       6: aload_0
       7: invokevirtual #143                // Method logger:()Lwvlet/log/Logger;
      10: getstatic     #146                // Field wvlet/log/LogLevel$TRACE$.MODULE$:Lwvlet/log/LogLevel$TRACE$;
      13: invokevirtual #152                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
      16: ifeq          78
      19: aload_0
      20: invokevirtual #143                // Method logger:()Lwvlet/log/Logger;
      23: getstatic     #146                // Field wvlet/log/LogLevel$TRACE$.MODULE$:Lwvlet/log/LogLevel$TRACE$;
      26: new           #154                // class wvlet/log/LogSource
      29: dup
      30: ldc           #156                // String
      32: ldc           #157                // String YamlReader.scala
      34: bipush        42
      36: bipush        10
      38: invokespecial #160                // Method wvlet/log/LogSource."<init>":(Ljava/lang/String;Ljava/lang/String;II)V
      41: new           #111                // class java/lang/StringBuilder
      44: dup
      45: ldc           #161                // int 11
      47: invokespecial #115                // Method java/lang/StringBuilder."<init>":(I)V
      50: ldc           #163                // String yaml data:
      52: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: ldc           #165                // String ,
      58: invokeinterface #169,  2          // InterfaceMethod scala/collection/immutable/Map.mkString:(Ljava/lang/String;)Ljava/lang/String;
      63: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokevirtual #173                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
      72: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      75: goto          81
      78: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      81: pop
      82: getstatic     #184                // Field scala/collection/immutable/ListMap$.MODULE$:Lscala/collection/immutable/ListMap$;
      85: invokevirtual #188                // Method scala/collection/immutable/ListMap$.newBuilder:()Lscala/collection/mutable/Builder;
      88: astore        4
      90: aload_3
      91: invokedynamic #209,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      96: invokeinterface #213,  2          // InterfaceMethod scala/collection/immutable/Map.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
     101: aload         4
     103: aload_1
     104: invokedynamic #223,  0            // InvokeDynamic #1:apply:(Lscala/collection/mutable/Builder;Lwvlet/airframe/surface/Surface;)Lscala/Function1;
     109: getstatic     #228                // Field scala/collection/immutable/Iterable$.MODULE$:Lscala/collection/immutable/Iterable$;
     112: invokevirtual #232                // Method scala/collection/immutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     115: invokeinterface #237,  3          // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     120: pop
     121: aload         4
     123: invokeinterface #243,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
     128: checkcast     #103                // class scala/collection/immutable/Map
     131: areturn

  public scala.collection.immutable.Map<java.lang.Object, java.lang.Object> loadYaml(java.lang.String);
    Code:
       0: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: new           #253                // class org/yaml/snakeyaml/Yaml
       6: dup
       7: invokespecial #254                // Method org/yaml/snakeyaml/Yaml."<init>":()V
      10: getstatic     #259                // Field wvlet/log/io/IOUtil$.MODULE$:Lwvlet/log/io/IOUtil$;
      13: aload_1
      14: invokevirtual #262                // Method wvlet/log/io/IOUtil$.readAsString:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #265                // Method org/yaml/snakeyaml/Yaml.load:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #267                // class java/util/Map
      23: invokevirtual #271                // Method scala/jdk/CollectionConverters$.mapAsScalaMapConverter:(Ljava/util/Map;)Lscala/collection/convert/Decorators$AsScala;
      26: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      29: checkcast     #276                // class scala/collection/TraversableOnce
      32: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      35: invokevirtual #285                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      38: invokeinterface #289,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      43: areturn

  public scala.collection.Seq<scala.collection.immutable.Map<java.lang.Object, java.lang.Object>> loadYamlList(java.lang.String);
    Code:
       0: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: new           #253                // class org/yaml/snakeyaml/Yaml
       6: dup
       7: invokespecial #254                // Method org/yaml/snakeyaml/Yaml."<init>":()V
      10: getstatic     #259                // Field wvlet/log/io/IOUtil$.MODULE$:Lwvlet/log/io/IOUtil$;
      13: aload_1
      14: invokevirtual #262                // Method wvlet/log/io/IOUtil$.readAsString:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #265                // Method org/yaml/snakeyaml/Yaml.load:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #294                // class java/util/List
      23: invokevirtual #298                // Method scala/jdk/CollectionConverters$.asScalaBufferConverter:(Ljava/util/List;)Lscala/collection/convert/Decorators$AsScala;
      26: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      29: checkcast     #300                // class scala/collection/TraversableLike
      32: invokedynamic #307,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      37: getstatic     #312                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      40: invokevirtual #313                // Method scala/collection/mutable/Buffer$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      43: invokeinterface #314,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      48: checkcast     #316                // class scala/collection/SeqLike
      51: invokeinterface #320,  1          // InterfaceMethod scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
      56: areturn

  public scala.collection.Seq<scala.collection.immutable.Map<java.lang.Object, java.lang.Object>> loadYamlList(java.net.URL);
    Code:
       0: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: new           #253                // class org/yaml/snakeyaml/Yaml
       6: dup
       7: invokespecial #254                // Method org/yaml/snakeyaml/Yaml."<init>":()V
      10: getstatic     #259                // Field wvlet/log/io/IOUtil$.MODULE$:Lwvlet/log/io/IOUtil$;
      13: aload_1
      14: invokevirtual #326                // Method wvlet/log/io/IOUtil$.readAsString:(Ljava/net/URL;)Ljava/lang/String;
      17: invokevirtual #265                // Method org/yaml/snakeyaml/Yaml.load:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #294                // class java/util/List
      23: invokevirtual #298                // Method scala/jdk/CollectionConverters$.asScalaBufferConverter:(Ljava/util/List;)Lscala/collection/convert/Decorators$AsScala;
      26: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      29: checkcast     #300                // class scala/collection/TraversableLike
      32: invokedynamic #331,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      37: getstatic     #312                // Field scala/collection/mutable/Buffer$.MODULE$:Lscala/collection/mutable/Buffer$;
      40: invokevirtual #313                // Method scala/collection/mutable/Buffer$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      43: invokeinterface #314,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      48: checkcast     #316                // class scala/collection/SeqLike
      51: invokeinterface #320,  1          // InterfaceMethod scala/collection/SeqLike.toSeq:()Lscala/collection/Seq;
      56: areturn

  public <A> A bind(wvlet.airframe.surface.Surface, scala.collection.immutable.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #337                // Method bindMap:(Lwvlet/airframe/surface/Surface;Lscala/collection/immutable/Map;)Ljava/lang/Object;
       6: areturn

  public <A> A bindMap(wvlet.airframe.surface.Surface, scala.collection.immutable.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #341                // Method toMsgPack:(Lscala/collection/immutable/Map;)[B
       5: astore_3
       6: getstatic     #346                // Field wvlet/airframe/codec/MessageCodec$.MODULE$:Lwvlet/airframe/codec/MessageCodec$;
       9: aload_1
      10: invokevirtual #350                // Method wvlet/airframe/codec/MessageCodec$.ofSurface:(Lwvlet/airframe/surface/Surface;)Lwvlet/airframe/codec/MessageCodec;
      13: astore        4
      15: aload         4
      17: aload_3
      18: invokeinterface #356,  2          // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackMsgPack:([B)Lscala/Option;
      23: aload_1
      24: invokedynamic #366,  0            // InvokeDynamic #4:apply:(Lwvlet/airframe/surface/Surface;)Lscala/Function0;
      29: invokevirtual #372                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      32: astore        5
      34: aload_0
      35: invokevirtual #143                // Method logger:()Lwvlet/log/Logger;
      38: getstatic     #146                // Field wvlet/log/LogLevel$TRACE$.MODULE$:Lwvlet/log/LogLevel$TRACE$;
      41: invokevirtual #152                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
      44: ifeq          80
      47: aload_0
      48: invokevirtual #143                // Method logger:()Lwvlet/log/Logger;
      51: getstatic     #146                // Field wvlet/log/LogLevel$TRACE$.MODULE$:Lwvlet/log/LogLevel$TRACE$;
      54: new           #154                // class wvlet/log/LogSource
      57: dup
      58: ldc           #156                // String
      60: ldc           #157                // String YamlReader.scala
      62: bipush        85
      64: bipush        10
      66: invokespecial #160                // Method wvlet/log/LogSource."<init>":(Ljava/lang/String;Ljava/lang/String;II)V
      69: aload         5
      71: invokevirtual #173                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
      74: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      77: goto          83
      80: getstatic     #179                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      83: pop
      84: aload         5
      86: areturn

  public byte[] toMsgPack(scala.collection.immutable.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: new           #381                // class wvlet/airframe/config/YamlReader
       3: dup
       4: aload_1
       5: invokespecial #384                // Method wvlet/airframe/config/YamlReader."<init>":(Lscala/collection/immutable/Map;)V
       8: invokevirtual #388                // Method wvlet/airframe/config/YamlReader.toMsgpack:()[B
      11: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #391                // Field MODULE$:Lwvlet/airframe/config/YamlReader$;
       3: areturn

  public static final boolean $anonfun$loadMapOf$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        8
       6: iconst_1
       7: ireturn
       8: goto          11
      11: iconst_0
      12: ireturn

  public static final scala.collection.mutable.Builder $anonfun$loadMapOf$2(scala.collection.mutable.Builder, wvlet.airframe.surface.Surface, scala.Tuple2);
    Code:
       0: aload_2
       1: astore        4
       3: aload         4
       5: ifnull        81
       8: aload         4
      10: invokevirtual #403                // Method scala/Tuple2._1:()Ljava/lang/Object;
      13: astore        5
      15: aload         4
      17: invokevirtual #406                // Method scala/Tuple2._2:()Ljava/lang/Object;
      20: astore        6
      22: aload_0
      23: getstatic     #409                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      26: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: aload         5
      31: invokevirtual #410                // Method java/lang/Object.toString:()Ljava/lang/String;
      34: invokevirtual #413                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      37: getstatic     #391                // Field MODULE$:Lwvlet/airframe/config/YamlReader$;
      40: aload_1
      41: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
      44: aload         6
      46: checkcast     #267                // class java/util/Map
      49: invokevirtual #271                // Method scala/jdk/CollectionConverters$.mapAsScalaMapConverter:(Ljava/util/Map;)Lscala/collection/convert/Decorators$AsScala;
      52: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      55: checkcast     #276                // class scala/collection/TraversableOnce
      58: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      61: invokevirtual #285                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      64: invokeinterface #289,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      69: invokevirtual #337                // Method bindMap:(Lwvlet/airframe/surface/Surface;Lscala/collection/immutable/Map;)Ljava/lang/Object;
      72: invokevirtual #417                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      75: invokeinterface #421,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
      80: areturn
      81: goto          84
      84: new           #423                // class scala/MatchError
      87: dup
      88: aload         4
      90: invokespecial #426                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      93: athrow

  public static final scala.collection.immutable.Map $anonfun$loadYamlList$1(java.util.Map);
    Code:
       0: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: aload_0
       4: invokevirtual #271                // Method scala/jdk/CollectionConverters$.mapAsScalaMapConverter:(Ljava/util/Map;)Lscala/collection/convert/Decorators$AsScala;
       7: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      10: checkcast     #276                // class scala/collection/TraversableOnce
      13: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: invokevirtual #285                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      19: invokeinterface #289,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      24: areturn

  public static final scala.collection.immutable.Map $anonfun$loadYamlList$2(java.util.Map);
    Code:
       0: getstatic     #251                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: aload_0
       4: invokevirtual #271                // Method scala/jdk/CollectionConverters$.mapAsScalaMapConverter:(Ljava/util/Map;)Lscala/collection/convert/Decorators$AsScala;
       7: invokevirtual #274                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      10: checkcast     #276                // class scala/collection/TraversableOnce
      13: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: invokevirtual #285                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      19: invokeinterface #289,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      24: areturn

  public static final java.lang.Object $anonfun$bindMap$1(wvlet.airframe.surface.Surface);
    Code:
       0: getstatic     #437                // Field wvlet/airframe/surface/Zero$.MODULE$:Lwvlet/airframe/surface/Zero$;
       3: aload_0
       4: invokevirtual #440                // Method wvlet/airframe/surface/Zero$.zeroOf:(Lwvlet/airframe/surface/Surface;)Ljava/lang/Object;
       7: areturn

  private wvlet.airframe.config.YamlReader$();
    Code:
       0: aload_0
       1: invokespecial #441                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #391                // Field MODULE$:Lwvlet/airframe/config/YamlReader$;
       8: aload_0
       9: invokestatic  #445                // InterfaceMethod wvlet/airframe/config/YamlReaderCompat.$init$:(Lwvlet/airframe/config/YamlReaderCompat;)V
      12: aload_0
      13: invokestatic  #450                // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      16: aload_0
      17: invokestatic  #453                // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      20: return

  public static final java.lang.Object $anonfun$loadMapOf$1$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #455                // Method $anonfun$loadMapOf$1:(Lscala/Tuple2;)Z
       4: invokestatic  #461                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #473,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
