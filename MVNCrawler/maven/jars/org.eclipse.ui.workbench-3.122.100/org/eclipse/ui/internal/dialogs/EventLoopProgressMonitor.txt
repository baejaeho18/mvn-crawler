Compiled from "EventLoopProgressMonitor.java"
public class org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor extends org.eclipse.core.runtime.ProgressMonitorWrapper implements org.eclipse.core.runtime.IProgressMonitor {
  private static int T_THRESH;

  private static int T_MAX;

  private long lastTime;

  private java.lang.String taskName;

  static {};
    Code:
       0: bipush        100
       2: putstatic     #105                // Field T_THRESH:I
       5: bipush        50
       7: putstatic     #104                // Field T_MAX:I
      10: return

  public org.eclipse.ui.internal.dialogs.EventLoopProgressMonitor(org.eclipse.core.runtime.IProgressMonitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #117                // Method org/eclipse/core/runtime/ProgressMonitorWrapper."<init>":(Lorg/eclipse/core/runtime/IProgressMonitor;)V
       5: aload_0
       6: invokestatic  #108                // Method java/lang/System.currentTimeMillis:()J
       9: putfield      #106                // Field lastTime:J
      12: return

  public void beginTask(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #116                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.beginTask:(Ljava/lang/String;I)V
       6: aload_0
       7: aload_1
       8: putfield      #107                // Field taskName:Ljava/lang/String;
      11: aload_0
      12: invokevirtual #123                // Method runEventLoop:()V
      15: return

  public void clearBlocked();
    Code:
       0: invokestatic  #118                // Method org/eclipse/jface/dialogs/Dialog.getBlockedHandler:()Lorg/eclipse/jface/dialogs/IDialogBlockedHandler;
       3: invokeinterface #124,  1          // InterfaceMethod org/eclipse/jface/dialogs/IDialogBlockedHandler.clearBlocked:()V
       8: return

  public void done();
    Code:
       0: aload_0
       1: invokespecial #109                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.done:()V
       4: aload_0
       5: aconst_null
       6: putfield      #107                // Field taskName:Ljava/lang/String;
       9: aload_0
      10: invokevirtual #123                // Method runEventLoop:()V
      13: return

  public void internalWorked(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #111                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.internalWorked:(D)V
       5: aload_0
       6: invokevirtual #123                // Method runEventLoop:()V
       9: return

  public boolean isCanceled();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method runEventLoop:()V
       4: aload_0
       5: invokespecial #110                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.isCanceled:()Z
       8: ireturn

  private void runEventLoop();
    Code:
       0: invokestatic  #108                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: lload_1
       5: aload_0
       6: getfield      #106                // Field lastTime:J
       9: lsub
      10: getstatic     #105                // Field T_THRESH:I
      13: i2l
      14: lcmp
      15: ifge          19
      18: return
      19: invokestatic  #120                // Method org/eclipse/swt/widgets/Display.getCurrent:()Lorg/eclipse/swt/widgets/Display;
      22: astore_3
      23: aload_3
      24: ifnonnull     28
      27: return
      28: aload_0
      29: lload_1
      30: putfield      #106                // Field lastTime:J
      33: invokestatic  #122                // Method org/eclipse/ui/internal/ExceptionHandler.getInstance:()Lorg/eclipse/ui/internal/ExceptionHandler;
      36: astore        4
      38: aload_3
      39: invokevirtual #119                // Method org/eclipse/swt/widgets/Display.readAndDispatch:()Z
      42: ifne          60
      45: goto          73
      48: astore        5
      50: aload         4
      52: aload         5
      54: invokevirtual #121                // Method org/eclipse/ui/internal/ExceptionHandler.handleException:(Ljava/lang/Throwable;)V
      57: goto          73
      60: invokestatic  #108                // Method java/lang/System.currentTimeMillis:()J
      63: lload_1
      64: lsub
      65: getstatic     #104                // Field T_MAX:I
      68: i2l
      69: lcmp
      70: ifle          38
      73: return
    Exception table:
       from    to  target type
          38    45    48   Class java/lang/Throwable

  public void setBlocked(org.eclipse.core.runtime.IStatus);
    Code:
       0: invokestatic  #118                // Method org/eclipse/jface/dialogs/Dialog.getBlockedHandler:()Lorg/eclipse/jface/dialogs/IDialogBlockedHandler;
       3: aload_0
       4: aload_1
       5: aload_0
       6: getfield      #107                // Field taskName:Ljava/lang/String;
       9: invokeinterface #125,  4          // InterfaceMethod org/eclipse/jface/dialogs/IDialogBlockedHandler.showBlocked:(Lorg/eclipse/core/runtime/IProgressMonitor;Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V
      14: return

  public void setCanceled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #113                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.setCanceled:(Z)V
       5: aload_0
       6: aconst_null
       7: putfield      #107                // Field taskName:Ljava/lang/String;
      10: aload_0
      11: invokevirtual #123                // Method runEventLoop:()V
      14: return

  public void setTaskName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #114                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.setTaskName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: putfield      #107                // Field taskName:Ljava/lang/String;
      10: aload_0
      11: invokevirtual #123                // Method runEventLoop:()V
      14: return

  public void subTask(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #107                // Field taskName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #107                // Field taskName:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokespecial #115                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.subTask:(Ljava/lang/String;)V
      17: aload_0
      18: invokevirtual #123                // Method runEventLoop:()V
      21: return

  public void worked(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #112                // Method org/eclipse/core/runtime/ProgressMonitorWrapper.worked:(I)V
       5: aload_0
       6: invokevirtual #123                // Method runEventLoop:()V
       9: return

  protected java.lang.String getTaskName();
    Code:
       0: aload_0
       1: getfield      #107                // Field taskName:Ljava/lang/String;
       4: areturn
}
