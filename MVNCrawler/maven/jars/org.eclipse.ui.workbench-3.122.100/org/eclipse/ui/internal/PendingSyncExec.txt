Compiled from "PendingSyncExec.java"
public final class org.eclipse.ui.internal.PendingSyncExec {
  private final java.util.concurrent.Semaphore semaphore;

  private java.lang.Thread operation;

  private final java.lang.Runnable runnable;

  private boolean hasFinishedRunning;

  public org.eclipse.ui.internal.PendingSyncExec(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #56                 // class java/util/concurrent/Semaphore
       8: dup
       9: iconst_0
      10: invokespecial #110                // Method java/util/concurrent/Semaphore."<init>":(I)V
      13: putfield      #101                // Field semaphore:Ljava/util/concurrent/Semaphore;
      16: aload_0
      17: aload_1
      18: putfield      #99                 // Field runnable:Ljava/lang/Runnable;
      21: return

  private boolean acquire(long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #101                // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: lload_1
       5: getstatic     #97                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #111                // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: instanceof    #58                 // class org/eclipse/ui/internal/PendingSyncExec
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
      19: aload_1
      20: checkcast     #58                 // class org/eclipse/ui/internal/PendingSyncExec
      23: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
      26: if_acmpne     31
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public java.lang.Thread getOperationThread();
    Code:
       0: aload_0
       1: getfield      #100                // Field operation:Ljava/lang/Thread;
       4: areturn

  public void run();
    Code:
       0: invokestatic  #107                // Method java/lang/Thread.interrupted:()Z
       3: pop
       4: aload_0
       5: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
       8: ifnull        54
      11: aload_0
      12: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
      15: invokeinterface #115,  1          // InterfaceMethod java/lang/Runnable.run:()V
      20: goto          54
      23: astore_1
      24: aload_0
      25: dup
      26: astore_2
      27: monitorenter
      28: aload_0
      29: iconst_1
      30: putfield      #98                 // Field hasFinishedRunning:Z
      33: aload_2
      34: monitorexit
      35: goto          41
      38: aload_2
      39: monitorexit
      40: athrow
      41: invokestatic  #107                // Method java/lang/Thread.interrupted:()Z
      44: pop
      45: aload_0
      46: getfield      #101                // Field semaphore:Ljava/util/concurrent/Semaphore;
      49: invokevirtual #109                // Method java/util/concurrent/Semaphore.release:()V
      52: aload_1
      53: athrow
      54: aload_0
      55: dup
      56: astore_2
      57: monitorenter
      58: aload_0
      59: iconst_1
      60: putfield      #98                 // Field hasFinishedRunning:Z
      63: aload_2
      64: monitorexit
      65: goto          71
      68: aload_2
      69: monitorexit
      70: athrow
      71: invokestatic  #107                // Method java/lang/Thread.interrupted:()Z
      74: pop
      75: aload_0
      76: getfield      #101                // Field semaphore:Ljava/util/concurrent/Semaphore;
      79: invokevirtual #109                // Method java/util/concurrent/Semaphore.release:()V
      82: return
    Exception table:
       from    to  target type
           4    23    23   any
          28    35    38   any
          38    40    38   any
          58    65    68   any
          68    70    68   any

  public void waitUntilExecuted(org.eclipse.ui.internal.UILockListener) throws java.lang.InterruptedException;
    Code:
       0: goto          37
       3: aload_1
       4: invokevirtual #113                // Method org/eclipse/ui/internal/UILockListener.isUIWaiting:()Z
       7: ifeq          37
      10: aload_0
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: getfield      #98                 // Field hasFinishedRunning:Z
      18: ifne          29
      21: aload_1
      22: aload_0
      23: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
      26: invokevirtual #114                // Method org/eclipse/ui/internal/UILockListener.interruptUI:(Ljava/lang/Runnable;)V
      29: aload_2
      30: monitorexit
      31: goto          37
      34: aload_2
      35: monitorexit
      36: athrow
      37: aload_0
      38: ldc2_w        #47                 // long 1000l
      41: invokevirtual #112                // Method acquire:(J)Z
      44: ifeq          3
      47: return
    Exception table:
       from    to  target type
          14    31    34   any
          34    36    34   any

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
       4: invokestatic  #108                // Method java/util/Objects.hashCode:(Ljava/lang/Object;)I
       7: ireturn

  public void setOperationThread(java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field operation:Ljava/lang/Thread;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #2                  // String PendingSyncExec(
       6: invokespecial #104                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #99                 // Field runnable:Ljava/lang/Runnable;
      13: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #1                  // String )
      18: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn
}
