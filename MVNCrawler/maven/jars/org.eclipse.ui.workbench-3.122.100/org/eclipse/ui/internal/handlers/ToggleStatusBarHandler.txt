Compiled from "ToggleStatusBarHandler.java"
public class org.eclipse.ui.internal.handlers.ToggleStatusBarHandler extends org.eclipse.core.commands.AbstractHandler implements org.eclipse.ui.commands.IElementUpdater {
  public static final java.lang.String COMMAND_ID_TOGGLE_STATUSBAR;

  private static final java.lang.String BOTTOM_TRIM_ID;

  private java.util.HashMap<org.eclipse.ui.IWorkbenchWindow, org.osgi.service.event.EventHandler> eventHandlers;

  private java.util.HashMap<org.eclipse.ui.IWorkbenchWindow, org.eclipse.e4.core.services.events.IEventBroker> eventBrokers;

  public org.eclipse.ui.internal.handlers.ToggleStatusBarHandler();
    Code:
       0: aload_0
       1: invokespecial #204                // Method org/eclipse/core/commands/AbstractHandler."<init>":()V
       4: aload_0
       5: new           #97                 // class java/util/HashMap
       8: dup
       9: invokespecial #199                // Method java/util/HashMap."<init>":()V
      12: putfield      #197                // Field eventHandlers:Ljava/util/HashMap;
      15: aload_0
      16: new           #97                 // class java/util/HashMap
      19: dup
      20: invokespecial #199                // Method java/util/HashMap."<init>":()V
      23: putfield      #196                // Field eventBrokers:Ljava/util/HashMap;
      26: return

  public java.lang.Object execute(org.eclipse.core.commands.ExecutionEvent);
    Code:
       0: aload_1
       1: invokestatic  #206                // Method org/eclipse/ui/handlers/HandlerUtil.getActiveWorkbenchWindow:(Lorg/eclipse/core/commands/ExecutionEvent;)Lorg/eclipse/ui/IWorkbenchWindow;
       4: astore_2
       5: aload_2
       6: instanceof    #109                // class org/eclipse/ui/internal/WorkbenchWindow
       9: ifne          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #197                // Field eventHandlers:Ljava/util/HashMap;
      18: aload_2
      19: invokevirtual #200                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      22: ifne          30
      25: aload_0
      26: aload_2
      27: invokevirtual #209                // Method initializeEventHandler:(Lorg/eclipse/ui/IWorkbenchWindow;)V
      30: aload_2
      31: checkcast     #109                // class org/eclipse/ui/internal/WorkbenchWindow
      34: invokestatic  #210                // Method getTrimStatus:(Lorg/eclipse/ui/internal/WorkbenchWindow;)Lorg/eclipse/e4/ui/model/application/ui/MUIElement;
      37: astore_3
      38: aload_3
      39: ifnull        62
      42: aload_3
      43: aload_3
      44: invokeinterface #223,  1          // InterfaceMethod org/eclipse/e4/ui/model/application/ui/MUIElement.isVisible:()Z
      49: ifeq          56
      52: iconst_0
      53: goto          57
      56: iconst_1
      57: invokeinterface #224,  2          // InterfaceMethod org/eclipse/e4/ui/model/application/ui/MUIElement.setVisible:(Z)V
      62: aconst_null
      63: areturn

  private void initializeEventHandler(org.eclipse.ui.IWorkbenchWindow);
    Code:
       0: aload_1
       1: ldc           #6                  // class org/eclipse/e4/core/services/events/IEventBroker
       3: invokeinterface #226,  2          // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getService:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #6                  // class org/eclipse/e4/core/services/events/IEventBroker
      11: astore_2
      12: aload_0
      13: getfield      #196                // Field eventBrokers:Ljava/util/HashMap;
      16: aload_1
      17: aload_2
      18: invokevirtual #203                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_1
      23: invokedynamic #233,  0            // InvokeDynamic #0:handleEvent:(Lorg/eclipse/ui/IWorkbenchWindow;)Lorg/osgi/service/event/EventHandler;
      28: astore_3
      29: aload_0
      30: getfield      #197                // Field eventHandlers:Ljava/util/HashMap;
      33: aload_1
      34: aload_3
      35: invokevirtual #203                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_2
      40: ldc           #5                  // String org/eclipse/e4/ui/model/ui/UIElement/visible/*
      42: aload_3
      43: invokeinterface #222,  3          // InterfaceMethod org/eclipse/e4/core/services/events/IEventBroker.subscribe:(Ljava/lang/String;Lorg/osgi/service/event/EventHandler;)Z
      48: pop
      49: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #197                // Field eventHandlers:Ljava/util/HashMap;
       4: invokevirtual #201                // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       7: invokeinterface #220,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: goto          72
      16: aload_2
      17: invokeinterface #216,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #100                // class java/util/Map$Entry
      25: astore_1
      26: aload_0
      27: getfield      #196                // Field eventBrokers:Ljava/util/HashMap;
      30: aload_1
      31: invokeinterface #218,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      36: invokevirtual #202                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #6                  // class org/eclipse/e4/core/services/events/IEventBroker
      42: astore_3
      43: aload_1
      44: invokeinterface #219,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #114                // class org/osgi/service/event/EventHandler
      52: astore        4
      54: aload_3
      55: ifnull        72
      58: aload         4
      60: ifnull        72
      63: aload_3
      64: aload         4
      66: invokeinterface #221,  2          // InterfaceMethod org/eclipse/e4/core/services/events/IEventBroker.unsubscribe:(Lorg/osgi/service/event/EventHandler;)Z
      71: pop
      72: aload_2
      73: invokeinterface #215,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifne          16
      81: aload_0
      82: invokespecial #205                // Method org/eclipse/core/commands/AbstractHandler.dispose:()V
      85: return

  public void updateElement(org.eclipse.ui.menus.UIElement, java.util.Map);
    Code:
       0: aload_1
       1: invokevirtual #213                // Method org/eclipse/ui/menus/UIElement.getServiceLocator:()Lorg/eclipse/ui/services/IServiceLocator;
       4: ldc           #9                  // class org/eclipse/ui/internal/services/IWorkbenchLocationService
       6: invokeinterface #229,  2          // InterfaceMethod org/eclipse/ui/services/IServiceLocator.getService:(Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #9                  // class org/eclipse/ui/internal/services/IWorkbenchLocationService
      14: astore_3
      15: aload_3
      16: invokeinterface #228,  1          // InterfaceMethod org/eclipse/ui/internal/services/IWorkbenchLocationService.getWorkbenchWindow:()Lorg/eclipse/ui/IWorkbenchWindow;
      21: astore        4
      23: aload         4
      25: instanceof    #109                // class org/eclipse/ui/internal/WorkbenchWindow
      28: ifne          32
      31: return
      32: aload         4
      34: checkcast     #109                // class org/eclipse/ui/internal/WorkbenchWindow
      37: invokestatic  #210                // Method getTrimStatus:(Lorg/eclipse/ui/internal/WorkbenchWindow;)Lorg/eclipse/e4/ui/model/application/ui/MUIElement;
      40: astore        5
      42: aload         5
      44: ifnull        70
      47: aload_1
      48: aload         5
      50: invokeinterface #223,  1          // InterfaceMethod org/eclipse/e4/ui/model/application/ui/MUIElement.isVisible:()Z
      55: ifeq          64
      58: getstatic     #194                // Field org/eclipse/ui/internal/WorkbenchMessages.ToggleStatusBarVisibilityAction_hide_text:Ljava/lang/String;
      61: goto          67
      64: getstatic     #195                // Field org/eclipse/ui/internal/WorkbenchMessages.ToggleStatusBarVisibilityAction_show_text:Ljava/lang/String;
      67: invokevirtual #212                // Method org/eclipse/ui/menus/UIElement.setText:(Ljava/lang/String;)V
      70: return

  private static org.eclipse.e4.ui.model.application.ui.MUIElement getTrimStatus(org.eclipse.ui.internal.WorkbenchWindow);
    Code:
       0: aload_0
       1: ldc           #7                  // class org/eclipse/e4/ui/workbench/modeling/EModelService
       3: invokevirtual #208                // Method org/eclipse/ui/internal/WorkbenchWindow.getService:(Ljava/lang/Class;)Ljava/lang/Object;
       6: checkcast     #7                  // class org/eclipse/e4/ui/workbench/modeling/EModelService
       9: astore_1
      10: aload_0
      11: invokevirtual #207                // Method org/eclipse/ui/internal/WorkbenchWindow.getModel:()Lorg/eclipse/e4/ui/model/application/ui/basic/MWindow;
      14: astore_2
      15: aload_1
      16: ldc           #3                  // String org.eclipse.ui.trim.status
      18: aload_2
      19: invokeinterface #225,  3          // InterfaceMethod org/eclipse/e4/ui/workbench/modeling/EModelService.find:(Ljava/lang/String;Lorg/eclipse/e4/ui/model/application/ui/MUIElement;)Lorg/eclipse/e4/ui/model/application/ui/MUIElement;
      24: areturn

  private static void lambda$0(org.eclipse.ui.IWorkbenchWindow, org.osgi.service.event.Event);
    Code:
       0: aload_1
       1: ldc           #1                  // String ChangedElement
       3: invokevirtual #214                // Method org/osgi/service/event/Event.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: ifnull        67
      11: aload_2
      12: aload_0
      13: checkcast     #109                // class org/eclipse/ui/internal/WorkbenchWindow
      16: invokestatic  #210                // Method getTrimStatus:(Lorg/eclipse/ui/internal/WorkbenchWindow;)Lorg/eclipse/e4/ui/model/application/ui/MUIElement;
      19: if_acmpne     67
      22: aload_0
      23: ldc           #8                  // class org/eclipse/ui/commands/ICommandService
      25: invokeinterface #226,  2          // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getService:(Ljava/lang/Class;)Ljava/lang/Object;
      30: checkcast     #8                  // class org/eclipse/ui/commands/ICommandService
      33: astore_3
      34: new           #97                 // class java/util/HashMap
      37: dup
      38: invokespecial #199                // Method java/util/HashMap."<init>":()V
      41: astore        4
      43: aload         4
      45: ldc           #2                  // String org.eclipse.ui.IWorkbenchWindow
      47: aload_0
      48: checkcast     #109                // class org/eclipse/ui/internal/WorkbenchWindow
      51: invokeinterface #217,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_3
      58: ldc           #4                  // String org.eclipse.ui.window.togglestatusbar
      60: aload         4
      62: invokeinterface #227,  3          // InterfaceMethod org/eclipse/ui/commands/ICommandService.refreshElements:(Ljava/lang/String;Ljava/util/Map;)V
      67: return
}
