Compiled from "PerspectiveAction.java"
public abstract class org.eclipse.ui.internal.PerspectiveAction extends org.eclipse.jface.action.Action implements org.eclipse.ui.actions.ActionFactory$IWorkbenchAction {
  private org.eclipse.ui.IWorkbenchWindow workbenchWindow;

  private org.eclipse.ui.internal.PerspectiveTracker tracker;

  protected org.eclipse.ui.internal.PerspectiveAction(org.eclipse.ui.IWorkbenchWindow);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/eclipse/jface/action/Action."<init>":()V
       4: aload_1
       5: invokestatic  #52                 // Method org/eclipse/core/runtime/Assert.isNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: putfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
      13: aload_0
      14: new           #29                 // class org/eclipse/ui/internal/PerspectiveTracker
      17: dup
      18: aload_1
      19: aload_0
      20: invokespecial #56                 // Method org/eclipse/ui/internal/PerspectiveTracker."<init>":(Lorg/eclipse/ui/IWorkbenchWindow;Lorg/eclipse/jface/action/IAction;)V
      23: putfield      #51                 // Field tracker:Lorg/eclipse/ui/internal/PerspectiveTracker;
      26: return

  protected org.eclipse.ui.IWorkbenchWindow getWindow();
    Code:
       0: aload_0
       1: getfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
       4: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
      12: invokeinterface #58,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getActivePage:()Lorg/eclipse/ui/IWorkbenchPage;
      17: astore_1
      18: aload_1
      19: ifnull        42
      22: aload_1
      23: invokeinterface #57,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchPage.getPerspective:()Lorg/eclipse/ui/IPerspectiveDescriptor;
      28: ifnull        42
      31: aload_0
      32: aload_1
      33: aload_1
      34: invokeinterface #57,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchPage.getPerspective:()Lorg/eclipse/ui/IPerspectiveDescriptor;
      39: invokevirtual #54                 // Method run:(Lorg/eclipse/ui/IWorkbenchPage;Lorg/eclipse/ui/IPerspectiveDescriptor;)V
      42: return

  protected abstract void run(org.eclipse.ui.IWorkbenchPage, org.eclipse.ui.IPerspectiveDescriptor);

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #51                 // Field tracker:Lorg/eclipse/ui/internal/PerspectiveTracker;
      12: invokevirtual #55                 // Method org/eclipse/ui/internal/PerspectiveTracker.dispose:()V
      15: aload_0
      16: aconst_null
      17: putfield      #50                 // Field workbenchWindow:Lorg/eclipse/ui/IWorkbenchWindow;
      20: return
}
