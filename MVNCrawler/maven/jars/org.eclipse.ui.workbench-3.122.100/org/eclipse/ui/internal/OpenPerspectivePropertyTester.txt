Compiled from "OpenPerspectivePropertyTester.java"
public class org.eclipse.ui.internal.OpenPerspectivePropertyTester extends org.eclipse.core.expressions.PropertyTester {
  private static final java.lang.String PROPERTY_IS_PERSPECTIVE_OPEN;

  public org.eclipse.ui.internal.OpenPerspectivePropertyTester();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/eclipse/core/expressions/PropertyTester."<init>":()V
       4: return

  public boolean test(java.lang.Object, java.lang.String, java.lang.Object[], java.lang.Object);
    Code:
       0: aload_3
       1: arraylength
       2: ifne          55
       5: aload_1
       6: instanceof    #28                 // class org/eclipse/ui/internal/WorkbenchWindow
       9: ifeq          55
      12: aload_1
      13: checkcast     #28                 // class org/eclipse/ui/internal/WorkbenchWindow
      16: astore        5
      18: ldc           #1                  // String isPerspectiveOpen
      20: aload_2
      21: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          55
      27: aload         5
      29: invokevirtual #45                 // Method org/eclipse/ui/internal/WorkbenchWindow.getActivePage:()Lorg/eclipse/ui/IWorkbenchPage;
      32: astore        6
      34: aload         6
      36: ifnull        55
      39: aload         6
      41: invokeinterface #46,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchPage.getPerspective:()Lorg/eclipse/ui/IPerspectiveDescriptor;
      46: astore        7
      48: aload         7
      50: ifnull        55
      53: iconst_1
      54: ireturn
      55: iconst_0
      56: ireturn
}
