Compiled from "PerspectiveTracker.java"
public class org.eclipse.ui.internal.PerspectiveTracker extends org.eclipse.ui.PerspectiveAdapter implements org.eclipse.ui.IPageListener {
  private org.eclipse.ui.IWorkbenchWindow window;

  private org.eclipse.jface.action.IAction action;

  protected org.eclipse.ui.internal.PerspectiveTracker(org.eclipse.ui.IWorkbenchWindow);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method org/eclipse/ui/PerspectiveAdapter."<init>":()V
       4: aload_1
       5: invokestatic  #71                 // Method org/eclipse/core/runtime/Assert.isNotNull:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: putfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
      13: aload_1
      14: aload_0
      15: invokeinterface #78,  2           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.addPageListener:(Lorg/eclipse/ui/IPageListener;)V
      20: aload_1
      21: aload_0
      22: invokeinterface #80,  2           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.addPerspectiveListener:(Lorg/eclipse/ui/IPerspectiveListener;)V
      27: return

  public org.eclipse.ui.internal.PerspectiveTracker(org.eclipse.ui.IWorkbenchWindow, org.eclipse.jface.action.IAction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #75                 // Method "<init>":(Lorg/eclipse/ui/IWorkbenchWindow;)V
       5: aload_0
       6: aload_2
       7: putfield      #69                 // Field action:Lorg/eclipse/jface/action/IAction;
      10: aload_0
      11: invokevirtual #73                 // Method update:()V
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
       4: ifnull        32
       7: aload_0
       8: getfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
      11: aload_0
      12: invokeinterface #79,  2           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.removePageListener:(Lorg/eclipse/ui/IPageListener;)V
      17: aload_0
      18: getfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
      21: aload_0
      22: invokeinterface #81,  2           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.removePerspectiveListener:(Lorg/eclipse/ui/IPerspectiveListener;)V
      27: aload_0
      28: aconst_null
      29: putfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
      32: return

  public void pageActivated(org.eclipse.ui.IWorkbenchPage);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method update:()V
       4: return

  public void pageClosed(org.eclipse.ui.IWorkbenchPage);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method update:()V
       4: return

  public void pageOpened(org.eclipse.ui.IWorkbenchPage);
    Code:
       0: return

  public void perspectiveActivated(org.eclipse.ui.IWorkbenchPage, org.eclipse.ui.IPerspectiveDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method update:()V
       4: return

  private void update();
    Code:
       0: aload_0
       1: getfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
       4: ifnull        35
       7: aconst_null
       8: astore_1
       9: aload_0
      10: getfield      #70                 // Field window:Lorg/eclipse/ui/IWorkbenchWindow;
      13: invokeinterface #82,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getActivePage:()Lorg/eclipse/ui/IWorkbenchPage;
      18: astore_2
      19: aload_2
      20: ifnull        30
      23: aload_2
      24: invokeinterface #77,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchPage.getPerspective:()Lorg/eclipse/ui/IPerspectiveDescriptor;
      29: astore_1
      30: aload_0
      31: aload_1
      32: invokevirtual #74                 // Method update:(Lorg/eclipse/ui/IPerspectiveDescriptor;)V
      35: return

  protected void update(org.eclipse.ui.IPerspectiveDescriptor);
    Code:
       0: aload_0
       1: getfield      #69                 // Field action:Lorg/eclipse/jface/action/IAction;
       4: ifnull        25
       7: aload_0
       8: getfield      #69                 // Field action:Lorg/eclipse/jface/action/IAction;
      11: aload_1
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokeinterface #76,  2           // InterfaceMethod org/eclipse/jface/action/IAction.setEnabled:(Z)V
      25: return
}
