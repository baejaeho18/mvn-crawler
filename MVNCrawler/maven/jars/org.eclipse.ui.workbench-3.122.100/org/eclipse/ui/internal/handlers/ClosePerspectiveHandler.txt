Compiled from "ClosePerspectiveHandler.java"
public class org.eclipse.ui.internal.handlers.ClosePerspectiveHandler extends org.eclipse.core.commands.AbstractHandler {
  public org.eclipse.ui.internal.handlers.ClosePerspectiveHandler();
    Code:
       0: aload_0
       1: invokespecial #81                 // Method org/eclipse/core/commands/AbstractHandler."<init>":()V
       4: return

  public java.lang.Object execute(org.eclipse.core.commands.ExecutionEvent) throws org.eclipse.core.commands.ExecutionException;
    Code:
       0: aload_1
       1: invokestatic  #83                 // Method org/eclipse/ui/handlers/HandlerUtil.getActiveWorkbenchWindow:(Lorg/eclipse/core/commands/ExecutionEvent;)Lorg/eclipse/ui/IWorkbenchWindow;
       4: astore_2
       5: aload_2
       6: ifnull        94
       9: aload_2
      10: invokeinterface #91,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getActivePage:()Lorg/eclipse/ui/IWorkbenchPage;
      15: checkcast     #47                 // class org/eclipse/ui/internal/WorkbenchPage
      18: astore_3
      19: aload_3
      20: ifnull        94
      23: aload_1
      24: invokevirtual #82                 // Method org/eclipse/core/commands/ExecutionEvent.getParameters:()Ljava/util/Map;
      27: astore        4
      29: aload         4
      31: ldc           #2                  // String org.eclipse.ui.window.closePerspective.perspectiveId
      33: invokeinterface #87,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #38                 // class java/lang/String
      41: astore        5
      43: aload         5
      45: ifnonnull     61
      48: aload_3
      49: aload_3
      50: invokevirtual #84                 // Method org/eclipse/ui/internal/WorkbenchPage.getPerspective:()Lorg/eclipse/ui/IPerspectiveDescriptor;
      53: iconst_1
      54: iconst_1
      55: invokevirtual #85                 // Method org/eclipse/ui/internal/WorkbenchPage.closePerspective:(Lorg/eclipse/ui/IPerspectiveDescriptor;ZZ)V
      58: goto          94
      61: aload_2
      62: invokeinterface #90,  1           // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
      67: invokeinterface #89,  1           // InterfaceMethod org/eclipse/ui/IWorkbench.getPerspectiveRegistry:()Lorg/eclipse/ui/IPerspectiveRegistry;
      72: aload         5
      74: invokeinterface #88,  2           // InterfaceMethod org/eclipse/ui/IPerspectiveRegistry.findPerspectiveWithId:(Ljava/lang/String;)Lorg/eclipse/ui/IPerspectiveDescriptor;
      79: astore        6
      81: aload         6
      83: ifnull        94
      86: aload_3
      87: aload         6
      89: iconst_1
      90: iconst_1
      91: invokevirtual #85                 // Method org/eclipse/ui/internal/WorkbenchPage.closePerspective:(Lorg/eclipse/ui/IPerspectiveDescriptor;ZZ)V
      94: aconst_null
      95: areturn

  public static void closePerspective(org.eclipse.ui.internal.WorkbenchPage, java.lang.Object);
    Code:
       0: ldc           #1                  // String Need a better way to close the perspective
       2: invokestatic  #86                 // Method org/eclipse/ui/internal/e4/compatibility/E4Util.unsupported:(Ljava/lang/String;)V
       5: return
}
