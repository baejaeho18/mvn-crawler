Compiled from "TabBehaviour.java"
public abstract class org.eclipse.ui.internal.tweaklets.TabBehaviour {
  public static org.eclipse.ui.internal.tweaklets.Tweaklets$TweakKey KEY;

  static {};
    Code:
       0: new           #66                 // class org/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey
       3: dup
       4: ldc           #2                  // class org/eclipse/ui/internal/tweaklets/TabBehaviour
       6: invokespecial #112                // Method org/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey."<init>":(Ljava/lang/Class;)V
       9: putstatic     #101                // Field KEY:Lorg/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey;
      12: getstatic     #101                // Field KEY:Lorg/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey;
      15: new           #64                 // class org/eclipse/ui/internal/tweaklets/TabBehaviourMRU
      18: dup
      19: invokespecial #110                // Method org/eclipse/ui/internal/tweaklets/TabBehaviourMRU."<init>":()V
      22: invokestatic  #111                // Method org/eclipse/ui/internal/tweaklets/Tweaklets.setDefault:(Lorg/eclipse/ui/internal/tweaklets/Tweaklets$TweakKey;Ljava/lang/Object;)V
      25: return

  public org.eclipse.ui.internal.tweaklets.TabBehaviour();
    Code:
       0: aload_0
       1: invokespecial #102                // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean alwaysShowPinAction();

  public abstract org.eclipse.ui.IEditorReference findReusableEditor(org.eclipse.ui.internal.WorkbenchPage);

  public abstract org.eclipse.ui.IEditorReference reuseInternalEditor(org.eclipse.ui.internal.WorkbenchPage, java.lang.Object, java.lang.Object, org.eclipse.ui.internal.registry.EditorDescriptor, org.eclipse.ui.IEditorInput, org.eclipse.ui.IEditorReference);

  public void setPreferenceVisibility(org.eclipse.swt.widgets.Composite, org.eclipse.swt.widgets.Button);
    Code:
       0: return

  public boolean autoPinOnDirty();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPerTabHistoryEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public int getReuseEditorMatchFlags(int);
    Code:
       0: iload_1
       1: ireturn

  public int getEditorReuseThreshold();
    Code:
       0: invokestatic  #109                // Method org/eclipse/ui/internal/WorkbenchPlugin.getDefault:()Lorg/eclipse/ui/internal/WorkbenchPlugin;
       3: invokevirtual #108                // Method org/eclipse/ui/internal/WorkbenchPlugin.getPreferenceStore:()Lorg/eclipse/jface/preference/IPreferenceStore;
       6: astore_1
       7: aload_1
       8: ldc           #1                  // String REUSE_OPEN_EDITORS
      10: invokeinterface #113,  2          // InterfaceMethod org/eclipse/jface/preference/IPreferenceStore.getInt:(Ljava/lang/String;)I
      15: ireturn

  public boolean enableMRUTabVisibility();
    Code:
       0: iconst_1
       1: ireturn

  public boolean sortEditorListAlphabetically();
    Code:
       0: iconst_1
       1: ireturn

  public org.eclipse.swt.graphics.Color createVisibleEditorsColor(org.eclipse.swt.widgets.Display, org.eclipse.swt.graphics.RGB, org.eclipse.swt.graphics.RGB);
    Code:
       0: new           #59                 // class org/eclipse/swt/graphics/Color
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #103                // Method org/eclipse/swt/graphics/Color."<init>":(Lorg/eclipse/swt/graphics/Device;Lorg/eclipse/swt/graphics/RGB;)V
       9: areturn

  public org.eclipse.swt.graphics.Font createVisibleEditorsFont(org.eclipse.swt.widgets.Display, org.eclipse.swt.graphics.Font);
    Code:
       0: aload_2
       1: invokevirtual #104                // Method org/eclipse/swt/graphics/Font.getFontData:()[Lorg/eclipse/swt/graphics/FontData;
       4: astore_3
       5: new           #60                 // class org/eclipse/swt/graphics/Font
       8: dup
       9: aload_1
      10: aload_3
      11: invokespecial #105                // Method org/eclipse/swt/graphics/Font."<init>":(Lorg/eclipse/swt/graphics/Device;[Lorg/eclipse/swt/graphics/FontData;)V
      14: areturn

  public org.eclipse.swt.graphics.Font createInvisibleEditorsFont(org.eclipse.swt.widgets.Display, org.eclipse.swt.graphics.Font);
    Code:
       0: aload_2
       1: invokevirtual #104                // Method org/eclipse/swt/graphics/Font.getFontData:()[Lorg/eclipse/swt/graphics/FontData;
       4: astore_3
       5: aload_3
       6: dup
       7: astore        7
       9: arraylength
      10: istore        6
      12: iconst_0
      13: istore        5
      15: goto          40
      18: aload         7
      20: iload         5
      22: aaload
      23: astore        4
      25: aload         4
      27: aload         4
      29: invokevirtual #106                // Method org/eclipse/swt/graphics/FontData.getStyle:()I
      32: iconst_1
      33: ior
      34: invokevirtual #107                // Method org/eclipse/swt/graphics/FontData.setStyle:(I)V
      37: iinc          5, 1
      40: iload         5
      42: iload         6
      44: if_icmplt     18
      47: new           #60                 // class org/eclipse/swt/graphics/Font
      50: dup
      51: aload_1
      52: aload_3
      53: invokespecial #105                // Method org/eclipse/swt/graphics/Font."<init>":(Lorg/eclipse/swt/graphics/Device;[Lorg/eclipse/swt/graphics/FontData;)V
      56: areturn
}
