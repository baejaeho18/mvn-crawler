Compiled from "ToggleCoolbarHandler.java"
public class org.eclipse.ui.internal.handlers.ToggleCoolbarHandler extends org.eclipse.core.commands.AbstractHandler implements org.eclipse.ui.commands.IElementUpdater {
  public org.eclipse.ui.internal.handlers.ToggleCoolbarHandler();
    Code:
       0: aload_0
       1: invokespecial #80                 // Method org/eclipse/core/commands/AbstractHandler."<init>":()V
       4: return

  public java.lang.Object execute(org.eclipse.core.commands.ExecutionEvent) throws org.eclipse.core.commands.ExecutionException;
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method org/eclipse/ui/handlers/HandlerUtil.getActiveWorkbenchWindowChecked:(Lorg/eclipse/core/commands/ExecutionEvent;)Lorg/eclipse/ui/IWorkbenchWindow;
       4: astore_2
       5: aload_2
       6: instanceof    #46                 // class org/eclipse/ui/internal/WorkbenchWindow
       9: ifeq          21
      12: aload_2
      13: checkcast     #46                 // class org/eclipse/ui/internal/WorkbenchWindow
      16: astore_3
      17: aload_3
      18: invokevirtual #82                 // Method org/eclipse/ui/internal/WorkbenchWindow.toggleToolbarVisibility:()V
      21: aconst_null
      22: areturn

  public void updateElement(org.eclipse.ui.menus.UIElement, java.util.Map);
    Code:
       0: aload_1
       1: invokevirtual #87                 // Method org/eclipse/ui/menus/UIElement.getServiceLocator:()Lorg/eclipse/ui/services/IServiceLocator;
       4: ldc           #1                  // class org/eclipse/ui/internal/services/IWorkbenchLocationService
       6: invokeinterface #89,  2           // InterfaceMethod org/eclipse/ui/services/IServiceLocator.getService:(Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #1                  // class org/eclipse/ui/internal/services/IWorkbenchLocationService
      14: astore_3
      15: aload_3
      16: invokeinterface #88,  1           // InterfaceMethod org/eclipse/ui/internal/services/IWorkbenchLocationService.getWorkbenchWindow:()Lorg/eclipse/ui/IWorkbenchWindow;
      21: astore        4
      23: aload         4
      25: ifnull        36
      28: aload         4
      30: instanceof    #46                 // class org/eclipse/ui/internal/WorkbenchWindow
      33: ifne          37
      36: return
      37: aload_1
      38: aload_0
      39: aload         4
      41: checkcast     #46                 // class org/eclipse/ui/internal/WorkbenchWindow
      44: invokevirtual #85                 // Method isCoolbarVisible:(Lorg/eclipse/ui/internal/WorkbenchWindow;)Z
      47: ifeq          56
      50: getstatic     #78                 // Field org/eclipse/ui/internal/WorkbenchMessages.ToggleCoolbarVisibilityAction_hide_text:Ljava/lang/String;
      53: goto          59
      56: getstatic     #79                 // Field org/eclipse/ui/internal/WorkbenchMessages.ToggleCoolbarVisibilityAction_show_text:Ljava/lang/String;
      59: invokevirtual #86                 // Method org/eclipse/ui/menus/UIElement.setText:(Ljava/lang/String;)V
      62: return

  private boolean isCoolbarVisible(org.eclipse.ui.internal.WorkbenchWindow);
    Code:
       0: aload_1
       1: invokevirtual #83                 // Method org/eclipse/ui/internal/WorkbenchWindow.getCoolBarVisible:()Z
       4: ifne          16
       7: aload_1
       8: invokevirtual #84                 // Method org/eclipse/ui/internal/WorkbenchWindow.getPerspectiveBarVisible:()Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: iconst_1
      17: ireturn
}
