Compiled from "CascadingFontRegistry.java"
public class org.eclipse.ui.internal.themes.CascadingFontRegistry extends org.eclipse.jface.resource.FontRegistry {
  private org.eclipse.jface.resource.FontRegistry parent;

  private org.eclipse.jface.util.IPropertyChangeListener listener;

  public org.eclipse.ui.internal.themes.CascadingFontRegistry(org.eclipse.jface.resource.FontRegistry);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method org/eclipse/swt/widgets/Display.getCurrent:()Lorg/eclipse/swt/widgets/Display;
       4: iconst_0
       5: invokespecial #112                // Method org/eclipse/jface/resource/FontRegistry."<init>":(Lorg/eclipse/swt/widgets/Display;Z)V
       8: aload_0
       9: aload_0
      10: invokedynamic #129,  0            // InvokeDynamic #0:propertyChange:(Lorg/eclipse/ui/internal/themes/CascadingFontRegistry;)Lorg/eclipse/jface/util/IPropertyChangeListener;
      15: putfield      #105                // Field listener:Lorg/eclipse/jface/util/IPropertyChangeListener;
      18: aload_0
      19: aload_1
      20: putfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
      23: aload_1
      24: aload_0
      25: getfield      #105                // Field listener:Lorg/eclipse/jface/util/IPropertyChangeListener;
      28: invokevirtual #110                // Method org/eclipse/jface/resource/FontRegistry.addListener:(Lorg/eclipse/jface/util/IPropertyChangeListener;)V
      31: return

  public org.eclipse.swt.graphics.Font get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method org/eclipse/jface/resource/FontRegistry.hasValueFor:(Ljava/lang/String;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #113                // Method org/eclipse/jface/resource/FontRegistry.get:(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Font;
      13: areturn
      14: aload_0
      15: getfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
      18: aload_1
      19: invokevirtual #113                // Method org/eclipse/jface/resource/FontRegistry.get:(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Font;
      22: areturn

  public java.util.Set<java.lang.String> getKeySet();
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokespecial #109                // Method org/eclipse/jface/resource/FontRegistry.getKeySet:()Ljava/util/Set;
       8: invokespecial #107                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
      17: invokevirtual #109                // Method org/eclipse/jface/resource/FontRegistry.getKeySet:()Ljava/util/Set;
      20: invokeinterface #124,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: areturn

  public org.eclipse.swt.graphics.FontData[] getFontData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method org/eclipse/jface/resource/FontRegistry.hasValueFor:(Ljava/lang/String;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #114                // Method org/eclipse/jface/resource/FontRegistry.getFontData:(Ljava/lang/String;)[Lorg/eclipse/swt/graphics/FontData;
      13: areturn
      14: aload_0
      15: getfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
      18: aload_1
      19: invokevirtual #114                // Method org/eclipse/jface/resource/FontRegistry.getFontData:(Ljava/lang/String;)[Lorg/eclipse/swt/graphics/FontData;
      22: areturn

  public boolean hasValueFor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method org/eclipse/jface/resource/FontRegistry.hasValueFor:(Ljava/lang/String;)Z
       5: ifne          21
       8: aload_0
       9: getfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
      12: aload_1
      13: invokevirtual #108                // Method org/eclipse/jface/resource/FontRegistry.hasValueFor:(Ljava/lang/String;)Z
      16: ifne          21
      19: iconst_0
      20: ireturn
      21: iconst_1
      22: ireturn

  public boolean hasOverrideFor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method org/eclipse/jface/resource/FontRegistry.hasValueFor:(Ljava/lang/String;)Z
       5: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #104                // Field parent:Lorg/eclipse/jface/resource/FontRegistry;
       4: aload_0
       5: getfield      #105                // Field listener:Lorg/eclipse/jface/util/IPropertyChangeListener;
       8: invokevirtual #111                // Method org/eclipse/jface/resource/FontRegistry.removeListener:(Lorg/eclipse/jface/util/IPropertyChangeListener;)V
      11: invokestatic  #120                // Method org/eclipse/ui/PlatformUI.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
      14: invokeinterface #125,  1          // InterfaceMethod org/eclipse/ui/IWorkbench.getDisplay:()Lorg/eclipse/swt/widgets/Display;
      19: aload_0
      20: getfield      #103                // Field displayRunnable:Ljava/lang/Runnable;
      23: invokevirtual #118                // Method org/eclipse/swt/widgets/Display.asyncExec:(Ljava/lang/Runnable;)V
      26: return

  private void lambda$0(org.eclipse.jface.util.PropertyChangeEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #117                // Method org/eclipse/jface/util/PropertyChangeEvent.getProperty:()Ljava/lang/String;
       5: invokevirtual #121                // Method hasOverrideFor:(Ljava/lang/String;)Z
       8: ifne          27
      11: aload_0
      12: aload_1
      13: invokevirtual #117                // Method org/eclipse/jface/util/PropertyChangeEvent.getProperty:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #116                // Method org/eclipse/jface/util/PropertyChangeEvent.getOldValue:()Ljava/lang/Object;
      20: aload_1
      21: invokevirtual #115                // Method org/eclipse/jface/util/PropertyChangeEvent.getNewValue:()Ljava/lang/Object;
      24: invokevirtual #123                // Method fireMappingChanged:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return
}
