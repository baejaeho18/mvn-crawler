Compiled from "ExportWizard.java"
public class org.eclipse.ui.internal.dialogs.ExportWizard extends org.eclipse.jface.wizard.Wizard {
  private org.eclipse.ui.IWorkbench theWorkbench;

  private org.eclipse.jface.viewers.IStructuredSelection selection;

  public org.eclipse.ui.internal.dialogs.ExportWizard();
    Code:
       0: aload_0
       1: invokespecial #102                // Method org/eclipse/jface/wizard/Wizard."<init>":()V
       4: return

  public void addPages();
    Code:
       0: aload_0
       1: new           #53                 // class org/eclipse/ui/internal/dialogs/ExportWizard$SelectionPage
       4: dup
       5: aload_0
       6: getfield      #100                // Field theWorkbench:Lorg/eclipse/ui/IWorkbench;
       9: aload_0
      10: getfield      #99                 // Field selection:Lorg/eclipse/jface/viewers/IStructuredSelection;
      13: aload_0
      14: invokevirtual #111                // Method getAvailableExportWizards:()Lorg/eclipse/ui/model/AdaptableList;
      17: getstatic     #97                 // Field org/eclipse/ui/internal/WorkbenchMessages.ExportWizard_selectWizard:Ljava/lang/String;
      20: invokespecial #113                // Method org/eclipse/ui/internal/dialogs/ExportWizard$SelectionPage."<init>":(Lorg/eclipse/ui/IWorkbench;Lorg/eclipse/jface/viewers/IStructuredSelection;Lorg/eclipse/ui/model/AdaptableList;Ljava/lang/String;)V
      23: invokevirtual #110                // Method addPage:(Lorg/eclipse/jface/wizard/IWizardPage;)V
      26: return

  protected org.eclipse.ui.model.AdaptableList getAvailableExportWizards();
    Code:
       0: invokestatic  #104                // Method org/eclipse/ui/internal/WorkbenchPlugin.getDefault:()Lorg/eclipse/ui/internal/WorkbenchPlugin;
       3: invokevirtual #105                // Method org/eclipse/ui/internal/WorkbenchPlugin.getExportWizardRegistry:()Lorg/eclipse/ui/wizards/IWizardRegistry;
       6: invokeinterface #117,  1          // InterfaceMethod org/eclipse/ui/wizards/IWizardRegistry.getRootCategory:()Lorg/eclipse/ui/wizards/IWizardCategory;
      11: astore_1
      12: aload_1
      13: new           #47                 // class org/eclipse/core/runtime/Path
      16: dup
      17: ldc           #2                  // String org.eclipse.ui.Other
      19: invokespecial #101                // Method org/eclipse/core/runtime/Path."<init>":(Ljava/lang/String;)V
      22: invokeinterface #116,  2          // InterfaceMethod org/eclipse/ui/wizards/IWizardCategory.findCategory:(Lorg/eclipse/core/runtime/IPath;)Lorg/eclipse/ui/wizards/IWizardCategory;
      27: checkcast     #55                 // class org/eclipse/ui/internal/dialogs/WizardCollectionElement
      30: astore_2
      31: aload_2
      32: ifnonnull     43
      35: new           #56                 // class org/eclipse/ui/model/AdaptableList
      38: dup
      39: invokespecial #115                // Method org/eclipse/ui/model/AdaptableList."<init>":()V
      42: areturn
      43: aload_2
      44: invokevirtual #114                // Method org/eclipse/ui/internal/dialogs/WizardCollectionElement.getWizardAdaptableList:()Lorg/eclipse/ui/model/AdaptableList;
      47: areturn

  public void init(org.eclipse.ui.IWorkbench, org.eclipse.jface.viewers.IStructuredSelection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field theWorkbench:Lorg/eclipse/ui/IWorkbench;
       5: aload_0
       6: aload_2
       7: putfield      #99                 // Field selection:Lorg/eclipse/jface/viewers/IStructuredSelection;
      10: aload_0
      11: getstatic     #98                 // Field org/eclipse/ui/internal/WorkbenchMessages.ExportWizard_title:Ljava/lang/String;
      14: invokevirtual #107                // Method setWindowTitle:(Ljava/lang/String;)V
      17: aload_0
      18: ldc           #1                  // String IMG_WIZBAN_EXPORT_WIZ
      20: invokestatic  #103                // Method org/eclipse/ui/internal/WorkbenchImages.getImageDescriptor:(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor;
      23: invokevirtual #108                // Method setDefaultPageImageDescriptor:(Lorg/eclipse/jface/resource/ImageDescriptor;)V
      26: aload_0
      27: iconst_1
      28: invokevirtual #106                // Method setNeedsProgressMonitor:(Z)V
      31: return

  public boolean performFinish();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method getPages:()[Lorg/eclipse/jface/wizard/IWizardPage;
       4: iconst_0
       5: aaload
       6: checkcast     #53                 // class org/eclipse/ui/internal/dialogs/ExportWizard$SelectionPage
       9: invokevirtual #112                // Method org/eclipse/ui/internal/dialogs/ExportWizard$SelectionPage.saveWidgetValues:()V
      12: iconst_1
      13: ireturn
}
