Compiled from "IWorkbenchPage.java"
public interface org.eclipse.ui.IWorkbenchPage extends org.eclipse.ui.IPartService,org.eclipse.ui.ISelectionService {
  public static final java.lang.String EDITOR_ID_ATTR;

  public static final java.lang.String CHANGE_RESET;

  public static final java.lang.String CHANGE_RESET_COMPLETE;

  public static final java.lang.String CHANGE_VIEW_SHOW;

  public static final java.lang.String CHANGE_VIEW_HIDE;

  public static final java.lang.String CHANGE_EDITOR_OPEN;

  public static final java.lang.String CHANGE_EDITOR_CLOSE;

  public static final java.lang.String CHANGE_EDITOR_AREA_SHOW;

  public static final java.lang.String CHANGE_EDITOR_AREA_HIDE;

  public static final java.lang.String CHANGE_ACTION_SET_SHOW;

  public static final java.lang.String CHANGE_ACTION_SET_HIDE;

  public static final java.lang.String CHANGE_FAST_VIEW_ADD;

  public static final java.lang.String CHANGE_FAST_VIEW_REMOVE;

  public static final java.lang.String CHANGE_WORKING_SET_REPLACE;

  public static final java.lang.String CHANGE_WORKING_SETS_REPLACE;

  public static final int VIEW_ACTIVATE;

  public static final int VIEW_VISIBLE;

  public static final int VIEW_CREATE;

  public static final int MATCH_NONE;

  public static final int MATCH_INPUT;

  public static final int MATCH_ID;

  public static final int STATE_MINIMIZED;

  public static final int STATE_MAXIMIZED;

  public static final int STATE_RESTORED;

  public abstract void activate(org.eclipse.ui.IWorkbenchPart);

  public abstract void addPropertyChangeListener(org.eclipse.jface.util.IPropertyChangeListener);

  public abstract void bringToTop(org.eclipse.ui.IWorkbenchPart);

  public abstract boolean close();

  public abstract boolean closeAllEditors(boolean);

  public abstract boolean closeEditors(org.eclipse.ui.IEditorReference[], boolean);

  public abstract boolean closeEditor(org.eclipse.ui.IEditorPart, boolean);

  public abstract org.eclipse.ui.IViewPart findView(java.lang.String);

  public abstract org.eclipse.ui.IViewReference findViewReference(java.lang.String);

  public abstract org.eclipse.ui.IViewReference findViewReference(java.lang.String, java.lang.String);

  public abstract org.eclipse.ui.IEditorPart getActiveEditor();

  public abstract org.eclipse.ui.IEditorPart findEditor(org.eclipse.ui.IEditorInput);

  public abstract org.eclipse.ui.IEditorReference[] findEditors(org.eclipse.ui.IEditorInput, java.lang.String, int);

  public abstract org.eclipse.ui.IEditorPart[] getEditors();

  public abstract org.eclipse.ui.IEditorReference[] getEditorReferences();

  public abstract org.eclipse.ui.IEditorPart[] getDirtyEditors();

  public abstract org.eclipse.core.runtime.IAdaptable getInput();

  public abstract java.lang.String getLabel();

  public abstract org.eclipse.ui.IPerspectiveDescriptor getPerspective();

  public abstract org.eclipse.ui.IViewReference[] getViewReferences();

  public abstract org.eclipse.ui.IViewPart[] getViews();

  public abstract org.eclipse.ui.IWorkbenchWindow getWorkbenchWindow();

  public abstract org.eclipse.ui.IWorkingSet getWorkingSet();

  public abstract void hideActionSet(java.lang.String);

  public abstract void hideView(org.eclipse.ui.IViewPart);

  public abstract void hideView(org.eclipse.ui.IViewReference);

  public abstract boolean isPartVisible(org.eclipse.ui.IWorkbenchPart);

  public abstract boolean isEditorAreaVisible();

  public abstract void reuseEditor(org.eclipse.ui.IReusableEditor, org.eclipse.ui.IEditorInput);

  public abstract org.eclipse.ui.IEditorPart openEditor(org.eclipse.ui.IEditorInput, java.lang.String) throws org.eclipse.ui.PartInitException;

  public abstract org.eclipse.ui.IEditorPart openEditor(org.eclipse.ui.IEditorInput, java.lang.String, boolean) throws org.eclipse.ui.PartInitException;

  public abstract org.eclipse.ui.IEditorPart openEditor(org.eclipse.ui.IEditorInput, java.lang.String, boolean, int) throws org.eclipse.ui.PartInitException;

  public abstract void removePropertyChangeListener(org.eclipse.jface.util.IPropertyChangeListener);

  public abstract void resetPerspective();

  public abstract boolean saveAllEditors(boolean);

  public abstract boolean saveEditor(org.eclipse.ui.IEditorPart, boolean);

  public abstract void savePerspective();

  public abstract void savePerspectiveAs(org.eclipse.ui.IPerspectiveDescriptor);

  public abstract void setEditorAreaVisible(boolean);

  public abstract void setPerspective(org.eclipse.ui.IPerspectiveDescriptor);

  public abstract void showActionSet(java.lang.String);

  public abstract org.eclipse.ui.IViewPart showView(java.lang.String) throws org.eclipse.ui.PartInitException;

  public abstract org.eclipse.ui.IViewPart showView(java.lang.String, java.lang.String, int) throws org.eclipse.ui.PartInitException;

  public abstract boolean isEditorPinned(org.eclipse.ui.IEditorPart);

  public abstract int getEditorReuseThreshold();

  public abstract void setEditorReuseThreshold(int);

  public abstract org.eclipse.ui.INavigationHistory getNavigationHistory();

  public abstract org.eclipse.ui.IViewPart[] getViewStack(org.eclipse.ui.IViewPart);

  public abstract java.lang.String[] getNewWizardShortcuts();

  public abstract java.lang.String[] getPerspectiveShortcuts();

  public abstract java.lang.String[] getShowViewShortcuts();

  public abstract org.eclipse.ui.IPerspectiveDescriptor[] getOpenPerspectives();

  public abstract org.eclipse.ui.IPerspectiveDescriptor[] getSortedPerspectives();

  public abstract void closePerspective(org.eclipse.ui.IPerspectiveDescriptor, boolean, boolean);

  public abstract void closeAllPerspectives(boolean, boolean);

  public abstract org.eclipse.core.runtime.dynamichelpers.IExtensionTracker getExtensionTracker();

  public abstract org.eclipse.ui.IWorkingSet[] getWorkingSets();

  public abstract void setWorkingSets(org.eclipse.ui.IWorkingSet[]);

  public abstract org.eclipse.ui.IWorkingSet getAggregateWorkingSet();

  public abstract boolean isPageZoomed();

  public abstract void zoomOut();

  public abstract void toggleZoom(org.eclipse.ui.IWorkbenchPartReference);

  public abstract int getPartState(org.eclipse.ui.IWorkbenchPartReference);

  public abstract void setPartState(org.eclipse.ui.IWorkbenchPartReference, int);

  public abstract org.eclipse.ui.IWorkbenchPartReference getReference(org.eclipse.ui.IWorkbenchPart);

  public abstract void showEditor(org.eclipse.ui.IEditorReference);

  public abstract void hideEditor(org.eclipse.ui.IEditorReference);

  public abstract org.eclipse.ui.IEditorReference[] openEditors(org.eclipse.ui.IEditorInput[], java.lang.String[], int) throws org.eclipse.ui.MultiPartInitException;

  public abstract org.eclipse.ui.IEditorReference[] openEditors(org.eclipse.ui.IEditorInput[], java.lang.String[], org.eclipse.ui.IMemento[], int, int) throws org.eclipse.ui.MultiPartInitException;

  public abstract org.eclipse.ui.IMemento[] getEditorState(org.eclipse.ui.IEditorReference[], boolean);
}
