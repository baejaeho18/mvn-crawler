Compiled from "IContextService.java"
public interface org.eclipse.ui.contexts.IContextService extends org.eclipse.ui.services.IServiceWithSources {
  public static final java.lang.String CONTEXT_ID_WORKBENCH_MENU;

  public static final java.lang.String CONTEXT_ID_DIALOG;

  public static final java.lang.String CONTEXT_ID_DIALOG_AND_WINDOW;

  public static final java.lang.String CONTEXT_ID_WINDOW;

  public static final int TYPE_DIALOG;

  public static final int TYPE_NONE;

  public static final int TYPE_WINDOW;

  public abstract org.eclipse.ui.contexts.IContextActivation activateContext(java.lang.String);

  public abstract org.eclipse.ui.contexts.IContextActivation activateContext(java.lang.String, org.eclipse.core.expressions.Expression);

  public abstract org.eclipse.ui.contexts.IContextActivation activateContext(java.lang.String, org.eclipse.core.expressions.Expression, boolean);

  public abstract org.eclipse.ui.contexts.IContextActivation activateContext(java.lang.String, org.eclipse.core.expressions.Expression, int);

  public abstract void addContextManagerListener(org.eclipse.core.commands.contexts.IContextManagerListener);

  public abstract void deactivateContext(org.eclipse.ui.contexts.IContextActivation);

  public abstract void deactivateContexts(java.util.Collection);

  public abstract java.util.Collection getActiveContextIds();

  public abstract org.eclipse.core.commands.contexts.Context getContext(java.lang.String);

  public abstract org.eclipse.core.commands.contexts.Context[] getDefinedContexts();

  public abstract java.util.Collection getDefinedContextIds();

  public abstract int getShellType(org.eclipse.swt.widgets.Shell);

  public abstract void readRegistry();

  public abstract boolean registerShell(org.eclipse.swt.widgets.Shell, int);

  public abstract void removeContextManagerListener(org.eclipse.core.commands.contexts.IContextManagerListener);

  public abstract boolean unregisterShell(org.eclipse.swt.widgets.Shell);

  public abstract void deferUpdates(boolean);
}
