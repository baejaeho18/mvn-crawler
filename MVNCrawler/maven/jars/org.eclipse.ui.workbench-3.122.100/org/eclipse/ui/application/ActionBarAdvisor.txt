Compiled from "ActionBarAdvisor.java"
public class org.eclipse.ui.application.ActionBarAdvisor {
  public static final int FILL_PROXY;

  public static final int FILL_MENU_BAR;

  public static final int FILL_COOL_BAR;

  public static final int FILL_STATUS_LINE;

  private org.eclipse.ui.application.IActionBarConfigurer actionBarConfigurer;

  private java.util.Map<java.lang.String, org.eclipse.jface.action.IAction> actions;

  private boolean menuCreated;

  public org.eclipse.ui.application.ActionBarAdvisor(org.eclipse.ui.application.IActionBarConfigurer);
    Code:
       0: aload_0
       1: invokespecial #210                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #105                // class java/util/HashMap
       8: dup
       9: invokespecial #213                // Method java/util/HashMap."<init>":()V
      12: putfield      #208                // Field actions:Ljava/util/Map;
      15: aload_1
      16: invokestatic  #214                // Method org/eclipse/core/runtime/Assert.isNotNull:(Ljava/lang/Object;)V
      19: aload_0
      20: aload_1
      21: putfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      24: return

  protected org.eclipse.ui.application.IActionBarConfigurer getActionBarConfigurer();
    Code:
       0: aload_0
       1: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
       4: areturn

  public void fillActionBars(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifne          24
       6: aload_0
       7: aload_0
       8: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      11: invokeinterface #242,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getWindowConfigurer:()Lorg/eclipse/ui/application/IWorkbenchWindowConfigurer;
      16: invokeinterface #243,  1          // InterfaceMethod org/eclipse/ui/application/IWorkbenchWindowConfigurer.getWindow:()Lorg/eclipse/ui/IWorkbenchWindow;
      21: invokevirtual #223                // Method makeActions:(Lorg/eclipse/ui/IWorkbenchWindow;)V
      24: iload_1
      25: iconst_2
      26: iand
      27: ifeq          48
      30: aload_0
      31: aload_0
      32: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      35: invokeinterface #240,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getMenuManager:()Lorg/eclipse/jface/action/IMenuManager;
      40: invokevirtual #221                // Method fillMenuBar:(Lorg/eclipse/jface/action/IMenuManager;)V
      43: aload_0
      44: iconst_1
      45: putfield      #207                // Field menuCreated:Z
      48: iload_1
      49: iconst_4
      50: iand
      51: ifeq          67
      54: aload_0
      55: aload_0
      56: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      59: invokeinterface #239,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getCoolBarManager:()Lorg/eclipse/jface/action/ICoolBarManager;
      64: invokevirtual #220                // Method fillCoolBar:(Lorg/eclipse/jface/action/ICoolBarManager;)V
      67: iload_1
      68: bipush        8
      70: iand
      71: ifeq          87
      74: aload_0
      75: aload_0
      76: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      79: invokeinterface #241,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getStatusLineManager:()Lorg/eclipse/jface/action/IStatusLineManager;
      84: invokevirtual #222                // Method fillStatusLine:(Lorg/eclipse/jface/action/IStatusLineManager;)V
      87: return

  protected void makeActions(org.eclipse.ui.IWorkbenchWindow);
    Code:
       0: return

  protected void register(org.eclipse.jface.action.IAction);
    Code:
       0: aload_1
       1: ldc           #1                  // String Action must not be null
       3: invokestatic  #215                // Method org/eclipse/core/runtime/Assert.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #233,  1          // InterfaceMethod org/eclipse/jface/action/IAction.getId:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ldc           #2                  // String Action must not have null id
      16: invokestatic  #215                // Method org/eclipse/core/runtime/Assert.isNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload_1
      20: instanceof    #118                // class org/eclipse/ui/actions/RetargetAction
      23: ifeq          80
      26: aload_1
      27: invokeinterface #232,  1          // InterfaceMethod org/eclipse/jface/action/IAction.getActionDefinitionId:()Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: ifnull        90
      37: aload_0
      38: invokevirtual #224                // Method getActionBarConfigurer:()Lorg/eclipse/ui/application/IActionBarConfigurer;
      41: invokeinterface #242,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getWindowConfigurer:()Lorg/eclipse/ui/application/IWorkbenchWindowConfigurer;
      46: invokeinterface #243,  1          // InterfaceMethod org/eclipse/ui/application/IWorkbenchWindowConfigurer.getWindow:()Lorg/eclipse/ui/IWorkbenchWindow;
      51: ldc           #3                  // class org/eclipse/ui/internal/handlers/IActionCommandMappingService
      53: invokeinterface #236,  2          // InterfaceMethod org/eclipse/ui/IWorkbenchWindow.getService:(Ljava/lang/Class;)Ljava/lang/Object;
      58: checkcast     #3                  // class org/eclipse/ui/internal/handlers/IActionCommandMappingService
      61: astore        4
      63: aload         4
      65: ifnull        90
      68: aload         4
      70: aload_2
      71: aload_3
      72: invokeinterface #244,  3          // InterfaceMethod org/eclipse/ui/internal/handlers/IActionCommandMappingService.map:(Ljava/lang/String;Ljava/lang/String;)V
      77: goto          90
      80: aload_0
      81: invokevirtual #224                // Method getActionBarConfigurer:()Lorg/eclipse/ui/application/IActionBarConfigurer;
      84: aload_1
      85: invokeinterface #238,  2          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.registerGlobalAction:(Lorg/eclipse/jface/action/IAction;)V
      90: aload_0
      91: getfield      #208                // Field actions:Ljava/util/Map;
      94: aload_2
      95: aload_1
      96: invokeinterface #231,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: return

  protected org.eclipse.jface.action.IAction getAction(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #208                // Field actions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #230,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #110                // class org/eclipse/jface/action/IAction
      13: areturn

  protected void fillMenuBar(org.eclipse.jface.action.IMenuManager);
    Code:
       0: return

  protected void fillCoolBar(org.eclipse.jface.action.ICoolBarManager);
    Code:
       0: return

  protected void fillStatusLine(org.eclipse.jface.action.IStatusLineManager);
    Code:
       0: return

  public boolean isApplicationMenu(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #207                // Field menuCreated:Z
       4: ifeq          43
       7: aload_0
       8: getfield      #209                // Field actionBarConfigurer:Lorg/eclipse/ui/application/IActionBarConfigurer;
      11: invokeinterface #240,  1          // InterfaceMethod org/eclipse/ui/application/IActionBarConfigurer.getMenuManager:()Lorg/eclipse/jface/action/IMenuManager;
      16: astore_1
      17: aload_1
      18: ifnull        43
      21: invokestatic  #217                // Method org/eclipse/ui/PlatformUI.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
      24: invokeinterface #235,  1          // InterfaceMethod org/eclipse/ui/IWorkbench.getDisplay:()Lorg/eclipse/swt/widgets/Display;
      29: aload_1
      30: dup
      31: invokevirtual #211                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: pop
      35: invokedynamic #248,  0            // InvokeDynamic #0:run:(Lorg/eclipse/jface/action/IMenuManager;)Ljava/lang/Runnable;
      40: invokevirtual #216                // Method org/eclipse/swt/widgets/Display.asyncExec:(Ljava/lang/Runnable;)V
      43: aload_0
      44: invokevirtual #218                // Method disposeActions:()V
      47: return

  protected void disposeActions();
    Code:
       0: aload_0
       1: getfield      #208                // Field actions:Ljava/util/Map;
       4: invokeinterface #229,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #225,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: goto          33
      18: aload_1
      19: invokeinterface #227,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #110                // class org/eclipse/jface/action/IAction
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #219                // Method disposeAction:(Lorg/eclipse/jface/action/IAction;)V
      33: aload_1
      34: invokeinterface #226,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifne          18
      42: aload_0
      43: getfield      #208                // Field actions:Ljava/util/Map;
      46: invokeinterface #228,  1          // InterfaceMethod java/util/Map.clear:()V
      51: return

  protected void disposeAction(org.eclipse.jface.action.IAction);
    Code:
       0: aload_1
       1: instanceof    #117                // class org/eclipse/ui/actions/ActionFactory$IWorkbenchAction
       4: ifeq          16
       7: aload_1
       8: checkcast     #117                // class org/eclipse/ui/actions/ActionFactory$IWorkbenchAction
      11: invokeinterface #237,  1          // InterfaceMethod org/eclipse/ui/actions/ActionFactory$IWorkbenchAction.dispose:()V
      16: return

  public org.eclipse.core.runtime.IStatus saveState(org.eclipse.ui.IMemento);
    Code:
       0: getstatic     #206                // Field org/eclipse/core/runtime/Status.OK_STATUS:Lorg/eclipse/core/runtime/IStatus;
       3: areturn

  public org.eclipse.core.runtime.IStatus restoreState(org.eclipse.ui.IMemento);
    Code:
       0: getstatic     #206                // Field org/eclipse/core/runtime/Status.OK_STATUS:Lorg/eclipse/core/runtime/IStatus;
       3: areturn
}
