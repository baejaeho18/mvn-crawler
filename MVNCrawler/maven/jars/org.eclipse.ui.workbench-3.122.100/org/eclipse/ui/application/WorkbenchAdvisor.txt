Compiled from "WorkbenchAdvisor.java"
public abstract class org.eclipse.ui.application.WorkbenchAdvisor {
  public static final int FILL_PROXY;

  public static final int FILL_MENU_BAR;

  public static final int FILL_COOL_BAR;

  public static final int FILL_STATUS_LINE;

  private org.eclipse.ui.application.IWorkbenchConfigurer workbenchConfigurer;

  private org.eclipse.ui.statushandlers.AbstractStatusHandler workbenchErrorHandler;

  private boolean introOpened;

  private volatile boolean initDone;

  protected org.eclipse.ui.application.WorkbenchAdvisor();
    Code:
       0: aload_0
       1: invokespecial #235                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #227                // Field initDone:Z
       9: return

  public final void internalBasicInitialize(org.eclipse.ui.application.IWorkbenchConfigurer);
    Code:
       0: aload_0
       1: getfield      #229                // Field workbenchConfigurer:Lorg/eclipse/ui/application/IWorkbenchConfigurer;
       4: ifnull        15
       7: new           #123                // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #234                // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #229                // Field workbenchConfigurer:Lorg/eclipse/ui/application/IWorkbenchConfigurer;
      20: aload_0
      21: aload_1
      22: invokevirtual #243                // Method initialize:(Lorg/eclipse/ui/application/IWorkbenchConfigurer;)V
      25: return

  public void initialize(org.eclipse.ui.application.IWorkbenchConfigurer);
    Code:
       0: return

  protected org.eclipse.ui.application.IWorkbenchConfigurer getWorkbenchConfigurer();
    Code:
       0: aload_0
       1: getfield      #229                // Field workbenchConfigurer:Lorg/eclipse/ui/application/IWorkbenchConfigurer;
       4: areturn

  public synchronized org.eclipse.ui.statushandlers.AbstractStatusHandler getWorkbenchErrorHandler();
    Code:
       0: aload_0
       1: getfield      #230                // Field workbenchErrorHandler:Lorg/eclipse/ui/statushandlers/AbstractStatusHandler;
       4: ifnonnull     18
       7: aload_0
       8: new           #147                // class org/eclipse/ui/statushandlers/WorkbenchErrorHandler
      11: dup
      12: invokespecial #252                // Method org/eclipse/ui/statushandlers/WorkbenchErrorHandler."<init>":()V
      15: putfield      #230                // Field workbenchErrorHandler:Lorg/eclipse/ui/statushandlers/AbstractStatusHandler;
      18: aload_0
      19: getfield      #230                // Field workbenchErrorHandler:Lorg/eclipse/ui/statushandlers/AbstractStatusHandler;
      22: areturn

  public void preStartup();
    Code:
       0: return

  public void postStartup();
    Code:
       0: return

  public boolean preShutdown();
    Code:
       0: iconst_1
       1: ireturn

  public void postShutdown();
    Code:
       0: return

  public void eventLoopException(java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: invokestatic  #251                // Method org/eclipse/ui/statushandlers/StatusManager.getManager:()Lorg/eclipse/ui/statushandlers/StatusManager;
       8: new           #129                // class org/eclipse/core/runtime/Status
      11: dup
      12: iconst_4
      13: getstatic     #232                // Field org/eclipse/ui/internal/WorkbenchPlugin.PI_WORKBENCH:Ljava/lang/String;
      16: ldc           #3                  // String Unhandled event loop exception
      18: aload_1
      19: invokespecial #238                // Method org/eclipse/core/runtime/Status."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      22: invokevirtual #250                // Method org/eclipse/ui/statushandlers/StatusManager.handle:(Lorg/eclipse/core/runtime/IStatus;)V
      25: getstatic     #231                // Field org/eclipse/ui/internal/WorkbenchPlugin.DEBUG:Z
      28: ifeq          63
      31: aload_1
      32: invokevirtual #237                // Method java/lang/Throwable.printStackTrace:()V
      35: goto          63
      38: astore_2
      39: getstatic     #225                // Field java/lang/System.err:Ljava/io/PrintStream;
      42: ldc           #1                  // String Error while logging event loop exception:
      44: invokevirtual #233                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      47: aload_1
      48: invokevirtual #237                // Method java/lang/Throwable.printStackTrace:()V
      51: getstatic     #225                // Field java/lang/System.err:Ljava/io/PrintStream;
      54: ldc           #2                  // String Logging exception:
      56: invokevirtual #233                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      59: aload_2
      60: invokevirtual #237                // Method java/lang/Throwable.printStackTrace:()V
      63: return
    Exception table:
       from    to  target type
           5    35    38   Class java/lang/Throwable

  public void eventLoopIdle(org.eclipse.swt.widgets.Display);
    Code:
       0: aload_1
       1: invokevirtual #240                // Method org/eclipse/swt/widgets/Display.sleep:()Z
       4: pop
       5: return

  public org.eclipse.ui.application.WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: new           #142                // class org/eclipse/ui/internal/application/CompatibilityWorkbenchWindowAdvisor
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #246                // Method org/eclipse/ui/internal/application/CompatibilityWorkbenchWindowAdvisor."<init>":(Lorg/eclipse/ui/application/WorkbenchAdvisor;Lorg/eclipse/ui/application/IWorkbenchWindowConfigurer;)V
       9: areturn

  public void preWindowOpen(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: return

  public void fillActionBars(org.eclipse.ui.IWorkbenchWindow, org.eclipse.ui.application.IActionBarConfigurer, int);
    Code:
       0: return

  public void postWindowRestore(org.eclipse.ui.application.IWorkbenchWindowConfigurer) throws org.eclipse.ui.WorkbenchException;
    Code:
       0: return

  public void openIntro(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: aload_0
       1: getfield      #228                // Field introOpened:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #228                // Field introOpened:Z
      13: invokestatic  #248                // Method org/eclipse/ui/internal/util/PrefUtil.getAPIPreferenceStore:()Lorg/eclipse/jface/preference/IPreferenceStore;
      16: ldc           #4                  // String showIntro
      18: invokeinterface #253,  2          // InterfaceMethod org/eclipse/jface/preference/IPreferenceStore.getBoolean:(Ljava/lang/String;)Z
      23: istore_2
      24: iload_2
      25: ifne          29
      28: return
      29: aload_0
      30: invokevirtual #242                // Method getWorkbenchConfigurer:()Lorg/eclipse/ui/application/IWorkbenchConfigurer;
      33: invokeinterface #257,  1          // InterfaceMethod org/eclipse/ui/application/IWorkbenchConfigurer.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
      38: invokeinterface #256,  1          // InterfaceMethod org/eclipse/ui/IWorkbench.getIntroManager:()Lorg/eclipse/ui/intro/IIntroManager;
      43: invokeinterface #259,  1          // InterfaceMethod org/eclipse/ui/intro/IIntroManager.hasIntro:()Z
      48: ifeq          92
      51: invokestatic  #248                // Method org/eclipse/ui/internal/util/PrefUtil.getAPIPreferenceStore:()Lorg/eclipse/jface/preference/IPreferenceStore;
      54: ldc           #4                  // String showIntro
      56: iconst_0
      57: invokeinterface #254,  3          // InterfaceMethod org/eclipse/jface/preference/IPreferenceStore.setValue:(Ljava/lang/String;Z)V
      62: invokestatic  #247                // Method org/eclipse/ui/internal/util/PrefUtil.saveAPIPrefs:()V
      65: aload_0
      66: invokevirtual #242                // Method getWorkbenchConfigurer:()Lorg/eclipse/ui/application/IWorkbenchConfigurer;
      69: invokeinterface #257,  1          // InterfaceMethod org/eclipse/ui/application/IWorkbenchConfigurer.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
      74: invokeinterface #256,  1          // InterfaceMethod org/eclipse/ui/IWorkbench.getIntroManager:()Lorg/eclipse/ui/intro/IIntroManager;
      79: aload_1
      80: invokeinterface #258,  1          // InterfaceMethod org/eclipse/ui/application/IWorkbenchWindowConfigurer.getWindow:()Lorg/eclipse/ui/IWorkbenchWindow;
      85: iconst_0
      86: invokeinterface #260,  3          // InterfaceMethod org/eclipse/ui/intro/IIntroManager.showIntro:(Lorg/eclipse/ui/IWorkbenchWindow;Z)Lorg/eclipse/ui/intro/IIntroPart;
      91: pop
      92: return

  public void postWindowCreate(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: return

  public void postWindowOpen(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: return

  public boolean preWindowShellClose(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: iconst_1
       1: ireturn

  public void postWindowClose(org.eclipse.ui.application.IWorkbenchWindowConfigurer);
    Code:
       0: return

  public boolean isApplicationMenu(org.eclipse.ui.application.IWorkbenchWindowConfigurer, java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public org.eclipse.core.runtime.IAdaptable getDefaultPageInput();
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.String getInitialWindowPerspectiveId();

  public java.lang.String getMainPreferencePageId();
    Code:
       0: aconst_null
       1: areturn

  public void createWindowContents(org.eclipse.ui.application.IWorkbenchWindowConfigurer, org.eclipse.swt.widgets.Shell);
    Code:
       0: aload_1
       1: checkcast     #141                // class org/eclipse/ui/internal/WorkbenchWindowConfigurer
       4: aload_2
       5: invokevirtual #245                // Method org/eclipse/ui/internal/WorkbenchWindowConfigurer.createDefaultContents:(Lorg/eclipse/swt/widgets/Shell;)V
       8: return

  public boolean openWindows();
    Code:
       0: invokestatic  #241                // Method org/eclipse/ui/PlatformUI.getWorkbench:()Lorg/eclipse/ui/IWorkbench;
       3: invokeinterface #255,  1          // InterfaceMethod org/eclipse/ui/IWorkbench.getDisplay:()Lorg/eclipse/swt/widgets/Display;
       8: astore_1
       9: iconst_1
      10: newarray       boolean
      12: astore_2
      13: iconst_1
      14: anewarray     #128                // class java/lang/Throwable
      17: astore_3
      18: new           #138                // class org/eclipse/ui/application/WorkbenchAdvisor$1
      21: dup
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokespecial #244                // Method org/eclipse/ui/application/WorkbenchAdvisor$1."<init>":(Lorg/eclipse/ui/application/WorkbenchAdvisor;Lorg/eclipse/swt/widgets/Display;[Z[Ljava/lang/Throwable;)V
      29: astore        4
      31: aload         4
      33: invokevirtual #236                // Method java/lang/Thread.start:()V
      36: aload_1
      37: invokevirtual #239                // Method org/eclipse/swt/widgets/Display.readAndDispatch:()Z
      40: ifne          36
      43: aload_0
      44: getfield      #227                // Field initDone:Z
      47: ifeq          53
      50: goto          61
      53: aload_1
      54: invokevirtual #240                // Method org/eclipse/swt/widgets/Display.sleep:()Z
      57: pop
      58: goto          36
      61: aload_3
      62: iconst_0
      63: aaload
      64: instanceof    #122                // class java/lang/Error
      67: ifeq          77
      70: aload_3
      71: iconst_0
      72: aaload
      73: checkcast     #122                // class java/lang/Error
      76: athrow
      77: aload_3
      78: iconst_0
      79: aaload
      80: instanceof    #125                // class java/lang/RuntimeException
      83: ifeq          93
      86: aload_3
      87: iconst_0
      88: aaload
      89: checkcast     #125                // class java/lang/RuntimeException
      92: athrow
      93: aload_2
      94: iconst_0
      95: baload
      96: ireturn

  public org.eclipse.core.runtime.IStatus saveState(org.eclipse.ui.IMemento);
    Code:
       0: getstatic     #226                // Field org/eclipse/core/runtime/Status.OK_STATUS:Lorg/eclipse/core/runtime/IStatus;
       3: areturn

  public org.eclipse.core.runtime.IStatus restoreState(org.eclipse.ui.IMemento);
    Code:
       0: getstatic     #226                // Field org/eclipse/core/runtime/Status.OK_STATUS:Lorg/eclipse/core/runtime/IStatus;
       3: areturn

  public org.eclipse.ui.model.ContributionComparator getComparatorFor(java.lang.String);
    Code:
       0: new           #145                // class org/eclipse/ui/model/ContributionComparator
       3: dup
       4: invokespecial #249                // Method org/eclipse/ui/model/ContributionComparator."<init>":()V
       7: areturn
}
