Compiled from "MachineProperty.java"
class nl.cloudfarming.client.fleet.model.MachineProperty$1 extends org.openide.nodes.Node$Property<T> {
  final nl.cloudfarming.client.fleet.model.MachineProperty this$0;

  nl.cloudfarming.client.fleet.model.MachineProperty$1(nl.cloudfarming.client.fleet.model.MachineProperty, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnl/cloudfarming/client/fleet/model/MachineProperty;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method org/openide/nodes/Node$Property."<init>":(Ljava/lang/Class;)V
      10: return

  public boolean canRead();
    Code:
       0: iconst_1
       1: ireturn

  public T getValue() throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnl/cloudfarming/client/fleet/model/MachineProperty;
       4: invokestatic  #3                  // Method nl/cloudfarming/client/fleet/model/MachineProperty.access$000:(Lnl/cloudfarming/client/fleet/model/MachineProperty;)Ljava/lang/Object;
       7: areturn

  public boolean canWrite();
    Code:
       0: iconst_1
       1: ireturn

  public void setValue(T) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnl/cloudfarming/client/fleet/model/MachineProperty;
       4: aload_1
       5: invokestatic  #4                  // Method nl/cloudfarming/client/fleet/model/MachineProperty.access$002:(Lnl/cloudfarming/client/fleet/model/MachineProperty;Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnl/cloudfarming/client/fleet/model/MachineProperty;
       4: invokestatic  #5                  // Method nl/cloudfarming/client/fleet/model/MachineProperty.access$100:(Lnl/cloudfarming/client/fleet/model/MachineProperty;)Lnl/cloudfarming/client/fleet/model/MachinePropertyDefinition;
       7: invokevirtual #6                  // Method nl/cloudfarming/client/fleet/model/MachinePropertyDefinition.getName:()Ljava/lang/String;
      10: areturn

  public java.beans.PropertyEditor getPropertyEditor();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnl/cloudfarming/client/fleet/model/MachineProperty;
       4: invokestatic  #5                  // Method nl/cloudfarming/client/fleet/model/MachineProperty.access$100:(Lnl/cloudfarming/client/fleet/model/MachineProperty;)Lnl/cloudfarming/client/fleet/model/MachinePropertyDefinition;
       7: invokevirtual #7                  // Method nl/cloudfarming/client/fleet/model/MachinePropertyDefinition.getPossibleValues:()[Ljava/lang/Object;
      10: astore_1
      11: aload_1
      12: ifnull        20
      15: aload_1
      16: arraylength
      17: ifne          25
      20: aload_0
      21: invokespecial #8                  // Method org/openide/nodes/Node$Property.getPropertyEditor:()Ljava/beans/PropertyEditor;
      24: areturn
      25: new           #9                  // class nl/cloudfarming/client/fleet/model/MachineProperty$1$1
      28: dup
      29: aload_0
      30: aload_1
      31: invokespecial #10                 // Method nl/cloudfarming/client/fleet/model/MachineProperty$1$1."<init>":(Lnl/cloudfarming/client/fleet/model/MachineProperty$1;[Ljava/lang/Object;)V
      34: areturn
}
