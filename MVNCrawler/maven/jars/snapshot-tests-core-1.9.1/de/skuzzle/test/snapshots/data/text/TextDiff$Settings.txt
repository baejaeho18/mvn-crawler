Compiled from "TextDiff.java"
public final class de.skuzzle.test.snapshots.data.text.TextDiff$Settings {
  private boolean ignoreWhitespaces;

  private int contextLines;

  private java.lang.String inlineOpeningChangeMarker;

  private java.lang.String inlineClosingChangeMarker;

  private de.skuzzle.test.snapshots.data.text.DiffRenderer diffRenderer;

  private de.skuzzle.test.snapshots.data.text.TextDiff$Settings();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field ignoreWhitespaces:Z
       9: aload_0
      10: iconst_5
      11: putfield      #4                  // Field contextLines:I
      14: aload_0
      15: ldc           #5                  // String <<
      17: putfield      #6                  // Field inlineOpeningChangeMarker:Ljava/lang/String;
      20: aload_0
      21: ldc           #7                  // String >>
      23: putfield      #8                  // Field inlineClosingChangeMarker:Ljava/lang/String;
      26: aload_0
      27: new           #9                  // class de/skuzzle/test/snapshots/data/text/UnifiedDiffRenderer
      30: dup
      31: invokespecial #10                 // Method de/skuzzle/test/snapshots/data/text/UnifiedDiffRenderer."<init>":()V
      34: putfield      #11                 // Field diffRenderer:Lde/skuzzle/test/snapshots/data/text/DiffRenderer;
      37: return

  public static de.skuzzle.test.snapshots.data.text.TextDiff$Settings defaultSettings();
    Code:
       0: new           #12                 // class de/skuzzle/test/snapshots/data/text/TextDiff$Settings
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: areturn

  public de.skuzzle.test.snapshots.data.text.TextDiff$Settings withIgnoreWhitespaces(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ignoreWhitespaces:Z
       5: aload_0
       6: areturn

  public de.skuzzle.test.snapshots.data.text.TextDiff$Settings withContextLines(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #14                 // String contextLines must be a positive integer
      11: invokestatic  #15                 // Method de/skuzzle/test/snapshots/validation/Arguments.check:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field contextLines:I
      19: aload_0
      20: areturn

  public de.skuzzle.test.snapshots.data.text.TextDiff$Settings withInlineOpeningChangeMarker(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #16                 // String opening marker must not be null
       4: invokestatic  #17                 // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/String
      10: putfield      #6                  // Field inlineOpeningChangeMarker:Ljava/lang/String;
      13: aload_0
      14: areturn

  public de.skuzzle.test.snapshots.data.text.TextDiff$Settings withInlineClosingChangeMarker(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #19                 // String closing marker must not be null
       4: invokestatic  #17                 // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/String
      10: putfield      #8                  // Field inlineClosingChangeMarker:Ljava/lang/String;
      13: aload_0
      14: areturn

  public de.skuzzle.test.snapshots.data.text.TextDiff$Settings withDiffRenderer(de.skuzzle.test.snapshots.data.text.DiffRenderer);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String renderer must not be null
       4: invokestatic  #17                 // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #21                 // class de/skuzzle/test/snapshots/data/text/DiffRenderer
      10: putfield      #11                 // Field diffRenderer:Lde/skuzzle/test/snapshots/data/text/DiffRenderer;
      13: aload_0
      14: areturn

  private java.util.function.BiFunction<com.github.difflib.text.DiffRow$Tag, java.lang.Boolean, java.lang.String> inlineMarker();
    Code:
       0: aload_0
       1: invokedynamic #22,  0             // InvokeDynamic #0:apply:(Lde/skuzzle/test/snapshots/data/text/TextDiff$Settings;)Ljava/util/function/BiFunction;
       6: areturn

  private com.github.difflib.text.DiffRowGenerator buildDiffRowGenerator();
    Code:
       0: invokestatic  #23                 // Method com/github/difflib/text/DiffRowGenerator.create:()Lcom/github/difflib/text/DiffRowGenerator$Builder;
       3: iconst_1
       4: invokevirtual #24                 // Method com/github/difflib/text/DiffRowGenerator$Builder.showInlineDiffs:(Z)Lcom/github/difflib/text/DiffRowGenerator$Builder;
       7: invokestatic  #25                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      10: invokevirtual #26                 // Method com/github/difflib/text/DiffRowGenerator$Builder.lineNormalizer:(Ljava/util/function/Function;)Lcom/github/difflib/text/DiffRowGenerator$Builder;
      13: iconst_1
      14: invokevirtual #27                 // Method com/github/difflib/text/DiffRowGenerator$Builder.inlineDiffByWord:(Z)Lcom/github/difflib/text/DiffRowGenerator$Builder;
      17: aload_0
      18: getfield      #2                  // Field ignoreWhitespaces:Z
      21: invokevirtual #28                 // Method com/github/difflib/text/DiffRowGenerator$Builder.ignoreWhiteSpaces:(Z)Lcom/github/difflib/text/DiffRowGenerator$Builder;
      24: aload_0
      25: invokevirtual #29                 // Method inlineMarker:()Ljava/util/function/BiFunction;
      28: invokevirtual #30                 // Method com/github/difflib/text/DiffRowGenerator$Builder.newTag:(Ljava/util/function/BiFunction;)Lcom/github/difflib/text/DiffRowGenerator$Builder;
      31: aload_0
      32: invokevirtual #29                 // Method inlineMarker:()Ljava/util/function/BiFunction;
      35: invokevirtual #31                 // Method com/github/difflib/text/DiffRowGenerator$Builder.oldTag:(Ljava/util/function/BiFunction;)Lcom/github/difflib/text/DiffRowGenerator$Builder;
      38: invokevirtual #32                 // Method com/github/difflib/text/DiffRowGenerator$Builder.build:()Lcom/github/difflib/text/DiffRowGenerator;
      41: areturn

  private java.lang.String lambda$inlineMarker$0(com.github.difflib.text.DiffRow$Tag, java.lang.Boolean);
    Code:
       0: aload_1
       1: getstatic     #33                 // Field com/github/difflib/text/DiffRow$Tag.CHANGE:Lcom/github/difflib/text/DiffRow$Tag;
       4: if_acmpeq     10
       7: ldc           #34                 // String
       9: areturn
      10: aload_2
      11: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          24
      17: aload_0
      18: getfield      #6                  // Field inlineOpeningChangeMarker:Ljava/lang/String;
      21: goto          28
      24: aload_0
      25: getfield      #8                  // Field inlineClosingChangeMarker:Ljava/lang/String;
      28: areturn
}
