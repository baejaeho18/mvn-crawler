Compiled from "DynamicOrphanedSnapshotsDetector.java"
final class de.skuzzle.test.snapshots.impl.DynamicOrphanedSnapshotsDetector {
  private final java.util.Set<java.lang.reflect.Method> failedOrSkippedTestMethods;

  private final java.util.List<de.skuzzle.test.snapshots.SnapshotTestResult> results;

  de.skuzzle.test.snapshots.impl.DynamicOrphanedSnapshotsDetector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field failedOrSkippedTestMethods:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field results:Ljava/util/List;
      26: return

  public void addResult(de.skuzzle.test.snapshots.SnapshotTestResult);
    Code:
       0: aload_0
       1: getfield      #7                  // Field results:Ljava/util/List;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addFailedOrSkippedTestMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #4                  // Field failedOrSkippedTestMethods:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #9                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class java/lang/reflect/Method
      11: invokeinterface #11,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  private java.util.stream.Stream<java.nio.file.Path> snapshotDirectories(java.nio.file.Path);
    Code:
       0: aload_1
       1: invokestatic  #12                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
       4: aload_0
       5: getfield      #7                  // Field results:Ljava/util/List;
       8: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: invokedynamic #14,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      18: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      28: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      33: invokedynamic #17,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      38: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #18                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      46: invokedynamic #19,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      51: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      56: areturn

  public java.util.stream.Stream<de.skuzzle.test.snapshots.impl.OrphanDetectionResult> detectOrphans(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method snapshotDirectories:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;
       5: invokedynamic #22,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      10: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokedynamic #24,  0             // InvokeDynamic #5:test:(Lde/skuzzle/test/snapshots/impl/DynamicOrphanedSnapshotsDetector;)Ljava/util/function/Predicate;
      23: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      28: aload_0
      29: invokedynamic #25,  0             // InvokeDynamic #6:apply:(Lde/skuzzle/test/snapshots/impl/DynamicOrphanedSnapshotsDetector;)Ljava/util/function/Function;
      34: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: invokestatic  #26                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      42: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      47: checkcast     #28                 // class java/util/List
      50: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      55: astore_3
      56: aload_2
      57: ifnull        66
      60: aload_2
      61: invokeinterface #29,  1           // InterfaceMethod java/util/stream/Stream.close:()V
      66: aload_3
      67: areturn
      68: astore_3
      69: aload_2
      70: ifnull        90
      73: aload_2
      74: invokeinterface #29,  1           // InterfaceMethod java/util/stream/Stream.close:()V
      79: goto          90
      82: astore        4
      84: aload_3
      85: aload         4
      87: invokevirtual #31                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      90: aload_3
      91: athrow
    Exception table:
       from    to  target type
          16    56    68   Class java/lang/Throwable
          73    79    82   Class java/lang/Throwable

  private boolean isSnapshotFile(java.nio.file.Path);
    Code:
       0: aload_1
       1: invokestatic  #32                 // Method de/skuzzle/test/snapshots/impl/InternalSnapshotNaming.isSnapshotFile:(Ljava/nio/file/Path;)Z
       4: ireturn

  private de.skuzzle.test.snapshots.impl.OrphanDetectionResult isOrphanedSnapshot(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method pertainsToDisabledAssertion:(Ljava/nio/file/Path;)Z
       5: ifeq          15
       8: getstatic     #34                 // Field de/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus.ACTIVE:Lde/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus;
      11: astore_2
      12: goto          50
      15: aload_0
      16: aload_1
      17: invokevirtual #35                 // Method pertainsToFailedOrSkippedTest:(Ljava/nio/file/Path;)Z
      20: ifeq          30
      23: getstatic     #36                 // Field de/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus.UNSURE:Lde/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus;
      26: astore_2
      27: goto          50
      30: aload_0
      31: aload_1
      32: invokevirtual #37                 // Method testResultsContain:(Ljava/nio/file/Path;)Z
      35: istore_3
      36: iload_3
      37: ifeq          46
      40: getstatic     #34                 // Field de/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus.ACTIVE:Lde/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus;
      43: goto          49
      46: getstatic     #38                 // Field de/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus.ORPHAN:Lde/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus;
      49: astore_2
      50: new           #39                 // class de/skuzzle/test/snapshots/impl/OrphanDetectionResult
      53: dup
      54: aload_0
      55: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #41                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      61: aload_1
      62: aload_2
      63: invokespecial #42                 // Method de/skuzzle/test/snapshots/impl/OrphanDetectionResult."<init>":(Ljava/lang/String;Ljava/nio/file/Path;Lde/skuzzle/test/snapshots/impl/OrphanDetectionResult$OrphanStatus;)V
      66: areturn

  private boolean pertainsToFailedOrSkippedTest(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #4                  // Field failedOrSkippedTestMethods:Ljava/util/Set;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #44,  0             // InvokeDynamic #7:test:(Ljava/nio/file/Path;)Ljava/util/function/Predicate;
      15: invokeinterface #45,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      20: ireturn

  private boolean pertainsToDisabledAssertion(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #7                  // Field results:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #46,  0             // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
      14: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: aload_1
      20: invokedynamic #47,  0             // InvokeDynamic #9:test:(Ljava/nio/file/Path;)Ljava/util/function/Predicate;
      25: invokeinterface #45,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      30: ireturn

  private boolean testResultsContain(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #7                  // Field results:Ljava/util/List;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #14,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      24: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      29: invokedynamic #48,  0             // InvokeDynamic #10:test:()Ljava/util/function/Predicate;
      34: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      39: aload_1
      40: invokedynamic #49,  0             // InvokeDynamic #11:test:(Ljava/nio/file/Path;)Ljava/util/function/Predicate;
      45: invokeinterface #45,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      50: ireturn

  private static boolean lambda$testResultsContain$5(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #50                 // Method de/skuzzle/test/snapshots/io/UncheckedIO.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
       5: ireturn

  private static boolean lambda$testResultsContain$4(java.nio.file.Path);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #51                 // class java/nio/file/LinkOption
       5: invokestatic  #52                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ireturn

  private static boolean lambda$pertainsToDisabledAssertion$3(java.nio.file.Path, de.skuzzle.test.snapshots.SnapshotTestResult);
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method de/skuzzle/test/snapshots/SnapshotTestResult.contextFiles:()Lde/skuzzle/test/snapshots/ContextFiles;
       4: invokevirtual #54                 // Method de/skuzzle/test/snapshots/ContextFiles.snapshotFile:()Ljava/nio/file/Path;
       7: aload_0
       8: invokeinterface #55,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      13: ireturn

  private static boolean lambda$pertainsToDisabledAssertion$2(de.skuzzle.test.snapshots.SnapshotTestResult);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method de/skuzzle/test/snapshots/SnapshotTestResult.status:()Lde/skuzzle/test/snapshots/SnapshotTestResult$SnapshotStatus;
       4: getstatic     #57                 // Field de/skuzzle/test/snapshots/SnapshotTestResult$SnapshotStatus.DISABLED:Lde/skuzzle/test/snapshots/SnapshotTestResult$SnapshotStatus;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static boolean lambda$pertainsToFailedOrSkippedTest$1(java.nio.file.Path, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method de/skuzzle/test/snapshots/impl/InternalSnapshotNaming.isSnapshotFileForMethod:(Ljava/nio/file/Path;Ljava/lang/reflect/Method;)Z
       5: ireturn

  private static boolean lambda$snapshotDirectories$0(java.nio.file.Path);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #51                 // class java/nio/file/LinkOption
       5: invokestatic  #52                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ireturn
}
