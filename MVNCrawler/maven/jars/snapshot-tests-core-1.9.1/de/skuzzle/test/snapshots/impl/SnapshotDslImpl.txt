Compiled from "SnapshotDslImpl.java"
final class de.skuzzle.test.snapshots.impl.SnapshotDslImpl implements de.skuzzle.test.snapshots.Snapshot,de.skuzzle.test.snapshots.SnapshotDsl$ChooseActual,de.skuzzle.test.snapshots.SnapshotDsl$ChooseDataFormat,de.skuzzle.test.snapshots.SnapshotDsl$ChooseStructure,de.skuzzle.test.snapshots.SnapshotDsl$ChooseAssertions {
  private final de.skuzzle.test.snapshots.impl.ResultRecorder resultRecorder;

  private final de.skuzzle.test.snapshots.impl.SnapshotConfiguration snapshotConfiguration;

  private final java.lang.reflect.Method testMethod;

  private final de.skuzzle.test.snapshots.impl.DslState state;

  private java.lang.Object actual;

  private java.nio.file.Path directoryOverride;

  private de.skuzzle.test.snapshots.SnapshotNaming namingStrategy;

  private de.skuzzle.test.snapshots.SnapshotSerializer snapshotSerializer;

  private de.skuzzle.test.snapshots.StructuralAssertions structuralAssertions;

  public de.skuzzle.test.snapshots.impl.SnapshotDslImpl(de.skuzzle.test.snapshots.impl.ResultRecorder, de.skuzzle.test.snapshots.impl.SnapshotConfiguration, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method de/skuzzle/test/snapshots/impl/DslState.initial:()Lde/skuzzle/test/snapshots/impl/DslState;
       8: putfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
      11: aload_0
      12: aload_1
      13: ldc           #4                  // String resultRecorder must not be null
      15: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #6                  // class de/skuzzle/test/snapshots/impl/ResultRecorder
      21: putfield      #7                  // Field resultRecorder:Lde/skuzzle/test/snapshots/impl/ResultRecorder;
      24: aload_0
      25: aload_2
      26: ldc           #8                  // String snapshotConfiguration must not be null
      28: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #9                  // class de/skuzzle/test/snapshots/impl/SnapshotConfiguration
      34: putfield      #10                 // Field snapshotConfiguration:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
      37: aload_0
      38: aload_3
      39: ldc           #11                 // String testMethod must not be null
      41: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: checkcast     #12                 // class java/lang/reflect/Method
      47: putfield      #13                 // Field testMethod:Ljava/lang/reflect/Method;
      50: aload_0
      51: invokevirtual #14                 // Method resetDSL:()V
      54: return

  private void resetDSL();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: invokevirtual #15                 // Method de/skuzzle/test/snapshots/impl/DslState.reset:()Lde/skuzzle/test/snapshots/impl/DslState;
       7: pop
       8: aload_0
       9: aconst_null
      10: putfield      #16                 // Field actual:Ljava/lang/Object;
      13: aload_0
      14: aconst_null
      15: putfield      #17                 // Field directoryOverride:Ljava/nio/file/Path;
      18: aload_0
      19: invokestatic  #18                 // InterfaceMethod de/skuzzle/test/snapshots/SnapshotNaming.defaultNaming:()Lde/skuzzle/test/snapshots/SnapshotNaming;
      22: putfield      #19                 // Field namingStrategy:Lde/skuzzle/test/snapshots/SnapshotNaming;
      25: aload_0
      26: getstatic     #20                 // Field de/skuzzle/test/snapshots/data/text/TextSnapshot.text:Lde/skuzzle/test/snapshots/StructuredData;
      29: invokevirtual #21                 // Method de/skuzzle/test/snapshots/StructuredData.snapshotSerializer:()Lde/skuzzle/test/snapshots/SnapshotSerializer;
      32: putfield      #22                 // Field snapshotSerializer:Lde/skuzzle/test/snapshots/SnapshotSerializer;
      35: aload_0
      36: getstatic     #20                 // Field de/skuzzle/test/snapshots/data/text/TextSnapshot.text:Lde/skuzzle/test/snapshots/StructuredData;
      39: invokevirtual #23                 // Method de/skuzzle/test/snapshots/StructuredData.structuralAssertions:()Lde/skuzzle/test/snapshots/StructuralAssertions;
      42: putfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
      45: return

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseActual namedAccordingTo(de.skuzzle.test.snapshots.SnapshotNaming);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: iconst_2
       5: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
       8: pop
       9: aload_0
      10: aload_1
      11: ldc           #27                 // String namingStrategy must not be null
      13: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #28                 // class de/skuzzle/test/snapshots/SnapshotNaming
      19: putfield      #19                 // Field namingStrategy:Lde/skuzzle/test/snapshots/SnapshotNaming;
      22: aload_0
      23: areturn

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseName in(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: bipush        8
       6: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
       9: pop
      10: aload_0
      11: aload_1
      12: ldc           #29                 // String directory must not be null
      14: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #30                 // class java/nio/file/Path
      20: putfield      #17                 // Field directoryOverride:Ljava/nio/file/Path;
      23: aload_0
      24: areturn

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseDataFormat assertThat(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: iconst_4
       5: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
       8: pop
       9: aload_0
      10: aload_1
      11: putfield      #16                 // Field actual:Ljava/lang/Object;
      14: aload_0
      15: areturn

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseAssertions asText();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field de/skuzzle/test/snapshots/data/text/TextSnapshot.text:Lde/skuzzle/test/snapshots/StructuredData;
       4: invokevirtual #31                 // Method as:(Lde/skuzzle/test/snapshots/StructuredDataProvider;)Lde/skuzzle/test/snapshots/SnapshotDsl$ChooseStructure;
       7: areturn

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseAssertions as(de.skuzzle.test.snapshots.SnapshotSerializer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: bipush        16
       6: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
       9: pop
      10: aload_0
      11: aload_1
      12: ldc           #32                 // String serializer must not be null
      14: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #33                 // class de/skuzzle/test/snapshots/SnapshotSerializer
      20: putfield      #22                 // Field snapshotSerializer:Lde/skuzzle/test/snapshots/SnapshotSerializer;
      23: aload_0
      24: areturn

  public de.skuzzle.test.snapshots.SnapshotDsl$ChooseStructure as(de.skuzzle.test.snapshots.StructuredDataProvider);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: bipush        32
       6: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
       9: pop
      10: aload_0
      11: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
      14: bipush        16
      16: invokevirtual #26                 // Method de/skuzzle/test/snapshots/impl/DslState.append:(I)Lde/skuzzle/test/snapshots/impl/DslState;
      19: pop
      20: aload_1
      21: ldc           #34                 // String structuredDataBuilder must not be null
      23: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      26: checkcast     #35                 // class de/skuzzle/test/snapshots/StructuredDataProvider
      29: invokeinterface #36,  1           // InterfaceMethod de/skuzzle/test/snapshots/StructuredDataProvider.build:()Lde/skuzzle/test/snapshots/StructuredData;
      34: astore_2
      35: aload_0
      36: aload_2
      37: invokevirtual #21                 // Method de/skuzzle/test/snapshots/StructuredData.snapshotSerializer:()Lde/skuzzle/test/snapshots/SnapshotSerializer;
      40: putfield      #22                 // Field snapshotSerializer:Lde/skuzzle/test/snapshots/SnapshotSerializer;
      43: aload_0
      44: aload_2
      45: invokevirtual #23                 // Method de/skuzzle/test/snapshots/StructuredData.structuralAssertions:()Lde/skuzzle/test/snapshots/StructuralAssertions;
      48: putfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
      51: aload_0
      52: areturn

  private boolean isCustomTextSnapshot();
    Code:
       0: aload_0
       1: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
       4: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: getstatic     #20                 // Field de/skuzzle/test/snapshots/data/text/TextSnapshot.text:Lde/skuzzle/test/snapshots/StructuredData;
      10: invokevirtual #23                 // Method de/skuzzle/test/snapshots/StructuredData.structuralAssertions:()Lde/skuzzle/test/snapshots/StructuralAssertions;
      13: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #38                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ireturn

  public de.skuzzle.test.snapshots.SnapshotTestResult matchesSnapshotText();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method isCustomTextSnapshot:()Z
       4: ifeq          16
       7: aload_0
       8: aload_0
       9: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
      12: invokevirtual #40                 // Method matchesAccordingTo:(Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      15: areturn
      16: aload_0
      17: getstatic     #20                 // Field de/skuzzle/test/snapshots/data/text/TextSnapshot.text:Lde/skuzzle/test/snapshots/StructuredData;
      20: invokevirtual #23                 // Method de/skuzzle/test/snapshots/StructuredData.structuralAssertions:()Lde/skuzzle/test/snapshots/StructuralAssertions;
      23: invokevirtual #40                 // Method matchesAccordingTo:(Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      26: areturn

  public de.skuzzle.test.snapshots.SnapshotTestResult matchesSnapshotStructure();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
       5: invokevirtual #40                 // Method matchesAccordingTo:(Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
       8: areturn

  public de.skuzzle.test.snapshots.SnapshotTestResult matchesAccordingTo(de.skuzzle.test.snapshots.StructuralAssertions);
    Code:
       0: aload_1
       1: ldc           #41                 // String structuralAssertions must not be null
       3: invokestatic  #5                  // Method de/skuzzle/test/snapshots/validation/Arguments.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getstatic     #42                 // Field de/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation.ASSERT:Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;
      11: aload_1
      12: invokevirtual #43                 // Method terminal:(Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      15: areturn

  public de.skuzzle.test.snapshots.SnapshotTestResult justUpdateSnapshot();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field de/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation.FORCE_UPDATE:Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;
       4: aload_0
       5: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
       8: invokevirtual #43                 // Method terminal:(Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      11: areturn

  public de.skuzzle.test.snapshots.SnapshotTestResult disabled();
    Code:
       0: aload_0
       1: getstatic     #45                 // Field de/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation.DISABLE:Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;
       4: aload_0
       5: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
       8: invokevirtual #43                 // Method terminal:(Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      11: areturn

  public de.skuzzle.test.snapshots.SnapshotTestResult disabledBecause(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #45                 // Field de/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation.DISABLE:Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;
       4: aload_0
       5: getfield      #24                 // Field structuralAssertions:Lde/skuzzle/test/snapshots/StructuralAssertions;
       8: invokevirtual #43                 // Method terminal:(Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;Lde/skuzzle/test/snapshots/StructuralAssertions;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      11: areturn

  private de.skuzzle.test.snapshots.SnapshotTestResult terminal(de.skuzzle.test.snapshots.impl.SnapshotAssertionInput$TerminalOperation, de.skuzzle.test.snapshots.StructuralAssertions);
    Code:
       0: new           #46                 // class de/skuzzle/test/snapshots/impl/SnapshotDslResult
       3: dup
       4: aload_0
       5: getfield      #10                 // Field snapshotConfiguration:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       8: aload_0
       9: getfield      #7                  // Field resultRecorder:Lde/skuzzle/test/snapshots/impl/ResultRecorder;
      12: aload_0
      13: getfield      #13                 // Field testMethod:Ljava/lang/reflect/Method;
      16: aload_0
      17: getfield      #19                 // Field namingStrategy:Lde/skuzzle/test/snapshots/SnapshotNaming;
      20: aload_0
      21: getfield      #16                 // Field actual:Ljava/lang/Object;
      24: aload_1
      25: aload_0
      26: getfield      #22                 // Field snapshotSerializer:Lde/skuzzle/test/snapshots/SnapshotSerializer;
      29: aload_0
      30: getfield      #17                 // Field directoryOverride:Ljava/nio/file/Path;
      33: invokespecial #47                 // Method de/skuzzle/test/snapshots/impl/SnapshotDslResult."<init>":(Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;Lde/skuzzle/test/snapshots/impl/ResultRecorder;Ljava/lang/reflect/Method;Lde/skuzzle/test/snapshots/SnapshotNaming;Ljava/lang/Object;Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput$TerminalOperation;Lde/skuzzle/test/snapshots/SnapshotSerializer;Ljava/nio/file/Path;)V
      36: astore_3
      37: aload_3
      38: invokevirtual #48                 // Method de/skuzzle/test/snapshots/impl/SnapshotDslResult.createAssertionInput:()Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput;
      41: astore        4
      43: new           #49                 // class de/skuzzle/test/snapshots/impl/SnapshotAssertionExecutor
      46: dup
      47: invokespecial #50                 // Method de/skuzzle/test/snapshots/impl/SnapshotAssertionExecutor."<init>":()V
      50: astore        5
      52: new           #51                 // class de/skuzzle/test/snapshots/impl/DefaultExecutionLifecycle
      55: dup
      56: aload         5
      58: aload_0
      59: getfield      #7                  // Field resultRecorder:Lde/skuzzle/test/snapshots/impl/ResultRecorder;
      62: invokespecial #52                 // Method de/skuzzle/test/snapshots/impl/DefaultExecutionLifecycle."<init>":(Lde/skuzzle/test/snapshots/impl/SnapshotAssertionExecutor;Lde/skuzzle/test/snapshots/impl/ResultRecorder;)V
      65: astore        6
      67: aload         6
      69: aload_2
      70: aload         4
      72: invokeinterface #53,  3           // InterfaceMethod de/skuzzle/test/snapshots/impl/ExecutionLifecycle.executeLifecycleWith:(Lde/skuzzle/test/snapshots/StructuralAssertions;Lde/skuzzle/test/snapshots/impl/SnapshotAssertionInput;)Lde/skuzzle/test/snapshots/SnapshotTestResult;
      77: astore        7
      79: aload_0
      80: invokevirtual #14                 // Method resetDSL:()V
      83: aload         7
      85: areturn
      86: astore_3
      87: new           #55                 // class de/skuzzle/test/snapshots/SnapshotException
      90: dup
      91: ldc           #56                 // String Technical problem while performing snapshot test terminal operation
      93: aload_3
      94: invokespecial #57                 // Method de/skuzzle/test/snapshots/SnapshotException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: athrow
      98: astore        8
     100: aload_0
     101: invokevirtual #14                 // Method resetDSL:()V
     104: aload         8
     106: athrow
    Exception table:
       from    to  target type
           0    79    86   Class java/lang/Exception
           0    79    98   any
          86   100    98   any

  void executeFinalAssertions() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lde/skuzzle/test/snapshots/impl/DslState;
       4: invokevirtual #58                 // Method de/skuzzle/test/snapshots/impl/DslState.isInitial:()Z
       7: ldc           #59                 // String Detected incomplete DSL usage. Please always call a terminal operation (see JavaDoc of the Snapshot class for details). If you want to temporarily disable a snapshot assertion, use the disabled() terminal operation.
       9: iconst_0
      10: anewarray     #60                 // class java/lang/Object
      13: invokestatic  #61                 // Method de/skuzzle/test/snapshots/validation/State.check:(ZLjava/lang/String;[Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #7                  // Field resultRecorder:Lde/skuzzle/test/snapshots/impl/ResultRecorder;
      20: invokevirtual #62                 // Method de/skuzzle/test/snapshots/impl/ResultRecorder.throwIfNotSuccessfulOrCreatedInitiallyOrUpdatedForcefully:()V
      23: return
}
