Compiled from "LegacySnapshotConfiguration.java"
final class de.skuzzle.test.snapshots.impl.LegacySnapshotConfiguration implements de.skuzzle.test.snapshots.impl.SnapshotConfiguration {
  private final de.skuzzle.test.snapshots.impl.SnapshotConfiguration delegate;

  private de.skuzzle.test.snapshots.impl.LegacySnapshotConfiguration(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method de/skuzzle/test/snapshots/impl/DefaultSnapshotConfiguration.forTestClass:(Ljava/lang/Class;)Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       9: putfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
      12: return

  public static de.skuzzle.test.snapshots.impl.SnapshotConfiguration forTestClass(java.lang.Class<?>);
    Code:
       0: new           #4                  // class de/skuzzle/test/snapshots/impl/LegacySnapshotConfiguration
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  public java.nio.file.Path determineSnapshotDirectory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: invokeinterface #6,  1            // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.determineSnapshotDirectory:()Ljava/nio/file/Path;
       9: areturn

  public java.lang.Class<?> testClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: invokeinterface #7,  1            // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.testClass:()Ljava/lang/Class;
       9: areturn

  public boolean isDeleteOrphanedSnapshots();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: invokeinterface #8,  1            // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.isDeleteOrphanedSnapshots:()Z
       9: ireturn

  private boolean isForceUpdateSnapshotsGlobal();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method testClass:()Ljava/lang/Class;
       4: ldc           #10                 // class de/skuzzle/test/snapshots/EnableSnapshotTests
       6: invokevirtual #11                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       9: checkcast     #10                 // class de/skuzzle/test/snapshots/EnableSnapshotTests
      12: invokeinterface #12,  1           // InterfaceMethod de/skuzzle/test/snapshots/EnableSnapshotTests.forceUpdateSnapshots:()Z
      17: istore_1
      18: iload_1
      19: ireturn

  public boolean isForceUpdateSnapshots(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.isForceUpdateSnapshots:(Ljava/lang/reflect/Method;)Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #14                 // Method isForceUpdateSnapshotsGlobal:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isSoftAssertions();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method testClass:()Ljava/lang/Class;
       4: ldc           #10                 // class de/skuzzle/test/snapshots/EnableSnapshotTests
       6: invokevirtual #11                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       9: checkcast     #10                 // class de/skuzzle/test/snapshots/EnableSnapshotTests
      12: invokeinterface #15,  1           // InterfaceMethod de/skuzzle/test/snapshots/EnableSnapshotTests.softAssertions:()Z
      17: ireturn

  public boolean alwaysPersistActualResult(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.alwaysPersistActualResult:(Ljava/lang/reflect/Method;)Z
      10: ireturn

  public boolean alwaysPersistRawResult(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.alwaysPersistRawResult:(Ljava/lang/reflect/Method;)Z
      10: ireturn

  public int textDiffContextLines(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.textDiffContextLines:(Ljava/lang/reflect/Method;)I
      10: ireturn

  public boolean addOffsetToReportedLinenumbers(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lde/skuzzle/test/snapshots/impl/SnapshotConfiguration;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod de/skuzzle/test/snapshots/impl/SnapshotConfiguration.addOffsetToReportedLinenumbers:(Ljava/lang/reflect/Method;)Z
      10: ireturn
}
