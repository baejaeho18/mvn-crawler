Compiled from "AssumptionExceptionDetector.java"
final class de.skuzzle.test.snapshots.impl.AssumptionExceptionDetector {
  private static final java.util.List<java.lang.String> CLASS_NAMES;

  private static final java.lang.Class<? extends java.lang.Throwable> EXCEPTION_CLASS;

  de.skuzzle.test.snapshots.impl.AssumptionExceptionDetector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.util.Optional<java.lang.Throwable> assumptionFailed(java.lang.String);
    Code:
       0: invokestatic  #2                  // Method assumptionsSupported:()Z
       3: ifne          10
       6: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       9: areturn
      10: getstatic     #4                  // Field EXCEPTION_CLASS:Ljava/lang/Class;
      13: iconst_1
      14: anewarray     #5                  // class java/lang/Class
      17: dup
      18: iconst_0
      19: ldc           #6                  // class java/lang/String
      21: aastore
      22: invokevirtual #7                  // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      25: iconst_1
      26: anewarray     #8                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: aastore
      33: invokevirtual #9                  // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #10                 // class java/lang/Throwable
      39: invokestatic  #11                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      42: areturn
      43: astore_1
      44: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      47: areturn
    Exception table:
       from    to  target type
          10    42    43   Class java/lang/ReflectiveOperationException

  private static boolean assumptionsSupported();
    Code:
       0: getstatic     #4                  // Field EXCEPTION_CLASS:Ljava/lang/Class;
       3: ifnull        10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  private static java.lang.Class<?> tryLoad(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: aconst_null
       7: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: ldc           #15                 // String org.junit.AssumptionViolatedException
       2: ldc           #16                 // String org.testng.SkipException
       4: ldc           #17                 // String org.opentest4j.TestAbortedException
       6: invokestatic  #18                 // InterfaceMethod java/util/List.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;
       9: putstatic     #19                 // Field CLASS_NAMES:Ljava/util/List;
      12: aconst_null
      13: astore_0
      14: getstatic     #19                 // Field CLASS_NAMES:Ljava/util/List;
      17: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          59
      32: aload_1
      33: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #6                  // class java/lang/String
      41: astore_2
      42: aload_2
      43: invokestatic  #23                 // Method tryLoad:(Ljava/lang/String;)Ljava/lang/Class;
      46: astore_3
      47: aload_3
      48: ifnull        56
      51: aload_3
      52: astore_0
      53: goto          59
      56: goto          23
      59: goto          63
      62: astore_1
      63: aload_0
      64: putstatic     #4                  // Field EXCEPTION_CLASS:Ljava/lang/Class;
      67: return
    Exception table:
       from    to  target type
          14    59    62   Class java/lang/Exception
}
