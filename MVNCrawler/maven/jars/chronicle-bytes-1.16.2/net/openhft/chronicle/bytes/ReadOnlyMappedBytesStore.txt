Compiled from "ReadOnlyMappedBytesStore.java"
public class net.openhft.chronicle.bytes.ReadOnlyMappedBytesStore extends net.openhft.chronicle.bytes.MappedBytesStore {
  public net.openhft.chronicle.bytes.ReadOnlyMappedBytesStore(net.openhft.chronicle.core.ReferenceCounted, long, long, long, long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: lload         6
       7: lload         8
       9: invokespecial #1                  // Method net/openhft/chronicle/bytes/MappedBytesStore."<init>":(Lnet/openhft/chronicle/core/ReferenceCounted;JJJJ)V
      12: return

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> zeroOut(long, long);
    Code:
       0: aload_0
       1: areturn

  public boolean compareAndSwapInt(long, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public boolean compareAndSwapLong(long, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeByte(long, byte);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeShort(long, short);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeInt(long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeLong(long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeOrderedLong(long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeFloat(long, float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeDouble(long, double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeVolatileByte(long, byte);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeVolatileShort(long, short);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeVolatileInt(long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeVolatileLong(long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> write(long, byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public void write(long, java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public void write0(long, net.openhft.chronicle.bytes.RandomDataInput, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public void nativeWrite(long, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  void write8bit(long, char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public long appendUTF(long, char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public long appendUtf8(long, char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.VanillaBytes<java.lang.Void> bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeOrderedInt(long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method checkReadOnly:()Ljava/lang/IllegalStateException;
       4: athrow

  private java.lang.IllegalStateException checkReadOnly() throws java.lang.IllegalStateException;
    Code:
       0: new           #3                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #4                  // String Read Only
       6: invokespecial #5                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean readWrite();
    Code:
       0: iconst_0
       1: ireturn

  public net.openhft.chronicle.bytes.BytesStore zeroOut(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #6                  // Method zeroOut:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.Bytes bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method bytesForWrite:()Lnet/openhft/chronicle/bytes/VanillaBytes;
       4: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput zeroOut(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #6                  // Method zeroOut:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lload         4
       5: lload         6
       7: invokevirtual #8                  // Method write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, byte[], int, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #9                  // Method write:(J[BII)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #10                 // Method writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #11                 // Method writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileShort(long, short) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #12                 // Method writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileByte(long, byte) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #13                 // Method writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeDouble(long, double) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: dload_3
       3: invokevirtual #14                 // Method writeDouble:(JD)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeFloat(long, float) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: fload_3
       3: invokevirtual #15                 // Method writeFloat:(JF)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #16                 // Method writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #17                 // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #18                 // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #19                 // Method writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeShort(long, short) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #20                 // Method writeShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeByte(long, byte) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #21                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn
}
