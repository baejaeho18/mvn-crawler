Compiled from "AppendableUtil.java"
public final class net.openhft.chronicle.bytes.AppendableUtil extends java.lang.Enum<net.openhft.chronicle.bytes.AppendableUtil> {
  private static final net.openhft.chronicle.bytes.AppendableUtil[] $VALUES;

  public static net.openhft.chronicle.bytes.AppendableUtil[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/AppendableUtil;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/bytes/AppendableUtil;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/bytes/AppendableUtil;"
       9: areturn

  public static net.openhft.chronicle.bytes.AppendableUtil valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       9: areturn

  private net.openhft.chronicle.bytes.AppendableUtil();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static void setCharAt(java.lang.Appendable, int, char) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: iload_1
      12: iload_2
      13: invokevirtual #8                  // Method java/lang/StringBuilder.setCharAt:(IC)V
      16: goto          72
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          42
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: iload_1
      31: i2l
      32: iload_2
      33: invokeinterface #10,  4           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeByte:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      38: pop
      39: goto          72
      42: new           #11                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #7                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #13                 // String
      55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public static void parseUtf8(net.openhft.chronicle.bytes.BytesStore, java.lang.StringBuilder, int) throws net.openhft.chronicle.bytes.UTFDataFormatRuntimeException;
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
       7: aload_1
       8: iload_2
       9: invokestatic  #20                 // Method net/openhft/chronicle/bytes/BytesInternal.parseUtf8:(Lnet/openhft/chronicle/bytes/RandomDataInput;JLjava/lang/Appendable;I)V
      12: return

  public static void setLength(java.lang.Appendable, int) throws java.nio.BufferUnderflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          18
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: iload_1
      12: invokevirtual #21                 // Method java/lang/StringBuilder.setLength:(I)V
      15: goto          71
      18: aload_0
      19: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      22: ifeq          41
      25: aload_0
      26: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      29: lconst_0
      30: iload_1
      31: i2l
      32: invokeinterface #22,  5           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPositionRemaining:(JJ)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      37: pop
      38: goto          71
      41: new           #11                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #7                  // class java/lang/StringBuilder
      48: dup
      49: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #13                 // String
      54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return

  public static void append(java.lang.Appendable, double) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: dload_1
      12: invokevirtual #23                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      15: pop
      16: goto          70
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          40
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: dload_1
      31: invokeinterface #24,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.append:(D)Lnet/openhft/chronicle/bytes/ByteStringAppender;
      36: pop
      37: goto          70
      40: new           #11                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #7                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #13                 // String
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  public static void append(java.lang.Appendable, long) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: lload_1
      12: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      15: pop
      16: goto          70
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          40
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: lload_1
      31: invokeinterface #26,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.append:(J)Lnet/openhft/chronicle/bytes/ByteStringAppender;
      36: pop
      37: goto          70
      40: new           #11                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #7                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #13                 // String
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  public static <ACS extends java.lang.Appendable & java.lang.CharSequence> void append(ACS, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #27,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
       7: pop
       8: goto          21
      11: astore_2
      12: new           #29                 // class java/lang/AssertionError
      15: dup
      16: aload_2
      17: invokespecial #30                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public static void read8bitAndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.StringBuilder, net.openhft.chronicle.bytes.StopCharsTester);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
       6: istore_3
       7: aload_2
       8: iload_3
       9: aload_0
      10: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
      15: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
      20: ifeq          24
      23: return
      24: aload_1
      25: iload_3
      26: i2c
      27: invokevirtual #34                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: pop
      31: aload_0
      32: invokeinterface #35,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readRemaining:()J
      37: lconst_0
      38: lcmp
      39: ifne          43
      42: return
      43: goto          0

  public static void readUTFAndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, net.openhft.chronicle.bytes.StopCharsTester) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method readUtf8AndAppend:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/Appendable;Lnet/openhft/chronicle/bytes/StopCharsTester;)V
       6: goto          19
       9: astore_3
      10: new           #29                 // class java/lang/AssertionError
      13: dup
      14: aload_3
      15: invokespecial #30                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      18: athrow
      19: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  public static void readUtf8AndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, net.openhft.chronicle.bytes.StopCharsTester) throws java.nio.BufferUnderflowException, java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
       6: istore_3
       7: iload_3
       8: sipush        128
      11: if_icmplt     27
      14: aload_0
      15: ldc2_w        #37                 // long -1l
      18: invokeinterface #39,  3           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      23: pop
      24: goto          68
      27: aload_2
      28: iload_3
      29: aload_0
      30: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
      35: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
      40: ifeq          44
      43: return
      44: aload_1
      45: iload_3
      46: i2c
      47: invokeinterface #40,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      52: pop
      53: aload_0
      54: invokeinterface #35,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readRemaining:()J
      59: lconst_0
      60: lcmp
      61: ifne          65
      64: return
      65: goto          0
      68: aload_0
      69: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
      74: dup
      75: istore_3
      76: iflt          471
      79: iload_3
      80: iconst_4
      81: ishr
      82: tableswitch   { // 0 to 14
                     0: 156
                     1: 156
                     2: 156
                     3: 156
                     4: 156
                     5: 156
                     6: 156
                     7: 156
                     8: 441
                     9: 441
                    10: 441
                    11: 441
                    12: 185
                    13: 185
                    14: 283
               default: 441
          }
     156: aload_2
     157: iload_3
     158: aload_0
     159: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     164: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     169: ifeq          173
     172: return
     173: aload_1
     174: iload_3
     175: i2c
     176: invokeinterface #40,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     181: pop
     182: goto          68
     185: aload_0
     186: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     191: istore        4
     193: iload         4
     195: sipush        192
     198: iand
     199: sipush        128
     202: if_icmpeq     236
     205: new           #41                 // class java/io/UTFDataFormatException
     208: dup
     209: new           #7                  // class java/lang/StringBuilder
     212: dup
     213: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     216: ldc           #42                 // String malformed input around byte
     218: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: iload         4
     223: invokestatic  #43                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     226: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     232: invokespecial #44                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     235: athrow
     236: iload_3
     237: bipush        31
     239: iand
     240: bipush        6
     242: ishl
     243: iload         4
     245: bipush        63
     247: iand
     248: ior
     249: i2c
     250: istore        5
     252: aload_2
     253: iload         5
     255: aload_0
     256: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     261: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     266: ifeq          270
     269: return
     270: aload_1
     271: iload         5
     273: i2c
     274: invokeinterface #40,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     279: pop
     280: goto          68
     283: aload_0
     284: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     289: istore        4
     291: aload_0
     292: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     297: istore        5
     299: iload         4
     301: sipush        192
     304: iand
     305: sipush        128
     308: if_icmpeq     342
     311: new           #41                 // class java/io/UTFDataFormatException
     314: dup
     315: new           #7                  // class java/lang/StringBuilder
     318: dup
     319: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     322: ldc           #42                 // String malformed input around byte
     324: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: iload         4
     329: invokestatic  #43                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     332: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     335: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     338: invokespecial #44                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     341: athrow
     342: iload         5
     344: sipush        192
     347: iand
     348: sipush        128
     351: if_icmpeq     385
     354: new           #41                 // class java/io/UTFDataFormatException
     357: dup
     358: new           #7                  // class java/lang/StringBuilder
     361: dup
     362: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     365: ldc           #42                 // String malformed input around byte
     367: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     370: iload         5
     372: invokestatic  #43                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     375: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     381: invokespecial #44                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     384: athrow
     385: iload_3
     386: bipush        15
     388: iand
     389: bipush        12
     391: ishl
     392: iload         4
     394: bipush        63
     396: iand
     397: bipush        6
     399: ishl
     400: ior
     401: iload         5
     403: bipush        63
     405: iand
     406: ior
     407: i2c
     408: istore        6
     410: aload_2
     411: iload         6
     413: aload_0
     414: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     419: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     424: ifeq          428
     427: return
     428: aload_1
     429: iload         6
     431: i2c
     432: invokeinterface #40,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     437: pop
     438: goto          68
     441: new           #41                 // class java/io/UTFDataFormatException
     444: dup
     445: new           #7                  // class java/lang/StringBuilder
     448: dup
     449: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     452: ldc           #42                 // String malformed input around byte
     454: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     457: iload_3
     458: invokestatic  #43                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     461: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     467: invokespecial #44                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     470: athrow
     471: return

  public static void parse8bit_SB1(net.openhft.chronicle.bytes.Bytes, java.lang.StringBuilder, int) throws java.nio.BufferUnderflowException;
    Code:
       0: iload_2
       1: i2l
       2: aload_0
       3: invokeinterface #45,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       8: lcmp
       9: ifle          20
      12: new           #46                 // class java/nio/BufferUnderflowException
      15: dup
      16: invokespecial #47                 // Method java/nio/BufferUnderflowException."<init>":()V
      19: athrow
      20: aload_0
      21: invokeinterface #48,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      26: checkcast     #49                 // class net/openhft/chronicle/bytes/NativeBytesStore
      29: astore_3
      30: aload_0
      31: invokeinterface #50,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      36: lstore        4
      38: lload         4
      40: aload_3
      41: aload_1
      42: iload_2
      43: invokestatic  #51                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit_SB1:(JLnet/openhft/chronicle/bytes/NativeBytesStore;Ljava/lang/StringBuilder;I)I
      46: istore        6
      48: aload_0
      49: iload         6
      51: i2l
      52: invokeinterface #52,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      57: pop
      58: return

  public static void parse8bit(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, int) throws java.nio.BufferUnderflowException, java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          55
       7: aload_1
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: astore_3
      12: aload_0
      13: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      16: ifeq          46
      19: aload_0
      20: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      23: invokeinterface #48,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      28: instanceof    #49                 // class net/openhft/chronicle/bytes/NativeBytesStore
      31: ifeq          46
      34: aload_0
      35: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      38: aload_3
      39: iload_2
      40: invokestatic  #53                 // Method parse8bit_SB1:(Lnet/openhft/chronicle/bytes/Bytes;Ljava/lang/StringBuilder;I)V
      43: goto          52
      46: aload_0
      47: aload_3
      48: iload_2
      49: invokestatic  #54                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit1:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/StringBuilder;I)V
      52: goto          61
      55: aload_0
      56: aload_1
      57: iload_2
      58: invokestatic  #55                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit1:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/Appendable;I)V
      61: return

  public static <ACS extends java.lang.Appendable & java.lang.CharSequence> void append(ACS, java.lang.CharSequence, long, long);
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          61
       7: aload_1
       8: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      11: ifeq          35
      14: aload_0
      15: checkcast     #7                  // class java/lang/StringBuilder
      18: aload_1
      19: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      22: lload_2
      23: lload         4
      25: invokestatic  #56                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.toString:(Lnet/openhft/chronicle/bytes/Bytes;JJ)Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: goto          99
      35: aload_0
      36: checkcast     #7                  // class java/lang/StringBuilder
      39: aload_1
      40: lload_2
      41: invokestatic  #57                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      44: lload         4
      46: invokestatic  #57                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      49: invokeinterface #58,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      54: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          99
      61: aload_0
      62: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      65: ifeq          91
      68: aload_0
      69: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      72: aload_1
      73: lload_2
      74: invokestatic  #57                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      77: lload         4
      79: invokestatic  #57                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      82: invokeinterface #60,  4           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.appendUtf8:(Ljava/lang/CharSequence;II)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      87: pop
      88: goto          99
      91: new           #61                 // class java/lang/UnsupportedOperationException
      94: dup
      95: invokespecial #62                 // Method java/lang/UnsupportedOperationException."<init>":()V
      98: athrow
      99: return

  public static long findUtf8Length(java.lang.CharSequence) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_1
       7: iload_1
       8: i2l
       9: lstore_2
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_1
      16: if_icmpge     66
      19: aload_0
      20: iload         4
      22: invokeinterface #64,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      27: istore        5
      29: iload         5
      31: bipush        127
      33: if_icmpgt     39
      36: goto          60
      39: iload         5
      41: sipush        2047
      44: if_icmpgt     54
      47: lload_2
      48: lconst_1
      49: ladd
      50: lstore_2
      51: goto          60
      54: lload_2
      55: ldc2_w        #65                 // long 2l
      58: ladd
      59: lstore_2
      60: iinc          4, 1
      63: goto          13
      66: lload_2
      67: lreturn

  public static long findUtf8Length(byte[], byte);
    Code:
       0: iload_1
       1: ifne          52
       4: aload_0
       5: arraylength
       6: istore        4
       8: aload_0
       9: arraylength
      10: i2l
      11: lstore_2
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     49
      22: aload_0
      23: iload         5
      25: baload
      26: sipush        255
      29: iand
      30: istore        6
      32: iload         6
      34: bipush        127
      36: if_icmple     43
      39: lload_2
      40: lconst_1
      41: ladd
      42: lstore_2
      43: iinc          5, 1
      46: goto          15
      49: goto          136
      52: aload_0
      53: arraylength
      54: istore        4
      56: lconst_0
      57: lstore_2
      58: iconst_0
      59: istore        5
      61: iload         5
      63: iload         4
      65: if_icmpge     136
      68: aload_0
      69: iload         5
      71: iconst_1
      72: iadd
      73: baload
      74: sipush        255
      77: iand
      78: bipush        8
      80: ishl
      81: aload_0
      82: iload         5
      84: baload
      85: sipush        255
      88: iand
      89: ior
      90: i2c
      91: istore        6
      93: iload         6
      95: bipush        127
      97: if_icmpgt     107
     100: lload_2
     101: lconst_1
     102: ladd
     103: lstore_2
     104: goto          130
     107: iload         6
     109: sipush        2047
     112: if_icmpgt     124
     115: lload_2
     116: ldc2_w        #65                 // long 2l
     119: ladd
     120: lstore_2
     121: goto          130
     124: lload_2
     125: ldc2_w        #67                 // long 3l
     128: ladd
     129: lstore_2
     130: iinc          5, 2
     133: goto          61
     136: lload_2
     137: lreturn

  public static long findUtf8Length(byte[]);
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     102
      14: aload_0
      15: iload         4
      17: baload
      18: sipush        255
      21: iand
      22: istore        5
      24: iload         5
      26: ifne          32
      29: goto          102
      32: iload         5
      34: sipush        240
      37: if_icmplt     52
      40: lload_1
      41: ldc2_w        #69                 // long 4l
      44: ladd
      45: lstore_1
      46: iinc          4, 3
      49: goto          96
      52: iload         5
      54: sipush        224
      57: if_icmplt     72
      60: lload_1
      61: ldc2_w        #67                 // long 3l
      64: ladd
      65: lstore_1
      66: iinc          4, 2
      69: goto          96
      72: iload         5
      74: sipush        192
      77: if_icmplt     92
      80: lload_1
      81: ldc2_w        #65                 // long 2l
      84: ladd
      85: lstore_1
      86: iinc          4, 1
      89: goto          96
      92: lload_1
      93: lconst_1
      94: ladd
      95: lstore_1
      96: iinc          4, 1
      99: goto          8
     102: lload_1
     103: lreturn

  public static long findUtf8Length(char[]);
    Code:
       0: aload_0
       1: arraylength
       2: i2l
       3: lstore_1
       4: aload_0
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     63
      20: aload_3
      21: iload         5
      23: caload
      24: istore        6
      26: iload         6
      28: bipush        127
      30: if_icmpgt     36
      33: goto          57
      36: iload         6
      38: sipush        2047
      41: if_icmpgt     51
      44: lload_1
      45: lconst_1
      46: ladd
      47: lstore_1
      48: goto          57
      51: lload_1
      52: ldc2_w        #65                 // long 2l
      55: ladd
      56: lstore_1
      57: iinc          5, 1
      60: goto          13
      63: lload_1
      64: lreturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/AppendableUtil;
       7: return
}
