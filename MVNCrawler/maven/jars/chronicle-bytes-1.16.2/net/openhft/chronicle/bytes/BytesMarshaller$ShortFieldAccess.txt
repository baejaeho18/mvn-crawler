Compiled from "BytesMarshaller.java"
class net.openhft.chronicle.bytes.BytesMarshaller$ShortFieldAccess extends net.openhft.chronicle.bytes.BytesMarshaller$FieldAccess {
  public net.openhft.chronicle.bytes.BytesMarshaller$ShortFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/BytesMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.bytes.BytesOut) throws java.lang.IllegalAccessException;
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/reflect/Field.getShort:(Ljava/lang/Object;)S
       9: invokeinterface #4,  2            // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeShort:(S)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      14: pop
      15: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.bytes.BytesIn) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.readShort:()S
      11: invokevirtual #6                  // Method java/lang/reflect/Field.setShort:(Ljava/lang/Object;S)V
      14: return
}
