Compiled from "MappedBytesStore.java"
public class net.openhft.chronicle.bytes.MappedBytesStore extends net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> {
  private final long start;

  private final long safeLimit;

  protected net.openhft.chronicle.bytes.MappedBytesStore(net.openhft.chronicle.core.ReferenceCounted, long, long, long, long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload         4
       3: lload_2
       4: lload         6
       6: ladd
       7: new           #1                  // class net/openhft/chronicle/core/OS$Unmapper
      10: dup
      11: lload         4
      13: lload         6
      15: aload_1
      16: invokespecial #2                  // Method net/openhft/chronicle/core/OS$Unmapper."<init>":(JJLnet/openhft/chronicle/core/ReferenceCounted;)V
      19: iconst_0
      20: invokespecial #3                  // Method net/openhft/chronicle/bytes/NativeBytesStore."<init>":(JJLjava/lang/Runnable;Z)V
      23: aload_0
      24: lload_2
      25: putfield      #4                  // Field start:J
      28: aload_0
      29: lload_2
      30: lload         8
      32: ladd
      33: putfield      #5                  // Field safeLimit:J
      36: return

  public net.openhft.chronicle.bytes.VanillaBytes<java.lang.Void> bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: new           #6                  // class net/openhft/chronicle/bytes/VanillaBytes
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method net/openhft/chronicle/bytes/VanillaBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
       8: areturn

  public boolean inside(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field start:J
       4: lload_1
       5: lcmp
       6: ifgt          22
       9: lload_1
      10: aload_0
      11: getfield      #5                  // Field safeLimit:J
      14: lcmp
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean inside(long, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field start:J
       4: lload_1
       5: lcmp
       6: ifgt          25
       9: lload_1
      10: iload_3
      11: i2l
      12: ladd
      13: aload_0
      14: getfield      #8                  // Field maximumLimit:J
      17: lcmp
      18: ifge          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public long safeLimit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field safeLimit:J
       4: lreturn

  public byte readByte(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field memory:Lnet/openhft/chronicle/core/Memory;
       4: aload_0
       5: getfield      #10                 // Field address:J
       8: aload_0
       9: getfield      #4                  // Field start:J
      12: lsub
      13: lload_1
      14: ladd
      15: invokeinterface #11,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.readByte:(J)B
      20: ireturn

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeOrderedInt(long, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field memory:Lnet/openhft/chronicle/core/Memory;
       4: aload_0
       5: getfield      #10                 // Field address:J
       8: aload_0
       9: getfield      #4                  // Field start:J
      12: lsub
      13: lload_1
      14: ladd
      15: iload_3
      16: invokeinterface #12,  4           // InterfaceMethod net/openhft/chronicle/core/Memory.writeOrderedInt:(JI)V
      21: aload_0
      22: areturn

  protected long translate(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #4                  // Field start:J
       5: lsub
       6: lreturn

  public long start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field start:J
       4: lreturn

  public long readPosition();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method start:()J
       4: lreturn

  public net.openhft.chronicle.bytes.Bytes bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method bytesForWrite:()Lnet/openhft/chronicle/bytes/VanillaBytes;
       4: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #15                 // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn
}
