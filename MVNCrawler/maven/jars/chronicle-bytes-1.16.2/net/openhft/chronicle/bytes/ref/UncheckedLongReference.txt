Compiled from "UncheckedLongReference.java"
public class net.openhft.chronicle.bytes.ref.UncheckedLongReference implements net.openhft.chronicle.bytes.ref.LongReference {
  private long address;

  private sun.misc.Unsafe unsafe;

  public net.openhft.chronicle.bytes.ref.UncheckedLongReference();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static net.openhft.chronicle.bytes.ref.LongReference create(net.openhft.chronicle.bytes.BytesStore, long, int);
    Code:
       0: invokestatic  #2                  // Method net/openhft/chronicle/core/Jvm.isDebug:()Z
       3: ifeq          16
       6: new           #3                  // class net/openhft/chronicle/bytes/ref/BinaryLongReference
       9: dup
      10: invokespecial #4                  // Method net/openhft/chronicle/bytes/ref/BinaryLongReference."<init>":()V
      13: goto          23
      16: new           #5                  // class net/openhft/chronicle/bytes/ref/UncheckedLongReference
      19: dup
      20: invokespecial #6                  // Method "<init>":()V
      23: astore        4
      25: aload         4
      27: aload_0
      28: lload_1
      29: iload_3
      30: i2l
      31: invokeinterface #7,  6            // InterfaceMethod net/openhft/chronicle/bytes/ref/LongReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      36: aload         4
      38: areturn

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long);
    Code:
       0: lload         4
       2: aload_0
       3: invokevirtual #8                  // Method maxSize:()J
       6: lcmp
       7: ifeq          18
      10: new           #9                  // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: lload_2
      21: invokeinterface #11,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForRead:(J)J
      26: putfield      #12                 // Field address:J
      29: aload_1
      30: invokeinterface #13,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.reserve:()V
      35: aload_0
      36: getstatic     #14                 // Field net/openhft/chronicle/core/UnsafeMemory.UNSAFE:Lsun/misc/Unsafe;
      39: putfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
      42: return

  public net.openhft.chronicle.bytes.BytesStore bytesStore();
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long offset();
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:J
       4: lreturn

  public long maxSize();
    Code:
       0: ldc2_w        #18                 // long 8l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:J
       4: lconst_0
       5: lcmp
       6: ifne          14
       9: ldc           #20                 // String addressForRead is 0
      11: goto          36
      14: new           #21                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #23                 // String value:
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #25                 // Method getValue:()J
      30: invokevirtual #26                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      33: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public long getValue();
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aload_0
       5: getfield      #12                 // Field address:J
       8: invokevirtual #28                 // Method sun/misc/Unsafe.getLong:(J)J
      11: lreturn

  public void setValue(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aload_0
       5: getfield      #12                 // Field address:J
       8: lload_1
       9: invokevirtual #29                 // Method sun/misc/Unsafe.putLong:(JJ)V
      12: return

  public long getVolatileValue();
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aload_0
       5: getfield      #12                 // Field address:J
       8: invokevirtual #28                 // Method sun/misc/Unsafe.getLong:(J)J
      11: lreturn

  public void setOrderedValue(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aconst_null
       5: aload_0
       6: getfield      #12                 // Field address:J
       9: lload_1
      10: invokevirtual #30                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      13: return

  public long addValue(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aconst_null
       5: aload_0
       6: getfield      #12                 // Field address:J
       9: lload_1
      10: invokevirtual #31                 // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
      13: lload_1
      14: ladd
      15: lreturn

  public long addAtomicValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #32                 // Method addValue:(J)J
       5: lreturn

  public boolean compareAndSwapValue(long, long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field unsafe:Lsun/misc/Unsafe;
       4: aconst_null
       5: aload_0
       6: getfield      #12                 // Field address:J
       9: lload_1
      10: lload_3
      11: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      14: ireturn
}
