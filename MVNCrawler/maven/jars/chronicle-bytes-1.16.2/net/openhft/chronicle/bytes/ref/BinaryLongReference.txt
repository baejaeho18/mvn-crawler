Compiled from "BinaryLongReference.java"
public class net.openhft.chronicle.bytes.ref.BinaryLongReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.bytes.ref.LongReference {
  public static final long LONG_NOT_COMPLETE;

  private static java.util.Set<java.lang.ref.WeakReference<net.openhft.chronicle.bytes.ref.BinaryLongReference>> binaryLongReferences;

  public net.openhft.chronicle.bytes.ref.BinaryLongReference();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: return

  public static void startCollecting();
    Code:
       0: new           #2                  // class java/util/concurrent/CopyOnWriteArraySet
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
       7: putstatic     #4                  // Field binaryLongReferences:Ljava/util/Set;
      10: return

  public static void forceAllToNotCompleteState();
    Code:
       0: getstatic     #4                  // Field binaryLongReferences:Ljava/util/Set;
       3: invokedynamic #5,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      13: aconst_null
      14: putstatic     #4                  // Field binaryLongReferences:Ljava/util/Set;
      17: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: lload         4
       2: aload_0
       3: invokevirtual #7                  // Method maxSize:()J
       6: lcmp
       7: ifeq          18
      10: new           #8                  // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: lload_2
      21: lload         4
      23: invokespecial #10                 // Method net/openhft/chronicle/bytes/ref/AbstractReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      26: return

  public long maxSize();
    Code:
       0: ldc2_w        #11                 // long 8l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ifnonnull     12
       7: ldc           #14                 // String bytes is null
       9: goto          34
      12: new           #15                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #17                 // String value:
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method getValue:()J
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public long getValue();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #22                 // Field offset:J
       8: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      13: lreturn

  public void setValue(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #22                 // Field offset:J
       8: lload_1
       9: invokeinterface #24,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      14: pop
      15: return

  public long getVolatileValue();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #22                 // Field offset:J
       8: invokeinterface #25,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileLong:(J)J
      13: lreturn

  public void setOrderedValue(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #22                 // Field offset:J
       8: lload_1
       9: invokeinterface #26,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      14: pop
      15: return

  public long addValue(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #22                 // Field offset:J
       8: lload_1
       9: invokeinterface #27,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addAndGetLong:(JJ)J
      14: lreturn

  public long addAtomicValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #28                 // Method addValue:(J)J
       5: lreturn

  public boolean compareAndSwapValue(long, long);
    Code:
       0: lload_3
       1: ldc2_w        #30                 // long -1l
       4: lcmp
       5: ifne          31
       8: getstatic     #4                  // Field binaryLongReferences:Ljava/util/Set;
      11: ifnull        31
      14: getstatic     #4                  // Field binaryLongReferences:Ljava/util/Set;
      17: new           #32                 // class java/lang/ref/WeakReference
      20: dup
      21: aload_0
      22: invokespecial #33                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      25: invokeinterface #34,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: getfield      #13                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
      35: aload_0
      36: getfield      #22                 // Field offset:J
      39: lload_1
      40: lload_3
      41: invokeinterface #35,  7           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapLong:(JJJ)Z
      46: ireturn

  private static void lambda$forceAllToNotCompleteState$0(java.lang.ref.WeakReference);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       4: checkcast     #29                 // class net/openhft/chronicle/bytes/ref/BinaryLongReference
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: ldc2_w        #30                 // long -1l
      16: invokevirtual #37                 // Method setValue:(J)V
      19: return
}
