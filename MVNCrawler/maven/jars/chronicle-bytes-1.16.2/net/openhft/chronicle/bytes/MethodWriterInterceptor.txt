Compiled from "MethodWriterInterceptor.java"
public interface net.openhft.chronicle.bytes.MethodWriterInterceptor {
  public static net.openhft.chronicle.bytes.MethodWriterInterceptor of(net.openhft.chronicle.bytes.MethodWriterListener);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokedynamic #1,  0              // InvokeDynamic #0:intercept:(Lnet/openhft/chronicle/bytes/MethodWriterListener;)Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;
      12: areturn

  public abstract void intercept(java.lang.reflect.Method, java.lang.Object[], java.util.function.BiConsumer<java.lang.reflect.Method, java.lang.Object[]>);

  private static void lambda$of$0(net.openhft.chronicle.bytes.MethodWriterListener, java.lang.reflect.Method, java.lang.Object[], java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       5: aload_2
       6: invokeinterface #3,  3            // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterListener.onWrite:(Ljava/lang/String;[Ljava/lang/Object;)V
      11: aload_3
      12: aload_1
      13: aload_2
      14: invokeinterface #4,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: return
}
