Compiled from "NativeBytes.java"
public class net.openhft.chronicle.bytes.NativeBytes<Underlying> extends net.openhft.chronicle.bytes.VanillaBytes<Underlying> {
  static final boolean $assertionsDisabled;

  net.openhft.chronicle.bytes.NativeBytes(net.openhft.chronicle.bytes.BytesStore) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: ldc2_w        #2                  // long 9223372036854775807l
       6: invokespecial #4                  // Method net/openhft/chronicle/bytes/VanillaBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
       9: return

  public static net.openhft.chronicle.bytes.NativeBytes<java.lang.Void> nativeBytes();
    Code:
       0: new           #5                  // class net/openhft/chronicle/bytes/NativeBytes
       3: dup
       4: invokestatic  #6                  // Method net/openhft/chronicle/bytes/NoBytesStore.noBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       7: invokespecial #7                  // Method "<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
      10: areturn
      11: astore_0
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: aload_0
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/IllegalStateException

  public static net.openhft.chronicle.bytes.NativeBytes<java.lang.Void> nativeBytes(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_0
       1: invokestatic  #11                 // Method net/openhft/chronicle/bytes/NativeBytesStore.nativeStoreWithFixedCapacity:(J)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: astore_2
       5: new           #5                  // class net/openhft/chronicle/bytes/NativeBytes
       8: dup
       9: aload_2
      10: invokespecial #7                  // Method "<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
      13: astore_3
      14: aload_2
      15: invokevirtual #12                 // Method net/openhft/chronicle/bytes/NativeBytesStore.release:()V
      18: aload_3
      19: areturn
      20: astore        4
      22: aload_2
      23: invokevirtual #12                 // Method net/openhft/chronicle/bytes/NativeBytesStore.release:()V
      26: aload         4
      28: athrow
      29: astore_3
      30: new           #9                  // class java/lang/AssertionError
      33: dup
      34: aload_3
      35: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      38: athrow
    Exception table:
       from    to  target type
           5    14    20   any
          20    22    20   any
           5    18    29   Class java/lang/IllegalStateException
          20    29    29   Class java/lang/IllegalStateException

  public static net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<java.lang.Void>, java.lang.Void> copyOf(net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       6: lstore_1
       7: lload_1
       8: invokestatic  #14                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.allocateElasticDirect:(J)Lnet/openhft/chronicle/bytes/NativeBytes;
      11: astore_3
      12: aload_3
      13: aload_0
      14: lconst_0
      15: lload_1
      16: invokevirtual #15                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      19: pop
      20: aload_3
      21: areturn
      22: astore        4
      24: new           #9                  // class java/lang/AssertionError
      27: dup
      28: aload         4
      30: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      33: athrow
    Exception table:
       from    to  target type
           7    21    22   Class java/lang/IllegalArgumentException
           7    21    22   Class java/nio/BufferOverflowException
           7    21    22   Class java/nio/BufferUnderflowException

  private static long alignToPageSize(long);
    Code:
       0: invokestatic  #19                 // Method net/openhft/chronicle/core/OS.pageSize:()I
       3: iconst_1
       4: isub
       5: i2l
       6: lstore_2
       7: lload_0
       8: lload_2
       9: ladd
      10: lload_2
      11: ldc2_w        #20                 // long -1l
      14: lxor
      15: land
      16: lreturn

  public long capacity();
    Code:
       0: ldc2_w        #2                  // long 9223372036854775807l
       3: lreturn

  protected void writeCheckOffset(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       5: invokeinterface #23,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      10: lcmp
      11: ifge          22
      14: new           #17                 // class java/nio/BufferOverflowException
      17: dup
      18: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      21: athrow
      22: lload_1
      23: lload_3
      24: ladd
      25: lstore        5
      27: lload         5
      29: aload_0
      30: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      33: invokeinterface #25,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      38: lcmp
      39: ifle          48
      42: aload_0
      43: lload         5
      45: invokespecial #26                 // Method checkResize:(J)V
      48: return

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException;
    Code:
       0: getstatic     #27                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #9                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #28                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: lload_1
      22: lconst_0
      23: invokevirtual #29                 // Method writeCheckOffset:(JJ)V
      26: goto          69
      29: astore_3
      30: new           #16                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #30                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #32                 // String Bytes cannot be resized to
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: lload_1
      47: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      50: ldc           #35                 // String  limit:
      52: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #36                 // Method capacity:()J
      59: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return
    Exception table:
       from    to  target type
           0    26    29   Class java/nio/BufferOverflowException

  private void checkResize(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method isElastic:()Z
       4: ifeq          15
       7: aload_0
       8: lload_1
       9: invokespecial #40                 // Method resize:(J)V
      12: goto          23
      15: new           #17                 // class java/nio/BufferOverflowException
      18: dup
      19: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      22: athrow
      23: return

  public boolean isElastic();
    Code:
       0: iconst_1
       1: ireturn

  private void resize(long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          14
       6: new           #17                 // class java/nio/BufferOverflowException
       9: dup
      10: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      13: athrow
      14: lload_1
      15: aload_0
      16: invokevirtual #36                 // Method capacity:()J
      19: lcmp
      20: ifle          31
      23: new           #17                 // class java/nio/BufferOverflowException
      26: dup
      27: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      30: athrow
      31: aload_0
      32: invokevirtual #41                 // Method realCapacity:()J
      35: lstore_3
      36: lload_1
      37: lload_3
      38: lcmp
      39: ifgt          43
      42: return
      43: lload_1
      44: lload_3
      45: ldc2_w        #42                 // long 3l
      48: lmul
      49: ldc2_w        #44                 // long 2l
      52: ldiv
      53: invokestatic  #46                 // Method java/lang/Math.max:(JJ)J
      56: lstore        5
      58: lload         5
      60: aload_0
      61: invokevirtual #36                 // Method capacity:()J
      64: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
      67: lstore        5
      69: aload_0
      70: invokevirtual #48                 // Method isDirectMemory:()Z
      73: ifne          86
      76: lload         5
      78: getstatic     #49                 // Field MAX_BYTE_BUFFER_CAPACITY:I
      81: i2l
      82: lcmp
      83: ifle          104
      86: lload         5
      88: invokestatic  #50                 // Method alignToPageSize:(J)J
      91: lstore        5
      93: lload         5
      95: aload_0
      96: invokevirtual #36                 // Method capacity:()J
      99: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
     102: lstore        5
     104: aload_0
     105: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     108: invokeinterface #51,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     113: instanceof    #52                 // class java/nio/ByteBuffer
     116: istore        7
     118: iload         7
     120: ifeq          174
     123: lload         5
     125: getstatic     #49                 // Field MAX_BYTE_BUFFER_CAPACITY:I
     128: i2l
     129: lcmp
     130: ifle          174
     133: invokestatic  #53                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     136: aload_0
     137: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     140: new           #30                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #55                 // String Going to try to replace ByteBuffer-backed BytesStore with raw NativeBytesStore to grow to
     149: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: lload         5
     154: ldc2_w        #56                 // long 1024l
     157: ldiv
     158: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     161: ldc           #58                 // String  KB. If later it is assumed that this bytes\' underlyingObject() is ByteBuffer, NullPointerException is likely to be thrown
     163: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokeinterface #59,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     174: lload_1
     175: ldc2_w        #60                 // long 1048576l
     178: lcmp
     179: ifle          247
     182: invokestatic  #53                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     185: aload_0
     186: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     189: new           #30                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     196: ldc           #62                 // String Resizing buffer was
     198: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: lload_3
     202: ldc2_w        #56                 // long 1024l
     205: ldiv
     206: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     209: ldc           #63                 // String  KB, needs
     211: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: lload_1
     215: lload_3
     216: lsub
     217: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     220: ldc           #64                 // String  bytes more, new-size
     222: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: lload         5
     227: ldc2_w        #56                 // long 1024l
     230: ldiv
     231: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     234: ldc           #65                 // String  KB
     236: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     242: invokeinterface #59,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     247: iconst_0
     248: istore        9
     250: iload         7
     252: ifeq          296
     255: lload         5
     257: getstatic     #49                 // Field MAX_BYTE_BUFFER_CAPACITY:I
     260: i2l
     261: lcmp
     262: ifgt          296
     265: aload_0
     266: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     269: invokeinterface #51,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     274: checkcast     #52                 // class java/nio/ByteBuffer
     277: invokevirtual #66                 // Method java/nio/ByteBuffer.position:()I
     280: istore        9
     282: aload_0
     283: lload         5
     285: invokestatic  #67                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
     288: invokespecial #68                 // Method allocateNewByteBufferBackedStore:(I)Lnet/openhft/chronicle/bytes/BytesStore;
     291: astore        8
     293: goto          303
     296: lload         5
     298: invokestatic  #69                 // Method net/openhft/chronicle/bytes/NativeBytesStore.lazyNativeBytesStoreWithFixedCapacity:(J)Lnet/openhft/chronicle/bytes/NativeBytesStore;
     301: astore        8
     303: goto          328
     306: astore        10
     308: new           #17                 // class java/nio/BufferOverflowException
     311: dup
     312: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
     315: astore        11
     317: aload         11
     319: aload         10
     321: invokevirtual #70                 // Method java/nio/BufferOverflowException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     324: pop
     325: aload         11
     327: athrow
     328: aload_0
     329: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     332: astore        10
     334: aload_0
     335: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     338: aload         8
     340: invokeinterface #71,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.copyTo:(Lnet/openhft/chronicle/bytes/BytesStore;)J
     345: pop2
     346: aload_0
     347: aload         8
     349: putfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     352: aload         10
     354: invokeinterface #72,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.release:()V
     359: goto          378
     362: astore        11
     364: invokestatic  #73                 // Method net/openhft/chronicle/core/Jvm.debug:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     367: aload_0
     368: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     371: aload         11
     373: invokeinterface #74,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
     378: aload_0
     379: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     382: invokeinterface #51,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     387: instanceof    #52                 // class java/nio/ByteBuffer
     390: ifeq          433
     393: aload_0
     394: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     397: invokeinterface #51,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     402: checkcast     #52                 // class java/nio/ByteBuffer
     405: astore        11
     407: aload         11
     409: iconst_0
     410: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     413: pop
     414: aload         11
     416: aload         11
     418: invokevirtual #76                 // Method java/nio/ByteBuffer.capacity:()I
     421: invokevirtual #77                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     424: pop
     425: aload         11
     427: iload         9
     429: invokevirtual #75                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     432: pop
     433: return
    Exception table:
       from    to  target type
         250   303   306   Class java/lang/IllegalArgumentException
         352   359   362   Class java/lang/IllegalStateException

  private net.openhft.chronicle.bytes.BytesStore allocateNewByteBufferBackedStore(int);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isDirectMemory:()Z
       4: ifeq          16
       7: iload_1
       8: aload_0
       9: invokevirtual #36                 // Method capacity:()J
      12: invokestatic  #78                 // Method net/openhft/chronicle/bytes/NativeBytesStore.elasticByteBuffer:(IJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      15: areturn
      16: iload_1
      17: invokestatic  #79                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      20: invokestatic  #80                 // Method net/openhft/chronicle/bytes/HeapBytesStore.wrap:(Ljava/nio/ByteBuffer;)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      23: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException;
    Code:
       0: iload_3
       1: i2l
       2: aload_0
       3: invokevirtual #81                 // Method writeRemaining:()J
       6: lcmp
       7: ifle          18
      10: new           #17                 // class java/nio/BufferOverflowException
      13: dup
      14: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      17: athrow
      18: aload_0
      19: invokevirtual #82                 // Method writePosition:()J
      22: lstore        4
      24: aload_0
      25: lload         4
      27: iload_3
      28: i2l
      29: ladd
      30: invokevirtual #83                 // Method ensureCapacity:(J)V
      33: aload_0
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokespecial #84                 // Method net/openhft/chronicle/bytes/VanillaBytes.write:([BII)Lnet/openhft/chronicle/bytes/Bytes;
      40: pop
      41: aload_0
      42: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method writePosition:()J
       4: lstore        6
       6: aload_0
       7: lload         6
       9: lload         4
      11: ladd
      12: invokevirtual #83                 // Method ensureCapacity:(J)V
      15: aload_0
      16: aload_1
      17: lload_2
      18: lload         4
      20: invokespecial #85                 // Method net/openhft/chronicle/bytes/VanillaBytes.write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      23: pop
      24: aload_0
      25: areturn

  public net.openhft.chronicle.bytes.NativeBytes writeSome(net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       6: aload_0
       7: invokevirtual #81                 // Method writeRemaining:()J
      10: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
      13: lstore_2
      14: lload_2
      15: aload_0
      16: invokevirtual #82                 // Method writePosition:()J
      19: ladd
      20: ldc2_w        #60                 // long 1048576l
      23: lcmp
      24: iflt          46
      27: aload_1
      28: invokeinterface #13,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      33: aload_0
      34: invokevirtual #41                 // Method realCapacity:()J
      37: aload_0
      38: invokevirtual #82                 // Method writePosition:()J
      41: lsub
      42: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
      45: lstore_2
      46: aload_1
      47: invokeinterface #86,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      52: lstore        4
      54: aload_0
      55: invokevirtual #82                 // Method writePosition:()J
      58: lstore        6
      60: aload_0
      61: lload         6
      63: lload_2
      64: ladd
      65: invokevirtual #83                 // Method ensureCapacity:(J)V
      68: aload_0
      69: aload_1
      70: lload         4
      72: lload_2
      73: invokevirtual #87                 // Method optimisedWrite:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      76: lload_2
      77: aload_1
      78: invokeinterface #13,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      83: lcmp
      84: ifne          97
      87: aload_1
      88: invokeinterface #88,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.clear:()Lnet/openhft/chronicle/bytes/Bytes;
      93: pop
      94: goto          132
      97: aload_1
      98: lload_2
      99: invokeinterface #89,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
     104: pop
     105: aload_1
     106: invokeinterface #90,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
     111: aload_1
     112: invokeinterface #91,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.realCapacity:()J
     117: ldc2_w        #44                 // long 2l
     120: ldiv
     121: lcmp
     122: ifle          132
     125: aload_1
     126: invokeinterface #92,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.compact:()Lnet/openhft/chronicle/bytes/Bytes;
     131: pop
     132: aload_0
     133: areturn
     134: astore_2
     135: new           #9                  // class java/lang/AssertionError
     138: dup
     139: aload_2
     140: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     143: athrow
    Exception table:
       from    to  target type
           0   133   134   Class java/lang/IllegalArgumentException
           0   133   134   Class java/nio/BufferUnderflowException
           0   133   134   Class java/nio/BufferOverflowException

  protected long writeOffsetPositionMoved(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #93                 // Field writePosition:J
       4: lstore        5
       6: aload_0
       7: getfield      #93                 // Field writePosition:J
      10: aload_0
      11: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      14: invokeinterface #23,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      19: lcmp
      20: ifge          31
      23: new           #17                 // class java/nio/BufferOverflowException
      26: dup
      27: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #93                 // Field writePosition:J
      35: lload_1
      36: ladd
      37: lstore        7
      39: lload         7
      41: aload_0
      42: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      45: invokeinterface #25,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      50: lcmp
      51: ifle          60
      54: aload_0
      55: lload         7
      57: invokespecial #26                 // Method checkResize:(J)V
      60: aload_0
      61: aload_0
      62: getfield      #93                 // Field writePosition:J
      65: lload_3
      66: ladd
      67: putfield      #93                 // Field writePosition:J
      70: lload         5
      72: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(byte) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lconst_1
       2: lconst_1
       3: invokevirtual #94                 // Method writeOffsetPositionMoved:(JJ)J
       6: lstore_2
       7: aload_0
       8: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_2
      12: iload_1
      13: invokeinterface #95,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: aload_0
      20: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: ldc2_w        #20                 // long -1l
       8: invokevirtual #96                 // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      11: pop
      12: goto          55
      15: aload_1
      16: invokeinterface #97,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
      21: lstore_2
      22: aload_0
      23: invokevirtual #81                 // Method writeRemaining:()J
      26: aload_1
      27: invokeinterface #98,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLimit:()J
      32: lload_2
      33: lsub
      34: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J
      37: lstore        4
      39: aload_0
      40: lload         4
      42: invokevirtual #96                 // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      45: pop
      46: aload_0
      47: aload_1
      48: lload_2
      49: lload         4
      51: invokevirtual #15                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      54: pop
      55: aload_0
      56: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: ldc2_w        #99                 // long 8l
       4: ldc2_w        #99                 // long 8l
       7: invokevirtual #94                 // Method writeOffsetPositionMoved:(JJ)J
      10: lstore_3
      11: aload_0
      12: getfield      #22                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      15: lload_3
      16: lload_1
      17: invokeinterface #101,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      22: pop
      23: aload_0
      24: areturn

  public long readRemaining();
    Code:
       0: aload_0
       1: getfield      #93                 // Field writePosition:J
       4: aload_0
       5: getfield      #102                // Field readPosition:J
       8: lsub
       9: lreturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(byte[], int, int) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #103                // Method write:([BII)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: invokevirtual #15                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
       8: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSome(net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #104                // Method writeSome:(Lnet/openhft/chronicle/bytes/Bytes;)Lnet/openhft/chronicle/bytes/NativeBytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLong(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #105                // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeByte(byte) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #106                // Method writeByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #107                // Method write8bit:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  static {};
    Code:
       0: ldc           #5                  // class net/openhft/chronicle/bytes/NativeBytes
       2: invokevirtual #108                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #27                 // Field $assertionsDisabled:Z
      16: return
}
