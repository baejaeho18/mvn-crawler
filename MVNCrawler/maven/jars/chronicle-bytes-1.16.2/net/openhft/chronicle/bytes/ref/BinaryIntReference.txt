Compiled from "BinaryIntReference.java"
public class net.openhft.chronicle.bytes.ref.BinaryIntReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.core.values.IntValue {
  public net.openhft.chronicle.bytes.ref.BinaryIntReference();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: lload         4
       2: aload_0
       3: invokevirtual #2                  // Method maxSize:()J
       6: lcmp
       7: ifeq          18
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: lload_2
      21: lload         4
      23: invokespecial #5                  // Method net/openhft/chronicle/bytes/ref/AbstractReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      26: return

  public long maxSize();
    Code:
       0: ldc2_w        #6                  // long 4l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ifnonnull     12
       7: ldc           #9                  // String bytes is null
       9: goto          34
      12: new           #10                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #12                 // String value:
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #14                 // Method getValue:()I
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public int getValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: invokeinterface #18,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readInt:(J)I
      13: ireturn

  public void setValue(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: iload_1
       9: invokeinterface #19,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      14: pop
      15: return

  public int getVolatileValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileInt:(J)I
      13: ireturn

  public void setOrderedValue(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: iload_1
       9: invokeinterface #21,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      14: pop
      15: return

  public int addValue(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: iload_1
       9: invokeinterface #22,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addAndGetInt:(JI)I
      14: ireturn

  public int addAtomicValue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method addValue:(I)I
       5: ireturn

  public boolean compareAndSwapValue(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #17                 // Field offset:J
       8: iload_1
       9: iload_2
      10: invokeinterface #24,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapInt:(JII)Z
      15: ireturn
}
