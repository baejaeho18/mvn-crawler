Compiled from "UncheckedBytes.java"
public class net.openhft.chronicle.bytes.UncheckedBytes<Underlying> extends net.openhft.chronicle.bytes.AbstractBytes<Underlying> {
  final net.openhft.chronicle.bytes.Bytes underlyingBytes;

  public net.openhft.chronicle.bytes.UncheckedBytes(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       7: aload_1
       8: invokeinterface #2,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      13: aload_1
      14: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLimit:()J
      19: invokespecial #4                  // Method net/openhft/chronicle/bytes/AbstractBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      27: aload_0
      28: aload_1
      29: invokeinterface #6,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      34: invokevirtual #7                  // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
      37: pop
      38: return

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #8                  // Method realCapacity:()J
       5: lcmp
       6: ifle          32
       9: aload_0
      10: getfield      #5                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      13: lload_1
      14: invokeinterface #9,  3            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.ensureCapacity:(J)V
      19: aload_0
      20: aload_0
      21: getfield      #5                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      24: invokeinterface #1,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      29: putfield      #10                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      32: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> unchecked(boolean);
    Code:
       0: aload_0
       1: areturn

  public boolean unchecked();
    Code:
       0: iconst_1
       1: ireturn

  void writeCheckOffset(long, long);
    Code:
       0: return

  void readCheckOffset(long, long, boolean);
    Code:
       0: return

  void prewriteCheckOffset(long, long);
    Code:
       0: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> readPosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field readPosition:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #12                 // Method uncheckedWritePosition:(J)V
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writePosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #12                 // Method uncheckedWritePosition:(J)V
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readSkip(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field readPosition:J
       5: lload_1
       6: ladd
       7: putfield      #11                 // Field readPosition:J
      10: aload_0
      11: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSkip(long);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method writePosition:()J
       5: lload_1
       6: ladd
       7: invokevirtual #12                 // Method uncheckedWritePosition:(J)V
      10: aload_0
      11: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field writeLimit:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying> copy();
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #16                 // String todo
       6: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isElastic();
    Code:
       0: iconst_0
       1: ireturn

  protected long readOffsetPositionMoved(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field readPosition:J
       4: lstore_3
       5: aload_0
       6: dup
       7: getfield      #11                 // Field readPosition:J
      10: lload_1
      11: ladd
      12: putfield      #11                 // Field readPosition:J
      15: lload_3
      16: lreturn

  protected long writeOffsetPositionMoved(long, long);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method writePosition:()J
       4: lstore        5
       6: aload_0
       7: aload_0
       8: invokevirtual #13                 // Method writePosition:()J
      11: lload_3
      12: ladd
      13: invokevirtual #12                 // Method uncheckedWritePosition:(J)V
      16: lload         5
      18: lreturn

  protected long prewriteOffsetPositionMoved(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field readPosition:J
       5: lload_1
       6: lsub
       7: dup2_x1
       8: putfield      #11                 // Field readPosition:J
      11: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException;
    Code:
       0: lload         4
       2: ldc2_w        #18                 // long 8l
       5: lcmp
       6: ifne          24
       9: aload_0
      10: aload_1
      11: lload_2
      12: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      17: invokevirtual #21                 // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
      20: pop
      21: goto          74
      24: aload_1
      25: invokeinterface #22,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
      30: ifnonnull     65
      33: aload_0
      34: getfield      #10                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      37: invokeinterface #23,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isDirectMemory:()Z
      42: ifeq          65
      45: lload         4
      47: ldc2_w        #24                 // long 32l
      50: lcmp
      51: iflt          65
      54: aload_0
      55: aload_1
      56: lload_2
      57: lload         4
      59: invokevirtual #26                 // Method rawCopy:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      62: goto          74
      65: aload_0
      66: aload_1
      67: lload_2
      68: lload         4
      70: invokespecial #27                 // Method net/openhft/chronicle/bytes/AbstractBytes.write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      73: pop
      74: aload_0
      75: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: aload_1
       1: instanceof    #28                 // class net/openhft/chronicle/bytes/BytesStore
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #28                 // class net/openhft/chronicle/bytes/BytesStore
      12: invokevirtual #29                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      15: checkcast     #30                 // class net/openhft/chronicle/bytes/Bytes
      18: areturn
      19: aload_1
      20: invokeinterface #31,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      25: istore_2
      26: aload_0
      27: iload_2
      28: i2l
      29: invokevirtual #32                 // Method writeOffsetPositionMoved:(J)J
      32: lstore_3
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload_2
      39: if_icmpge     79
      42: aload_1
      43: iload         5
      45: invokeinterface #33,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      50: istore        6
      52: iload         6
      54: sipush        255
      57: if_icmple     64
      60: bipush        63
      62: istore        6
      64: aload_0
      65: lload_3
      66: iload         6
      68: i2b
      69: invokevirtual #34                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
      72: pop
      73: iinc          5, 1
      76: goto          36
      79: aload_0
      80: areturn

  public void rawCopy(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method writeRemaining:()J
       4: aload_1
       5: invokeinterface #36,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      10: lload_2
      11: lsub
      12: lload         4
      14: invokestatic  #37                 // Method java/lang/Math.min:(JJ)J
      17: invokestatic  #37                 // Method java/lang/Math.min:(JJ)J
      20: lstore        6
      22: lload         6
      24: lconst_0
      25: lcmp
      26: ifle          71
      29: aload_0
      30: aload_0
      31: invokevirtual #13                 // Method writePosition:()J
      34: lload         6
      36: invokevirtual #38                 // Method writeCheckOffset:(JJ)V
      39: invokestatic  #39                 // Method net/openhft/chronicle/core/OS.memory:()Lnet/openhft/chronicle/core/Memory;
      42: aload_1
      43: lload_2
      44: invokeinterface #40,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForRead:(J)J
      49: aload_0
      50: aload_0
      51: invokevirtual #13                 // Method writePosition:()J
      54: invokevirtual #41                 // Method addressForWrite:(J)J
      57: lload         6
      59: invokeinterface #42,  7           // InterfaceMethod net/openhft/chronicle/core/Memory.copyMemory:(JJJ)V
      64: aload_0
      65: lload         6
      67: invokevirtual #43                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
      70: pop
      71: return

  public net.openhft.chronicle.bytes.StreamingDataInput readSkip(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #44                 // Method readSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readLimit(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #45                 // Method readLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readPosition(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #7                  // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: invokevirtual #46                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
       8: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSkip(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #43                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLimit(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #47                 // Method writeLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writePosition(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #48                 // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.ByteStringAppender append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method append8bit:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn
}
