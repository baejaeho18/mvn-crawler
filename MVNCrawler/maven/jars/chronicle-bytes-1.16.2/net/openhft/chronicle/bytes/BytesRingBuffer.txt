Compiled from "BytesRingBuffer.java"
public interface net.openhft.chronicle.bytes.BytesRingBuffer extends net.openhft.chronicle.bytes.BytesRingBufferStats,net.openhft.chronicle.bytes.BytesConsumer {
  public static final org.slf4j.Logger LOG;

  public static net.openhft.chronicle.bytes.BytesRingBuffer newInstance(net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #1                  // InterfaceMethod newInstance:(Lnet/openhft/chronicle/bytes/NativeBytesStore;I)Lnet/openhft/chronicle/bytes/BytesRingBuffer;
       5: areturn

  public static net.openhft.chronicle.bytes.BytesRingBuffer newInstance(net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void>, int);
    Code:
       0: invokestatic  #2                  // InterfaceMethod clazz:()Ljava/lang/Class;
       3: astore_2
       4: aload_2
       5: iconst_2
       6: anewarray     #3                  // class java/lang/Class
       9: dup
      10: iconst_0
      11: ldc           #4                  // class net/openhft/chronicle/bytes/BytesStore
      13: aastore
      14: dup
      15: iconst_1
      16: getstatic     #5                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      19: aastore
      20: invokevirtual #6                  // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      23: astore_3
      24: aload_3
      25: iconst_2
      26: anewarray     #7                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: aastore
      33: dup
      34: iconst_1
      35: iload_1
      36: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #9                  // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #10                 // class net/openhft/chronicle/bytes/BytesRingBuffer
      46: areturn
      47: astore_2
      48: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      51: ldc           #13                 // String This is a a commercial feature, please contact sales@higherfrequencytrading.com to unlock this feature.
      53: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      58: aload_2
      59: invokestatic  #15                 // Method net/openhft/chronicle/core/Jvm.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      62: athrow
    Exception table:
       from    to  target type
           0    46    47   Class java/lang/Exception

  public static java.lang.Class<net.openhft.chronicle.bytes.BytesRingBuffer> clazz() throws java.lang.ClassNotFoundException;
    Code:
       0: ldc           #16                 // String software.chronicle.enterprise.queue.EnterpriseRingBuffer
       2: invokestatic  #17                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: areturn

  public static long sizeFor(long);
    Code:
       0: lload_0
       1: iconst_1
       2: invokestatic  #18                 // InterfaceMethod sizeFor:(JI)J
       5: lreturn

  public static long sizeFor(long, int);
    Code:
       0: invokestatic  #2                  // InterfaceMethod clazz:()Ljava/lang/Class;
       3: ldc           #19                 // String sizeFor
       5: iconst_2
       6: anewarray     #3                  // class java/lang/Class
       9: dup
      10: iconst_0
      11: getstatic     #20                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #5                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      20: aastore
      21: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      24: astore_3
      25: aload_3
      26: aconst_null
      27: iconst_2
      28: anewarray     #7                  // class java/lang/Object
      31: dup
      32: iconst_0
      33: lload_0
      34: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: aastore
      38: dup
      39: iconst_1
      40: iload_2
      41: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: invokevirtual #23                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #24                 // class java/lang/Long
      51: invokevirtual #25                 // Method java/lang/Long.longValue:()J
      54: lreturn
      55: astore_3
      56: getstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
      59: ldc           #13                 // String This is a a commercial feature, please contact sales@higherfrequencytrading.com to unlock this feature.
      61: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      66: aload_3
      67: invokestatic  #15                 // Method net/openhft/chronicle/core/Jvm.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      70: athrow
    Exception table:
       from    to  target type
           0    54    55   Class java/lang/Exception

  public abstract void clear();

  public abstract boolean offer(net.openhft.chronicle.bytes.BytesStore);

  public abstract boolean read(net.openhft.chronicle.bytes.BytesOut) throws java.nio.BufferOverflowException;

  public abstract long readRemaining();

  public abstract boolean isEmpty();

  static {};
    Code:
       0: ldc           #10                 // class net/openhft/chronicle/bytes/BytesRingBuffer
       2: invokestatic  #26                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
