Compiled from "BinaryLongArrayReference.java"
public class net.openhft.chronicle.bytes.ref.BinaryLongArrayReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.bytes.ref.ByteableLongArrayValues {
  private static final long CAPACITY;

  private static final long USED;

  private static final long VALUES;

  private static final int MAX_TO_STRING;

  private static java.util.Set<java.lang.ref.WeakReference<net.openhft.chronicle.bytes.ref.BinaryLongArrayReference>> binaryLongArrayReferences;

  private long length;

  static final boolean $assertionsDisabled;

  public net.openhft.chronicle.bytes.ref.BinaryLongArrayReference();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long 16l
       8: putfield      #7                  // Field length:J
      11: return

  public static void startCollecting();
    Code:
       0: new           #8                  // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #9                  // Method java/util/IdentityHashMap."<init>":()V
       7: invokestatic  #10                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      10: putstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
      13: return

  public static void forceAllToNotCompleteState();
    Code:
       0: getstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
       3: invokedynamic #12,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
       8: invokeinterface #13,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      13: aconst_null
      14: putstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
      17: return

  public static void write(net.openhft.chronicle.bytes.Bytes, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException;
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: invokeinterface #15,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      12: ldc2_w        #16                 // long 7l
      15: land
      16: lconst_0
      17: lcmp
      18: ifeq          29
      21: new           #18                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: lload_1
      31: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLong:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      36: pop
      37: aload_0
      38: lconst_0
      39: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLong:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      44: pop
      45: aload_0
      46: invokeinterface #15,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      51: lstore_3
      52: aload_0
      53: lload_3
      54: lload_3
      55: lload_1
      56: iconst_3
      57: lshl
      58: ladd
      59: invokeinterface #21,  5           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.zeroOut:(JJ)Lnet/openhft/chronicle/bytes/BytesStore;
      64: pop
      65: aload_0
      66: lload_1
      67: iconst_3
      68: lshl
      69: invokeinterface #22,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      74: pop
      75: return

  public static void lazyWrite(net.openhft.chronicle.bytes.Bytes, long) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: invokeinterface #15,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      12: ldc2_w        #16                 // long 7l
      15: land
      16: lconst_0
      17: lcmp
      18: ifeq          29
      21: new           #18                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: lload_1
      31: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLong:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      36: pop
      37: aload_0
      38: lconst_0
      39: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLong:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      44: pop
      45: aload_0
      46: lload_1
      47: iconst_3
      48: lshl
      49: invokeinterface #22,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      54: pop
      55: return

  public static long peakLength(net.openhft.chronicle.bytes.BytesStore, long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
       7: lstore_3
       8: getstatic     #14                 // Field $assertionsDisabled:Z
      11: ifne          30
      14: lload_3
      15: lconst_0
      16: lcmp
      17: ifgt          30
      20: new           #18                 // class java/lang/AssertionError
      23: dup
      24: ldc           #24                 // String capacity too small
      26: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      29: athrow
      30: lload_3
      31: iconst_3
      32: lshl
      33: ldc2_w        #5                  // long 16l
      36: ladd
      37: lreturn

  public long getCapacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field length:J
       4: ldc2_w        #5                  // long 16l
       7: lsub
       8: iconst_3
       9: lushr
      10: lreturn

  public long getUsed();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #27                 // Field offset:J
       8: ldc2_w        #28                 // long 8l
      11: ladd
      12: invokeinterface #30,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileLong:(J)J
      17: lreturn

  public void setMaxUsed(long);
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #27                 // Field offset:J
       8: ldc2_w        #28                 // long 8l
      11: ladd
      12: lload_1
      13: invokeinterface #31,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeMaxLong:(JJ)V
      18: return

  public long getValueAt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ldc2_w        #5                  // long 16l
       7: aload_0
       8: getfield      #27                 // Field offset:J
      11: ladd
      12: lload_1
      13: iconst_3
      14: lshl
      15: ladd
      16: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      21: lreturn

  public void setValueAt(long, long) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ldc2_w        #5                  // long 16l
       7: aload_0
       8: getfield      #27                 // Field offset:J
      11: ladd
      12: lload_1
      13: iconst_3
      14: lshl
      15: ladd
      16: lload_3
      17: invokeinterface #32,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      22: pop
      23: return

  public long getVolatileValueAt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ldc2_w        #5                  // long 16l
       7: aload_0
       8: getfield      #27                 // Field offset:J
      11: ladd
      12: lload_1
      13: iconst_3
      14: lshl
      15: ladd
      16: invokeinterface #30,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileLong:(J)J
      21: lreturn

  public void bindValueAt(int, net.openhft.chronicle.core.values.LongValue);
    Code:
       0: aload_2
       1: checkcast     #3                  // class net/openhft/chronicle/bytes/ref/BinaryLongReference
       4: aload_0
       5: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: ldc2_w        #5                  // long 16l
      11: aload_0
      12: getfield      #27                 // Field offset:J
      15: ladd
      16: iload_1
      17: iconst_3
      18: ishl
      19: i2l
      20: ladd
      21: ldc2_w        #28                 // long 8l
      24: invokevirtual #33                 // Method net/openhft/chronicle/bytes/ref/BinaryLongReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      27: return

  public void setOrderedValueAt(long, long) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ldc2_w        #5                  // long 16l
       7: aload_0
       8: getfield      #27                 // Field offset:J
      11: ladd
      12: lload_1
      13: iconst_3
      14: lshl
      15: ladd
      16: lload_3
      17: invokeinterface #34,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      22: pop
      23: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferUnderflowException, java.lang.IllegalArgumentException;
    Code:
       0: lload         4
       2: aload_1
       3: lload_2
       4: invokestatic  #35                 // Method peakLength:(Lnet/openhft/chronicle/bytes/BytesStore;J)J
       7: lcmp
       8: ifeq          47
      11: new           #36                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #37                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      22: lload         4
      24: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      27: ldc           #40                 // String  !=
      29: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: lload_2
      34: invokestatic  #35                 // Method peakLength:(Lnet/openhft/chronicle/bytes/BytesStore;J)J
      37: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: getstatic     #14                 // Field $assertionsDisabled:Z
      50: ifne          90
      53: lload_2
      54: ldc2_w        #16                 // long 7l
      57: land
      58: lconst_0
      59: lcmp
      60: ifeq          90
      63: new           #18                 // class java/lang/AssertionError
      66: dup
      67: new           #37                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #44                 // String offset=
      76: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: lload_2
      80: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      83: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      89: athrow
      90: aload_0
      91: aload_1
      92: lload_2
      93: ldc2_w        #16                 // long 7l
      96: ladd
      97: ldc2_w        #45                 // long -8l
     100: land
     101: lload         4
     103: invokespecial #47                 // Method net/openhft/chronicle/bytes/ref/AbstractReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
     106: aload_0
     107: lload         4
     109: putfield      #7                  // Field length:J
     112: return

  public boolean isNull();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       5: aload_0
       6: lconst_0
       7: putfield      #27                 // Field offset:J
      10: aload_0
      11: lconst_0
      12: putfield      #7                  // Field length:J
      15: return

  public net.openhft.chronicle.bytes.BytesStore bytesStore();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: areturn

  public long offset();
    Code:
       0: aload_0
       1: getfield      #27                 // Field offset:J
       4: lreturn

  public long maxSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field length:J
       4: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ifnonnull     10
       7: ldc           #48                 // String not set
       9: areturn
      10: new           #37                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      17: astore_1
      18: aload_1
      19: ldc           #49                 // String used:
      21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: invokevirtual #50                 // Method getUsed:()J
      29: lstore_2
      30: aload_1
      31: lload_2
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: ldc           #51                 // String , value:
      39: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: ldc           #52                 // String
      45: astore        4
      47: lload_2
      48: aload_0
      49: invokevirtual #53                 // Method getCapacity:()J
      52: ldc2_w        #54                 // long 1024l
      55: invokestatic  #56                 // Method java/lang/Math.min:(JJ)J
      58: invokestatic  #56                 // Method java/lang/Math.min:(JJ)J
      61: l2i
      62: istore        6
      64: iconst_0
      65: istore        5
      67: iload         5
      69: iload         6
      71: if_icmpge     105
      74: aload_0
      75: iload         5
      77: i2l
      78: invokevirtual #57                 // Method getValueAt:(J)J
      81: lstore        7
      83: aload_1
      84: aload         4
      86: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: lload         7
      91: invokevirtual #39                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      94: pop
      95: ldc           #58                 // String ,
      97: astore        4
      99: iinc          5, 1
     102: goto          67
     105: iload         5
     107: i2l
     108: aload_0
     109: invokevirtual #53                 // Method getCapacity:()J
     112: lcmp
     113: ifge          123
     116: aload_1
     117: ldc           #59                 // String  ...
     119: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: goto          140
     126: astore        5
     128: aload_1
     129: ldc           #61                 // String
     131: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload         5
     136: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: pop
     140: aload_1
     141: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: areturn
    Exception table:
       from    to  target type
          47   123   126   Class java/nio/BufferUnderflowException

  public long sizeInBytes(long);
    Code:
       0: lload_1
       1: iconst_3
       2: lshl
       3: ldc2_w        #5                  // long 16l
       6: ladd
       7: lreturn

  public boolean compareAndSet(long, long, long) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: lload         5
       2: ldc2_w        #63                 // long -1l
       5: lcmp
       6: ifne          32
       9: getstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
      12: ifnull        32
      15: getstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
      18: new           #65                 // class java/lang/ref/WeakReference
      21: dup
      22: aload_0
      23: invokespecial #66                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      26: invokeinterface #67,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_0
      33: getfield      #26                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
      36: ldc2_w        #5                  // long 16l
      39: aload_0
      40: getfield      #27                 // Field offset:J
      43: ladd
      44: lload_1
      45: iconst_3
      46: lshl
      47: ladd
      48: lload_3
      49: lload         5
      51: invokeinterface #68,  7           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapLong:(JJJ)Z
      56: ireturn

  private static void lambda$forceAllToNotCompleteState$0(java.lang.ref.WeakReference);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       4: checkcast     #1                  // class net/openhft/chronicle/bytes/ref/BinaryLongArrayReference
       7: astore_1
       8: aload_1
       9: ifnull        20
      12: aload_1
      13: lconst_0
      14: ldc2_w        #63                 // long -1l
      17: invokevirtual #70                 // Method setValueAt:(JJ)V
      20: return

  static {};
    Code:
       0: ldc           #1                  // class net/openhft/chronicle/bytes/ref/BinaryLongArrayReference
       2: invokevirtual #71                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #14                 // Field $assertionsDisabled:Z
      16: aconst_null
      17: putstatic     #11                 // Field binaryLongArrayReferences:Ljava/util/Set;
      20: return
}
