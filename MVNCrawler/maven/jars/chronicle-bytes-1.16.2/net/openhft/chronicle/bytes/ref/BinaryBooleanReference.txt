Compiled from "BinaryBooleanReference.java"
public class net.openhft.chronicle.bytes.ref.BinaryBooleanReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.core.values.BooleanValue {
  private static final byte FALSE;

  private static final byte TRUE;

  public net.openhft.chronicle.bytes.ref.BinaryBooleanReference();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferOverflowException, java.nio.BufferUnderflowException;
    Code:
       0: lload         4
       2: aload_0
       3: invokevirtual #2                  // Method maxSize:()J
       6: lcmp
       7: ifeq          18
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: lload_2
      21: lload         4
      23: invokespecial #5                  // Method net/openhft/chronicle/bytes/ref/AbstractReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      26: return

  public long maxSize();
    Code:
       0: lconst_1
       1: lreturn

  public boolean getValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #7                  // Field offset:J
       8: invokeinterface #8,  3            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readByte:(J)B
      13: istore_1
      14: iload_1
      15: bipush        -80
      17: if_icmpne     22
      20: iconst_0
      21: ireturn
      22: iload_1
      23: bipush        -79
      25: if_icmpne     30
      28: iconst_1
      29: ireturn
      30: new           #10                 // class java/lang/IllegalStateException
      33: dup
      34: new           #11                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #13                 // String unexpected code=
      43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_1
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow

  public void setValue(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #7                  // Field offset:J
       8: iload_1
       9: ifeq          17
      12: bipush        -79
      14: goto          19
      17: bipush        -80
      19: invokeinterface #18,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      24: pop
      25: return
}
