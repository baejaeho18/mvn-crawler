Compiled from "AbstractSign.java"
public interface sop.operation.AbstractSign<T> {
  public abstract T noArmor();

  public abstract T key(java.io.InputStream) throws sop.exception.SOPGPException$KeyCannotSign, sop.exception.SOPGPException$BadData, sop.exception.SOPGPException$UnsupportedAsymmetricAlgo, java.io.IOException;

  public default T key(byte[]) throws sop.exception.SOPGPException$KeyCannotSign, sop.exception.SOPGPException$BadData, sop.exception.SOPGPException$UnsupportedAsymmetricAlgo, java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class java/io/ByteArrayInputStream
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
       9: invokeinterface #7,  2            // InterfaceMethod key:(Ljava/io/InputStream;)Ljava/lang/Object;
      14: areturn

  public default T withKeyPassword(java.lang.String) throws sop.exception.SOPGPException$UnsupportedOption, sop.exception.SOPGPException$PasswordNotHumanReadable;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #13                 // String UTF8
       4: invokestatic  #15                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokevirtual #21                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      10: invokeinterface #27,  2           // InterfaceMethod withKeyPassword:([B)Ljava/lang/Object;
      15: areturn

  public abstract T withKeyPassword(byte[]) throws sop.exception.SOPGPException$UnsupportedOption, sop.exception.SOPGPException$PasswordNotHumanReadable;
}
