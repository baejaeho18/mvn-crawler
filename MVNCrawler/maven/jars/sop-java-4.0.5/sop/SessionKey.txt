Compiled from "SessionKey.java"
public class sop.SessionKey {
  private static final java.util.regex.Pattern PATTERN;

  private final byte algorithm;

  private final byte[] sessionKey;

  public sop.SessionKey(byte, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #7                  // Field algorithm:B
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field sessionKey:[B
      14: return

  public byte getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #7                  // Field algorithm:B
       4: ireturn

  public byte[] getKey();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sessionKey:[B
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getAlgorithm:()B
       4: bipush        17
       6: imul
       7: aload_0
       8: invokevirtual #21                 // Method getKey:()[B
      11: invokestatic  #25                 // Method java/util/Arrays.hashCode:([B)I
      14: iadd
      15: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: instanceof    #8                  // class sop/SessionKey
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #8                  // class sop/SessionKey
      26: astore_2
      27: aload_0
      28: invokevirtual #17                 // Method getAlgorithm:()B
      31: aload_2
      32: invokevirtual #17                 // Method getAlgorithm:()B
      35: if_icmpne     56
      38: aload_0
      39: invokevirtual #21                 // Method getKey:()[B
      42: aload_2
      43: invokevirtual #21                 // Method getKey:()[B
      46: invokestatic  #31                 // Method java/util/Arrays.equals:([B[B)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public static sop.SessionKey fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: invokevirtual #41                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       7: ldc           #44                 // String \n
       9: ldc           #46                 // String
      11: invokevirtual #48                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      14: astore_0
      15: getstatic     #52                 // Field PATTERN:Ljava/util/regex/Pattern;
      18: aload_0
      19: invokevirtual #56                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      22: astore_1
      23: aload_1
      24: invokevirtual #62                 // Method java/util/regex/Matcher.matches:()Z
      27: ifne          40
      30: new           #68                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #70                 // String Provided session key does not match expected format.
      36: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_1
      41: iconst_1
      42: invokevirtual #75                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      45: invokestatic  #79                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B
      48: istore_2
      49: aload_1
      50: iconst_2
      51: invokevirtual #75                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      54: astore_3
      55: new           #8                  // class sop/SessionKey
      58: dup
      59: iload_2
      60: aload_3
      61: invokestatic  #85                 // Method sop/util/HexUtil.hexToBytes:(Ljava/lang/String;)[B
      64: invokespecial #91                 // Method "<init>":(B[B)V
      67: areturn

  public java.lang.String toString();
    Code:
       0: new           #94                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #17                 // Method getAlgorithm:()B
      11: invokestatic  #97                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      14: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: bipush        58
      19: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #13                 // Field sessionKey:[B
      26: invokestatic  #109                // Method sop/util/HexUtil.bytesToHex:([B)Ljava/lang/String;
      29: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  static {};
    Code:
       0: ldc           #115                // String ^(\\d):([0-9A-F]+)$
       2: invokestatic  #117                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #52                 // Field PATTERN:Ljava/util/regex/Pattern;
       8: return
}
