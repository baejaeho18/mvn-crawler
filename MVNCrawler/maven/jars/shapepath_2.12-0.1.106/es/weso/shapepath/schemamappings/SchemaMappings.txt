Compiled from "SchemaMappings.scala"
public class es.weso.shapepath.schemamappings.SchemaMappings implements scala.Product,scala.Serializable {
  private final es.weso.rdf.PrefixMap prefixMap;

  private final scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping> mappings;

  public static scala.Option<scala.Tuple2<es.weso.rdf.PrefixMap, scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping>>> unapply(es.weso.shapepath.schemamappings.SchemaMappings);
    Code:
       0: getstatic     #37                 // Field es/weso/shapepath/schemamappings/SchemaMappings$.MODULE$:Les/weso/shapepath/schemamappings/SchemaMappings$;
       3: aload_0
       4: invokevirtual #39                 // Method es/weso/shapepath/schemamappings/SchemaMappings$.unapply:(Les/weso/shapepath/schemamappings/SchemaMappings;)Lscala/Option;
       7: areturn

  public static es.weso.shapepath.schemamappings.SchemaMappings apply(es.weso.rdf.PrefixMap, scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping>);
    Code:
       0: getstatic     #37                 // Field es/weso/shapepath/schemamappings/SchemaMappings$.MODULE$:Les/weso/shapepath/schemamappings/SchemaMappings$;
       3: aload_0
       4: aload_1
       5: invokevirtual #44                 // Method es/weso/shapepath/schemamappings/SchemaMappings$.apply:(Les/weso/rdf/PrefixMap;Lscala/collection/immutable/List;)Les/weso/shapepath/schemamappings/SchemaMappings;
       8: areturn

  public static es.weso.shapepath.schemamappings.SchemaMappings empty();
    Code:
       0: getstatic     #37                 // Field es/weso/shapepath/schemamappings/SchemaMappings$.MODULE$:Les/weso/shapepath/schemamappings/SchemaMappings$;
       3: invokevirtual #48                 // Method es/weso/shapepath/schemamappings/SchemaMappings$.empty:()Les/weso/shapepath/schemamappings/SchemaMappings;
       6: areturn

  public static scala.Option<es.weso.rdf.nodes.IRI> fromString$default$2();
    Code:
       0: getstatic     #37                 // Field es/weso/shapepath/schemamappings/SchemaMappings$.MODULE$:Les/weso/shapepath/schemamappings/SchemaMappings$;
       3: invokevirtual #53                 // Method es/weso/shapepath/schemamappings/SchemaMappings$.fromString$default$2:()Lscala/Option;
       6: areturn

  public static scala.util.Either<es.weso.shapepath.schemamappings.ParseError, es.weso.shapepath.schemamappings.SchemaMappings> fromString(java.lang.String, scala.Option<es.weso.rdf.nodes.IRI>);
    Code:
       0: getstatic     #37                 // Field es/weso/shapepath/schemamappings/SchemaMappings$.MODULE$:Les/weso/shapepath/schemamappings/SchemaMappings$;
       3: aload_0
       4: aload_1
       5: invokevirtual #60                 // Method es/weso/shapepath/schemamappings/SchemaMappings$.fromString:(Ljava/lang/String;Lscala/Option;)Lscala/util/Either;
       8: areturn

  public es.weso.rdf.PrefixMap prefixMap();
    Code:
       0: aload_0
       1: getfield      #63                 // Field prefixMap:Les/weso/rdf/PrefixMap;
       4: areturn

  public scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping> mappings();
    Code:
       0: aload_0
       1: getfield      #69                 // Field mappings:Lscala/collection/immutable/List;
       4: areturn

  public cats.data.Ior<scala.collection.immutable.List<es.weso.shapepath.ProcessingError>, es.weso.shex.Schema> convert(es.weso.shex.Schema);
    Code:
       0: new           #14                 // class cats/data/Ior$Right
       3: dup
       4: aload_1
       5: invokespecial #77                 // Method cats/data/Ior$Right."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
      13: aload_2
      14: invokedynamic #99,  0             // InvokeDynamic #0:apply:()Lscala/Function2;
      19: invokevirtual #105                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      22: checkcast     #16                 // class cats/data/Ior
      25: aload_0
      26: aload_1
      27: invokedynamic #117,  0            // InvokeDynamic #1:apply:(Les/weso/shapepath/schemamappings/SchemaMappings;Les/weso/shex/Schema;)Lscala/Function1;
      32: invokevirtual #121                // Method cats/data/Ior.map:(Lscala/Function1;)Lcats/data/Ior;
      35: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
       4: aload_0
       5: invokedynamic #136,  0            // InvokeDynamic #2:apply:(Les/weso/shapepath/schemamappings/SchemaMappings;)Lscala/Function1;
      10: getstatic     #141                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      13: invokevirtual #145                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      16: invokevirtual #148                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      19: checkcast     #150                // class scala/collection/TraversableOnce
      22: ldc           #152                // String \n
      24: invokeinterface #156,  2          // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;)Ljava/lang/String;
      29: areturn

  public es.weso.shapepath.schemamappings.SchemaMappings copy(es.weso.rdf.PrefixMap, scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping>);
    Code:
       0: new           #2                  // class es/weso/shapepath/schemamappings/SchemaMappings
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #160                // Method "<init>":(Les/weso/rdf/PrefixMap;Lscala/collection/immutable/List;)V
       9: areturn

  public es.weso.rdf.PrefixMap copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
       4: areturn

  public scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #167                // String SchemaMappings
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 24
                     1: 31
               default: 38
          }
      24: aload_0
      25: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
      28: goto          50
      31: aload_0
      32: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
      35: goto          50
      38: new           #174                // class java/lang/IndexOutOfBoundsException
      41: dup
      42: iload_1
      43: invokestatic  #179                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      46: invokespecial #182                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #191                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #195                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class es/weso/shapepath/schemamappings/SchemaMappings
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #191                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #203                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     118
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class es/weso/shapepath/schemamappings/SchemaMappings
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          122
      31: aload_1
      32: checkcast     #2                  // class es/weso/shapepath/schemamappings/SchemaMappings
      35: astore        4
      37: aload_0
      38: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
      41: aload         4
      43: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          114
      61: aload         5
      63: invokevirtual #206                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          114
      69: aload_0
      70: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
      73: aload         4
      75: invokevirtual #79                 // Method mappings:()Lscala/collection/immutable/List;
      78: astore        6
      80: dup
      81: ifnonnull     93
      84: pop
      85: aload         6
      87: ifnull        101
      90: goto          114
      93: aload         6
      95: invokevirtual #206                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifeq          114
     101: aload         4
     103: aload_0
     104: invokevirtual #208                // Method canEqual:(Ljava/lang/Object;)Z
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ireturn

  public static final cats.data.Ior $anonfun$convert$2(es.weso.shapepath.schemamappings.SchemaMapping, es.weso.shex.Schema);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #218                // Method es/weso/shapepath/schemamappings/SchemaMapping.convert:(Les/weso/shex/Schema;)Lcats/data/Ior;
       5: areturn

  public static final cats.data.Ior $anonfun$convert$1(cats.data.Ior, es.weso.shapepath.schemamappings.SchemaMapping);
    Code:
       0: new           #223                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #226                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: aload_3
      11: ifnull        54
      14: aload_3
      15: invokevirtual #230                // Method scala/Tuple2._1:()Ljava/lang/Object;
      18: checkcast     #16                 // class cats/data/Ior
      21: astore        4
      23: aload_3
      24: invokevirtual #233                // Method scala/Tuple2._2:()Ljava/lang/Object;
      27: checkcast     #216                // class es/weso/shapepath/schemamappings/SchemaMapping
      30: astore        5
      32: aload         4
      34: aload         5
      36: invokedynamic #240,  0            // InvokeDynamic #3:apply:(Les/weso/shapepath/schemamappings/SchemaMapping;)Lscala/Function1;
      41: getstatic     #245                // Field cats/implicits$.MODULE$:Lcats/implicits$;
      44: invokevirtual #249                // Method cats/implicits$.catsKernelStdMonoidForList:()Lcats/kernel/Monoid;
      47: invokevirtual #253                // Method cats/data/Ior.flatMap:(Lscala/Function1;Lcats/kernel/Semigroup;)Lcats/data/Ior;
      50: astore_2
      51: goto          66
      54: goto          57
      57: new           #255                // class scala/MatchError
      60: dup
      61: aload_3
      62: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      65: athrow
      66: aload_2
      67: areturn

  public static final es.weso.rdf.PrefixMap $anonfun$convert$4(es.weso.shapepath.schemamappings.SchemaMappings, es.weso.rdf.PrefixMap);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
       5: invokevirtual #266                // Method es/weso/rdf/PrefixMap.merge:(Les/weso/rdf/PrefixMap;)Les/weso/rdf/PrefixMap;
       8: areturn

  public static final es.weso.shex.Schema $anonfun$convert$3(es.weso.shapepath.schemamappings.SchemaMappings, es.weso.shex.Schema, es.weso.shex.Schema);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #272                // Method es/weso/shex/Schema.prefixes:()Lscala/Option;
       5: aload_0
       6: invokedynamic #277,  0            // InvokeDynamic #4:apply:(Les/weso/shapepath/schemamappings/SchemaMappings;)Lscala/Function1;
      11: invokevirtual #282                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      14: invokevirtual #286                // Method es/weso/shex/Schema.withPrefixMap:(Lscala/Option;)Les/weso/shex/Schema;
      17: areturn

  public static final java.lang.String $anonfun$toString$1(es.weso.shapepath.schemamappings.SchemaMappings, es.weso.shapepath.schemamappings.SchemaMapping);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #163                // Method prefixMap:()Les/weso/rdf/PrefixMap;
       5: invokevirtual #291                // Method es/weso/shapepath/schemamappings/SchemaMapping.showQualify:(Les/weso/rdf/PrefixMap;)Ljava/lang/String;
       8: areturn

  public es.weso.shapepath.schemamappings.SchemaMappings(es.weso.rdf.PrefixMap, scala.collection.immutable.List<es.weso.shapepath.schemamappings.SchemaMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field prefixMap:Les/weso/rdf/PrefixMap;
       5: aload_0
       6: aload_2
       7: putfield      #69                 // Field mappings:Lscala/collection/immutable/List;
      10: aload_0
      11: invokespecial #295                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #299                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #311,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
