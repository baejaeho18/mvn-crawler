Compiled from "SchemaMappingsParser.scala"
public final class es.weso.shapepath.schemamappings.SchemaMappingsParser$ {
  public static es.weso.shapepath.schemamappings.SchemaMappingsParser$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class es/weso/shapepath/schemamappings/SchemaMappingsParser$
       3: invokespecial #53                 // Method "<init>":()V
       6: return

  public <A> cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, A> ok(A);
    Code:
       0: getstatic     #60                 // Field cats/data/EitherT$PurePartiallyApplied$.MODULE$:Lcats/data/EitherT$PurePartiallyApplied$;
       3: getstatic     #65                 // Field cats/data/EitherT$.MODULE$:Lcats/data/EitherT$;
       6: invokevirtual #69                 // Method cats/data/EitherT$.pure:()Z
       9: aload_1
      10: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      13: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      16: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      19: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      22: invokevirtual #91                 // Method cats/data/EitherT$PurePartiallyApplied$.apply$extension:(ZLjava/lang/Object;Lcats/Applicative;)Lcats/data/EitherT;
      25: areturn

  public <A> cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, A> err(java.lang.String);
    Code:
       0: getstatic     #100                // Field cats/data/package$StateT$.MODULE$:Lcats/data/package$StateT$;
       3: aload_1
       4: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
       7: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      10: invokevirtual #103                // Method cats/data/package$StateT$.pure:(Ljava/lang/Object;Lcats/Applicative;)Lcats/data/IndexedStateT;
      13: astore_2
      14: getstatic     #106                // Field cats/data/EitherT$LeftPartiallyApplied$.MODULE$:Lcats/data/EitherT$LeftPartiallyApplied$;
      17: getstatic     #65                 // Field cats/data/EitherT$.MODULE$:Lcats/data/EitherT$;
      20: invokevirtual #109                // Method cats/data/EitherT$.left:()Z
      23: aload_2
      24: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      27: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      30: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      33: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      36: invokevirtual #112                // Method cats/data/EitherT$LeftPartiallyApplied$.apply$extension:(ZLjava/lang/Object;Lcats/Functor;)Lcats/data/EitherT;
      39: astore_3
      40: aload_3
      41: areturn

  public <A> cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, A> fromEither(scala.util.Either<java.lang.String, A>);
    Code:
       0: aload_1
       1: invokedynamic #143,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       6: invokedynamic #149,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      11: invokevirtual #155                // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #14                 // class cats/data/EitherT
      17: areturn

  public <A> cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.collection.immutable.List<A>> sequence(scala.collection.immutable.List<cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, A>>);
    Code:
       0: getstatic     #165                // Field cats/implicits$.MODULE$:Lcats/implicits$;
       3: aload_1
       4: getstatic     #165                // Field cats/implicits$.MODULE$:Lcats/implicits$;
       7: invokevirtual #169                // Method cats/implicits$.catsStdInstancesForList:()Lcats/Traverse;
      10: invokevirtual #173                // Method cats/implicits$.toTraverseOps:(Ljava/lang/Object;Lcats/Traverse;)Lcats/Traverse$Ops;
      13: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: invokevirtual #182                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      19: getstatic     #65                 // Field cats/data/EitherT$.MODULE$:Lcats/data/EitherT$;
      22: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      25: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      28: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      31: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      34: invokevirtual #186                // Method cats/data/EitherT$.catsDataMonadErrorForEitherT:(Lcats/Monad;)Lcats/MonadError;
      37: invokeinterface #189,  3          // InterfaceMethod cats/Traverse$Ops.sequence:(Lscala/Predef$$less$colon$less;Lcats/Applicative;)Ljava/lang/Object;
      42: checkcast     #14                 // class cats/data/EitherT
      45: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, es.weso.rdf.PrefixMap> getPrefixMap();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: invokedynamic #203,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       9: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      21: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      24: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.collection.immutable.ListMap<es.weso.shex.ShapeLabel, es.weso.shex.ShapeExpr>> getShapesMap();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: invokedynamic #216,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       9: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      21: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      24: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.collection.immutable.Map<es.weso.shex.ShapeLabel, es.weso.shex.TripleExpr>> getTripleExprMap();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: invokedynamic #225,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       9: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      21: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      24: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState> getState();
    Code:
       0: getstatic     #65                 // Field cats/data/EitherT$.MODULE$:Lcats/data/EitherT$;
       3: getstatic     #100                // Field cats/data/package$StateT$.MODULE$:Lcats/data/package$StateT$;
       6: invokedynamic #233,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      11: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      14: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      17: invokevirtual #237                // Method cats/data/package$StateT$.inspect:(Lscala/Function1;Lcats/Applicative;)Lcats/data/IndexedStateT;
      20: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      23: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      26: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      29: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      32: invokevirtual #241                // Method cats/data/EitherT$.liftF:(Ljava/lang/Object;Lcats/Functor;)Lcats/data/EitherT;
      35: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.Option<es.weso.rdf.nodes.IRI>> getBase();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: invokedynamic #250,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       9: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      21: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      24: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.Option<es.weso.shex.ShapeExpr>> getStart();
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: invokedynamic #257,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
       9: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      21: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      24: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.runtime.BoxedUnit> addBase(es.weso.rdf.nodes.IRI);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #269,  0            // InvokeDynamic #8:apply:(Les/weso/rdf/nodes/IRI;)Lscala/Function1;
       7: invokevirtual #273                // Method updateState:(Lscala/Function1;)Lcats/data/EitherT;
      10: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.runtime.BoxedUnit> updateState(scala.Function1<es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState>);
    Code:
       0: getstatic     #65                 // Field cats/data/EitherT$.MODULE$:Lcats/data/EitherT$;
       3: getstatic     #100                // Field cats/data/package$StateT$.MODULE$:Lcats/data/package$StateT$;
       6: aload_1
       7: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      10: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      13: invokevirtual #279                // Method cats/data/package$StateT$.modify:(Lscala/Function1;Lcats/Applicative;)Lcats/data/IndexedStateT;
      16: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      19: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      22: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      25: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      28: invokevirtual #241                // Method cats/data/EitherT$.liftF:(Ljava/lang/Object;Lcats/Functor;)Lcats/data/EitherT;
      31: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.runtime.BoxedUnit> updateStart(scala.Option<es.weso.shex.ShapeExpr>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #292,  0            // InvokeDynamic #9:apply:(Lscala/Option;)Lscala/Function1;
       7: invokevirtual #273                // Method updateState:(Lscala/Function1;)Lcats/data/EitherT;
      10: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.runtime.BoxedUnit> addShape(es.weso.shex.ShapeLabel, es.weso.shex.ShapeExpr);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #306,  0            // InvokeDynamic #10:apply:(Les/weso/shex/ShapeLabel;Les/weso/shex/ShapeExpr;)Lscala/Function1;
       8: invokevirtual #273                // Method updateState:(Lscala/Function1;)Lcats/data/EitherT;
      11: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, scala.runtime.BoxedUnit> addPrefix(es.weso.rdf.Prefix, es.weso.rdf.nodes.IRI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #321,  0            // InvokeDynamic #11:apply:(Les/weso/rdf/Prefix;Les/weso/rdf/nodes/IRI;)Lscala/Function1;
       8: invokevirtual #273                // Method updateState:(Lscala/Function1;)Lcats/data/EitherT;
      11: areturn

  public cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, es.weso.shex.TripleExpr> addTripleExprLabel(es.weso.shex.ShapeLabel, es.weso.shex.TripleExpr);
    Code:
       0: aload_0
       1: invokevirtual #196                // Method getState:()Lcats/data/EitherT;
       4: aload_1
       5: aload_2
       6: invokedynamic #336,  0            // InvokeDynamic #12:apply:(Les/weso/shex/ShapeLabel;Les/weso/shex/TripleExpr;)Lscala/Function1;
      11: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      14: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      17: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      20: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      23: invokevirtual #340                // Method cats/data/EitherT.flatMap:(Lscala/Function1;Lcats/Monad;)Lcats/data/EitherT;
      26: areturn

  public scala.util.Either<java.lang.String, es.weso.shapepath.schemamappings.SchemaMappings> parseSchemaMappings(java.lang.String, scala.Option<es.weso.rdf.nodes.IRI>);
    Code:
       0: ldc_w         #347                // String ﻿
       3: astore_3
       4: aload_1
       5: aload_3
       6: invokevirtual #353                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ifeq          20
      12: aload_1
      13: iconst_1
      14: invokevirtual #357                // Method java/lang/String.substring:(I)Ljava/lang/String;
      17: goto          21
      20: aload_1
      21: astore        4
      23: new           #359                // class java/io/InputStreamReader
      26: dup
      27: new           #361                // class java/io/ByteArrayInputStream
      30: dup
      31: aload         4
      33: getstatic     #367                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      36: invokevirtual #371                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      39: invokespecial #374                // Method java/io/ByteArrayInputStream."<init>":([B)V
      42: invokespecial #377                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      45: astore        5
      47: aload_0
      48: aload         5
      50: aload_2
      51: invokevirtual #381                // Method parseReader:(Ljava/io/Reader;Lscala/Option;)Lscala/util/Either;
      54: areturn

  public scala.util.Either<java.lang.String, es.weso.shapepath.schemamappings.SchemaMappings> parseReader(java.io.Reader, scala.Option<es.weso.rdf.nodes.IRI>);
    Code:
       0: aload_1
       1: invokestatic  #391                // Method org/antlr/v4/runtime/CharStreams.fromReader:(Ljava/io/Reader;)Lorg/antlr/v4/runtime/CodePointCharStream;
       4: astore_3
       5: new           #393                // class es/weso/shapepath/parser/SchemaMappingsDocLexer
       8: dup
       9: aload_3
      10: invokespecial #396                // Method es/weso/shapepath/parser/SchemaMappingsDocLexer."<init>":(Lorg/antlr/v4/runtime/CharStream;)V
      13: astore        4
      15: new           #398                // class org/antlr/v4/runtime/CommonTokenStream
      18: dup
      19: aload         4
      21: invokespecial #401                // Method org/antlr/v4/runtime/CommonTokenStream."<init>":(Lorg/antlr/v4/runtime/TokenSource;)V
      24: astore        5
      26: new           #27                 // class es/weso/shapepath/parser/SchemaMappingsDocParser
      29: dup
      30: aload         5
      32: invokespecial #404                // Method es/weso/shapepath/parser/SchemaMappingsDocParser."<init>":(Lorg/antlr/v4/runtime/TokenStream;)V
      35: astore        6
      37: new           #406                // class es/weso/shapepath/schemamappings/ParserErrorListener
      40: dup
      41: invokespecial #407                // Method es/weso/shapepath/schemamappings/ParserErrorListener."<init>":()V
      44: astore        7
      46: aload         4
      48: aload         7
      50: invokevirtual #411                // Method es/weso/shapepath/parser/SchemaMappingsDocLexer.addErrorListener:(Lorg/antlr/v4/runtime/ANTLRErrorListener;)V
      53: aload         6
      55: aload         7
      57: invokevirtual #412                // Method es/weso/shapepath/parser/SchemaMappingsDocParser.addErrorListener:(Lorg/antlr/v4/runtime/ANTLRErrorListener;)V
      60: new           #414                // class es/weso/shapepath/schemamappings/SchemaMappingsMaker
      63: dup
      64: invokespecial #415                // Method es/weso/shapepath/schemamappings/SchemaMappingsMaker."<init>":()V
      67: astore        8
      69: aload         8
      71: aload         6
      73: invokevirtual #419                // Method es/weso/shapepath/parser/SchemaMappingsDocParser.schemaMappingsDoc:()Les/weso/shapepath/parser/SchemaMappingsDocParser$SchemaMappingsDocContext;
      76: invokevirtual #423                // Method es/weso/shapepath/schemamappings/SchemaMappingsMaker.visit:(Lorg/antlr/v4/runtime/tree/ParseTree;)Ljava/lang/Object;
      79: checkcast     #14                 // class cats/data/EitherT
      82: astore        9
      84: aload         7
      86: invokevirtual #427                // Method es/weso/shapepath/schemamappings/ParserErrorListener.getErrors:()Lscala/collection/immutable/List;
      89: astore        10
      91: aload         10
      93: invokevirtual #433                // Method scala/collection/immutable/List.length:()I
      96: iconst_0
      97: if_icmple     120
     100: getstatic     #438                // Field scala/package$.MODULE$:Lscala/package$;
     103: invokevirtual #442                // Method scala/package$.Left:()Lscala/util/Left$;
     106: aload         10
     108: ldc_w         #444                // String \n
     111: invokevirtual #448                // Method scala/collection/immutable/List.mkString:(Ljava/lang/String;)Ljava/lang/String;
     114: invokevirtual #453                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
     117: goto          133
     120: aload_0
     121: aload         9
     123: aload_2
     124: invokevirtual #457                // Method run:(Lcats/data/EitherT;Lscala/Option;)Lscala/Tuple2;
     127: invokevirtual #463                // Method scala/Tuple2._2:()Ljava/lang/Object;
     130: checkcast     #151                // class scala/util/Either
     133: areturn

  public <A> scala.Tuple2<es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState, scala.util.Either<java.lang.String, A>> run(cats.data.EitherT<cats.data.IndexedStateT, java.lang.String, A>, scala.Option<es.weso.rdf.nodes.IRI>);
    Code:
       0: aload_1
       1: invokevirtual #488                // Method cats/data/EitherT.value:()Ljava/lang/Object;
       4: checkcast     #490                // class cats/data/IndexedStateT
       7: aload_0
       8: aload_2
       9: invokevirtual #494                // Method initialState:(Lscala/Option;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      12: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      15: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      18: invokevirtual #497                // Method cats/data/IndexedStateT.run:(Ljava/lang/Object;Lcats/FlatMap;)Ljava/lang/Object;
      21: checkcast     #499                // class cats/Eval
      24: invokevirtual #500                // Method cats/Eval.value:()Ljava/lang/Object;
      27: checkcast     #459                // class scala/Tuple2
      30: areturn

  public es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState initialState(scala.Option<es.weso.rdf.nodes.IRI>);
    Code:
       0: new           #30                 // class es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState
       3: dup
       4: getstatic     #506                // Field es/weso/rdf/PrefixMap$.MODULE$:Les/weso/rdf/PrefixMap$;
       7: invokevirtual #510                // Method es/weso/rdf/PrefixMap$.empty:()Les/weso/rdf/PrefixMap;
      10: aload_1
      11: getstatic     #515                // Field scala/None$.MODULE$:Lscala/None$;
      14: getstatic     #520                // Field scala/collection/immutable/ListMap$.MODULE$:Lscala/collection/immutable/ListMap$;
      17: getstatic     #525                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      20: invokevirtual #528                // Method scala/collection/immutable/ListMap$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      23: checkcast     #530                // class scala/collection/immutable/ListMap
      26: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: invokevirtual #534                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      32: getstatic     #525                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      35: invokevirtual #537                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      38: checkcast     #539                // class scala/collection/immutable/Map
      41: invokespecial #542                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState."<init>":(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)V
      44: areturn

  public static final cats.data.EitherT $anonfun$fromEither$1(java.lang.String);
    Code:
       0: getstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
       3: aload_0
       4: invokevirtual #546                // Method err:(Ljava/lang/String;)Lcats/data/EitherT;
       7: areturn

  public static final cats.data.EitherT $anonfun$fromEither$2(java.lang.Object);
    Code:
       0: getstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
       3: aload_0
       4: invokevirtual #549                // Method ok:(Ljava/lang/Object;)Lcats/data/EitherT;
       7: areturn

  public static final es.weso.rdf.PrefixMap $anonfun$getPrefixMap$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: invokevirtual #553                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.prefixMap:()Les/weso/rdf/PrefixMap;
       4: areturn

  public static final scala.collection.immutable.ListMap $anonfun$getShapesMap$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: invokevirtual #559                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.shapesMap:()Lscala/collection/immutable/ListMap;
       4: areturn

  public static final scala.collection.immutable.Map $anonfun$getTripleExprMap$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: invokevirtual #564                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.tripleExprMap:()Lscala/collection/immutable/Map;
       4: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$getState$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #567                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #30                 // class es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState
      10: areturn

  public static final scala.Option $anonfun$getBase$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: invokevirtual #571                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.base:()Lscala/Option;
       4: areturn

  public static final scala.Option $anonfun$getStart$1(es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: invokevirtual #575                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.start:()Lscala/Option;
       4: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$addBase$1(es.weso.rdf.nodes.IRI, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: new           #579                // class scala/Some
       3: dup
       4: aload_0
       5: invokespecial #582                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_1
      10: invokevirtual #585                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$1:()Les/weso/rdf/PrefixMap;
      13: astore_3
      14: aload_1
      15: invokevirtual #588                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$3:()Lscala/Option;
      18: astore        4
      20: aload_1
      21: invokevirtual #591                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$4:()Lscala/collection/immutable/ListMap;
      24: astore        5
      26: aload_1
      27: invokevirtual #594                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$5:()Lscala/collection/immutable/Map;
      30: astore        6
      32: aload_1
      33: aload_3
      34: aload_2
      35: aload         4
      37: aload         5
      39: aload         6
      41: invokevirtual #598                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy:(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      44: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$updateStart$1(scala.Option, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokevirtual #585                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$1:()Les/weso/rdf/PrefixMap;
       6: astore_3
       7: aload_1
       8: invokevirtual #607                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_1
      14: invokevirtual #591                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$4:()Lscala/collection/immutable/ListMap;
      17: astore        5
      19: aload_1
      20: invokevirtual #594                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$5:()Lscala/collection/immutable/Map;
      23: astore        6
      25: aload_1
      26: aload_3
      27: aload         4
      29: aload_2
      30: aload         5
      32: aload         6
      34: invokevirtual #598                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy:(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      37: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$addShape$1(es.weso.shex.ShapeLabel, es.weso.shex.ShapeExpr, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_2
       1: invokevirtual #559                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.shapesMap:()Lscala/collection/immutable/ListMap;
       4: getstatic     #612                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       7: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: aload_0
      11: invokevirtual #615                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_1
      15: invokevirtual #619                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      18: invokevirtual #623                // Method scala/collection/immutable/ListMap.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/ListMap;
      21: astore_3
      22: aload_2
      23: invokevirtual #585                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$1:()Les/weso/rdf/PrefixMap;
      26: astore        4
      28: aload_2
      29: invokevirtual #607                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$2:()Lscala/Option;
      32: astore        5
      34: aload_2
      35: invokevirtual #588                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$3:()Lscala/Option;
      38: astore        6
      40: aload_2
      41: invokevirtual #594                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$5:()Lscala/collection/immutable/Map;
      44: astore        7
      46: aload_2
      47: aload         4
      49: aload         5
      51: aload         6
      53: aload_3
      54: aload         7
      56: invokevirtual #598                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy:(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      59: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$addPrefix$1(es.weso.rdf.Prefix, es.weso.rdf.nodes.IRI, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_2
       1: aload_2
       2: invokevirtual #553                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.prefixMap:()Les/weso/rdf/PrefixMap;
       5: aload_0
       6: aload_1
       7: invokevirtual #630                // Method es/weso/rdf/PrefixMap.addPrefix:(Les/weso/rdf/Prefix;Les/weso/rdf/nodes/IRI;)Les/weso/rdf/PrefixMap;
      10: aload_2
      11: invokevirtual #607                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$2:()Lscala/Option;
      14: aload_2
      15: invokevirtual #588                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$3:()Lscala/Option;
      18: aload_2
      19: invokevirtual #591                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$4:()Lscala/collection/immutable/ListMap;
      22: aload_2
      23: invokevirtual #594                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$5:()Lscala/collection/immutable/Map;
      26: invokevirtual #598                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy:(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      29: astore_3
      30: aload_3
      31: areturn

  public static final es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState $anonfun$addTripleExprLabel$3(es.weso.shex.ShapeLabel, es.weso.shex.TripleExpr, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_2
       1: invokevirtual #564                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.tripleExprMap:()Lscala/collection/immutable/Map;
       4: getstatic     #612                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       7: getstatic     #178                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: aload_0
      11: invokevirtual #615                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_1
      15: invokevirtual #619                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      18: invokeinterface #638,  2          // InterfaceMethod scala/collection/immutable/Map.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/Map;
      23: astore_3
      24: aload_2
      25: invokevirtual #585                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$1:()Les/weso/rdf/PrefixMap;
      28: astore        4
      30: aload_2
      31: invokevirtual #607                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$2:()Lscala/Option;
      34: astore        5
      36: aload_2
      37: invokevirtual #588                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$3:()Lscala/Option;
      40: astore        6
      42: aload_2
      43: invokevirtual #591                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy$default$4:()Lscala/collection/immutable/ListMap;
      46: astore        7
      48: aload_2
      49: aload         4
      51: aload         5
      53: aload         6
      55: aload         7
      57: aload_3
      58: invokevirtual #598                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.copy:(Les/weso/rdf/PrefixMap;Lscala/Option;Lscala/Option;Lscala/collection/immutable/ListMap;Lscala/collection/immutable/Map;)Les/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState;
      61: areturn

  public static final es.weso.shex.TripleExpr $anonfun$addTripleExprLabel$4(es.weso.shex.TripleExpr, es.weso.shex.ShapeLabel, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #647,  2          // InterfaceMethod es/weso/shex/TripleExpr.addId:(Les/weso/shex/ShapeLabel;)Les/weso/shex/TripleExpr;
       7: areturn

  public static final cats.data.EitherT $anonfun$addTripleExprLabel$2(es.weso.shex.ShapeLabel, es.weso.shex.TripleExpr, scala.runtime.BoxedUnit);
    Code:
       0: getstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
       3: aload_0
       4: aload_1
       5: invokedynamic #654,  0            // InvokeDynamic #13:apply:(Les/weso/shex/ShapeLabel;Les/weso/shex/TripleExpr;)Lscala/Function1;
      10: invokevirtual #273                // Method updateState:(Lscala/Function1;)Lcats/data/EitherT;
      13: aload_1
      14: aload_0
      15: invokedynamic #662,  0            // InvokeDynamic #14:apply:(Les/weso/shex/TripleExpr;Les/weso/shex/ShapeLabel;)Lscala/Function1;
      20: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
      23: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
      26: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
      29: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
      32: invokevirtual #207                // Method cats/data/EitherT.map:(Lscala/Function1;Lcats/Functor;)Lcats/data/EitherT;
      35: areturn

  public static final cats.data.EitherT $anonfun$addTripleExprLabel$1(es.weso.shex.ShapeLabel, es.weso.shex.TripleExpr, es.weso.shapepath.schemamappings.SchemaMappingsParser$BuilderState);
    Code:
       0: aload_2
       1: invokevirtual #564                // Method es/weso/shapepath/schemamappings/SchemaMappingsParser$BuilderState.tripleExprMap:()Lscala/collection/immutable/Map;
       4: aload_0
       5: invokeinterface #666,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      10: astore        4
      12: getstatic     #515                // Field scala/None$.MODULE$:Lscala/None$;
      15: aload         4
      17: invokevirtual #670                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifeq          36
      23: getstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
      26: getstatic     #675                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      29: invokevirtual #549                // Method ok:(Ljava/lang/Object;)Lcats/data/EitherT;
      32: astore_3
      33: goto          131
      36: goto          39
      39: aload         4
      41: instanceof    #579                // class scala/Some
      44: ifeq          118
      47: aload         4
      49: checkcast     #579                // class scala/Some
      52: astore        5
      54: aload         5
      56: invokevirtual #676                // Method scala/Some.value:()Ljava/lang/Object;
      59: checkcast     #643                // class es/weso/shex/TripleExpr
      62: astore        6
      64: getstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
      67: new           #678                // class java/lang/StringBuilder
      70: dup
      71: ldc_w         #679                // int 54
      74: invokespecial #682                // Method java/lang/StringBuilder."<init>":(I)V
      77: ldc_w         #684                // String Label
      80: invokevirtual #688                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: invokevirtual #691                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc_w         #693                // String  has been assigned to
      90: invokevirtual #688                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload         6
      95: invokevirtual #691                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc_w         #695                // String  and can\'t be assigned to
     101: invokevirtual #688                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_1
     105: invokevirtual #691                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: invokevirtual #699                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokevirtual #546                // Method err:(Ljava/lang/String;)Lcats/data/EitherT;
     114: astore_3
     115: goto          131
     118: goto          121
     121: new           #701                // class scala/MatchError
     124: dup
     125: aload         4
     127: invokespecial #702                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     130: athrow
     131: aload_3
     132: aload_0
     133: aload_1
     134: invokedynamic #708,  0            // InvokeDynamic #15:apply:(Les/weso/shex/ShapeLabel;Les/weso/shex/TripleExpr;)Lscala/Function1;
     139: getstatic     #74                 // Field cats/data/IndexedStateT$.MODULE$:Lcats/data/IndexedStateT$;
     142: getstatic     #79                 // Field cats/Eval$.MODULE$:Lcats/Eval$;
     145: invokevirtual #83                 // Method cats/Eval$.catsBimonadForEval:()Lcats/Bimonad;
     148: invokevirtual #87                 // Method cats/data/IndexedStateT$.catsDataMonadForIndexedStateT:(Lcats/Monad;)Lcats/Monad;
     151: invokevirtual #340                // Method cats/data/EitherT.flatMap:(Lscala/Function1;Lcats/Monad;)Lcats/data/EitherT;
     154: areturn

  private es.weso.shapepath.schemamappings.SchemaMappingsParser$();
    Code:
       0: aload_0
       1: invokespecial #712                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #544                // Field MODULE$:Les/weso/shapepath/schemamappings/SchemaMappingsParser$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #724,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
