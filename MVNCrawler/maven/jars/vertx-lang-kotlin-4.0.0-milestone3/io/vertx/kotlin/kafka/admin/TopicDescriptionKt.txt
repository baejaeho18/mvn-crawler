Compiled from "TopicDescription.kt"
public final class io.vertx.kotlin.kafka.admin.TopicDescriptionKt {
  public static final io.vertx.kafka.admin.TopicDescription topicDescriptionOf(java.lang.Boolean, java.lang.String, java.lang.Iterable<? extends io.vertx.kafka.client.common.TopicPartitionInfo>);
    Code:
       0: new           #11                 // class io/vertx/kafka/admin/TopicDescription
       3: dup
       4: invokespecial #15                 // Method io/vertx/kafka/admin/TopicDescription."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_3
      15: astore        6
      17: iconst_0
      18: istore        7
      20: aload_0
      21: ifnull        34
      24: aload         6
      26: aload_0
      27: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      30: invokevirtual #25                 // Method io/vertx/kafka/admin/TopicDescription.setInternal:(Z)Lio/vertx/kafka/admin/TopicDescription;
      33: pop
      34: aload_1
      35: ifnull        45
      38: aload         6
      40: aload_1
      41: invokevirtual #29                 // Method io/vertx/kafka/admin/TopicDescription.setName:(Ljava/lang/String;)Lio/vertx/kafka/admin/TopicDescription;
      44: pop
      45: aload_2
      46: ifnull        59
      49: aload         6
      51: aload_2
      52: invokestatic  #35                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      55: invokevirtual #39                 // Method io/vertx/kafka/admin/TopicDescription.setPartitions:(Ljava/util/List;)Lio/vertx/kafka/admin/TopicDescription;
      58: pop
      59: nop
      60: aload_3
      61: areturn

  public static io.vertx.kafka.admin.TopicDescription topicDescriptionOf$default(java.lang.Boolean, java.lang.String, java.lang.Iterable, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aconst_null
       7: checkcast     #17                 // class java/lang/Boolean
      10: astore_0
      11: iload_3
      12: iconst_2
      13: iand
      14: ifeq          22
      17: aconst_null
      18: checkcast     #51                 // class java/lang/String
      21: astore_1
      22: iload_3
      23: iconst_4
      24: iand
      25: ifeq          33
      28: aconst_null
      29: checkcast     #53                 // class java/lang/Iterable
      32: astore_2
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokestatic  #57                 // Method topicDescriptionOf:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Iterable;)Lio/vertx/kafka/admin/TopicDescription;
      39: areturn

  public static final io.vertx.kafka.admin.TopicDescription TopicDescription(java.lang.Boolean, java.lang.String, java.lang.Iterable<? extends io.vertx.kafka.client.common.TopicPartitionInfo>);
    Code:
       0: new           #11                 // class io/vertx/kafka/admin/TopicDescription
       3: dup
       4: invokespecial #15                 // Method io/vertx/kafka/admin/TopicDescription."<init>":()V
       7: astore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_3
      15: astore        6
      17: iconst_0
      18: istore        7
      20: aload_0
      21: ifnull        34
      24: aload         6
      26: aload_0
      27: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      30: invokevirtual #25                 // Method io/vertx/kafka/admin/TopicDescription.setInternal:(Z)Lio/vertx/kafka/admin/TopicDescription;
      33: pop
      34: aload_1
      35: ifnull        45
      38: aload         6
      40: aload_1
      41: invokevirtual #29                 // Method io/vertx/kafka/admin/TopicDescription.setName:(Ljava/lang/String;)Lio/vertx/kafka/admin/TopicDescription;
      44: pop
      45: aload_2
      46: ifnull        59
      49: aload         6
      51: aload_2
      52: invokestatic  #35                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      55: invokevirtual #39                 // Method io/vertx/kafka/admin/TopicDescription.setPartitions:(Ljava/util/List;)Lio/vertx/kafka/admin/TopicDescription;
      58: pop
      59: nop
      60: aload_3
      61: areturn

  public static io.vertx.kafka.admin.TopicDescription TopicDescription$default(java.lang.Boolean, java.lang.String, java.lang.Iterable, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aconst_null
       7: checkcast     #17                 // class java/lang/Boolean
      10: astore_0
      11: iload_3
      12: iconst_2
      13: iand
      14: ifeq          22
      17: aconst_null
      18: checkcast     #51                 // class java/lang/String
      21: astore_1
      22: iload_3
      23: iconst_4
      24: iand
      25: ifeq          33
      28: aconst_null
      29: checkcast     #53                 // class java/lang/Iterable
      32: astore_2
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokestatic  #70                 // Method TopicDescription:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Iterable;)Lio/vertx/kafka/admin/TopicDescription;
      39: areturn
}
