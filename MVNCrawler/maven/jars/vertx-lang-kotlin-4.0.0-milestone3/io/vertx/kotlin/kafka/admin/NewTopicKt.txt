Compiled from "NewTopic.kt"
public final class io.vertx.kotlin.kafka.admin.NewTopicKt {
  public static final io.vertx.kafka.admin.NewTopic newTopicOf(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.Integer, java.lang.Short);
    Code:
       0: new           #11                 // class io/vertx/kafka/admin/NewTopic
       3: dup
       4: invokespecial #15                 // Method io/vertx/kafka/admin/NewTopic."<init>":()V
       7: astore        4
       9: iconst_0
      10: istore        5
      12: iconst_0
      13: istore        6
      15: aload         4
      17: astore        7
      19: iconst_0
      20: istore        8
      22: aload_0
      23: ifnull        33
      26: aload         7
      28: aload_0
      29: invokevirtual #19                 // Method io/vertx/kafka/admin/NewTopic.setConfig:(Ljava/util/Map;)Lio/vertx/kafka/admin/NewTopic;
      32: pop
      33: aload_1
      34: ifnull        44
      37: aload         7
      39: aload_1
      40: invokevirtual #23                 // Method io/vertx/kafka/admin/NewTopic.setName:(Ljava/lang/String;)Lio/vertx/kafka/admin/NewTopic;
      43: pop
      44: aload_2
      45: ifnull        58
      48: aload         7
      50: aload_2
      51: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      54: invokevirtual #33                 // Method io/vertx/kafka/admin/NewTopic.setNumPartitions:(I)Lio/vertx/kafka/admin/NewTopic;
      57: pop
      58: aload_3
      59: ifnull        72
      62: aload         7
      64: aload_3
      65: invokevirtual #39                 // Method java/lang/Short.shortValue:()S
      68: invokevirtual #43                 // Method io/vertx/kafka/admin/NewTopic.setReplicationFactor:(S)Lio/vertx/kafka/admin/NewTopic;
      71: pop
      72: nop
      73: aload         4
      75: areturn

  public static io.vertx.kafka.admin.NewTopic newTopicOf$default(java.util.Map, java.lang.String, java.lang.Integer, java.lang.Short, int, java.lang.Object);
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #57                 // class java/util/Map
      11: astore_0
      12: iload         4
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #59                 // class java/lang/String
      23: astore_1
      24: iload         4
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #25                 // class java/lang/Integer
      35: astore_2
      36: iload         4
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #35                 // class java/lang/Short
      48: astore_3
      49: aload_0
      50: aload_1
      51: aload_2
      52: aload_3
      53: invokestatic  #63                 // Method newTopicOf:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Short;)Lio/vertx/kafka/admin/NewTopic;
      56: areturn

  public static final io.vertx.kafka.admin.NewTopic NewTopic(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.Integer, java.lang.Short);
    Code:
       0: new           #11                 // class io/vertx/kafka/admin/NewTopic
       3: dup
       4: invokespecial #15                 // Method io/vertx/kafka/admin/NewTopic."<init>":()V
       7: astore        4
       9: iconst_0
      10: istore        5
      12: iconst_0
      13: istore        6
      15: aload         4
      17: astore        7
      19: iconst_0
      20: istore        8
      22: aload_0
      23: ifnull        33
      26: aload         7
      28: aload_0
      29: invokevirtual #19                 // Method io/vertx/kafka/admin/NewTopic.setConfig:(Ljava/util/Map;)Lio/vertx/kafka/admin/NewTopic;
      32: pop
      33: aload_1
      34: ifnull        44
      37: aload         7
      39: aload_1
      40: invokevirtual #23                 // Method io/vertx/kafka/admin/NewTopic.setName:(Ljava/lang/String;)Lio/vertx/kafka/admin/NewTopic;
      43: pop
      44: aload_2
      45: ifnull        58
      48: aload         7
      50: aload_2
      51: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      54: invokevirtual #33                 // Method io/vertx/kafka/admin/NewTopic.setNumPartitions:(I)Lio/vertx/kafka/admin/NewTopic;
      57: pop
      58: aload_3
      59: ifnull        72
      62: aload         7
      64: aload_3
      65: invokevirtual #39                 // Method java/lang/Short.shortValue:()S
      68: invokevirtual #43                 // Method io/vertx/kafka/admin/NewTopic.setReplicationFactor:(S)Lio/vertx/kafka/admin/NewTopic;
      71: pop
      72: nop
      73: aload         4
      75: areturn

  public static io.vertx.kafka.admin.NewTopic NewTopic$default(java.util.Map, java.lang.String, java.lang.Integer, java.lang.Short, int, java.lang.Object);
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #57                 // class java/util/Map
      11: astore_0
      12: iload         4
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #59                 // class java/lang/String
      23: astore_1
      24: iload         4
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #25                 // class java/lang/Integer
      35: astore_2
      36: iload         4
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #35                 // class java/lang/Short
      48: astore_3
      49: aload_0
      50: aload_1
      51: aload_2
      52: aload_3
      53: invokestatic  #76                 // Method NewTopic:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Short;)Lio/vertx/kafka/admin/NewTopic;
      56: areturn
}
