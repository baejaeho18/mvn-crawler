Compiled from "RabbitMQOptions.kt"
public final class io.vertx.kotlin.rabbitmq.RabbitMQOptionsKt {
  public static final io.vertx.rabbitmq.RabbitMQOptions rabbitMQOptionsOf(java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #10                 // class io/vertx/rabbitmq/RabbitMQOptions
       3: dup
       4: invokespecial #14                 // Method io/vertx/rabbitmq/RabbitMQOptions."<init>":()V
       7: astore        15
       9: iconst_0
      10: istore        16
      12: iconst_0
      13: istore        17
      15: aload         15
      17: astore        18
      19: iconst_0
      20: istore        19
      22: aload_0
      23: ifnull        36
      26: aload         18
      28: aload_0
      29: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      32: invokevirtual #24                 // Method io/vertx/rabbitmq/RabbitMQOptions.setAutomaticRecoveryEnabled:(Z)Lio/vertx/rabbitmq/RabbitMQOptions;
      35: pop
      36: aload_1
      37: ifnull        47
      40: aload         18
      42: aload_1
      43: invokevirtual #28                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionRetries:(Ljava/lang/Integer;)Lio/vertx/rabbitmq/RabbitMQOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         18
      53: aload_2
      54: invokevirtual #34                 // Method java/lang/Long.longValue:()J
      57: invokevirtual #38                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionRetryDelay:(J)Lio/vertx/rabbitmq/RabbitMQOptions;
      60: pop
      61: aload_3
      62: ifnull        75
      65: aload         18
      67: aload_3
      68: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      71: invokevirtual #48                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionTimeout:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
      74: pop
      75: aload         4
      77: ifnull        91
      80: aload         18
      82: aload         4
      84: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      87: invokevirtual #51                 // Method io/vertx/rabbitmq/RabbitMQOptions.setHandshakeTimeout:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
      90: pop
      91: aload         5
      93: ifnull        104
      96: aload         18
      98: aload         5
     100: invokevirtual #55                 // Method io/vertx/rabbitmq/RabbitMQOptions.setHost:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     103: pop
     104: aload         6
     106: ifnull        120
     109: aload         18
     111: aload         6
     113: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
     116: invokevirtual #58                 // Method io/vertx/rabbitmq/RabbitMQOptions.setIncludeProperties:(Z)Lio/vertx/rabbitmq/RabbitMQOptions;
     119: pop
     120: aload         7
     122: ifnull        136
     125: aload         18
     127: aload         7
     129: invokevirtual #34                 // Method java/lang/Long.longValue:()J
     132: invokevirtual #61                 // Method io/vertx/rabbitmq/RabbitMQOptions.setNetworkRecoveryInterval:(J)Lio/vertx/rabbitmq/RabbitMQOptions;
     135: pop
     136: aload         8
     138: ifnull        149
     141: aload         18
     143: aload         8
     145: invokevirtual #64                 // Method io/vertx/rabbitmq/RabbitMQOptions.setPassword:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     148: pop
     149: aload         9
     151: ifnull        165
     154: aload         18
     156: aload         9
     158: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     161: invokevirtual #67                 // Method io/vertx/rabbitmq/RabbitMQOptions.setPort:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     164: pop
     165: aload         10
     167: ifnull        181
     170: aload         18
     172: aload         10
     174: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     177: invokevirtual #70                 // Method io/vertx/rabbitmq/RabbitMQOptions.setRequestedChannelMax:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     180: pop
     181: aload         11
     183: ifnull        197
     186: aload         18
     188: aload         11
     190: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     193: invokevirtual #73                 // Method io/vertx/rabbitmq/RabbitMQOptions.setRequestedHeartbeat:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     196: pop
     197: aload         12
     199: ifnull        210
     202: aload         18
     204: aload         12
     206: invokevirtual #76                 // Method io/vertx/rabbitmq/RabbitMQOptions.setUri:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     209: pop
     210: aload         13
     212: ifnull        223
     215: aload         18
     217: aload         13
     219: invokevirtual #79                 // Method io/vertx/rabbitmq/RabbitMQOptions.setUser:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     222: pop
     223: aload         14
     225: ifnull        236
     228: aload         18
     230: aload         14
     232: invokevirtual #82                 // Method io/vertx/rabbitmq/RabbitMQOptions.setVirtualHost:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     235: pop
     236: nop
     237: aload         15
     239: areturn

  public static io.vertx.rabbitmq.RabbitMQOptions rabbitMQOptionsOf$default(java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         15
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #16                 // class java/lang/Boolean
      11: astore_0
      12: iload         15
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #40                 // class java/lang/Integer
      23: astore_1
      24: iload         15
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #30                 // class java/lang/Long
      35: astore_2
      36: iload         15
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #40                 // class java/lang/Integer
      48: astore_3
      49: iload         15
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #40                 // class java/lang/Integer
      61: astore        4
      63: iload         15
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #107                // class java/lang/String
      75: astore        5
      77: iload         15
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #16                 // class java/lang/Boolean
      89: astore        6
      91: iload         15
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #30                 // class java/lang/Long
     104: astore        7
     106: iload         15
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #107                // class java/lang/String
     119: astore        8
     121: iload         15
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #40                 // class java/lang/Integer
     134: astore        9
     136: iload         15
     138: sipush        1024
     141: iand
     142: ifeq          151
     145: aconst_null
     146: checkcast     #40                 // class java/lang/Integer
     149: astore        10
     151: iload         15
     153: sipush        2048
     156: iand
     157: ifeq          166
     160: aconst_null
     161: checkcast     #40                 // class java/lang/Integer
     164: astore        11
     166: iload         15
     168: sipush        4096
     171: iand
     172: ifeq          181
     175: aconst_null
     176: checkcast     #107                // class java/lang/String
     179: astore        12
     181: iload         15
     183: sipush        8192
     186: iand
     187: ifeq          196
     190: aconst_null
     191: checkcast     #107                // class java/lang/String
     194: astore        13
     196: iload         15
     198: sipush        16384
     201: iand
     202: ifeq          211
     205: aconst_null
     206: checkcast     #107                // class java/lang/String
     209: astore        14
     211: aload_0
     212: aload_1
     213: aload_2
     214: aload_3
     215: aload         4
     217: aload         5
     219: aload         6
     221: aload         7
     223: aload         8
     225: aload         9
     227: aload         10
     229: aload         11
     231: aload         12
     233: aload         13
     235: aload         14
     237: invokestatic  #111                // Method rabbitMQOptionsOf:(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     240: areturn

  public static final io.vertx.rabbitmq.RabbitMQOptions RabbitMQOptions(java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #10                 // class io/vertx/rabbitmq/RabbitMQOptions
       3: dup
       4: invokespecial #14                 // Method io/vertx/rabbitmq/RabbitMQOptions."<init>":()V
       7: astore        15
       9: iconst_0
      10: istore        16
      12: iconst_0
      13: istore        17
      15: aload         15
      17: astore        18
      19: iconst_0
      20: istore        19
      22: aload_0
      23: ifnull        36
      26: aload         18
      28: aload_0
      29: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      32: invokevirtual #24                 // Method io/vertx/rabbitmq/RabbitMQOptions.setAutomaticRecoveryEnabled:(Z)Lio/vertx/rabbitmq/RabbitMQOptions;
      35: pop
      36: aload_1
      37: ifnull        47
      40: aload         18
      42: aload_1
      43: invokevirtual #28                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionRetries:(Ljava/lang/Integer;)Lio/vertx/rabbitmq/RabbitMQOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         18
      53: aload_2
      54: invokevirtual #34                 // Method java/lang/Long.longValue:()J
      57: invokevirtual #38                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionRetryDelay:(J)Lio/vertx/rabbitmq/RabbitMQOptions;
      60: pop
      61: aload_3
      62: ifnull        75
      65: aload         18
      67: aload_3
      68: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      71: invokevirtual #48                 // Method io/vertx/rabbitmq/RabbitMQOptions.setConnectionTimeout:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
      74: pop
      75: aload         4
      77: ifnull        91
      80: aload         18
      82: aload         4
      84: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      87: invokevirtual #51                 // Method io/vertx/rabbitmq/RabbitMQOptions.setHandshakeTimeout:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
      90: pop
      91: aload         5
      93: ifnull        104
      96: aload         18
      98: aload         5
     100: invokevirtual #55                 // Method io/vertx/rabbitmq/RabbitMQOptions.setHost:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     103: pop
     104: aload         6
     106: ifnull        120
     109: aload         18
     111: aload         6
     113: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
     116: invokevirtual #58                 // Method io/vertx/rabbitmq/RabbitMQOptions.setIncludeProperties:(Z)Lio/vertx/rabbitmq/RabbitMQOptions;
     119: pop
     120: aload         7
     122: ifnull        136
     125: aload         18
     127: aload         7
     129: invokevirtual #34                 // Method java/lang/Long.longValue:()J
     132: invokevirtual #61                 // Method io/vertx/rabbitmq/RabbitMQOptions.setNetworkRecoveryInterval:(J)Lio/vertx/rabbitmq/RabbitMQOptions;
     135: pop
     136: aload         8
     138: ifnull        149
     141: aload         18
     143: aload         8
     145: invokevirtual #64                 // Method io/vertx/rabbitmq/RabbitMQOptions.setPassword:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     148: pop
     149: aload         9
     151: ifnull        165
     154: aload         18
     156: aload         9
     158: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     161: invokevirtual #67                 // Method io/vertx/rabbitmq/RabbitMQOptions.setPort:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     164: pop
     165: aload         10
     167: ifnull        181
     170: aload         18
     172: aload         10
     174: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     177: invokevirtual #70                 // Method io/vertx/rabbitmq/RabbitMQOptions.setRequestedChannelMax:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     180: pop
     181: aload         11
     183: ifnull        197
     186: aload         18
     188: aload         11
     190: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     193: invokevirtual #73                 // Method io/vertx/rabbitmq/RabbitMQOptions.setRequestedHeartbeat:(I)Lio/vertx/rabbitmq/RabbitMQOptions;
     196: pop
     197: aload         12
     199: ifnull        210
     202: aload         18
     204: aload         12
     206: invokevirtual #76                 // Method io/vertx/rabbitmq/RabbitMQOptions.setUri:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     209: pop
     210: aload         13
     212: ifnull        223
     215: aload         18
     217: aload         13
     219: invokevirtual #79                 // Method io/vertx/rabbitmq/RabbitMQOptions.setUser:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     222: pop
     223: aload         14
     225: ifnull        236
     228: aload         18
     230: aload         14
     232: invokevirtual #82                 // Method io/vertx/rabbitmq/RabbitMQOptions.setVirtualHost:(Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     235: pop
     236: nop
     237: aload         15
     239: areturn

  public static io.vertx.rabbitmq.RabbitMQOptions RabbitMQOptions$default(java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Long, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         15
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #16                 // class java/lang/Boolean
      11: astore_0
      12: iload         15
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #40                 // class java/lang/Integer
      23: astore_1
      24: iload         15
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #30                 // class java/lang/Long
      35: astore_2
      36: iload         15
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #40                 // class java/lang/Integer
      48: astore_3
      49: iload         15
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #40                 // class java/lang/Integer
      61: astore        4
      63: iload         15
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #107                // class java/lang/String
      75: astore        5
      77: iload         15
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #16                 // class java/lang/Boolean
      89: astore        6
      91: iload         15
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #30                 // class java/lang/Long
     104: astore        7
     106: iload         15
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #107                // class java/lang/String
     119: astore        8
     121: iload         15
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #40                 // class java/lang/Integer
     134: astore        9
     136: iload         15
     138: sipush        1024
     141: iand
     142: ifeq          151
     145: aconst_null
     146: checkcast     #40                 // class java/lang/Integer
     149: astore        10
     151: iload         15
     153: sipush        2048
     156: iand
     157: ifeq          166
     160: aconst_null
     161: checkcast     #40                 // class java/lang/Integer
     164: astore        11
     166: iload         15
     168: sipush        4096
     171: iand
     172: ifeq          181
     175: aconst_null
     176: checkcast     #107                // class java/lang/String
     179: astore        12
     181: iload         15
     183: sipush        8192
     186: iand
     187: ifeq          196
     190: aconst_null
     191: checkcast     #107                // class java/lang/String
     194: astore        13
     196: iload         15
     198: sipush        16384
     201: iand
     202: ifeq          211
     205: aconst_null
     206: checkcast     #107                // class java/lang/String
     209: astore        14
     211: aload_0
     212: aload_1
     213: aload_2
     214: aload_3
     215: aload         4
     217: aload         5
     219: aload         6
     221: aload         7
     223: aload         8
     225: aload         9
     227: aload         10
     229: aload         11
     231: aload         12
     233: aload         13
     235: aload         14
     237: invokestatic  #124                // Method RabbitMQOptions:(Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/vertx/rabbitmq/RabbitMQOptions;
     240: areturn
}
