Compiled from "DnsClientOptions.kt"
public final class io.vertx.kotlin.core.dns.DnsClientOptionsKt {
  public static final io.vertx.core.dns.DnsClientOptions dnsClientOptionsOf(java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Boolean);
    Code:
       0: new           #10                 // class io/vertx/core/dns/DnsClientOptions
       3: dup
       4: invokespecial #14                 // Method io/vertx/core/dns/DnsClientOptions."<init>":()V
       7: astore        5
       9: iconst_0
      10: istore        6
      12: iconst_0
      13: istore        7
      15: aload         5
      17: astore        8
      19: iconst_0
      20: istore        9
      22: aload_0
      23: ifnull        33
      26: aload         8
      28: aload_0
      29: invokevirtual #18                 // Method io/vertx/core/dns/DnsClientOptions.setHost:(Ljava/lang/String;)Lio/vertx/core/dns/DnsClientOptions;
      32: pop
      33: aload_1
      34: ifnull        47
      37: aload         8
      39: aload_1
      40: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #28                 // Method io/vertx/core/dns/DnsClientOptions.setLogActivity:(Z)Lio/vertx/core/dns/DnsClientOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         8
      53: aload_2
      54: invokevirtual #34                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #38                 // Method io/vertx/core/dns/DnsClientOptions.setPort:(I)Lio/vertx/core/dns/DnsClientOptions;
      60: pop
      61: aload_3
      62: ifnull        75
      65: aload         8
      67: aload_3
      68: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      71: invokevirtual #48                 // Method io/vertx/core/dns/DnsClientOptions.setQueryTimeout:(J)Lio/vertx/core/dns/DnsClientOptions;
      74: pop
      75: aload         4
      77: ifnull        91
      80: aload         8
      82: aload         4
      84: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #51                 // Method io/vertx/core/dns/DnsClientOptions.setRecursionDesired:(Z)Lio/vertx/core/dns/DnsClientOptions;
      90: pop
      91: nop
      92: aload         5
      94: areturn

  public static io.vertx.core.dns.DnsClientOptions dnsClientOptionsOf$default(java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Boolean, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #66                 // class java/lang/String
      11: astore_0
      12: iload         5
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #20                 // class java/lang/Boolean
      23: astore_1
      24: iload         5
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #30                 // class java/lang/Integer
      35: astore_2
      36: iload         5
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #40                 // class java/lang/Long
      48: astore_3
      49: iload         5
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #20                 // class java/lang/Boolean
      61: astore        4
      63: aload_0
      64: aload_1
      65: aload_2
      66: aload_3
      67: aload         4
      69: invokestatic  #70                 // Method dnsClientOptionsOf:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Boolean;)Lio/vertx/core/dns/DnsClientOptions;
      72: areturn

  public static final io.vertx.core.dns.DnsClientOptions DnsClientOptions(java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Boolean);
    Code:
       0: new           #10                 // class io/vertx/core/dns/DnsClientOptions
       3: dup
       4: invokespecial #14                 // Method io/vertx/core/dns/DnsClientOptions."<init>":()V
       7: astore        5
       9: iconst_0
      10: istore        6
      12: iconst_0
      13: istore        7
      15: aload         5
      17: astore        8
      19: iconst_0
      20: istore        9
      22: aload_0
      23: ifnull        33
      26: aload         8
      28: aload_0
      29: invokevirtual #18                 // Method io/vertx/core/dns/DnsClientOptions.setHost:(Ljava/lang/String;)Lio/vertx/core/dns/DnsClientOptions;
      32: pop
      33: aload_1
      34: ifnull        47
      37: aload         8
      39: aload_1
      40: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #28                 // Method io/vertx/core/dns/DnsClientOptions.setLogActivity:(Z)Lio/vertx/core/dns/DnsClientOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         8
      53: aload_2
      54: invokevirtual #34                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #38                 // Method io/vertx/core/dns/DnsClientOptions.setPort:(I)Lio/vertx/core/dns/DnsClientOptions;
      60: pop
      61: aload_3
      62: ifnull        75
      65: aload         8
      67: aload_3
      68: invokevirtual #44                 // Method java/lang/Long.longValue:()J
      71: invokevirtual #48                 // Method io/vertx/core/dns/DnsClientOptions.setQueryTimeout:(J)Lio/vertx/core/dns/DnsClientOptions;
      74: pop
      75: aload         4
      77: ifnull        91
      80: aload         8
      82: aload         4
      84: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #51                 // Method io/vertx/core/dns/DnsClientOptions.setRecursionDesired:(Z)Lio/vertx/core/dns/DnsClientOptions;
      90: pop
      91: nop
      92: aload         5
      94: areturn

  public static io.vertx.core.dns.DnsClientOptions DnsClientOptions$default(java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Long, java.lang.Boolean, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #66                 // class java/lang/String
      11: astore_0
      12: iload         5
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #20                 // class java/lang/Boolean
      23: astore_1
      24: iload         5
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #30                 // class java/lang/Integer
      35: astore_2
      36: iload         5
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #40                 // class java/lang/Long
      48: astore_3
      49: iload         5
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #20                 // class java/lang/Boolean
      61: astore        4
      63: aload_0
      64: aload_1
      65: aload_2
      66: aload_3
      67: aload         4
      69: invokestatic  #83                 // Method DnsClientOptions:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Boolean;)Lio/vertx/core/dns/DnsClientOptions;
      72: areturn
}
