Compiled from "ConsulClientOptions.kt"
public final class io.vertx.kotlin.ext.consul.ConsulClientOptionsKt {
  public static final io.vertx.ext.consul.ConsulClientOptions consulClientOptionsOf(java.lang.String, java.lang.Iterable<? extends io.vertx.core.http.HttpVersion>, java.lang.Integer, java.lang.Iterable<java.lang.String>, java.lang.Iterable<? extends io.vertx.core.buffer.Buffer>, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.util.concurrent.TimeUnit, io.vertx.core.http.Http2Settings, io.vertx.core.net.JdkSSLEngineOptions, java.lang.Boolean, java.lang.Integer, io.vertx.core.net.JksOptions, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, io.vertx.core.net.OpenSSLEngineOptions, io.vertx.core.net.PemKeyCertOptions, io.vertx.core.net.PemTrustOptions, io.vertx.core.net.PfxOptions, io.vertx.core.net.PfxOptions, java.lang.Boolean, java.lang.Integer, java.lang.Integer, io.vertx.core.http.HttpVersion, io.vertx.core.net.ProxyOptions, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Long, java.util.concurrent.TimeUnit, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Long, java.lang.Integer, java.lang.Boolean, io.vertx.core.net.JksOptions, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean);
    Code:
       0: new           #11                 // class io/vertx/ext/consul/ConsulClientOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/consul/ConsulClientOptions."<init>":()V
       7: astore        74
       9: iconst_0
      10: istore        75
      12: iconst_0
      13: istore        76
      15: aload         74
      17: astore        77
      19: iconst_0
      20: istore        78
      22: aload_0
      23: ifnull        33
      26: aload         77
      28: aload_0
      29: invokevirtual #19                 // Method io/vertx/ext/consul/ConsulClientOptions.setAclToken:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
      32: pop
      33: aload_1
      34: ifnull        47
      37: aload         77
      39: aload_1
      40: invokestatic  #25                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      43: invokevirtual #29                 // Method io/vertx/ext/consul/ConsulClientOptions.setAlpnVersions:(Ljava/util/List;)Lio/vertx/ext/consul/ConsulClientOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         77
      53: aload_2
      54: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #39                 // Method io/vertx/ext/consul/ConsulClientOptions.setConnectTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
      60: pop
      61: aload_3
      62: ifnull        106
      65: aload_3
      66: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      71: astore        79
      73: aload         79
      75: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          106
      83: aload         79
      85: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #57                 // class java/lang/String
      93: astore        80
      95: aload         77
      97: aload         80
      99: invokevirtual #60                 // Method io/vertx/ext/consul/ConsulClientOptions.addCrlPath:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     102: pop
     103: goto          73
     106: aload         4
     108: ifnull        153
     111: aload         4
     113: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     118: astore        79
     120: aload         79
     122: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          153
     130: aload         79
     132: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #62                 // class io/vertx/core/buffer/Buffer
     140: astore        80
     142: aload         77
     144: aload         80
     146: invokevirtual #66                 // Method io/vertx/ext/consul/ConsulClientOptions.addCrlValue:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/ext/consul/ConsulClientOptions;
     149: pop
     150: goto          120
     153: aload         5
     155: ifnull        166
     158: aload         77
     160: aload         5
     162: invokevirtual #69                 // Method io/vertx/ext/consul/ConsulClientOptions.setDc:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     165: pop
     166: aload         6
     168: ifnull        182
     171: aload         77
     173: aload         6
     175: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     178: invokevirtual #72                 // Method io/vertx/ext/consul/ConsulClientOptions.setDecoderInitialBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     181: pop
     182: aload         7
     184: ifnull        195
     187: aload         77
     189: aload         7
     191: invokevirtual #75                 // Method io/vertx/ext/consul/ConsulClientOptions.setDefaultHost:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     194: pop
     195: aload         8
     197: ifnull        211
     200: aload         77
     202: aload         8
     204: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     207: invokevirtual #78                 // Method io/vertx/ext/consul/ConsulClientOptions.setDefaultPort:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     210: pop
     211: aload         9
     213: ifnull        258
     216: aload         9
     218: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     223: astore        79
     225: aload         79
     227: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     232: ifeq          258
     235: aload         79
     237: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: checkcast     #57                 // class java/lang/String
     245: astore        80
     247: aload         77
     249: aload         80
     251: invokevirtual #81                 // Method io/vertx/ext/consul/ConsulClientOptions.addEnabledCipherSuite:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     254: pop
     255: goto          225
     258: aload         10
     260: ifnull        274
     263: aload         77
     265: aload         10
     267: invokestatic  #85                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
     270: invokevirtual #89                 // Method io/vertx/ext/consul/ConsulClientOptions.setEnabledSecureTransportProtocols:(Ljava/util/Set;)Lio/vertx/ext/consul/ConsulClientOptions;
     273: pop
     274: aload         11
     276: ifnull        290
     279: aload         77
     281: aload         11
     283: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     286: invokevirtual #98                 // Method io/vertx/ext/consul/ConsulClientOptions.setFollowRedirects:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     289: pop
     290: aload         12
     292: ifnull        306
     295: aload         77
     297: aload         12
     299: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     302: invokevirtual #101                // Method io/vertx/ext/consul/ConsulClientOptions.setForceSni:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     305: pop
     306: aload         13
     308: ifnull        322
     311: aload         77
     313: aload         13
     315: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     318: invokevirtual #104                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2ClearTextUpgrade:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     321: pop
     322: aload         14
     324: ifnull        338
     327: aload         77
     329: aload         14
     331: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     334: invokevirtual #107                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2ConnectionWindowSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     337: pop
     338: aload         15
     340: ifnull        354
     343: aload         77
     345: aload         15
     347: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     350: invokevirtual #110                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2KeepAliveTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     353: pop
     354: aload         16
     356: ifnull        370
     359: aload         77
     361: aload         16
     363: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     366: invokevirtual #113                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2MaxPoolSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     369: pop
     370: aload         17
     372: ifnull        386
     375: aload         77
     377: aload         17
     379: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     382: invokevirtual #116                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2MultiplexingLimit:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     385: pop
     386: aload         18
     388: ifnull        402
     391: aload         77
     393: aload         18
     395: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     398: invokevirtual #119                // Method io/vertx/ext/consul/ConsulClientOptions.setIdleTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     401: pop
     402: aload         19
     404: ifnull        415
     407: aload         77
     409: aload         19
     411: invokevirtual #123                // Method io/vertx/ext/consul/ConsulClientOptions.setIdleTimeoutUnit:(Ljava/util/concurrent/TimeUnit;)Lio/vertx/ext/consul/ConsulClientOptions;
     414: pop
     415: aload         20
     417: ifnull        428
     420: aload         77
     422: aload         20
     424: invokevirtual #127                // Method io/vertx/ext/consul/ConsulClientOptions.setInitialSettings:(Lio/vertx/core/http/Http2Settings;)Lio/vertx/ext/consul/ConsulClientOptions;
     427: pop
     428: aload         21
     430: ifnull        441
     433: aload         77
     435: aload         21
     437: invokevirtual #131                // Method io/vertx/ext/consul/ConsulClientOptions.setJdkSslEngineOptions:(Lio/vertx/core/net/JdkSSLEngineOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     440: pop
     441: aload         22
     443: ifnull        457
     446: aload         77
     448: aload         22
     450: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     453: invokevirtual #134                // Method io/vertx/ext/consul/ConsulClientOptions.setKeepAlive:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     456: pop
     457: aload         23
     459: ifnull        473
     462: aload         77
     464: aload         23
     466: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     469: invokevirtual #137                // Method io/vertx/ext/consul/ConsulClientOptions.setKeepAliveTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     472: pop
     473: aload         24
     475: ifnull        486
     478: aload         77
     480: aload         24
     482: invokevirtual #141                // Method io/vertx/ext/consul/ConsulClientOptions.setKeyStoreOptions:(Lio/vertx/core/net/JksOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     485: pop
     486: aload         25
     488: ifnull        499
     491: aload         77
     493: aload         25
     495: invokevirtual #144                // Method io/vertx/ext/consul/ConsulClientOptions.setLocalAddress:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     498: pop
     499: aload         26
     501: ifnull        515
     504: aload         77
     506: aload         26
     508: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     511: invokevirtual #147                // Method io/vertx/ext/consul/ConsulClientOptions.setLogActivity:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     514: pop
     515: aload         27
     517: ifnull        531
     520: aload         77
     522: aload         27
     524: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     527: invokevirtual #150                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxChunkSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     530: pop
     531: aload         28
     533: ifnull        547
     536: aload         77
     538: aload         28
     540: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     543: invokevirtual #153                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxHeaderSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     546: pop
     547: aload         29
     549: ifnull        563
     552: aload         77
     554: aload         29
     556: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     559: invokevirtual #156                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxInitialLineLength:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     562: pop
     563: aload         30
     565: ifnull        579
     568: aload         77
     570: aload         30
     572: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     575: invokevirtual #159                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxPoolSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     578: pop
     579: aload         31
     581: ifnull        595
     584: aload         77
     586: aload         31
     588: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     591: invokevirtual #162                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxRedirects:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     594: pop
     595: aload         32
     597: ifnull        611
     600: aload         77
     602: aload         32
     604: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     607: invokevirtual #165                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWaitQueueSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     610: pop
     611: aload         33
     613: ifnull        627
     616: aload         77
     618: aload         33
     620: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     623: invokevirtual #168                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWebsocketFrameSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     626: pop
     627: aload         34
     629: ifnull        643
     632: aload         77
     634: aload         34
     636: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     639: invokevirtual #171                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWebsocketMessageSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     642: pop
     643: aload         35
     645: ifnull        656
     648: aload         77
     650: aload         35
     652: invokevirtual #174                // Method io/vertx/ext/consul/ConsulClientOptions.setMetricsName:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     655: pop
     656: aload         36
     658: ifnull        669
     661: aload         77
     663: aload         36
     665: invokevirtual #178                // Method io/vertx/ext/consul/ConsulClientOptions.setOpenSslEngineOptions:(Lio/vertx/core/net/OpenSSLEngineOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     668: pop
     669: aload         37
     671: ifnull        682
     674: aload         77
     676: aload         37
     678: invokevirtual #182                // Method io/vertx/ext/consul/ConsulClientOptions.setPemKeyCertOptions:(Lio/vertx/core/net/PemKeyCertOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     681: pop
     682: aload         38
     684: ifnull        695
     687: aload         77
     689: aload         38
     691: invokevirtual #186                // Method io/vertx/ext/consul/ConsulClientOptions.setPemTrustOptions:(Lio/vertx/core/net/PemTrustOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     694: pop
     695: aload         39
     697: ifnull        708
     700: aload         77
     702: aload         39
     704: invokevirtual #190                // Method io/vertx/ext/consul/ConsulClientOptions.setPfxKeyCertOptions:(Lio/vertx/core/net/PfxOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     707: pop
     708: aload         40
     710: ifnull        721
     713: aload         77
     715: aload         40
     717: invokevirtual #193                // Method io/vertx/ext/consul/ConsulClientOptions.setPfxTrustOptions:(Lio/vertx/core/net/PfxOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     720: pop
     721: aload         41
     723: ifnull        737
     726: aload         77
     728: aload         41
     730: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     733: invokevirtual #196                // Method io/vertx/ext/consul/ConsulClientOptions.setPipelining:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     736: pop
     737: aload         42
     739: ifnull        753
     742: aload         77
     744: aload         42
     746: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     749: invokevirtual #199                // Method io/vertx/ext/consul/ConsulClientOptions.setPipeliningLimit:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     752: pop
     753: aload         43
     755: ifnull        769
     758: aload         77
     760: aload         43
     762: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     765: invokevirtual #202                // Method io/vertx/ext/consul/ConsulClientOptions.setPoolCleanerPeriod:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     768: pop
     769: aload         44
     771: ifnull        782
     774: aload         77
     776: aload         44
     778: invokevirtual #206                // Method io/vertx/ext/consul/ConsulClientOptions.setProtocolVersion:(Lio/vertx/core/http/HttpVersion;)Lio/vertx/ext/consul/ConsulClientOptions;
     781: pop
     782: aload         45
     784: ifnull        795
     787: aload         77
     789: aload         45
     791: invokevirtual #210                // Method io/vertx/ext/consul/ConsulClientOptions.setProxyOptions:(Lio/vertx/core/net/ProxyOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     794: pop
     795: aload         46
     797: ifnull        811
     800: aload         77
     802: aload         46
     804: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     807: invokevirtual #213                // Method io/vertx/ext/consul/ConsulClientOptions.setReceiveBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     810: pop
     811: aload         47
     813: ifnull        827
     816: aload         77
     818: aload         47
     820: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     823: invokevirtual #216                // Method io/vertx/ext/consul/ConsulClientOptions.setReuseAddress:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     826: pop
     827: aload         48
     829: ifnull        843
     832: aload         77
     834: aload         48
     836: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     839: invokevirtual #219                // Method io/vertx/ext/consul/ConsulClientOptions.setReusePort:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     842: pop
     843: aload         49
     845: ifnull        859
     848: aload         77
     850: aload         49
     852: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     855: invokevirtual #222                // Method io/vertx/ext/consul/ConsulClientOptions.setSendBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     858: pop
     859: aload         50
     861: ifnull        875
     864: aload         77
     866: aload         50
     868: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     871: invokevirtual #225                // Method io/vertx/ext/consul/ConsulClientOptions.setSendUnmaskedFrames:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     874: pop
     875: aload         51
     877: ifnull        891
     880: aload         77
     882: aload         51
     884: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     887: invokevirtual #228                // Method io/vertx/ext/consul/ConsulClientOptions.setSoLinger:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     890: pop
     891: aload         52
     893: ifnull        907
     896: aload         77
     898: aload         52
     900: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     903: invokevirtual #231                // Method io/vertx/ext/consul/ConsulClientOptions.setSsl:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     906: pop
     907: aload         53
     909: ifnull        923
     912: aload         77
     914: aload         53
     916: invokevirtual #237                // Method java/lang/Long.longValue:()J
     919: invokevirtual #241                // Method io/vertx/ext/consul/ConsulClientOptions.setSslHandshakeTimeout:(J)Lio/vertx/core/http/HttpClientOptions;
     922: pop
     923: aload         54
     925: ifnull        936
     928: aload         77
     930: aload         54
     932: invokevirtual #245                // Method io/vertx/ext/consul/ConsulClientOptions.setSslHandshakeTimeoutUnit:(Ljava/util/concurrent/TimeUnit;)Lio/vertx/core/http/HttpClientOptions;
     935: pop
     936: aload         55
     938: ifnull        952
     941: aload         77
     943: aload         55
     945: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     948: invokevirtual #248                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpCork:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     951: pop
     952: aload         56
     954: ifnull        968
     957: aload         77
     959: aload         56
     961: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     964: invokevirtual #251                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpFastOpen:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     967: pop
     968: aload         57
     970: ifnull        984
     973: aload         77
     975: aload         57
     977: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     980: invokevirtual #254                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpKeepAlive:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     983: pop
     984: aload         58
     986: ifnull        1000
     989: aload         77
     991: aload         58
     993: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     996: invokevirtual #257                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpNoDelay:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     999: pop
    1000: aload         59
    1002: ifnull        1016
    1005: aload         77
    1007: aload         59
    1009: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1012: invokevirtual #260                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpQuickAck:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1015: pop
    1016: aload         60
    1018: ifnull        1032
    1021: aload         77
    1023: aload         60
    1025: invokevirtual #237                // Method java/lang/Long.longValue:()J
    1028: invokevirtual #264                // Method io/vertx/ext/consul/ConsulClientOptions.setTimeout:(J)Lio/vertx/ext/consul/ConsulClientOptions;
    1031: pop
    1032: aload         61
    1034: ifnull        1048
    1037: aload         77
    1039: aload         61
    1041: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
    1044: invokevirtual #267                // Method io/vertx/ext/consul/ConsulClientOptions.setTrafficClass:(I)Lio/vertx/ext/consul/ConsulClientOptions;
    1047: pop
    1048: aload         62
    1050: ifnull        1064
    1053: aload         77
    1055: aload         62
    1057: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1060: invokevirtual #270                // Method io/vertx/ext/consul/ConsulClientOptions.setTrustAll:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1063: pop
    1064: aload         63
    1066: ifnull        1077
    1069: aload         77
    1071: aload         63
    1073: invokevirtual #273                // Method io/vertx/ext/consul/ConsulClientOptions.setTrustStoreOptions:(Lio/vertx/core/net/JksOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
    1076: pop
    1077: aload         64
    1079: ifnull        1093
    1082: aload         77
    1084: aload         64
    1086: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1089: invokevirtual #276                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUseCompression:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1092: pop
    1093: aload         65
    1095: ifnull        1109
    1098: aload         77
    1100: aload         65
    1102: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1105: invokevirtual #280                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUsePerFrameWebsocketCompression:(Z)Lio/vertx/core/http/HttpClientOptions;
    1108: pop
    1109: aload         66
    1111: ifnull        1125
    1114: aload         77
    1116: aload         66
    1118: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1121: invokevirtual #283                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUsePerMessageWebsocketCompression:(Z)Lio/vertx/core/http/HttpClientOptions;
    1124: pop
    1125: aload         67
    1127: ifnull        1141
    1130: aload         77
    1132: aload         67
    1134: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1137: invokevirtual #286                // Method io/vertx/ext/consul/ConsulClientOptions.setUseAlpn:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1140: pop
    1141: aload         68
    1143: ifnull        1154
    1146: aload         77
    1148: aload         68
    1150: invokevirtual #289                // Method io/vertx/ext/consul/ConsulClientOptions.setUserAgent:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
    1153: pop
    1154: aload         69
    1156: ifnull        1170
    1159: aload         77
    1161: aload         69
    1163: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1166: invokevirtual #292                // Method io/vertx/ext/consul/ConsulClientOptions.setUserAgentEnabled:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1169: pop
    1170: aload         70
    1172: ifnull        1186
    1175: aload         77
    1177: aload         70
    1179: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1182: invokevirtual #295                // Method io/vertx/ext/consul/ConsulClientOptions.setVerifyHost:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1185: pop
    1186: aload         71
    1188: ifnull        1202
    1191: aload         77
    1193: aload         71
    1195: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1198: invokevirtual #298                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionAllowClientNoContext:(Z)Lio/vertx/core/http/HttpClientOptions;
    1201: pop
    1202: aload         72
    1204: ifnull        1218
    1207: aload         77
    1209: aload         72
    1211: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
    1214: invokevirtual #302                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionLevel:(I)Lio/vertx/core/http/HttpClientOptions;
    1217: pop
    1218: aload         73
    1220: ifnull        1234
    1223: aload         77
    1225: aload         73
    1227: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1230: invokevirtual #305                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionRequestServerNoContext:(Z)Lio/vertx/core/http/HttpClientOptions;
    1233: pop
    1234: getstatic     #311                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
    1237: pop
    1238: aload         74
    1240: areturn

  public static io.vertx.ext.consul.ConsulClientOptions consulClientOptionsOf$default(java.lang.String, java.lang.Iterable, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.util.concurrent.TimeUnit, io.vertx.core.http.Http2Settings, io.vertx.core.net.JdkSSLEngineOptions, java.lang.Boolean, java.lang.Integer, io.vertx.core.net.JksOptions, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, io.vertx.core.net.OpenSSLEngineOptions, io.vertx.core.net.PemKeyCertOptions, io.vertx.core.net.PemTrustOptions, io.vertx.core.net.PfxOptions, io.vertx.core.net.PfxOptions, java.lang.Boolean, java.lang.Integer, java.lang.Integer, io.vertx.core.http.HttpVersion, io.vertx.core.net.ProxyOptions, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Long, java.util.concurrent.TimeUnit, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Long, java.lang.Integer, java.lang.Boolean, io.vertx.core.net.JksOptions, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, int, int, int, java.lang.Object);
    Code:
       0: iload         74
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #57                 // class java/lang/String
      11: astore_0
      12: iload         74
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #41                 // class java/lang/Iterable
      23: astore_1
      24: iload         74
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #31                 // class java/lang/Integer
      35: astore_2
      36: iload         74
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #41                 // class java/lang/Iterable
      48: astore_3
      49: iload         74
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #41                 // class java/lang/Iterable
      61: astore        4
      63: iload         74
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #57                 // class java/lang/String
      75: astore        5
      77: iload         74
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #31                 // class java/lang/Integer
      89: astore        6
      91: iload         74
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #57                 // class java/lang/String
     104: astore        7
     106: iload         74
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #31                 // class java/lang/Integer
     119: astore        8
     121: iload         74
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #41                 // class java/lang/Iterable
     134: astore        9
     136: iload         74
     138: sipush        1024
     141: iand
     142: ifeq          151
     145: aconst_null
     146: checkcast     #41                 // class java/lang/Iterable
     149: astore        10
     151: iload         74
     153: sipush        2048
     156: iand
     157: ifeq          166
     160: aconst_null
     161: checkcast     #91                 // class java/lang/Boolean
     164: astore        11
     166: iload         74
     168: sipush        4096
     171: iand
     172: ifeq          181
     175: aconst_null
     176: checkcast     #91                 // class java/lang/Boolean
     179: astore        12
     181: iload         74
     183: sipush        8192
     186: iand
     187: ifeq          196
     190: aconst_null
     191: checkcast     #91                 // class java/lang/Boolean
     194: astore        13
     196: iload         74
     198: sipush        16384
     201: iand
     202: ifeq          211
     205: aconst_null
     206: checkcast     #31                 // class java/lang/Integer
     209: astore        14
     211: iload         74
     213: ldc_w         #429                // int 32768
     216: iand
     217: ifeq          226
     220: aconst_null
     221: checkcast     #31                 // class java/lang/Integer
     224: astore        15
     226: iload         74
     228: ldc_w         #430                // int 65536
     231: iand
     232: ifeq          241
     235: aconst_null
     236: checkcast     #31                 // class java/lang/Integer
     239: astore        16
     241: iload         74
     243: ldc_w         #431                // int 131072
     246: iand
     247: ifeq          256
     250: aconst_null
     251: checkcast     #31                 // class java/lang/Integer
     254: astore        17
     256: iload         74
     258: ldc_w         #432                // int 262144
     261: iand
     262: ifeq          271
     265: aconst_null
     266: checkcast     #31                 // class java/lang/Integer
     269: astore        18
     271: iload         74
     273: ldc_w         #433                // int 524288
     276: iand
     277: ifeq          286
     280: aconst_null
     281: checkcast     #408                // class java/util/concurrent/TimeUnit
     284: astore        19
     286: iload         74
     288: ldc_w         #434                // int 1048576
     291: iand
     292: ifeq          301
     295: aconst_null
     296: checkcast     #410                // class io/vertx/core/http/Http2Settings
     299: astore        20
     301: iload         74
     303: ldc_w         #435                // int 2097152
     306: iand
     307: ifeq          316
     310: aconst_null
     311: checkcast     #412                // class io/vertx/core/net/JdkSSLEngineOptions
     314: astore        21
     316: iload         74
     318: ldc_w         #436                // int 4194304
     321: iand
     322: ifeq          331
     325: aconst_null
     326: checkcast     #91                 // class java/lang/Boolean
     329: astore        22
     331: iload         74
     333: ldc_w         #437                // int 8388608
     336: iand
     337: ifeq          346
     340: aconst_null
     341: checkcast     #31                 // class java/lang/Integer
     344: astore        23
     346: iload         74
     348: ldc_w         #438                // int 16777216
     351: iand
     352: ifeq          361
     355: aconst_null
     356: checkcast     #414                // class io/vertx/core/net/JksOptions
     359: astore        24
     361: iload         74
     363: ldc_w         #439                // int 33554432
     366: iand
     367: ifeq          376
     370: aconst_null
     371: checkcast     #57                 // class java/lang/String
     374: astore        25
     376: iload         74
     378: ldc_w         #440                // int 67108864
     381: iand
     382: ifeq          391
     385: aconst_null
     386: checkcast     #91                 // class java/lang/Boolean
     389: astore        26
     391: iload         74
     393: ldc_w         #441                // int 134217728
     396: iand
     397: ifeq          406
     400: aconst_null
     401: checkcast     #31                 // class java/lang/Integer
     404: astore        27
     406: iload         74
     408: ldc_w         #442                // int 268435456
     411: iand
     412: ifeq          421
     415: aconst_null
     416: checkcast     #31                 // class java/lang/Integer
     419: astore        28
     421: iload         74
     423: ldc_w         #443                // int 536870912
     426: iand
     427: ifeq          436
     430: aconst_null
     431: checkcast     #31                 // class java/lang/Integer
     434: astore        29
     436: iload         74
     438: ldc_w         #444                // int 1073741824
     441: iand
     442: ifeq          451
     445: aconst_null
     446: checkcast     #31                 // class java/lang/Integer
     449: astore        30
     451: iload         74
     453: ldc_w         #445                // int -2147483648
     456: iand
     457: ifeq          466
     460: aconst_null
     461: checkcast     #31                 // class java/lang/Integer
     464: astore        31
     466: iload         75
     468: iconst_1
     469: iand
     470: ifeq          479
     473: aconst_null
     474: checkcast     #31                 // class java/lang/Integer
     477: astore        32
     479: iload         75
     481: iconst_2
     482: iand
     483: ifeq          492
     486: aconst_null
     487: checkcast     #31                 // class java/lang/Integer
     490: astore        33
     492: iload         75
     494: iconst_4
     495: iand
     496: ifeq          505
     499: aconst_null
     500: checkcast     #31                 // class java/lang/Integer
     503: astore        34
     505: iload         75
     507: bipush        8
     509: iand
     510: ifeq          519
     513: aconst_null
     514: checkcast     #57                 // class java/lang/String
     517: astore        35
     519: iload         75
     521: bipush        16
     523: iand
     524: ifeq          533
     527: aconst_null
     528: checkcast     #416                // class io/vertx/core/net/OpenSSLEngineOptions
     531: astore        36
     533: iload         75
     535: bipush        32
     537: iand
     538: ifeq          547
     541: aconst_null
     542: checkcast     #418                // class io/vertx/core/net/PemKeyCertOptions
     545: astore        37
     547: iload         75
     549: bipush        64
     551: iand
     552: ifeq          561
     555: aconst_null
     556: checkcast     #420                // class io/vertx/core/net/PemTrustOptions
     559: astore        38
     561: iload         75
     563: sipush        128
     566: iand
     567: ifeq          576
     570: aconst_null
     571: checkcast     #422                // class io/vertx/core/net/PfxOptions
     574: astore        39
     576: iload         75
     578: sipush        256
     581: iand
     582: ifeq          591
     585: aconst_null
     586: checkcast     #422                // class io/vertx/core/net/PfxOptions
     589: astore        40
     591: iload         75
     593: sipush        512
     596: iand
     597: ifeq          606
     600: aconst_null
     601: checkcast     #91                 // class java/lang/Boolean
     604: astore        41
     606: iload         75
     608: sipush        1024
     611: iand
     612: ifeq          621
     615: aconst_null
     616: checkcast     #31                 // class java/lang/Integer
     619: astore        42
     621: iload         75
     623: sipush        2048
     626: iand
     627: ifeq          636
     630: aconst_null
     631: checkcast     #31                 // class java/lang/Integer
     634: astore        43
     636: iload         75
     638: sipush        4096
     641: iand
     642: ifeq          651
     645: aconst_null
     646: checkcast     #424                // class io/vertx/core/http/HttpVersion
     649: astore        44
     651: iload         75
     653: sipush        8192
     656: iand
     657: ifeq          666
     660: aconst_null
     661: checkcast     #426                // class io/vertx/core/net/ProxyOptions
     664: astore        45
     666: iload         75
     668: sipush        16384
     671: iand
     672: ifeq          681
     675: aconst_null
     676: checkcast     #31                 // class java/lang/Integer
     679: astore        46
     681: iload         75
     683: ldc_w         #429                // int 32768
     686: iand
     687: ifeq          696
     690: aconst_null
     691: checkcast     #91                 // class java/lang/Boolean
     694: astore        47
     696: iload         75
     698: ldc_w         #430                // int 65536
     701: iand
     702: ifeq          711
     705: aconst_null
     706: checkcast     #91                 // class java/lang/Boolean
     709: astore        48
     711: iload         75
     713: ldc_w         #431                // int 131072
     716: iand
     717: ifeq          726
     720: aconst_null
     721: checkcast     #31                 // class java/lang/Integer
     724: astore        49
     726: iload         75
     728: ldc_w         #432                // int 262144
     731: iand
     732: ifeq          741
     735: aconst_null
     736: checkcast     #91                 // class java/lang/Boolean
     739: astore        50
     741: iload         75
     743: ldc_w         #433                // int 524288
     746: iand
     747: ifeq          756
     750: aconst_null
     751: checkcast     #31                 // class java/lang/Integer
     754: astore        51
     756: iload         75
     758: ldc_w         #434                // int 1048576
     761: iand
     762: ifeq          771
     765: aconst_null
     766: checkcast     #91                 // class java/lang/Boolean
     769: astore        52
     771: iload         75
     773: ldc_w         #435                // int 2097152
     776: iand
     777: ifeq          786
     780: aconst_null
     781: checkcast     #233                // class java/lang/Long
     784: astore        53
     786: iload         75
     788: ldc_w         #436                // int 4194304
     791: iand
     792: ifeq          801
     795: aconst_null
     796: checkcast     #408                // class java/util/concurrent/TimeUnit
     799: astore        54
     801: iload         75
     803: ldc_w         #437                // int 8388608
     806: iand
     807: ifeq          816
     810: aconst_null
     811: checkcast     #91                 // class java/lang/Boolean
     814: astore        55
     816: iload         75
     818: ldc_w         #438                // int 16777216
     821: iand
     822: ifeq          831
     825: aconst_null
     826: checkcast     #91                 // class java/lang/Boolean
     829: astore        56
     831: iload         75
     833: ldc_w         #439                // int 33554432
     836: iand
     837: ifeq          846
     840: aconst_null
     841: checkcast     #91                 // class java/lang/Boolean
     844: astore        57
     846: iload         75
     848: ldc_w         #440                // int 67108864
     851: iand
     852: ifeq          861
     855: aconst_null
     856: checkcast     #91                 // class java/lang/Boolean
     859: astore        58
     861: iload         75
     863: ldc_w         #441                // int 134217728
     866: iand
     867: ifeq          876
     870: aconst_null
     871: checkcast     #91                 // class java/lang/Boolean
     874: astore        59
     876: iload         75
     878: ldc_w         #442                // int 268435456
     881: iand
     882: ifeq          891
     885: aconst_null
     886: checkcast     #233                // class java/lang/Long
     889: astore        60
     891: iload         75
     893: ldc_w         #443                // int 536870912
     896: iand
     897: ifeq          906
     900: aconst_null
     901: checkcast     #31                 // class java/lang/Integer
     904: astore        61
     906: iload         75
     908: ldc_w         #444                // int 1073741824
     911: iand
     912: ifeq          921
     915: aconst_null
     916: checkcast     #91                 // class java/lang/Boolean
     919: astore        62
     921: iload         75
     923: ldc_w         #445                // int -2147483648
     926: iand
     927: ifeq          936
     930: aconst_null
     931: checkcast     #414                // class io/vertx/core/net/JksOptions
     934: astore        63
     936: iload         76
     938: iconst_1
     939: iand
     940: ifeq          949
     943: aconst_null
     944: checkcast     #91                 // class java/lang/Boolean
     947: astore        64
     949: iload         76
     951: iconst_2
     952: iand
     953: ifeq          962
     956: aconst_null
     957: checkcast     #91                 // class java/lang/Boolean
     960: astore        65
     962: iload         76
     964: iconst_4
     965: iand
     966: ifeq          975
     969: aconst_null
     970: checkcast     #91                 // class java/lang/Boolean
     973: astore        66
     975: iload         76
     977: bipush        8
     979: iand
     980: ifeq          989
     983: aconst_null
     984: checkcast     #91                 // class java/lang/Boolean
     987: astore        67
     989: iload         76
     991: bipush        16
     993: iand
     994: ifeq          1003
     997: aconst_null
     998: checkcast     #57                 // class java/lang/String
    1001: astore        68
    1003: iload         76
    1005: bipush        32
    1007: iand
    1008: ifeq          1017
    1011: aconst_null
    1012: checkcast     #91                 // class java/lang/Boolean
    1015: astore        69
    1017: iload         76
    1019: bipush        64
    1021: iand
    1022: ifeq          1031
    1025: aconst_null
    1026: checkcast     #91                 // class java/lang/Boolean
    1029: astore        70
    1031: iload         76
    1033: sipush        128
    1036: iand
    1037: ifeq          1046
    1040: aconst_null
    1041: checkcast     #91                 // class java/lang/Boolean
    1044: astore        71
    1046: iload         76
    1048: sipush        256
    1051: iand
    1052: ifeq          1061
    1055: aconst_null
    1056: checkcast     #31                 // class java/lang/Integer
    1059: astore        72
    1061: iload         76
    1063: sipush        512
    1066: iand
    1067: ifeq          1076
    1070: aconst_null
    1071: checkcast     #91                 // class java/lang/Boolean
    1074: astore        73
    1076: aload_0
    1077: aload_1
    1078: aload_2
    1079: aload_3
    1080: aload         4
    1082: aload         5
    1084: aload         6
    1086: aload         7
    1088: aload         8
    1090: aload         9
    1092: aload         10
    1094: aload         11
    1096: aload         12
    1098: aload         13
    1100: aload         14
    1102: aload         15
    1104: aload         16
    1106: aload         17
    1108: aload         18
    1110: aload         19
    1112: aload         20
    1114: aload         21
    1116: aload         22
    1118: aload         23
    1120: aload         24
    1122: aload         25
    1124: aload         26
    1126: aload         27
    1128: aload         28
    1130: aload         29
    1132: aload         30
    1134: aload         31
    1136: aload         32
    1138: aload         33
    1140: aload         34
    1142: aload         35
    1144: aload         36
    1146: aload         37
    1148: aload         38
    1150: aload         39
    1152: aload         40
    1154: aload         41
    1156: aload         42
    1158: aload         43
    1160: aload         44
    1162: aload         45
    1164: aload         46
    1166: aload         47
    1168: aload         48
    1170: aload         49
    1172: aload         50
    1174: aload         51
    1176: aload         52
    1178: aload         53
    1180: aload         54
    1182: aload         55
    1184: aload         56
    1186: aload         57
    1188: aload         58
    1190: aload         59
    1192: aload         60
    1194: aload         61
    1196: aload         62
    1198: aload         63
    1200: aload         64
    1202: aload         65
    1204: aload         66
    1206: aload         67
    1208: aload         68
    1210: aload         69
    1212: aload         70
    1214: aload         71
    1216: aload         72
    1218: aload         73
    1220: invokestatic  #447                // Method consulClientOptionsOf:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/concurrent/TimeUnit;Lio/vertx/core/http/Http2Settings;Lio/vertx/core/net/JdkSSLEngineOptions;Ljava/lang/Boolean;Ljava/lang/Integer;Lio/vertx/core/net/JksOptions;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Lio/vertx/core/net/OpenSSLEngineOptions;Lio/vertx/core/net/PemKeyCertOptions;Lio/vertx/core/net/PemTrustOptions;Lio/vertx/core/net/PfxOptions;Lio/vertx/core/net/PfxOptions;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Lio/vertx/core/http/HttpVersion;Lio/vertx/core/net/ProxyOptions;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Boolean;Lio/vertx/core/net/JksOptions;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;)Lio/vertx/ext/consul/ConsulClientOptions;
    1223: areturn

  public static final io.vertx.ext.consul.ConsulClientOptions ConsulClientOptions(java.lang.String, java.lang.Iterable<? extends io.vertx.core.http.HttpVersion>, java.lang.Integer, java.lang.Iterable<java.lang.String>, java.lang.Iterable<? extends io.vertx.core.buffer.Buffer>, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.util.concurrent.TimeUnit, io.vertx.core.http.Http2Settings, io.vertx.core.net.JdkSSLEngineOptions, java.lang.Boolean, java.lang.Integer, io.vertx.core.net.JksOptions, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, io.vertx.core.net.OpenSSLEngineOptions, io.vertx.core.net.PemKeyCertOptions, io.vertx.core.net.PemTrustOptions, io.vertx.core.net.PfxOptions, io.vertx.core.net.PfxOptions, java.lang.Boolean, java.lang.Integer, java.lang.Integer, io.vertx.core.http.HttpVersion, io.vertx.core.net.ProxyOptions, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Long, java.util.concurrent.TimeUnit, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Long, java.lang.Integer, java.lang.Boolean, io.vertx.core.net.JksOptions, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean);
    Code:
       0: new           #11                 // class io/vertx/ext/consul/ConsulClientOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/consul/ConsulClientOptions."<init>":()V
       7: astore        74
       9: iconst_0
      10: istore        75
      12: iconst_0
      13: istore        76
      15: aload         74
      17: astore        77
      19: iconst_0
      20: istore        78
      22: aload_0
      23: ifnull        33
      26: aload         77
      28: aload_0
      29: invokevirtual #19                 // Method io/vertx/ext/consul/ConsulClientOptions.setAclToken:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
      32: pop
      33: aload_1
      34: ifnull        47
      37: aload         77
      39: aload_1
      40: invokestatic  #25                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      43: invokevirtual #29                 // Method io/vertx/ext/consul/ConsulClientOptions.setAlpnVersions:(Ljava/util/List;)Lio/vertx/ext/consul/ConsulClientOptions;
      46: pop
      47: aload_2
      48: ifnull        61
      51: aload         77
      53: aload_2
      54: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #39                 // Method io/vertx/ext/consul/ConsulClientOptions.setConnectTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
      60: pop
      61: aload_3
      62: ifnull        106
      65: aload_3
      66: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      71: astore        79
      73: aload         79
      75: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          106
      83: aload         79
      85: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #57                 // class java/lang/String
      93: astore        80
      95: aload         77
      97: aload         80
      99: invokevirtual #60                 // Method io/vertx/ext/consul/ConsulClientOptions.addCrlPath:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     102: pop
     103: goto          73
     106: aload         4
     108: ifnull        153
     111: aload         4
     113: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     118: astore        79
     120: aload         79
     122: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          153
     130: aload         79
     132: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #62                 // class io/vertx/core/buffer/Buffer
     140: astore        80
     142: aload         77
     144: aload         80
     146: invokevirtual #66                 // Method io/vertx/ext/consul/ConsulClientOptions.addCrlValue:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/ext/consul/ConsulClientOptions;
     149: pop
     150: goto          120
     153: aload         5
     155: ifnull        166
     158: aload         77
     160: aload         5
     162: invokevirtual #69                 // Method io/vertx/ext/consul/ConsulClientOptions.setDc:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     165: pop
     166: aload         6
     168: ifnull        182
     171: aload         77
     173: aload         6
     175: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     178: invokevirtual #72                 // Method io/vertx/ext/consul/ConsulClientOptions.setDecoderInitialBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     181: pop
     182: aload         7
     184: ifnull        195
     187: aload         77
     189: aload         7
     191: invokevirtual #75                 // Method io/vertx/ext/consul/ConsulClientOptions.setDefaultHost:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     194: pop
     195: aload         8
     197: ifnull        211
     200: aload         77
     202: aload         8
     204: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     207: invokevirtual #78                 // Method io/vertx/ext/consul/ConsulClientOptions.setDefaultPort:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     210: pop
     211: aload         9
     213: ifnull        258
     216: aload         9
     218: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     223: astore        79
     225: aload         79
     227: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     232: ifeq          258
     235: aload         79
     237: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: checkcast     #57                 // class java/lang/String
     245: astore        80
     247: aload         77
     249: aload         80
     251: invokevirtual #81                 // Method io/vertx/ext/consul/ConsulClientOptions.addEnabledCipherSuite:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     254: pop
     255: goto          225
     258: aload         10
     260: ifnull        274
     263: aload         77
     265: aload         10
     267: invokestatic  #85                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
     270: invokevirtual #89                 // Method io/vertx/ext/consul/ConsulClientOptions.setEnabledSecureTransportProtocols:(Ljava/util/Set;)Lio/vertx/ext/consul/ConsulClientOptions;
     273: pop
     274: aload         11
     276: ifnull        290
     279: aload         77
     281: aload         11
     283: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     286: invokevirtual #98                 // Method io/vertx/ext/consul/ConsulClientOptions.setFollowRedirects:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     289: pop
     290: aload         12
     292: ifnull        306
     295: aload         77
     297: aload         12
     299: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     302: invokevirtual #101                // Method io/vertx/ext/consul/ConsulClientOptions.setForceSni:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     305: pop
     306: aload         13
     308: ifnull        322
     311: aload         77
     313: aload         13
     315: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     318: invokevirtual #104                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2ClearTextUpgrade:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     321: pop
     322: aload         14
     324: ifnull        338
     327: aload         77
     329: aload         14
     331: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     334: invokevirtual #107                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2ConnectionWindowSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     337: pop
     338: aload         15
     340: ifnull        354
     343: aload         77
     345: aload         15
     347: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     350: invokevirtual #110                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2KeepAliveTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     353: pop
     354: aload         16
     356: ifnull        370
     359: aload         77
     361: aload         16
     363: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     366: invokevirtual #113                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2MaxPoolSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     369: pop
     370: aload         17
     372: ifnull        386
     375: aload         77
     377: aload         17
     379: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     382: invokevirtual #116                // Method io/vertx/ext/consul/ConsulClientOptions.setHttp2MultiplexingLimit:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     385: pop
     386: aload         18
     388: ifnull        402
     391: aload         77
     393: aload         18
     395: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     398: invokevirtual #119                // Method io/vertx/ext/consul/ConsulClientOptions.setIdleTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     401: pop
     402: aload         19
     404: ifnull        415
     407: aload         77
     409: aload         19
     411: invokevirtual #123                // Method io/vertx/ext/consul/ConsulClientOptions.setIdleTimeoutUnit:(Ljava/util/concurrent/TimeUnit;)Lio/vertx/ext/consul/ConsulClientOptions;
     414: pop
     415: aload         20
     417: ifnull        428
     420: aload         77
     422: aload         20
     424: invokevirtual #127                // Method io/vertx/ext/consul/ConsulClientOptions.setInitialSettings:(Lio/vertx/core/http/Http2Settings;)Lio/vertx/ext/consul/ConsulClientOptions;
     427: pop
     428: aload         21
     430: ifnull        441
     433: aload         77
     435: aload         21
     437: invokevirtual #131                // Method io/vertx/ext/consul/ConsulClientOptions.setJdkSslEngineOptions:(Lio/vertx/core/net/JdkSSLEngineOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     440: pop
     441: aload         22
     443: ifnull        457
     446: aload         77
     448: aload         22
     450: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     453: invokevirtual #134                // Method io/vertx/ext/consul/ConsulClientOptions.setKeepAlive:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     456: pop
     457: aload         23
     459: ifnull        473
     462: aload         77
     464: aload         23
     466: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     469: invokevirtual #137                // Method io/vertx/ext/consul/ConsulClientOptions.setKeepAliveTimeout:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     472: pop
     473: aload         24
     475: ifnull        486
     478: aload         77
     480: aload         24
     482: invokevirtual #141                // Method io/vertx/ext/consul/ConsulClientOptions.setKeyStoreOptions:(Lio/vertx/core/net/JksOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     485: pop
     486: aload         25
     488: ifnull        499
     491: aload         77
     493: aload         25
     495: invokevirtual #144                // Method io/vertx/ext/consul/ConsulClientOptions.setLocalAddress:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     498: pop
     499: aload         26
     501: ifnull        515
     504: aload         77
     506: aload         26
     508: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     511: invokevirtual #147                // Method io/vertx/ext/consul/ConsulClientOptions.setLogActivity:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     514: pop
     515: aload         27
     517: ifnull        531
     520: aload         77
     522: aload         27
     524: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     527: invokevirtual #150                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxChunkSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     530: pop
     531: aload         28
     533: ifnull        547
     536: aload         77
     538: aload         28
     540: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     543: invokevirtual #153                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxHeaderSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     546: pop
     547: aload         29
     549: ifnull        563
     552: aload         77
     554: aload         29
     556: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     559: invokevirtual #156                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxInitialLineLength:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     562: pop
     563: aload         30
     565: ifnull        579
     568: aload         77
     570: aload         30
     572: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     575: invokevirtual #159                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxPoolSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     578: pop
     579: aload         31
     581: ifnull        595
     584: aload         77
     586: aload         31
     588: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     591: invokevirtual #162                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxRedirects:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     594: pop
     595: aload         32
     597: ifnull        611
     600: aload         77
     602: aload         32
     604: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     607: invokevirtual #165                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWaitQueueSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     610: pop
     611: aload         33
     613: ifnull        627
     616: aload         77
     618: aload         33
     620: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     623: invokevirtual #168                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWebsocketFrameSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     626: pop
     627: aload         34
     629: ifnull        643
     632: aload         77
     634: aload         34
     636: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     639: invokevirtual #171                // Method io/vertx/ext/consul/ConsulClientOptions.setMaxWebsocketMessageSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     642: pop
     643: aload         35
     645: ifnull        656
     648: aload         77
     650: aload         35
     652: invokevirtual #174                // Method io/vertx/ext/consul/ConsulClientOptions.setMetricsName:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
     655: pop
     656: aload         36
     658: ifnull        669
     661: aload         77
     663: aload         36
     665: invokevirtual #178                // Method io/vertx/ext/consul/ConsulClientOptions.setOpenSslEngineOptions:(Lio/vertx/core/net/OpenSSLEngineOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     668: pop
     669: aload         37
     671: ifnull        682
     674: aload         77
     676: aload         37
     678: invokevirtual #182                // Method io/vertx/ext/consul/ConsulClientOptions.setPemKeyCertOptions:(Lio/vertx/core/net/PemKeyCertOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     681: pop
     682: aload         38
     684: ifnull        695
     687: aload         77
     689: aload         38
     691: invokevirtual #186                // Method io/vertx/ext/consul/ConsulClientOptions.setPemTrustOptions:(Lio/vertx/core/net/PemTrustOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     694: pop
     695: aload         39
     697: ifnull        708
     700: aload         77
     702: aload         39
     704: invokevirtual #190                // Method io/vertx/ext/consul/ConsulClientOptions.setPfxKeyCertOptions:(Lio/vertx/core/net/PfxOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     707: pop
     708: aload         40
     710: ifnull        721
     713: aload         77
     715: aload         40
     717: invokevirtual #193                // Method io/vertx/ext/consul/ConsulClientOptions.setPfxTrustOptions:(Lio/vertx/core/net/PfxOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     720: pop
     721: aload         41
     723: ifnull        737
     726: aload         77
     728: aload         41
     730: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     733: invokevirtual #196                // Method io/vertx/ext/consul/ConsulClientOptions.setPipelining:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     736: pop
     737: aload         42
     739: ifnull        753
     742: aload         77
     744: aload         42
     746: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     749: invokevirtual #199                // Method io/vertx/ext/consul/ConsulClientOptions.setPipeliningLimit:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     752: pop
     753: aload         43
     755: ifnull        769
     758: aload         77
     760: aload         43
     762: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     765: invokevirtual #202                // Method io/vertx/ext/consul/ConsulClientOptions.setPoolCleanerPeriod:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     768: pop
     769: aload         44
     771: ifnull        782
     774: aload         77
     776: aload         44
     778: invokevirtual #206                // Method io/vertx/ext/consul/ConsulClientOptions.setProtocolVersion:(Lio/vertx/core/http/HttpVersion;)Lio/vertx/ext/consul/ConsulClientOptions;
     781: pop
     782: aload         45
     784: ifnull        795
     787: aload         77
     789: aload         45
     791: invokevirtual #210                // Method io/vertx/ext/consul/ConsulClientOptions.setProxyOptions:(Lio/vertx/core/net/ProxyOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
     794: pop
     795: aload         46
     797: ifnull        811
     800: aload         77
     802: aload         46
     804: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     807: invokevirtual #213                // Method io/vertx/ext/consul/ConsulClientOptions.setReceiveBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     810: pop
     811: aload         47
     813: ifnull        827
     816: aload         77
     818: aload         47
     820: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     823: invokevirtual #216                // Method io/vertx/ext/consul/ConsulClientOptions.setReuseAddress:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     826: pop
     827: aload         48
     829: ifnull        843
     832: aload         77
     834: aload         48
     836: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     839: invokevirtual #219                // Method io/vertx/ext/consul/ConsulClientOptions.setReusePort:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     842: pop
     843: aload         49
     845: ifnull        859
     848: aload         77
     850: aload         49
     852: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     855: invokevirtual #222                // Method io/vertx/ext/consul/ConsulClientOptions.setSendBufferSize:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     858: pop
     859: aload         50
     861: ifnull        875
     864: aload         77
     866: aload         50
     868: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     871: invokevirtual #225                // Method io/vertx/ext/consul/ConsulClientOptions.setSendUnmaskedFrames:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     874: pop
     875: aload         51
     877: ifnull        891
     880: aload         77
     882: aload         51
     884: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     887: invokevirtual #228                // Method io/vertx/ext/consul/ConsulClientOptions.setSoLinger:(I)Lio/vertx/ext/consul/ConsulClientOptions;
     890: pop
     891: aload         52
     893: ifnull        907
     896: aload         77
     898: aload         52
     900: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     903: invokevirtual #231                // Method io/vertx/ext/consul/ConsulClientOptions.setSsl:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     906: pop
     907: aload         53
     909: ifnull        923
     912: aload         77
     914: aload         53
     916: invokevirtual #237                // Method java/lang/Long.longValue:()J
     919: invokevirtual #241                // Method io/vertx/ext/consul/ConsulClientOptions.setSslHandshakeTimeout:(J)Lio/vertx/core/http/HttpClientOptions;
     922: pop
     923: aload         54
     925: ifnull        936
     928: aload         77
     930: aload         54
     932: invokevirtual #245                // Method io/vertx/ext/consul/ConsulClientOptions.setSslHandshakeTimeoutUnit:(Ljava/util/concurrent/TimeUnit;)Lio/vertx/core/http/HttpClientOptions;
     935: pop
     936: aload         55
     938: ifnull        952
     941: aload         77
     943: aload         55
     945: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     948: invokevirtual #248                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpCork:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     951: pop
     952: aload         56
     954: ifnull        968
     957: aload         77
     959: aload         56
     961: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     964: invokevirtual #251                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpFastOpen:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     967: pop
     968: aload         57
     970: ifnull        984
     973: aload         77
     975: aload         57
     977: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     980: invokevirtual #254                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpKeepAlive:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     983: pop
     984: aload         58
     986: ifnull        1000
     989: aload         77
     991: aload         58
     993: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
     996: invokevirtual #257                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpNoDelay:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
     999: pop
    1000: aload         59
    1002: ifnull        1016
    1005: aload         77
    1007: aload         59
    1009: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1012: invokevirtual #260                // Method io/vertx/ext/consul/ConsulClientOptions.setTcpQuickAck:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1015: pop
    1016: aload         60
    1018: ifnull        1032
    1021: aload         77
    1023: aload         60
    1025: invokevirtual #237                // Method java/lang/Long.longValue:()J
    1028: invokevirtual #264                // Method io/vertx/ext/consul/ConsulClientOptions.setTimeout:(J)Lio/vertx/ext/consul/ConsulClientOptions;
    1031: pop
    1032: aload         61
    1034: ifnull        1048
    1037: aload         77
    1039: aload         61
    1041: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
    1044: invokevirtual #267                // Method io/vertx/ext/consul/ConsulClientOptions.setTrafficClass:(I)Lio/vertx/ext/consul/ConsulClientOptions;
    1047: pop
    1048: aload         62
    1050: ifnull        1064
    1053: aload         77
    1055: aload         62
    1057: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1060: invokevirtual #270                // Method io/vertx/ext/consul/ConsulClientOptions.setTrustAll:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1063: pop
    1064: aload         63
    1066: ifnull        1077
    1069: aload         77
    1071: aload         63
    1073: invokevirtual #273                // Method io/vertx/ext/consul/ConsulClientOptions.setTrustStoreOptions:(Lio/vertx/core/net/JksOptions;)Lio/vertx/ext/consul/ConsulClientOptions;
    1076: pop
    1077: aload         64
    1079: ifnull        1093
    1082: aload         77
    1084: aload         64
    1086: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1089: invokevirtual #276                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUseCompression:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1092: pop
    1093: aload         65
    1095: ifnull        1109
    1098: aload         77
    1100: aload         65
    1102: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1105: invokevirtual #280                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUsePerFrameWebsocketCompression:(Z)Lio/vertx/core/http/HttpClientOptions;
    1108: pop
    1109: aload         66
    1111: ifnull        1125
    1114: aload         77
    1116: aload         66
    1118: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1121: invokevirtual #283                // Method io/vertx/ext/consul/ConsulClientOptions.setTryUsePerMessageWebsocketCompression:(Z)Lio/vertx/core/http/HttpClientOptions;
    1124: pop
    1125: aload         67
    1127: ifnull        1141
    1130: aload         77
    1132: aload         67
    1134: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1137: invokevirtual #286                // Method io/vertx/ext/consul/ConsulClientOptions.setUseAlpn:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1140: pop
    1141: aload         68
    1143: ifnull        1154
    1146: aload         77
    1148: aload         68
    1150: invokevirtual #289                // Method io/vertx/ext/consul/ConsulClientOptions.setUserAgent:(Ljava/lang/String;)Lio/vertx/ext/consul/ConsulClientOptions;
    1153: pop
    1154: aload         69
    1156: ifnull        1170
    1159: aload         77
    1161: aload         69
    1163: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1166: invokevirtual #292                // Method io/vertx/ext/consul/ConsulClientOptions.setUserAgentEnabled:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1169: pop
    1170: aload         70
    1172: ifnull        1186
    1175: aload         77
    1177: aload         70
    1179: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1182: invokevirtual #295                // Method io/vertx/ext/consul/ConsulClientOptions.setVerifyHost:(Z)Lio/vertx/ext/consul/ConsulClientOptions;
    1185: pop
    1186: aload         71
    1188: ifnull        1202
    1191: aload         77
    1193: aload         71
    1195: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1198: invokevirtual #298                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionAllowClientNoContext:(Z)Lio/vertx/core/http/HttpClientOptions;
    1201: pop
    1202: aload         72
    1204: ifnull        1218
    1207: aload         77
    1209: aload         72
    1211: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
    1214: invokevirtual #302                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionLevel:(I)Lio/vertx/core/http/HttpClientOptions;
    1217: pop
    1218: aload         73
    1220: ifnull        1234
    1223: aload         77
    1225: aload         73
    1227: invokevirtual #94                 // Method java/lang/Boolean.booleanValue:()Z
    1230: invokevirtual #305                // Method io/vertx/ext/consul/ConsulClientOptions.setWebsocketCompressionRequestServerNoContext:(Z)Lio/vertx/core/http/HttpClientOptions;
    1233: pop
    1234: getstatic     #311                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
    1237: pop
    1238: aload         74
    1240: areturn

  public static io.vertx.ext.consul.ConsulClientOptions ConsulClientOptions$default(java.lang.String, java.lang.Iterable, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.util.concurrent.TimeUnit, io.vertx.core.http.Http2Settings, io.vertx.core.net.JdkSSLEngineOptions, java.lang.Boolean, java.lang.Integer, io.vertx.core.net.JksOptions, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, io.vertx.core.net.OpenSSLEngineOptions, io.vertx.core.net.PemKeyCertOptions, io.vertx.core.net.PemTrustOptions, io.vertx.core.net.PfxOptions, io.vertx.core.net.PfxOptions, java.lang.Boolean, java.lang.Integer, java.lang.Integer, io.vertx.core.http.HttpVersion, io.vertx.core.net.ProxyOptions, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, java.lang.Long, java.util.concurrent.TimeUnit, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Long, java.lang.Integer, java.lang.Boolean, io.vertx.core.net.JksOptions, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.Boolean, int, int, int, java.lang.Object);
    Code:
       0: iload         74
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #57                 // class java/lang/String
      11: astore_0
      12: iload         74
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #41                 // class java/lang/Iterable
      23: astore_1
      24: iload         74
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #31                 // class java/lang/Integer
      35: astore_2
      36: iload         74
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #41                 // class java/lang/Iterable
      48: astore_3
      49: iload         74
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #41                 // class java/lang/Iterable
      61: astore        4
      63: iload         74
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #57                 // class java/lang/String
      75: astore        5
      77: iload         74
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #31                 // class java/lang/Integer
      89: astore        6
      91: iload         74
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #57                 // class java/lang/String
     104: astore        7
     106: iload         74
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #31                 // class java/lang/Integer
     119: astore        8
     121: iload         74
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #41                 // class java/lang/Iterable
     134: astore        9
     136: iload         74
     138: sipush        1024
     141: iand
     142: ifeq          151
     145: aconst_null
     146: checkcast     #41                 // class java/lang/Iterable
     149: astore        10
     151: iload         74
     153: sipush        2048
     156: iand
     157: ifeq          166
     160: aconst_null
     161: checkcast     #91                 // class java/lang/Boolean
     164: astore        11
     166: iload         74
     168: sipush        4096
     171: iand
     172: ifeq          181
     175: aconst_null
     176: checkcast     #91                 // class java/lang/Boolean
     179: astore        12
     181: iload         74
     183: sipush        8192
     186: iand
     187: ifeq          196
     190: aconst_null
     191: checkcast     #91                 // class java/lang/Boolean
     194: astore        13
     196: iload         74
     198: sipush        16384
     201: iand
     202: ifeq          211
     205: aconst_null
     206: checkcast     #31                 // class java/lang/Integer
     209: astore        14
     211: iload         74
     213: ldc_w         #429                // int 32768
     216: iand
     217: ifeq          226
     220: aconst_null
     221: checkcast     #31                 // class java/lang/Integer
     224: astore        15
     226: iload         74
     228: ldc_w         #430                // int 65536
     231: iand
     232: ifeq          241
     235: aconst_null
     236: checkcast     #31                 // class java/lang/Integer
     239: astore        16
     241: iload         74
     243: ldc_w         #431                // int 131072
     246: iand
     247: ifeq          256
     250: aconst_null
     251: checkcast     #31                 // class java/lang/Integer
     254: astore        17
     256: iload         74
     258: ldc_w         #432                // int 262144
     261: iand
     262: ifeq          271
     265: aconst_null
     266: checkcast     #31                 // class java/lang/Integer
     269: astore        18
     271: iload         74
     273: ldc_w         #433                // int 524288
     276: iand
     277: ifeq          286
     280: aconst_null
     281: checkcast     #408                // class java/util/concurrent/TimeUnit
     284: astore        19
     286: iload         74
     288: ldc_w         #434                // int 1048576
     291: iand
     292: ifeq          301
     295: aconst_null
     296: checkcast     #410                // class io/vertx/core/http/Http2Settings
     299: astore        20
     301: iload         74
     303: ldc_w         #435                // int 2097152
     306: iand
     307: ifeq          316
     310: aconst_null
     311: checkcast     #412                // class io/vertx/core/net/JdkSSLEngineOptions
     314: astore        21
     316: iload         74
     318: ldc_w         #436                // int 4194304
     321: iand
     322: ifeq          331
     325: aconst_null
     326: checkcast     #91                 // class java/lang/Boolean
     329: astore        22
     331: iload         74
     333: ldc_w         #437                // int 8388608
     336: iand
     337: ifeq          346
     340: aconst_null
     341: checkcast     #31                 // class java/lang/Integer
     344: astore        23
     346: iload         74
     348: ldc_w         #438                // int 16777216
     351: iand
     352: ifeq          361
     355: aconst_null
     356: checkcast     #414                // class io/vertx/core/net/JksOptions
     359: astore        24
     361: iload         74
     363: ldc_w         #439                // int 33554432
     366: iand
     367: ifeq          376
     370: aconst_null
     371: checkcast     #57                 // class java/lang/String
     374: astore        25
     376: iload         74
     378: ldc_w         #440                // int 67108864
     381: iand
     382: ifeq          391
     385: aconst_null
     386: checkcast     #91                 // class java/lang/Boolean
     389: astore        26
     391: iload         74
     393: ldc_w         #441                // int 134217728
     396: iand
     397: ifeq          406
     400: aconst_null
     401: checkcast     #31                 // class java/lang/Integer
     404: astore        27
     406: iload         74
     408: ldc_w         #442                // int 268435456
     411: iand
     412: ifeq          421
     415: aconst_null
     416: checkcast     #31                 // class java/lang/Integer
     419: astore        28
     421: iload         74
     423: ldc_w         #443                // int 536870912
     426: iand
     427: ifeq          436
     430: aconst_null
     431: checkcast     #31                 // class java/lang/Integer
     434: astore        29
     436: iload         74
     438: ldc_w         #444                // int 1073741824
     441: iand
     442: ifeq          451
     445: aconst_null
     446: checkcast     #31                 // class java/lang/Integer
     449: astore        30
     451: iload         74
     453: ldc_w         #445                // int -2147483648
     456: iand
     457: ifeq          466
     460: aconst_null
     461: checkcast     #31                 // class java/lang/Integer
     464: astore        31
     466: iload         75
     468: iconst_1
     469: iand
     470: ifeq          479
     473: aconst_null
     474: checkcast     #31                 // class java/lang/Integer
     477: astore        32
     479: iload         75
     481: iconst_2
     482: iand
     483: ifeq          492
     486: aconst_null
     487: checkcast     #31                 // class java/lang/Integer
     490: astore        33
     492: iload         75
     494: iconst_4
     495: iand
     496: ifeq          505
     499: aconst_null
     500: checkcast     #31                 // class java/lang/Integer
     503: astore        34
     505: iload         75
     507: bipush        8
     509: iand
     510: ifeq          519
     513: aconst_null
     514: checkcast     #57                 // class java/lang/String
     517: astore        35
     519: iload         75
     521: bipush        16
     523: iand
     524: ifeq          533
     527: aconst_null
     528: checkcast     #416                // class io/vertx/core/net/OpenSSLEngineOptions
     531: astore        36
     533: iload         75
     535: bipush        32
     537: iand
     538: ifeq          547
     541: aconst_null
     542: checkcast     #418                // class io/vertx/core/net/PemKeyCertOptions
     545: astore        37
     547: iload         75
     549: bipush        64
     551: iand
     552: ifeq          561
     555: aconst_null
     556: checkcast     #420                // class io/vertx/core/net/PemTrustOptions
     559: astore        38
     561: iload         75
     563: sipush        128
     566: iand
     567: ifeq          576
     570: aconst_null
     571: checkcast     #422                // class io/vertx/core/net/PfxOptions
     574: astore        39
     576: iload         75
     578: sipush        256
     581: iand
     582: ifeq          591
     585: aconst_null
     586: checkcast     #422                // class io/vertx/core/net/PfxOptions
     589: astore        40
     591: iload         75
     593: sipush        512
     596: iand
     597: ifeq          606
     600: aconst_null
     601: checkcast     #91                 // class java/lang/Boolean
     604: astore        41
     606: iload         75
     608: sipush        1024
     611: iand
     612: ifeq          621
     615: aconst_null
     616: checkcast     #31                 // class java/lang/Integer
     619: astore        42
     621: iload         75
     623: sipush        2048
     626: iand
     627: ifeq          636
     630: aconst_null
     631: checkcast     #31                 // class java/lang/Integer
     634: astore        43
     636: iload         75
     638: sipush        4096
     641: iand
     642: ifeq          651
     645: aconst_null
     646: checkcast     #424                // class io/vertx/core/http/HttpVersion
     649: astore        44
     651: iload         75
     653: sipush        8192
     656: iand
     657: ifeq          666
     660: aconst_null
     661: checkcast     #426                // class io/vertx/core/net/ProxyOptions
     664: astore        45
     666: iload         75
     668: sipush        16384
     671: iand
     672: ifeq          681
     675: aconst_null
     676: checkcast     #31                 // class java/lang/Integer
     679: astore        46
     681: iload         75
     683: ldc_w         #429                // int 32768
     686: iand
     687: ifeq          696
     690: aconst_null
     691: checkcast     #91                 // class java/lang/Boolean
     694: astore        47
     696: iload         75
     698: ldc_w         #430                // int 65536
     701: iand
     702: ifeq          711
     705: aconst_null
     706: checkcast     #91                 // class java/lang/Boolean
     709: astore        48
     711: iload         75
     713: ldc_w         #431                // int 131072
     716: iand
     717: ifeq          726
     720: aconst_null
     721: checkcast     #31                 // class java/lang/Integer
     724: astore        49
     726: iload         75
     728: ldc_w         #432                // int 262144
     731: iand
     732: ifeq          741
     735: aconst_null
     736: checkcast     #91                 // class java/lang/Boolean
     739: astore        50
     741: iload         75
     743: ldc_w         #433                // int 524288
     746: iand
     747: ifeq          756
     750: aconst_null
     751: checkcast     #31                 // class java/lang/Integer
     754: astore        51
     756: iload         75
     758: ldc_w         #434                // int 1048576
     761: iand
     762: ifeq          771
     765: aconst_null
     766: checkcast     #91                 // class java/lang/Boolean
     769: astore        52
     771: iload         75
     773: ldc_w         #435                // int 2097152
     776: iand
     777: ifeq          786
     780: aconst_null
     781: checkcast     #233                // class java/lang/Long
     784: astore        53
     786: iload         75
     788: ldc_w         #436                // int 4194304
     791: iand
     792: ifeq          801
     795: aconst_null
     796: checkcast     #408                // class java/util/concurrent/TimeUnit
     799: astore        54
     801: iload         75
     803: ldc_w         #437                // int 8388608
     806: iand
     807: ifeq          816
     810: aconst_null
     811: checkcast     #91                 // class java/lang/Boolean
     814: astore        55
     816: iload         75
     818: ldc_w         #438                // int 16777216
     821: iand
     822: ifeq          831
     825: aconst_null
     826: checkcast     #91                 // class java/lang/Boolean
     829: astore        56
     831: iload         75
     833: ldc_w         #439                // int 33554432
     836: iand
     837: ifeq          846
     840: aconst_null
     841: checkcast     #91                 // class java/lang/Boolean
     844: astore        57
     846: iload         75
     848: ldc_w         #440                // int 67108864
     851: iand
     852: ifeq          861
     855: aconst_null
     856: checkcast     #91                 // class java/lang/Boolean
     859: astore        58
     861: iload         75
     863: ldc_w         #441                // int 134217728
     866: iand
     867: ifeq          876
     870: aconst_null
     871: checkcast     #91                 // class java/lang/Boolean
     874: astore        59
     876: iload         75
     878: ldc_w         #442                // int 268435456
     881: iand
     882: ifeq          891
     885: aconst_null
     886: checkcast     #233                // class java/lang/Long
     889: astore        60
     891: iload         75
     893: ldc_w         #443                // int 536870912
     896: iand
     897: ifeq          906
     900: aconst_null
     901: checkcast     #31                 // class java/lang/Integer
     904: astore        61
     906: iload         75
     908: ldc_w         #444                // int 1073741824
     911: iand
     912: ifeq          921
     915: aconst_null
     916: checkcast     #91                 // class java/lang/Boolean
     919: astore        62
     921: iload         75
     923: ldc_w         #445                // int -2147483648
     926: iand
     927: ifeq          936
     930: aconst_null
     931: checkcast     #414                // class io/vertx/core/net/JksOptions
     934: astore        63
     936: iload         76
     938: iconst_1
     939: iand
     940: ifeq          949
     943: aconst_null
     944: checkcast     #91                 // class java/lang/Boolean
     947: astore        64
     949: iload         76
     951: iconst_2
     952: iand
     953: ifeq          962
     956: aconst_null
     957: checkcast     #91                 // class java/lang/Boolean
     960: astore        65
     962: iload         76
     964: iconst_4
     965: iand
     966: ifeq          975
     969: aconst_null
     970: checkcast     #91                 // class java/lang/Boolean
     973: astore        66
     975: iload         76
     977: bipush        8
     979: iand
     980: ifeq          989
     983: aconst_null
     984: checkcast     #91                 // class java/lang/Boolean
     987: astore        67
     989: iload         76
     991: bipush        16
     993: iand
     994: ifeq          1003
     997: aconst_null
     998: checkcast     #57                 // class java/lang/String
    1001: astore        68
    1003: iload         76
    1005: bipush        32
    1007: iand
    1008: ifeq          1017
    1011: aconst_null
    1012: checkcast     #91                 // class java/lang/Boolean
    1015: astore        69
    1017: iload         76
    1019: bipush        64
    1021: iand
    1022: ifeq          1031
    1025: aconst_null
    1026: checkcast     #91                 // class java/lang/Boolean
    1029: astore        70
    1031: iload         76
    1033: sipush        128
    1036: iand
    1037: ifeq          1046
    1040: aconst_null
    1041: checkcast     #91                 // class java/lang/Boolean
    1044: astore        71
    1046: iload         76
    1048: sipush        256
    1051: iand
    1052: ifeq          1061
    1055: aconst_null
    1056: checkcast     #31                 // class java/lang/Integer
    1059: astore        72
    1061: iload         76
    1063: sipush        512
    1066: iand
    1067: ifeq          1076
    1070: aconst_null
    1071: checkcast     #91                 // class java/lang/Boolean
    1074: astore        73
    1076: aload_0
    1077: aload_1
    1078: aload_2
    1079: aload_3
    1080: aload         4
    1082: aload         5
    1084: aload         6
    1086: aload         7
    1088: aload         8
    1090: aload         9
    1092: aload         10
    1094: aload         11
    1096: aload         12
    1098: aload         13
    1100: aload         14
    1102: aload         15
    1104: aload         16
    1106: aload         17
    1108: aload         18
    1110: aload         19
    1112: aload         20
    1114: aload         21
    1116: aload         22
    1118: aload         23
    1120: aload         24
    1122: aload         25
    1124: aload         26
    1126: aload         27
    1128: aload         28
    1130: aload         29
    1132: aload         30
    1134: aload         31
    1136: aload         32
    1138: aload         33
    1140: aload         34
    1142: aload         35
    1144: aload         36
    1146: aload         37
    1148: aload         38
    1150: aload         39
    1152: aload         40
    1154: aload         41
    1156: aload         42
    1158: aload         43
    1160: aload         44
    1162: aload         45
    1164: aload         46
    1166: aload         47
    1168: aload         48
    1170: aload         49
    1172: aload         50
    1174: aload         51
    1176: aload         52
    1178: aload         53
    1180: aload         54
    1182: aload         55
    1184: aload         56
    1186: aload         57
    1188: aload         58
    1190: aload         59
    1192: aload         60
    1194: aload         61
    1196: aload         62
    1198: aload         63
    1200: aload         64
    1202: aload         65
    1204: aload         66
    1206: aload         67
    1208: aload         68
    1210: aload         69
    1212: aload         70
    1214: aload         71
    1216: aload         72
    1218: aload         73
    1220: invokestatic  #460                // Method ConsulClientOptions:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/concurrent/TimeUnit;Lio/vertx/core/http/Http2Settings;Lio/vertx/core/net/JdkSSLEngineOptions;Ljava/lang/Boolean;Ljava/lang/Integer;Lio/vertx/core/net/JksOptions;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Lio/vertx/core/net/OpenSSLEngineOptions;Lio/vertx/core/net/PemKeyCertOptions;Lio/vertx/core/net/PemTrustOptions;Lio/vertx/core/net/PfxOptions;Lio/vertx/core/net/PfxOptions;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Lio/vertx/core/http/HttpVersion;Lio/vertx/core/net/ProxyOptions;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Boolean;Lio/vertx/core/net/JksOptions;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;)Lio/vertx/ext/consul/ConsulClientOptions;
    1223: areturn
}
