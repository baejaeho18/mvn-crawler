Compiled from "TxnResponse.kt"
public final class io.vertx.kotlin.ext.consul.TxnResponseKt {
  public static final io.vertx.ext.consul.TxnResponse txnResponseOf(java.lang.Iterable<? extends io.vertx.ext.consul.TxnError>);
    Code:
       0: new           #11                 // class io/vertx/ext/consul/TxnResponse
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/consul/TxnResponse."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iconst_0
      11: istore_3
      12: aload_1
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload_0
      19: ifnull        63
      22: aload_0
      23: invokeinterface #21,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore        6
      30: aload         6
      32: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          63
      40: aload         6
      42: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #33                 // class io/vertx/ext/consul/TxnError
      50: astore        7
      52: aload         4
      54: aload         7
      56: invokevirtual #37                 // Method io/vertx/ext/consul/TxnResponse.addError:(Lio/vertx/ext/consul/TxnError;)Lio/vertx/ext/consul/TxnResponse;
      59: pop
      60: goto          30
      63: nop
      64: aload_1
      65: areturn

  public static io.vertx.ext.consul.TxnResponse txnResponseOf$default(java.lang.Iterable, int, java.lang.Object);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aconst_null
       7: checkcast     #17                 // class java/lang/Iterable
      10: astore_0
      11: aload_0
      12: invokestatic  #49                 // Method txnResponseOf:(Ljava/lang/Iterable;)Lio/vertx/ext/consul/TxnResponse;
      15: areturn

  public static final io.vertx.ext.consul.TxnResponse TxnResponse(java.lang.Iterable<? extends io.vertx.ext.consul.TxnError>);
    Code:
       0: new           #11                 // class io/vertx/ext/consul/TxnResponse
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/consul/TxnResponse."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iconst_0
      11: istore_3
      12: aload_1
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload_0
      19: ifnull        63
      22: aload_0
      23: invokeinterface #21,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore        6
      30: aload         6
      32: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          63
      40: aload         6
      42: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #33                 // class io/vertx/ext/consul/TxnError
      50: astore        7
      52: aload         4
      54: aload         7
      56: invokevirtual #37                 // Method io/vertx/ext/consul/TxnResponse.addError:(Lio/vertx/ext/consul/TxnError;)Lio/vertx/ext/consul/TxnResponse;
      59: pop
      60: goto          30
      63: nop
      64: aload_1
      65: areturn

  public static io.vertx.ext.consul.TxnResponse TxnResponse$default(java.lang.Iterable, int, java.lang.Object);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aconst_null
       7: checkcast     #17                 // class java/lang/Iterable
      10: astore_0
      11: aload_0
      12: invokestatic  #62                 // Method TxnResponse:(Ljava/lang/Iterable;)Lio/vertx/ext/consul/TxnResponse;
      15: areturn
}
