Compiled from "BridgeOptions.kt"
public final class io.vertx.kotlin.ext.web.handler.sockjs.BridgeOptionsKt {
  public static final io.vertx.ext.web.handler.sockjs.BridgeOptions bridgeOptionsOf(java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Integer, java.lang.Integer, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Long, java.lang.Long);
    Code:
       0: new           #11                 // class io/vertx/ext/web/handler/sockjs/BridgeOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions."<init>":()V
       7: astore        8
       9: iconst_0
      10: istore        9
      12: iconst_0
      13: istore        10
      15: aload         8
      17: astore        11
      19: iconst_0
      20: istore        12
      22: aload_0
      23: ifnull        35
      26: aload         11
      28: aload_0
      29: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      32: invokevirtual #25                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setInboundPermitted:(Ljava/util/List;)V
      35: aload_1
      36: ifnull        80
      39: aload_1
      40: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      45: astore        13
      47: aload         13
      49: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          80
      57: aload         13
      59: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #43                 // class io/vertx/ext/bridge/PermittedOptions
      67: astore        14
      69: aload         11
      71: aload         14
      73: invokevirtual #47                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.addInboundPermitted:(Lio/vertx/ext/bridge/PermittedOptions;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
      76: pop
      77: goto          47
      80: aload_2
      81: ifnull        94
      84: aload         11
      86: aload_2
      87: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
      90: invokevirtual #57                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setMaxAddressLength:(I)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
      93: pop
      94: aload_3
      95: ifnull        108
      98: aload         11
     100: aload_3
     101: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
     104: invokevirtual #60                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setMaxHandlersPerSocket:(I)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     107: pop
     108: aload         4
     110: ifnull        123
     113: aload         11
     115: aload         4
     117: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     120: invokevirtual #63                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setOutboundPermitted:(Ljava/util/List;)V
     123: aload         5
     125: ifnull        170
     128: aload         5
     130: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     135: astore        13
     137: aload         13
     139: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: ifeq          170
     147: aload         13
     149: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #43                 // class io/vertx/ext/bridge/PermittedOptions
     157: astore        14
     159: aload         11
     161: aload         14
     163: invokevirtual #66                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.addOutboundPermitted:(Lio/vertx/ext/bridge/PermittedOptions;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     166: pop
     167: goto          137
     170: aload         6
     172: ifnull        186
     175: aload         11
     177: aload         6
     179: invokevirtual #72                 // Method java/lang/Long.longValue:()J
     182: invokevirtual #76                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setPingTimeout:(J)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     185: pop
     186: aload         7
     188: ifnull        202
     191: aload         11
     193: aload         7
     195: invokevirtual #72                 // Method java/lang/Long.longValue:()J
     198: invokevirtual #79                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setReplyTimeout:(J)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     201: pop
     202: nop
     203: aload         8
     205: areturn

  public static io.vertx.ext.web.handler.sockjs.BridgeOptions bridgeOptionsOf$default(java.lang.Iterable, java.lang.Iterable, java.lang.Integer, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.Long, java.lang.Long, int, java.lang.Object);
    Code:
       0: iload         8
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #27                 // class java/lang/Iterable
      11: astore_0
      12: iload         8
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #27                 // class java/lang/Iterable
      23: astore_1
      24: iload         8
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #49                 // class java/lang/Integer
      35: astore_2
      36: iload         8
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #49                 // class java/lang/Integer
      48: astore_3
      49: iload         8
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #27                 // class java/lang/Iterable
      61: astore        4
      63: iload         8
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #27                 // class java/lang/Iterable
      75: astore        5
      77: iload         8
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #68                 // class java/lang/Long
      89: astore        6
      91: iload         8
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #68                 // class java/lang/Long
     104: astore        7
     106: aload_0
     107: aload_1
     108: aload_2
     109: aload_3
     110: aload         4
     112: aload         5
     114: aload         6
     116: aload         7
     118: invokestatic  #100                // Method bridgeOptionsOf:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Long;Ljava/lang/Long;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     121: areturn

  public static final io.vertx.ext.web.handler.sockjs.BridgeOptions BridgeOptions(java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Integer, java.lang.Integer, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Iterable<? extends io.vertx.ext.bridge.PermittedOptions>, java.lang.Long, java.lang.Long);
    Code:
       0: new           #11                 // class io/vertx/ext/web/handler/sockjs/BridgeOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions."<init>":()V
       7: astore        8
       9: iconst_0
      10: istore        9
      12: iconst_0
      13: istore        10
      15: aload         8
      17: astore        11
      19: iconst_0
      20: istore        12
      22: aload_0
      23: ifnull        35
      26: aload         11
      28: aload_0
      29: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
      32: invokevirtual #25                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setInboundPermitted:(Ljava/util/List;)V
      35: aload_1
      36: ifnull        80
      39: aload_1
      40: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      45: astore        13
      47: aload         13
      49: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          80
      57: aload         13
      59: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #43                 // class io/vertx/ext/bridge/PermittedOptions
      67: astore        14
      69: aload         11
      71: aload         14
      73: invokevirtual #47                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.addInboundPermitted:(Lio/vertx/ext/bridge/PermittedOptions;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
      76: pop
      77: goto          47
      80: aload_2
      81: ifnull        94
      84: aload         11
      86: aload_2
      87: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
      90: invokevirtual #57                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setMaxAddressLength:(I)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
      93: pop
      94: aload_3
      95: ifnull        108
      98: aload         11
     100: aload_3
     101: invokevirtual #53                 // Method java/lang/Integer.intValue:()I
     104: invokevirtual #60                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setMaxHandlersPerSocket:(I)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     107: pop
     108: aload         4
     110: ifnull        123
     113: aload         11
     115: aload         4
     117: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     120: invokevirtual #63                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setOutboundPermitted:(Ljava/util/List;)V
     123: aload         5
     125: ifnull        170
     128: aload         5
     130: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     135: astore        13
     137: aload         13
     139: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: ifeq          170
     147: aload         13
     149: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #43                 // class io/vertx/ext/bridge/PermittedOptions
     157: astore        14
     159: aload         11
     161: aload         14
     163: invokevirtual #66                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.addOutboundPermitted:(Lio/vertx/ext/bridge/PermittedOptions;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     166: pop
     167: goto          137
     170: aload         6
     172: ifnull        186
     175: aload         11
     177: aload         6
     179: invokevirtual #72                 // Method java/lang/Long.longValue:()J
     182: invokevirtual #76                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setPingTimeout:(J)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     185: pop
     186: aload         7
     188: ifnull        202
     191: aload         11
     193: aload         7
     195: invokevirtual #72                 // Method java/lang/Long.longValue:()J
     198: invokevirtual #79                 // Method io/vertx/ext/web/handler/sockjs/BridgeOptions.setReplyTimeout:(J)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     201: pop
     202: nop
     203: aload         8
     205: areturn

  public static io.vertx.ext.web.handler.sockjs.BridgeOptions BridgeOptions$default(java.lang.Iterable, java.lang.Iterable, java.lang.Integer, java.lang.Integer, java.lang.Iterable, java.lang.Iterable, java.lang.Long, java.lang.Long, int, java.lang.Object);
    Code:
       0: iload         8
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #27                 // class java/lang/Iterable
      11: astore_0
      12: iload         8
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #27                 // class java/lang/Iterable
      23: astore_1
      24: iload         8
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #49                 // class java/lang/Integer
      35: astore_2
      36: iload         8
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #49                 // class java/lang/Integer
      48: astore_3
      49: iload         8
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #27                 // class java/lang/Iterable
      61: astore        4
      63: iload         8
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #27                 // class java/lang/Iterable
      75: astore        5
      77: iload         8
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #68                 // class java/lang/Long
      89: astore        6
      91: iload         8
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #68                 // class java/lang/Long
     104: astore        7
     106: aload_0
     107: aload_1
     108: aload_2
     109: aload_3
     110: aload         4
     112: aload         5
     114: aload         6
     116: aload         7
     118: invokestatic  #113                // Method BridgeOptions:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Long;Ljava/lang/Long;)Lio/vertx/ext/web/handler/sockjs/BridgeOptions;
     121: areturn
}
