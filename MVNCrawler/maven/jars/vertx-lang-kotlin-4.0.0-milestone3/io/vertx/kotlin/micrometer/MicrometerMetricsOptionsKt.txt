Compiled from "MicrometerMetricsOptions.kt"
public final class io.vertx.kotlin.micrometer.MicrometerMetricsOptionsKt {
  public static final io.vertx.micrometer.MicrometerMetricsOptions micrometerMetricsOptionsOf(java.lang.Iterable<? extends io.vertx.micrometer.MetricsDomain>, java.lang.Boolean, io.vertx.micrometer.VertxInfluxDbOptions, io.vertx.micrometer.VertxJmxMetricsOptions, java.lang.Boolean, java.lang.Iterable<? extends io.vertx.micrometer.Match>, java.lang.Iterable<? extends io.vertx.micrometer.Match>, java.lang.Iterable<? extends io.vertx.micrometer.Label>, io.vertx.micrometer.VertxPrometheusOptions, java.lang.String);
    Code:
       0: new           #11                 // class io/vertx/micrometer/MicrometerMetricsOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/micrometer/MicrometerMetricsOptions."<init>":()V
       7: astore        10
       9: iconst_0
      10: istore        11
      12: iconst_0
      13: istore        12
      15: aload         10
      17: astore        13
      19: iconst_0
      20: istore        14
      22: aload_0
      23: ifnull        36
      26: aload         13
      28: aload_0
      29: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
      32: invokevirtual #25                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setDisabledMetricsCategories:(Ljava/util/Set;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      35: pop
      36: aload_1
      37: ifnull        50
      40: aload         13
      42: aload_1
      43: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      46: invokevirtual #35                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setEnabled:(Z)Lio/vertx/micrometer/MicrometerMetricsOptions;
      49: pop
      50: aload_2
      51: ifnull        61
      54: aload         13
      56: aload_2
      57: invokevirtual #39                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setInfluxDbOptions:(Lio/vertx/micrometer/VertxInfluxDbOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      60: pop
      61: aload_3
      62: ifnull        72
      65: aload         13
      67: aload_3
      68: invokevirtual #43                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setJmxMetricsOptions:(Lio/vertx/micrometer/VertxJmxMetricsOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      71: pop
      72: aload         4
      74: ifnull        88
      77: aload         13
      79: aload         4
      81: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      84: invokevirtual #46                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setJvmMetricsEnabled:(Z)Lio/vertx/micrometer/MicrometerMetricsOptions;
      87: pop
      88: aload         5
      90: ifnull        104
      93: aload         13
      95: aload         5
      97: invokestatic  #50                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     100: invokevirtual #54                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setLabelMatches:(Ljava/util/List;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     103: pop
     104: aload         6
     106: ifnull        151
     109: aload         6
     111: invokeinterface #60,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     116: astore        15
     118: aload         15
     120: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          151
     128: aload         15
     130: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #71                 // class io/vertx/micrometer/Match
     138: astore        16
     140: aload         13
     142: aload         16
     144: invokevirtual #75                 // Method io/vertx/micrometer/MicrometerMetricsOptions.addLabelMatch:(Lio/vertx/micrometer/Match;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     147: pop
     148: goto          118
     151: aload         7
     153: ifnull        167
     156: aload         13
     158: aload         7
     160: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
     163: invokevirtual #78                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setLabels:(Ljava/util/Set;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     166: pop
     167: aload         8
     169: ifnull        180
     172: aload         13
     174: aload         8
     176: invokevirtual #82                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setPrometheusOptions:(Lio/vertx/micrometer/VertxPrometheusOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     179: pop
     180: aload         9
     182: ifnull        193
     185: aload         13
     187: aload         9
     189: invokevirtual #86                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setRegistryName:(Ljava/lang/String;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     192: pop
     193: nop
     194: aload         10
     196: areturn

  public static io.vertx.micrometer.MicrometerMetricsOptions micrometerMetricsOptionsOf$default(java.lang.Iterable, java.lang.Boolean, io.vertx.micrometer.VertxInfluxDbOptions, io.vertx.micrometer.VertxJmxMetricsOptions, java.lang.Boolean, java.lang.Iterable, java.lang.Iterable, java.lang.Iterable, io.vertx.micrometer.VertxPrometheusOptions, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         10
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #56                 // class java/lang/Iterable
      11: astore_0
      12: iload         10
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #27                 // class java/lang/Boolean
      23: astore_1
      24: iload         10
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #110                // class io/vertx/micrometer/VertxInfluxDbOptions
      35: astore_2
      36: iload         10
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #112                // class io/vertx/micrometer/VertxJmxMetricsOptions
      48: astore_3
      49: iload         10
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #27                 // class java/lang/Boolean
      61: astore        4
      63: iload         10
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #56                 // class java/lang/Iterable
      75: astore        5
      77: iload         10
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #56                 // class java/lang/Iterable
      89: astore        6
      91: iload         10
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #56                 // class java/lang/Iterable
     104: astore        7
     106: iload         10
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #114                // class io/vertx/micrometer/VertxPrometheusOptions
     119: astore        8
     121: iload         10
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #116                // class java/lang/String
     134: astore        9
     136: aload_0
     137: aload_1
     138: aload_2
     139: aload_3
     140: aload         4
     142: aload         5
     144: aload         6
     146: aload         7
     148: aload         8
     150: aload         9
     152: invokestatic  #120                // Method micrometerMetricsOptionsOf:(Ljava/lang/Iterable;Ljava/lang/Boolean;Lio/vertx/micrometer/VertxInfluxDbOptions;Lio/vertx/micrometer/VertxJmxMetricsOptions;Ljava/lang/Boolean;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Lio/vertx/micrometer/VertxPrometheusOptions;Ljava/lang/String;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     155: areturn

  public static final io.vertx.micrometer.MicrometerMetricsOptions MicrometerMetricsOptions(java.lang.Iterable<? extends io.vertx.micrometer.MetricsDomain>, java.lang.Boolean, io.vertx.micrometer.VertxInfluxDbOptions, io.vertx.micrometer.VertxJmxMetricsOptions, java.lang.Boolean, java.lang.Iterable<? extends io.vertx.micrometer.Match>, java.lang.Iterable<? extends io.vertx.micrometer.Match>, java.lang.Iterable<? extends io.vertx.micrometer.Label>, io.vertx.micrometer.VertxPrometheusOptions, java.lang.String);
    Code:
       0: new           #11                 // class io/vertx/micrometer/MicrometerMetricsOptions
       3: dup
       4: invokespecial #15                 // Method io/vertx/micrometer/MicrometerMetricsOptions."<init>":()V
       7: astore        10
       9: iconst_0
      10: istore        11
      12: iconst_0
      13: istore        12
      15: aload         10
      17: astore        13
      19: iconst_0
      20: istore        14
      22: aload_0
      23: ifnull        36
      26: aload         13
      28: aload_0
      29: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
      32: invokevirtual #25                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setDisabledMetricsCategories:(Ljava/util/Set;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      35: pop
      36: aload_1
      37: ifnull        50
      40: aload         13
      42: aload_1
      43: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      46: invokevirtual #35                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setEnabled:(Z)Lio/vertx/micrometer/MicrometerMetricsOptions;
      49: pop
      50: aload_2
      51: ifnull        61
      54: aload         13
      56: aload_2
      57: invokevirtual #39                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setInfluxDbOptions:(Lio/vertx/micrometer/VertxInfluxDbOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      60: pop
      61: aload_3
      62: ifnull        72
      65: aload         13
      67: aload_3
      68: invokevirtual #43                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setJmxMetricsOptions:(Lio/vertx/micrometer/VertxJmxMetricsOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
      71: pop
      72: aload         4
      74: ifnull        88
      77: aload         13
      79: aload         4
      81: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      84: invokevirtual #46                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setJvmMetricsEnabled:(Z)Lio/vertx/micrometer/MicrometerMetricsOptions;
      87: pop
      88: aload         5
      90: ifnull        104
      93: aload         13
      95: aload         5
      97: invokestatic  #50                 // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     100: invokevirtual #54                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setLabelMatches:(Ljava/util/List;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     103: pop
     104: aload         6
     106: ifnull        151
     109: aload         6
     111: invokeinterface #60,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     116: astore        15
     118: aload         15
     120: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          151
     128: aload         15
     130: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #71                 // class io/vertx/micrometer/Match
     138: astore        16
     140: aload         13
     142: aload         16
     144: invokevirtual #75                 // Method io/vertx/micrometer/MicrometerMetricsOptions.addLabelMatch:(Lio/vertx/micrometer/Match;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     147: pop
     148: goto          118
     151: aload         7
     153: ifnull        167
     156: aload         13
     158: aload         7
     160: invokestatic  #21                 // Method kotlin/collections/CollectionsKt.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;
     163: invokevirtual #78                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setLabels:(Ljava/util/Set;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     166: pop
     167: aload         8
     169: ifnull        180
     172: aload         13
     174: aload         8
     176: invokevirtual #82                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setPrometheusOptions:(Lio/vertx/micrometer/VertxPrometheusOptions;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     179: pop
     180: aload         9
     182: ifnull        193
     185: aload         13
     187: aload         9
     189: invokevirtual #86                 // Method io/vertx/micrometer/MicrometerMetricsOptions.setRegistryName:(Ljava/lang/String;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     192: pop
     193: nop
     194: aload         10
     196: areturn

  public static io.vertx.micrometer.MicrometerMetricsOptions MicrometerMetricsOptions$default(java.lang.Iterable, java.lang.Boolean, io.vertx.micrometer.VertxInfluxDbOptions, io.vertx.micrometer.VertxJmxMetricsOptions, java.lang.Boolean, java.lang.Iterable, java.lang.Iterable, java.lang.Iterable, io.vertx.micrometer.VertxPrometheusOptions, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         10
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aconst_null
       8: checkcast     #56                 // class java/lang/Iterable
      11: astore_0
      12: iload         10
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aconst_null
      20: checkcast     #27                 // class java/lang/Boolean
      23: astore_1
      24: iload         10
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aconst_null
      32: checkcast     #110                // class io/vertx/micrometer/VertxInfluxDbOptions
      35: astore_2
      36: iload         10
      38: bipush        8
      40: iand
      41: ifeq          49
      44: aconst_null
      45: checkcast     #112                // class io/vertx/micrometer/VertxJmxMetricsOptions
      48: astore_3
      49: iload         10
      51: bipush        16
      53: iand
      54: ifeq          63
      57: aconst_null
      58: checkcast     #27                 // class java/lang/Boolean
      61: astore        4
      63: iload         10
      65: bipush        32
      67: iand
      68: ifeq          77
      71: aconst_null
      72: checkcast     #56                 // class java/lang/Iterable
      75: astore        5
      77: iload         10
      79: bipush        64
      81: iand
      82: ifeq          91
      85: aconst_null
      86: checkcast     #56                 // class java/lang/Iterable
      89: astore        6
      91: iload         10
      93: sipush        128
      96: iand
      97: ifeq          106
     100: aconst_null
     101: checkcast     #56                 // class java/lang/Iterable
     104: astore        7
     106: iload         10
     108: sipush        256
     111: iand
     112: ifeq          121
     115: aconst_null
     116: checkcast     #114                // class io/vertx/micrometer/VertxPrometheusOptions
     119: astore        8
     121: iload         10
     123: sipush        512
     126: iand
     127: ifeq          136
     130: aconst_null
     131: checkcast     #116                // class java/lang/String
     134: astore        9
     136: aload_0
     137: aload_1
     138: aload_2
     139: aload_3
     140: aload         4
     142: aload         5
     144: aload         6
     146: aload         7
     148: aload         8
     150: aload         9
     152: invokestatic  #133                // Method MicrometerMetricsOptions:(Ljava/lang/Iterable;Ljava/lang/Boolean;Lio/vertx/micrometer/VertxInfluxDbOptions;Lio/vertx/micrometer/VertxJmxMetricsOptions;Ljava/lang/Boolean;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Lio/vertx/micrometer/VertxPrometheusOptions;Ljava/lang/String;)Lio/vertx/micrometer/MicrometerMetricsOptions;
     155: areturn
}
