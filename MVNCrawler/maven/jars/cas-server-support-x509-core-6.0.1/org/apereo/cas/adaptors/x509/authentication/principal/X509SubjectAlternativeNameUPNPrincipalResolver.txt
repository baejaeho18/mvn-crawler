Compiled from "X509SubjectAlternativeNameUPNPrincipalResolver.java"
public class org.apereo.cas.adaptors.x509.authentication.principal.X509SubjectAlternativeNameUPNPrincipalResolver extends org.apereo.cas.adaptors.x509.authentication.principal.AbstractX509PrincipalResolver {
  private static final org.slf4j.Logger LOGGER;

  public static final java.lang.String UPN_OBJECTID;

  public org.apereo.cas.adaptors.x509.authentication.principal.X509SubjectAlternativeNameUPNPrincipalResolver(org.apereo.services.persondir.IPersonAttributeDao, org.apereo.cas.authentication.principal.PrincipalFactory, boolean, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: invokespecial #1                  // Method org/apereo/cas/adaptors/x509/authentication/principal/AbstractX509PrincipalResolver."<init>":(Lorg/apereo/services/persondir/IPersonAttributeDao;Lorg/apereo/cas/authentication/principal/PrincipalFactory;ZLjava/lang/String;Ljava/lang/String;Z)V
      13: return

  private static java.lang.String getUPNStringFromSequence(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: iconst_0
       8: invokevirtual #2                  // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      11: invokestatic  #3                  // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      14: astore_1
      15: aload_1
      16: ifnull        126
      19: ldc           #5                  // String 1.3.6.1.4.1.311.20.2.3
      21: aload_1
      22: invokevirtual #6                  // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getId:()Ljava/lang/String;
      25: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          126
      31: aload_0
      32: iconst_1
      33: invokevirtual #2                  // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      36: checkcast     #8                  // class org/bouncycastle/asn1/ASN1TaggedObject
      39: astore_2
      40: aload_2
      41: invokevirtual #9                  // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      44: astore_3
      45: ldc           #8                  // class org/bouncycastle/asn1/ASN1TaggedObject
      47: invokestatic  #10                 // Method com/google/common/base/Predicates.instanceOf:(Ljava/lang/Class;)Lcom/google/common/base/Predicate;
      50: aload_3
      51: invokedynamic #11,  0             // InvokeDynamic #0:get:(Lorg/bouncycastle/asn1/ASN1Primitive;)Ljava/util/function/Supplier;
      56: aload_3
      57: invokedynamic #12,  0             // InvokeDynamic #1:get:(Lorg/bouncycastle/asn1/ASN1Primitive;)Ljava/util/function/Supplier;
      62: invokestatic  #13                 // Method org/apereo/cas/util/function/FunctionUtils.doIf:(Ljava/util/function/Predicate;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Function;
      65: astore        4
      67: aload         4
      69: aload_3
      70: invokeinterface #14,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #15                 // class org/bouncycastle/asn1/ASN1Primitive
      78: astore        5
      80: aload         5
      82: instanceof    #16                 // class org/bouncycastle/asn1/ASN1OctetString
      85: ifeq          107
      88: new           #17                 // class java/lang/String
      91: dup
      92: aload         5
      94: checkcast     #16                 // class org/bouncycastle/asn1/ASN1OctetString
      97: invokevirtual #18                 // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
     100: getstatic     #19                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     103: invokespecial #20                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     106: areturn
     107: aload         5
     109: instanceof    #21                 // class org/bouncycastle/asn1/ASN1String
     112: ifeq          126
     115: aload         5
     117: checkcast     #21                 // class org/bouncycastle/asn1/ASN1String
     120: invokeinterface #22,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1String.getString:()Ljava/lang/String;
     125: areturn
     126: aconst_null
     127: areturn

  private static org.bouncycastle.asn1.ASN1Sequence getAltnameSequence(java.util.List);
    Code:
       0: aload_0
       1: invokeinterface #23,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_2
       7: if_icmpge     20
      10: getstatic     #24                 // Field LOGGER:Lorg/slf4j/Logger;
      13: ldc           #25                 // String Subject Alternative Name List does not contain at least two required elements. Returning null principal id...
      15: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      20: aload_0
      21: iconst_0
      22: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: checkcast     #28                 // class java/lang/Integer
      30: astore_1
      31: aload_1
      32: invokevirtual #29                 // Method java/lang/Integer.intValue:()I
      35: ifne          54
      38: aload_0
      39: iconst_1
      40: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      45: checkcast     #30                 // class "[B"
      48: astore_2
      49: aload_2
      50: invokestatic  #31                 // Method getAltnameSequence:([B)Lorg/bouncycastle/asn1/ASN1Sequence;
      53: areturn
      54: aconst_null
      55: areturn

  private static org.bouncycastle.asn1.ASN1Sequence getAltnameSequence(byte[]);
    Code:
       0: new           #32                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: astore_1
       9: new           #34                 // class org/bouncycastle/asn1/ASN1InputStream
      12: dup
      13: aload_1
      14: invokespecial #35                 // Method org/bouncycastle/asn1/ASN1InputStream."<init>":(Ljava/io/InputStream;)V
      17: astore_2
      18: aload_2
      19: invokevirtual #36                 // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      22: invokestatic  #37                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      25: astore_3
      26: aload_2
      27: invokevirtual #38                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
      30: aload_1
      31: invokevirtual #39                 // Method java/io/ByteArrayInputStream.close:()V
      34: aload_3
      35: areturn
      36: astore_3
      37: aload_2
      38: invokevirtual #38                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
      41: goto          52
      44: astore        4
      46: aload_3
      47: aload         4
      49: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: aload_3
      53: athrow
      54: astore_2
      55: aload_1
      56: invokevirtual #39                 // Method java/io/ByteArrayInputStream.close:()V
      59: goto          68
      62: astore_3
      63: aload_2
      64: aload_3
      65: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      68: aload_2
      69: athrow
      70: astore_1
      71: getstatic     #24                 // Field LOGGER:Lorg/slf4j/Logger;
      74: ldc           #43                 // String An error has occurred while reading the subject alternative name value
      76: aload_1
      77: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: aconst_null
      83: areturn
    Exception table:
       from    to  target type
          18    26    36   Class java/lang/Throwable
          37    41    44   Class java/lang/Throwable
           9    30    54   Class java/lang/Throwable
          36    54    54   Class java/lang/Throwable
          55    59    62   Class java/lang/Throwable
           0    34    70   Class java/io/IOException
          36    70    70   Class java/io/IOException

  protected java.lang.String resolvePrincipalInternal(java.security.cert.X509Certificate);
    Code:
       0: getstatic     #24                 // Field LOGGER:Lorg/slf4j/Logger;
       3: ldc           #45                 // String Resolving principal from Subject Alternative Name UPN for [{}]
       5: aload_1
       6: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_1
      12: invokevirtual #47                 // Method java/security/cert/X509Certificate.getSubjectAlternativeNames:()Ljava/util/Collection;
      15: astore_2
      16: aload_2
      17: ifnull        72
      20: aload_2
      21: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          72
      36: aload_3
      37: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #51                 // class java/util/List
      45: astore        4
      47: aload         4
      49: invokestatic  #52                 // Method getAltnameSequence:(Ljava/util/List;)Lorg/bouncycastle/asn1/ASN1Sequence;
      52: astore        5
      54: aload         5
      56: invokestatic  #53                 // Method getUPNStringFromSequence:(Lorg/bouncycastle/asn1/ASN1Sequence;)Ljava/lang/String;
      59: astore        6
      61: aload         6
      63: ifnull        69
      66: aload         6
      68: areturn
      69: goto          27
      72: goto          93
      75: astore_2
      76: getstatic     #24                 // Field LOGGER:Lorg/slf4j/Logger;
      79: ldc           #55                 // String Error is encountered while trying to retrieve subject alternative names collection from certificate
      81: aload_2
      82: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: aload_0
      88: aload_1
      89: invokevirtual #56                 // Method getAlternatePrincipal:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      92: areturn
      93: aload_0
      94: aload_1
      95: invokevirtual #56                 // Method getAlternatePrincipal:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      98: areturn
    Exception table:
       from    to  target type
          11    68    75   Class java/security/cert/CertificateParsingException
          69    72    75   Class java/security/cert/CertificateParsingException

  protected java.util.Map<java.lang.String, java.util.List<java.lang.Object>> retrievePersonAttributes(java.lang.String, org.apereo.cas.authentication.Credential);
    Code:
       0: new           #57                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #58                 // Method org/apereo/cas/adaptors/x509/authentication/principal/AbstractX509PrincipalResolver.retrievePersonAttributes:(Ljava/lang/String;Lorg/apereo/cas/authentication/Credential;)Ljava/util/Map;
      10: invokespecial #59                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      13: astore_3
      14: aload_2
      15: checkcast     #60                 // class org/apereo/cas/adaptors/x509/authentication/principal/X509CertificateCredential
      18: invokevirtual #61                 // Method org/apereo/cas/adaptors/x509/authentication/principal/X509CertificateCredential.getCertificate:()Ljava/security/cert/X509Certificate;
      21: astore        4
      23: aload_3
      24: aload_0
      25: aload         4
      27: invokevirtual #62                 // Method extractPersonAttributes:(Ljava/security/cert/X509Certificate;)Ljava/util/Map;
      30: invokevirtual #63                 // Method java/util/LinkedHashMap.putAll:(Ljava/util/Map;)V
      33: aload_3
      34: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method org/apereo/cas/adaptors/x509/authentication/principal/AbstractX509PrincipalResolver.toString:()Ljava/lang/String;
       4: invokedynamic #65,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public org.apereo.cas.adaptors.x509.authentication.principal.X509SubjectAlternativeNameUPNPrincipalResolver();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method org/apereo/cas/adaptors/x509/authentication/principal/AbstractX509PrincipalResolver."<init>":()V
       4: return

  private static org.bouncycastle.asn1.ASN1Primitive lambda$getUPNStringFromSequence$1(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_0
       1: areturn

  private static org.bouncycastle.asn1.ASN1Primitive lambda$getUPNStringFromSequence$0(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
       4: invokevirtual #9                  // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
       7: areturn

  static {};
    Code:
       0: ldc           #4                  // class org/apereo/cas/adaptors/x509/authentication/principal/X509SubjectAlternativeNameUPNPrincipalResolver
       2: invokestatic  #68                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
