Compiled from "ThresholdExpiredCRLRevocationPolicy.java"
public class org.apereo.cas.adaptors.x509.authentication.revocation.policy.ThresholdExpiredCRLRevocationPolicy implements org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.security.cert.X509CRL> {
  private static final org.slf4j.Logger LOGGER;

  private final int threshold;

  public void apply(java.security.cert.X509CRL) throws org.apereo.cas.adaptors.x509.authentication.ExpiredCRLException;
    Code:
       0: getstatic     #1                  // Field java/time/ZoneOffset.UTC:Ljava/time/ZoneOffset;
       3: invokestatic  #2                  // Method java/time/ZonedDateTime.now:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokestatic  #3                  // Method org/apereo/cas/util/crypto/CertUtils.isExpired:(Ljava/security/cert/X509CRL;Ljava/time/ZonedDateTime;)Z
      12: ifeq          82
      15: aload_1
      16: aload_2
      17: aload_0
      18: getfield      #4                  // Field threshold:I
      21: i2l
      22: invokevirtual #5                  // Method java/time/ZonedDateTime.minusSeconds:(J)Ljava/time/ZonedDateTime;
      25: invokestatic  #3                  // Method org/apereo/cas/util/crypto/CertUtils.isExpired:(Ljava/security/cert/X509CRL;Ljava/time/ZonedDateTime;)Z
      28: ifeq          48
      31: new           #6                  // class org/apereo/cas/adaptors/x509/authentication/ExpiredCRLException
      34: dup
      35: aload_1
      36: invokevirtual #7                  // Method java/security/cert/X509CRL.toString:()Ljava/lang/String;
      39: aload_2
      40: aload_0
      41: getfield      #4                  // Field threshold:I
      44: invokespecial #8                  // Method org/apereo/cas/adaptors/x509/authentication/ExpiredCRLException."<init>":(Ljava/lang/String;Ljava/time/ZonedDateTime;I)V
      47: athrow
      48: getstatic     #9                  // Field LOGGER:Lorg/slf4j/Logger;
      51: ldc           #10                 // String CRL expired on %s but is within threshold period, %s seconds.
      53: iconst_2
      54: anewarray     #11                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_1
      60: invokevirtual #12                 // Method java/security/cert/X509CRL.getNextUpdate:()Ljava/util/Date;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_0
      67: getfield      #4                  // Field threshold:I
      70: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: aastore
      74: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      82: return

  public org.apereo.cas.adaptors.x509.authentication.revocation.policy.ThresholdExpiredCRLRevocationPolicy(int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field threshold:I
       9: return

  public void apply(java.lang.Object) throws java.security.GeneralSecurityException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class java/security/cert/X509CRL
       5: invokevirtual #18                 // Method apply:(Ljava/security/cert/X509CRL;)V
       8: return

  static {};
    Code:
       0: ldc           #19                 // class org/apereo/cas/adaptors/x509/authentication/revocation/policy/ThresholdExpiredCRLRevocationPolicy
       2: invokestatic  #20                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #9                  // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
