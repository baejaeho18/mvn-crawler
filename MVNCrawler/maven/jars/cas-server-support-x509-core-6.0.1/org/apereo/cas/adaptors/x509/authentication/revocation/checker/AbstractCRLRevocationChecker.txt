Compiled from "AbstractCRLRevocationChecker.java"
public abstract class org.apereo.cas.adaptors.x509.authentication.revocation.checker.AbstractCRLRevocationChecker implements org.apereo.cas.adaptors.x509.authentication.revocation.checker.RevocationChecker {
  private static final org.slf4j.Logger LOGGER;

  protected final boolean checkAll;

  private final org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.lang.Void> unavailableCRLPolicy;

  private final org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.security.cert.X509CRL> expiredCRLPolicy;

  public org.apereo.cas.adaptors.x509.authentication.revocation.checker.AbstractCRLRevocationChecker(boolean, org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.lang.Void>, org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.security.cert.X509CRL>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field checkAll:Z
       9: aload_0
      10: aload_2
      11: ifnonnull     24
      14: new           #3                  // class org/apereo/cas/adaptors/x509/authentication/revocation/policy/DenyRevocationPolicy
      17: dup
      18: invokespecial #4                  // Method org/apereo/cas/adaptors/x509/authentication/revocation/policy/DenyRevocationPolicy."<init>":()V
      21: goto          25
      24: aload_2
      25: putfield      #5                  // Field unavailableCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
      28: aload_0
      29: aload_3
      30: ifnonnull     44
      33: new           #6                  // class org/apereo/cas/adaptors/x509/authentication/revocation/policy/ThresholdExpiredCRLRevocationPolicy
      36: dup
      37: iconst_0
      38: invokespecial #7                  // Method org/apereo/cas/adaptors/x509/authentication/revocation/policy/ThresholdExpiredCRLRevocationPolicy."<init>":(I)V
      41: goto          45
      44: aload_3
      45: putfield      #8                  // Field expiredCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
      48: return

  public void check(java.security.cert.X509Certificate) throws java.security.GeneralSecurityException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Certificate cannot be null.
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
      17: ldc           #13                 // String Evaluating certificate revocation status for [{}]
      19: aload_1
      20: invokestatic  #14                 // Method org/apereo/cas/util/crypto/CertUtils.toString:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      23: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      28: aload_0
      29: aload_1
      30: invokevirtual #16                 // Method getCRLs:(Ljava/security/cert/X509Certificate;)Ljava/util/Collection;
      33: astore_2
      34: aload_2
      35: ifnull        47
      38: aload_2
      39: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      44: ifeq          72
      47: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
      50: ldc           #18                 // String CRL data is not available for [{}]
      52: aload_1
      53: invokestatic  #14                 // Method org/apereo/cas/util/crypto/CertUtils.toString:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      56: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #5                  // Field unavailableCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
      65: aconst_null
      66: invokeinterface #20,  2           // InterfaceMethod org/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy.apply:(Ljava/lang/Object;)V
      71: return
      72: new           #21                 // class java/util/ArrayList
      75: dup
      76: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      79: astore_3
      80: aload_2
      81: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      86: invokedynamic #24,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      91: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      96: aload_3
      97: invokedynamic #26,  0             // InvokeDynamic #1:accept:(Ljava/util/ArrayList;)Ljava/util/function/Consumer;
     102: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     107: aload_2
     108: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
     113: aload_3
     114: invokevirtual #29                 // Method java/util/ArrayList.size:()I
     117: if_icmpne     175
     120: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
     123: ldc           #30                 // String All CRLs retrieved have expired. Applying CRL expiration policy...
     125: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     130: aload_3
     131: invokevirtual #32                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     134: astore        4
     136: aload         4
     138: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          172
     146: aload         4
     148: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     153: checkcast     #35                 // class java/security/cert/X509CRL
     156: astore        5
     158: aload_0
     159: getfield      #8                  // Field expiredCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
     162: aload         5
     164: invokeinterface #20,  2           // InterfaceMethod org/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy.apply:(Ljava/lang/Object;)V
     169: goto          136
     172: goto          285
     175: aload_2
     176: aload_3
     177: invokeinterface #36,  2           // InterfaceMethod java/util/Collection.removeAll:(Ljava/util/Collection;)Z
     182: pop
     183: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
     186: ldc           #37                 // String Valid CRLs [{}] found that are not expired yet
     188: aload_2
     189: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     194: aload_2
     195: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     200: aload_1
     201: invokedynamic #38,  0             // InvokeDynamic #2:apply:(Ljava/security/cert/X509Certificate;)Ljava/util/function/Function;
     206: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     211: invokedynamic #40,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
     216: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     221: invokestatic  #41                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     224: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     229: checkcast     #43                 // class java/util/List
     232: astore        4
     234: aload         4
     236: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
     241: aload_2
     242: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
     247: if_icmpne     285
     250: aload         4
     252: iconst_0
     253: invokeinterface #45,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     258: checkcast     #46                 // class java/security/cert/X509CRLEntry
     261: astore        5
     263: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
     266: ldc           #47                 // String All CRL entries have been revoked. Rejecting the first entry [{}]
     268: aload         5
     270: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     275: new           #48                 // class org/apereo/cas/adaptors/x509/authentication/revocation/RevokedCertificateException
     278: dup
     279: aload         5
     281: invokespecial #49                 // Method org/apereo/cas/adaptors/x509/authentication/revocation/RevokedCertificateException."<init>":(Ljava/security/cert/X509CRLEntry;)V
     284: athrow
     285: return

  protected abstract boolean addCRL(java.lang.Object, java.security.cert.X509CRL);

  protected abstract java.util.Collection<java.security.cert.X509CRL> getCRLs(java.security.cert.X509Certificate);

  public boolean isCheckAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field checkAll:Z
       4: ireturn

  public org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.lang.Void> getUnavailableCRLPolicy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field unavailableCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
       4: areturn

  public org.apereo.cas.adaptors.x509.authentication.revocation.policy.RevocationPolicy<java.security.cert.X509CRL> getExpiredCRLPolicy();
    Code:
       0: aload_0
       1: getfield      #8                  // Field expiredCRLPolicy:Lorg/apereo/cas/adaptors/x509/authentication/revocation/policy/RevocationPolicy;
       4: areturn

  private static java.security.cert.X509CRLEntry lambda$check$1(java.security.cert.X509Certificate, java.security.cert.X509CRL);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #50                 // Method java/security/cert/X509CRL.getRevokedCertificate:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509CRLEntry;
       5: areturn

  private static void lambda$check$0(java.util.ArrayList, java.security.cert.X509CRL);
    Code:
       0: getstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
       3: ldc           #51                 // String CRL data expired on [{}]
       5: aload_1
       6: invokevirtual #52                 // Method java/security/cert/X509CRL.getNextUpdate:()Ljava/util/Date;
       9: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: aload_1
      16: invokevirtual #53                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  static {};
    Code:
       0: ldc           #54                 // class org/apereo/cas/adaptors/x509/authentication/revocation/checker/AbstractCRLRevocationChecker
       2: invokestatic  #55                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
