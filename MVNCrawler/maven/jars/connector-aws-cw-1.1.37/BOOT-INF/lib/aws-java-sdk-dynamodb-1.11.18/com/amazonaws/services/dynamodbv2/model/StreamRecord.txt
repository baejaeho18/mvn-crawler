Compiled from "StreamRecord.java"
public class com.amazonaws.services.dynamodbv2.model.StreamRecord implements java.io.Serializable,java.lang.Cloneable {
  private java.util.Date approximateCreationDateTime;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> keys;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> newImage;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> oldImage;

  private java.lang.String sequenceNumber;

  private java.lang.Long sizeBytes;

  private java.lang.String streamViewType;

  public com.amazonaws.services.dynamodbv2.model.StreamRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setApproximateCreationDateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field approximateCreationDateTime:Ljava/util/Date;
       5: return

  public java.util.Date getApproximateCreationDateTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field approximateCreationDateTime:Ljava/util/Date;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withApproximateCreationDateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setApproximateCreationDateTime:(Ljava/util/Date;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getKeys();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:Ljava/util/Map;
       4: areturn

  public void setKeys(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keys:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withKeys(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setKeys:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord addKeysEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #4                  // Field keys:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #6                  // class java/util/HashMap
      12: dup
      13: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      16: putfield      #4                  // Field keys:Ljava/util/Map;
      19: aload_0
      20: getfield      #4                  // Field keys:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #9                  // class java/lang/IllegalArgumentException
      35: dup
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #12                 // String Duplicated keys (
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #14                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #15                 // String ) are provided.
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #4                  // Field keys:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord clearKeysEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field keys:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getNewImage();
    Code:
       0: aload_0
       1: getfield      #19                 // Field newImage:Ljava/util/Map;
       4: areturn

  public void setNewImage(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field newImage:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withNewImage(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setNewImage:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord addNewImageEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #19                 // Field newImage:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #6                  // class java/util/HashMap
      12: dup
      13: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      16: putfield      #19                 // Field newImage:Ljava/util/Map;
      19: aload_0
      20: getfield      #19                 // Field newImage:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #9                  // class java/lang/IllegalArgumentException
      35: dup
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #12                 // String Duplicated keys (
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #14                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #15                 // String ) are provided.
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #19                 // Field newImage:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord clearNewImageEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #19                 // Field newImage:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getOldImage();
    Code:
       0: aload_0
       1: getfield      #21                 // Field oldImage:Ljava/util/Map;
       4: areturn

  public void setOldImage(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field oldImage:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withOldImage(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setOldImage:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord addOldImageEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #21                 // Field oldImage:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #6                  // class java/util/HashMap
      12: dup
      13: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      16: putfield      #21                 // Field oldImage:Ljava/util/Map;
      19: aload_0
      20: getfield      #21                 // Field oldImage:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #9                  // class java/lang/IllegalArgumentException
      35: dup
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #12                 // String Duplicated keys (
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #14                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #15                 // String ) are provided.
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #21                 // Field oldImage:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord clearOldImageEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #21                 // Field oldImage:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setSequenceNumber(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field sequenceNumber:Ljava/lang/String;
       5: return

  public java.lang.String getSequenceNumber();
    Code:
       0: aload_0
       1: getfield      #23                 // Field sequenceNumber:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withSequenceNumber(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setSequenceNumber:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSizeBytes(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field sizeBytes:Ljava/lang/Long;
       5: return

  public java.lang.Long getSizeBytes();
    Code:
       0: aload_0
       1: getfield      #25                 // Field sizeBytes:Ljava/lang/Long;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withSizeBytes(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setSizeBytes:(Ljava/lang/Long;)V
       5: aload_0
       6: areturn

  public void setStreamViewType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field streamViewType:Ljava/lang/String;
       5: return

  public java.lang.String getStreamViewType();
    Code:
       0: aload_0
       1: getfield      #27                 // Field streamViewType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withStreamViewType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setStreamViewType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStreamViewType(com.amazonaws.services.dynamodbv2.model.StreamViewType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method com/amazonaws/services/dynamodbv2/model/StreamViewType.toString:()Ljava/lang/String;
       5: putfield      #27                 // Field streamViewType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.StreamRecord withStreamViewType(com.amazonaws.services.dynamodbv2.model.StreamViewType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setStreamViewType:(Lcom/amazonaws/services/dynamodbv2/model/StreamViewType;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #31                 // String {
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      19: ifnull        54
      22: aload_1
      23: new           #10                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #33                 // String ApproximateCreationDateTime:
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      39: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #35                 // String ,
      44: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      58: ifnull        93
      61: aload_1
      62: new           #10                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #37                 // String Keys:
      71: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      78: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #35                 // String ,
      83: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
      97: ifnull        132
     100: aload_1
     101: new           #10                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #39                 // String NewImage:
     110: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     117: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #35                 // String ,
     122: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     136: ifnull        171
     139: aload_1
     140: new           #10                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #41                 // String OldImage:
     149: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     156: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #35                 // String ,
     161: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #10                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #43                 // String SequenceNumber:
     188: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     195: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #35                 // String ,
     200: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     214: ifnull        249
     217: aload_1
     218: new           #10                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #45                 // String SizeBytes:
     227: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     234: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #35                 // String ,
     239: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     253: ifnull        283
     256: aload_1
     257: new           #10                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #47                 // String StreamViewType:
     266: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     273: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     279: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: pop
     283: aload_1
     284: ldc           #48                 // String }
     286: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: pop
     290: aload_1
     291: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     294: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #49                 // class com/amazonaws/services/dynamodbv2/model/StreamRecord
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #49                 // class com/amazonaws/services/dynamodbv2/model/StreamRecord
      26: astore_2
      27: aload_2
      28: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      68: aload_0
      69: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      72: invokevirtual #50                 // Method java/util/Date.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
     114: ifnull        135
     117: aload_2
     118: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
     121: aload_0
     122: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
     125: invokeinterface #51,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     130: ifne          135
     133: iconst_0
     134: ireturn
     135: aload_2
     136: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     139: ifnonnull     146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: aload_0
     148: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     151: ifnonnull     158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ixor
     160: ifeq          165
     163: iconst_0
     164: ireturn
     165: aload_2
     166: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     169: ifnull        190
     172: aload_2
     173: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     176: aload_0
     177: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
     180: invokeinterface #51,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     185: ifne          190
     188: iconst_0
     189: ireturn
     190: aload_2
     191: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     194: ifnonnull     201
     197: iconst_1
     198: goto          202
     201: iconst_0
     202: aload_0
     203: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     206: ifnonnull     213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: ixor
     215: ifeq          220
     218: iconst_0
     219: ireturn
     220: aload_2
     221: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     224: ifnull        245
     227: aload_2
     228: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     231: aload_0
     232: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     235: invokeinterface #51,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     240: ifne          245
     243: iconst_0
     244: ireturn
     245: aload_2
     246: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     249: ifnonnull     256
     252: iconst_1
     253: goto          257
     256: iconst_0
     257: aload_0
     258: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     261: ifnonnull     268
     264: iconst_1
     265: goto          269
     268: iconst_0
     269: ixor
     270: ifeq          275
     273: iconst_0
     274: ireturn
     275: aload_2
     276: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     279: ifnull        298
     282: aload_2
     283: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     286: aload_0
     287: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     290: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     293: ifne          298
     296: iconst_0
     297: ireturn
     298: aload_2
     299: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     302: ifnonnull     309
     305: iconst_1
     306: goto          310
     309: iconst_0
     310: aload_0
     311: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     314: ifnonnull     321
     317: iconst_1
     318: goto          322
     321: iconst_0
     322: ixor
     323: ifeq          328
     326: iconst_0
     327: ireturn
     328: aload_2
     329: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     332: ifnull        351
     335: aload_2
     336: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     339: aload_0
     340: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     343: invokevirtual #53                 // Method java/lang/Long.equals:(Ljava/lang/Object;)Z
     346: ifne          351
     349: iconst_0
     350: ireturn
     351: aload_2
     352: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     355: ifnonnull     362
     358: iconst_1
     359: goto          363
     362: iconst_0
     363: aload_0
     364: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     367: ifnonnull     374
     370: iconst_1
     371: goto          375
     374: iconst_0
     375: ixor
     376: ifeq          381
     379: iconst_0
     380: ireturn
     381: aload_2
     382: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     385: ifnull        404
     388: aload_2
     389: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     392: aload_0
     393: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     396: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     399: ifne          404
     402: iconst_0
     403: ireturn
     404: iconst_1
     405: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #32                 // Method getApproximateCreationDateTime:()Ljava/util/Date;
      24: invokevirtual #54                 // Method java/util/Date.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      37: ifnonnull     44
      40: iconst_0
      41: goto          53
      44: aload_0
      45: invokevirtual #36                 // Method getKeys:()Ljava/util/Map;
      48: invokeinterface #55,  1           // InterfaceMethod java/util/Map.hashCode:()I
      53: iadd
      54: istore_2
      55: bipush        31
      57: iload_2
      58: imul
      59: aload_0
      60: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
      63: ifnonnull     70
      66: iconst_0
      67: goto          79
      70: aload_0
      71: invokevirtual #38                 // Method getNewImage:()Ljava/util/Map;
      74: invokeinterface #55,  1           // InterfaceMethod java/util/Map.hashCode:()I
      79: iadd
      80: istore_2
      81: bipush        31
      83: iload_2
      84: imul
      85: aload_0
      86: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
      89: ifnonnull     96
      92: iconst_0
      93: goto          105
      96: aload_0
      97: invokevirtual #40                 // Method getOldImage:()Ljava/util/Map;
     100: invokeinterface #55,  1           // InterfaceMethod java/util/Map.hashCode:()I
     105: iadd
     106: istore_2
     107: bipush        31
     109: iload_2
     110: imul
     111: aload_0
     112: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     115: ifnonnull     122
     118: iconst_0
     119: goto          129
     122: aload_0
     123: invokevirtual #42                 // Method getSequenceNumber:()Ljava/lang/String;
     126: invokevirtual #56                 // Method java/lang/String.hashCode:()I
     129: iadd
     130: istore_2
     131: bipush        31
     133: iload_2
     134: imul
     135: aload_0
     136: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     139: ifnonnull     146
     142: iconst_0
     143: goto          153
     146: aload_0
     147: invokevirtual #44                 // Method getSizeBytes:()Ljava/lang/Long;
     150: invokevirtual #57                 // Method java/lang/Long.hashCode:()I
     153: iadd
     154: istore_2
     155: bipush        31
     157: iload_2
     158: imul
     159: aload_0
     160: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     163: ifnonnull     170
     166: iconst_0
     167: goto          177
     170: aload_0
     171: invokevirtual #46                 // Method getStreamViewType:()Ljava/lang/String;
     174: invokevirtual #56                 // Method java/lang/String.hashCode:()I
     177: iadd
     178: istore_2
     179: iload_2
     180: ireturn

  public com.amazonaws.services.dynamodbv2.model.StreamRecord clone();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #49                 // class com/amazonaws/services/dynamodbv2/model/StreamRecord
       7: areturn
       8: astore_1
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lcom/amazonaws/services/dynamodbv2/model/StreamRecord;
       4: areturn
}
