Compiled from "StandardModelFactories.java"
final class com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactoryFactory implements com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory$Factory {
  private final java.util.concurrent.ConcurrentMap<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory$Schema, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory> cache;

  private final com.amazonaws.services.dynamodbv2.datamodeling.ConversionSchema$Dependencies depends;

  private com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactoryFactory(com.amazonaws.services.dynamodbv2.datamodeling.ConversionSchema$Dependencies);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field depends:Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;
      20: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory getModelFactory(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Schema.of:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Schema;
       4: astore_2
       5: aload_2
       6: ifnonnull     24
       9: new           #8                  // class com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$SchemaFactory
      12: dup
      13: aload_2
      14: aload_1
      15: aload_0
      16: getfield      #6                  // Field depends:Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;
      19: aconst_null
      20: invokespecial #9                  // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$SchemaFactory."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Schema;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$1;)V
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      28: aload_2
      29: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      34: ifne          62
      37: aload_0
      38: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      41: aload_2
      42: new           #8                  // class com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$SchemaFactory
      45: dup
      46: aload_2
      47: aload_1
      48: aload_0
      49: getfield      #6                  // Field depends:Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;
      52: aconst_null
      53: invokespecial #9                  // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$SchemaFactory."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Schema;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$1;)V
      56: invokeinterface #11,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_0
      63: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      66: aload_2
      67: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #13                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory
      75: areturn

  com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactoryFactory(com.amazonaws.services.dynamodbv2.datamodeling.ConversionSchema$Dependencies, com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;)V
       5: return
}
