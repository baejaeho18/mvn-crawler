Compiled from "DynamoDBQueryExpression.java"
public class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> {
  private boolean consistentRead;

  private boolean scanIndexForward;

  private T hashKeyValues;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> rangeKeyConditions;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> exclusiveStartKey;

  private java.lang.Integer limit;

  private java.lang.String indexName;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> queryFilter;

  private java.lang.String conditionalOperator;

  private java.lang.String filterExpression;

  private java.lang.String keyConditionExpression;

  private java.util.Map<java.lang.String, java.lang.String> expressionAttributeNames;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> expressionAttributeValues;

  private java.lang.String select;

  private java.lang.String projectionExpression;

  private java.lang.String returnConsumedCapacity;

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field consistentRead:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field scanIndexForward:Z
      14: return

  public boolean isConsistentRead();
    Code:
       0: aload_0
       1: getfield      #2                  // Field consistentRead:Z
       4: ireturn

  public void setConsistentRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field consistentRead:Z
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withConsistentRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field consistentRead:Z
       5: aload_0
       6: areturn

  public boolean isScanIndexForward();
    Code:
       0: aload_0
       1: getfield      #3                  // Field scanIndexForward:Z
       4: ireturn

  public void setScanIndexForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field scanIndexForward:Z
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withScanIndexForward(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field scanIndexForward:Z
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExclusiveStartKey();
    Code:
       0: aload_0
       1: getfield      #4                  // Field exclusiveStartKey:Ljava/util/Map;
       4: areturn

  public void setExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field exclusiveStartKey:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field exclusiveStartKey:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.lang.Integer getLimit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:Ljava/lang/Integer;
       4: areturn

  public void setLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field limit:Ljava/lang/Integer;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field limit:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public T getHashKeyValues();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hashKeyValues:Ljava/lang/Object;
       4: areturn

  public void setHashKeyValues(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field hashKeyValues:Ljava/lang/Object;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withHashKeyValues(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setHashKeyValues:(Ljava/lang/Object;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getRangeKeyConditions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rangeKeyConditions:Ljava/util/Map;
       4: areturn

  public void setRangeKeyConditions(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field rangeKeyConditions:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withRangeKeyConditions(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setRangeKeyConditions:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withRangeKeyCondition(java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition);
    Code:
       0: aload_0
       1: getfield      #8                  // Field rangeKeyConditions:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      15: putfield      #8                  // Field rangeKeyConditions:Ljava/util/Map;
      18: aload_0
      19: getfield      #8                  // Field rangeKeyConditions:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public java.lang.String getIndexName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field indexName:Ljava/lang/String;
       4: areturn

  public void setIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field indexName:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setIndexName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getQueryFilter();
    Code:
       0: aload_0
       1: getfield      #15                 // Field queryFilter:Ljava/util/Map;
       4: areturn

  public void setQueryFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field queryFilter:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withQueryFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setQueryFilter:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withQueryFilterEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition);
    Code:
       0: aload_0
       1: getfield      #15                 // Field queryFilter:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      15: putfield      #15                 // Field queryFilter:Ljava/util/Map;
      18: aload_0
      19: getfield      #15                 // Field queryFilter:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public java.lang.String getConditionalOperator();
    Code:
       0: aload_0
       1: getfield      #17                 // Field conditionalOperator:Ljava/lang/String;
       4: areturn

  public void setConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field conditionalOperator:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setConditionalOperator:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method com/amazonaws/services/dynamodbv2/model/ConditionalOperator.toString:()Ljava/lang/String;
       5: putfield      #17                 // Field conditionalOperator:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setConditionalOperator:(Lcom/amazonaws/services/dynamodbv2/model/ConditionalOperator;)V
       5: aload_0
       6: areturn

  public java.lang.String getFilterExpression();
    Code:
       0: aload_0
       1: getfield      #21                 // Field filterExpression:Ljava/lang/String;
       4: areturn

  public void setFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field filterExpression:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field filterExpression:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getKeyConditionExpression();
    Code:
       0: aload_0
       1: getfield      #22                 // Field keyConditionExpression:Ljava/lang/String;
       4: areturn

  public void setKeyConditionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field keyConditionExpression:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withKeyConditionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field keyConditionExpression:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getExpressionAttributeNames();
    Code:
       0: aload_0
       1: getfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setExpressionAttributeNames:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> addExpressionAttributeNamesEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #10                 // class java/util/HashMap
      12: dup
      13: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      16: putfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
      19: aload_0
      20: getfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #26                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #27                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #29                 // String Duplicated keys (
      45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #31                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #32                 // String ) are provided.
      57: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> clearExpressionAttributeNamesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #23                 // Field expressionAttributeNames:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExpressionAttributeValues();
    Code:
       0: aload_0
       1: getfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setExpressionAttributeValues:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> addExpressionAttributeValuesEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #10                 // class java/util/HashMap
      12: dup
      13: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      16: putfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
      19: aload_0
      20: getfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #26                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #27                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #29                 // String Duplicated keys (
      45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #31                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #32                 // String ) are provided.
      57: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> clearExpressionAttributeValuesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #35                 // Field expressionAttributeValues:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.lang.String getSelect();
    Code:
       0: aload_0
       1: getfield      #37                 // Field select:Ljava/lang/String;
       4: areturn

  public void setSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field select:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field select:Ljava/lang/String;
       5: aload_0
       6: areturn

  public void setSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method com/amazonaws/services/dynamodbv2/model/Select.toString:()Ljava/lang/String;
       5: putfield      #37                 // Field select:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method com/amazonaws/services/dynamodbv2/model/Select.toString:()Ljava/lang/String;
       5: putfield      #37                 // Field select:Ljava/lang/String;
       8: aload_0
       9: areturn

  public java.lang.String getProjectionExpression();
    Code:
       0: aload_0
       1: getfield      #39                 // Field projectionExpression:Ljava/lang/String;
       4: areturn

  public void setProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field projectionExpression:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field projectionExpression:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getReturnConsumedCapacity();
    Code:
       0: aload_0
       1: getfield      #40                 // Field returnConsumedCapacity:Ljava/lang/String;
       4: areturn

  public void setReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field returnConsumedCapacity:Ljava/lang/String;
       5: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field returnConsumedCapacity:Ljava/lang/String;
       5: aload_0
       6: areturn

  public void setReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity.toString:()Ljava/lang/String;
       5: putfield      #40                 // Field returnConsumedCapacity:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T> withReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity.toString:()Ljava/lang/String;
       5: putfield      #40                 // Field returnConsumedCapacity:Ljava/lang/String;
       8: aload_0
       9: areturn
}
