Compiled from "TableKeysAndAttributes.java"
public class com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes {
  private final java.lang.String tableName;

  private java.util.List<com.amazonaws.services.dynamodbv2.document.PrimaryKey> primaryKeys;

  private java.util.Set<java.lang.String> attributeNames;

  private boolean consistentRead;

  private java.lang.String projectionExpression;

  private java.util.Map<java.lang.String, java.lang.String> nameMap;

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        18
       8: aload_1
       9: invokevirtual #2                  // Method java/lang/String.trim:()Ljava/lang/String;
      12: invokevirtual #3                  // Method java/lang/String.length:()I
      15: ifne          28
      18: new           #4                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #5                  // String table name must not be null or empty
      24: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field tableName:Ljava/lang/String;
      33: return

  public java.util.List<com.amazonaws.services.dynamodbv2.document.PrimaryKey> getPrimaryKeys();
    Code:
       0: aload_0
       1: getfield      #8                  // Field primaryKeys:Ljava/util/List;
       4: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withPrimaryKeys(com.amazonaws.services.dynamodbv2.document.PrimaryKey...);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field primaryKeys:Ljava/util/List;
       9: goto          94
      12: aconst_null
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     79
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: ifnonnull     49
      40: aload         6
      42: invokevirtual #9                  // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.getComponentNameSet:()Ljava/util/Set;
      45: astore_2
      46: goto          73
      49: aload_2
      50: aload         6
      52: invokevirtual #9                  // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.getComponentNameSet:()Ljava/util/Set;
      55: invokeinterface #10,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      60: ifne          73
      63: new           #4                  // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #11                 // String primary key attribute names must be consistent for the specified primary keys
      69: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: iinc          5, 1
      76: goto          23
      79: aload_0
      80: new           #12                 // class java/util/ArrayList
      83: dup
      84: aload_1
      85: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      88: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      91: putfield      #8                  // Field primaryKeys:Ljava/util/List;
      94: aload_0
      95: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withHashOnlyKeys(java.lang.String, java.lang.Object...);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_2
      13: arraylength
      14: anewarray     #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      17: astore_3
      18: iconst_0
      19: istore        4
      21: iload         4
      23: aload_2
      24: arraylength
      25: if_icmpge     50
      28: aload_3
      29: iload         4
      31: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      34: dup
      35: aload_1
      36: aload_2
      37: iload         4
      39: aaload
      40: invokespecial #17                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      43: aastore
      44: iinc          4, 1
      47: goto          21
      50: aload_0
      51: aload_3
      52: invokevirtual #18                 // Method withPrimaryKeys:([Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
      55: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withHashAndRangeKeys(java.lang.String, java.lang.String, java.lang.Object...);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #19                 // String hash key name must be specified
      10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #4                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #20                 // String range key name must be specified
      24: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: arraylength
      30: iconst_2
      31: irem
      32: ifeq          45
      35: new           #4                  // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #21                 // String number of hash and range key values must be the same
      41: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_3
      46: arraylength
      47: iconst_2
      48: idiv
      49: istore        4
      51: iload         4
      53: anewarray     #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      56: astore        5
      58: iconst_0
      59: istore        6
      61: iload         6
      63: aload_3
      64: arraylength
      65: if_icmpge     100
      68: aload         5
      70: iload         6
      72: iconst_1
      73: ishr
      74: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      77: dup
      78: aload_1
      79: aload_3
      80: iload         6
      82: aaload
      83: aload_2
      84: aload_3
      85: iload         6
      87: iconst_1
      88: iadd
      89: aaload
      90: invokespecial #22                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      93: aastore
      94: iinc          6, 2
      97: goto          61
     100: aload_0
     101: aload         5
     103: invokevirtual #18                 // Method withPrimaryKeys:([Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
     106: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes addPrimaryKey(com.amazonaws.services.dynamodbv2.document.PrimaryKey);
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_0
       5: getfield      #8                  // Field primaryKeys:Ljava/util/List;
       8: ifnonnull     22
      11: aload_0
      12: new           #12                 // class java/util/ArrayList
      15: dup
      16: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #8                  // Field primaryKeys:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: invokespecial #24                 // Method checkConsistency:(Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)V
      27: aload_0
      28: getfield      #8                  // Field primaryKeys:Ljava/util/List;
      31: aload_1
      32: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: areturn

  private void checkConsistency(com.amazonaws.services.dynamodbv2.document.PrimaryKey);
    Code:
       0: aload_0
       1: getfield      #8                  // Field primaryKeys:Ljava/util/List;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          52
      12: aload_0
      13: getfield      #8                  // Field primaryKeys:Ljava/util/List;
      16: iconst_0
      17: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      25: invokevirtual #9                  // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.getComponentNameSet:()Ljava/util/Set;
      28: astore_2
      29: aload_2
      30: aload_1
      31: invokevirtual #9                  // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.getComponentNameSet:()Ljava/util/Set;
      34: invokeinterface #10,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      39: ifne          52
      42: new           #4                  // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #28                 // String primary key must be added with consistent key attribute name(s)
      48: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: return

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes addHashOnlyPrimaryKey(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #17                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      10: invokevirtual #29                 // Method addPrimaryKey:(Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
      13: pop
      14: aload_0
      15: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes addHashOnlyPrimaryKeys(java.lang.String, java.lang.Object...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     43
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      26: dup
      27: aload_1
      28: aload         6
      30: invokespecial #17                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      33: invokevirtual #29                 // Method addPrimaryKey:(Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
      36: pop
      37: iinc          5, 1
      40: goto          9
      43: aload_0
      44: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes addHashAndRangePrimaryKeys(java.lang.String, java.lang.String, java.lang.Object...);
    Code:
       0: aload_3
       1: arraylength
       2: iconst_2
       3: irem
       4: ifeq          17
       7: new           #4                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #30                 // String The multiple hash and range key values must alternate
      13: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore        4
      20: iload         4
      22: aload_3
      23: arraylength
      24: if_icmpge     71
      27: aload_3
      28: iload         4
      30: aaload
      31: astore        5
      33: aload_3
      34: iload         4
      36: iconst_1
      37: iadd
      38: aaload
      39: astore        6
      41: aload_0
      42: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
      45: dup
      46: invokespecial #31                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":()V
      49: aload_1
      50: aload         5
      52: invokevirtual #32                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.addComponent:(Ljava/lang/String;Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;
      55: aload_2
      56: aload         6
      58: invokevirtual #32                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.addComponent:(Ljava/lang/String;Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;
      61: invokevirtual #29                 // Method addPrimaryKey:(Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
      64: pop
      65: iinc          4, 2
      68: goto          20
      71: aload_0
      72: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes addHashAndRangePrimaryKey(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: new           #16                 // class com/amazonaws/services/dynamodbv2/document/PrimaryKey
       4: dup
       5: invokespecial #31                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey."<init>":()V
       8: aload_1
       9: aload_2
      10: invokevirtual #32                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.addComponent:(Ljava/lang/String;Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;
      13: aload_3
      14: aload         4
      16: invokevirtual #32                 // Method com/amazonaws/services/dynamodbv2/document/PrimaryKey.addComponent:(Ljava/lang/String;Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;
      19: invokevirtual #29                 // Method addPrimaryKey:(Lcom/amazonaws/services/dynamodbv2/document/PrimaryKey;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
      22: pop
      23: aload_0
      24: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withAttrbuteNames(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method withAttributeNames:([Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
       5: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withAttrbuteNames(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method withAttributeNames:(Ljava/util/List;)Lcom/amazonaws/services/dynamodbv2/document/TableKeysAndAttributes;
       5: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withAttributeNames(java.lang.String...);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field attributeNames:Ljava/util/Set;
       9: goto          30
      12: aload_0
      13: new           #36                 // class java/util/LinkedHashSet
      16: dup
      17: aload_1
      18: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #37                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      24: invokestatic  #38                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      27: putfield      #35                 // Field attributeNames:Ljava/util/Set;
      30: aload_0
      31: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withAttributeNames(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field attributeNames:Ljava/util/Set;
       9: goto          27
      12: aload_0
      13: new           #36                 // class java/util/LinkedHashSet
      16: dup
      17: aload_1
      18: invokespecial #37                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      21: invokestatic  #38                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      24: putfield      #35                 // Field attributeNames:Ljava/util/Set;
      27: aload_0
      28: areturn

  public java.util.Set<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: getfield      #35                 // Field attributeNames:Ljava/util/Set;
       4: areturn

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field tableName:Ljava/lang/String;
       4: areturn

  public boolean isConsistentRead();
    Code:
       0: aload_0
       1: getfield      #39                 // Field consistentRead:Z
       4: ireturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withConsistentRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field consistentRead:Z
       5: aload_0
       6: areturn

  public java.lang.String getProjectionExpression();
    Code:
       0: aload_0
       1: getfield      #40                 // Field projectionExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field projectionExpression:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getNameMap();
    Code:
       0: aload_0
       1: getfield      #41                 // Field nameMap:Ljava/util/Map;
       4: areturn

  public com.amazonaws.services.dynamodbv2.document.TableKeysAndAttributes withNameMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          20
       9: new           #42                 // class java/util/LinkedHashMap
      12: dup
      13: aload_1
      14: invokespecial #43                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      17: invokestatic  #44                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      20: putfield      #41                 // Field nameMap:Ljava/util/Map;
      23: aload_0
      24: areturn
}
