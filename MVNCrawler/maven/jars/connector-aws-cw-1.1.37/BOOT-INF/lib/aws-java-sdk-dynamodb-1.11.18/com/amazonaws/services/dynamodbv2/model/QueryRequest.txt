Compiled from "QueryRequest.java"
public class com.amazonaws.services.dynamodbv2.model.QueryRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String tableName;

  private java.lang.String indexName;

  private java.lang.String select;

  private java.util.List<java.lang.String> attributesToGet;

  private java.lang.Integer limit;

  private java.lang.Boolean consistentRead;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> keyConditions;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> queryFilter;

  private java.lang.String conditionalOperator;

  private java.lang.Boolean scanIndexForward;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> exclusiveStartKey;

  private java.lang.String returnConsumedCapacity;

  private java.lang.String projectionExpression;

  private java.lang.String filterExpression;

  private java.lang.String keyConditionExpression;

  private java.util.Map<java.lang.String, java.lang.String> expressionAttributeNames;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> expressionAttributeValues;

  public com.amazonaws.services.dynamodbv2.model.QueryRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setTableName:(Ljava/lang/String;)V
       9: return

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field tableName:Ljava/lang/String;
       5: return

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tableName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method setTableName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field indexName:Ljava/lang/String;
       5: return

  public java.lang.String getIndexName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field indexName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setIndexName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field select:Ljava/lang/String;
       5: return

  public java.lang.String getSelect();
    Code:
       0: aload_0
       1: getfield      #6                  // Field select:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setSelect:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method com/amazonaws/services/dynamodbv2/model/Select.toString:()Ljava/lang/String;
       5: putfield      #6                  // Field select:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setSelect:(Lcom/amazonaws/services/dynamodbv2/model/Select;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getAttributesToGet();
    Code:
       0: aload_0
       1: getfield      #10                 // Field attributesToGet:Ljava/util/List;
       4: areturn

  public void setAttributesToGet(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field attributesToGet:Ljava/util/List;
       9: return
      10: aload_0
      11: new           #11                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: putfield      #10                 // Field attributesToGet:Ljava/util/List;
      22: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withAttributesToGet(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field attributesToGet:Ljava/util/List;
       4: ifnonnull     20
       7: aload_0
       8: new           #11                 // class java/util/ArrayList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #13                 // Method java/util/ArrayList."<init>":(I)V
      17: invokevirtual #14                 // Method setAttributesToGet:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #10                 // Field attributesToGet:Ljava/util/List;
      44: aload         5
      46: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: aload_0
      59: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withAttributesToGet(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setAttributesToGet:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field limit:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getLimit();
    Code:
       0: aload_0
       1: getfield      #16                 // Field limit:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setLimit:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setConsistentRead(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field consistentRead:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getConsistentRead();
    Code:
       0: aload_0
       1: getfield      #18                 // Field consistentRead:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withConsistentRead(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setConsistentRead:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isConsistentRead();
    Code:
       0: aload_0
       1: getfield      #18                 // Field consistentRead:Ljava/lang/Boolean;
       4: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getKeyConditions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field keyConditions:Ljava/util/Map;
       4: areturn

  public void setKeyConditions(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field keyConditions:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withKeyConditions(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setKeyConditions:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest addKeyConditionsEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #20                 // Field keyConditions:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #22                 // class java/util/HashMap
      12: dup
      13: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      16: putfield      #20                 // Field keyConditions:Ljava/util/Map;
      19: aload_0
      20: getfield      #20                 // Field keyConditions:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #26                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String Duplicated keys (
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #30                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ) are provided.
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #20                 // Field keyConditions:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clearKeyConditionsEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #20                 // Field keyConditions:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getQueryFilter();
    Code:
       0: aload_0
       1: getfield      #35                 // Field queryFilter:Ljava/util/Map;
       4: areturn

  public void setQueryFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field queryFilter:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withQueryFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setQueryFilter:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest addQueryFilterEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #35                 // Field queryFilter:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #22                 // class java/util/HashMap
      12: dup
      13: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      16: putfield      #35                 // Field queryFilter:Ljava/util/Map;
      19: aload_0
      20: getfield      #35                 // Field queryFilter:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #26                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String Duplicated keys (
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #30                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ) are provided.
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #35                 // Field queryFilter:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clearQueryFilterEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #35                 // Field queryFilter:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field conditionalOperator:Ljava/lang/String;
       5: return

  public java.lang.String getConditionalOperator();
    Code:
       0: aload_0
       1: getfield      #37                 // Field conditionalOperator:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setConditionalOperator:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method com/amazonaws/services/dynamodbv2/model/ConditionalOperator.toString:()Ljava/lang/String;
       5: putfield      #37                 // Field conditionalOperator:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setConditionalOperator:(Lcom/amazonaws/services/dynamodbv2/model/ConditionalOperator;)V
       5: aload_0
       6: areturn

  public void setScanIndexForward(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field scanIndexForward:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getScanIndexForward();
    Code:
       0: aload_0
       1: getfield      #41                 // Field scanIndexForward:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withScanIndexForward(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setScanIndexForward:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isScanIndexForward();
    Code:
       0: aload_0
       1: getfield      #41                 // Field scanIndexForward:Ljava/lang/Boolean;
       4: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExclusiveStartKey();
    Code:
       0: aload_0
       1: getfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
       4: areturn

  public void setExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setExclusiveStartKey:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest addExclusiveStartKeyEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #22                 // class java/util/HashMap
      12: dup
      13: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      16: putfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
      19: aload_0
      20: getfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #26                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String Duplicated keys (
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #30                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ) are provided.
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clearExclusiveStartKeyEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #43                 // Field exclusiveStartKey:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field returnConsumedCapacity:Ljava/lang/String;
       5: return

  public java.lang.String getReturnConsumedCapacity();
    Code:
       0: aload_0
       1: getfield      #45                 // Field returnConsumedCapacity:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setReturnConsumedCapacity:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method com/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity.toString:()Ljava/lang/String;
       5: putfield      #45                 // Field returnConsumedCapacity:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setReturnConsumedCapacity:(Lcom/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity;)V
       5: aload_0
       6: areturn

  public void setProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field projectionExpression:Ljava/lang/String;
       5: return

  public java.lang.String getProjectionExpression();
    Code:
       0: aload_0
       1: getfield      #49                 // Field projectionExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setProjectionExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field filterExpression:Ljava/lang/String;
       5: return

  public java.lang.String getFilterExpression();
    Code:
       0: aload_0
       1: getfield      #51                 // Field filterExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method setFilterExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setKeyConditionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field keyConditionExpression:Ljava/lang/String;
       5: return

  public java.lang.String getKeyConditionExpression();
    Code:
       0: aload_0
       1: getfield      #53                 // Field keyConditionExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withKeyConditionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setKeyConditionExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getExpressionAttributeNames();
    Code:
       0: aload_0
       1: getfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setExpressionAttributeNames:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest addExpressionAttributeNamesEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #22                 // class java/util/HashMap
      12: dup
      13: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      16: putfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
      19: aload_0
      20: getfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #26                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String Duplicated keys (
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #30                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ) are provided.
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clearExpressionAttributeNamesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #55                 // Field expressionAttributeNames:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExpressionAttributeValues();
    Code:
       0: aload_0
       1: getfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setExpressionAttributeValues:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest addExpressionAttributeValuesEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #22                 // class java/util/HashMap
      12: dup
      13: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      16: putfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
      19: aload_0
      20: getfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #26                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #28                 // String Duplicated keys (
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #30                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String ) are provided.
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clearExpressionAttributeValuesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #57                 // Field expressionAttributeValues:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setExclusiveStartKey(java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #22                 // class java/util/HashMap
       3: dup
       4: invokespecial #23                 // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: ifnull        32
      12: aload_3
      13: aload_1
      14: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      19: aload_1
      20: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      25: invokevirtual #61                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          42
      32: new           #25                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #62                 // String hashKey must be non-null object.
      38: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ifnull        63
      46: aload_3
      47: aload_2
      48: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: aload_2
      54: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: invokevirtual #61                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: aload_3
      65: invokevirtual #44                 // Method setExclusiveStartKey:(Ljava/util/Map;)V
      68: return

  public com.amazonaws.services.dynamodbv2.model.QueryRequest withExclusiveStartKey(java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #63                 // Method setExclusiveStartKey:(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V
       6: aload_0
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #64                 // String {
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #26                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #66                 // String TableName:
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      39: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #67                 // String ,
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #26                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #69                 // String IndexName:
      71: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #67                 // String ,
      83: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #26                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #71                 // String Select:
     110: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     117: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #67                 // String ,
     122: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     136: ifnull        171
     139: aload_1
     140: new           #26                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #73                 // String AttributesToGet:
     149: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     156: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #67                 // String ,
     161: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     175: ifnull        210
     178: aload_1
     179: new           #26                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #76                 // String Limit:
     188: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     195: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     198: ldc           #67                 // String ,
     200: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     214: ifnull        249
     217: aload_1
     218: new           #26                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #78                 // String ConsistentRead:
     227: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     234: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #67                 // String ,
     239: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     253: ifnull        288
     256: aload_1
     257: new           #26                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #80                 // String KeyConditions:
     266: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     273: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #67                 // String ,
     278: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     292: ifnull        327
     295: aload_1
     296: new           #26                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #82                 // String QueryFilter:
     305: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     312: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #67                 // String ,
     317: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #26                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #84                 // String ConditionalOperator:
     344: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     351: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #67                 // String ,
     356: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     370: ifnull        405
     373: aload_1
     374: new           #26                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #86                 // String ScanIndexForward:
     383: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     390: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #67                 // String ,
     395: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     409: ifnull        444
     412: aload_1
     413: new           #26                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #88                 // String ExclusiveStartKey:
     422: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     429: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #67                 // String ,
     434: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #26                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #90                 // String ReturnConsumedCapacity:
     461: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     468: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #67                 // String ,
     473: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #26                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #92                 // String ProjectionExpression:
     500: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     507: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #67                 // String ,
     512: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #26                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #94                 // String FilterExpression:
     539: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     546: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #67                 // String ,
     551: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     565: ifnull        600
     568: aload_1
     569: new           #26                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #96                 // String KeyConditionExpression:
     578: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     585: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: ldc           #67                 // String ,
     590: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     604: ifnull        639
     607: aload_1
     608: new           #26                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #98                 // String ExpressionAttributeNames:
     617: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     624: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: ldc           #67                 // String ,
     629: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     643: ifnull        673
     646: aload_1
     647: new           #26                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #100                // String ExpressionAttributeValues:
     656: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     663: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     666: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     669: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     672: pop
     673: aload_1
     674: ldc           #101                // String }
     676: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     679: pop
     680: aload_1
     681: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     684: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #102                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #102                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      72: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
     125: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
     178: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     220: ifnull        241
     223: aload_2
     224: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     227: aload_0
     228: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
     231: invokeinterface #104,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     282: aload_0
     283: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     286: invokevirtual #105                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     328: ifnull        347
     331: aload_2
     332: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     335: aload_0
     336: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     339: invokevirtual #106                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     381: ifnull        402
     384: aload_2
     385: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     388: aload_0
     389: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     392: invokeinterface #107,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     397: ifne          402
     400: iconst_0
     401: ireturn
     402: aload_2
     403: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     406: ifnonnull     413
     409: iconst_1
     410: goto          414
     413: iconst_0
     414: aload_0
     415: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     418: ifnonnull     425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: ixor
     427: ifeq          432
     430: iconst_0
     431: ireturn
     432: aload_2
     433: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     436: ifnull        457
     439: aload_2
     440: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     443: aload_0
     444: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     447: invokeinterface #107,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     452: ifne          457
     455: iconst_0
     456: ireturn
     457: aload_2
     458: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     461: ifnonnull     468
     464: iconst_1
     465: goto          469
     468: iconst_0
     469: aload_0
     470: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     473: ifnonnull     480
     476: iconst_1
     477: goto          481
     480: iconst_0
     481: ixor
     482: ifeq          487
     485: iconst_0
     486: ireturn
     487: aload_2
     488: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     491: ifnull        510
     494: aload_2
     495: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     498: aload_0
     499: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     502: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     505: ifne          510
     508: iconst_0
     509: ireturn
     510: aload_2
     511: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     514: ifnonnull     521
     517: iconst_1
     518: goto          522
     521: iconst_0
     522: aload_0
     523: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     526: ifnonnull     533
     529: iconst_1
     530: goto          534
     533: iconst_0
     534: ixor
     535: ifeq          540
     538: iconst_0
     539: ireturn
     540: aload_2
     541: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     544: ifnull        563
     547: aload_2
     548: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     551: aload_0
     552: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     555: invokevirtual #106                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     558: ifne          563
     561: iconst_0
     562: ireturn
     563: aload_2
     564: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     567: ifnonnull     574
     570: iconst_1
     571: goto          575
     574: iconst_0
     575: aload_0
     576: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     579: ifnonnull     586
     582: iconst_1
     583: goto          587
     586: iconst_0
     587: ixor
     588: ifeq          593
     591: iconst_0
     592: ireturn
     593: aload_2
     594: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     597: ifnull        618
     600: aload_2
     601: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     604: aload_0
     605: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     608: invokeinterface #107,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     613: ifne          618
     616: iconst_0
     617: ireturn
     618: aload_2
     619: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     622: ifnonnull     629
     625: iconst_1
     626: goto          630
     629: iconst_0
     630: aload_0
     631: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     634: ifnonnull     641
     637: iconst_1
     638: goto          642
     641: iconst_0
     642: ixor
     643: ifeq          648
     646: iconst_0
     647: ireturn
     648: aload_2
     649: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     652: ifnull        671
     655: aload_2
     656: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     659: aload_0
     660: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     663: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     666: ifne          671
     669: iconst_0
     670: ireturn
     671: aload_2
     672: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     675: ifnonnull     682
     678: iconst_1
     679: goto          683
     682: iconst_0
     683: aload_0
     684: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     687: ifnonnull     694
     690: iconst_1
     691: goto          695
     694: iconst_0
     695: ixor
     696: ifeq          701
     699: iconst_0
     700: ireturn
     701: aload_2
     702: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     705: ifnull        724
     708: aload_2
     709: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     712: aload_0
     713: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     716: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     719: ifne          724
     722: iconst_0
     723: ireturn
     724: aload_2
     725: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     728: ifnonnull     735
     731: iconst_1
     732: goto          736
     735: iconst_0
     736: aload_0
     737: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     740: ifnonnull     747
     743: iconst_1
     744: goto          748
     747: iconst_0
     748: ixor
     749: ifeq          754
     752: iconst_0
     753: ireturn
     754: aload_2
     755: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     758: ifnull        777
     761: aload_2
     762: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     765: aload_0
     766: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     769: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     772: ifne          777
     775: iconst_0
     776: ireturn
     777: aload_2
     778: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     781: ifnonnull     788
     784: iconst_1
     785: goto          789
     788: iconst_0
     789: aload_0
     790: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     793: ifnonnull     800
     796: iconst_1
     797: goto          801
     800: iconst_0
     801: ixor
     802: ifeq          807
     805: iconst_0
     806: ireturn
     807: aload_2
     808: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     811: ifnull        830
     814: aload_2
     815: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     818: aload_0
     819: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     822: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     825: ifne          830
     828: iconst_0
     829: ireturn
     830: aload_2
     831: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     834: ifnonnull     841
     837: iconst_1
     838: goto          842
     841: iconst_0
     842: aload_0
     843: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     846: ifnonnull     853
     849: iconst_1
     850: goto          854
     853: iconst_0
     854: ixor
     855: ifeq          860
     858: iconst_0
     859: ireturn
     860: aload_2
     861: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     864: ifnull        885
     867: aload_2
     868: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     871: aload_0
     872: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     875: invokeinterface #107,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     880: ifne          885
     883: iconst_0
     884: ireturn
     885: aload_2
     886: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     889: ifnonnull     896
     892: iconst_1
     893: goto          897
     896: iconst_0
     897: aload_0
     898: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     901: ifnonnull     908
     904: iconst_1
     905: goto          909
     908: iconst_0
     909: ixor
     910: ifeq          915
     913: iconst_0
     914: ireturn
     915: aload_2
     916: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     919: ifnull        940
     922: aload_2
     923: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     926: aload_0
     927: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     930: invokeinterface #107,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     935: ifne          940
     938: iconst_0
     939: ireturn
     940: iconst_1
     941: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #65                 // Method getTableName:()Ljava/lang/String;
      24: invokevirtual #108                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #68                 // Method getIndexName:()Ljava/lang/String;
      48: invokevirtual #108                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #70                 // Method getSelect:()Ljava/lang/String;
      72: invokevirtual #108                // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
      85: ifnonnull     92
      88: iconst_0
      89: goto          101
      92: aload_0
      93: invokevirtual #72                 // Method getAttributesToGet:()Ljava/util/List;
      96: invokeinterface #109,  1          // InterfaceMethod java/util/List.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #75                 // Method getLimit:()Ljava/lang/Integer;
     122: invokevirtual #110                // Method java/lang/Integer.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     135: ifnonnull     142
     138: iconst_0
     139: goto          149
     142: aload_0
     143: invokevirtual #77                 // Method getConsistentRead:()Ljava/lang/Boolean;
     146: invokevirtual #111                // Method java/lang/Boolean.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     159: ifnonnull     166
     162: iconst_0
     163: goto          175
     166: aload_0
     167: invokevirtual #79                 // Method getKeyConditions:()Ljava/util/Map;
     170: invokeinterface #112,  1          // InterfaceMethod java/util/Map.hashCode:()I
     175: iadd
     176: istore_2
     177: bipush        31
     179: iload_2
     180: imul
     181: aload_0
     182: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     185: ifnonnull     192
     188: iconst_0
     189: goto          201
     192: aload_0
     193: invokevirtual #81                 // Method getQueryFilter:()Ljava/util/Map;
     196: invokeinterface #112,  1          // InterfaceMethod java/util/Map.hashCode:()I
     201: iadd
     202: istore_2
     203: bipush        31
     205: iload_2
     206: imul
     207: aload_0
     208: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     211: ifnonnull     218
     214: iconst_0
     215: goto          225
     218: aload_0
     219: invokevirtual #83                 // Method getConditionalOperator:()Ljava/lang/String;
     222: invokevirtual #108                // Method java/lang/String.hashCode:()I
     225: iadd
     226: istore_2
     227: bipush        31
     229: iload_2
     230: imul
     231: aload_0
     232: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     235: ifnonnull     242
     238: iconst_0
     239: goto          249
     242: aload_0
     243: invokevirtual #85                 // Method getScanIndexForward:()Ljava/lang/Boolean;
     246: invokevirtual #111                // Method java/lang/Boolean.hashCode:()I
     249: iadd
     250: istore_2
     251: bipush        31
     253: iload_2
     254: imul
     255: aload_0
     256: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     259: ifnonnull     266
     262: iconst_0
     263: goto          275
     266: aload_0
     267: invokevirtual #87                 // Method getExclusiveStartKey:()Ljava/util/Map;
     270: invokeinterface #112,  1          // InterfaceMethod java/util/Map.hashCode:()I
     275: iadd
     276: istore_2
     277: bipush        31
     279: iload_2
     280: imul
     281: aload_0
     282: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     285: ifnonnull     292
     288: iconst_0
     289: goto          299
     292: aload_0
     293: invokevirtual #89                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     296: invokevirtual #108                // Method java/lang/String.hashCode:()I
     299: iadd
     300: istore_2
     301: bipush        31
     303: iload_2
     304: imul
     305: aload_0
     306: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     309: ifnonnull     316
     312: iconst_0
     313: goto          323
     316: aload_0
     317: invokevirtual #91                 // Method getProjectionExpression:()Ljava/lang/String;
     320: invokevirtual #108                // Method java/lang/String.hashCode:()I
     323: iadd
     324: istore_2
     325: bipush        31
     327: iload_2
     328: imul
     329: aload_0
     330: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     333: ifnonnull     340
     336: iconst_0
     337: goto          347
     340: aload_0
     341: invokevirtual #93                 // Method getFilterExpression:()Ljava/lang/String;
     344: invokevirtual #108                // Method java/lang/String.hashCode:()I
     347: iadd
     348: istore_2
     349: bipush        31
     351: iload_2
     352: imul
     353: aload_0
     354: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     357: ifnonnull     364
     360: iconst_0
     361: goto          371
     364: aload_0
     365: invokevirtual #95                 // Method getKeyConditionExpression:()Ljava/lang/String;
     368: invokevirtual #108                // Method java/lang/String.hashCode:()I
     371: iadd
     372: istore_2
     373: bipush        31
     375: iload_2
     376: imul
     377: aload_0
     378: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     381: ifnonnull     388
     384: iconst_0
     385: goto          397
     388: aload_0
     389: invokevirtual #97                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     392: invokeinterface #112,  1          // InterfaceMethod java/util/Map.hashCode:()I
     397: iadd
     398: istore_2
     399: bipush        31
     401: iload_2
     402: imul
     403: aload_0
     404: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     407: ifnonnull     414
     410: iconst_0
     411: goto          423
     414: aload_0
     415: invokevirtual #99                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     418: invokeinterface #112,  1          // InterfaceMethod java/util/Map.hashCode:()I
     423: iadd
     424: istore_2
     425: iload_2
     426: ireturn

  public com.amazonaws.services.dynamodbv2.model.QueryRequest clone();
    Code:
       0: aload_0
       1: invokespecial #113                // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #102                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method clone:()Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method clone:()Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
       4: areturn
}
