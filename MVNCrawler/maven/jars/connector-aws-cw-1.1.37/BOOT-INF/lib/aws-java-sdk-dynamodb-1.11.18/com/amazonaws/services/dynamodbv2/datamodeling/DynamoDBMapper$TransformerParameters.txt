Compiled from "DynamoDBMapper.java"
class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$TransformerParameters<T> implements com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T> {
  private final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T> model;

  private final java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> attributeValues;

  private final boolean partialUpdate;

  private final java.lang.Class<T> modelClass;

  private final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig mapperConfig;

  private final java.lang.String tableName;

  private java.lang.String hashKeyName;

  private java.lang.String rangeKeyName;

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$TransformerParameters(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, boolean, java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field model:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
       9: aload_0
      10: aload_2
      11: invokestatic  #3                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      14: putfield      #4                  // Field attributeValues:Ljava/util/Map;
      17: aload_0
      18: iload_3
      19: putfield      #5                  // Field partialUpdate:Z
      22: aload_0
      23: aload         4
      25: putfield      #6                  // Field modelClass:Ljava/lang/Class;
      28: aload_0
      29: aload         5
      31: putfield      #7                  // Field mapperConfig:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      34: aload_0
      35: aload         6
      37: putfield      #8                  // Field tableName:Ljava/lang/String;
      40: return

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getAttributeValues();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeValues:Ljava/util/Map;
       4: areturn

  public boolean isPartialUpdate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field partialUpdate:Z
       4: ireturn

  public java.lang.Class<T> getModelClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modelClass:Ljava/lang/Class;
       4: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig getMapperConfig();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mapperConfig:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       4: areturn

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableName:Ljava/lang/String;
       4: areturn

  public java.lang.String getHashKeyName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field hashKeyName:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field model:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      12: invokevirtual #10                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.hashKey:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      15: invokevirtual #11                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
      18: putfield      #9                  // Field hashKeyName:Ljava/lang/String;
      21: aload_0
      22: getfield      #9                  // Field hashKeyName:Ljava/lang/String;
      25: areturn

  public java.lang.String getRangeKeyName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rangeKeyName:Ljava/lang/String;
       4: ifnonnull     41
       7: aload_0
       8: getfield      #2                  // Field model:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      11: invokevirtual #13                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.rangeKeyIfExists:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      14: ifnonnull     27
      17: aload_0
      18: invokestatic  #14                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper.access$700:()Ljava/lang/String;
      21: putfield      #12                 // Field rangeKeyName:Ljava/lang/String;
      24: goto          41
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field model:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      32: invokevirtual #15                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.rangeKey:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      35: invokevirtual #11                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
      38: putfield      #12                 // Field rangeKeyName:Ljava/lang/String;
      41: aload_0
      42: getfield      #12                 // Field rangeKeyName:Ljava/lang/String;
      45: invokestatic  #14                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper.access$700:()Ljava/lang/String;
      48: if_acmpne     53
      51: aconst_null
      52: areturn
      53: aload_0
      54: getfield      #12                 // Field rangeKeyName:Ljava/lang/String;
      57: areturn
}
