Compiled from "DynamoDBMapper.java"
public class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper extends com.amazonaws.services.dynamodbv2.datamodeling.AbstractDynamoDBMapper {
  private final com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache s3cc;

  private final com.amazonaws.services.dynamodbv2.AmazonDynamoDB db;

  private final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig config;

  private final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory$Factory models;

  private final com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer transformer;

  static final long MAX_BACKOFF_IN_MILLISECONDS;

  static final int MAX_ITEMS_PER_BATCH;

  static final int BATCH_GET_MAX_RETRY_COUNT_ALL_KEYS;

  private static final java.lang.String USER_AGENT;

  private static final java.lang.String USER_AGENT_BATCH_OPERATION;

  private static final java.lang.String NO_RANGE_KEY;

  private static final org.apache.commons.logging.Log log;

  private static void failFastOnIncompatibleSubclass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #9                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper
       3: if_acmpeq     128
       6: iconst_2
       7: anewarray     #10                 // class java/lang/Class
      10: dup
      11: iconst_0
      12: ldc           #10                 // class java/lang/Class
      14: aastore
      15: dup
      16: iconst_1
      17: ldc           #11                 // class java/util/Map
      19: aastore
      20: astore_1
      21: iconst_3
      22: anewarray     #10                 // class java/lang/Class
      25: dup
      26: iconst_0
      27: ldc           #12                 // class java/lang/String
      29: aastore
      30: dup
      31: iconst_1
      32: ldc           #12                 // class java/lang/String
      34: aastore
      35: dup
      36: iconst_2
      37: ldc           #11                 // class java/util/Map
      39: aastore
      40: astore_2
      41: aload_0
      42: invokevirtual #13                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload         4
      57: if_icmpge     120
      60: aload_3
      61: iload         5
      63: aaload
      64: astore        6
      66: aload         6
      68: invokevirtual #14                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      71: ldc           #15                 // String transformAttributes
      73: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          114
      79: aload         6
      81: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      84: astore        7
      86: aload         7
      88: aload_1
      89: invokestatic  #18                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      92: ifne          104
      95: aload         7
      97: aload_2
      98: invokestatic  #18                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     101: ifeq          114
     104: new           #19                 // class java/lang/IllegalStateException
     107: dup
     108: ldc           #20                 // String The deprecated transformAttributes method is no longer supported as of 1.9.0. Use an AttributeTransformer to inject custom attribute transformation logic.
     110: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: iinc          5, 1
     117: goto          53
     120: aload_0
     121: invokevirtual #22                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     124: astore_0
     125: goto          0
     128: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #23                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.DEFAULT:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: aconst_null
       6: aconst_null
       7: invokespecial #24                 // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      10: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #24                 // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;Lcom/amazonaws/auth/AWSCredentialsProvider;)V
       8: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB, com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #23                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.DEFAULT:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: aload_2
       6: invokespecial #25                 // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/auth/AWSCredentialsProvider;)V
       9: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #24                 // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;Lcom/amazonaws/auth/AWSCredentialsProvider;)V
       8: return

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokestatic  #26                 // Method validate:(Lcom/amazonaws/auth/AWSCredentialsProvider;)Lcom/amazonaws/auth/AWSCredentialsProvider;
       8: invokespecial #24                 // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      11: return

  private static com.amazonaws.auth.AWSCredentialsProvider validate(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #27                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #28                 // String s3 credentials provider must not be null
      10: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper(com.amazonaws.services.dynamodbv2.AmazonDynamoDB, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer, com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method com/amazonaws/services/dynamodbv2/datamodeling/AbstractDynamoDBMapper."<init>":()V
       4: aload_0
       5: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #32                 // Method failFastOnIncompatibleSubclass:(Ljava/lang/Class;)V
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      16: aload_0
      17: aload_2
      18: putfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      21: aload_0
      22: aload_3
      23: putfield      #34                 // Field transformer:Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;
      26: aload         4
      28: ifnonnull     39
      31: aload_0
      32: aconst_null
      33: putfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
      36: goto          52
      39: aload_0
      40: new           #36                 // class com/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache
      43: dup
      44: aload         4
      46: invokespecial #37                 // Method com/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      49: putfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
      52: aload_0
      53: new           #38                 // class com/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies
      56: dup
      57: invokespecial #39                 // Method com/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies."<init>":()V
      60: ldc           #36                 // class com/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache
      62: aload_0
      63: getfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
      66: invokevirtual #40                 // Method com/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies.with:(Ljava/lang/Class;Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;
      69: invokestatic  #41                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories.of:(Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Factory;
      72: putfield      #42                 // Field models:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Factory;
      75: return

  private <T> com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T> getTableModel(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: getfield      #42                 // Field models:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Factory;
       4: aload_2
       5: invokeinterface #43,  2           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Factory.getModelFactory:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory;
      10: aload_1
      11: invokeinterface #44,  2           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory.getTableModel:(Ljava/lang/Class;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      16: areturn

  public <T> T load(java.lang.Class<T>, java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokevirtual #45                 // Method load:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/Object;
       8: areturn

  public <T> T load(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_0
       5: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       8: invokevirtual #45                 // Method load:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/Object;
      11: areturn

  public <T> T load(java.lang.Class<T>, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_0
       5: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       8: invokevirtual #45                 // Method load:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/Object;
      11: areturn

  public <T> T load(T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: invokevirtual #46                 // Method load:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/Object;
       9: areturn

  public <T> T load(T, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: aload_2
       7: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      10: astore_2
      11: aload_0
      12: aload_3
      13: aload_2
      14: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      17: astore        4
      19: aload_0
      20: aload_3
      21: aload_1
      22: aload_2
      23: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      26: astore        5
      28: new           #49                 // class com/amazonaws/services/dynamodbv2/model/GetItemRequest
      31: dup
      32: invokespecial #50                 // Method com/amazonaws/services/dynamodbv2/model/GetItemRequest."<init>":()V
      35: aload_2
      36: invokevirtual #51                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      39: invokevirtual #52                 // Method com/amazonaws/services/dynamodbv2/model/GetItemRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      42: checkcast     #49                 // class com/amazonaws/services/dynamodbv2/model/GetItemRequest
      45: astore        6
      47: aload         4
      49: aload_1
      50: invokevirtual #53                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.mapKey:(Ljava/lang/Object;)Ljava/util/Map;
      53: astore        7
      55: aload         6
      57: aload         7
      59: invokevirtual #54                 // Method com/amazonaws/services/dynamodbv2/model/GetItemRequest.setKey:(Ljava/util/Map;)V
      62: aload         6
      64: aload         5
      66: invokevirtual #55                 // Method com/amazonaws/services/dynamodbv2/model/GetItemRequest.setTableName:(Ljava/lang/String;)V
      69: aload         6
      71: aload_2
      72: invokevirtual #56                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getConsistentReads:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads;
      75: getstatic     #57                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads.CONSISTENT:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads;
      78: if_acmpne     85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: invokestatic  #58                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      89: invokevirtual #59                 // Method com/amazonaws/services/dynamodbv2/model/GetItemRequest.setConsistentRead:(Ljava/lang/Boolean;)V
      92: aload_0
      93: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      96: aload         6
      98: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     101: checkcast     #49                 // class com/amazonaws/services/dynamodbv2/model/GetItemRequest
     104: invokeinterface #61,  2           // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.getItem:(Lcom/amazonaws/services/dynamodbv2/model/GetItemRequest;)Lcom/amazonaws/services/dynamodbv2/model/GetItemResult;
     109: astore        8
     111: aload         8
     113: invokevirtual #62                 // Method com/amazonaws/services/dynamodbv2/model/GetItemResult.getItem:()Ljava/util/Map;
     116: astore        9
     118: aload         9
     120: ifnonnull     125
     123: aconst_null
     124: areturn
     125: aload_0
     126: aload_0
     127: aload         9
     129: aload_3
     130: aload         5
     132: aload_2
     133: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
     136: invokespecial #63                 // Method privateMarshallIntoObject:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/lang/Object;
     139: astore        10
     141: aload         10
     143: areturn

  public <T> T load(java.lang.Class<T>, java.lang.Object, java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: astore        4
       8: aload_0
       9: aload_1
      10: aload         4
      12: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      15: astore        5
      17: aload         5
      19: aload_2
      20: aload_3
      21: invokevirtual #64                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.newKey:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: astore        6
      26: aload_0
      27: aload         6
      29: aload         4
      31: invokevirtual #46                 // Method load:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/Object;
      34: areturn

  private <T> java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getHashKeyEqualsConditions(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T>, T);
    Code:
       0: new           #65                 // class java/util/HashMap
       3: dup
       4: invokespecial #66                 // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_2
       9: ifnonnull     14
      12: aload_3
      13: areturn
      14: aload_1
      15: invokevirtual #67                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.fields:()Ljava/util/Collection;
      18: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          100
      35: aload         4
      37: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #71                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel
      45: astore        5
      47: aload         5
      49: iconst_1
      50: anewarray     #72                 // class com/amazonaws/services/dynamodbv2/model/KeyType
      53: dup
      54: iconst_0
      55: getstatic     #73                 // Field com/amazonaws/services/dynamodbv2/model/KeyType.HASH:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
      58: aastore
      59: invokevirtual #74                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.anyKey:([Lcom/amazonaws/services/dynamodbv2/model/KeyType;)Z
      62: ifeq          97
      65: aload         5
      67: aload_2
      68: invokevirtual #75                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: astore        6
      73: aload         6
      75: ifnull        97
      78: aload_3
      79: aload         5
      81: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
      84: aload         5
      86: aload         6
      88: invokevirtual #77                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.eq:(Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/model/Condition;
      91: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          25
     100: aload_3
     101: areturn

  protected final java.lang.String getTableName(java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_1
       1: aconst_null
       2: aload_2
       3: invokestatic  #79                 // Method internalGetTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
       6: areturn

  protected final java.lang.String getTableName(java.lang.Class<?>, java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #79                 // Method internalGetTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
       6: areturn

  static java.lang.String internalGetTableName(java.lang.Class<?>, java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_2
       1: invokevirtual #80                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getObjectTableNameResolver:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ObjectTableNameResolver;
       4: astore_3
       5: aload_1
       6: ifnull        22
       9: aload_3
      10: ifnull        22
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokeinterface #81,  3           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ObjectTableNameResolver.getTableName:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      21: areturn
      22: aload_2
      23: invokevirtual #82                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getTableNameResolver:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$TableNameResolver;
      26: astore        4
      28: aload         4
      30: ifnonnull     38
      33: getstatic     #83                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$DefaultTableNameResolver.INSTANCE:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$DefaultTableNameResolver;
      36: astore        4
      38: aload         4
      40: aload_0
      41: aload_2
      42: invokeinterface #84,  3           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$TableNameResolver.getTableName:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      47: areturn

  public <T> T marshallIntoObject(java.lang.Class<T>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: invokevirtual #85                 // Method getTableName:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: aload_0
      12: aload_2
      13: aload_1
      14: aload_3
      15: aload_0
      16: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      19: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
      22: invokespecial #63                 // Method privateMarshallIntoObject:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/lang/Object;
      25: areturn

  private <T> T privateMarshallIntoObject(com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T>);
    Code:
       0: aload_1
       1: invokeinterface #86,  1           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters.getModelClass:()Ljava/lang/Class;
       6: astore_2
       7: aload_0
       8: aload_1
       9: invokespecial #87                 // Method untransformAttributes:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
      12: astore_3
      13: aload_0
      14: aload_2
      15: aload_1
      16: invokeinterface #88,  1           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters.getMapperConfig:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      21: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      24: astore        4
      26: aload         4
      28: aload_3
      29: invokevirtual #89                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.unconvert:(Ljava/util/Map;)Ljava/lang/Object;
      32: areturn

  public <T> java.util.List<T> marshallIntoObjects(java.lang.Class<T>, java.util.List<java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>>);
    Code:
       0: new           #90                 // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #92                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_2
      15: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          61
      32: aload         4
      34: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #11                 // class java/util/Map
      42: astore        5
      44: aload_3
      45: aload_0
      46: aload_1
      47: aload         5
      49: invokevirtual #94                 // Method marshallIntoObject:(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
      52: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          22
      61: aload_3
      62: areturn

  final <T> java.util.List<T> marshallIntoObjects(java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T>>);
    Code:
       0: new           #90                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #92                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          57
      30: aload_3
      31: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #96                 // class com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters
      39: astore        4
      41: aload_2
      42: aload_0
      43: aload         4
      45: invokespecial #63                 // Method privateMarshallIntoObject:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/lang/Object;
      48: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: goto          21
      57: aload_2
      58: areturn

  public <T> void save(T);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #97                 // Method save:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBSaveExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      10: return

  public <T> void save(T, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBSaveExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #97                 // Method save:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBSaveExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      10: return

  public <T> void save(T, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #97                 // Method save:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBSaveExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
       7: return

  public <T> void save(T, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBSaveExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore        4
       7: aload_1
       8: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: astore        5
      13: aload_0
      14: aload         5
      16: aload_1
      17: aload         4
      19: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      22: astore        6
      24: aload_0
      25: aload         5
      27: aload         4
      29: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      32: astore        7
      34: aload         4
      36: invokevirtual #98                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getSaveBehavior:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
      39: getstatic     #99                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior.CLOBBER:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
      42: if_acmpeq     59
      45: aload         7
      47: aload_1
      48: aload         4
      50: invokevirtual #98                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getSaveBehavior:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
      53: invokevirtual #100                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.anyKeyGeneratable:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore        8
      66: iload         8
      68: ifeq          93
      71: new           #101                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$1
      74: dup
      75: aload_0
      76: aload_0
      77: aload         5
      79: aload_1
      80: aload         6
      82: aload         4
      84: aload_2
      85: invokespecial #102                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$1."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBSaveExpression;)V
      88: astore        9
      90: goto          112
      93: new           #103                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$2
      96: dup
      97: aload_0
      98: aload_0
      99: aload         5
     101: aload_1
     102: aload         6
     104: aload         4
     106: aload_2
     107: invokespecial #104                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$2."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBSaveExpression;)V
     110: astore        9
     112: aload         9
     114: invokevirtual #105                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$SaveObjectHandler.execute:()V
     117: return

  public void delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #106                // Method delete:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      10: return

  public void delete(java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #106                // Method delete:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      10: return

  public void delete(java.lang.Object, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #106                // Method delete:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
       7: return

  public <T> void delete(T, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_1
       7: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_3
      16: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      19: astore        5
      21: aload_0
      22: aload         4
      24: aload_1
      25: aload_3
      26: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      29: astore        6
      31: aload         5
      33: aload_1
      34: invokevirtual #53                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.mapKey:(Ljava/lang/Object;)Ljava/util/Map;
      37: astore        7
      39: new           #65                 // class java/util/HashMap
      42: dup
      43: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      46: astore        8
      48: aload_3
      49: invokevirtual #98                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getSaveBehavior:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
      52: getstatic     #99                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior.CLOBBER:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
      55: if_acmpeq     130
      58: aload         5
      60: invokevirtual #67                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.fields:()Ljava/util/Collection;
      63: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      68: astore        9
      70: aload         9
      72: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          130
      80: aload         9
      82: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #71                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel
      90: astore        10
      92: aload         10
      94: invokevirtual #107                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.versioned:()Z
      97: ifeq          127
     100: aload         8
     102: aload         10
     104: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
     107: aload         10
     109: aload         10
     111: aload_1
     112: invokevirtual #75                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.get:(Ljava/lang/Object;)Ljava/lang/Object;
     115: invokevirtual #108                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.expectedIfExists:(Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/model/ExpectedAttributeValue;
     118: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: goto          130
     127: goto          70
     130: new           #109                // class com/amazonaws/services/dynamodbv2/model/DeleteItemRequest
     133: dup
     134: invokespecial #110                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest."<init>":()V
     137: aload         7
     139: invokevirtual #111                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withKey:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     142: aload         6
     144: invokevirtual #112                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withTableName:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     147: aload         8
     149: invokevirtual #113                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withExpected:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     152: aload_3
     153: invokevirtual #51                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     156: invokevirtual #114                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
     159: checkcast     #109                // class com/amazonaws/services/dynamodbv2/model/DeleteItemRequest
     162: astore        9
     164: aload_2
     165: ifnull        254
     168: aload_2
     169: invokevirtual #115                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getConditionExpression:()Ljava/lang/String;
     172: astore        10
     174: aload         10
     176: ifnull        227
     179: aload         8
     181: ifnull        204
     184: aload         8
     186: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     191: ifne          204
     194: new           #117                // class com/amazonaws/AmazonClientException
     197: dup
     198: ldc           #118                // String Condition Expressions cannot be used if a versioned attribute is present
     200: invokespecial #119                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     203: athrow
     204: aload         9
     206: aload         10
     208: invokevirtual #120                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withConditionExpression:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     211: aload_2
     212: invokevirtual #121                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getExpressionAttributeNames:()Ljava/util/Map;
     215: invokevirtual #122                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withExpressionAttributeNames:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     218: aload_2
     219: invokevirtual #123                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getExpressionAttributeValues:()Ljava/util/Map;
     222: invokevirtual #124                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withExpressionAttributeValues:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     225: astore        9
     227: aload         9
     229: aload         8
     231: aload_2
     232: invokevirtual #125                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getExpected:()Ljava/util/Map;
     235: aload_2
     236: invokevirtual #126                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getConditionalOperator:()Ljava/lang/String;
     239: invokestatic  #7                  // Method mergeExpectedAttributeValueConditions:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;
     242: invokevirtual #113                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withExpected:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     245: aload_2
     246: invokevirtual #126                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBDeleteExpression.getConditionalOperator:()Ljava/lang/String;
     249: invokevirtual #127                // Method com/amazonaws/services/dynamodbv2/model/DeleteItemRequest.withConditionalOperator:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;
     252: astore        9
     254: aload_0
     255: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
     258: aload         9
     260: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     263: checkcast     #109                // class com/amazonaws/services/dynamodbv2/model/DeleteItemRequest
     266: invokeinterface #128,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.deleteItem:(Lcom/amazonaws/services/dynamodbv2/model/DeleteItemRequest;)Lcom/amazonaws/services/dynamodbv2/model/DeleteItemResult;
     271: pop
     272: return

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchDelete(java.lang.Iterable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: invokestatic  #129                // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: aload_1
       5: aload_0
       6: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       9: invokevirtual #130                // Method batchWrite:(Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      12: areturn

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchDelete(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #129                // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: aload_1
       5: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: aload_0
       9: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      12: invokevirtual #130                // Method batchWrite:(Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      15: areturn

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchSave(java.lang.Iterable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // Method java/util/Collections.emptyList:()Ljava/util/List;
       5: aload_0
       6: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       9: invokevirtual #130                // Method batchWrite:(Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      12: areturn

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchSave(java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokestatic  #129                // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: aload_0
       9: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      12: invokevirtual #130                // Method batchWrite:(Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      15: areturn

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchWrite(java.lang.Iterable<? extends java.lang.Object>, java.lang.Iterable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #130                // Method batchWrite:(Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      10: areturn

  public java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> batchWrite(java.lang.Iterable<? extends java.lang.Object>, java.lang.Iterable<? extends java.lang.Object>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: new           #132                // class java/util/LinkedList
       9: dup
      10: invokespecial #133                // Method java/util/LinkedList."<init>":()V
      13: astore        4
      15: new           #65                 // class java/util/HashMap
      18: dup
      19: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      22: astore        5
      24: new           #132                // class java/util/LinkedList
      27: dup
      28: invokespecial #133                // Method java/util/LinkedList."<init>":()V
      31: astore        6
      33: aload_1
      34: invokeinterface #134,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      39: astore        7
      41: aload         7
      43: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          306
      51: aload         7
      53: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: astore        8
      60: aload         8
      62: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: astore        9
      67: aload_0
      68: aload         9
      70: aload         8
      72: aload_3
      73: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      76: astore        10
      78: new           #65                 // class java/util/HashMap
      81: dup
      82: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      85: astore        11
      87: aload_0
      88: aload         9
      90: aload_3
      91: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      94: astore        12
      96: aload         12
      98: invokevirtual #67                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.fields:()Ljava/util/Collection;
     101: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     106: astore        13
     108: aload         13
     110: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     115: ifeq          223
     118: aload         13
     120: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #71                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel
     128: astore        14
     130: aconst_null
     131: astore        15
     133: aload         14
     135: aload         8
     137: aload_3
     138: invokevirtual #98                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getSaveBehavior:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;
     141: aload         12
     143: invokevirtual #135                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.canGenerate:(Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$SaveBehavior;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;)Z
     146: ifeq          191
     149: aload         14
     151: invokevirtual #107                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.versioned:()Z
     154: ifne          191
     157: aload         14
     159: aload         8
     161: invokevirtual #136                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.generateAndConvert:(Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     164: astore        15
     166: aload         6
     168: new           #137                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$ValueUpdate
     171: dup
     172: aload_0
     173: aload         14
     175: aload         15
     177: aload         8
     179: invokespecial #138                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$ValueUpdate."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;Ljava/lang/Object;)V
     182: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     187: pop
     188: goto          200
     191: aload         14
     193: aload         8
     195: invokevirtual #139                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.getAndConvert:(Ljava/lang/Object;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     198: astore        15
     200: aload         15
     202: ifnull        220
     205: aload         11
     207: aload         14
     209: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
     212: aload         15
     214: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     219: pop
     220: goto          108
     223: aload         5
     225: aload         10
     227: invokevirtual #140                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
     230: ifne          248
     233: aload         5
     235: aload         10
     237: new           #132                // class java/util/LinkedList
     240: dup
     241: invokespecial #133                // Method java/util/LinkedList."<init>":()V
     244: invokevirtual #141                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     247: pop
     248: aload_0
     249: aload         11
     251: aload         9
     253: aload         10
     255: aload_3
     256: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
     259: astore        13
     261: aload         5
     263: aload         10
     265: invokevirtual #142                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     268: checkcast     #143                // class java/util/List
     271: new           #144                // class com/amazonaws/services/dynamodbv2/model/WriteRequest
     274: dup
     275: invokespecial #145                // Method com/amazonaws/services/dynamodbv2/model/WriteRequest."<init>":()V
     278: new           #146                // class com/amazonaws/services/dynamodbv2/model/PutRequest
     281: dup
     282: invokespecial #147                // Method com/amazonaws/services/dynamodbv2/model/PutRequest."<init>":()V
     285: aload_0
     286: aload         13
     288: invokespecial #2                  // Method transformAttributes:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
     291: invokevirtual #148                // Method com/amazonaws/services/dynamodbv2/model/PutRequest.withItem:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/PutRequest;
     294: invokevirtual #149                // Method com/amazonaws/services/dynamodbv2/model/WriteRequest.withPutRequest:(Lcom/amazonaws/services/dynamodbv2/model/PutRequest;)Lcom/amazonaws/services/dynamodbv2/model/WriteRequest;
     297: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     302: pop
     303: goto          41
     306: aload_2
     307: invokeinterface #134,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     312: astore        7
     314: aload         7
     316: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     321: ifeq          435
     324: aload         7
     326: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     331: astore        8
     333: aload         8
     335: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     338: astore        9
     340: aload_0
     341: aload         9
     343: aload         8
     345: aload_3
     346: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
     349: astore        10
     351: aload_0
     352: aload         9
     354: aload_3
     355: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
     358: astore        11
     360: aload         11
     362: aload         8
     364: invokevirtual #53                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.mapKey:(Ljava/lang/Object;)Ljava/util/Map;
     367: astore        12
     369: aload         5
     371: aload         10
     373: invokevirtual #140                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
     376: ifne          394
     379: aload         5
     381: aload         10
     383: new           #132                // class java/util/LinkedList
     386: dup
     387: invokespecial #133                // Method java/util/LinkedList."<init>":()V
     390: invokevirtual #141                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     393: pop
     394: aload         5
     396: aload         10
     398: invokevirtual #142                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     401: checkcast     #143                // class java/util/List
     404: new           #144                // class com/amazonaws/services/dynamodbv2/model/WriteRequest
     407: dup
     408: invokespecial #145                // Method com/amazonaws/services/dynamodbv2/model/WriteRequest."<init>":()V
     411: new           #150                // class com/amazonaws/services/dynamodbv2/model/DeleteRequest
     414: dup
     415: invokespecial #151                // Method com/amazonaws/services/dynamodbv2/model/DeleteRequest."<init>":()V
     418: aload         12
     420: invokevirtual #152                // Method com/amazonaws/services/dynamodbv2/model/DeleteRequest.withKey:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/DeleteRequest;
     423: invokevirtual #153                // Method com/amazonaws/services/dynamodbv2/model/WriteRequest.withDeleteRequest:(Lcom/amazonaws/services/dynamodbv2/model/DeleteRequest;)Lcom/amazonaws/services/dynamodbv2/model/WriteRequest;
     426: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     431: pop
     432: goto          314
     435: aload         5
     437: invokevirtual #154                // Method java/util/HashMap.isEmpty:()Z
     440: ifne          674
     443: new           #65                 // class java/util/HashMap
     446: dup
     447: invokespecial #66                 // Method java/util/HashMap."<init>":()V
     450: astore        7
     452: iconst_0
     453: istore        8
     455: aload         5
     457: invokevirtual #155                // Method java/util/HashMap.entrySet:()Ljava/util/Set;
     460: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     465: astore        9
     467: aload         9
     469: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     474: ifeq          618
     477: iload         8
     479: bipush        25
     481: if_icmpge     618
     484: aload         9
     486: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     491: checkcast     #157                // class java/util/Map$Entry
     494: astore        10
     496: aload         7
     498: aload         10
     500: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     505: new           #132                // class java/util/LinkedList
     508: dup
     509: invokespecial #133                // Method java/util/LinkedList."<init>":()V
     512: invokevirtual #141                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     515: pop
     516: aload         10
     518: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     523: checkcast     #143                // class java/util/List
     526: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     531: astore        11
     533: aload         11
     535: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     540: ifeq          598
     543: iload         8
     545: iinc          8, 1
     548: bipush        25
     550: if_icmpge     598
     553: aload         11
     555: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     560: checkcast     #144                // class com/amazonaws/services/dynamodbv2/model/WriteRequest
     563: astore        12
     565: aload         7
     567: aload         10
     569: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     574: invokevirtual #142                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     577: checkcast     #143                // class java/util/List
     580: aload         12
     582: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     587: pop
     588: aload         11
     590: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.remove:()V
     595: goto          533
     598: aload         11
     600: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     605: ifne          615
     608: aload         9
     610: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.remove:()V
     615: goto          467
     618: aload_0
     619: aload         7
     621: aload_3
     622: invokevirtual #161                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getBatchWriteRetryStrategy:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy;
     625: invokespecial #162                // Method writeOneBatch:(Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy;)Ljava/util/List;
     628: astore        10
     630: aload         10
     632: ifnull        671
     635: aload         4
     637: aload         10
     639: invokeinterface #163,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     644: pop
     645: aload_0
     646: aload         10
     648: invokespecial #164                // Method containsThrottlingException:(Ljava/util/List;)Z
     651: ifeq          671
     654: ldc2_w        #165                // long 2000l
     657: invokestatic  #167                // Method java/lang/Thread.sleep:(J)V
     660: goto          671
     663: astore        11
     665: invokestatic  #169                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     668: invokevirtual #170                // Method java/lang/Thread.interrupt:()V
     671: goto          435
     674: aload         6
     676: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     681: astore        7
     683: aload         7
     685: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     690: ifeq          713
     693: aload         7
     695: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     700: checkcast     #137                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$ValueUpdate
     703: astore        8
     705: aload         8
     707: invokevirtual #171                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$ValueUpdate.apply:()V
     710: goto          683
     713: aload         4
     715: areturn
    Exception table:
       from    to  target type
         654   660   663   Class java/lang/InterruptedException

  private java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch> writeOneBatch(java.util.Map<java.lang.String, java.util.List<com.amazonaws.services.dynamodbv2.model.WriteRequest>>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig$BatchWriteRetryStrategy);
    Code:
       0: new           #132                // class java/util/LinkedList
       3: dup
       4: invokespecial #133                // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: new           #65                 // class java/util/HashMap
      11: dup
      12: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      15: astore        4
      17: new           #65                 // class java/util/HashMap
      20: dup
      21: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      24: astore        5
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokespecial #172                // Method doBatchWriteItemWithRetry:(Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch;
      32: astore        6
      34: aload         6
      36: ifnull        135
      39: aload         6
      41: invokevirtual #173                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.getException:()Ljava/lang/Exception;
      44: instanceof    #174                // class com/amazonaws/AmazonServiceException
      47: ifeq          126
      50: aload         6
      52: invokevirtual #173                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.getException:()Ljava/lang/Exception;
      55: checkcast     #174                // class com/amazonaws/AmazonServiceException
      58: invokestatic  #175                // Method com/amazonaws/retry/RetryUtils.isRequestEntityTooLargeException:(Lcom/amazonaws/AmazonServiceException;)Z
      61: ifeq          126
      64: aload_0
      65: aload         6
      67: invokespecial #176                // Method computeFailedBatchSize:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch;)I
      70: iconst_1
      71: if_icmpne     86
      74: aload_3
      75: aload         6
      77: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          135
      86: aload_0
      87: aload_1
      88: aload         4
      90: aload         5
      92: invokespecial #177                // Method divideBatch:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      95: aload_3
      96: aload_0
      97: aload         4
      99: aload_2
     100: invokespecial #162                // Method writeOneBatch:(Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy;)Ljava/util/List;
     103: invokeinterface #163,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     108: pop
     109: aload_3
     110: aload_0
     111: aload         5
     113: aload_2
     114: invokespecial #162                // Method writeOneBatch:(Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy;)Ljava/util/List;
     117: invokeinterface #163,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     122: pop
     123: goto          135
     126: aload_3
     127: aload         6
     129: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: aload_3
     136: areturn

  private boolean containsThrottlingException(java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch>);
    Code:
       0: aload_1
       1: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          56
      16: aload_2
      17: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #178                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch
      25: astore_3
      26: aload_3
      27: invokevirtual #173                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.getException:()Ljava/lang/Exception;
      30: astore        4
      32: aload         4
      34: instanceof    #174                // class com/amazonaws/AmazonServiceException
      37: ifeq          53
      40: aload         4
      42: checkcast     #174                // class com/amazonaws/AmazonServiceException
      45: invokestatic  #179                // Method com/amazonaws/retry/RetryUtils.isThrottlingException:(Lcom/amazonaws/AmazonServiceException;)Z
      48: ifeq          53
      51: iconst_1
      52: ireturn
      53: goto          7
      56: iconst_0
      57: ireturn

  private void divideBatch(java.util.Map<java.lang.String, java.util.List<com.amazonaws.services.dynamodbv2.model.WriteRequest>>, java.util.Map<java.lang.String, java.util.List<com.amazonaws.services.dynamodbv2.model.WriteRequest>>, java.util.Map<java.lang.String, java.util.List<com.amazonaws.services.dynamodbv2.model.WriteRequest>>);
    Code:
       0: aload_1
       1: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          117
      23: aload         4
      25: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class java/lang/String
      33: astore        5
      35: aload_1
      36: aload         5
      38: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #143                // class java/util/List
      46: astore        6
      48: aload         6
      50: iconst_0
      51: aload         6
      53: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      58: iconst_2
      59: idiv
      60: invokeinterface #182,  3          // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      65: astore        7
      67: aload         6
      69: aload         6
      71: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      76: iconst_2
      77: idiv
      78: aload         6
      80: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      85: invokeinterface #182,  3          // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      90: astore        8
      92: aload_2
      93: aload         5
      95: aload         7
      97: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload_3
     104: aload         5
     106: aload         8
     108: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: goto          13
     117: return

  private int computeFailedBatchSize(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #183                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.getUnprocessedItems:()Ljava/util/Map;
       6: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      11: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          62
      26: aload_3
      27: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #12                 // class java/lang/String
      35: astore        4
      37: iload_2
      38: aload_1
      39: invokevirtual #183                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.getUnprocessedItems:()Ljava/util/Map;
      42: aload         4
      44: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #143                // class java/util/List
      52: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      57: iadd
      58: istore_2
      59: goto          17
      62: iload_2
      63: ireturn

  private com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper$FailedBatch doBatchWriteItemWithRetry(java.util.Map<java.lang.String, java.util.List<com.amazonaws.services.dynamodbv2.model.WriteRequest>>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig$BatchWriteRetryStrategy);
    Code:
       0: aconst_null
       1: astore_3
       2: iconst_0
       3: istore        4
       5: aload_2
       6: aload_1
       7: invokestatic  #184                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: invokeinterface #185,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy.getMaxRetryOnUnprocessedItems:(Ljava/util/Map;)I
      15: istore        5
      17: aconst_null
      18: astore        6
      20: aload_1
      21: astore        7
      23: aload_0
      24: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      27: new           #186                // class com/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest
      30: dup
      31: invokespecial #187                // Method com/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest."<init>":()V
      34: aload         7
      36: invokevirtual #188                // Method com/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest.withRequestItems:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest;
      39: invokestatic  #189                // Method applyBatchOperationUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      42: checkcast     #186                // class com/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest
      45: invokeinterface #190,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.batchWriteItem:(Lcom/amazonaws/services/dynamodbv2/model/BatchWriteItemRequest;)Lcom/amazonaws/services/dynamodbv2/model/BatchWriteItemResult;
      50: astore_3
      51: goto          82
      54: astore        8
      56: new           #178                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch
      59: dup
      60: invokespecial #192                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch."<init>":()V
      63: astore        6
      65: aload         6
      67: aload         7
      69: invokevirtual #193                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.setUnprocessedItems:(Ljava/util/Map;)V
      72: aload         6
      74: aload         8
      76: invokevirtual #194                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.setException:(Ljava/lang/Exception;)V
      79: aload         6
      81: areturn
      82: aload_3
      83: invokevirtual #195                // Method com/amazonaws/services/dynamodbv2/model/BatchWriteItemResult.getUnprocessedItems:()Ljava/util/Map;
      86: astore        7
      88: aload         7
      90: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
      95: ifle          158
      98: iload         5
     100: iflt          135
     103: iload         4
     105: iload         5
     107: if_icmplt     135
     110: new           #178                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch
     113: dup
     114: invokespecial #192                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch."<init>":()V
     117: astore        6
     119: aload         6
     121: aload         7
     123: invokevirtual #193                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.setUnprocessedItems:(Ljava/util/Map;)V
     126: aload         6
     128: aconst_null
     129: invokevirtual #194                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$FailedBatch.setException:(Ljava/lang/Exception;)V
     132: aload         6
     134: areturn
     135: aload_0
     136: aload_2
     137: aload         7
     139: invokestatic  #184                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     142: iload         4
     144: invokeinterface #197,  3          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchWriteRetryStrategy.getDelayBeforeRetryUnprocessedItems:(Ljava/util/Map;I)J
     149: invokespecial #198                // Method pause:(J)V
     152: iinc          4, 1
     155: goto          23
     158: aload         6
     160: areturn
    Exception table:
       from    to  target type
          23    51    54   Class java/lang/Exception

  public java.util.Map<java.lang.String, java.util.List<java.lang.Object>> batchLoad(java.lang.Iterable<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: invokevirtual #199                // Method batchLoad:(Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/Map;
       9: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.Object>> batchLoad(java.lang.Iterable<? extends java.lang.Object>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_2
       6: aload_2
       7: invokevirtual #56                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getConsistentReads:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads;
      10: getstatic     #57                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads.CONSISTENT:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$ConsistentReads;
      13: if_acmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_3
      22: aload_1
      23: ifnonnull     34
      26: new           #65                 // class java/util/HashMap
      29: dup
      30: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      33: areturn
      34: new           #65                 // class java/util/HashMap
      37: dup
      38: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      41: astore        4
      43: new           #65                 // class java/util/HashMap
      46: dup
      47: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      50: astore        5
      52: new           #65                 // class java/util/HashMap
      55: dup
      56: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      59: astore        6
      61: iconst_0
      62: istore        7
      64: aload_1
      65: invokeinterface #134,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      70: astore        8
      72: aload         8
      74: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          238
      82: aload         8
      84: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: astore        9
      91: aload         9
      93: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      96: astore        10
      98: aload_0
      99: aload         10
     101: aload_2
     102: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
     105: astore        11
     107: aload_0
     108: aload         10
     110: aload         9
     112: aload_2
     113: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
     116: astore        12
     118: aload         5
     120: aload         12
     122: aload         10
     124: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload         4
     132: aload         12
     134: invokeinterface #200,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     139: ifne          176
     142: aload         4
     144: aload         12
     146: new           #201                // class com/amazonaws/services/dynamodbv2/model/KeysAndAttributes
     149: dup
     150: invokespecial #202                // Method com/amazonaws/services/dynamodbv2/model/KeysAndAttributes."<init>":()V
     153: iload_3
     154: invokestatic  #58                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     157: invokevirtual #203                // Method com/amazonaws/services/dynamodbv2/model/KeysAndAttributes.withConsistentRead:(Ljava/lang/Boolean;)Lcom/amazonaws/services/dynamodbv2/model/KeysAndAttributes;
     160: new           #132                // class java/util/LinkedList
     163: dup
     164: invokespecial #133                // Method java/util/LinkedList."<init>":()V
     167: invokevirtual #204                // Method com/amazonaws/services/dynamodbv2/model/KeysAndAttributes.withKeys:(Ljava/util/Collection;)Lcom/amazonaws/services/dynamodbv2/model/KeysAndAttributes;
     170: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     175: pop
     176: aload         4
     178: aload         12
     180: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #201                // class com/amazonaws/services/dynamodbv2/model/KeysAndAttributes
     188: invokevirtual #205                // Method com/amazonaws/services/dynamodbv2/model/KeysAndAttributes.getKeys:()Ljava/util/List;
     191: aload         11
     193: aload         9
     195: invokevirtual #53                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.mapKey:(Ljava/lang/Object;)Ljava/util/Map;
     198: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     203: pop
     204: iinc          7, 1
     207: iload         7
     209: bipush        100
     211: if_icmpne     235
     214: aload_0
     215: aload         5
     217: aload         4
     219: aload         6
     221: aload_2
     222: invokespecial #206                // Method processBatchGetRequest:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
     225: aload         4
     227: invokeinterface #207,  1          // InterfaceMethod java/util/Map.clear:()V
     232: iconst_0
     233: istore        7
     235: goto          72
     238: iload         7
     240: ifle          254
     243: aload_0
     244: aload         5
     246: aload         4
     248: aload         6
     250: aload_2
     251: invokespecial #206                // Method processBatchGetRequest:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
     254: aload         6
     256: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.Object>> batchLoad(java.util.Map<java.lang.Class<?>, java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.KeyPair>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: invokevirtual #208                // Method batchLoad:(Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/Map;
       9: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.Object>> batchLoad(java.util.Map<java.lang.Class<?>, java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.KeyPair>>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: new           #90                 // class java/util/ArrayList
       3: dup
       4: invokespecial #209                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_1
       9: ifnull        135
      12: aload_1
      13: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          135
      35: aload         4
      37: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #10                 // class java/lang/Class
      45: astore        5
      47: aload_1
      48: aload         5
      50: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: ifnull        132
      58: aload_0
      59: aload         5
      61: aload_2
      62: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      65: astore        6
      67: aload_1
      68: aload         5
      70: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #143                // class java/util/List
      78: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      83: astore        7
      85: aload         7
      87: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          132
      95: aload         7
      97: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #210                // class com/amazonaws/services/dynamodbv2/datamodeling/KeyPair
     105: astore        8
     107: aload_3
     108: aload         6
     110: aload         8
     112: invokevirtual #211                // Method com/amazonaws/services/dynamodbv2/datamodeling/KeyPair.getHashKey:()Ljava/lang/Object;
     115: aload         8
     117: invokevirtual #212                // Method com/amazonaws/services/dynamodbv2/datamodeling/KeyPair.getRangeKey:()Ljava/lang/Object;
     120: invokevirtual #64                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.newKey:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     128: pop
     129: goto          85
     132: goto          25
     135: aload_0
     136: aload_3
     137: aload_2
     138: invokevirtual #199                // Method batchLoad:(Ljava/lang/Iterable;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/Map;
     141: areturn

  private void processBatchGetRequest(java.util.Map<java.lang.String, java.lang.Class<?>>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.KeysAndAttributes>, java.util.Map<java.lang.String, java.util.List<java.lang.Object>>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aconst_null
       1: astore        5
       3: new           #213                // class com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest
       6: dup
       7: invokespecial #214                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest."<init>":()V
      10: aload         4
      12: invokevirtual #51                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
      15: invokevirtual #215                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
      18: checkcast     #213                // class com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest
      21: astore        6
      23: aload         6
      25: aload_2
      26: invokevirtual #216                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest.setRequestItems:(Ljava/util/Map;)V
      29: aload         4
      31: invokevirtual #217                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getBatchLoadRetryStrategy:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchLoadRetryStrategy;
      34: astore        7
      36: new           #218                // class com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext
      39: dup
      40: aload         6
      42: invokespecial #219                // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext."<init>":(Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemRequest;)V
      45: astore        8
      47: iconst_0
      48: istore        9
      50: aload_2
      51: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
      56: istore        10
      58: aload         5
      60: ifnull        109
      63: iinc          9, 1
      66: aload         8
      68: iload         9
      70: invokevirtual #220                // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.setRetriesAttempted:(I)V
      73: aload         5
      75: invokevirtual #221                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getUnprocessedKeys:()Ljava/util/Map;
      78: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
      83: ifle          109
      86: aload_0
      87: aload         7
      89: aload         8
      91: invokeinterface #222,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchLoadRetryStrategy.getDelayBeforeNextRetry:(Lcom/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext;)J
      96: invokespecial #198                // Method pause:(J)V
      99: aload         6
     101: aload         5
     103: invokevirtual #221                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getUnprocessedKeys:()Ljava/util/Map;
     106: invokevirtual #216                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest.setRequestItems:(Ljava/util/Map;)V
     109: aload_0
     110: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
     113: aload         6
     115: invokestatic  #189                // Method applyBatchOperationUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     118: checkcast     #213                // class com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest
     121: invokeinterface #223,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.batchGetItem:(Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemRequest;)Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemResult;
     126: astore        5
     128: aload         5
     130: invokevirtual #224                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getResponses:()Ljava/util/Map;
     133: astore        11
     135: aload         11
     137: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     142: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     147: astore        12
     149: aload         12
     151: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     156: ifeq          309
     159: aload         12
     161: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     166: checkcast     #12                 // class java/lang/String
     169: astore        13
     171: aconst_null
     172: astore        14
     174: aload_3
     175: aload         13
     177: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     182: ifnull        201
     185: aload_3
     186: aload         13
     188: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     193: checkcast     #143                // class java/util/List
     196: astore        14
     198: goto          210
     201: new           #132                // class java/util/LinkedList
     204: dup
     205: invokespecial #133                // Method java/util/LinkedList."<init>":()V
     208: astore        14
     210: aload_1
     211: aload         13
     213: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     218: checkcast     #10                 // class java/lang/Class
     221: astore        15
     223: aload         11
     225: aload         13
     227: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     232: checkcast     #143                // class java/util/List
     235: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     240: astore        16
     242: aload         16
     244: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     249: ifeq          295
     252: aload         16
     254: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     259: checkcast     #11                 // class java/util/Map
     262: astore        17
     264: aload_0
     265: aload         17
     267: aload         15
     269: aload         13
     271: aload         4
     273: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
     276: astore        18
     278: aload         14
     280: aload_0
     281: aload         18
     283: invokespecial #63                 // Method privateMarshallIntoObject:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/lang/Object;
     286: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     291: pop
     292: goto          242
     295: aload_3
     296: aload         13
     298: aload         14
     300: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     305: pop
     306: goto          149
     309: aload         8
     311: aload         5
     313: invokevirtual #225                // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.setBatchGetItemResult:(Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemResult;)V
     316: aload         7
     318: aload         8
     320: invokeinterface #226,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$BatchLoadRetryStrategy.shouldRetry:(Lcom/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext;)Z
     325: ifne          58
     328: iload         10
     330: aload         5
     332: invokevirtual #221                // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getUnprocessedKeys:()Ljava/util/Map;
     335: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
     340: if_icmpne     353
     343: new           #117                // class com/amazonaws/AmazonClientException
     346: dup
     347: ldc           #227                // String Batch Get Item request to server hasn\'t received any data. Please try again later
     349: invokespecial #119                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
     352: athrow
     353: return

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> convertToItem(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValueUpdate>);
    Code:
       0: new           #65                 // class java/util/HashMap
       3: dup
       4: invokespecial #66                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #228,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          115
      29: aload_3
      30: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #157                // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #12                 // class java/lang/String
      50: astore        5
      52: aload         4
      54: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #229                // class com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate
      62: invokevirtual #230                // Method com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate.getValue:()Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
      65: astore        6
      67: aload         4
      69: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #229                // class com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate
      77: invokevirtual #231                // Method com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate.getAction:()Ljava/lang/String;
      80: astore        7
      82: aload         6
      84: ifnull        112
      87: getstatic     #232                // Field com/amazonaws/services/dynamodbv2/model/AttributeAction.DELETE:Lcom/amazonaws/services/dynamodbv2/model/AttributeAction;
      90: invokevirtual #233                // Method com/amazonaws/services/dynamodbv2/model/AttributeAction.toString:()Ljava/lang/String;
      93: aload         7
      95: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifne          112
     101: aload_2
     102: aload         5
     104: aload         6
     106: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          20
     115: aload_2
     116: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedScanList<T> scan(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #234                // Method scan:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/PaginatedScanList;
      10: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedScanList<T> scan(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #235                // Method createScanRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
      13: astore        4
      15: aload_0
      16: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      19: aload         4
      21: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      24: checkcast     #236                // class com/amazonaws/services/dynamodbv2/model/ScanRequest
      27: invokeinterface #237,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.scan:(Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;)Lcom/amazonaws/services/dynamodbv2/model/ScanResult;
      32: astore        5
      34: new           #238                // class com/amazonaws/services/dynamodbv2/datamodeling/PaginatedScanList
      37: dup
      38: aload_0
      39: aload_1
      40: aload_0
      41: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      44: aload         4
      46: aload         5
      48: aload_3
      49: invokevirtual #239                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getPaginationLoadingStrategy:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;
      52: aload_3
      53: invokespecial #240                // Method com/amazonaws/services/dynamodbv2/datamodeling/PaginatedScanList."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;Lcom/amazonaws/services/dynamodbv2/model/ScanResult;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      56: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedParallelScanList<T> parallelScan(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload_0
       5: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       8: invokevirtual #241                // Method parallelScan:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;ILcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/PaginatedParallelScanList;
      11: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedParallelScanList<T> parallelScan(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, int, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: astore        4
       8: aload_0
       9: aload_1
      10: aload_2
      11: iload_3
      12: aload         4
      14: invokespecial #242                // Method createParallelScanRequestsFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;ILcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      17: astore        5
      19: new           #243                // class com/amazonaws/services/dynamodbv2/datamodeling/ParallelScanTask
      22: dup
      23: aload_0
      24: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      27: aload         5
      29: invokespecial #244                // Method com/amazonaws/services/dynamodbv2/datamodeling/ParallelScanTask."<init>":(Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Ljava/util/List;)V
      32: astore        6
      34: new           #245                // class com/amazonaws/services/dynamodbv2/datamodeling/PaginatedParallelScanList
      37: dup
      38: aload_0
      39: aload_1
      40: aload_0
      41: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      44: aload         6
      46: aload         4
      48: invokevirtual #239                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getPaginationLoadingStrategy:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;
      51: aload         4
      53: invokespecial #246                // Method com/amazonaws/services/dynamodbv2/datamodeling/PaginatedParallelScanList."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/datamodeling/ParallelScanTask;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      56: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage<T> scanPage(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #235                // Method createScanRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
      13: astore        4
      15: aload_0
      16: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      19: aload         4
      21: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      24: checkcast     #236                // class com/amazonaws/services/dynamodbv2/model/ScanRequest
      27: invokeinterface #237,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.scan:(Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;)Lcom/amazonaws/services/dynamodbv2/model/ScanResult;
      32: astore        5
      34: new           #247                // class com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage
      37: dup
      38: invokespecial #248                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage."<init>":()V
      41: astore        6
      43: aload_0
      44: aload         5
      46: invokevirtual #249                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getItems:()Ljava/util/List;
      49: aload_1
      50: aload         4
      52: invokevirtual #250                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.getTableName:()Ljava/lang/String;
      55: aload_3
      56: invokevirtual #251                // Method toParameters:(Ljava/util/List;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      59: astore        7
      61: aload         6
      63: aload_0
      64: aload         7
      66: invokevirtual #252                // Method marshallIntoObjects:(Ljava/util/List;)Ljava/util/List;
      69: invokevirtual #253                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage.setResults:(Ljava/util/List;)V
      72: aload         6
      74: aload         5
      76: invokevirtual #254                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getLastEvaluatedKey:()Ljava/util/Map;
      79: invokevirtual #255                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage.setLastEvaluatedKey:(Ljava/util/Map;)V
      82: aload         6
      84: aload         5
      86: invokevirtual #256                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getCount:()Ljava/lang/Integer;
      89: invokevirtual #257                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage.setCount:(Ljava/lang/Integer;)V
      92: aload         6
      94: aload         5
      96: invokevirtual #258                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getScannedCount:()Ljava/lang/Integer;
      99: invokevirtual #259                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage.setScannedCount:(Ljava/lang/Integer;)V
     102: aload         6
     104: aload         5
     106: invokevirtual #260                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getConsumedCapacity:()Lcom/amazonaws/services/dynamodbv2/model/ConsumedCapacity;
     109: invokevirtual #261                // Method com/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage.setConsumedCapacity:(Lcom/amazonaws/services/dynamodbv2/model/ConsumedCapacity;)V
     112: aload         6
     114: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage<T> scanPage(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #262                // Method scanPage:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/ScanResultPage;
      10: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedQueryList<T> query(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #263                // Method query:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/PaginatedQueryList;
      10: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.PaginatedQueryList<T> query(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #264                // Method createQueryRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
      13: astore        4
      15: aload_0
      16: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      19: aload         4
      21: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      24: checkcast     #265                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      27: invokeinterface #266,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.query:(Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;)Lcom/amazonaws/services/dynamodbv2/model/QueryResult;
      32: astore        5
      34: new           #267                // class com/amazonaws/services/dynamodbv2/datamodeling/PaginatedQueryList
      37: dup
      38: aload_0
      39: aload_1
      40: aload_0
      41: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      44: aload         4
      46: aload         5
      48: aload_3
      49: invokevirtual #239                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getPaginationLoadingStrategy:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;
      52: aload_3
      53: invokespecial #268                // Method com/amazonaws/services/dynamodbv2/datamodeling/PaginatedQueryList."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;Lcom/amazonaws/services/dynamodbv2/model/QueryResult;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$PaginationLoadingStrategy;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      56: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.QueryResultPage<T> queryPage(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #269                // Method queryPage:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage;
      10: areturn

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.QueryResultPage<T> queryPage(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #264                // Method createQueryRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
      13: astore        4
      15: aload_0
      16: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      19: aload         4
      21: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      24: checkcast     #265                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      27: invokeinterface #266,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.query:(Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;)Lcom/amazonaws/services/dynamodbv2/model/QueryResult;
      32: astore        5
      34: new           #270                // class com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage
      37: dup
      38: invokespecial #271                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage."<init>":()V
      41: astore        6
      43: aload_0
      44: aload         5
      46: invokevirtual #272                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getItems:()Ljava/util/List;
      49: aload_1
      50: aload         4
      52: invokevirtual #273                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.getTableName:()Ljava/lang/String;
      55: aload_3
      56: invokevirtual #251                // Method toParameters:(Ljava/util/List;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/List;
      59: astore        7
      61: aload         6
      63: aload_0
      64: aload         7
      66: invokevirtual #252                // Method marshallIntoObjects:(Ljava/util/List;)Ljava/util/List;
      69: invokevirtual #274                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage.setResults:(Ljava/util/List;)V
      72: aload         6
      74: aload         5
      76: invokevirtual #275                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getLastEvaluatedKey:()Ljava/util/Map;
      79: invokevirtual #276                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage.setLastEvaluatedKey:(Ljava/util/Map;)V
      82: aload         6
      84: aload         5
      86: invokevirtual #277                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getCount:()Ljava/lang/Integer;
      89: invokevirtual #278                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage.setCount:(Ljava/lang/Integer;)V
      92: aload         6
      94: aload         5
      96: invokevirtual #279                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getScannedCount:()Ljava/lang/Integer;
      99: invokevirtual #280                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage.setScannedCount:(Ljava/lang/Integer;)V
     102: aload         6
     104: aload         5
     106: invokevirtual #281                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getConsumedCapacity:()Lcom/amazonaws/services/dynamodbv2/model/ConsumedCapacity;
     109: invokevirtual #282                // Method com/amazonaws/services/dynamodbv2/datamodeling/QueryResultPage.setConsumedCapacity:(Lcom/amazonaws/services/dynamodbv2/model/ConsumedCapacity;)V
     112: aload         6
     114: areturn

  public int count(java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #283                // Method count:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)I
      10: ireturn

  public int count(java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #235                // Method createScanRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
      13: astore        4
      15: aload         4
      17: getstatic     #284                // Field com/amazonaws/services/dynamodbv2/model/Select.COUNT:Lcom/amazonaws/services/dynamodbv2/model/Select;
      20: invokevirtual #285                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setSelect:(Lcom/amazonaws/services/dynamodbv2/model/Select;)V
      23: iconst_0
      24: istore        5
      26: aconst_null
      27: astore        6
      29: aload_0
      30: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      33: aload         4
      35: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      38: checkcast     #236                // class com/amazonaws/services/dynamodbv2/model/ScanRequest
      41: invokeinterface #237,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.scan:(Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;)Lcom/amazonaws/services/dynamodbv2/model/ScanResult;
      46: astore        6
      48: iload         5
      50: aload         6
      52: invokevirtual #256                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getCount:()Ljava/lang/Integer;
      55: invokevirtual #286                // Method java/lang/Integer.intValue:()I
      58: iadd
      59: istore        5
      61: aload         4
      63: aload         6
      65: invokevirtual #254                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getLastEvaluatedKey:()Ljava/util/Map;
      68: invokevirtual #287                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setExclusiveStartKey:(Ljava/util/Map;)V
      71: aload         6
      73: invokevirtual #254                // Method com/amazonaws/services/dynamodbv2/model/ScanResult.getLastEvaluatedKey:()Ljava/util/Map;
      76: ifnonnull     29
      79: iload         5
      81: ireturn

  public <T> int count(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       7: invokevirtual #288                // Method count:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)I
      10: ireturn

  public <T> int count(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #47                 // Method mergeConfig:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #264                // Method createQueryRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
      13: astore        4
      15: aload         4
      17: getstatic     #284                // Field com/amazonaws/services/dynamodbv2/model/Select.COUNT:Lcom/amazonaws/services/dynamodbv2/model/Select;
      20: invokevirtual #289                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setSelect:(Lcom/amazonaws/services/dynamodbv2/model/Select;)V
      23: iconst_0
      24: istore        5
      26: aconst_null
      27: astore        6
      29: aload_0
      30: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      33: aload         4
      35: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
      38: checkcast     #265                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      41: invokeinterface #266,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/AmazonDynamoDB.query:(Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;)Lcom/amazonaws/services/dynamodbv2/model/QueryResult;
      46: astore        6
      48: iload         5
      50: aload         6
      52: invokevirtual #277                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getCount:()Ljava/lang/Integer;
      55: invokevirtual #286                // Method java/lang/Integer.intValue:()I
      58: iadd
      59: istore        5
      61: aload         4
      63: aload         6
      65: invokevirtual #275                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getLastEvaluatedKey:()Ljava/util/Map;
      68: invokevirtual #290                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setExclusiveStartKey:(Ljava/util/Map;)V
      71: aload         6
      73: invokevirtual #275                // Method com/amazonaws/services/dynamodbv2/model/QueryResult.getLastEvaluatedKey:()Ljava/util/Map;
      76: ifnonnull     29
      79: iload         5
      81: ireturn

  private com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig mergeConfig(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       5: if_acmpeq     21
       8: new           #291                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig
      11: dup
      12: aload_0
      13: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      16: aload_1
      17: invokespecial #292                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)V
      20: astore_1
      21: aload_1
      22: areturn

  private com.amazonaws.services.dynamodbv2.model.ScanRequest createScanRequestFromExpression(java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: new           #236                // class com/amazonaws/services/dynamodbv2/model/ScanRequest
       3: dup
       4: invokespecial #293                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_0
      12: aload_1
      13: aload_3
      14: invokevirtual #85                 // Method getTableName:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      17: invokevirtual #294                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setTableName:(Ljava/lang/String;)V
      20: aload         4
      22: aload_2
      23: invokevirtual #295                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getIndexName:()Ljava/lang/String;
      26: invokevirtual #296                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setIndexName:(Ljava/lang/String;)V
      29: aload         4
      31: aload_2
      32: invokevirtual #297                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getScanFilter:()Ljava/util/Map;
      35: invokevirtual #298                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setScanFilter:(Ljava/util/Map;)V
      38: aload         4
      40: aload_2
      41: invokevirtual #299                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getLimit:()Ljava/lang/Integer;
      44: invokevirtual #300                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setLimit:(Ljava/lang/Integer;)V
      47: aload         4
      49: aload_2
      50: invokevirtual #301                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getExclusiveStartKey:()Ljava/util/Map;
      53: invokevirtual #287                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setExclusiveStartKey:(Ljava/util/Map;)V
      56: aload         4
      58: aload_2
      59: invokevirtual #302                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getTotalSegments:()Ljava/lang/Integer;
      62: invokevirtual #303                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setTotalSegments:(Ljava/lang/Integer;)V
      65: aload         4
      67: aload_2
      68: invokevirtual #304                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getSegment:()Ljava/lang/Integer;
      71: invokevirtual #305                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setSegment:(Ljava/lang/Integer;)V
      74: aload         4
      76: aload_2
      77: invokevirtual #306                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getConditionalOperator:()Ljava/lang/String;
      80: invokevirtual #307                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setConditionalOperator:(Ljava/lang/String;)V
      83: aload         4
      85: aload_2
      86: invokevirtual #308                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getFilterExpression:()Ljava/lang/String;
      89: invokevirtual #309                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setFilterExpression:(Ljava/lang/String;)V
      92: aload         4
      94: aload_2
      95: invokevirtual #310                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getExpressionAttributeNames:()Ljava/util/Map;
      98: invokevirtual #311                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setExpressionAttributeNames:(Ljava/util/Map;)V
     101: aload         4
     103: aload_2
     104: invokevirtual #312                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getExpressionAttributeValues:()Ljava/util/Map;
     107: invokevirtual #313                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setExpressionAttributeValues:(Ljava/util/Map;)V
     110: aload         4
     112: aload_3
     113: invokevirtual #51                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     116: invokevirtual #314                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)V
     119: aload         4
     121: aload_2
     122: invokevirtual #315                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getSelect:()Ljava/lang/String;
     125: invokevirtual #316                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setSelect:(Ljava/lang/String;)V
     128: aload         4
     130: aload_2
     131: invokevirtual #317                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getProjectionExpression:()Ljava/lang/String;
     134: invokevirtual #318                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setProjectionExpression:(Ljava/lang/String;)V
     137: aload         4
     139: aload_2
     140: invokevirtual #319                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getReturnConsumedCapacity:()Ljava/lang/String;
     143: invokevirtual #320                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setReturnConsumedCapacity:(Ljava/lang/String;)V
     146: aload         4
     148: aload_2
     149: invokevirtual #321                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.isConsistentRead:()Ljava/lang/Boolean;
     152: invokevirtual #322                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.setConsistentRead:(Ljava/lang/Boolean;)V
     155: aload         4
     157: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     160: checkcast     #236                // class com/amazonaws/services/dynamodbv2/model/ScanRequest
     163: areturn

  private java.util.List<com.amazonaws.services.dynamodbv2.model.ScanRequest> createParallelScanRequestsFromExpression(java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression, int, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     16
       5: new           #27                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc_w         #323                // String Parallel scan should have at least one scan segment.
      12: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_2
      17: invokevirtual #301                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getExclusiveStartKey:()Ljava/util/Map;
      20: ifnull        34
      23: getstatic     #324                // Field log:Lorg/apache/commons/logging/Log;
      26: ldc_w         #325                // String The ExclusiveStartKey parameter specified in the DynamoDBScanExpression is ignored, since the individual parallel scan request on each segment is applied on a separate key scope.
      29: invokeinterface #326,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      34: aload_2
      35: invokevirtual #304                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getSegment:()Ljava/lang/Integer;
      38: ifnonnull     48
      41: aload_2
      42: invokevirtual #302                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression.getTotalSegments:()Ljava/lang/Integer;
      45: ifnull        59
      48: getstatic     #324                // Field log:Lorg/apache/commons/logging/Log;
      51: ldc_w         #327                // String The Segment and TotalSegments parameters specified in the DynamoDBScanExpression are ignored.
      54: invokeinterface #326,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      59: new           #132                // class java/util/LinkedList
      62: dup
      63: invokespecial #133                // Method java/util/LinkedList."<init>":()V
      66: astore        5
      68: iconst_0
      69: istore        6
      71: iload         6
      73: iload_3
      74: if_icmpge     122
      77: aload_0
      78: aload_1
      79: aload_2
      80: aload         4
      82: invokespecial #235                // Method createScanRequestFromExpression:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBScanExpression;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
      85: astore        7
      87: aload         5
      89: aload         7
      91: iload         6
      93: invokestatic  #328                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: invokevirtual #329                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.withSegment:(Ljava/lang/Integer;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
      99: iload_3
     100: invokestatic  #328                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     103: invokevirtual #330                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.withTotalSegments:(Ljava/lang/Integer;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
     106: aconst_null
     107: invokevirtual #331                // Method com/amazonaws/services/dynamodbv2/model/ScanRequest.withExclusiveStartKey:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
     110: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: iinc          6, 1
     119: goto          71
     122: aload         5
     124: areturn

  private <T> com.amazonaws.services.dynamodbv2.model.QueryRequest createQueryRequestFromExpression(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression<T>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
       6: astore        4
       8: new           #265                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
      11: dup
      12: invokespecial #332                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest."<init>":()V
      15: astore        5
      17: aload         5
      19: aload_2
      20: invokevirtual #333                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.isConsistentRead:()Z
      23: invokestatic  #58                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #334                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setConsistentRead:(Ljava/lang/Boolean;)V
      29: aload         5
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #335                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getHashKeyValues:()Ljava/lang/Object;
      37: aload_3
      38: invokevirtual #48                 // Method getTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      41: invokevirtual #336                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setTableName:(Ljava/lang/String;)V
      44: aload         5
      46: aload_2
      47: invokevirtual #337                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getIndexName:()Ljava/lang/String;
      50: invokevirtual #338                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setIndexName:(Ljava/lang/String;)V
      53: aload_0
      54: aload         4
      56: aload_2
      57: invokevirtual #335                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getHashKeyValues:()Ljava/lang/Object;
      60: invokespecial #339                // Method getHashKeyEqualsConditions:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;Ljava/lang/Object;)Ljava/util/Map;
      63: astore        6
      65: aload_2
      66: invokevirtual #340                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getRangeKeyConditions:()Ljava/util/Map;
      69: astore        7
      71: aload         5
      73: aload_2
      74: invokevirtual #341                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getKeyConditionExpression:()Ljava/lang/String;
      77: invokevirtual #342                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setKeyConditionExpression:(Ljava/lang/String;)V
      80: aload_0
      81: aload_1
      82: aload         5
      84: aload         6
      86: aload         7
      88: aload         4
      90: invokespecial #343                // Method processKeyConditions:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;Ljava/util/Map;Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;)V
      93: aload         5
      95: aload_2
      96: invokevirtual #344                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.isScanIndexForward:()Z
      99: invokestatic  #58                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     102: invokevirtual #345                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withScanIndexForward:(Ljava/lang/Boolean;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     105: aload_2
     106: invokevirtual #346                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getLimit:()Ljava/lang/Integer;
     109: invokevirtual #347                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withLimit:(Ljava/lang/Integer;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     112: aload_2
     113: invokevirtual #348                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getExclusiveStartKey:()Ljava/util/Map;
     116: invokevirtual #349                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withExclusiveStartKey:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     119: aload_2
     120: invokevirtual #350                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getQueryFilter:()Ljava/util/Map;
     123: invokevirtual #351                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withQueryFilter:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     126: aload_2
     127: invokevirtual #352                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getConditionalOperator:()Ljava/lang/String;
     130: invokevirtual #353                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withConditionalOperator:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     133: aload_2
     134: invokevirtual #354                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getSelect:()Ljava/lang/String;
     137: invokevirtual #355                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withSelect:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     140: aload_2
     141: invokevirtual #356                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getProjectionExpression:()Ljava/lang/String;
     144: invokevirtual #357                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withProjectionExpression:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     147: aload_2
     148: invokevirtual #358                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getFilterExpression:()Ljava/lang/String;
     151: invokevirtual #359                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withFilterExpression:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     154: aload_2
     155: invokevirtual #360                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getExpressionAttributeNames:()Ljava/util/Map;
     158: invokevirtual #361                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withExpressionAttributeNames:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     161: aload_2
     162: invokevirtual #362                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getExpressionAttributeValues:()Ljava/util/Map;
     165: invokevirtual #363                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withExpressionAttributeValues:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     168: aload_2
     169: invokevirtual #364                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBQueryExpression.getReturnConsumedCapacity:()Ljava/lang/String;
     172: invokevirtual #365                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withReturnConsumedCapacity:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/QueryRequest;
     175: aload_3
     176: invokevirtual #51                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getRequestMetricCollector:()Lcom/amazonaws/metrics/RequestMetricCollector;
     179: invokevirtual #366                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.withRequestMetricCollector:(Lcom/amazonaws/metrics/RequestMetricCollector;)Lcom/amazonaws/AmazonWebServiceRequest;
     182: pop
     183: aload         5
     185: invokestatic  #60                 // Method applyUserAgent:(Lcom/amazonaws/AmazonWebServiceRequest;)Lcom/amazonaws/AmazonWebServiceRequest;
     188: checkcast     #265                // class com/amazonaws/services/dynamodbv2/model/QueryRequest
     191: areturn

  private <T> void processKeyConditions(java.lang.Class<T>, com.amazonaws.services.dynamodbv2.model.QueryRequest, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T>);
    Code:
       0: aload_2
       1: invokevirtual #367                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.getKeyConditionExpression:()Ljava/lang/String;
       4: astore        6
       6: aload         6
       8: ifnonnull     35
      11: aload_3
      12: ifnull        24
      15: aload_3
      16: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      21: ifeq          86
      24: new           #27                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc_w         #368                // String Illegal query expression: No hash key condition is found in the query
      31: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_3
      36: ifnull        59
      39: aload_3
      40: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      45: ifne          59
      48: new           #27                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc_w         #369                // String Illegal query expression: Either the hash key conditions or the key condition expression must be specified but not both.
      55: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload         4
      61: ifnull        85
      64: aload         4
      66: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      71: ifne          85
      74: new           #27                 // class java/lang/IllegalArgumentException
      77: dup
      78: ldc_w         #370                // String Illegal query expression: The range key conditions can only be specified when the key condition expression is not specified.
      81: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return
      86: aload         4
      88: ifnull        145
      91: aload         4
      93: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
      98: iconst_1
      99: if_icmple     145
     102: new           #27                 // class java/lang/IllegalArgumentException
     105: dup
     106: new           #371                // class java/lang/StringBuilder
     109: dup
     110: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     113: ldc_w         #373                // String Illegal query expression: Conditions on multiple range keys (
     116: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         4
     121: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     126: invokevirtual #375                // Method java/lang/Object.toString:()Ljava/lang/String;
     129: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc_w         #376                // String ) are found in the query. DynamoDB service only accepts up to ONE range key condition.
     135: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: aload         4
     147: ifnull        164
     150: aload         4
     152: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     157: ifne          164
     160: iconst_1
     161: goto          165
     164: iconst_0
     165: istore        7
     167: aload_2
     168: invokevirtual #378                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.getIndexName:()Ljava/lang/String;
     171: astore        8
     173: aload         5
     175: invokevirtual #379                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.hashKey:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
     178: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
     181: astore        9
     183: iconst_0
     184: istore        10
     186: new           #65                 // class java/util/HashMap
     189: dup
     190: invokespecial #66                 // Method java/util/HashMap."<init>":()V
     193: astore        11
     195: aconst_null
     196: astore        12
     198: iconst_0
     199: istore        13
     201: new           #380                // class java/util/HashSet
     204: dup
     205: invokespecial #381                // Method java/util/HashSet."<init>":()V
     208: astore        14
     210: new           #380                // class java/util/HashSet
     213: dup
     214: invokespecial #381                // Method java/util/HashSet."<init>":()V
     217: astore        15
     219: aconst_null
     220: astore        16
     222: iload         7
     224: ifeq          382
     227: aload         4
     229: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     234: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     239: astore        17
     241: aload         17
     243: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     248: ifeq          322
     251: aload         17
     253: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     258: checkcast     #12                 // class java/lang/String
     261: astore        18
     263: aload         18
     265: astore        16
     267: aload         5
     269: aload         18
     271: invokevirtual #382                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.field:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
     274: astore        19
     276: aload         19
     278: invokevirtual #383                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.keyType:()Lcom/amazonaws/services/dynamodbv2/model/KeyType;
     281: getstatic     #384                // Field com/amazonaws/services/dynamodbv2/model/KeyType.RANGE:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
     284: if_acmpne     290
     287: iconst_1
     288: istore        13
     290: aload         14
     292: aload         19
     294: invokevirtual #385                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.localSecondaryIndexNames:()Ljava/util/List;
     297: invokeinterface #386,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     302: pop
     303: aload         15
     305: aload         19
     307: getstatic     #384                // Field com/amazonaws/services/dynamodbv2/model/KeyType.RANGE:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
     310: invokevirtual #387                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.globalSecondaryIndexNames:(Lcom/amazonaws/services/dynamodbv2/model/KeyType;)Ljava/util/List;
     313: invokeinterface #386,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     318: pop
     319: goto          241
     322: iload         13
     324: ifne          382
     327: aload         14
     329: invokeinterface #388,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     334: ifeq          382
     337: aload         15
     339: invokeinterface #388,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     344: ifeq          382
     347: new           #389                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingException
     350: dup
     351: new           #371                // class java/lang/StringBuilder
     354: dup
     355: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     358: ldc_w         #390                // String The query contains a condition on a range key (
     361: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: aload         16
     366: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     369: ldc_w         #391                // String ) that is not annotated with either @DynamoDBRangeKey or @DynamoDBIndexRangeKey.
     372: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     378: invokespecial #392                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingException."<init>":(Ljava/lang/String;)V
     381: athrow
     382: aload         8
     384: ifnull        403
     387: aload         14
     389: aload         8
     391: invokeinterface #393,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     396: ifeq          403
     399: iconst_1
     400: goto          404
     403: iconst_0
     404: istore        17
     406: aload         8
     408: ifnull        430
     411: iload         7
     413: ifne          430
     416: aload         5
     418: aload         8
     420: invokevirtual #394                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.localSecondaryIndex:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/LocalSecondaryIndex;
     423: ifnull        430
     426: iconst_1
     427: goto          431
     430: iconst_0
     431: istore        18
     433: iload         17
     435: ifne          443
     438: iload         18
     440: ifeq          447
     443: iconst_1
     444: goto          448
     447: iconst_0
     448: istore        19
     450: aload         8
     452: ifnull        471
     455: aload         15
     457: aload         8
     459: invokeinterface #393,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     464: ifeq          471
     467: iconst_1
     468: goto          472
     471: iconst_0
     472: istore        20
     474: aload         8
     476: ifnull        498
     479: iload         7
     481: ifne          498
     484: aload         5
     486: aload         8
     488: invokevirtual #395                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.globalSecondaryIndex:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/GlobalSecondaryIndex;
     491: ifnull        498
     494: iconst_1
     495: goto          499
     498: iconst_0
     499: istore        21
     501: iload         20
     503: ifne          511
     506: iload         21
     508: ifeq          515
     511: iconst_1
     512: goto          516
     515: iconst_0
     516: istore        22
     518: iload         19
     520: ifeq          563
     523: iload         22
     525: ifeq          563
     528: new           #389                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingException
     531: dup
     532: new           #371                // class java/lang/StringBuilder
     535: dup
     536: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     539: ldc_w         #396                // String Invalid query: Index \"
     542: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     545: aload         8
     547: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     550: ldc_w         #397                // String \" is annotateded as both a LSI and a GSI for attribute.
     553: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     556: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     559: invokespecial #392                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingException."<init>":(Ljava/lang/String;)V
     562: athrow
     563: aload_3
     564: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     569: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     574: astore        23
     576: aload         23
     578: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     583: ifeq          792
     586: aload         23
     588: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     593: checkcast     #12                 // class java/lang/String
     596: astore        24
     598: aload         24
     600: aload         9
     602: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     605: ifeq          611
     608: iconst_1
     609: istore        10
     611: aload         5
     613: aload         24
     615: invokevirtual #382                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.field:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
     618: astore        25
     620: aload         25
     622: getstatic     #73                 // Field com/amazonaws/services/dynamodbv2/model/KeyType.HASH:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
     625: invokevirtual #387                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.globalSecondaryIndexNames:(Lcom/amazonaws/services/dynamodbv2/model/KeyType;)Ljava/util/List;
     628: astore        26
     630: aload         11
     632: aload         24
     634: aload         26
     636: ifnonnull     649
     639: new           #380                // class java/util/HashSet
     642: dup
     643: invokespecial #381                // Method java/util/HashSet."<init>":()V
     646: goto          658
     649: new           #380                // class java/util/HashSet
     652: dup
     653: aload         26
     655: invokespecial #398                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     658: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     663: pop
     664: aload         8
     666: ifnull        789
     669: iconst_0
     670: istore        27
     672: iload         19
     674: ifeq          693
     677: aload         24
     679: aload         9
     681: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     684: ifeq          693
     687: iconst_1
     688: istore        27
     690: goto          718
     693: iload         22
     695: ifeq          718
     698: aload         26
     700: ifnull        718
     703: aload         26
     705: aload         8
     707: invokeinterface #399,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
     712: ifeq          718
     715: iconst_1
     716: istore        27
     718: iload         27
     720: ifeq          789
     723: aload         12
     725: ifnull        785
     728: new           #27                 // class java/lang/IllegalArgumentException
     731: dup
     732: new           #371                // class java/lang/StringBuilder
     735: dup
     736: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     739: ldc_w         #400                // String Ambiguous query expression: More than one hash key EQ conditions (
     742: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     745: aload         12
     747: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     750: ldc_w         #401                // String ,
     753: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     756: aload         24
     758: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     761: ldc_w         #402                // String ) are applicable to the specified index (
     764: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     767: aload         8
     769: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     772: ldc_w         #403                // String ). Please provide only one of them in the query expression.
     775: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     778: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     781: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     784: athrow
     785: aload         24
     787: astore        12
     789: goto          576
     792: new           #65                 // class java/util/HashMap
     795: dup
     796: invokespecial #66                 // Method java/util/HashMap."<init>":()V
     799: astore        23
     801: aload         8
     803: ifnull        931
     806: iload         7
     808: ifeq          856
     811: iload         19
     813: ifne          856
     816: iload         22
     818: ifne          856
     821: new           #27                 // class java/lang/IllegalArgumentException
     824: dup
     825: new           #371                // class java/lang/StringBuilder
     828: dup
     829: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     832: ldc_w         #404                // String Illegal query expression: No range key condition is applicable to the specified index (
     835: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     838: aload         8
     840: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     843: ldc_w         #405                // String ).
     846: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     849: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     852: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     855: athrow
     856: aload         12
     858: ifnonnull     896
     861: new           #27                 // class java/lang/IllegalArgumentException
     864: dup
     865: new           #371                // class java/lang/StringBuilder
     868: dup
     869: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     872: ldc_w         #406                // String Illegal query expression: No hash key condition is applicable to the specified index (
     875: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     878: aload         8
     880: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     883: ldc_w         #405                // String ).
     886: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     889: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     892: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     895: athrow
     896: aload         23
     898: aload         12
     900: aload_3
     901: aload         12
     903: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     908: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     913: pop
     914: iload         7
     916: ifeq          1537
     919: aload         23
     921: aload         4
     923: invokeinterface #407,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     928: goto          1537
     931: iload         7
     933: ifeq          1276
     936: aconst_null
     937: astore        24
     939: aconst_null
     940: astore        12
     942: iload         10
     944: ifeq          959
     947: iload         13
     949: ifeq          959
     952: aload         9
     954: astore        12
     956: goto          1221
     959: aload         11
     961: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     966: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     971: astore        25
     973: aload         25
     975: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     980: ifeq          1221
     983: aload         25
     985: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     990: checkcast     #12                 // class java/lang/String
     993: astore        26
     995: iconst_0
     996: istore        27
     998: aconst_null
     999: astore        28
    1001: aload         26
    1003: aload         9
    1005: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1008: ifeq          1042
    1011: aload         14
    1013: invokeinterface #408,  1          // InterfaceMethod java/util/Set.size:()I
    1018: iconst_1
    1019: if_icmpne     1042
    1022: iconst_1
    1023: istore        27
    1025: aload         14
    1027: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1032: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1037: checkcast     #12                 // class java/lang/String
    1040: astore        28
    1042: aload         11
    1044: aload         26
    1046: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1051: checkcast     #409                // class java/util/Set
    1054: astore        29
    1056: aload         29
    1058: aload         15
    1060: invokeinterface #410,  2          // InterfaceMethod java/util/Set.retainAll:(Ljava/util/Collection;)Z
    1065: pop
    1066: aload         29
    1068: invokeinterface #408,  1          // InterfaceMethod java/util/Set.size:()I
    1073: iconst_1
    1074: if_icmpne     1110
    1077: iload         27
    1079: ifeq          1090
    1082: aload         26
    1084: astore        12
    1086: aload         28
    1088: astore        24
    1090: iconst_1
    1091: istore        27
    1093: aload         29
    1095: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1100: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1105: checkcast     #12                 // class java/lang/String
    1108: astore        28
    1110: iload         27
    1112: ifeq          1218
    1115: aload         12
    1117: ifnull        1210
    1120: new           #27                 // class java/lang/IllegalArgumentException
    1123: dup
    1124: new           #371                // class java/lang/StringBuilder
    1127: dup
    1128: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
    1131: ldc_w         #411                // String Ambiguous query expression: Found multiple valid queries: (Hash: \"
    1134: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1137: aload         12
    1139: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1142: ldc_w         #412                // String \", Range: \"
    1145: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1148: aload         16
    1150: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1153: ldc_w         #413                // String \", Index: \"
    1156: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1159: aload         24
    1161: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1164: ldc_w         #414                // String \") and (Hash: \"
    1167: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1170: aload         26
    1172: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1175: ldc_w         #412                // String \", Range: \"
    1178: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1181: aload         16
    1183: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1186: ldc_w         #413                // String \", Index: \"
    1189: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1192: aload         28
    1194: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1197: ldc_w         #415                // String \").
    1200: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1203: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1206: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1209: athrow
    1210: aload         26
    1212: astore        12
    1214: aload         28
    1216: astore        24
    1218: goto          973
    1221: aload         12
    1223: ifnull        1262
    1226: aload         23
    1228: aload         12
    1230: aload_3
    1231: aload         12
    1233: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1238: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1243: pop
    1244: aload         23
    1246: aload         4
    1248: invokeinterface #407,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
    1253: aload_2
    1254: aload         24
    1256: invokevirtual #338                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setIndexName:(Ljava/lang/String;)V
    1259: goto          1273
    1262: new           #27                 // class java/lang/IllegalArgumentException
    1265: dup
    1266: ldc_w         #416                // String Illegal query expression: Cannot infer the index name from the query expression.
    1269: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1272: athrow
    1273: goto          1537
    1276: aload_3
    1277: invokeinterface #196,  1          // InterfaceMethod java/util/Map.size:()I
    1282: iconst_1
    1283: if_icmple     1351
    1286: iload         10
    1288: ifeq          1312
    1291: aload         23
    1293: aload         9
    1295: aload_3
    1296: aload         9
    1298: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1303: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1308: pop
    1309: goto          1537
    1312: new           #27                 // class java/lang/IllegalArgumentException
    1315: dup
    1316: new           #371                // class java/lang/StringBuilder
    1319: dup
    1320: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
    1323: ldc_w         #417                // String Ambiguous query expression: More than one index hash key EQ conditions (
    1326: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1329: aload_3
    1330: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
    1335: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1338: ldc_w         #419                // String ) are applicable to the query. Please provide only one of them in the query expression, or specify the appropriate index name.
    1341: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1344: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1347: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1350: athrow
    1351: aload         11
    1353: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
    1358: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1363: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1368: checkcast     #12                 // class java/lang/String
    1371: astore        24
    1373: iload         10
    1375: ifne          1529
    1378: aload         11
    1380: aload         24
    1382: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1387: checkcast     #409                // class java/util/Set
    1390: invokeinterface #408,  1          // InterfaceMethod java/util/Set.size:()I
    1395: iconst_1
    1396: if_icmpne     1431
    1399: aload_2
    1400: aload         11
    1402: aload         24
    1404: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1409: checkcast     #409                // class java/util/Set
    1412: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
    1417: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1422: checkcast     #12                 // class java/lang/String
    1425: invokevirtual #338                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setIndexName:(Ljava/lang/String;)V
    1428: goto          1529
    1431: aload         11
    1433: aload         24
    1435: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1440: checkcast     #409                // class java/util/Set
    1443: invokeinterface #408,  1          // InterfaceMethod java/util/Set.size:()I
    1448: iconst_1
    1449: if_icmple     1494
    1452: new           #27                 // class java/lang/IllegalArgumentException
    1455: dup
    1456: new           #371                // class java/lang/StringBuilder
    1459: dup
    1460: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
    1463: ldc_w         #420                // String Ambiguous query expression: More than one GSIs (
    1466: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1469: aload         11
    1471: aload         24
    1473: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    1478: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1481: ldc_w         #421                // String ) are applicable to the query. Please specify one of them in your query expression.
    1484: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1487: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1490: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1493: athrow
    1494: new           #27                 // class java/lang/IllegalArgumentException
    1497: dup
    1498: new           #371                // class java/lang/StringBuilder
    1501: dup
    1502: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
    1505: ldc_w         #422                // String Illegal query expression: No GSI is found in the @DynamoDBIndexHashKey annotation for attribute \"
    1508: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1511: aload         24
    1513: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1516: ldc_w         #423                // String \".
    1519: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1522: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1525: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1528: athrow
    1529: aload         23
    1531: aload_3
    1532: invokeinterface #407,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
    1537: aload_2
    1538: aload         23
    1540: invokevirtual #424                // Method com/amazonaws/services/dynamodbv2/model/QueryRequest.setKeyConditions:(Ljava/util/Map;)V
    1543: return

  private <T> com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T> toParameters(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.lang.Class<T>, java.lang.String, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokespecial #425                // Method toParameters:(Ljava/util/Map;ZLjava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
      10: areturn

  private <T> com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T> toParameters(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, boolean, java.lang.Class<T>, java.lang.String, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: new           #426                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$TransformerParameters
       3: dup
       4: aload_0
       5: aload_3
       6: aload         5
       8: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      11: aload_1
      12: iload_2
      13: aload_3
      14: aload         5
      16: aload         4
      18: invokespecial #427                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper$TransformerParameters."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;Ljava/util/Map;ZLjava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Ljava/lang/String;)V
      21: areturn

  final <T> java.util.List<com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<T>> toParameters(java.util.List<java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>>, java.lang.Class<T>, java.lang.String, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: new           #90                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #91,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #92                 // Method java/util/ArrayList."<init>":(I)V
      13: astore        5
      15: aload_1
      16: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore        6
      23: aload         6
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          66
      33: aload         6
      35: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #11                 // class java/util/Map
      43: astore        7
      45: aload         5
      47: aload_0
      48: aload         7
      50: aload_2
      51: aload_3
      52: aload         4
      54: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
      57: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          23
      66: aload         5
      68: areturn

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> untransformAttributes(com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<?>);
    Code:
       0: aload_0
       1: getfield      #34                 // Field transformer:Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;
       4: ifnull        18
       7: aload_0
       8: getfield      #34                 // Field transformer:Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;
      11: aload_1
      12: invokeinterface #428,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer.untransform:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
      17: areturn
      18: aload_1
      19: invokeinterface #429,  1          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters.getAttributeValues:()Ljava/util/Map;
      24: areturn

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> transformAttributes(com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters<?>);
    Code:
       0: aload_0
       1: getfield      #34                 // Field transformer:Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;
       4: ifnull        18
       7: aload_0
       8: getfield      #34                 // Field transformer:Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer;
      11: aload_1
      12: invokeinterface #430,  2          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer.transform:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
      17: areturn
      18: aload_1
      19: invokeinterface #429,  1          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters.getAttributeValues:()Ljava/util/Map;
      24: areturn

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValueUpdate> transformAttributeUpdates(java.lang.Class<?>, java.lang.String, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValueUpdate>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #4                  // Method convertToItem:(Ljava/util/Map;)Ljava/util/Map;
       6: astore        6
       8: new           #380                // class java/util/HashSet
      11: dup
      12: invokespecial #381                // Method java/util/HashSet."<init>":()V
      15: astore        7
      17: aload_3
      18: invokeinterface #228,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        8
      30: aload         8
      32: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          107
      40: aload         8
      42: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #157                // class java/util/Map$Entry
      50: astore        9
      52: aload         6
      54: aload         9
      56: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: invokeinterface #200,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      66: ifne          104
      69: aload         7
      71: aload         9
      73: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: invokevirtual #431                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      81: pop
      82: aload         6
      84: aload         9
      86: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      91: aload         9
      93: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      98: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          30
     107: aload_0
     108: aload         6
     110: iconst_1
     111: aload_1
     112: aload_2
     113: aload         5
     115: invokespecial #425                // Method toParameters:(Ljava/util/Map;ZLjava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
     118: astore        8
     120: aload         8
     122: invokeinterface #432,  1          // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters.getHashKeyName:()Ljava/lang/String;
     127: astore        9
     129: aload         6
     131: aload         9
     133: invokeinterface #200,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     138: ifne          159
     141: aload         6
     143: aload         9
     145: aload_3
     146: aload         9
     148: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     153: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: aload_0
     160: aload         8
     162: invokespecial #2                  // Method transformAttributes:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
     165: astore        6
     167: aload         6
     169: invokeinterface #228,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     174: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     179: astore        10
     181: aload         10
     183: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     188: ifeq          452
     191: aload         10
     193: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     198: checkcast     #157                // class java/util/Map$Entry
     201: astore        11
     203: aload         7
     205: aload         11
     207: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     212: invokevirtual #433                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     215: ifeq          221
     218: goto          181
     221: aload         4
     223: aload         11
     225: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     230: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     235: checkcast     #229                // class com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate
     238: astore        12
     240: aload         12
     242: ifnull        414
     245: aload         12
     247: invokevirtual #230                // Method com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate.getValue:()Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     250: aload         11
     252: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     257: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     260: invokevirtual #435                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getB:()Ljava/nio/ByteBuffer;
     263: invokevirtual #436                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withB:(Ljava/nio/ByteBuffer;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     266: aload         11
     268: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     273: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     276: invokevirtual #437                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getBS:()Ljava/util/List;
     279: invokevirtual #438                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withBS:(Ljava/util/Collection;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     282: aload         11
     284: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     289: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     292: invokevirtual #439                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getN:()Ljava/lang/String;
     295: invokevirtual #440                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withN:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     298: aload         11
     300: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     305: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     308: invokevirtual #441                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getNS:()Ljava/util/List;
     311: invokevirtual #442                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withNS:(Ljava/util/Collection;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     314: aload         11
     316: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     321: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     324: invokevirtual #443                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getS:()Ljava/lang/String;
     327: invokevirtual #444                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withS:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     330: aload         11
     332: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     337: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     340: invokevirtual #445                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getSS:()Ljava/util/List;
     343: invokevirtual #446                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withSS:(Ljava/util/Collection;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     346: aload         11
     348: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     353: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     356: invokevirtual #447                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getM:()Ljava/util/Map;
     359: invokevirtual #448                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withM:(Ljava/util/Map;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     362: aload         11
     364: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     369: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     372: invokevirtual #449                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getL:()Ljava/util/List;
     375: invokevirtual #450                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withL:(Ljava/util/Collection;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     378: aload         11
     380: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     385: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     388: invokevirtual #451                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getNULL:()Ljava/lang/Boolean;
     391: invokevirtual #452                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withNULL:(Ljava/lang/Boolean;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     394: aload         11
     396: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     401: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     404: invokevirtual #453                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.getBOOL:()Ljava/lang/Boolean;
     407: invokevirtual #454                // Method com/amazonaws/services/dynamodbv2/model/AttributeValue.withBOOL:(Ljava/lang/Boolean;)Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;
     410: pop
     411: goto          449
     414: aload         4
     416: aload         11
     418: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     423: new           #229                // class com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate
     426: dup
     427: aload         11
     429: invokeinterface #159,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     434: checkcast     #434                // class com/amazonaws/services/dynamodbv2/model/AttributeValue
     437: ldc_w         #455                // String PUT
     440: invokespecial #456                // Method com/amazonaws/services/dynamodbv2/model/AttributeValueUpdate."<init>":(Lcom/amazonaws/services/dynamodbv2/model/AttributeValue;Ljava/lang/String;)V
     443: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     448: pop
     449: goto          181
     452: aload         4
     454: areturn

  private void pause(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          7
       6: return
       7: lload_1
       8: invokestatic  #167                // Method java/lang/Thread.sleep:(J)V
      11: goto          34
      14: astore_3
      15: invokestatic  #169                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #170                // Method java/lang/Thread.interrupt:()V
      21: new           #117                // class com/amazonaws/AmazonClientException
      24: dup
      25: aload_3
      26: invokevirtual #457                // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      29: aload_3
      30: invokespecial #458                // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/InterruptedException

  private static java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.ExpectedAttributeValue> mergeExpectedAttributeValueConditions(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.ExpectedAttributeValue>, java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.ExpectedAttributeValue>, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          28
      13: aload_1
      14: ifnull        26
      17: aload_1
      18: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      23: ifeq          28
      26: aconst_null
      27: areturn
      28: aload_0
      29: ifnonnull     41
      32: new           #65                 // class java/util/HashMap
      35: dup
      36: aload_1
      37: invokespecial #459                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      40: areturn
      41: aload_1
      42: ifnonnull     54
      45: new           #65                 // class java/util/HashMap
      48: dup
      49: aload_0
      50: invokespecial #459                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      53: areturn
      54: new           #65                 // class java/util/HashMap
      57: dup
      58: aload_0
      59: invokespecial #459                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      62: astore_3
      63: aload_1
      64: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      69: invokeinterface #156,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      74: astore        4
      76: aload         4
      78: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          110
      86: aload         4
      88: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #12                 // class java/lang/String
      96: astore        5
      98: aload_3
      99: aload         5
     101: invokeinterface #460,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          76
     110: getstatic     #461                // Field com/amazonaws/services/dynamodbv2/model/ConditionalOperator.OR:Lcom/amazonaws/services/dynamodbv2/model/ConditionalOperator;
     113: invokevirtual #462                // Method com/amazonaws/services/dynamodbv2/model/ConditionalOperator.toString:()Ljava/lang/String;
     116: aload_2
     117: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     120: ifeq          171
     123: aload_3
     124: invokeinterface #116,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     129: ifne          171
     132: new           #27                 // class java/lang/IllegalArgumentException
     135: dup
     136: new           #371                // class java/lang/StringBuilder
     139: dup
     140: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
     143: ldc_w         #463                // String Unable to assert the value of the fields
     146: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_3
     150: invokeinterface #180,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     155: invokevirtual #418                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     158: ldc_w         #464                // String , since the expected value conditions cannot be combined with user-specified conditions joined by \"OR\". You can use SaveBehavior.CLOBBER to skip the assertion on these fields.
     161: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     170: athrow
     171: aload_3
     172: aload_1
     173: invokeinterface #407,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     178: aload_3
     179: areturn

  static <X extends com.amazonaws.AmazonWebServiceRequest> X applyUserAgent(X);
    Code:
       0: aload_0
       1: invokevirtual #465                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: getstatic     #466                // Field USER_AGENT:Ljava/lang/String;
       7: invokevirtual #467                // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
      10: aload_0
      11: areturn

  static <X extends com.amazonaws.AmazonWebServiceRequest> X applyBatchOperationUserAgent(X);
    Code:
       0: aload_0
       1: invokevirtual #465                // Method com/amazonaws/AmazonWebServiceRequest.getRequestClientOptions:()Lcom/amazonaws/RequestClientOptions;
       4: getstatic     #468                // Field USER_AGENT_BATCH_OPERATION:Ljava/lang/String;
       7: invokevirtual #467                // Method com/amazonaws/RequestClientOptions.appendUserAgent:(Ljava/lang/String;)V
      10: aload_0
      11: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache getS3ClientCache();
    Code:
       0: aload_0
       1: getfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
       4: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.S3Link createS3Link(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokevirtual #469                // Method createS3Link:(Lcom/amazonaws/services/s3/model/Region;Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/datamodeling/S3Link;
       7: areturn

  public com.amazonaws.services.dynamodbv2.datamodeling.S3Link createS3Link(com.amazonaws.services.s3.model.Region, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
       4: ifnonnull     18
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc_w         #470                // String Mapper must be constructed with S3 AWS Credentials to create S3Link
      14: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: new           #471                // class com/amazonaws/services/dynamodbv2/datamodeling/S3Link
      21: dup
      22: aload_0
      23: getfield      #35                 // Field s3cc:Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokespecial #472                // Method com/amazonaws/services/dynamodbv2/datamodeling/S3Link."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/S3ClientCache;Lcom/amazonaws/services/s3/model/Region;Ljava/lang/String;Ljava/lang/String;)V
      32: areturn

  public com.amazonaws.services.dynamodbv2.model.CreateTableRequest generateCreateTableRequest(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
       6: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
       9: astore_2
      10: new           #473                // class com/amazonaws/services/dynamodbv2/model/CreateTableRequest
      13: dup
      14: invokespecial #474                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest."<init>":()V
      17: astore_3
      18: aload_3
      19: aload_1
      20: aconst_null
      21: aload_0
      22: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      25: invokestatic  #79                 // Method internalGetTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      28: invokevirtual #475                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.setTableName:(Ljava/lang/String;)V
      31: aload_3
      32: iconst_1
      33: anewarray     #476                // class com/amazonaws/services/dynamodbv2/model/KeySchemaElement
      36: dup
      37: iconst_0
      38: new           #476                // class com/amazonaws/services/dynamodbv2/model/KeySchemaElement
      41: dup
      42: aload_2
      43: invokevirtual #379                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.hashKey:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      46: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
      49: getstatic     #73                 // Field com/amazonaws/services/dynamodbv2/model/KeyType.HASH:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
      52: invokespecial #477                // Method com/amazonaws/services/dynamodbv2/model/KeySchemaElement."<init>":(Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/model/KeyType;)V
      55: aastore
      56: invokevirtual #478                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.withKeySchema:([Lcom/amazonaws/services/dynamodbv2/model/KeySchemaElement;)Lcom/amazonaws/services/dynamodbv2/model/CreateTableRequest;
      59: pop
      60: aload_2
      61: invokevirtual #479                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.rangeKeyIfExists:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      64: ifnull        96
      67: aload_3
      68: iconst_1
      69: anewarray     #476                // class com/amazonaws/services/dynamodbv2/model/KeySchemaElement
      72: dup
      73: iconst_0
      74: new           #476                // class com/amazonaws/services/dynamodbv2/model/KeySchemaElement
      77: dup
      78: aload_2
      79: invokevirtual #480                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.rangeKey:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
      82: invokevirtual #76                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.name:()Ljava/lang/String;
      85: getstatic     #384                // Field com/amazonaws/services/dynamodbv2/model/KeyType.RANGE:Lcom/amazonaws/services/dynamodbv2/model/KeyType;
      88: invokespecial #477                // Method com/amazonaws/services/dynamodbv2/model/KeySchemaElement."<init>":(Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/model/KeyType;)V
      91: aastore
      92: invokevirtual #478                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.withKeySchema:([Lcom/amazonaws/services/dynamodbv2/model/KeySchemaElement;)Lcom/amazonaws/services/dynamodbv2/model/CreateTableRequest;
      95: pop
      96: aload_2
      97: invokevirtual #481                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.globalSecondaryIndexes:()Ljava/util/Collection;
     100: astore        4
     102: aload         4
     104: invokeinterface #482,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     109: ifne          118
     112: aload_3
     113: aload         4
     115: invokevirtual #483                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.setGlobalSecondaryIndexes:(Ljava/util/Collection;)V
     118: aload_2
     119: invokevirtual #484                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.localSecondaryIndexes:()Ljava/util/Collection;
     122: astore        5
     124: aload         5
     126: invokeinterface #482,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     131: ifne          140
     134: aload_3
     135: aload         5
     137: invokevirtual #485                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.setLocalSecondaryIndexes:(Ljava/util/Collection;)V
     140: aload_2
     141: invokevirtual #67                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel.fields:()Ljava/util/Collection;
     144: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     149: astore        6
     151: aload         6
     153: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     158: ifeq          205
     161: aload         6
     163: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     168: checkcast     #71                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel
     171: astore        7
     173: aload         7
     175: iconst_0
     176: anewarray     #72                 // class com/amazonaws/services/dynamodbv2/model/KeyType
     179: invokevirtual #74                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.anyKey:([Lcom/amazonaws/services/dynamodbv2/model/KeyType;)Z
     182: ifeq          202
     185: aload_3
     186: iconst_1
     187: anewarray     #486                // class com/amazonaws/services/dynamodbv2/model/AttributeDefinition
     190: dup
     191: iconst_0
     192: aload         7
     194: invokevirtual #487                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.definition:()Lcom/amazonaws/services/dynamodbv2/model/AttributeDefinition;
     197: aastore
     198: invokevirtual #488                // Method com/amazonaws/services/dynamodbv2/model/CreateTableRequest.withAttributeDefinitions:([Lcom/amazonaws/services/dynamodbv2/model/AttributeDefinition;)Lcom/amazonaws/services/dynamodbv2/model/CreateTableRequest;
     201: pop
     202: goto          151
     205: aload_3
     206: areturn

  public com.amazonaws.services.dynamodbv2.model.DeleteTableRequest generateDeleteTableRequest(java.lang.Class<?>);
    Code:
       0: new           #489                // class com/amazonaws/services/dynamodbv2/model/DeleteTableRequest
       3: dup
       4: invokespecial #490                // Method com/amazonaws/services/dynamodbv2/model/DeleteTableRequest."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: aconst_null
      11: aload_0
      12: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      15: invokestatic  #79                 // Method internalGetTableName:(Ljava/lang/Class;Ljava/lang/Object;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      18: invokevirtual #491                // Method com/amazonaws/services/dynamodbv2/model/DeleteTableRequest.setTableName:(Ljava/lang/String;)V
      21: aload_2
      22: areturn

  public <T, H, R> com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper<T, H, R> newTableMapper(java.lang.Class<T>);
    Code:
       0: new           #492                // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBTableMapper
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #33                 // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      10: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      13: aload_0
      14: aload_0
      15: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
      18: invokespecial #493                // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBTableMapper."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper;Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;)V
      21: areturn

  static com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel access$000(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper, java.lang.Class, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method getTableModel:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
       6: areturn

  static java.util.Map access$100(java.util.Map, java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #7                  // Method mergeExpectedAttributeValueConditions:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;
       6: areturn

  static java.util.Map access$200(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper, java.lang.Class, java.lang.String, java.util.Map, java.util.Map, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #6                  // Method transformAttributeUpdates:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/util/Map;
      11: areturn

  static com.amazonaws.services.dynamodbv2.AmazonDynamoDB access$300(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper);
    Code:
       0: aload_0
       1: getfield      #5                  // Field db:Lcom/amazonaws/services/dynamodbv2/AmazonDynamoDB;
       4: areturn

  static java.util.Map access$400(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method convertToItem:(Ljava/util/Map;)Ljava/util/Map;
       5: areturn

  static com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters access$500(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper, java.util.Map, java.lang.Class, java.lang.String, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #3                  // Method toParameters:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/String;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;
       9: areturn

  static java.util.Map access$600(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper, com.amazonaws.services.dynamodbv2.datamodeling.AttributeTransformer$Parameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method transformAttributes:(Lcom/amazonaws/services/dynamodbv2/datamodeling/AttributeTransformer$Parameters;)Ljava/util/Map;
       5: areturn

  static java.lang.String access$700();
    Code:
       0: getstatic     #1                  // Field NO_RANGE_KEY:Ljava/lang/String;
       3: areturn

  static {};
    Code:
       0: new           #371                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #9                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper
       9: invokevirtual #494                // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc_w         #495                // String /
      18: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokestatic  #496                // Method com/amazonaws/util/VersionInfoUtils.getVersion:()Ljava/lang/String;
      24: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: putstatic     #466                // Field USER_AGENT:Ljava/lang/String;
      33: new           #371                // class java/lang/StringBuilder
      36: dup
      37: invokespecial #372                // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #9                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper
      42: invokevirtual #494                // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #497                // String _batch_operation/
      51: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokestatic  #496                // Method com/amazonaws/util/VersionInfoUtils.getVersion:()Ljava/lang/String;
      57: invokevirtual #374                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #377                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: putstatic     #468                // Field USER_AGENT_BATCH_OPERATION:Ljava/lang/String;
      66: new           #12                 // class java/lang/String
      69: dup
      70: invokespecial #498                // Method java/lang/String."<init>":()V
      73: putstatic     #1                  // Field NO_RANGE_KEY:Ljava/lang/String;
      76: ldc           #9                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapper
      78: invokestatic  #499                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      81: putstatic     #324                // Field log:Lorg/apache/commons/logging/Log;
      84: return
}
