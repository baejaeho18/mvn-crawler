Compiled from "ScanRequest.java"
public class com.amazonaws.services.dynamodbv2.model.ScanRequest extends com.amazonaws.AmazonWebServiceRequest implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String tableName;

  private java.lang.String indexName;

  private java.util.List<java.lang.String> attributesToGet;

  private java.lang.Integer limit;

  private java.lang.String select;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> scanFilter;

  private java.lang.String conditionalOperator;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> exclusiveStartKey;

  private java.lang.String returnConsumedCapacity;

  private java.lang.Integer totalSegments;

  private java.lang.Integer segment;

  private java.lang.String projectionExpression;

  private java.lang.String filterExpression;

  private java.util.Map<java.lang.String, java.lang.String> expressionAttributeNames;

  private java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> expressionAttributeValues;

  private java.lang.Boolean consistentRead;

  public com.amazonaws.services.dynamodbv2.model.ScanRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/amazonaws/AmazonWebServiceRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setTableName:(Ljava/lang/String;)V
       9: return

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field tableName:Ljava/lang/String;
       5: return

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tableName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method setTableName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field indexName:Ljava/lang/String;
       5: return

  public java.lang.String getIndexName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field indexName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withIndexName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setIndexName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getAttributesToGet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributesToGet:Ljava/util/List;
       4: areturn

  public void setAttributesToGet(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field attributesToGet:Ljava/util/List;
       9: return
      10: aload_0
      11: new           #7                  // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #8                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: putfield      #6                  // Field attributesToGet:Ljava/util/List;
      22: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withAttributesToGet(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributesToGet:Ljava/util/List;
       4: ifnonnull     20
       7: aload_0
       8: new           #7                  // class java/util/ArrayList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #9                  // Method java/util/ArrayList."<init>":(I)V
      17: invokevirtual #10                 // Method setAttributesToGet:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #6                  // Field attributesToGet:Ljava/util/List;
      44: aload         5
      46: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          28
      58: aload_0
      59: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withAttributesToGet(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method setAttributesToGet:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field limit:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getLimit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field limit:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setLimit:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field select:Ljava/lang/String;
       5: return

  public java.lang.String getSelect();
    Code:
       0: aload_0
       1: getfield      #14                 // Field select:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setSelect:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method com/amazonaws/services/dynamodbv2/model/Select.toString:()Ljava/lang/String;
       5: putfield      #14                 // Field select:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withSelect(com.amazonaws.services.dynamodbv2.model.Select);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setSelect:(Lcom/amazonaws/services/dynamodbv2/model/Select;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition> getScanFilter();
    Code:
       0: aload_0
       1: getfield      #18                 // Field scanFilter:Ljava/util/Map;
       4: areturn

  public void setScanFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field scanFilter:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withScanFilter(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setScanFilter:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest addScanFilterEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.Condition);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #18                 // Field scanFilter:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #20                 // class java/util/HashMap
      12: dup
      13: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      16: putfield      #18                 // Field scanFilter:Ljava/util/Map;
      19: aload_0
      20: getfield      #18                 // Field scanFilter:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #24                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #26                 // String Duplicated keys (
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #28                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String ) are provided.
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #18                 // Field scanFilter:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest clearScanFilterEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #18                 // Field scanFilter:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field conditionalOperator:Ljava/lang/String;
       5: return

  public java.lang.String getConditionalOperator();
    Code:
       0: aload_0
       1: getfield      #33                 // Field conditionalOperator:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withConditionalOperator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setConditionalOperator:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method com/amazonaws/services/dynamodbv2/model/ConditionalOperator.toString:()Ljava/lang/String;
       5: putfield      #33                 // Field conditionalOperator:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withConditionalOperator(com.amazonaws.services.dynamodbv2.model.ConditionalOperator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setConditionalOperator:(Lcom/amazonaws/services/dynamodbv2/model/ConditionalOperator;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExclusiveStartKey();
    Code:
       0: aload_0
       1: getfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
       4: areturn

  public void setExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withExclusiveStartKey(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setExclusiveStartKey:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest addExclusiveStartKeyEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #20                 // class java/util/HashMap
      12: dup
      13: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      16: putfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
      19: aload_0
      20: getfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #24                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #26                 // String Duplicated keys (
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #28                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String ) are provided.
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest clearExclusiveStartKeyEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #37                 // Field exclusiveStartKey:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field returnConsumedCapacity:Ljava/lang/String;
       5: return

  public java.lang.String getReturnConsumedCapacity();
    Code:
       0: aload_0
       1: getfield      #39                 // Field returnConsumedCapacity:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withReturnConsumedCapacity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setReturnConsumedCapacity:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity.toString:()Ljava/lang/String;
       5: putfield      #39                 // Field returnConsumedCapacity:Ljava/lang/String;
       8: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withReturnConsumedCapacity(com.amazonaws.services.dynamodbv2.model.ReturnConsumedCapacity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setReturnConsumedCapacity:(Lcom/amazonaws/services/dynamodbv2/model/ReturnConsumedCapacity;)V
       5: aload_0
       6: areturn

  public void setTotalSegments(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field totalSegments:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getTotalSegments();
    Code:
       0: aload_0
       1: getfield      #43                 // Field totalSegments:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withTotalSegments(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setTotalSegments:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setSegment(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field segment:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getSegment();
    Code:
       0: aload_0
       1: getfield      #45                 // Field segment:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withSegment(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setSegment:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field projectionExpression:Ljava/lang/String;
       5: return

  public java.lang.String getProjectionExpression();
    Code:
       0: aload_0
       1: getfield      #47                 // Field projectionExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withProjectionExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setProjectionExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field filterExpression:Ljava/lang/String;
       5: return

  public java.lang.String getFilterExpression();
    Code:
       0: aload_0
       1: getfield      #49                 // Field filterExpression:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withFilterExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setFilterExpression:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, java.lang.String> getExpressionAttributeNames();
    Code:
       0: aload_0
       1: getfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withExpressionAttributeNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method setExpressionAttributeNames:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest addExpressionAttributeNamesEntry(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #20                 // class java/util/HashMap
      12: dup
      13: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      16: putfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
      19: aload_0
      20: getfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #24                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #26                 // String Duplicated keys (
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #28                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String ) are provided.
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest clearExpressionAttributeNamesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #51                 // Field expressionAttributeNames:Ljava/util/Map;
       5: aload_0
       6: areturn

  public java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue> getExpressionAttributeValues();
    Code:
       0: aload_0
       1: getfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
       4: areturn

  public void setExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
       5: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withExpressionAttributeValues(java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setExpressionAttributeValues:(Ljava/util/Map;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest addExpressionAttributeValuesEntry(java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
       5: if_acmpne     19
       8: aload_0
       9: new           #20                 // class java/util/HashMap
      12: dup
      13: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      16: putfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
      19: aload_0
      20: getfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      29: ifeq          67
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: new           #24                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #26                 // String Duplicated keys (
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #28                 // Method java/lang/String.toString:()Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String ) are provided.
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: getfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest clearExpressionAttributeValuesEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #53                 // Field expressionAttributeValues:Ljava/util/Map;
       5: aload_0
       6: areturn

  public void setConsistentRead(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field consistentRead:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getConsistentRead();
    Code:
       0: aload_0
       1: getfield      #55                 // Field consistentRead:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withConsistentRead(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setConsistentRead:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isConsistentRead();
    Code:
       0: aload_0
       1: getfield      #55                 // Field consistentRead:Ljava/lang/Boolean;
       4: areturn

  public void setExclusiveStartKey(java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #20                 // class java/util/HashMap
       3: dup
       4: invokespecial #21                 // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: ifnull        32
      12: aload_3
      13: aload_1
      14: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      19: aload_1
      20: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      25: invokevirtual #59                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: goto          42
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #60                 // String hashKey must be non-null object.
      38: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ifnull        63
      46: aload_3
      47: aload_2
      48: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: aload_2
      54: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: invokevirtual #59                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: aload_3
      65: invokevirtual #38                 // Method setExclusiveStartKey:(Ljava/util/Map;)V
      68: return

  public com.amazonaws.services.dynamodbv2.model.ScanRequest withExclusiveStartKey(java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>, java.util.Map$Entry<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #61                 // Method setExclusiveStartKey:(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)V
       6: aload_0
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #62                 // String {
      11: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #24                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #64                 // String TableName:
      32: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #65                 // String ,
      44: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #24                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #67                 // String IndexName:
      71: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      78: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #65                 // String ,
      83: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
      97: ifnull        132
     100: aload_1
     101: new           #24                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #69                 // String AttributesToGet:
     110: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     117: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #65                 // String ,
     122: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     136: ifnull        171
     139: aload_1
     140: new           #24                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #72                 // String Limit:
     149: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     156: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #65                 // String ,
     161: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #24                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #74                 // String Select:
     188: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     195: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #65                 // String ,
     200: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     214: ifnull        249
     217: aload_1
     218: new           #24                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #76                 // String ScanFilter:
     227: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     234: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #65                 // String ,
     239: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #24                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #78                 // String ConditionalOperator:
     266: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     273: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #65                 // String ,
     278: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     292: ifnull        327
     295: aload_1
     296: new           #24                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #80                 // String ExclusiveStartKey:
     305: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     312: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #65                 // String ,
     317: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #24                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #82                 // String ReturnConsumedCapacity:
     344: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     351: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #65                 // String ,
     356: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     370: ifnull        405
     373: aload_1
     374: new           #24                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #84                 // String TotalSegments:
     383: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     390: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #65                 // String ,
     395: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     409: ifnull        444
     412: aload_1
     413: new           #24                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #86                 // String Segment:
     422: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     429: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #65                 // String ,
     434: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #24                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #88                 // String ProjectionExpression:
     461: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     468: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #65                 // String ,
     473: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #24                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #90                 // String FilterExpression:
     500: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     507: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #65                 // String ,
     512: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     526: ifnull        561
     529: aload_1
     530: new           #24                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #92                 // String ExpressionAttributeNames:
     539: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     546: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     549: ldc           #65                 // String ,
     551: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     565: ifnull        600
     568: aload_1
     569: new           #24                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #94                 // String ExpressionAttributeValues:
     578: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     585: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     588: ldc           #65                 // String ,
     590: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     604: ifnull        634
     607: aload_1
     608: new           #24                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #96                 // String ConsistentRead:
     617: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     624: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     627: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     630: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     633: pop
     634: aload_1
     635: ldc           #97                 // String }
     637: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     640: pop
     641: aload_1
     642: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     645: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #98                 // class com/amazonaws/services/dynamodbv2/model/ScanRequest
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #98                 // class com/amazonaws/services/dynamodbv2/model/ScanRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      72: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
     125: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     167: ifnull        188
     170: aload_2
     171: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     174: aload_0
     175: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
     178: invokeinterface #100,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     183: ifne          188
     186: iconst_0
     187: ireturn
     188: aload_2
     189: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     192: ifnonnull     199
     195: iconst_1
     196: goto          200
     199: iconst_0
     200: aload_0
     201: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     204: ifnonnull     211
     207: iconst_1
     208: goto          212
     211: iconst_0
     212: ixor
     213: ifeq          218
     216: iconst_0
     217: ireturn
     218: aload_2
     219: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     222: ifnull        241
     225: aload_2
     226: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     229: aload_0
     230: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
     233: invokevirtual #101                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     286: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     328: ifnull        349
     331: aload_2
     332: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     335: aload_0
     336: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     339: invokeinterface #102,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     344: ifne          349
     347: iconst_0
     348: ireturn
     349: aload_2
     350: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     353: ifnonnull     360
     356: iconst_1
     357: goto          361
     360: iconst_0
     361: aload_0
     362: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     365: ifnonnull     372
     368: iconst_1
     369: goto          373
     372: iconst_0
     373: ixor
     374: ifeq          379
     377: iconst_0
     378: ireturn
     379: aload_2
     380: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     383: ifnull        402
     386: aload_2
     387: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     390: aload_0
     391: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     394: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     397: ifne          402
     400: iconst_0
     401: ireturn
     402: aload_2
     403: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     406: ifnonnull     413
     409: iconst_1
     410: goto          414
     413: iconst_0
     414: aload_0
     415: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     418: ifnonnull     425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: ixor
     427: ifeq          432
     430: iconst_0
     431: ireturn
     432: aload_2
     433: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     436: ifnull        457
     439: aload_2
     440: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     443: aload_0
     444: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     447: invokeinterface #102,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     452: ifne          457
     455: iconst_0
     456: ireturn
     457: aload_2
     458: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     461: ifnonnull     468
     464: iconst_1
     465: goto          469
     468: iconst_0
     469: aload_0
     470: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     473: ifnonnull     480
     476: iconst_1
     477: goto          481
     480: iconst_0
     481: ixor
     482: ifeq          487
     485: iconst_0
     486: ireturn
     487: aload_2
     488: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     491: ifnull        510
     494: aload_2
     495: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     498: aload_0
     499: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     502: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     505: ifne          510
     508: iconst_0
     509: ireturn
     510: aload_2
     511: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     514: ifnonnull     521
     517: iconst_1
     518: goto          522
     521: iconst_0
     522: aload_0
     523: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     526: ifnonnull     533
     529: iconst_1
     530: goto          534
     533: iconst_0
     534: ixor
     535: ifeq          540
     538: iconst_0
     539: ireturn
     540: aload_2
     541: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     544: ifnull        563
     547: aload_2
     548: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     551: aload_0
     552: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     555: invokevirtual #101                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     558: ifne          563
     561: iconst_0
     562: ireturn
     563: aload_2
     564: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     567: ifnonnull     574
     570: iconst_1
     571: goto          575
     574: iconst_0
     575: aload_0
     576: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     579: ifnonnull     586
     582: iconst_1
     583: goto          587
     586: iconst_0
     587: ixor
     588: ifeq          593
     591: iconst_0
     592: ireturn
     593: aload_2
     594: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     597: ifnull        616
     600: aload_2
     601: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     604: aload_0
     605: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     608: invokevirtual #101                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     611: ifne          616
     614: iconst_0
     615: ireturn
     616: aload_2
     617: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     620: ifnonnull     627
     623: iconst_1
     624: goto          628
     627: iconst_0
     628: aload_0
     629: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     632: ifnonnull     639
     635: iconst_1
     636: goto          640
     639: iconst_0
     640: ixor
     641: ifeq          646
     644: iconst_0
     645: ireturn
     646: aload_2
     647: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     650: ifnull        669
     653: aload_2
     654: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     657: aload_0
     658: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     661: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     664: ifne          669
     667: iconst_0
     668: ireturn
     669: aload_2
     670: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     673: ifnonnull     680
     676: iconst_1
     677: goto          681
     680: iconst_0
     681: aload_0
     682: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     685: ifnonnull     692
     688: iconst_1
     689: goto          693
     692: iconst_0
     693: ixor
     694: ifeq          699
     697: iconst_0
     698: ireturn
     699: aload_2
     700: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     703: ifnull        722
     706: aload_2
     707: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     710: aload_0
     711: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     714: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     717: ifne          722
     720: iconst_0
     721: ireturn
     722: aload_2
     723: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     726: ifnonnull     733
     729: iconst_1
     730: goto          734
     733: iconst_0
     734: aload_0
     735: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     738: ifnonnull     745
     741: iconst_1
     742: goto          746
     745: iconst_0
     746: ixor
     747: ifeq          752
     750: iconst_0
     751: ireturn
     752: aload_2
     753: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     756: ifnull        777
     759: aload_2
     760: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     763: aload_0
     764: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     767: invokeinterface #102,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     772: ifne          777
     775: iconst_0
     776: ireturn
     777: aload_2
     778: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     781: ifnonnull     788
     784: iconst_1
     785: goto          789
     788: iconst_0
     789: aload_0
     790: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     793: ifnonnull     800
     796: iconst_1
     797: goto          801
     800: iconst_0
     801: ixor
     802: ifeq          807
     805: iconst_0
     806: ireturn
     807: aload_2
     808: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     811: ifnull        832
     814: aload_2
     815: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     818: aload_0
     819: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     822: invokeinterface #102,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
     827: ifne          832
     830: iconst_0
     831: ireturn
     832: aload_2
     833: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     836: ifnonnull     843
     839: iconst_1
     840: goto          844
     843: iconst_0
     844: aload_0
     845: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     848: ifnonnull     855
     851: iconst_1
     852: goto          856
     855: iconst_0
     856: ixor
     857: ifeq          862
     860: iconst_0
     861: ireturn
     862: aload_2
     863: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     866: ifnull        885
     869: aload_2
     870: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     873: aload_0
     874: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     877: invokevirtual #103                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     880: ifne          885
     883: iconst_0
     884: ireturn
     885: iconst_1
     886: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #63                 // Method getTableName:()Ljava/lang/String;
      24: invokevirtual #104                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #66                 // Method getIndexName:()Ljava/lang/String;
      48: invokevirtual #104                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
      61: ifnonnull     68
      64: iconst_0
      65: goto          77
      68: aload_0
      69: invokevirtual #68                 // Method getAttributesToGet:()Ljava/util/List;
      72: invokeinterface #105,  1          // InterfaceMethod java/util/List.hashCode:()I
      77: iadd
      78: istore_2
      79: bipush        31
      81: iload_2
      82: imul
      83: aload_0
      84: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
      87: ifnonnull     94
      90: iconst_0
      91: goto          101
      94: aload_0
      95: invokevirtual #71                 // Method getLimit:()Ljava/lang/Integer;
      98: invokevirtual #106                // Method java/lang/Integer.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #73                 // Method getSelect:()Ljava/lang/String;
     122: invokevirtual #104                // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     135: ifnonnull     142
     138: iconst_0
     139: goto          151
     142: aload_0
     143: invokevirtual #75                 // Method getScanFilter:()Ljava/util/Map;
     146: invokeinterface #107,  1          // InterfaceMethod java/util/Map.hashCode:()I
     151: iadd
     152: istore_2
     153: bipush        31
     155: iload_2
     156: imul
     157: aload_0
     158: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     161: ifnonnull     168
     164: iconst_0
     165: goto          175
     168: aload_0
     169: invokevirtual #77                 // Method getConditionalOperator:()Ljava/lang/String;
     172: invokevirtual #104                // Method java/lang/String.hashCode:()I
     175: iadd
     176: istore_2
     177: bipush        31
     179: iload_2
     180: imul
     181: aload_0
     182: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     185: ifnonnull     192
     188: iconst_0
     189: goto          201
     192: aload_0
     193: invokevirtual #79                 // Method getExclusiveStartKey:()Ljava/util/Map;
     196: invokeinterface #107,  1          // InterfaceMethod java/util/Map.hashCode:()I
     201: iadd
     202: istore_2
     203: bipush        31
     205: iload_2
     206: imul
     207: aload_0
     208: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     211: ifnonnull     218
     214: iconst_0
     215: goto          225
     218: aload_0
     219: invokevirtual #81                 // Method getReturnConsumedCapacity:()Ljava/lang/String;
     222: invokevirtual #104                // Method java/lang/String.hashCode:()I
     225: iadd
     226: istore_2
     227: bipush        31
     229: iload_2
     230: imul
     231: aload_0
     232: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     235: ifnonnull     242
     238: iconst_0
     239: goto          249
     242: aload_0
     243: invokevirtual #83                 // Method getTotalSegments:()Ljava/lang/Integer;
     246: invokevirtual #106                // Method java/lang/Integer.hashCode:()I
     249: iadd
     250: istore_2
     251: bipush        31
     253: iload_2
     254: imul
     255: aload_0
     256: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     259: ifnonnull     266
     262: iconst_0
     263: goto          273
     266: aload_0
     267: invokevirtual #85                 // Method getSegment:()Ljava/lang/Integer;
     270: invokevirtual #106                // Method java/lang/Integer.hashCode:()I
     273: iadd
     274: istore_2
     275: bipush        31
     277: iload_2
     278: imul
     279: aload_0
     280: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     283: ifnonnull     290
     286: iconst_0
     287: goto          297
     290: aload_0
     291: invokevirtual #87                 // Method getProjectionExpression:()Ljava/lang/String;
     294: invokevirtual #104                // Method java/lang/String.hashCode:()I
     297: iadd
     298: istore_2
     299: bipush        31
     301: iload_2
     302: imul
     303: aload_0
     304: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     307: ifnonnull     314
     310: iconst_0
     311: goto          321
     314: aload_0
     315: invokevirtual #89                 // Method getFilterExpression:()Ljava/lang/String;
     318: invokevirtual #104                // Method java/lang/String.hashCode:()I
     321: iadd
     322: istore_2
     323: bipush        31
     325: iload_2
     326: imul
     327: aload_0
     328: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     331: ifnonnull     338
     334: iconst_0
     335: goto          347
     338: aload_0
     339: invokevirtual #91                 // Method getExpressionAttributeNames:()Ljava/util/Map;
     342: invokeinterface #107,  1          // InterfaceMethod java/util/Map.hashCode:()I
     347: iadd
     348: istore_2
     349: bipush        31
     351: iload_2
     352: imul
     353: aload_0
     354: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     357: ifnonnull     364
     360: iconst_0
     361: goto          373
     364: aload_0
     365: invokevirtual #93                 // Method getExpressionAttributeValues:()Ljava/util/Map;
     368: invokeinterface #107,  1          // InterfaceMethod java/util/Map.hashCode:()I
     373: iadd
     374: istore_2
     375: bipush        31
     377: iload_2
     378: imul
     379: aload_0
     380: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     383: ifnonnull     390
     386: iconst_0
     387: goto          397
     390: aload_0
     391: invokevirtual #95                 // Method getConsistentRead:()Ljava/lang/Boolean;
     394: invokevirtual #108                // Method java/lang/Boolean.hashCode:()I
     397: iadd
     398: istore_2
     399: iload_2
     400: ireturn

  public com.amazonaws.services.dynamodbv2.model.ScanRequest clone();
    Code:
       0: aload_0
       1: invokespecial #109                // Method com/amazonaws/AmazonWebServiceRequest.clone:()Lcom/amazonaws/AmazonWebServiceRequest;
       4: checkcast     #98                 // class com/amazonaws/services/dynamodbv2/model/ScanRequest
       7: areturn

  public com.amazonaws.AmazonWebServiceRequest clone();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method clone:()Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method clone:()Lcom/amazonaws/services/dynamodbv2/model/ScanRequest;
       4: areturn
}
