Compiled from "DynamoDBMapperConfig.java"
public class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig$DefaultBatchLoadRetryStrategy implements com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig$BatchLoadRetryStrategy {
  private static final int MAX_RETRIES;

  private static final long MAX_BACKOFF_IN_MILLISECONDS;

  public com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig$DefaultBatchLoadRetryStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public long getDelayBeforeNextRetry(com.amazonaws.services.dynamodbv2.datamodeling.BatchLoadContext);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.getBatchGetItemRequest:()Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemRequest;
       4: invokevirtual #3                  // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemRequest.getRequestItems:()Ljava/util/Map;
       7: astore_2
       8: aload_1
       9: invokevirtual #4                  // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.getBatchGetItemResult:()Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemResult;
      12: invokevirtual #5                  // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getUnprocessedKeys:()Ljava/util/Map;
      15: astore_3
      16: lconst_0
      17: lstore        4
      19: aload_3
      20: ifnull        97
      23: aload_2
      24: ifnull        97
      27: aload_3
      28: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      33: aload_2
      34: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      39: if_icmpne     97
      42: new           #7                  // class java/util/Random
      45: dup
      46: invokespecial #8                  // Method java/util/Random."<init>":()V
      49: astore        6
      51: sipush        500
      54: aload         6
      56: bipush        100
      58: invokevirtual #9                  // Method java/util/Random.nextInt:(I)I
      61: iadd
      62: i2l
      63: lstore        7
      65: aload_1
      66: invokevirtual #10                 // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.getRetriesAttempted:()I
      69: istore        9
      71: ldc2_w        #11                 // double 2.0d
      74: iload         9
      76: i2d
      77: invokestatic  #13                 // Method java/lang/Math.pow:(DD)D
      80: lload         7
      82: l2d
      83: dmul
      84: d2l
      85: lstore        4
      87: lload         4
      89: ldc2_w        #15                 // long 3000l
      92: invokestatic  #17                 // Method java/lang/Math.min:(JJ)J
      95: lstore        4
      97: lload         4
      99: lreturn

  public boolean shouldRetry(com.amazonaws.services.dynamodbv2.datamodeling.BatchLoadContext);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.getBatchGetItemResult:()Lcom/amazonaws/services/dynamodbv2/model/BatchGetItemResult;
       4: invokevirtual #5                  // Method com/amazonaws/services/dynamodbv2/model/BatchGetItemResult.getUnprocessedKeys:()Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: ifnull        33
      12: aload_2
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Map.size:()I
      18: ifle          33
      21: aload_1
      22: invokevirtual #10                 // Method com/amazonaws/services/dynamodbv2/datamodeling/BatchLoadContext.getRetriesAttempted:()I
      25: iconst_5
      26: if_icmpge     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
}
