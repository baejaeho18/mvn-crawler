Compiled from "StandardTypeConverters.java"
final class com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap<T> extends java.util.LinkedHashMap<java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertTo<?, T>> {
  private final java.lang.Class<?> primitiveType;

  private final java.lang.Class<T> type;

  private com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap(java.lang.Class<T>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #1                  // Field primitiveType:Ljava/lang/Class;
       9: aload_0
      10: aload_1
      11: putfield      #2                  // Field type:Ljava/lang/Class;
      14: return

  private final <S> com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap<T> with(java.lang.Class<S>, com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertTo<S, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: ifnull        36
       9: new           #7                  // class java/lang/IllegalStateException
      12: dup
      13: new           #8                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #10                 // String duplicate conversion for type
      22: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: areturn

  com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap(java.lang.Class, java.lang.Class, com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
       6: return

  static com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap access$100(com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap, java.lang.Class, com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertTo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method with:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardTypeConverters$ConvertTo;)Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardTypeConverters$ConvertToMap;
       6: areturn

  static java.lang.Class access$200(com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljava/lang/Class;
       4: areturn

  static java.lang.Class access$400(com.amazonaws.services.dynamodbv2.datamodeling.StandardTypeConverters$ConvertToMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field primitiveType:Ljava/lang/Class;
       4: areturn
}
