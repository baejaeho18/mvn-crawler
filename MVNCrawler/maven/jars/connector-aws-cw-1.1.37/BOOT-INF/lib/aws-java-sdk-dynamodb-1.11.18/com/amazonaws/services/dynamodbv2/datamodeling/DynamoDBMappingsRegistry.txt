Compiled from "DynamoDBMappingsRegistry.java"
final class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry {
  private static final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry INSTANCE;

  private final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry$Mappings> mappings;

  com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field mappings:Ljava/util/concurrent/ConcurrentMap;
      15: return

  static final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry instance();
    Code:
       0: getstatic     #5                  // Field INSTANCE:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry;
       3: areturn

  final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry$Mappings mappingsOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappings:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          33
      13: aload_0
      14: getfield      #4                  // Field mappings:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: new           #7                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mappings
      21: dup
      22: aload_1
      23: aconst_null
      24: invokespecial #8                  // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mappings."<init>":(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$1;)V
      27: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: getfield      #4                  // Field mappings:Ljava/util/concurrent/ConcurrentMap;
      37: aload_1
      38: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #7                  // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mappings
      46: areturn

  final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingsRegistry$Mapping mappingOf(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       5: invokevirtual #12                 // Method mappingsOf:(Ljava/lang/Class;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mappings;
       8: aload_1
       9: invokevirtual #13                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mappings.getMapping:(Ljava/lang/reflect/Method;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry$Mapping;
      12: areturn

  static {};
    Code:
       0: new           #14                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: putstatic     #5                  // Field INSTANCE:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingsRegistry;
      10: return
}
