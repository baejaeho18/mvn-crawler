Compiled from "StandardModelFactories.java"
final class com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactory implements com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory {
  private final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<?>> cache;

  private final com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig config;

  private final com.amazonaws.services.dynamodbv2.datamodeling.ItemConverter converter;

  private com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactory(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory$Schema, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, com.amazonaws.services.dynamodbv2.datamodeling.ConversionSchema$Dependencies);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_2
      17: invokevirtual #6                  // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getConversionSchema:()Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema;
      20: aload_3
      21: invokeinterface #7,  2            // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema.getConverter:(Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;)Lcom/amazonaws/services/dynamodbv2/datamodeling/ItemConverter;
      26: putfield      #8                  // Field converter:Lcom/amazonaws/services/dynamodbv2/datamodeling/ItemConverter;
      29: aload_0
      30: aload_2
      31: putfield      #9                  // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      34: return

  public <T> com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T> getTableModel(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          29
      13: aload_0
      14: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: aload_0
      19: aload_1
      20: invokespecial #11                 // Method newTableModel:(Ljava/lang/Class;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
      23: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      33: aload_1
      34: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #14                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel
      42: areturn

  private <T> com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperTableModel<T> newTableModel(java.lang.Class<T>);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardAnnotationMaps.of:(Ljava/lang/Class;)Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardAnnotationMaps$TableMap;
       4: astore_3
       5: new           #16                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder
       8: dup
       9: aload_3
      10: invokespecial #17                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Properties;)V
      13: astore_2
      14: aload_3
      15: invokevirtual #18                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardAnnotationMaps$TableMap.tableName:()Ljava/lang/String;
      18: ifnull        72
      21: aload_0
      22: getfield      #9                  // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      25: invokevirtual #19                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getTableNameResolver:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$TableNameResolver;
      28: ifnonnull     50
      31: aload_2
      32: getstatic     #20                 // Field com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$DefaultTableNameResolver.INSTANCE:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$DefaultTableNameResolver;
      35: aload_1
      36: aload_0
      37: getfield      #9                  // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      40: invokevirtual #21                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$DefaultTableNameResolver.getTableName:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      43: invokevirtual #22                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder.withTableName:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder;
      46: pop
      47: goto          72
      50: aload_2
      51: aload_0
      52: getfield      #9                  // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      55: invokevirtual #19                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig.getTableNameResolver:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$TableNameResolver;
      58: aload_1
      59: aload_0
      60: getfield      #9                  // Field config:Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;
      63: invokeinterface #23,  3           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig$TableNameResolver.getTableName:(Ljava/lang/Class;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;)Ljava/lang/String;
      68: invokevirtual #22                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder.withTableName:(Ljava/lang/String;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder;
      71: pop
      72: aload_1
      73: invokestatic  #24                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties.of:(Ljava/lang/Class;)Ljava/util/Map;
      76: astore        4
      78: aload         4
      80: invokeinterface #25,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      85: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      90: astore        5
      92: aload         5
      94: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          219
     102: aload         5
     104: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #29                 // class java/lang/String
     112: astore        6
     114: aload         4
     116: aload         6
     118: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     123: checkcast     #31                 // class com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean
     126: astore        8
     128: new           #32                 // class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder
     131: dup
     132: aload         8
     134: invokevirtual #33                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean.id:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Id;
     137: aload         8
     139: invokevirtual #34                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean.annotations:()Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardAnnotationMaps$FieldMap;
     142: invokespecial #35                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Id;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Properties;)V
     145: astore        7
     147: aload         7
     149: aload         8
     151: invokevirtual #36                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean.reflect:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Reflect;
     154: invokevirtual #37                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder.with:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Reflect;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder;
     157: pop
     158: aload         7
     160: aload_0
     161: getfield      #8                  // Field converter:Lcom/amazonaws/services/dynamodbv2/datamodeling/ItemConverter;
     164: aload         8
     166: invokevirtual #38                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean.getter:()Ljava/lang/reflect/Method;
     169: invokeinterface #39,  2           // InterfaceMethod com/amazonaws/services/dynamodbv2/datamodeling/ItemConverter.getFieldModel:(Ljava/lang/reflect/Method;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
     174: invokevirtual #40                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel.getDynamoDBAttributeType:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$DynamoDBAttributeType;
     177: invokevirtual #41                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder.with:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$DynamoDBAttributeType;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder;
     180: pop
     181: goto          186
     184: astore        9
     186: aload         7
     188: new           #43                 // class com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$Converter
     191: dup
     192: aload         8
     194: aload_0
     195: getfield      #8                  // Field converter:Lcom/amazonaws/services/dynamodbv2/datamodeling/ItemConverter;
     198: aconst_null
     199: invokespecial #44                 // Method com/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$Converter."<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardBeanProperties$Bean;Lcom/amazonaws/services/dynamodbv2/datamodeling/ItemConverter;Lcom/amazonaws/services/dynamodbv2/datamodeling/StandardModelFactories$1;)V
     202: invokevirtual #45                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder.with:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBTypeConverter;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder;
     205: pop
     206: aload_2
     207: aload         7
     209: invokevirtual #46                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel$Builder.build:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;
     212: invokevirtual #47                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder.with:(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperFieldModel;)Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder;
     215: pop
     216: goto          92
     219: aload_2
     220: invokevirtual #48                 // Method com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel$Builder.build:()Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperTableModel;
     223: areturn
    Exception table:
       from    to  target type
         158   181   184   Class com/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMappingException

  com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$SchemaFactory(com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperModelFactory$Schema, com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig, com.amazonaws.services.dynamodbv2.datamodeling.ConversionSchema$Dependencies, com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperModelFactory$Schema;Lcom/amazonaws/services/dynamodbv2/datamodeling/DynamoDBMapperConfig;Lcom/amazonaws/services/dynamodbv2/datamodeling/ConversionSchema$Dependencies;)V
       7: return
}
