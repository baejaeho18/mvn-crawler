Compiled from "S3ClientCache.java"
public class com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache {
  private final java.util.concurrent.ConcurrentMap<com.amazonaws.services.s3.model.Region, com.amazonaws.services.s3.AmazonS3> clientsByRegion;

  private final java.util.Map<com.amazonaws.services.s3.model.Region, com.amazonaws.services.s3.transfer.TransferManager> transferManagersByRegion;

  private final com.amazonaws.auth.AWSCredentialsProvider awscredentialsProvider;

  com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache(com.amazonaws.auth.AWSCredentials);
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/internal/StaticCredentialsProvider
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method com/amazonaws/internal/StaticCredentialsProvider."<init>":(Lcom/amazonaws/auth/AWSCredentials;)V
       9: invokespecial #3                  // Method "<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      12: return

  com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache(com.amazonaws.auth.AWSCredentialsProvider);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #7                  // Field clientsByRegion:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #8                  // class java/util/EnumMap
      19: dup
      20: ldc           #9                  // class com/amazonaws/services/s3/model/Region
      22: invokespecial #10                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      25: putfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
      28: aload_0
      29: aload_1
      30: putfield      #12                 // Field awscredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      33: return

  public void useClient(com.amazonaws.services.s3.AmazonS3);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getRegion:()Lcom/amazonaws/services/s3/model/Region;
       6: astore_2
       7: aload_0
       8: getfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_0
      15: getfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
      18: aload_2
      19: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #15                 // class com/amazonaws/services/s3/transfer/TransferManager
      27: astore        4
      29: aload         4
      31: ifnull        39
      34: aload         4
      36: invokevirtual #16                 // Method com/amazonaws/services/s3/transfer/TransferManager.shutdownNow:()V
      39: aload_0
      40: getfield      #7                  // Field clientsByRegion:Ljava/util/concurrent/ConcurrentMap;
      43: aload_2
      44: aload_1
      45: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_3
      52: monitorexit
      53: goto          63
      56: astore        5
      58: aload_3
      59: monitorexit
      60: aload         5
      62: athrow
      63: return
    Exception table:
       from    to  target type
          14    53    56   any
          56    60    56   any

  public com.amazonaws.services.s3.AmazonS3 getClient(com.amazonaws.services.s3.model.Region);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #18                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #19                 // String S3 region must be specified
      10: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field clientsByRegion:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #22                 // class com/amazonaws/services/s3/AmazonS3
      27: astore_2
      28: aload_2
      29: ifnull        36
      32: aload_2
      33: goto          41
      36: aload_0
      37: aload_1
      38: invokespecial #23                 // Method cacheClient:(Lcom/amazonaws/services/s3/model/Region;)Lcom/amazonaws/services/s3/AmazonS3;
      41: areturn

  private com.amazonaws.services.s3.AmazonS3 cacheClient(com.amazonaws.services.s3.model.Region);
    Code:
       0: aload_0
       1: getfield      #12                 // Field awscredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #24                 // String No credentials provider found to connect to S3
      13: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #25                 // class com/amazonaws/services/s3/AmazonS3Client
      20: dup
      21: aload_0
      22: getfield      #12                 // Field awscredentialsProvider:Lcom/amazonaws/auth/AWSCredentialsProvider;
      25: invokespecial #26                 // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;)V
      28: astore_2
      29: aload_2
      30: aload_1
      31: invokevirtual #27                 // Method com/amazonaws/services/s3/model/Region.toAWSRegion:()Lcom/amazonaws/regions/Region;
      34: invokeinterface #28,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.setRegion:(Lcom/amazonaws/regions/Region;)V
      39: aload_0
      40: getfield      #7                  // Field clientsByRegion:Ljava/util/concurrent/ConcurrentMap;
      43: aload_1
      44: aload_2
      45: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_2
      52: areturn

  public com.amazonaws.services.s3.transfer.TransferManager getTransferManager(com.amazonaws.services.s3.model.Region);
    Code:
       0: aload_0
       1: getfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #15                 // class com/amazonaws/services/s3/transfer/TransferManager
      20: astore_3
      21: aload_3
      22: ifnonnull     50
      25: new           #15                 // class com/amazonaws/services/s3/transfer/TransferManager
      28: dup
      29: aload_0
      30: aload_1
      31: invokevirtual #30                 // Method getClient:(Lcom/amazonaws/services/s3/model/Region;)Lcom/amazonaws/services/s3/AmazonS3;
      34: invokespecial #31                 // Method com/amazonaws/services/s3/transfer/TransferManager."<init>":(Lcom/amazonaws/services/s3/AmazonS3;)V
      37: astore_3
      38: aload_0
      39: getfield      #11                 // Field transferManagersByRegion:Ljava/util/Map;
      42: aload_1
      43: aload_3
      44: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_3
      51: aload_2
      52: monitorexit
      53: areturn
      54: astore        4
      56: aload_2
      57: monitorexit
      58: aload         4
      60: athrow
    Exception table:
       from    to  target type
           7    53    54   any
          54    58    54   any
}
