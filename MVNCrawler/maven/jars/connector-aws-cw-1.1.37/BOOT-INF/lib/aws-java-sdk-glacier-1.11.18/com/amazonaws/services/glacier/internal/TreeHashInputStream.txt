Compiled from "TreeHashInputStream.java"
public class com.amazonaws.services.glacier.internal.TreeHashInputStream extends com.amazonaws.internal.SdkFilterInputStream {
  private final java.security.DigestInputStream digestInputStream;

  private final java.util.List<byte[]> checksums;

  private boolean closed;

  private int byteOffset;

  private static final int MB;

  public com.amazonaws.services.glacier.internal.TreeHashInputStream(java.io.InputStream) throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_0
       1: new           #1                  // class com/amazonaws/internal/SdkDigestInputStream
       4: dup
       5: aload_1
       6: ldc           #2                  // String SHA-256
       8: invokestatic  #3                  // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      11: invokespecial #4                  // Method com/amazonaws/internal/SdkDigestInputStream."<init>":(Ljava/io/InputStream;Ljava/security/MessageDigest;)V
      14: invokespecial #5                  // Method com/amazonaws/internal/SdkFilterInputStream."<init>":(Ljava/io/InputStream;)V
      17: aload_0
      18: new           #6                  // class java/util/ArrayList
      21: dup
      22: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      25: putfield      #8                  // Field checksums:Ljava/util/List;
      28: aload_0
      29: iconst_0
      30: putfield      #9                  // Field closed:Z
      33: aload_0
      34: iconst_0
      35: putfield      #10                 // Field byteOffset:I
      38: aload_0
      39: aload_0
      40: getfield      #11                 // Field com/amazonaws/internal/SdkFilterInputStream.in:Ljava/io/InputStream;
      43: checkcast     #12                 // class java/security/DigestInputStream
      46: putfield      #13                 // Field digestInputStream:Ljava/security/DigestInputStream;
      49: return

  public java.util.List<byte[]> getChecksums() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ifne          17
       7: new           #14                 // class java/io/IOException
      10: dup
      11: ldc           #15                 // String Stream must be closed before getting checksums
      13: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field checksums:Ljava/util/List;
      21: invokestatic  #17                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      24: areturn

  public java.lang.String getTreeHash() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ifne          17
       7: new           #14                 // class java/io/IOException
      10: dup
      11: ldc           #18                 // String Stream must be closed before getting the tree hash
      13: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #19                 // Method getChecksums:()Ljava/util/List;
      21: invokestatic  #20                 // Method com/amazonaws/services/glacier/TreeHashGenerator.calculateTreeHash:(Ljava/util/List;)Ljava/lang/String;
      24: areturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method com/amazonaws/internal/SdkFilterInputStream.read:()I
       4: istore_1
       5: iload_1
       6: iflt          19
       9: aload_0
      10: dup
      11: getfield      #10                 // Field byteOffset:I
      14: iconst_1
      15: iadd
      16: putfield      #10                 // Field byteOffset:I
      19: aload_0
      20: invokespecial #22                 // Method digestPart:()V
      23: iload_1
      24: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload         4
       8: iload_3
       9: if_icmpge     90
      12: iload         5
      14: iconst_m1
      15: if_icmple     90
      18: ldc           #24                 // int 1048576
      20: aload_0
      21: getfield      #10                 // Field byteOffset:I
      24: isub
      25: iload_3
      26: iload         4
      28: isub
      29: invokestatic  #25                 // Method java/lang/Math.min:(II)I
      32: istore        6
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload         4
      39: iadd
      40: iload         6
      42: invokespecial #26                 // Method com/amazonaws/internal/SdkFilterInputStream.read:([BII)I
      45: istore        5
      47: iload         5
      49: ifle          70
      52: iload         4
      54: iload         5
      56: iadd
      57: istore        4
      59: aload_0
      60: dup
      61: getfield      #10                 // Field byteOffset:I
      64: iload         5
      66: iadd
      67: putfield      #10                 // Field byteOffset:I
      70: aload_0
      71: invokespecial #22                 // Method digestPart:()V
      74: iload         5
      76: iconst_m1
      77: if_icmpne     87
      80: iload         4
      82: ifne          87
      85: iconst_m1
      86: ireturn
      87: goto          6
      90: iload         4
      92: ireturn

  private void digestPart();
    Code:
       0: aload_0
       1: getfield      #10                 // Field byteOffset:I
       4: ldc           #24                 // int 1048576
       6: if_icmplt     44
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field byteOffset:I
      14: aload_0
      15: getfield      #8                  // Field checksums:Ljava/util/List;
      18: aload_0
      19: getfield      #13                 // Field digestInputStream:Ljava/security/DigestInputStream;
      22: invokevirtual #27                 // Method java/security/DigestInputStream.getMessageDigest:()Ljava/security/MessageDigest;
      25: invokevirtual #28                 // Method java/security/MessageDigest.digest:()[B
      28: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: getfield      #13                 // Field digestInputStream:Ljava/security/DigestInputStream;
      38: invokevirtual #27                 // Method java/security/DigestInputStream.getMessageDigest:()Ljava/security/MessageDigest;
      41: invokevirtual #30                 // Method java/security/MessageDigest.reset:()V
      44: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method com/amazonaws/internal/SdkFilterInputStream.close:()V
       4: aload_0
       5: iconst_1
       6: putfield      #9                  // Field closed:Z
       9: aload_0
      10: getfield      #10                 // Field byteOffset:I
      13: ifle          36
      16: aload_0
      17: getfield      #8                  // Field checksums:Ljava/util/List;
      20: aload_0
      21: getfield      #13                 // Field digestInputStream:Ljava/security/DigestInputStream;
      24: invokevirtual #27                 // Method java/security/DigestInputStream.getMessageDigest:()Ljava/security/MessageDigest;
      27: invokevirtual #28                 // Method java/security/MessageDigest.digest:()[B
      30: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: return
}
