Compiled from "CompleteMultipartUploadRequestMarshaller.java"
public class com.amazonaws.services.glacier.model.transform.CompleteMultipartUploadRequestMarshaller implements com.amazonaws.transform.Marshaller<com.amazonaws.Request<com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest>, com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest> {
  private final com.amazonaws.protocol.json.SdkJsonProtocolFactory protocolFactory;

  public com.amazonaws.services.glacier.model.transform.CompleteMultipartUploadRequestMarshaller(com.amazonaws.protocol.json.SdkJsonProtocolFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field protocolFactory:Lcom/amazonaws/protocol/json/SdkJsonProtocolFactory;
       9: return

  public com.amazonaws.Request<com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest> marshall(com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class com/amazonaws/AmazonClientException
       7: dup
       8: ldc           #4                  // String Invalid argument passed to marshall(...)
      10: invokespecial #5                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #6                  // class com/amazonaws/DefaultRequest
      17: dup
      18: aload_1
      19: ldc           #7                  // String AmazonGlacier
      21: invokespecial #8                  // Method com/amazonaws/DefaultRequest."<init>":(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)V
      24: astore_2
      25: aload_2
      26: getstatic     #9                  // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      29: invokeinterface #10,  2           // InterfaceMethod com/amazonaws/Request.setHttpMethod:(Lcom/amazonaws/http/HttpMethodName;)V
      34: aload_1
      35: invokevirtual #11                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getArchiveSize:()Ljava/lang/String;
      38: ifnull        56
      41: aload_2
      42: ldc           #12                 // String x-amz-archive-size
      44: aload_1
      45: invokevirtual #11                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getArchiveSize:()Ljava/lang/String;
      48: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
      51: invokeinterface #14,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      56: aload_1
      57: invokevirtual #15                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getChecksum:()Ljava/lang/String;
      60: ifnull        78
      63: aload_2
      64: ldc           #16                 // String x-amz-sha256-tree-hash
      66: aload_1
      67: invokevirtual #15                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getChecksum:()Ljava/lang/String;
      70: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
      73: invokeinterface #14,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      78: ldc           #17                 // String /{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}
      80: astore_3
      81: aload_3
      82: ldc           #18                 // String {accountId}
      84: aload_1
      85: invokevirtual #19                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getAccountId:()Ljava/lang/String;
      88: ifnull        105
      91: aload_1
      92: invokevirtual #19                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getAccountId:()Ljava/lang/String;
      95: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
      98: iconst_0
      99: invokestatic  #20                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
     102: goto          107
     105: ldc           #21                 // String
     107: invokevirtual #22                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     110: astore_3
     111: aload_3
     112: ldc           #23                 // String {vaultName}
     114: aload_1
     115: invokevirtual #24                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getVaultName:()Ljava/lang/String;
     118: ifnull        135
     121: aload_1
     122: invokevirtual #24                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getVaultName:()Ljava/lang/String;
     125: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
     128: iconst_0
     129: invokestatic  #20                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
     132: goto          137
     135: ldc           #21                 // String
     137: invokevirtual #22                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     140: astore_3
     141: aload_3
     142: ldc           #25                 // String {uploadId}
     144: aload_1
     145: invokevirtual #26                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getUploadId:()Ljava/lang/String;
     148: ifnull        165
     151: aload_1
     152: invokevirtual #26                 // Method com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest.getUploadId:()Ljava/lang/String;
     155: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
     158: iconst_0
     159: invokestatic  #20                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
     162: goto          167
     165: ldc           #21                 // String
     167: invokevirtual #22                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     170: astore_3
     171: aload_2
     172: aload_3
     173: invokeinterface #27,  2           // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
     178: aload_2
     179: new           #28                 // class java/io/ByteArrayInputStream
     182: dup
     183: iconst_0
     184: newarray       byte
     186: invokespecial #29                 // Method java/io/ByteArrayInputStream."<init>":([B)V
     189: invokeinterface #30,  2           // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     194: aload_2
     195: invokeinterface #31,  1           // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
     200: ldc           #32                 // String Content-Type
     202: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     207: ifne          225
     210: aload_2
     211: ldc           #32                 // String Content-Type
     213: aload_0
     214: getfield      #2                  // Field protocolFactory:Lcom/amazonaws/protocol/json/SdkJsonProtocolFactory;
     217: invokevirtual #34                 // Method com/amazonaws/protocol/json/SdkJsonProtocolFactory.getContentType:()Ljava/lang/String;
     220: invokeinterface #14,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     225: aload_2
     226: areturn

  public java.lang.Object marshall(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class com/amazonaws/services/glacier/model/CompleteMultipartUploadRequest
       5: invokevirtual #36                 // Method marshall:(Lcom/amazonaws/services/glacier/model/CompleteMultipartUploadRequest;)Lcom/amazonaws/Request;
       8: areturn
}
