Compiled from "HealthCheckConfig.java"
public class com.amazonaws.services.route53.model.HealthCheckConfig implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String iPAddress;

  private java.lang.Integer port;

  private java.lang.String type;

  private java.lang.String resourcePath;

  private java.lang.String fullyQualifiedDomainName;

  private java.lang.String searchString;

  private java.lang.Integer requestInterval;

  private java.lang.Integer failureThreshold;

  private java.lang.Boolean measureLatency;

  private java.lang.Boolean inverted;

  private java.lang.Integer healthThreshold;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> childHealthChecks;

  private java.lang.Boolean enableSNI;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> regions;

  private com.amazonaws.services.route53.model.AlarmIdentifier alarmIdentifier;

  private java.lang.String insufficientDataHealthStatus;

  public com.amazonaws.services.route53.model.HealthCheckConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setIPAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field iPAddress:Ljava/lang/String;
       5: return

  public java.lang.String getIPAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iPAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withIPAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setIPAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field port:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getPort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field port:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setPort:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field type:Ljava/lang/String;
       5: return

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field type:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setType(com.amazonaws.services.route53.model.HealthCheckType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method com/amazonaws/services/route53/model/HealthCheckType.toString:()Ljava/lang/String;
       5: putfield      #6                  // Field type:Ljava/lang/String;
       8: return

  public com.amazonaws.services.route53.model.HealthCheckConfig withType(com.amazonaws.services.route53.model.HealthCheckType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setType:(Lcom/amazonaws/services/route53/model/HealthCheckType;)V
       5: aload_0
       6: areturn

  public void setResourcePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field resourcePath:Ljava/lang/String;
       5: return

  public java.lang.String getResourcePath();
    Code:
       0: aload_0
       1: getfield      #10                 // Field resourcePath:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withResourcePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setResourcePath:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setFullyQualifiedDomainName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field fullyQualifiedDomainName:Ljava/lang/String;
       5: return

  public java.lang.String getFullyQualifiedDomainName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field fullyQualifiedDomainName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withFullyQualifiedDomainName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setFullyQualifiedDomainName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSearchString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field searchString:Ljava/lang/String;
       5: return

  public java.lang.String getSearchString();
    Code:
       0: aload_0
       1: getfield      #14                 // Field searchString:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withSearchString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setSearchString:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRequestInterval(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field requestInterval:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getRequestInterval();
    Code:
       0: aload_0
       1: getfield      #16                 // Field requestInterval:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withRequestInterval(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setRequestInterval:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setFailureThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field failureThreshold:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getFailureThreshold();
    Code:
       0: aload_0
       1: getfield      #18                 // Field failureThreshold:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withFailureThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setFailureThreshold:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public void setMeasureLatency(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field measureLatency:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getMeasureLatency();
    Code:
       0: aload_0
       1: getfield      #20                 // Field measureLatency:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withMeasureLatency(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setMeasureLatency:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isMeasureLatency();
    Code:
       0: aload_0
       1: getfield      #20                 // Field measureLatency:Ljava/lang/Boolean;
       4: areturn

  public void setInverted(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field inverted:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getInverted();
    Code:
       0: aload_0
       1: getfield      #22                 // Field inverted:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withInverted(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setInverted:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isInverted();
    Code:
       0: aload_0
       1: getfield      #22                 // Field inverted:Ljava/lang/Boolean;
       4: areturn

  public void setHealthThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field healthThreshold:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getHealthThreshold();
    Code:
       0: aload_0
       1: getfield      #24                 // Field healthThreshold:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withHealthThreshold(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method setHealthThreshold:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getChildHealthChecks();
    Code:
       0: aload_0
       1: getfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #27                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #28                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setChildHealthChecks(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #27                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #29                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.route53.model.HealthCheckConfig withChildHealthChecks(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #27                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #30                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #31                 // Method setChildHealthChecks:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #26                 // Field childHealthChecks:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #32                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withChildHealthChecks(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method setChildHealthChecks:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setEnableSNI(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field enableSNI:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEnableSNI();
    Code:
       0: aload_0
       1: getfield      #33                 // Field enableSNI:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withEnableSNI(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setEnableSNI:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEnableSNI();
    Code:
       0: aload_0
       1: getfield      #33                 // Field enableSNI:Ljava/lang/Boolean;
       4: areturn

  public java.util.List<java.lang.String> getRegions();
    Code:
       0: aload_0
       1: getfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #27                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #28                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setRegions(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #27                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #29                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.route53.model.HealthCheckConfig withRegions(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #27                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #30                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #36                 // Method setRegions:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #35                 // Field regions:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #32                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withRegions(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setRegions:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withRegions(com.amazonaws.services.route53.model.HealthCheckRegion...);
    Code:
       0: new           #27                 // class com/amazonaws/internal/SdkInternalList
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #30                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
       9: astore_2
      10: aload_1
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     48
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_2
      33: aload         6
      35: invokevirtual #37                 // Method com/amazonaws/services/route53/model/HealthCheckRegion.toString:()Ljava/lang/String;
      38: invokevirtual #32                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      41: pop
      42: iinc          5, 1
      45: goto          19
      48: aload_0
      49: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
      52: ifnonnull     63
      55: aload_0
      56: aload_2
      57: invokevirtual #36                 // Method setRegions:(Ljava/util/Collection;)V
      60: goto          74
      63: aload_0
      64: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
      67: aload_2
      68: invokeinterface #39,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      73: pop
      74: aload_0
      75: areturn

  public void setAlarmIdentifier(com.amazonaws.services.route53.model.AlarmIdentifier);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field alarmIdentifier:Lcom/amazonaws/services/route53/model/AlarmIdentifier;
       5: return

  public com.amazonaws.services.route53.model.AlarmIdentifier getAlarmIdentifier();
    Code:
       0: aload_0
       1: getfield      #40                 // Field alarmIdentifier:Lcom/amazonaws/services/route53/model/AlarmIdentifier;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withAlarmIdentifier(com.amazonaws.services.route53.model.AlarmIdentifier);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method setAlarmIdentifier:(Lcom/amazonaws/services/route53/model/AlarmIdentifier;)V
       5: aload_0
       6: areturn

  public void setInsufficientDataHealthStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field insufficientDataHealthStatus:Ljava/lang/String;
       5: return

  public java.lang.String getInsufficientDataHealthStatus();
    Code:
       0: aload_0
       1: getfield      #42                 // Field insufficientDataHealthStatus:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.route53.model.HealthCheckConfig withInsufficientDataHealthStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method setInsufficientDataHealthStatus:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInsufficientDataHealthStatus(com.amazonaws.services.route53.model.InsufficientDataHealthStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method com/amazonaws/services/route53/model/InsufficientDataHealthStatus.toString:()Ljava/lang/String;
       5: putfield      #42                 // Field insufficientDataHealthStatus:Ljava/lang/String;
       8: return

  public com.amazonaws.services.route53.model.HealthCheckConfig withInsufficientDataHealthStatus(com.amazonaws.services.route53.model.InsufficientDataHealthStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setInsufficientDataHealthStatus:(Lcom/amazonaws/services/route53/model/InsufficientDataHealthStatus;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #48                 // String {
      11: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #46                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #51                 // String IPAddress:
      32: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      39: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #52                 // String ,
      44: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      58: ifnull        93
      61: aload_1
      62: new           #46                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #55                 // String Port:
      71: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      78: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #52                 // String ,
      83: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #57                 // Method getType:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #46                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #58                 // String Type:
     110: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     117: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #52                 // String ,
     122: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #46                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #60                 // String ResourcePath:
     149: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     156: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #52                 // String ,
     161: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #46                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #62                 // String FullyQualifiedDomainName:
     188: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     195: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #52                 // String ,
     200: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #46                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #64                 // String SearchString:
     227: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     234: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #52                 // String ,
     239: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     253: ifnull        288
     256: aload_1
     257: new           #46                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #66                 // String RequestInterval:
     266: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     273: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #52                 // String ,
     278: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     292: ifnull        327
     295: aload_1
     296: new           #46                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #68                 // String FailureThreshold:
     305: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     312: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #52                 // String ,
     317: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     331: ifnull        366
     334: aload_1
     335: new           #46                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #70                 // String MeasureLatency:
     344: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     351: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc           #52                 // String ,
     356: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     370: ifnull        405
     373: aload_1
     374: new           #46                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #72                 // String Inverted:
     383: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     390: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     393: ldc           #52                 // String ,
     395: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     409: ifnull        444
     412: aload_1
     413: new           #46                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #74                 // String HealthThreshold:
     422: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     429: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     432: ldc           #52                 // String ,
     434: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     448: ifnull        483
     451: aload_1
     452: new           #46                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #76                 // String ChildHealthChecks:
     461: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     468: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     471: ldc           #52                 // String ,
     473: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     487: ifnull        522
     490: aload_1
     491: new           #46                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #78                 // String EnableSNI:
     500: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     507: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     510: ldc           #52                 // String ,
     512: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     526: ifnull        561
     529: aload_1
     530: new           #46                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #79                 // String Regions:
     539: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     546: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     549: ldc           #52                 // String ,
     551: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     565: ifnull        600
     568: aload_1
     569: new           #46                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #81                 // String AlarmIdentifier:
     578: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     585: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     588: ldc           #52                 // String ,
     590: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     604: ifnull        634
     607: aload_1
     608: new           #46                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #83                 // String InsufficientDataHealthStatus:
     617: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     624: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     627: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     630: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     633: pop
     634: aload_1
     635: ldc           #84                 // String }
     637: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     640: pop
     641: aload_1
     642: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     645: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #85                 // class com/amazonaws/services/route53/model/HealthCheckConfig
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #85                 // class com/amazonaws/services/route53/model/HealthCheckConfig
      26: astore_2
      27: aload_2
      28: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      72: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
     121: aload_0
     122: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
     125: invokevirtual #87                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #57                 // Method getType:()Ljava/lang/String;
     178: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
     231: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     284: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     333: aload_0
     334: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     337: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     379: ifnull        398
     382: aload_2
     383: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     386: aload_0
     387: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     390: invokevirtual #87                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_2
     399: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     402: ifnonnull     409
     405: iconst_1
     406: goto          410
     409: iconst_0
     410: aload_0
     411: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     414: ifnonnull     421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: ixor
     423: ifeq          428
     426: iconst_0
     427: ireturn
     428: aload_2
     429: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     432: ifnull        451
     435: aload_2
     436: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     439: aload_0
     440: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     443: invokevirtual #87                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     446: ifne          451
     449: iconst_0
     450: ireturn
     451: aload_2
     452: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     455: ifnonnull     462
     458: iconst_1
     459: goto          463
     462: iconst_0
     463: aload_0
     464: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     467: ifnonnull     474
     470: iconst_1
     471: goto          475
     474: iconst_0
     475: ixor
     476: ifeq          481
     479: iconst_0
     480: ireturn
     481: aload_2
     482: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     485: ifnull        504
     488: aload_2
     489: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     492: aload_0
     493: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     496: invokevirtual #88                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     499: ifne          504
     502: iconst_0
     503: ireturn
     504: aload_2
     505: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     508: ifnonnull     515
     511: iconst_1
     512: goto          516
     515: iconst_0
     516: aload_0
     517: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     520: ifnonnull     527
     523: iconst_1
     524: goto          528
     527: iconst_0
     528: ixor
     529: ifeq          534
     532: iconst_0
     533: ireturn
     534: aload_2
     535: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     538: ifnull        557
     541: aload_2
     542: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     545: aload_0
     546: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     549: invokevirtual #88                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     552: ifne          557
     555: iconst_0
     556: ireturn
     557: aload_2
     558: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     561: ifnonnull     568
     564: iconst_1
     565: goto          569
     568: iconst_0
     569: aload_0
     570: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     573: ifnonnull     580
     576: iconst_1
     577: goto          581
     580: iconst_0
     581: ixor
     582: ifeq          587
     585: iconst_0
     586: ireturn
     587: aload_2
     588: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     591: ifnull        610
     594: aload_2
     595: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     598: aload_0
     599: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     602: invokevirtual #87                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     605: ifne          610
     608: iconst_0
     609: ireturn
     610: aload_2
     611: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     614: ifnonnull     621
     617: iconst_1
     618: goto          622
     621: iconst_0
     622: aload_0
     623: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     626: ifnonnull     633
     629: iconst_1
     630: goto          634
     633: iconst_0
     634: ixor
     635: ifeq          640
     638: iconst_0
     639: ireturn
     640: aload_2
     641: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     644: ifnull        665
     647: aload_2
     648: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     651: aload_0
     652: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     655: invokeinterface #89,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     706: aload_0
     707: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     710: invokevirtual #88                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     752: ifnull        773
     755: aload_2
     756: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     759: aload_0
     760: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     763: invokeinterface #89,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     768: ifne          773
     771: iconst_0
     772: ireturn
     773: aload_2
     774: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     777: ifnonnull     784
     780: iconst_1
     781: goto          785
     784: iconst_0
     785: aload_0
     786: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     789: ifnonnull     796
     792: iconst_1
     793: goto          797
     796: iconst_0
     797: ixor
     798: ifeq          803
     801: iconst_0
     802: ireturn
     803: aload_2
     804: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     807: ifnull        826
     810: aload_2
     811: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     814: aload_0
     815: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     818: invokevirtual #90                 // Method com/amazonaws/services/route53/model/AlarmIdentifier.equals:(Ljava/lang/Object;)Z
     821: ifne          826
     824: iconst_0
     825: ireturn
     826: aload_2
     827: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     830: ifnonnull     837
     833: iconst_1
     834: goto          838
     837: iconst_0
     838: aload_0
     839: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     842: ifnonnull     849
     845: iconst_1
     846: goto          850
     849: iconst_0
     850: ixor
     851: ifeq          856
     854: iconst_0
     855: ireturn
     856: aload_2
     857: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     860: ifnull        879
     863: aload_2
     864: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     867: aload_0
     868: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     871: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     874: ifne          879
     877: iconst_0
     878: ireturn
     879: iconst_1
     880: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #50                 // Method getIPAddress:()Ljava/lang/String;
      24: invokevirtual #91                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #54                 // Method getPort:()Ljava/lang/Integer;
      48: invokevirtual #92                 // Method java/lang/Integer.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #57                 // Method getType:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #57                 // Method getType:()Ljava/lang/String;
      72: invokevirtual #91                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #59                 // Method getResourcePath:()Ljava/lang/String;
      96: invokevirtual #91                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #61                 // Method getFullyQualifiedDomainName:()Ljava/lang/String;
     120: invokevirtual #91                 // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #63                 // Method getSearchString:()Ljava/lang/String;
     144: invokevirtual #91                 // Method java/lang/String.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     157: ifnonnull     164
     160: iconst_0
     161: goto          171
     164: aload_0
     165: invokevirtual #65                 // Method getRequestInterval:()Ljava/lang/Integer;
     168: invokevirtual #92                 // Method java/lang/Integer.hashCode:()I
     171: iadd
     172: istore_2
     173: bipush        31
     175: iload_2
     176: imul
     177: aload_0
     178: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     181: ifnonnull     188
     184: iconst_0
     185: goto          195
     188: aload_0
     189: invokevirtual #67                 // Method getFailureThreshold:()Ljava/lang/Integer;
     192: invokevirtual #92                 // Method java/lang/Integer.hashCode:()I
     195: iadd
     196: istore_2
     197: bipush        31
     199: iload_2
     200: imul
     201: aload_0
     202: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     205: ifnonnull     212
     208: iconst_0
     209: goto          219
     212: aload_0
     213: invokevirtual #69                 // Method getMeasureLatency:()Ljava/lang/Boolean;
     216: invokevirtual #93                 // Method java/lang/Boolean.hashCode:()I
     219: iadd
     220: istore_2
     221: bipush        31
     223: iload_2
     224: imul
     225: aload_0
     226: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     229: ifnonnull     236
     232: iconst_0
     233: goto          243
     236: aload_0
     237: invokevirtual #71                 // Method getInverted:()Ljava/lang/Boolean;
     240: invokevirtual #93                 // Method java/lang/Boolean.hashCode:()I
     243: iadd
     244: istore_2
     245: bipush        31
     247: iload_2
     248: imul
     249: aload_0
     250: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     253: ifnonnull     260
     256: iconst_0
     257: goto          267
     260: aload_0
     261: invokevirtual #73                 // Method getHealthThreshold:()Ljava/lang/Integer;
     264: invokevirtual #92                 // Method java/lang/Integer.hashCode:()I
     267: iadd
     268: istore_2
     269: bipush        31
     271: iload_2
     272: imul
     273: aload_0
     274: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     277: ifnonnull     284
     280: iconst_0
     281: goto          293
     284: aload_0
     285: invokevirtual #75                 // Method getChildHealthChecks:()Ljava/util/List;
     288: invokeinterface #94,  1           // InterfaceMethod java/util/List.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #77                 // Method getEnableSNI:()Ljava/lang/Boolean;
     314: invokevirtual #93                 // Method java/lang/Boolean.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     327: ifnonnull     334
     330: iconst_0
     331: goto          343
     334: aload_0
     335: invokevirtual #38                 // Method getRegions:()Ljava/util/List;
     338: invokeinterface #94,  1           // InterfaceMethod java/util/List.hashCode:()I
     343: iadd
     344: istore_2
     345: bipush        31
     347: iload_2
     348: imul
     349: aload_0
     350: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     353: ifnonnull     360
     356: iconst_0
     357: goto          367
     360: aload_0
     361: invokevirtual #80                 // Method getAlarmIdentifier:()Lcom/amazonaws/services/route53/model/AlarmIdentifier;
     364: invokevirtual #95                 // Method com/amazonaws/services/route53/model/AlarmIdentifier.hashCode:()I
     367: iadd
     368: istore_2
     369: bipush        31
     371: iload_2
     372: imul
     373: aload_0
     374: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     377: ifnonnull     384
     380: iconst_0
     381: goto          391
     384: aload_0
     385: invokevirtual #82                 // Method getInsufficientDataHealthStatus:()Ljava/lang/String;
     388: invokevirtual #91                 // Method java/lang/String.hashCode:()I
     391: iadd
     392: istore_2
     393: iload_2
     394: ireturn

  public com.amazonaws.services.route53.model.HealthCheckConfig clone();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #85                 // class com/amazonaws/services/route53/model/HealthCheckConfig
       7: areturn
       8: astore_1
       9: new           #98                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #99                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #101                // Method clone:()Lcom/amazonaws/services/route53/model/HealthCheckConfig;
       4: areturn
}
