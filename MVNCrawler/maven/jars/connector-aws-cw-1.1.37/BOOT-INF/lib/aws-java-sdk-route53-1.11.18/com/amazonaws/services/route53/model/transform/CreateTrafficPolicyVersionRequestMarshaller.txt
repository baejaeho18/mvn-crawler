Compiled from "CreateTrafficPolicyVersionRequestMarshaller.java"
public class com.amazonaws.services.route53.model.transform.CreateTrafficPolicyVersionRequestMarshaller implements com.amazonaws.transform.Marshaller<com.amazonaws.Request<com.amazonaws.services.route53.model.CreateTrafficPolicyVersionRequest>, com.amazonaws.services.route53.model.CreateTrafficPolicyVersionRequest> {
  public com.amazonaws.services.route53.model.transform.CreateTrafficPolicyVersionRequestMarshaller();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.amazonaws.Request<com.amazonaws.services.route53.model.CreateTrafficPolicyVersionRequest> marshall(com.amazonaws.services.route53.model.CreateTrafficPolicyVersionRequest);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class com/amazonaws/AmazonClientException
       7: dup
       8: ldc           #3                  // String Invalid argument passed to marshall(...)
      10: invokespecial #4                  // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #5                  // class com/amazonaws/DefaultRequest
      17: dup
      18: aload_1
      19: ldc           #6                  // String AmazonRoute53
      21: invokespecial #7                  // Method com/amazonaws/DefaultRequest."<init>":(Lcom/amazonaws/AmazonWebServiceRequest;Ljava/lang/String;)V
      24: astore_2
      25: aload_2
      26: getstatic     #8                  // Field com/amazonaws/http/HttpMethodName.POST:Lcom/amazonaws/http/HttpMethodName;
      29: invokeinterface #9,  2            // InterfaceMethod com/amazonaws/Request.setHttpMethod:(Lcom/amazonaws/http/HttpMethodName;)V
      34: ldc           #10                 // String /2013-04-01/trafficpolicy/{Id}
      36: astore_3
      37: aload_3
      38: ldc           #11                 // String {Id}
      40: aload_1
      41: invokevirtual #12                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getId:()Ljava/lang/String;
      44: ifnull        61
      47: aload_1
      48: invokevirtual #12                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getId:()Ljava/lang/String;
      51: invokestatic  #13                 // Method com/amazonaws/util/StringUtils.fromString:(Ljava/lang/String;)Ljava/lang/String;
      54: iconst_0
      55: invokestatic  #14                 // Method com/amazonaws/util/SdkHttpUtils.urlEncode:(Ljava/lang/String;Z)Ljava/lang/String;
      58: goto          63
      61: ldc           #15                 // String
      63: invokevirtual #16                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      66: astore_3
      67: aload_2
      68: aload_3
      69: invokeinterface #17,  2           // InterfaceMethod com/amazonaws/Request.setResourcePath:(Ljava/lang/String;)V
      74: new           #18                 // class java/io/StringWriter
      77: dup
      78: invokespecial #19                 // Method java/io/StringWriter."<init>":()V
      81: astore        4
      83: new           #20                 // class com/amazonaws/util/XMLWriter
      86: dup
      87: aload         4
      89: ldc           #21                 // String https://route53.amazonaws.com/doc/2013-04-01/
      91: invokespecial #22                 // Method com/amazonaws/util/XMLWriter."<init>":(Ljava/io/Writer;Ljava/lang/String;)V
      94: astore        5
      96: aload         5
      98: ldc           #23                 // String CreateTrafficPolicyVersionRequest
     100: invokevirtual #24                 // Method com/amazonaws/util/XMLWriter.startElement:(Ljava/lang/String;)Lcom/amazonaws/util/XMLWriter;
     103: pop
     104: aload_1
     105: ifnull        158
     108: aload_1
     109: invokevirtual #25                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getDocument:()Ljava/lang/String;
     112: ifnull        133
     115: aload         5
     117: ldc           #26                 // String Document
     119: invokevirtual #24                 // Method com/amazonaws/util/XMLWriter.startElement:(Ljava/lang/String;)Lcom/amazonaws/util/XMLWriter;
     122: aload_1
     123: invokevirtual #25                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getDocument:()Ljava/lang/String;
     126: invokevirtual #27                 // Method com/amazonaws/util/XMLWriter.value:(Ljava/lang/String;)Lcom/amazonaws/util/XMLWriter;
     129: invokevirtual #28                 // Method com/amazonaws/util/XMLWriter.endElement:()Lcom/amazonaws/util/XMLWriter;
     132: pop
     133: aload_1
     134: invokevirtual #29                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getComment:()Ljava/lang/String;
     137: ifnull        158
     140: aload         5
     142: ldc           #30                 // String Comment
     144: invokevirtual #24                 // Method com/amazonaws/util/XMLWriter.startElement:(Ljava/lang/String;)Lcom/amazonaws/util/XMLWriter;
     147: aload_1
     148: invokevirtual #29                 // Method com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest.getComment:()Ljava/lang/String;
     151: invokevirtual #27                 // Method com/amazonaws/util/XMLWriter.value:(Ljava/lang/String;)Lcom/amazonaws/util/XMLWriter;
     154: invokevirtual #28                 // Method com/amazonaws/util/XMLWriter.endElement:()Lcom/amazonaws/util/XMLWriter;
     157: pop
     158: aload         5
     160: invokevirtual #28                 // Method com/amazonaws/util/XMLWriter.endElement:()Lcom/amazonaws/util/XMLWriter;
     163: pop
     164: aload_2
     165: new           #31                 // class com/amazonaws/util/StringInputStream
     168: dup
     169: aload         4
     171: invokevirtual #32                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;
     174: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     177: invokespecial #34                 // Method com/amazonaws/util/StringInputStream."<init>":(Ljava/lang/String;)V
     180: invokeinterface #35,  2           // InterfaceMethod com/amazonaws/Request.setContent:(Ljava/io/InputStream;)V
     185: aload_2
     186: ldc           #36                 // String Content-Length
     188: aload         4
     190: invokevirtual #32                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;
     193: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     196: getstatic     #37                 // Field com/amazonaws/util/StringUtils.UTF8:Ljava/nio/charset/Charset;
     199: invokevirtual #38                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     202: arraylength
     203: invokestatic  #39                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     206: invokeinterface #40,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     211: aload_2
     212: invokeinterface #41,  1           // InterfaceMethod com/amazonaws/Request.getHeaders:()Ljava/util/Map;
     217: ldc           #42                 // String Content-Type
     219: invokeinterface #43,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     224: ifne          237
     227: aload_2
     228: ldc           #42                 // String Content-Type
     230: ldc           #44                 // String application/xml
     232: invokeinterface #40,  3           // InterfaceMethod com/amazonaws/Request.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     237: goto          275
     240: astore        4
     242: new           #2                  // class com/amazonaws/AmazonClientException
     245: dup
     246: new           #46                 // class java/lang/StringBuilder
     249: dup
     250: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     253: ldc           #48                 // String Unable to marshall request to XML:
     255: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: aload         4
     260: invokevirtual #50                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     263: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     269: aload         4
     271: invokespecial #52                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     274: athrow
     275: aload_2
     276: areturn
    Exception table:
       from    to  target type
          74   237   240   Class java/lang/Throwable

  public java.lang.Object marshall(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class com/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest
       5: invokevirtual #54                 // Method marshall:(Lcom/amazonaws/services/route53/model/CreateTrafficPolicyVersionRequest;)Lcom/amazonaws/Request;
       8: areturn
}
