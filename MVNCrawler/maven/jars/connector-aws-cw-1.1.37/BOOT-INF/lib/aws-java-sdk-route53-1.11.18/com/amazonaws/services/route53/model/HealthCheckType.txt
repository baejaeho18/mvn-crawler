Compiled from "HealthCheckType.java"
public final class com.amazonaws.services.route53.model.HealthCheckType extends java.lang.Enum<com.amazonaws.services.route53.model.HealthCheckType> {
  public static final com.amazonaws.services.route53.model.HealthCheckType HTTP;

  public static final com.amazonaws.services.route53.model.HealthCheckType HTTPS;

  public static final com.amazonaws.services.route53.model.HealthCheckType HTTP_STR_MATCH;

  public static final com.amazonaws.services.route53.model.HealthCheckType HTTPS_STR_MATCH;

  public static final com.amazonaws.services.route53.model.HealthCheckType TCP;

  public static final com.amazonaws.services.route53.model.HealthCheckType CALCULATED;

  public static final com.amazonaws.services.route53.model.HealthCheckType CLOUDWATCH_METRIC;

  private java.lang.String value;

  private static final com.amazonaws.services.route53.model.HealthCheckType[] $VALUES;

  public static com.amazonaws.services.route53.model.HealthCheckType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lcom/amazonaws/services/route53/model/HealthCheckType;
       3: invokevirtual #2                  // Method "[Lcom/amazonaws/services/route53/model/HealthCheckType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lcom/amazonaws/services/route53/model/HealthCheckType;"
       9: areturn

  public static com.amazonaws.services.route53.model.HealthCheckType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class com/amazonaws/services/route53/model/HealthCheckType
       9: areturn

  private com.amazonaws.services.route53.model.HealthCheckType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field value:Ljava/lang/String;
      11: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field value:Ljava/lang/String;
       4: areturn

  public static com.amazonaws.services.route53.model.HealthCheckType fromValue(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        13
       4: ldc           #8                  // String
       6: aload_0
       7: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          23
      13: new           #10                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #11                 // String Value cannot be null or empty!
      19: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: invokestatic  #13                 // Method values:()[Lcom/amazonaws/services/route53/model/HealthCheckType;
      26: astore_1
      27: aload_1
      28: arraylength
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: iload_2
      34: if_icmpge     63
      37: aload_1
      38: iload_3
      39: aaload
      40: astore        4
      42: aload         4
      44: invokevirtual #14                 // Method toString:()Ljava/lang/String;
      47: aload_0
      48: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          57
      54: aload         4
      56: areturn
      57: iinc          3, 1
      60: goto          32
      63: new           #10                 // class java/lang/IllegalArgumentException
      66: dup
      67: new           #15                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #17                 // String Cannot create enum from
      76: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #19                 // String  value!
      85: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow

  static {};
    Code:
       0: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
       3: dup
       4: ldc           #21                 // String HTTP
       6: iconst_0
       7: ldc           #21                 // String HTTP
       9: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #23                 // Field HTTP:Lcom/amazonaws/services/route53/model/HealthCheckType;
      15: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      18: dup
      19: ldc           #24                 // String HTTPS
      21: iconst_1
      22: ldc           #24                 // String HTTPS
      24: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #25                 // Field HTTPS:Lcom/amazonaws/services/route53/model/HealthCheckType;
      30: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      33: dup
      34: ldc           #26                 // String HTTP_STR_MATCH
      36: iconst_2
      37: ldc           #26                 // String HTTP_STR_MATCH
      39: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #27                 // Field HTTP_STR_MATCH:Lcom/amazonaws/services/route53/model/HealthCheckType;
      45: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      48: dup
      49: ldc           #28                 // String HTTPS_STR_MATCH
      51: iconst_3
      52: ldc           #28                 // String HTTPS_STR_MATCH
      54: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #29                 // Field HTTPS_STR_MATCH:Lcom/amazonaws/services/route53/model/HealthCheckType;
      60: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      63: dup
      64: ldc           #30                 // String TCP
      66: iconst_4
      67: ldc           #30                 // String TCP
      69: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #31                 // Field TCP:Lcom/amazonaws/services/route53/model/HealthCheckType;
      75: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      78: dup
      79: ldc           #32                 // String CALCULATED
      81: iconst_5
      82: ldc           #32                 // String CALCULATED
      84: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      87: putstatic     #33                 // Field CALCULATED:Lcom/amazonaws/services/route53/model/HealthCheckType;
      90: new           #4                  // class com/amazonaws/services/route53/model/HealthCheckType
      93: dup
      94: ldc           #34                 // String CLOUDWATCH_METRIC
      96: bipush        6
      98: ldc           #34                 // String CLOUDWATCH_METRIC
     100: invokespecial #22                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     103: putstatic     #35                 // Field CLOUDWATCH_METRIC:Lcom/amazonaws/services/route53/model/HealthCheckType;
     106: bipush        7
     108: anewarray     #4                  // class com/amazonaws/services/route53/model/HealthCheckType
     111: dup
     112: iconst_0
     113: getstatic     #23                 // Field HTTP:Lcom/amazonaws/services/route53/model/HealthCheckType;
     116: aastore
     117: dup
     118: iconst_1
     119: getstatic     #25                 // Field HTTPS:Lcom/amazonaws/services/route53/model/HealthCheckType;
     122: aastore
     123: dup
     124: iconst_2
     125: getstatic     #27                 // Field HTTP_STR_MATCH:Lcom/amazonaws/services/route53/model/HealthCheckType;
     128: aastore
     129: dup
     130: iconst_3
     131: getstatic     #29                 // Field HTTPS_STR_MATCH:Lcom/amazonaws/services/route53/model/HealthCheckType;
     134: aastore
     135: dup
     136: iconst_4
     137: getstatic     #31                 // Field TCP:Lcom/amazonaws/services/route53/model/HealthCheckType;
     140: aastore
     141: dup
     142: iconst_5
     143: getstatic     #33                 // Field CALCULATED:Lcom/amazonaws/services/route53/model/HealthCheckType;
     146: aastore
     147: dup
     148: bipush        6
     150: getstatic     #35                 // Field CLOUDWATCH_METRIC:Lcom/amazonaws/services/route53/model/HealthCheckType;
     153: aastore
     154: putstatic     #1                  // Field $VALUES:[Lcom/amazonaws/services/route53/model/HealthCheckType;
     157: return
}
