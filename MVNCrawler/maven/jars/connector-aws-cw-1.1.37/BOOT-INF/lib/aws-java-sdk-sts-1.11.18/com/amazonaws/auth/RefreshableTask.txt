Compiled from "RefreshableTask.java"
class com.amazonaws.auth.RefreshableTask<T> {
  private static final long BLOCKING_REFRESH_MAX_WAIT_IN_SECONDS;

  private final java.util.concurrent.locks.Lock blockingRefreshLock;

  private final java.util.concurrent.atomic.AtomicReference<T> refreshableValueHolder;

  private final java.util.concurrent.ExecutorService executor;

  private final java.util.concurrent.atomic.AtomicBoolean asyncRefreshing;

  private final java.util.concurrent.Callable<T> refreshCallable;

  private final com.amazonaws.internal.SdkPredicate<T> shouldDoBlockingRefresh;

  private final com.amazonaws.internal.SdkPredicate<T> shouldDoAsyncRefresh;

  private com.amazonaws.auth.RefreshableTask(java.util.concurrent.Callable<T>, com.amazonaws.internal.SdkPredicate<T>, com.amazonaws.internal.SdkPredicate<T>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #7                  // Field blockingRefreshLock:Ljava/util/concurrent/locks/Lock;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: new           #11                 // class com/amazonaws/auth/RefreshableTask$1
      30: dup
      31: aload_0
      32: invokespecial #12                 // Method com/amazonaws/auth/RefreshableTask$1."<init>":(Lcom/amazonaws/auth/RefreshableTask;)V
      35: invokestatic  #13                 // Method java/util/concurrent/Executors.newSingleThreadExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      38: putfield      #14                 // Field executor:Ljava/util/concurrent/ExecutorService;
      41: aload_0
      42: new           #15                 // class java/util/concurrent/atomic/AtomicBoolean
      45: dup
      46: iconst_0
      47: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      50: putfield      #1                  // Field asyncRefreshing:Ljava/util/concurrent/atomic/AtomicBoolean;
      53: aload_0
      54: aload_1
      55: ldc           #17                 // String refreshCallable
      57: invokestatic  #18                 // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      60: checkcast     #19                 // class java/util/concurrent/Callable
      63: putfield      #20                 // Field refreshCallable:Ljava/util/concurrent/Callable;
      66: aload_0
      67: aload_2
      68: ldc           #21                 // String shouldDoBlockingRefresh
      70: invokestatic  #18                 // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      73: checkcast     #22                 // class com/amazonaws/internal/SdkPredicate
      76: putfield      #23                 // Field shouldDoBlockingRefresh:Lcom/amazonaws/internal/SdkPredicate;
      79: aload_0
      80: aload_3
      81: ldc           #24                 // String shouldDoAsyncRefresh
      83: invokestatic  #18                 // Method com/amazonaws/util/ValidationUtils.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      86: checkcast     #22                 // class com/amazonaws/internal/SdkPredicate
      89: putfield      #25                 // Field shouldDoAsyncRefresh:Lcom/amazonaws/internal/SdkPredicate;
      92: return

  public T getValue() throws com.amazonaws.AmazonClientException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method shouldDoBlockingRefresh:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #27                 // Method blockingRefresh:()V
      11: goto          25
      14: aload_0
      15: invokespecial #28                 // Method shouldDoAsyncRefresh:()Z
      18: ifeq          25
      21: aload_0
      22: invokespecial #29                 // Method asyncRefresh:()V
      25: aload_0
      26: invokespecial #30                 // Method getRefreshedValue:()Ljava/lang/Object;
      29: areturn

  public T forceGetValue();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method refreshValue:()V
       4: aload_0
       5: invokespecial #30                 // Method getRefreshedValue:()Ljava/lang/Object;
       8: areturn

  private T getRefreshedValue() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        14
      12: aload_1
      13: areturn
      14: new           #32                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #33                 // String Refreshed value should never be null.
      20: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow

  private boolean shouldDoBlockingRefresh();
    Code:
       0: aload_0
       1: getfield      #23                 // Field shouldDoBlockingRefresh:Lcom/amazonaws/internal/SdkPredicate;
       4: aload_0
       5: getfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: invokevirtual #35                 // Method com/amazonaws/internal/SdkPredicate.test:(Ljava/lang/Object;)Z
      14: ireturn

  private boolean shouldDoAsyncRefresh();
    Code:
       0: aload_0
       1: getfield      #25                 // Field shouldDoAsyncRefresh:Lcom/amazonaws/internal/SdkPredicate;
       4: aload_0
       5: getfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: invokevirtual #35                 // Method com/amazonaws/internal/SdkPredicate.test:(Ljava/lang/Object;)Z
      14: ireturn

  private void blockingRefresh();
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockingRefreshLock:Ljava/util/concurrent/locks/Lock;
       4: ldc2_w        #37                 // long 5l
       7: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokeinterface #40,  4           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      15: ifeq          61
      18: aload_0
      19: invokespecial #26                 // Method shouldDoBlockingRefresh:()Z
      22: ifne          35
      25: aload_0
      26: getfield      #7                  // Field blockingRefreshLock:Ljava/util/concurrent/locks/Lock;
      29: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      34: return
      35: aload_0
      36: invokespecial #2                  // Method refreshValue:()V
      39: aload_0
      40: getfield      #7                  // Field blockingRefreshLock:Ljava/util/concurrent/locks/Lock;
      43: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      48: return
      49: astore_1
      50: aload_0
      51: getfield      #7                  // Field blockingRefreshLock:Ljava/util/concurrent/locks/Lock;
      54: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: aload_1
      60: athrow
      61: goto          72
      64: astore_1
      65: aload_0
      66: ldc           #43                 // String Interrupted waiting to refresh the value.
      68: aload_1
      69: invokespecial #44                 // Method handleInterruptedException:(Ljava/lang/String;Ljava/lang/InterruptedException;)V
      72: aload_0
      73: invokespecial #2                  // Method refreshValue:()V
      76: return
    Exception table:
       from    to  target type
          18    25    49   any
          35    39    49   any
           0    34    64   Class java/lang/InterruptedException
          35    48    64   Class java/lang/InterruptedException
          49    61    64   Class java/lang/InterruptedException

  private void asyncRefresh();
    Code:
       0: aload_0
       1: getfield      #1                  // Field asyncRefreshing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          44
      12: aload_0
      13: getfield      #14                 // Field executor:Ljava/util/concurrent/ExecutorService;
      16: new           #46                 // class com/amazonaws/auth/RefreshableTask$2
      19: dup
      20: aload_0
      21: invokespecial #47                 // Method com/amazonaws/auth/RefreshableTask$2."<init>":(Lcom/amazonaws/auth/RefreshableTask;)V
      24: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      29: pop
      30: goto          44
      33: astore_1
      34: aload_0
      35: getfield      #1                  // Field asyncRefreshing:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: iconst_0
      39: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      42: aload_1
      43: athrow
      44: return
    Exception table:
       from    to  target type
          12    30    33   Class java/lang/RuntimeException

  private void refreshValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #10                 // Field refreshableValueHolder:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: aload_0
      12: getfield      #20                 // Field refreshCallable:Ljava/util/concurrent/Callable;
      15: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      20: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: pop
      24: goto          43
      27: astore_1
      28: aload_1
      29: athrow
      30: astore_1
      31: aload_1
      32: athrow
      33: astore_1
      34: new           #54                 // class com/amazonaws/AmazonClientException
      37: dup
      38: aload_1
      39: invokespecial #56                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/Throwable;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0    24    27   Class com/amazonaws/AmazonServiceException
           0    24    30   Class com/amazonaws/AmazonClientException
           0    24    33   Class java/lang/Exception

  private void handleInterruptedException(java.lang.String, java.lang.InterruptedException);
    Code:
       0: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #58                 // Method java/lang/Thread.interrupt:()V
       6: new           #54                 // class com/amazonaws/AmazonClientException
       9: dup
      10: aload_1
      11: aload_2
      12: invokespecial #59                 // Method com/amazonaws/AmazonClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      15: athrow

  com.amazonaws.auth.RefreshableTask(java.util.concurrent.Callable, com.amazonaws.internal.SdkPredicate, com.amazonaws.internal.SdkPredicate, com.amazonaws.auth.RefreshableTask$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/Callable;Lcom/amazonaws/internal/SdkPredicate;Lcom/amazonaws/internal/SdkPredicate;)V
       7: return

  static void access$100(com.amazonaws.auth.RefreshableTask);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method refreshValue:()V
       4: return

  static java.util.concurrent.atomic.AtomicBoolean access$200(com.amazonaws.auth.RefreshableTask);
    Code:
       0: aload_0
       1: getfield      #1                  // Field asyncRefreshing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn
}
