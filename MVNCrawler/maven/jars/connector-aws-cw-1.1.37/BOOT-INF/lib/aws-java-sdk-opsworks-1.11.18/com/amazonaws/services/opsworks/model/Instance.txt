Compiled from "Instance.java"
public class com.amazonaws.services.opsworks.model.Instance implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String agentVersion;

  private java.lang.String amiId;

  private java.lang.String architecture;

  private java.lang.String autoScalingType;

  private java.lang.String availabilityZone;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.opsworks.model.BlockDeviceMapping> blockDeviceMappings;

  private java.lang.String createdAt;

  private java.lang.Boolean ebsOptimized;

  private java.lang.String ec2InstanceId;

  private java.lang.String ecsClusterArn;

  private java.lang.String ecsContainerInstanceArn;

  private java.lang.String elasticIp;

  private java.lang.String hostname;

  private java.lang.String infrastructureClass;

  private java.lang.Boolean installUpdatesOnBoot;

  private java.lang.String instanceId;

  private java.lang.String instanceProfileArn;

  private java.lang.String instanceType;

  private java.lang.String lastServiceErrorId;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> layerIds;

  private java.lang.String os;

  private java.lang.String platform;

  private java.lang.String privateDns;

  private java.lang.String privateIp;

  private java.lang.String publicDns;

  private java.lang.String publicIp;

  private java.lang.String registeredBy;

  private java.lang.String reportedAgentVersion;

  private com.amazonaws.services.opsworks.model.ReportedOs reportedOs;

  private java.lang.String rootDeviceType;

  private java.lang.String rootDeviceVolumeId;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> securityGroupIds;

  private java.lang.String sshHostDsaKeyFingerprint;

  private java.lang.String sshHostRsaKeyFingerprint;

  private java.lang.String sshKeyName;

  private java.lang.String stackId;

  private java.lang.String status;

  private java.lang.String subnetId;

  private java.lang.String tenancy;

  private java.lang.String virtualizationType;

  public com.amazonaws.services.opsworks.model.Instance();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setAgentVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field agentVersion:Ljava/lang/String;
       5: return

  public java.lang.String getAgentVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field agentVersion:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withAgentVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setAgentVersion:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAmiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field amiId:Ljava/lang/String;
       5: return

  public java.lang.String getAmiId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field amiId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withAmiId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setAmiId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field architecture:Ljava/lang/String;
       5: return

  public java.lang.String getArchitecture();
    Code:
       0: aload_0
       1: getfield      #6                  // Field architecture:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setArchitecture:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setArchitecture(com.amazonaws.services.opsworks.model.Architecture);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method com/amazonaws/services/opsworks/model/Architecture.toString:()Ljava/lang/String;
       5: putfield      #6                  // Field architecture:Ljava/lang/String;
       8: return

  public com.amazonaws.services.opsworks.model.Instance withArchitecture(com.amazonaws.services.opsworks.model.Architecture);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setArchitecture:(Lcom/amazonaws/services/opsworks/model/Architecture;)V
       5: aload_0
       6: areturn

  public void setAutoScalingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field autoScalingType:Ljava/lang/String;
       5: return

  public java.lang.String getAutoScalingType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field autoScalingType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withAutoScalingType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setAutoScalingType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setAutoScalingType(com.amazonaws.services.opsworks.model.AutoScalingType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method com/amazonaws/services/opsworks/model/AutoScalingType.toString:()Ljava/lang/String;
       5: putfield      #10                 // Field autoScalingType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.opsworks.model.Instance withAutoScalingType(com.amazonaws.services.opsworks.model.AutoScalingType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setAutoScalingType:(Lcom/amazonaws/services/opsworks/model/AutoScalingType;)V
       5: aload_0
       6: areturn

  public void setAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field availabilityZone:Ljava/lang/String;
       5: return

  public java.lang.String getAvailabilityZone();
    Code:
       0: aload_0
       1: getfield      #14                 // Field availabilityZone:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withAvailabilityZone(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setAvailabilityZone:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.opsworks.model.BlockDeviceMapping> getBlockDeviceMappings();
    Code:
       0: aload_0
       1: getfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #18                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setBlockDeviceMappings(java.util.Collection<com.amazonaws.services.opsworks.model.BlockDeviceMapping>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #17                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #19                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.opsworks.model.Instance withBlockDeviceMappings(com.amazonaws.services.opsworks.model.BlockDeviceMapping...);
    Code:
       0: aload_0
       1: getfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #21                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #16                 // Field blockDeviceMappings:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #22                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.opsworks.model.Instance withBlockDeviceMappings(java.util.Collection<com.amazonaws.services.opsworks.model.BlockDeviceMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method setBlockDeviceMappings:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setCreatedAt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field createdAt:Ljava/lang/String;
       5: return

  public java.lang.String getCreatedAt();
    Code:
       0: aload_0
       1: getfield      #23                 // Field createdAt:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withCreatedAt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setCreatedAt:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field ebsOptimized:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withEbsOptimized(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setEbsOptimized:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isEbsOptimized();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ebsOptimized:Ljava/lang/Boolean;
       4: areturn

  public void setEc2InstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field ec2InstanceId:Ljava/lang/String;
       5: return

  public java.lang.String getEc2InstanceId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field ec2InstanceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withEc2InstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setEc2InstanceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEcsClusterArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field ecsClusterArn:Ljava/lang/String;
       5: return

  public java.lang.String getEcsClusterArn();
    Code:
       0: aload_0
       1: getfield      #29                 // Field ecsClusterArn:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withEcsClusterArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setEcsClusterArn:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEcsContainerInstanceArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field ecsContainerInstanceArn:Ljava/lang/String;
       5: return

  public java.lang.String getEcsContainerInstanceArn();
    Code:
       0: aload_0
       1: getfield      #31                 // Field ecsContainerInstanceArn:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withEcsContainerInstanceArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setEcsContainerInstanceArn:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setElasticIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field elasticIp:Ljava/lang/String;
       5: return

  public java.lang.String getElasticIp();
    Code:
       0: aload_0
       1: getfield      #33                 // Field elasticIp:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withElasticIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setElasticIp:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setHostname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field hostname:Ljava/lang/String;
       5: return

  public java.lang.String getHostname();
    Code:
       0: aload_0
       1: getfield      #35                 // Field hostname:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withHostname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setHostname:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInfrastructureClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field infrastructureClass:Ljava/lang/String;
       5: return

  public java.lang.String getInfrastructureClass();
    Code:
       0: aload_0
       1: getfield      #37                 // Field infrastructureClass:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withInfrastructureClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setInfrastructureClass:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstallUpdatesOnBoot(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field installUpdatesOnBoot:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getInstallUpdatesOnBoot();
    Code:
       0: aload_0
       1: getfield      #39                 // Field installUpdatesOnBoot:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withInstallUpdatesOnBoot(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method setInstallUpdatesOnBoot:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isInstallUpdatesOnBoot();
    Code:
       0: aload_0
       1: getfield      #39                 // Field installUpdatesOnBoot:Ljava/lang/Boolean;
       4: areturn

  public void setInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field instanceId:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceId();
    Code:
       0: aload_0
       1: getfield      #41                 // Field instanceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withInstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method setInstanceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceProfileArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field instanceProfileArn:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceProfileArn();
    Code:
       0: aload_0
       1: getfield      #43                 // Field instanceProfileArn:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withInstanceProfileArn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setInstanceProfileArn:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field instanceType:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceType();
    Code:
       0: aload_0
       1: getfield      #45                 // Field instanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setLastServiceErrorId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field lastServiceErrorId:Ljava/lang/String;
       5: return

  public java.lang.String getLastServiceErrorId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field lastServiceErrorId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withLastServiceErrorId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method setLastServiceErrorId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getLayerIds();
    Code:
       0: aload_0
       1: getfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #18                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setLayerIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #17                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #19                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.opsworks.model.Instance withLayerIds(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #50                 // Method setLayerIds:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #49                 // Field layerIds:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #22                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.opsworks.model.Instance withLayerIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setLayerIds:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setOs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field os:Ljava/lang/String;
       5: return

  public java.lang.String getOs();
    Code:
       0: aload_0
       1: getfield      #51                 // Field os:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withOs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method setOs:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field platform:Ljava/lang/String;
       5: return

  public java.lang.String getPlatform();
    Code:
       0: aload_0
       1: getfield      #53                 // Field platform:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setPlatform:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPrivateDns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field privateDns:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateDns();
    Code:
       0: aload_0
       1: getfield      #55                 // Field privateDns:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withPrivateDns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setPrivateDns:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPrivateIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field privateIp:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateIp();
    Code:
       0: aload_0
       1: getfield      #57                 // Field privateIp:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withPrivateIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method setPrivateIp:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicDns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field publicDns:Ljava/lang/String;
       5: return

  public java.lang.String getPublicDns();
    Code:
       0: aload_0
       1: getfield      #59                 // Field publicDns:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withPublicDns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setPublicDns:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field publicIp:Ljava/lang/String;
       5: return

  public java.lang.String getPublicIp();
    Code:
       0: aload_0
       1: getfield      #61                 // Field publicIp:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withPublicIp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setPublicIp:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRegisteredBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field registeredBy:Ljava/lang/String;
       5: return

  public java.lang.String getRegisteredBy();
    Code:
       0: aload_0
       1: getfield      #63                 // Field registeredBy:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withRegisteredBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setRegisteredBy:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReportedAgentVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field reportedAgentVersion:Ljava/lang/String;
       5: return

  public java.lang.String getReportedAgentVersion();
    Code:
       0: aload_0
       1: getfield      #65                 // Field reportedAgentVersion:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withReportedAgentVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method setReportedAgentVersion:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setReportedOs(com.amazonaws.services.opsworks.model.ReportedOs);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field reportedOs:Lcom/amazonaws/services/opsworks/model/ReportedOs;
       5: return

  public com.amazonaws.services.opsworks.model.ReportedOs getReportedOs();
    Code:
       0: aload_0
       1: getfield      #67                 // Field reportedOs:Lcom/amazonaws/services/opsworks/model/ReportedOs;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withReportedOs(com.amazonaws.services.opsworks.model.ReportedOs);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method setReportedOs:(Lcom/amazonaws/services/opsworks/model/ReportedOs;)V
       5: aload_0
       6: areturn

  public void setRootDeviceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field rootDeviceType:Ljava/lang/String;
       5: return

  public java.lang.String getRootDeviceType();
    Code:
       0: aload_0
       1: getfield      #69                 // Field rootDeviceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withRootDeviceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method setRootDeviceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setRootDeviceType(com.amazonaws.services.opsworks.model.RootDeviceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method com/amazonaws/services/opsworks/model/RootDeviceType.toString:()Ljava/lang/String;
       5: putfield      #69                 // Field rootDeviceType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.opsworks.model.Instance withRootDeviceType(com.amazonaws.services.opsworks.model.RootDeviceType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setRootDeviceType:(Lcom/amazonaws/services/opsworks/model/RootDeviceType;)V
       5: aload_0
       6: areturn

  public void setRootDeviceVolumeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field rootDeviceVolumeId:Ljava/lang/String;
       5: return

  public java.lang.String getRootDeviceVolumeId();
    Code:
       0: aload_0
       1: getfield      #73                 // Field rootDeviceVolumeId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withRootDeviceVolumeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method setRootDeviceVolumeId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getSecurityGroupIds();
    Code:
       0: aload_0
       1: getfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #18                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setSecurityGroupIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #17                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #19                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.opsworks.model.Instance withSecurityGroupIds(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #17                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #76                 // Method setSecurityGroupIds:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #75                 // Field securityGroupIds:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #22                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.opsworks.model.Instance withSecurityGroupIds(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method setSecurityGroupIds:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setSshHostDsaKeyFingerprint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field sshHostDsaKeyFingerprint:Ljava/lang/String;
       5: return

  public java.lang.String getSshHostDsaKeyFingerprint();
    Code:
       0: aload_0
       1: getfield      #77                 // Field sshHostDsaKeyFingerprint:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withSshHostDsaKeyFingerprint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #78                 // Method setSshHostDsaKeyFingerprint:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSshHostRsaKeyFingerprint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field sshHostRsaKeyFingerprint:Ljava/lang/String;
       5: return

  public java.lang.String getSshHostRsaKeyFingerprint();
    Code:
       0: aload_0
       1: getfield      #79                 // Field sshHostRsaKeyFingerprint:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withSshHostRsaKeyFingerprint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method setSshHostRsaKeyFingerprint:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSshKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field sshKeyName:Ljava/lang/String;
       5: return

  public java.lang.String getSshKeyName();
    Code:
       0: aload_0
       1: getfield      #81                 // Field sshKeyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withSshKeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method setSshKeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStackId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field stackId:Ljava/lang/String;
       5: return

  public java.lang.String getStackId();
    Code:
       0: aload_0
       1: getfield      #83                 // Field stackId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withStackId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #84                 // Method setStackId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field status:Ljava/lang/String;
       5: return

  public java.lang.String getStatus();
    Code:
       0: aload_0
       1: getfield      #85                 // Field status:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method setStatus:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field subnetId:Ljava/lang/String;
       5: return

  public java.lang.String getSubnetId();
    Code:
       0: aload_0
       1: getfield      #87                 // Field subnetId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withSubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setSubnetId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field tenancy:Ljava/lang/String;
       5: return

  public java.lang.String getTenancy();
    Code:
       0: aload_0
       1: getfield      #89                 // Field tenancy:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withTenancy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method setTenancy:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setVirtualizationType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field virtualizationType:Ljava/lang/String;
       5: return

  public java.lang.String getVirtualizationType();
    Code:
       0: aload_0
       1: getfield      #91                 // Field virtualizationType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.opsworks.model.Instance withVirtualizationType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method setVirtualizationType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setVirtualizationType(com.amazonaws.services.opsworks.model.VirtualizationType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method com/amazonaws/services/opsworks/model/VirtualizationType.toString:()Ljava/lang/String;
       5: putfield      #91                 // Field virtualizationType:Ljava/lang/String;
       8: return

  public com.amazonaws.services.opsworks.model.Instance withVirtualizationType(com.amazonaws.services.opsworks.model.VirtualizationType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setVirtualizationType:(Lcom/amazonaws/services/opsworks/model/VirtualizationType;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #95                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #97                 // String {
      11: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #95                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #100                // String AgentVersion:
      32: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      39: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #101                // String ,
      44: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #95                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #104                // String AmiId:
      71: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      78: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #101                // String ,
      83: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #95                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #106                // String Architecture:
     110: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     117: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #101                // String ,
     122: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #95                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #108                // String AutoScalingType:
     149: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     156: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #101                // String ,
     161: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #95                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #110                // String AvailabilityZone:
     188: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     195: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #101                // String ,
     200: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     214: ifnull        249
     217: aload_1
     218: new           #95                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #112                // String BlockDeviceMappings:
     227: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     234: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #101                // String ,
     239: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     253: ifnull        288
     256: aload_1
     257: new           #95                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #115                // String CreatedAt:
     266: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     273: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #101                // String ,
     278: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     292: ifnull        327
     295: aload_1
     296: new           #95                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #117                // String EbsOptimized:
     305: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     312: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #101                // String ,
     317: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #95                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #119                // String Ec2InstanceId:
     344: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     351: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #101                // String ,
     356: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #95                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #121                // String EcsClusterArn:
     383: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     390: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #101                // String ,
     395: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     409: ifnull        444
     412: aload_1
     413: new           #95                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #123                // String EcsContainerInstanceArn:
     422: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     429: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: ldc           #101                // String ,
     434: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #95                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #125                // String ElasticIp:
     461: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     468: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #101                // String ,
     473: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #95                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #127                // String Hostname:
     500: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     507: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #101                // String ,
     512: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     526: ifnull        561
     529: aload_1
     530: new           #95                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #129                // String InfrastructureClass:
     539: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     546: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     549: ldc           #101                // String ,
     551: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     565: ifnull        600
     568: aload_1
     569: new           #95                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #131                // String InstallUpdatesOnBoot:
     578: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     585: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     588: ldc           #101                // String ,
     590: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     596: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     599: pop
     600: aload_0
     601: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     604: ifnull        639
     607: aload_1
     608: new           #95                 // class java/lang/StringBuilder
     611: dup
     612: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     615: ldc           #133                // String InstanceId:
     617: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: aload_0
     621: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     624: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     627: ldc           #101                // String ,
     629: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     632: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     635: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     638: pop
     639: aload_0
     640: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     643: ifnull        678
     646: aload_1
     647: new           #95                 // class java/lang/StringBuilder
     650: dup
     651: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     654: ldc           #135                // String InstanceProfileArn:
     656: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: aload_0
     660: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     663: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     666: ldc           #101                // String ,
     668: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     671: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     677: pop
     678: aload_0
     679: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     682: ifnull        717
     685: aload_1
     686: new           #95                 // class java/lang/StringBuilder
     689: dup
     690: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     693: ldc           #137                // String InstanceType:
     695: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: aload_0
     699: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     702: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     705: ldc           #101                // String ,
     707: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     710: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     713: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     716: pop
     717: aload_0
     718: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     721: ifnull        756
     724: aload_1
     725: new           #95                 // class java/lang/StringBuilder
     728: dup
     729: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     732: ldc           #139                // String LastServiceErrorId:
     734: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     737: aload_0
     738: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     741: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     744: ldc           #101                // String ,
     746: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     749: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     752: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     755: pop
     756: aload_0
     757: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
     760: ifnull        795
     763: aload_1
     764: new           #95                 // class java/lang/StringBuilder
     767: dup
     768: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     771: ldc           #141                // String LayerIds:
     773: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     776: aload_0
     777: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
     780: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     783: ldc           #101                // String ,
     785: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     788: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     791: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     794: pop
     795: aload_0
     796: invokevirtual #142                // Method getOs:()Ljava/lang/String;
     799: ifnull        834
     802: aload_1
     803: new           #95                 // class java/lang/StringBuilder
     806: dup
     807: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     810: ldc           #143                // String Os:
     812: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     815: aload_0
     816: invokevirtual #142                // Method getOs:()Ljava/lang/String;
     819: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     822: ldc           #101                // String ,
     824: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     827: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     830: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     833: pop
     834: aload_0
     835: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
     838: ifnull        873
     841: aload_1
     842: new           #95                 // class java/lang/StringBuilder
     845: dup
     846: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     849: ldc           #145                // String Platform:
     851: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     854: aload_0
     855: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
     858: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     861: ldc           #101                // String ,
     863: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     866: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     869: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     872: pop
     873: aload_0
     874: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
     877: ifnull        912
     880: aload_1
     881: new           #95                 // class java/lang/StringBuilder
     884: dup
     885: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     888: ldc           #147                // String PrivateDns:
     890: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     893: aload_0
     894: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
     897: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     900: ldc           #101                // String ,
     902: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     905: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     908: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     911: pop
     912: aload_0
     913: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
     916: ifnull        951
     919: aload_1
     920: new           #95                 // class java/lang/StringBuilder
     923: dup
     924: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     927: ldc           #149                // String PrivateIp:
     929: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     932: aload_0
     933: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
     936: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     939: ldc           #101                // String ,
     941: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     944: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     947: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     950: pop
     951: aload_0
     952: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
     955: ifnull        990
     958: aload_1
     959: new           #95                 // class java/lang/StringBuilder
     962: dup
     963: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     966: ldc           #151                // String PublicDns:
     968: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     971: aload_0
     972: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
     975: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     978: ldc           #101                // String ,
     980: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     983: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     986: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     989: pop
     990: aload_0
     991: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
     994: ifnull        1029
     997: aload_1
     998: new           #95                 // class java/lang/StringBuilder
    1001: dup
    1002: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1005: ldc           #153                // String PublicIp:
    1007: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1010: aload_0
    1011: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1014: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1017: ldc           #101                // String ,
    1019: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1022: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1025: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1028: pop
    1029: aload_0
    1030: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1033: ifnull        1068
    1036: aload_1
    1037: new           #95                 // class java/lang/StringBuilder
    1040: dup
    1041: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1044: ldc           #155                // String RegisteredBy:
    1046: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1049: aload_0
    1050: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1053: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1056: ldc           #101                // String ,
    1058: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1061: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1064: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1067: pop
    1068: aload_0
    1069: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1072: ifnull        1107
    1075: aload_1
    1076: new           #95                 // class java/lang/StringBuilder
    1079: dup
    1080: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1083: ldc           #157                // String ReportedAgentVersion:
    1085: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1088: aload_0
    1089: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1092: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1095: ldc           #101                // String ,
    1097: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1100: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1103: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1106: pop
    1107: aload_0
    1108: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1111: ifnull        1146
    1114: aload_1
    1115: new           #95                 // class java/lang/StringBuilder
    1118: dup
    1119: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1122: ldc           #159                // String ReportedOs:
    1124: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1127: aload_0
    1128: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1131: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1134: ldc           #101                // String ,
    1136: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1139: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1142: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1145: pop
    1146: aload_0
    1147: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1150: ifnull        1185
    1153: aload_1
    1154: new           #95                 // class java/lang/StringBuilder
    1157: dup
    1158: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1161: ldc           #161                // String RootDeviceType:
    1163: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1166: aload_0
    1167: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1170: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1173: ldc           #101                // String ,
    1175: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1178: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1181: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1184: pop
    1185: aload_0
    1186: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1189: ifnull        1224
    1192: aload_1
    1193: new           #95                 // class java/lang/StringBuilder
    1196: dup
    1197: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1200: ldc           #163                // String RootDeviceVolumeId:
    1202: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1205: aload_0
    1206: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1209: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1212: ldc           #101                // String ,
    1214: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1217: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1220: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1223: pop
    1224: aload_0
    1225: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1228: ifnull        1263
    1231: aload_1
    1232: new           #95                 // class java/lang/StringBuilder
    1235: dup
    1236: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1239: ldc           #165                // String SecurityGroupIds:
    1241: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1244: aload_0
    1245: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1248: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    1251: ldc           #101                // String ,
    1253: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1256: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1259: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1262: pop
    1263: aload_0
    1264: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1267: ifnull        1302
    1270: aload_1
    1271: new           #95                 // class java/lang/StringBuilder
    1274: dup
    1275: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1278: ldc           #167                // String SshHostDsaKeyFingerprint:
    1280: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1283: aload_0
    1284: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1287: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1290: ldc           #101                // String ,
    1292: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1295: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1298: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1301: pop
    1302: aload_0
    1303: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1306: ifnull        1341
    1309: aload_1
    1310: new           #95                 // class java/lang/StringBuilder
    1313: dup
    1314: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1317: ldc           #169                // String SshHostRsaKeyFingerprint:
    1319: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1322: aload_0
    1323: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1326: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1329: ldc           #101                // String ,
    1331: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1334: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1337: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1340: pop
    1341: aload_0
    1342: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1345: ifnull        1380
    1348: aload_1
    1349: new           #95                 // class java/lang/StringBuilder
    1352: dup
    1353: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1356: ldc           #171                // String SshKeyName:
    1358: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1361: aload_0
    1362: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1365: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1368: ldc           #101                // String ,
    1370: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1373: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1376: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1379: pop
    1380: aload_0
    1381: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1384: ifnull        1419
    1387: aload_1
    1388: new           #95                 // class java/lang/StringBuilder
    1391: dup
    1392: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1395: ldc           #173                // String StackId:
    1397: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1400: aload_0
    1401: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1404: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1407: ldc           #101                // String ,
    1409: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1412: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1415: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1418: pop
    1419: aload_0
    1420: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1423: ifnull        1458
    1426: aload_1
    1427: new           #95                 // class java/lang/StringBuilder
    1430: dup
    1431: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1434: ldc           #175                // String Status:
    1436: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1439: aload_0
    1440: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1443: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1446: ldc           #101                // String ,
    1448: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1451: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1454: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1457: pop
    1458: aload_0
    1459: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    1462: ifnull        1497
    1465: aload_1
    1466: new           #95                 // class java/lang/StringBuilder
    1469: dup
    1470: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1473: ldc           #177                // String SubnetId:
    1475: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1478: aload_0
    1479: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    1482: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1485: ldc           #101                // String ,
    1487: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1490: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1493: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1496: pop
    1497: aload_0
    1498: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    1501: ifnull        1536
    1504: aload_1
    1505: new           #95                 // class java/lang/StringBuilder
    1508: dup
    1509: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1512: ldc           #179                // String Tenancy:
    1514: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1517: aload_0
    1518: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    1521: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1524: ldc           #101                // String ,
    1526: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1529: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1532: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1535: pop
    1536: aload_0
    1537: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    1540: ifnull        1570
    1543: aload_1
    1544: new           #95                 // class java/lang/StringBuilder
    1547: dup
    1548: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
    1551: ldc           #181                // String VirtualizationType:
    1553: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1556: aload_0
    1557: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    1560: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1563: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1566: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1569: pop
    1570: aload_1
    1571: ldc           #182                // String }
    1573: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1576: pop
    1577: aload_1
    1578: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1581: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #183                // class com/amazonaws/services/opsworks/model/Instance
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #183                // class com/amazonaws/services/opsworks/model/Instance
      26: astore_2
      27: aload_2
      28: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      72: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
     125: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
     178: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
     231: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     284: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     326: ifnull        347
     329: aload_2
     330: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     333: aload_0
     334: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     337: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     381: ifnull        400
     384: aload_2
     385: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     388: aload_0
     389: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     392: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     434: ifnull        453
     437: aload_2
     438: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     441: aload_0
     442: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     445: invokevirtual #186                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     448: ifne          453
     451: iconst_0
     452: ireturn
     453: aload_2
     454: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     457: ifnonnull     464
     460: iconst_1
     461: goto          465
     464: iconst_0
     465: aload_0
     466: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     469: ifnonnull     476
     472: iconst_1
     473: goto          477
     476: iconst_0
     477: ixor
     478: ifeq          483
     481: iconst_0
     482: ireturn
     483: aload_2
     484: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     487: ifnull        506
     490: aload_2
     491: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     494: aload_0
     495: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     498: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: aload_2
     507: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     510: ifnonnull     517
     513: iconst_1
     514: goto          518
     517: iconst_0
     518: aload_0
     519: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     522: ifnonnull     529
     525: iconst_1
     526: goto          530
     529: iconst_0
     530: ixor
     531: ifeq          536
     534: iconst_0
     535: ireturn
     536: aload_2
     537: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     540: ifnull        559
     543: aload_2
     544: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     547: aload_0
     548: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     551: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     554: ifne          559
     557: iconst_0
     558: ireturn
     559: aload_2
     560: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     563: ifnonnull     570
     566: iconst_1
     567: goto          571
     570: iconst_0
     571: aload_0
     572: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     575: ifnonnull     582
     578: iconst_1
     579: goto          583
     582: iconst_0
     583: ixor
     584: ifeq          589
     587: iconst_0
     588: ireturn
     589: aload_2
     590: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     593: ifnull        612
     596: aload_2
     597: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     600: aload_0
     601: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     604: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     607: ifne          612
     610: iconst_0
     611: ireturn
     612: aload_2
     613: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     616: ifnonnull     623
     619: iconst_1
     620: goto          624
     623: iconst_0
     624: aload_0
     625: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     628: ifnonnull     635
     631: iconst_1
     632: goto          636
     635: iconst_0
     636: ixor
     637: ifeq          642
     640: iconst_0
     641: ireturn
     642: aload_2
     643: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     646: ifnull        665
     649: aload_2
     650: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     653: aload_0
     654: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     657: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     706: aload_0
     707: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     710: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     752: ifnull        771
     755: aload_2
     756: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     759: aload_0
     760: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     763: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     766: ifne          771
     769: iconst_0
     770: ireturn
     771: aload_2
     772: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     775: ifnonnull     782
     778: iconst_1
     779: goto          783
     782: iconst_0
     783: aload_0
     784: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     787: ifnonnull     794
     790: iconst_1
     791: goto          795
     794: iconst_0
     795: ixor
     796: ifeq          801
     799: iconst_0
     800: ireturn
     801: aload_2
     802: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     805: ifnull        824
     808: aload_2
     809: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     812: aload_0
     813: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     816: invokevirtual #186                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     819: ifne          824
     822: iconst_0
     823: ireturn
     824: aload_2
     825: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     828: ifnonnull     835
     831: iconst_1
     832: goto          836
     835: iconst_0
     836: aload_0
     837: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     840: ifnonnull     847
     843: iconst_1
     844: goto          848
     847: iconst_0
     848: ixor
     849: ifeq          854
     852: iconst_0
     853: ireturn
     854: aload_2
     855: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     858: ifnull        877
     861: aload_2
     862: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     865: aload_0
     866: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     869: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     872: ifne          877
     875: iconst_0
     876: ireturn
     877: aload_2
     878: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     881: ifnonnull     888
     884: iconst_1
     885: goto          889
     888: iconst_0
     889: aload_0
     890: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     893: ifnonnull     900
     896: iconst_1
     897: goto          901
     900: iconst_0
     901: ixor
     902: ifeq          907
     905: iconst_0
     906: ireturn
     907: aload_2
     908: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     911: ifnull        930
     914: aload_2
     915: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     918: aload_0
     919: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     922: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     925: ifne          930
     928: iconst_0
     929: ireturn
     930: aload_2
     931: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     934: ifnonnull     941
     937: iconst_1
     938: goto          942
     941: iconst_0
     942: aload_0
     943: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     946: ifnonnull     953
     949: iconst_1
     950: goto          954
     953: iconst_0
     954: ixor
     955: ifeq          960
     958: iconst_0
     959: ireturn
     960: aload_2
     961: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     964: ifnull        983
     967: aload_2
     968: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     971: aload_0
     972: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     975: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     978: ifne          983
     981: iconst_0
     982: ireturn
     983: aload_2
     984: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     987: ifnonnull     994
     990: iconst_1
     991: goto          995
     994: iconst_0
     995: aload_0
     996: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     999: ifnonnull     1006
    1002: iconst_1
    1003: goto          1007
    1006: iconst_0
    1007: ixor
    1008: ifeq          1013
    1011: iconst_0
    1012: ireturn
    1013: aload_2
    1014: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
    1017: ifnull        1036
    1020: aload_2
    1021: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
    1024: aload_0
    1025: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
    1028: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1031: ifne          1036
    1034: iconst_0
    1035: ireturn
    1036: aload_2
    1037: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
    1040: ifnonnull     1047
    1043: iconst_1
    1044: goto          1048
    1047: iconst_0
    1048: aload_0
    1049: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
    1052: ifnonnull     1059
    1055: iconst_1
    1056: goto          1060
    1059: iconst_0
    1060: ixor
    1061: ifeq          1066
    1064: iconst_0
    1065: ireturn
    1066: aload_2
    1067: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
    1070: ifnull        1091
    1073: aload_2
    1074: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
    1077: aload_0
    1078: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
    1081: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1086: ifne          1091
    1089: iconst_0
    1090: ireturn
    1091: aload_2
    1092: invokevirtual #142                // Method getOs:()Ljava/lang/String;
    1095: ifnonnull     1102
    1098: iconst_1
    1099: goto          1103
    1102: iconst_0
    1103: aload_0
    1104: invokevirtual #142                // Method getOs:()Ljava/lang/String;
    1107: ifnonnull     1114
    1110: iconst_1
    1111: goto          1115
    1114: iconst_0
    1115: ixor
    1116: ifeq          1121
    1119: iconst_0
    1120: ireturn
    1121: aload_2
    1122: invokevirtual #142                // Method getOs:()Ljava/lang/String;
    1125: ifnull        1144
    1128: aload_2
    1129: invokevirtual #142                // Method getOs:()Ljava/lang/String;
    1132: aload_0
    1133: invokevirtual #142                // Method getOs:()Ljava/lang/String;
    1136: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1139: ifne          1144
    1142: iconst_0
    1143: ireturn
    1144: aload_2
    1145: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
    1148: ifnonnull     1155
    1151: iconst_1
    1152: goto          1156
    1155: iconst_0
    1156: aload_0
    1157: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
    1160: ifnonnull     1167
    1163: iconst_1
    1164: goto          1168
    1167: iconst_0
    1168: ixor
    1169: ifeq          1174
    1172: iconst_0
    1173: ireturn
    1174: aload_2
    1175: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
    1178: ifnull        1197
    1181: aload_2
    1182: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
    1185: aload_0
    1186: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
    1189: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1192: ifne          1197
    1195: iconst_0
    1196: ireturn
    1197: aload_2
    1198: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
    1201: ifnonnull     1208
    1204: iconst_1
    1205: goto          1209
    1208: iconst_0
    1209: aload_0
    1210: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
    1213: ifnonnull     1220
    1216: iconst_1
    1217: goto          1221
    1220: iconst_0
    1221: ixor
    1222: ifeq          1227
    1225: iconst_0
    1226: ireturn
    1227: aload_2
    1228: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
    1231: ifnull        1250
    1234: aload_2
    1235: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
    1238: aload_0
    1239: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
    1242: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1245: ifne          1250
    1248: iconst_0
    1249: ireturn
    1250: aload_2
    1251: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
    1254: ifnonnull     1261
    1257: iconst_1
    1258: goto          1262
    1261: iconst_0
    1262: aload_0
    1263: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
    1266: ifnonnull     1273
    1269: iconst_1
    1270: goto          1274
    1273: iconst_0
    1274: ixor
    1275: ifeq          1280
    1278: iconst_0
    1279: ireturn
    1280: aload_2
    1281: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
    1284: ifnull        1303
    1287: aload_2
    1288: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
    1291: aload_0
    1292: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
    1295: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1298: ifne          1303
    1301: iconst_0
    1302: ireturn
    1303: aload_2
    1304: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
    1307: ifnonnull     1314
    1310: iconst_1
    1311: goto          1315
    1314: iconst_0
    1315: aload_0
    1316: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
    1319: ifnonnull     1326
    1322: iconst_1
    1323: goto          1327
    1326: iconst_0
    1327: ixor
    1328: ifeq          1333
    1331: iconst_0
    1332: ireturn
    1333: aload_2
    1334: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
    1337: ifnull        1356
    1340: aload_2
    1341: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
    1344: aload_0
    1345: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
    1348: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1351: ifne          1356
    1354: iconst_0
    1355: ireturn
    1356: aload_2
    1357: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1360: ifnonnull     1367
    1363: iconst_1
    1364: goto          1368
    1367: iconst_0
    1368: aload_0
    1369: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1372: ifnonnull     1379
    1375: iconst_1
    1376: goto          1380
    1379: iconst_0
    1380: ixor
    1381: ifeq          1386
    1384: iconst_0
    1385: ireturn
    1386: aload_2
    1387: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1390: ifnull        1409
    1393: aload_2
    1394: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1397: aload_0
    1398: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
    1401: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1404: ifne          1409
    1407: iconst_0
    1408: ireturn
    1409: aload_2
    1410: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1413: ifnonnull     1420
    1416: iconst_1
    1417: goto          1421
    1420: iconst_0
    1421: aload_0
    1422: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1425: ifnonnull     1432
    1428: iconst_1
    1429: goto          1433
    1432: iconst_0
    1433: ixor
    1434: ifeq          1439
    1437: iconst_0
    1438: ireturn
    1439: aload_2
    1440: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1443: ifnull        1462
    1446: aload_2
    1447: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1450: aload_0
    1451: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
    1454: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1457: ifne          1462
    1460: iconst_0
    1461: ireturn
    1462: aload_2
    1463: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1466: ifnonnull     1473
    1469: iconst_1
    1470: goto          1474
    1473: iconst_0
    1474: aload_0
    1475: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1478: ifnonnull     1485
    1481: iconst_1
    1482: goto          1486
    1485: iconst_0
    1486: ixor
    1487: ifeq          1492
    1490: iconst_0
    1491: ireturn
    1492: aload_2
    1493: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1496: ifnull        1515
    1499: aload_2
    1500: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1503: aload_0
    1504: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
    1507: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1510: ifne          1515
    1513: iconst_0
    1514: ireturn
    1515: aload_2
    1516: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1519: ifnonnull     1526
    1522: iconst_1
    1523: goto          1527
    1526: iconst_0
    1527: aload_0
    1528: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1531: ifnonnull     1538
    1534: iconst_1
    1535: goto          1539
    1538: iconst_0
    1539: ixor
    1540: ifeq          1545
    1543: iconst_0
    1544: ireturn
    1545: aload_2
    1546: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1549: ifnull        1568
    1552: aload_2
    1553: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1556: aload_0
    1557: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
    1560: invokevirtual #187                // Method com/amazonaws/services/opsworks/model/ReportedOs.equals:(Ljava/lang/Object;)Z
    1563: ifne          1568
    1566: iconst_0
    1567: ireturn
    1568: aload_2
    1569: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1572: ifnonnull     1579
    1575: iconst_1
    1576: goto          1580
    1579: iconst_0
    1580: aload_0
    1581: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1584: ifnonnull     1591
    1587: iconst_1
    1588: goto          1592
    1591: iconst_0
    1592: ixor
    1593: ifeq          1598
    1596: iconst_0
    1597: ireturn
    1598: aload_2
    1599: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1602: ifnull        1621
    1605: aload_2
    1606: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1609: aload_0
    1610: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
    1613: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1616: ifne          1621
    1619: iconst_0
    1620: ireturn
    1621: aload_2
    1622: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1625: ifnonnull     1632
    1628: iconst_1
    1629: goto          1633
    1632: iconst_0
    1633: aload_0
    1634: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1637: ifnonnull     1644
    1640: iconst_1
    1641: goto          1645
    1644: iconst_0
    1645: ixor
    1646: ifeq          1651
    1649: iconst_0
    1650: ireturn
    1651: aload_2
    1652: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1655: ifnull        1674
    1658: aload_2
    1659: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1662: aload_0
    1663: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
    1666: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1669: ifne          1674
    1672: iconst_0
    1673: ireturn
    1674: aload_2
    1675: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1678: ifnonnull     1685
    1681: iconst_1
    1682: goto          1686
    1685: iconst_0
    1686: aload_0
    1687: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1690: ifnonnull     1697
    1693: iconst_1
    1694: goto          1698
    1697: iconst_0
    1698: ixor
    1699: ifeq          1704
    1702: iconst_0
    1703: ireturn
    1704: aload_2
    1705: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1708: ifnull        1729
    1711: aload_2
    1712: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1715: aload_0
    1716: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
    1719: invokeinterface #185,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
    1724: ifne          1729
    1727: iconst_0
    1728: ireturn
    1729: aload_2
    1730: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1733: ifnonnull     1740
    1736: iconst_1
    1737: goto          1741
    1740: iconst_0
    1741: aload_0
    1742: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1745: ifnonnull     1752
    1748: iconst_1
    1749: goto          1753
    1752: iconst_0
    1753: ixor
    1754: ifeq          1759
    1757: iconst_0
    1758: ireturn
    1759: aload_2
    1760: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1763: ifnull        1782
    1766: aload_2
    1767: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1770: aload_0
    1771: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
    1774: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1777: ifne          1782
    1780: iconst_0
    1781: ireturn
    1782: aload_2
    1783: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1786: ifnonnull     1793
    1789: iconst_1
    1790: goto          1794
    1793: iconst_0
    1794: aload_0
    1795: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1798: ifnonnull     1805
    1801: iconst_1
    1802: goto          1806
    1805: iconst_0
    1806: ixor
    1807: ifeq          1812
    1810: iconst_0
    1811: ireturn
    1812: aload_2
    1813: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1816: ifnull        1835
    1819: aload_2
    1820: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1823: aload_0
    1824: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
    1827: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1830: ifne          1835
    1833: iconst_0
    1834: ireturn
    1835: aload_2
    1836: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1839: ifnonnull     1846
    1842: iconst_1
    1843: goto          1847
    1846: iconst_0
    1847: aload_0
    1848: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1851: ifnonnull     1858
    1854: iconst_1
    1855: goto          1859
    1858: iconst_0
    1859: ixor
    1860: ifeq          1865
    1863: iconst_0
    1864: ireturn
    1865: aload_2
    1866: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1869: ifnull        1888
    1872: aload_2
    1873: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1876: aload_0
    1877: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
    1880: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1883: ifne          1888
    1886: iconst_0
    1887: ireturn
    1888: aload_2
    1889: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1892: ifnonnull     1899
    1895: iconst_1
    1896: goto          1900
    1899: iconst_0
    1900: aload_0
    1901: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1904: ifnonnull     1911
    1907: iconst_1
    1908: goto          1912
    1911: iconst_0
    1912: ixor
    1913: ifeq          1918
    1916: iconst_0
    1917: ireturn
    1918: aload_2
    1919: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1922: ifnull        1941
    1925: aload_2
    1926: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1929: aload_0
    1930: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
    1933: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1936: ifne          1941
    1939: iconst_0
    1940: ireturn
    1941: aload_2
    1942: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1945: ifnonnull     1952
    1948: iconst_1
    1949: goto          1953
    1952: iconst_0
    1953: aload_0
    1954: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1957: ifnonnull     1964
    1960: iconst_1
    1961: goto          1965
    1964: iconst_0
    1965: ixor
    1966: ifeq          1971
    1969: iconst_0
    1970: ireturn
    1971: aload_2
    1972: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1975: ifnull        1994
    1978: aload_2
    1979: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1982: aload_0
    1983: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
    1986: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1989: ifne          1994
    1992: iconst_0
    1993: ireturn
    1994: aload_2
    1995: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    1998: ifnonnull     2005
    2001: iconst_1
    2002: goto          2006
    2005: iconst_0
    2006: aload_0
    2007: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    2010: ifnonnull     2017
    2013: iconst_1
    2014: goto          2018
    2017: iconst_0
    2018: ixor
    2019: ifeq          2024
    2022: iconst_0
    2023: ireturn
    2024: aload_2
    2025: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    2028: ifnull        2047
    2031: aload_2
    2032: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    2035: aload_0
    2036: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
    2039: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    2042: ifne          2047
    2045: iconst_0
    2046: ireturn
    2047: aload_2
    2048: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    2051: ifnonnull     2058
    2054: iconst_1
    2055: goto          2059
    2058: iconst_0
    2059: aload_0
    2060: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    2063: ifnonnull     2070
    2066: iconst_1
    2067: goto          2071
    2070: iconst_0
    2071: ixor
    2072: ifeq          2077
    2075: iconst_0
    2076: ireturn
    2077: aload_2
    2078: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    2081: ifnull        2100
    2084: aload_2
    2085: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    2088: aload_0
    2089: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
    2092: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    2095: ifne          2100
    2098: iconst_0
    2099: ireturn
    2100: aload_2
    2101: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    2104: ifnonnull     2111
    2107: iconst_1
    2108: goto          2112
    2111: iconst_0
    2112: aload_0
    2113: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    2116: ifnonnull     2123
    2119: iconst_1
    2120: goto          2124
    2123: iconst_0
    2124: ixor
    2125: ifeq          2130
    2128: iconst_0
    2129: ireturn
    2130: aload_2
    2131: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    2134: ifnull        2153
    2137: aload_2
    2138: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    2141: aload_0
    2142: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
    2145: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    2148: ifne          2153
    2151: iconst_0
    2152: ireturn
    2153: iconst_1
    2154: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #99                 // Method getAgentVersion:()Ljava/lang/String;
      24: invokevirtual #188                // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #103                // Method getAmiId:()Ljava/lang/String;
      48: invokevirtual #188                // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #105                // Method getArchitecture:()Ljava/lang/String;
      72: invokevirtual #188                // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #107                // Method getAutoScalingType:()Ljava/lang/String;
      96: invokevirtual #188                // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #109                // Method getAvailabilityZone:()Ljava/lang/String;
     120: invokevirtual #188                // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     133: ifnonnull     140
     136: iconst_0
     137: goto          149
     140: aload_0
     141: invokevirtual #111                // Method getBlockDeviceMappings:()Ljava/util/List;
     144: invokeinterface #189,  1          // InterfaceMethod java/util/List.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     159: ifnonnull     166
     162: iconst_0
     163: goto          173
     166: aload_0
     167: invokevirtual #114                // Method getCreatedAt:()Ljava/lang/String;
     170: invokevirtual #188                // Method java/lang/String.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     183: ifnonnull     190
     186: iconst_0
     187: goto          197
     190: aload_0
     191: invokevirtual #116                // Method getEbsOptimized:()Ljava/lang/Boolean;
     194: invokevirtual #190                // Method java/lang/Boolean.hashCode:()I
     197: iadd
     198: istore_2
     199: bipush        31
     201: iload_2
     202: imul
     203: aload_0
     204: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     207: ifnonnull     214
     210: iconst_0
     211: goto          221
     214: aload_0
     215: invokevirtual #118                // Method getEc2InstanceId:()Ljava/lang/String;
     218: invokevirtual #188                // Method java/lang/String.hashCode:()I
     221: iadd
     222: istore_2
     223: bipush        31
     225: iload_2
     226: imul
     227: aload_0
     228: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     231: ifnonnull     238
     234: iconst_0
     235: goto          245
     238: aload_0
     239: invokevirtual #120                // Method getEcsClusterArn:()Ljava/lang/String;
     242: invokevirtual #188                // Method java/lang/String.hashCode:()I
     245: iadd
     246: istore_2
     247: bipush        31
     249: iload_2
     250: imul
     251: aload_0
     252: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_0
     259: goto          269
     262: aload_0
     263: invokevirtual #122                // Method getEcsContainerInstanceArn:()Ljava/lang/String;
     266: invokevirtual #188                // Method java/lang/String.hashCode:()I
     269: iadd
     270: istore_2
     271: bipush        31
     273: iload_2
     274: imul
     275: aload_0
     276: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     279: ifnonnull     286
     282: iconst_0
     283: goto          293
     286: aload_0
     287: invokevirtual #124                // Method getElasticIp:()Ljava/lang/String;
     290: invokevirtual #188                // Method java/lang/String.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #126                // Method getHostname:()Ljava/lang/String;
     314: invokevirtual #188                // Method java/lang/String.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     327: ifnonnull     334
     330: iconst_0
     331: goto          341
     334: aload_0
     335: invokevirtual #128                // Method getInfrastructureClass:()Ljava/lang/String;
     338: invokevirtual #188                // Method java/lang/String.hashCode:()I
     341: iadd
     342: istore_2
     343: bipush        31
     345: iload_2
     346: imul
     347: aload_0
     348: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     351: ifnonnull     358
     354: iconst_0
     355: goto          365
     358: aload_0
     359: invokevirtual #130                // Method getInstallUpdatesOnBoot:()Ljava/lang/Boolean;
     362: invokevirtual #190                // Method java/lang/Boolean.hashCode:()I
     365: iadd
     366: istore_2
     367: bipush        31
     369: iload_2
     370: imul
     371: aload_0
     372: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     375: ifnonnull     382
     378: iconst_0
     379: goto          389
     382: aload_0
     383: invokevirtual #132                // Method getInstanceId:()Ljava/lang/String;
     386: invokevirtual #188                // Method java/lang/String.hashCode:()I
     389: iadd
     390: istore_2
     391: bipush        31
     393: iload_2
     394: imul
     395: aload_0
     396: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     399: ifnonnull     406
     402: iconst_0
     403: goto          413
     406: aload_0
     407: invokevirtual #134                // Method getInstanceProfileArn:()Ljava/lang/String;
     410: invokevirtual #188                // Method java/lang/String.hashCode:()I
     413: iadd
     414: istore_2
     415: bipush        31
     417: iload_2
     418: imul
     419: aload_0
     420: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     423: ifnonnull     430
     426: iconst_0
     427: goto          437
     430: aload_0
     431: invokevirtual #136                // Method getInstanceType:()Ljava/lang/String;
     434: invokevirtual #188                // Method java/lang/String.hashCode:()I
     437: iadd
     438: istore_2
     439: bipush        31
     441: iload_2
     442: imul
     443: aload_0
     444: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     447: ifnonnull     454
     450: iconst_0
     451: goto          461
     454: aload_0
     455: invokevirtual #138                // Method getLastServiceErrorId:()Ljava/lang/String;
     458: invokevirtual #188                // Method java/lang/String.hashCode:()I
     461: iadd
     462: istore_2
     463: bipush        31
     465: iload_2
     466: imul
     467: aload_0
     468: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
     471: ifnonnull     478
     474: iconst_0
     475: goto          487
     478: aload_0
     479: invokevirtual #140                // Method getLayerIds:()Ljava/util/List;
     482: invokeinterface #189,  1          // InterfaceMethod java/util/List.hashCode:()I
     487: iadd
     488: istore_2
     489: bipush        31
     491: iload_2
     492: imul
     493: aload_0
     494: invokevirtual #142                // Method getOs:()Ljava/lang/String;
     497: ifnonnull     504
     500: iconst_0
     501: goto          511
     504: aload_0
     505: invokevirtual #142                // Method getOs:()Ljava/lang/String;
     508: invokevirtual #188                // Method java/lang/String.hashCode:()I
     511: iadd
     512: istore_2
     513: bipush        31
     515: iload_2
     516: imul
     517: aload_0
     518: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
     521: ifnonnull     528
     524: iconst_0
     525: goto          535
     528: aload_0
     529: invokevirtual #144                // Method getPlatform:()Ljava/lang/String;
     532: invokevirtual #188                // Method java/lang/String.hashCode:()I
     535: iadd
     536: istore_2
     537: bipush        31
     539: iload_2
     540: imul
     541: aload_0
     542: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
     545: ifnonnull     552
     548: iconst_0
     549: goto          559
     552: aload_0
     553: invokevirtual #146                // Method getPrivateDns:()Ljava/lang/String;
     556: invokevirtual #188                // Method java/lang/String.hashCode:()I
     559: iadd
     560: istore_2
     561: bipush        31
     563: iload_2
     564: imul
     565: aload_0
     566: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
     569: ifnonnull     576
     572: iconst_0
     573: goto          583
     576: aload_0
     577: invokevirtual #148                // Method getPrivateIp:()Ljava/lang/String;
     580: invokevirtual #188                // Method java/lang/String.hashCode:()I
     583: iadd
     584: istore_2
     585: bipush        31
     587: iload_2
     588: imul
     589: aload_0
     590: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
     593: ifnonnull     600
     596: iconst_0
     597: goto          607
     600: aload_0
     601: invokevirtual #150                // Method getPublicDns:()Ljava/lang/String;
     604: invokevirtual #188                // Method java/lang/String.hashCode:()I
     607: iadd
     608: istore_2
     609: bipush        31
     611: iload_2
     612: imul
     613: aload_0
     614: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
     617: ifnonnull     624
     620: iconst_0
     621: goto          631
     624: aload_0
     625: invokevirtual #152                // Method getPublicIp:()Ljava/lang/String;
     628: invokevirtual #188                // Method java/lang/String.hashCode:()I
     631: iadd
     632: istore_2
     633: bipush        31
     635: iload_2
     636: imul
     637: aload_0
     638: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
     641: ifnonnull     648
     644: iconst_0
     645: goto          655
     648: aload_0
     649: invokevirtual #154                // Method getRegisteredBy:()Ljava/lang/String;
     652: invokevirtual #188                // Method java/lang/String.hashCode:()I
     655: iadd
     656: istore_2
     657: bipush        31
     659: iload_2
     660: imul
     661: aload_0
     662: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
     665: ifnonnull     672
     668: iconst_0
     669: goto          679
     672: aload_0
     673: invokevirtual #156                // Method getReportedAgentVersion:()Ljava/lang/String;
     676: invokevirtual #188                // Method java/lang/String.hashCode:()I
     679: iadd
     680: istore_2
     681: bipush        31
     683: iload_2
     684: imul
     685: aload_0
     686: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
     689: ifnonnull     696
     692: iconst_0
     693: goto          703
     696: aload_0
     697: invokevirtual #158                // Method getReportedOs:()Lcom/amazonaws/services/opsworks/model/ReportedOs;
     700: invokevirtual #191                // Method com/amazonaws/services/opsworks/model/ReportedOs.hashCode:()I
     703: iadd
     704: istore_2
     705: bipush        31
     707: iload_2
     708: imul
     709: aload_0
     710: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
     713: ifnonnull     720
     716: iconst_0
     717: goto          727
     720: aload_0
     721: invokevirtual #160                // Method getRootDeviceType:()Ljava/lang/String;
     724: invokevirtual #188                // Method java/lang/String.hashCode:()I
     727: iadd
     728: istore_2
     729: bipush        31
     731: iload_2
     732: imul
     733: aload_0
     734: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
     737: ifnonnull     744
     740: iconst_0
     741: goto          751
     744: aload_0
     745: invokevirtual #162                // Method getRootDeviceVolumeId:()Ljava/lang/String;
     748: invokevirtual #188                // Method java/lang/String.hashCode:()I
     751: iadd
     752: istore_2
     753: bipush        31
     755: iload_2
     756: imul
     757: aload_0
     758: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
     761: ifnonnull     768
     764: iconst_0
     765: goto          777
     768: aload_0
     769: invokevirtual #164                // Method getSecurityGroupIds:()Ljava/util/List;
     772: invokeinterface #189,  1          // InterfaceMethod java/util/List.hashCode:()I
     777: iadd
     778: istore_2
     779: bipush        31
     781: iload_2
     782: imul
     783: aload_0
     784: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
     787: ifnonnull     794
     790: iconst_0
     791: goto          801
     794: aload_0
     795: invokevirtual #166                // Method getSshHostDsaKeyFingerprint:()Ljava/lang/String;
     798: invokevirtual #188                // Method java/lang/String.hashCode:()I
     801: iadd
     802: istore_2
     803: bipush        31
     805: iload_2
     806: imul
     807: aload_0
     808: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
     811: ifnonnull     818
     814: iconst_0
     815: goto          825
     818: aload_0
     819: invokevirtual #168                // Method getSshHostRsaKeyFingerprint:()Ljava/lang/String;
     822: invokevirtual #188                // Method java/lang/String.hashCode:()I
     825: iadd
     826: istore_2
     827: bipush        31
     829: iload_2
     830: imul
     831: aload_0
     832: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
     835: ifnonnull     842
     838: iconst_0
     839: goto          849
     842: aload_0
     843: invokevirtual #170                // Method getSshKeyName:()Ljava/lang/String;
     846: invokevirtual #188                // Method java/lang/String.hashCode:()I
     849: iadd
     850: istore_2
     851: bipush        31
     853: iload_2
     854: imul
     855: aload_0
     856: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
     859: ifnonnull     866
     862: iconst_0
     863: goto          873
     866: aload_0
     867: invokevirtual #172                // Method getStackId:()Ljava/lang/String;
     870: invokevirtual #188                // Method java/lang/String.hashCode:()I
     873: iadd
     874: istore_2
     875: bipush        31
     877: iload_2
     878: imul
     879: aload_0
     880: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
     883: ifnonnull     890
     886: iconst_0
     887: goto          897
     890: aload_0
     891: invokevirtual #174                // Method getStatus:()Ljava/lang/String;
     894: invokevirtual #188                // Method java/lang/String.hashCode:()I
     897: iadd
     898: istore_2
     899: bipush        31
     901: iload_2
     902: imul
     903: aload_0
     904: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
     907: ifnonnull     914
     910: iconst_0
     911: goto          921
     914: aload_0
     915: invokevirtual #176                // Method getSubnetId:()Ljava/lang/String;
     918: invokevirtual #188                // Method java/lang/String.hashCode:()I
     921: iadd
     922: istore_2
     923: bipush        31
     925: iload_2
     926: imul
     927: aload_0
     928: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
     931: ifnonnull     938
     934: iconst_0
     935: goto          945
     938: aload_0
     939: invokevirtual #178                // Method getTenancy:()Ljava/lang/String;
     942: invokevirtual #188                // Method java/lang/String.hashCode:()I
     945: iadd
     946: istore_2
     947: bipush        31
     949: iload_2
     950: imul
     951: aload_0
     952: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
     955: ifnonnull     962
     958: iconst_0
     959: goto          969
     962: aload_0
     963: invokevirtual #180                // Method getVirtualizationType:()Ljava/lang/String;
     966: invokevirtual #188                // Method java/lang/String.hashCode:()I
     969: iadd
     970: istore_2
     971: iload_2
     972: ireturn

  public com.amazonaws.services.opsworks.model.Instance clone();
    Code:
       0: aload_0
       1: invokespecial #192                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #183                // class com/amazonaws/services/opsworks/model/Instance
       7: areturn
       8: astore_1
       9: new           #194                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #195                // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #196                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #197                // Method clone:()Lcom/amazonaws/services/opsworks/model/Instance;
       4: areturn
}
