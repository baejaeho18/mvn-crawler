Compiled from "Instance.java"
public class com.amazonaws.services.elasticmapreduce.model.Instance implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String id;

  private java.lang.String ec2InstanceId;

  private java.lang.String publicDnsName;

  private java.lang.String publicIpAddress;

  private java.lang.String privateDnsName;

  private java.lang.String privateIpAddress;

  private com.amazonaws.services.elasticmapreduce.model.InstanceStatus status;

  private java.lang.String instanceGroupId;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.elasticmapreduce.model.EbsVolume> ebsVolumes;

  public com.amazonaws.services.elasticmapreduce.model.Instance();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field id:Ljava/lang/String;
       5: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field id:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEc2InstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field ec2InstanceId:Ljava/lang/String;
       5: return

  public java.lang.String getEc2InstanceId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ec2InstanceId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withEc2InstanceId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setEc2InstanceId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field publicDnsName:Ljava/lang/String;
       5: return

  public java.lang.String getPublicDnsName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field publicDnsName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withPublicDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setPublicDnsName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field publicIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getPublicIpAddress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field publicIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withPublicIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setPublicIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPrivateDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field privateDnsName:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateDnsName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field privateDnsName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withPrivateDnsName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method setPrivateDnsName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field privateIpAddress:Ljava/lang/String;
       5: return

  public java.lang.String getPrivateIpAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field privateIpAddress:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withPrivateIpAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setPrivateIpAddress:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setStatus(com.amazonaws.services.elasticmapreduce.model.InstanceStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field status:Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
       5: return

  public com.amazonaws.services.elasticmapreduce.model.InstanceStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #14                 // Field status:Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withStatus(com.amazonaws.services.elasticmapreduce.model.InstanceStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method setStatus:(Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;)V
       5: aload_0
       6: areturn

  public void setInstanceGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field instanceGroupId:Ljava/lang/String;
       5: return

  public java.lang.String getInstanceGroupId();
    Code:
       0: aload_0
       1: getfield      #16                 // Field instanceGroupId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withInstanceGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method setInstanceGroupId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.elasticmapreduce.model.EbsVolume> getEbsVolumes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #20                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setEbsVolumes(java.util.Collection<com.amazonaws.services.elasticmapreduce.model.EbsVolume>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #19                 // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #21                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.elasticmapreduce.model.Instance withEbsVolumes(com.amazonaws.services.elasticmapreduce.model.EbsVolume...);
    Code:
       0: aload_0
       1: getfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #19                 // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #22                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #23                 // Method setEbsVolumes:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #18                 // Field ebsVolumes:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #24                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.elasticmapreduce.model.Instance withEbsVolumes(java.util.Collection<com.amazonaws.services.elasticmapreduce.model.EbsVolume>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method setEbsVolumes:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #27                 // String {
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #25                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #30                 // String Id:
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #31                 // String ,
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #25                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #34                 // String Ec2InstanceId:
      71: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      78: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #31                 // String ,
      83: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
      97: ifnull        132
     100: aload_1
     101: new           #25                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #36                 // String PublicDnsName:
     110: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #31                 // String ,
     122: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     136: ifnull        171
     139: aload_1
     140: new           #25                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #38                 // String PublicIpAddress:
     149: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     156: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #31                 // String ,
     161: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #25                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #40                 // String PrivateDnsName:
     188: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     195: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #31                 // String ,
     200: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     214: ifnull        249
     217: aload_1
     218: new           #25                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #42                 // String PrivateIpAddress:
     227: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     234: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: ldc           #31                 // String ,
     239: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     253: ifnull        288
     256: aload_1
     257: new           #25                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #44                 // String Status:
     266: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     273: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #31                 // String ,
     278: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     292: ifnull        327
     295: aload_1
     296: new           #25                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #47                 // String InstanceGroupId:
     305: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     312: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #31                 // String ,
     317: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     331: ifnull        361
     334: aload_1
     335: new           #25                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #49                 // String EbsVolumes:
     344: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     351: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     360: pop
     361: aload_1
     362: ldc           #50                 // String }
     364: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     367: pop
     368: aload_1
     369: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     372: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #51                 // class com/amazonaws/services/elasticmapreduce/model/Instance
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #51                 // class com/amazonaws/services/elasticmapreduce/model/Instance
      26: astore_2
      27: aload_2
      28: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      72: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
     125: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     174: aload_0
     175: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
     178: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     220: ifnull        239
     223: aload_2
     224: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     227: aload_0
     228: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
     231: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_2
     240: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     243: ifnonnull     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: aload_0
     252: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ixor
     264: ifeq          269
     267: iconst_0
     268: ireturn
     269: aload_2
     270: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     273: ifnull        292
     276: aload_2
     277: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     280: aload_0
     281: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     284: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload_2
     293: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     296: ifnonnull     303
     299: iconst_1
     300: goto          304
     303: iconst_0
     304: aload_0
     305: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     308: ifnonnull     315
     311: iconst_1
     312: goto          316
     315: iconst_0
     316: ixor
     317: ifeq          322
     320: iconst_0
     321: ireturn
     322: aload_2
     323: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     326: ifnull        345
     329: aload_2
     330: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     333: aload_0
     334: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     337: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     340: ifne          345
     343: iconst_0
     344: ireturn
     345: aload_2
     346: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     349: ifnonnull     356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: aload_0
     358: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     361: ifnonnull     368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ixor
     370: ifeq          375
     373: iconst_0
     374: ireturn
     375: aload_2
     376: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     379: ifnull        398
     382: aload_2
     383: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     386: aload_0
     387: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     390: invokevirtual #53                 // Method com/amazonaws/services/elasticmapreduce/model/InstanceStatus.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_2
     399: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     402: ifnonnull     409
     405: iconst_1
     406: goto          410
     409: iconst_0
     410: aload_0
     411: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     414: ifnonnull     421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: ixor
     423: ifeq          428
     426: iconst_0
     427: ireturn
     428: aload_2
     429: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     432: ifnull        451
     435: aload_2
     436: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     439: aload_0
     440: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     443: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     446: ifne          451
     449: iconst_0
     450: ireturn
     451: aload_2
     452: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     455: ifnonnull     462
     458: iconst_1
     459: goto          463
     462: iconst_0
     463: aload_0
     464: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     467: ifnonnull     474
     470: iconst_1
     471: goto          475
     474: iconst_0
     475: ixor
     476: ifeq          481
     479: iconst_0
     480: ireturn
     481: aload_2
     482: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     485: ifnull        506
     488: aload_2
     489: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     492: aload_0
     493: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     496: invokeinterface #54,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: iconst_1
     507: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #29                 // Method getId:()Ljava/lang/String;
      24: invokevirtual #55                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #33                 // Method getEc2InstanceId:()Ljava/lang/String;
      48: invokevirtual #55                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #35                 // Method getPublicDnsName:()Ljava/lang/String;
      72: invokevirtual #55                 // Method java/lang/String.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
      85: ifnonnull     92
      88: iconst_0
      89: goto          99
      92: aload_0
      93: invokevirtual #37                 // Method getPublicIpAddress:()Ljava/lang/String;
      96: invokevirtual #55                 // Method java/lang/String.hashCode:()I
      99: iadd
     100: istore_2
     101: bipush        31
     103: iload_2
     104: imul
     105: aload_0
     106: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     109: ifnonnull     116
     112: iconst_0
     113: goto          123
     116: aload_0
     117: invokevirtual #39                 // Method getPrivateDnsName:()Ljava/lang/String;
     120: invokevirtual #55                 // Method java/lang/String.hashCode:()I
     123: iadd
     124: istore_2
     125: bipush        31
     127: iload_2
     128: imul
     129: aload_0
     130: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     133: ifnonnull     140
     136: iconst_0
     137: goto          147
     140: aload_0
     141: invokevirtual #41                 // Method getPrivateIpAddress:()Ljava/lang/String;
     144: invokevirtual #55                 // Method java/lang/String.hashCode:()I
     147: iadd
     148: istore_2
     149: bipush        31
     151: iload_2
     152: imul
     153: aload_0
     154: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     157: ifnonnull     164
     160: iconst_0
     161: goto          171
     164: aload_0
     165: invokevirtual #43                 // Method getStatus:()Lcom/amazonaws/services/elasticmapreduce/model/InstanceStatus;
     168: invokevirtual #56                 // Method com/amazonaws/services/elasticmapreduce/model/InstanceStatus.hashCode:()I
     171: iadd
     172: istore_2
     173: bipush        31
     175: iload_2
     176: imul
     177: aload_0
     178: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     181: ifnonnull     188
     184: iconst_0
     185: goto          195
     188: aload_0
     189: invokevirtual #46                 // Method getInstanceGroupId:()Ljava/lang/String;
     192: invokevirtual #55                 // Method java/lang/String.hashCode:()I
     195: iadd
     196: istore_2
     197: bipush        31
     199: iload_2
     200: imul
     201: aload_0
     202: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     205: ifnonnull     212
     208: iconst_0
     209: goto          221
     212: aload_0
     213: invokevirtual #48                 // Method getEbsVolumes:()Ljava/util/List;
     216: invokeinterface #57,  1           // InterfaceMethod java/util/List.hashCode:()I
     221: iadd
     222: istore_2
     223: iload_2
     224: ireturn

  public com.amazonaws.services.elasticmapreduce.model.Instance clone();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #51                 // class com/amazonaws/services/elasticmapreduce/model/Instance
       7: areturn
       8: astore_1
       9: new           #60                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #61                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lcom/amazonaws/services/elasticmapreduce/model/Instance;
       4: areturn
}
