Compiled from "JobFlowInstancesConfig.java"
public class com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.String masterInstanceType;

  private java.lang.String slaveInstanceType;

  private java.lang.Integer instanceCount;

  private com.amazonaws.internal.SdkInternalList<com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig> instanceGroups;

  private java.lang.String ec2KeyName;

  private com.amazonaws.services.elasticmapreduce.model.PlacementType placement;

  private java.lang.Boolean keepJobFlowAliveWhenNoSteps;

  private java.lang.Boolean terminationProtected;

  private java.lang.String hadoopVersion;

  private java.lang.String ec2SubnetId;

  private java.lang.String emrManagedMasterSecurityGroup;

  private java.lang.String emrManagedSlaveSecurityGroup;

  private java.lang.String serviceAccessSecurityGroup;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> additionalMasterSecurityGroups;

  private com.amazonaws.internal.SdkInternalList<java.lang.String> additionalSlaveSecurityGroups;

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setMasterInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field masterInstanceType:Ljava/lang/String;
       5: return

  public java.lang.String getMasterInstanceType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field masterInstanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withMasterInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setMasterInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setSlaveInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field slaveInstanceType:Ljava/lang/String;
       5: return

  public java.lang.String getSlaveInstanceType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field slaveInstanceType:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withSlaveInstanceType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setSlaveInstanceType:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setInstanceCount(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field instanceCount:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getInstanceCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field instanceCount:Ljava/lang/Integer;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withInstanceCount(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method setInstanceCount:(Ljava/lang/Integer;)V
       5: aload_0
       6: areturn

  public java.util.List<com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig> getInstanceGroups();
    Code:
       0: aload_0
       1: getfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setInstanceGroups(java.util.Collection<com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withInstanceGroups(com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig...);
    Code:
       0: aload_0
       1: getfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #13                 // Method setInstanceGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #8                  // Field instanceGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withInstanceGroups(java.util.Collection<com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setInstanceGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public void setEc2KeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field ec2KeyName:Ljava/lang/String;
       5: return

  public java.lang.String getEc2KeyName();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ec2KeyName:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withEc2KeyName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method setEc2KeyName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setPlacement(com.amazonaws.services.elasticmapreduce.model.PlacementType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field placement:Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
       5: return

  public com.amazonaws.services.elasticmapreduce.model.PlacementType getPlacement();
    Code:
       0: aload_0
       1: getfield      #17                 // Field placement:Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withPlacement(com.amazonaws.services.elasticmapreduce.model.PlacementType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method setPlacement:(Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;)V
       5: aload_0
       6: areturn

  public void setKeepJobFlowAliveWhenNoSteps(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field keepJobFlowAliveWhenNoSteps:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getKeepJobFlowAliveWhenNoSteps();
    Code:
       0: aload_0
       1: getfield      #19                 // Field keepJobFlowAliveWhenNoSteps:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withKeepJobFlowAliveWhenNoSteps(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setKeepJobFlowAliveWhenNoSteps:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isKeepJobFlowAliveWhenNoSteps();
    Code:
       0: aload_0
       1: getfield      #19                 // Field keepJobFlowAliveWhenNoSteps:Ljava/lang/Boolean;
       4: areturn

  public void setTerminationProtected(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field terminationProtected:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getTerminationProtected();
    Code:
       0: aload_0
       1: getfield      #21                 // Field terminationProtected:Ljava/lang/Boolean;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withTerminationProtected(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method setTerminationProtected:(Ljava/lang/Boolean;)V
       5: aload_0
       6: areturn

  public java.lang.Boolean isTerminationProtected();
    Code:
       0: aload_0
       1: getfield      #21                 // Field terminationProtected:Ljava/lang/Boolean;
       4: areturn

  public void setHadoopVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field hadoopVersion:Ljava/lang/String;
       5: return

  public java.lang.String getHadoopVersion();
    Code:
       0: aload_0
       1: getfield      #23                 // Field hadoopVersion:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withHadoopVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method setHadoopVersion:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEc2SubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field ec2SubnetId:Ljava/lang/String;
       5: return

  public java.lang.String getEc2SubnetId();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ec2SubnetId:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withEc2SubnetId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method setEc2SubnetId:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEmrManagedMasterSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field emrManagedMasterSecurityGroup:Ljava/lang/String;
       5: return

  public java.lang.String getEmrManagedMasterSecurityGroup();
    Code:
       0: aload_0
       1: getfield      #27                 // Field emrManagedMasterSecurityGroup:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withEmrManagedMasterSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setEmrManagedMasterSecurityGroup:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setEmrManagedSlaveSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field emrManagedSlaveSecurityGroup:Ljava/lang/String;
       5: return

  public java.lang.String getEmrManagedSlaveSecurityGroup();
    Code:
       0: aload_0
       1: getfield      #29                 // Field emrManagedSlaveSecurityGroup:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withEmrManagedSlaveSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setEmrManagedSlaveSecurityGroup:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public void setServiceAccessSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field serviceAccessSecurityGroup:Ljava/lang/String;
       5: return

  public java.lang.String getServiceAccessSecurityGroup();
    Code:
       0: aload_0
       1: getfield      #31                 // Field serviceAccessSecurityGroup:Ljava/lang/String;
       4: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withServiceAccessSecurityGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method setServiceAccessSecurityGroup:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getAdditionalMasterSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setAdditionalMasterSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withAdditionalMasterSecurityGroups(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #34                 // Method setAdditionalMasterSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #33                 // Field additionalMasterSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withAdditionalMasterSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method setAdditionalMasterSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getAdditionalSlaveSecurityGroups();
    Code:
       0: aload_0
       1: getfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: invokespecial #10                 // Method com/amazonaws/internal/SdkInternalList."<init>":()V
      15: putfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      18: aload_0
      19: getfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: areturn

  public void setAdditionalSlaveSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       9: return
      10: aload_0
      11: new           #9                  // class com/amazonaws/internal/SdkInternalList
      14: dup
      15: aload_1
      16: invokespecial #11                 // Method com/amazonaws/internal/SdkInternalList."<init>":(Ljava/util/Collection;)V
      19: putfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      22: return

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withAdditionalSlaveSecurityGroups(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
       4: ifnonnull     20
       7: aload_0
       8: new           #9                  // class com/amazonaws/internal/SdkInternalList
      11: dup
      12: aload_1
      13: arraylength
      14: invokespecial #12                 // Method com/amazonaws/internal/SdkInternalList."<init>":(I)V
      17: invokevirtual #36                 // Method setAdditionalSlaveSecurityGroups:(Ljava/util/Collection;)V
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     56
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: getfield      #35                 // Field additionalSlaveSecurityGroups:Lcom/amazonaws/internal/SdkInternalList;
      44: aload         5
      46: invokevirtual #14                 // Method com/amazonaws/internal/SdkInternalList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          28
      56: aload_0
      57: areturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig withAdditionalSlaveSecurityGroups(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setAdditionalSlaveSecurityGroups:(Ljava/util/Collection;)V
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #39                 // String {
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      19: ifnull        54
      22: aload_1
      23: new           #37                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #42                 // String MasterInstanceType:
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      39: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #43                 // String ,
      44: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      58: ifnull        93
      61: aload_1
      62: new           #37                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #46                 // String SlaveInstanceType:
      71: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      78: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #43                 // String ,
      83: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
      97: ifnull        132
     100: aload_1
     101: new           #37                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #48                 // String InstanceCount:
     110: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     117: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #43                 // String ,
     122: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload_0
     133: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     136: ifnull        171
     139: aload_1
     140: new           #37                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #51                 // String InstanceGroups:
     149: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     156: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #43                 // String ,
     161: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_0
     172: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     175: ifnull        210
     178: aload_1
     179: new           #37                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #53                 // String Ec2KeyName:
     188: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     195: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #43                 // String ,
     200: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     214: ifnull        249
     217: aload_1
     218: new           #37                 // class java/lang/StringBuilder
     221: dup
     222: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     225: ldc           #55                 // String Placement:
     227: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload_0
     231: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     234: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #43                 // String ,
     239: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_0
     250: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     253: ifnull        288
     256: aload_1
     257: new           #37                 // class java/lang/StringBuilder
     260: dup
     261: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     264: ldc           #57                 // String KeepJobFlowAliveWhenNoSteps:
     266: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     273: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     276: ldc           #43                 // String ,
     278: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: pop
     288: aload_0
     289: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     292: ifnull        327
     295: aload_1
     296: new           #37                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #59                 // String TerminationProtected:
     305: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     312: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: ldc           #43                 // String ,
     317: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: pop
     327: aload_0
     328: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     331: ifnull        366
     334: aload_1
     335: new           #37                 // class java/lang/StringBuilder
     338: dup
     339: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     342: ldc           #61                 // String HadoopVersion:
     344: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: aload_0
     348: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     351: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: ldc           #43                 // String ,
     356: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: pop
     366: aload_0
     367: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     370: ifnull        405
     373: aload_1
     374: new           #37                 // class java/lang/StringBuilder
     377: dup
     378: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     381: ldc           #63                 // String Ec2SubnetId:
     383: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     386: aload_0
     387: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     390: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #43                 // String ,
     395: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     401: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     404: pop
     405: aload_0
     406: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     409: ifnull        444
     412: aload_1
     413: new           #37                 // class java/lang/StringBuilder
     416: dup
     417: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     420: ldc           #65                 // String EmrManagedMasterSecurityGroup:
     422: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     425: aload_0
     426: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     429: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: ldc           #43                 // String ,
     434: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     437: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     440: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: pop
     444: aload_0
     445: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     448: ifnull        483
     451: aload_1
     452: new           #37                 // class java/lang/StringBuilder
     455: dup
     456: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     459: ldc           #67                 // String EmrManagedSlaveSecurityGroup:
     461: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     464: aload_0
     465: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     468: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     471: ldc           #43                 // String ,
     473: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     476: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     479: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: pop
     483: aload_0
     484: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     487: ifnull        522
     490: aload_1
     491: new           #37                 // class java/lang/StringBuilder
     494: dup
     495: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     498: ldc           #69                 // String ServiceAccessSecurityGroup:
     500: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     503: aload_0
     504: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     507: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     510: ldc           #43                 // String ,
     512: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     515: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     518: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     521: pop
     522: aload_0
     523: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     526: ifnull        561
     529: aload_1
     530: new           #37                 // class java/lang/StringBuilder
     533: dup
     534: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     537: ldc           #71                 // String AdditionalMasterSecurityGroups:
     539: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     542: aload_0
     543: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     546: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     549: ldc           #43                 // String ,
     551: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     554: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     557: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: aload_0
     562: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     565: ifnull        595
     568: aload_1
     569: new           #37                 // class java/lang/StringBuilder
     572: dup
     573: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     576: ldc           #73                 // String AdditionalSlaveSecurityGroups:
     578: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     581: aload_0
     582: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     585: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     588: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     591: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     594: pop
     595: aload_1
     596: ldc           #74                 // String }
     598: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     601: pop
     602: aload_1
     603: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     606: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #75                 // class com/amazonaws/services/elasticmapreduce/model/JobFlowInstancesConfig
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #75                 // class com/amazonaws/services/elasticmapreduce/model/JobFlowInstancesConfig
      26: astore_2
      27: aload_2
      28: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      31: ifnonnull     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: aload_0
      40: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ixor
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: aload_2
      58: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      61: ifnull        80
      64: aload_2
      65: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      68: aload_0
      69: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      72: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: aload_2
      81: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      84: ifnonnull     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: aload_0
      93: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      96: ifnonnull     103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ixor
     105: ifeq          110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
     114: ifnull        133
     117: aload_2
     118: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
     121: aload_0
     122: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
     125: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: aload_2
     134: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     137: ifnonnull     144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: aload_0
     146: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     149: ifnonnull     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: ixor
     158: ifeq          163
     161: iconst_0
     162: ireturn
     163: aload_2
     164: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     167: ifnull        186
     170: aload_2
     171: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     174: aload_0
     175: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
     178: invokevirtual #77                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     181: ifne          186
     184: iconst_0
     185: ireturn
     186: aload_2
     187: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     190: ifnonnull     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: aload_0
     199: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     202: ifnonnull     209
     205: iconst_1
     206: goto          210
     209: iconst_0
     210: ixor
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: aload_2
     217: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     220: ifnull        241
     223: aload_2
     224: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     227: aload_0
     228: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
     231: invokeinterface #78,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     236: ifne          241
     239: iconst_0
     240: ireturn
     241: aload_2
     242: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     245: ifnonnull     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: aload_0
     254: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     257: ifnonnull     264
     260: iconst_1
     261: goto          265
     264: iconst_0
     265: ixor
     266: ifeq          271
     269: iconst_0
     270: ireturn
     271: aload_2
     272: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     275: ifnull        294
     278: aload_2
     279: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     282: aload_0
     283: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     286: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifne          294
     292: iconst_0
     293: ireturn
     294: aload_2
     295: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     298: ifnonnull     305
     301: iconst_1
     302: goto          306
     305: iconst_0
     306: aload_0
     307: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     310: ifnonnull     317
     313: iconst_1
     314: goto          318
     317: iconst_0
     318: ixor
     319: ifeq          324
     322: iconst_0
     323: ireturn
     324: aload_2
     325: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     328: ifnull        347
     331: aload_2
     332: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     335: aload_0
     336: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     339: invokevirtual #79                 // Method com/amazonaws/services/elasticmapreduce/model/PlacementType.equals:(Ljava/lang/Object;)Z
     342: ifne          347
     345: iconst_0
     346: ireturn
     347: aload_2
     348: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     351: ifnonnull     358
     354: iconst_1
     355: goto          359
     358: iconst_0
     359: aload_0
     360: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     363: ifnonnull     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ixor
     372: ifeq          377
     375: iconst_0
     376: ireturn
     377: aload_2
     378: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     381: ifnull        400
     384: aload_2
     385: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     388: aload_0
     389: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     392: invokevirtual #80                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     395: ifne          400
     398: iconst_0
     399: ireturn
     400: aload_2
     401: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     404: ifnonnull     411
     407: iconst_1
     408: goto          412
     411: iconst_0
     412: aload_0
     413: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     416: ifnonnull     423
     419: iconst_1
     420: goto          424
     423: iconst_0
     424: ixor
     425: ifeq          430
     428: iconst_0
     429: ireturn
     430: aload_2
     431: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     434: ifnull        453
     437: aload_2
     438: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     441: aload_0
     442: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     445: invokevirtual #80                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     448: ifne          453
     451: iconst_0
     452: ireturn
     453: aload_2
     454: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     457: ifnonnull     464
     460: iconst_1
     461: goto          465
     464: iconst_0
     465: aload_0
     466: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     469: ifnonnull     476
     472: iconst_1
     473: goto          477
     476: iconst_0
     477: ixor
     478: ifeq          483
     481: iconst_0
     482: ireturn
     483: aload_2
     484: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     487: ifnull        506
     490: aload_2
     491: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     494: aload_0
     495: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     498: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     501: ifne          506
     504: iconst_0
     505: ireturn
     506: aload_2
     507: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     510: ifnonnull     517
     513: iconst_1
     514: goto          518
     517: iconst_0
     518: aload_0
     519: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     522: ifnonnull     529
     525: iconst_1
     526: goto          530
     529: iconst_0
     530: ixor
     531: ifeq          536
     534: iconst_0
     535: ireturn
     536: aload_2
     537: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     540: ifnull        559
     543: aload_2
     544: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     547: aload_0
     548: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     551: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     554: ifne          559
     557: iconst_0
     558: ireturn
     559: aload_2
     560: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     563: ifnonnull     570
     566: iconst_1
     567: goto          571
     570: iconst_0
     571: aload_0
     572: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     575: ifnonnull     582
     578: iconst_1
     579: goto          583
     582: iconst_0
     583: ixor
     584: ifeq          589
     587: iconst_0
     588: ireturn
     589: aload_2
     590: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     593: ifnull        612
     596: aload_2
     597: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     600: aload_0
     601: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     604: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     607: ifne          612
     610: iconst_0
     611: ireturn
     612: aload_2
     613: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     616: ifnonnull     623
     619: iconst_1
     620: goto          624
     623: iconst_0
     624: aload_0
     625: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     628: ifnonnull     635
     631: iconst_1
     632: goto          636
     635: iconst_0
     636: ixor
     637: ifeq          642
     640: iconst_0
     641: ireturn
     642: aload_2
     643: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     646: ifnull        665
     649: aload_2
     650: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     653: aload_0
     654: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     657: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     660: ifne          665
     663: iconst_0
     664: ireturn
     665: aload_2
     666: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     669: ifnonnull     676
     672: iconst_1
     673: goto          677
     676: iconst_0
     677: aload_0
     678: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     681: ifnonnull     688
     684: iconst_1
     685: goto          689
     688: iconst_0
     689: ixor
     690: ifeq          695
     693: iconst_0
     694: ireturn
     695: aload_2
     696: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     699: ifnull        718
     702: aload_2
     703: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     706: aload_0
     707: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     710: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     713: ifne          718
     716: iconst_0
     717: ireturn
     718: aload_2
     719: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     722: ifnonnull     729
     725: iconst_1
     726: goto          730
     729: iconst_0
     730: aload_0
     731: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     734: ifnonnull     741
     737: iconst_1
     738: goto          742
     741: iconst_0
     742: ixor
     743: ifeq          748
     746: iconst_0
     747: ireturn
     748: aload_2
     749: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     752: ifnull        773
     755: aload_2
     756: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     759: aload_0
     760: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     763: invokeinterface #78,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     768: ifne          773
     771: iconst_0
     772: ireturn
     773: aload_2
     774: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     777: ifnonnull     784
     780: iconst_1
     781: goto          785
     784: iconst_0
     785: aload_0
     786: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     789: ifnonnull     796
     792: iconst_1
     793: goto          797
     796: iconst_0
     797: ixor
     798: ifeq          803
     801: iconst_0
     802: ireturn
     803: aload_2
     804: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     807: ifnull        828
     810: aload_2
     811: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     814: aload_0
     815: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     818: invokeinterface #78,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     823: ifne          828
     826: iconst_0
     827: ireturn
     828: iconst_1
     829: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: invokevirtual #41                 // Method getMasterInstanceType:()Ljava/lang/String;
      24: invokevirtual #81                 // Method java/lang/String.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      37: ifnonnull     44
      40: iconst_0
      41: goto          51
      44: aload_0
      45: invokevirtual #45                 // Method getSlaveInstanceType:()Ljava/lang/String;
      48: invokevirtual #81                 // Method java/lang/String.hashCode:()I
      51: iadd
      52: istore_2
      53: bipush        31
      55: iload_2
      56: imul
      57: aload_0
      58: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
      61: ifnonnull     68
      64: iconst_0
      65: goto          75
      68: aload_0
      69: invokevirtual #47                 // Method getInstanceCount:()Ljava/lang/Integer;
      72: invokevirtual #82                 // Method java/lang/Integer.hashCode:()I
      75: iadd
      76: istore_2
      77: bipush        31
      79: iload_2
      80: imul
      81: aload_0
      82: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
      85: ifnonnull     92
      88: iconst_0
      89: goto          101
      92: aload_0
      93: invokevirtual #50                 // Method getInstanceGroups:()Ljava/util/List;
      96: invokeinterface #83,  1           // InterfaceMethod java/util/List.hashCode:()I
     101: iadd
     102: istore_2
     103: bipush        31
     105: iload_2
     106: imul
     107: aload_0
     108: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     111: ifnonnull     118
     114: iconst_0
     115: goto          125
     118: aload_0
     119: invokevirtual #52                 // Method getEc2KeyName:()Ljava/lang/String;
     122: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     125: iadd
     126: istore_2
     127: bipush        31
     129: iload_2
     130: imul
     131: aload_0
     132: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     135: ifnonnull     142
     138: iconst_0
     139: goto          149
     142: aload_0
     143: invokevirtual #54                 // Method getPlacement:()Lcom/amazonaws/services/elasticmapreduce/model/PlacementType;
     146: invokevirtual #84                 // Method com/amazonaws/services/elasticmapreduce/model/PlacementType.hashCode:()I
     149: iadd
     150: istore_2
     151: bipush        31
     153: iload_2
     154: imul
     155: aload_0
     156: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     159: ifnonnull     166
     162: iconst_0
     163: goto          173
     166: aload_0
     167: invokevirtual #56                 // Method getKeepJobFlowAliveWhenNoSteps:()Ljava/lang/Boolean;
     170: invokevirtual #85                 // Method java/lang/Boolean.hashCode:()I
     173: iadd
     174: istore_2
     175: bipush        31
     177: iload_2
     178: imul
     179: aload_0
     180: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     183: ifnonnull     190
     186: iconst_0
     187: goto          197
     190: aload_0
     191: invokevirtual #58                 // Method getTerminationProtected:()Ljava/lang/Boolean;
     194: invokevirtual #85                 // Method java/lang/Boolean.hashCode:()I
     197: iadd
     198: istore_2
     199: bipush        31
     201: iload_2
     202: imul
     203: aload_0
     204: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     207: ifnonnull     214
     210: iconst_0
     211: goto          221
     214: aload_0
     215: invokevirtual #60                 // Method getHadoopVersion:()Ljava/lang/String;
     218: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     221: iadd
     222: istore_2
     223: bipush        31
     225: iload_2
     226: imul
     227: aload_0
     228: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     231: ifnonnull     238
     234: iconst_0
     235: goto          245
     238: aload_0
     239: invokevirtual #62                 // Method getEc2SubnetId:()Ljava/lang/String;
     242: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     245: iadd
     246: istore_2
     247: bipush        31
     249: iload_2
     250: imul
     251: aload_0
     252: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     255: ifnonnull     262
     258: iconst_0
     259: goto          269
     262: aload_0
     263: invokevirtual #64                 // Method getEmrManagedMasterSecurityGroup:()Ljava/lang/String;
     266: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     269: iadd
     270: istore_2
     271: bipush        31
     273: iload_2
     274: imul
     275: aload_0
     276: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     279: ifnonnull     286
     282: iconst_0
     283: goto          293
     286: aload_0
     287: invokevirtual #66                 // Method getEmrManagedSlaveSecurityGroup:()Ljava/lang/String;
     290: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     293: iadd
     294: istore_2
     295: bipush        31
     297: iload_2
     298: imul
     299: aload_0
     300: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     303: ifnonnull     310
     306: iconst_0
     307: goto          317
     310: aload_0
     311: invokevirtual #68                 // Method getServiceAccessSecurityGroup:()Ljava/lang/String;
     314: invokevirtual #81                 // Method java/lang/String.hashCode:()I
     317: iadd
     318: istore_2
     319: bipush        31
     321: iload_2
     322: imul
     323: aload_0
     324: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     327: ifnonnull     334
     330: iconst_0
     331: goto          343
     334: aload_0
     335: invokevirtual #70                 // Method getAdditionalMasterSecurityGroups:()Ljava/util/List;
     338: invokeinterface #83,  1           // InterfaceMethod java/util/List.hashCode:()I
     343: iadd
     344: istore_2
     345: bipush        31
     347: iload_2
     348: imul
     349: aload_0
     350: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     353: ifnonnull     360
     356: iconst_0
     357: goto          369
     360: aload_0
     361: invokevirtual #72                 // Method getAdditionalSlaveSecurityGroups:()Ljava/util/List;
     364: invokeinterface #83,  1           // InterfaceMethod java/util/List.hashCode:()I
     369: iadd
     370: istore_2
     371: iload_2
     372: ireturn

  public com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig clone();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #75                 // class com/amazonaws/services/elasticmapreduce/model/JobFlowInstancesConfig
       7: areturn
       8: astore_1
       9: new           #88                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #89                 // String Got a CloneNotSupportedException from Object.clone() even though we\'re Cloneable!
      15: aload_1
      16: invokespecial #90                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method clone:()Lcom/amazonaws/services/elasticmapreduce/model/JobFlowInstancesConfig;
       4: areturn
}
