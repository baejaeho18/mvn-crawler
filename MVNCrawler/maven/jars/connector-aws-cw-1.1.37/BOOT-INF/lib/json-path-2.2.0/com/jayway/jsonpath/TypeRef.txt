Compiled from "TypeRef.java"
public abstract class com.jayway.jsonpath.TypeRef<T> implements java.lang.Comparable<com.jayway.jsonpath.TypeRef<T>> {
  protected final java.lang.reflect.Type type;

  protected com.jayway.jsonpath.TypeRef();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #3                  // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;
      11: astore_1
      12: aload_1
      13: instanceof    #4                  // class java/lang/Class
      16: ifeq          29
      19: new           #5                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #6                  // String No type info in TypeRef
      25: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: checkcast     #8                  // class java/lang/reflect/ParameterizedType
      34: invokeinterface #9,  1            // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      39: iconst_0
      40: aaload
      41: putfield      #10                 // Field type:Ljava/lang/reflect/Type;
      44: return

  public java.lang.reflect.Type getType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field type:Ljava/lang/reflect/Type;
       4: areturn

  public int compareTo(com.jayway.jsonpath.TypeRef<T>);
    Code:
       0: iconst_0
       1: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class com/jayway/jsonpath/TypeRef
       5: invokevirtual #12                 // Method compareTo:(Lcom/jayway/jsonpath/TypeRef;)I
       8: ireturn
}
