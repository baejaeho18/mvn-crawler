Compiled from "AbstractCamelThreadPoolFactoryBean.java"
public abstract class org.apache.camel.core.xml.AbstractCamelThreadPoolFactoryBean extends org.apache.camel.core.xml.AbstractCamelFactoryBean<java.util.concurrent.ExecutorService> {
  private java.lang.String poolSize;

  private java.lang.String maxPoolSize;

  private java.lang.String keepAliveTime;

  private java.util.concurrent.TimeUnit timeUnit;

  private java.lang.String maxQueueSize;

  private java.lang.String allowCoreThreadTimeOut;

  private org.apache.camel.ThreadPoolRejectedPolicy rejectedPolicy;

  private java.lang.String threadName;

  private java.lang.Boolean scheduled;

  public org.apache.camel.core.xml.AbstractCamelThreadPoolFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/camel/core/xml/AbstractCamelFactoryBean."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       8: putfield      #3                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      11: aload_0
      12: getstatic     #4                  // Field org/apache/camel/ThreadPoolRejectedPolicy.CallerRuns:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      15: putfield      #5                  // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
      18: return

  public java.util.concurrent.ExecutorService getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
       4: aload_0
       5: getfield      #7                  // Field poolSize:Ljava/lang/String;
       8: invokestatic  #8                  // Method org/apache/camel/util/CamelContextHelper.parseInteger:(Lorg/apache/camel/CamelContext;Ljava/lang/String;)Ljava/lang/Integer;
      11: invokevirtual #9                  // Method java/lang/Integer.intValue:()I
      14: istore_1
      15: iload_1
      16: ifgt          29
      19: new           #10                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #11                 // String PoolSize must be a positive number
      25: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_1
      30: istore_2
      31: aload_0
      32: getfield      #13                 // Field maxPoolSize:Ljava/lang/String;
      35: ifnull        53
      38: aload_0
      39: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
      42: aload_0
      43: getfield      #13                 // Field maxPoolSize:Ljava/lang/String;
      46: invokestatic  #8                  // Method org/apache/camel/util/CamelContextHelper.parseInteger:(Lorg/apache/camel/CamelContext;Ljava/lang/String;)Ljava/lang/Integer;
      49: invokevirtual #9                  // Method java/lang/Integer.intValue:()I
      52: istore_2
      53: ldc2_w        #14                 // long 60l
      56: lstore_3
      57: aload_0
      58: getfield      #16                 // Field keepAliveTime:Ljava/lang/String;
      61: ifnull        79
      64: aload_0
      65: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
      68: aload_0
      69: getfield      #16                 // Field keepAliveTime:Ljava/lang/String;
      72: invokestatic  #17                 // Method org/apache/camel/util/CamelContextHelper.parseLong:(Lorg/apache/camel/CamelContext;Ljava/lang/String;)Ljava/lang/Long;
      75: invokevirtual #18                 // Method java/lang/Long.longValue:()J
      78: lstore_3
      79: iconst_m1
      80: istore        5
      82: aload_0
      83: getfield      #19                 // Field maxQueueSize:Ljava/lang/String;
      86: ifnull        105
      89: aload_0
      90: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
      93: aload_0
      94: getfield      #19                 // Field maxQueueSize:Ljava/lang/String;
      97: invokestatic  #8                  // Method org/apache/camel/util/CamelContextHelper.parseInteger:(Lorg/apache/camel/CamelContext;Ljava/lang/String;)Ljava/lang/Integer;
     100: invokevirtual #9                  // Method java/lang/Integer.intValue:()I
     103: istore        5
     105: iconst_0
     106: istore        6
     108: aload_0
     109: getfield      #20                 // Field allowCoreThreadTimeOut:Ljava/lang/String;
     112: ifnull        131
     115: aload_0
     116: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
     119: aload_0
     120: getfield      #20                 // Field allowCoreThreadTimeOut:Ljava/lang/String;
     123: invokestatic  #21                 // Method org/apache/camel/util/CamelContextHelper.parseBoolean:(Lorg/apache/camel/CamelContext;Ljava/lang/String;)Ljava/lang/Boolean;
     126: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
     129: istore        6
     131: new           #23                 // class org/apache/camel/builder/ThreadPoolProfileBuilder
     134: dup
     135: aload_0
     136: invokevirtual #24                 // Method getId:()Ljava/lang/String;
     139: invokespecial #25                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder."<init>":(Ljava/lang/String;)V
     142: iload_1
     143: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     146: invokevirtual #27                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.poolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     149: iload_2
     150: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     153: invokevirtual #28                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxPoolSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     156: lload_3
     157: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     160: aload_0
     161: getfield      #3                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
     164: invokevirtual #30                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.keepAliveTime:(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     167: iload         5
     169: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: invokevirtual #31                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.maxQueueSize:(Ljava/lang/Integer;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     175: iload         6
     177: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     180: invokevirtual #33                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.allowCoreThreadTimeOut:(Ljava/lang/Boolean;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     183: aload_0
     184: getfield      #5                  // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
     187: invokevirtual #34                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.rejectedPolicy:(Lorg/apache/camel/ThreadPoolRejectedPolicy;)Lorg/apache/camel/builder/ThreadPoolProfileBuilder;
     190: invokevirtual #35                 // Method org/apache/camel/builder/ThreadPoolProfileBuilder.build:()Lorg/apache/camel/spi/ThreadPoolProfile;
     193: astore        7
     195: aload_0
     196: getfield      #36                 // Field scheduled:Ljava/lang/Boolean;
     199: ifnull        241
     202: aload_0
     203: getfield      #36                 // Field scheduled:Ljava/lang/Boolean;
     206: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
     209: ifeq          241
     212: aload_0
     213: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
     216: invokeinterface #37,  1           // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
     221: aload_0
     222: invokevirtual #24                 // Method getId:()Ljava/lang/String;
     225: aload_0
     226: invokevirtual #38                 // Method getThreadName:()Ljava/lang/String;
     229: aload         7
     231: invokeinterface #39,  4           // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.newScheduledThreadPool:(Ljava/lang/Object;Ljava/lang/String;Lorg/apache/camel/spi/ThreadPoolProfile;)Ljava/util/concurrent/ScheduledExecutorService;
     236: astore        8
     238: goto          267
     241: aload_0
     242: invokevirtual #6                  // Method getCamelContext:()Lorg/apache/camel/CamelContext;
     245: invokeinterface #37,  1           // InterfaceMethod org/apache/camel/CamelContext.getExecutorServiceManager:()Lorg/apache/camel/spi/ExecutorServiceManager;
     250: aload_0
     251: invokevirtual #24                 // Method getId:()Ljava/lang/String;
     254: aload_0
     255: invokevirtual #38                 // Method getThreadName:()Ljava/lang/String;
     258: aload         7
     260: invokeinterface #40,  4           // InterfaceMethod org/apache/camel/spi/ExecutorServiceManager.newThreadPool:(Ljava/lang/Object;Ljava/lang/String;Lorg/apache/camel/spi/ThreadPoolProfile;)Ljava/util/concurrent/ExecutorService;
     265: astore        8
     267: aload         8
     269: areturn

  public java.lang.Class<java.util.concurrent.ExecutorService> getObjectType();
    Code:
       0: ldc           #41                 // class java/util/concurrent/ExecutorService
       2: areturn

  public java.lang.String getPoolSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field poolSize:Ljava/lang/String;
       4: areturn

  public void setPoolSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field poolSize:Ljava/lang/String;
       5: return

  public java.lang.String getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxPoolSize:Ljava/lang/String;
       4: areturn

  public void setMaxPoolSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field maxPoolSize:Ljava/lang/String;
       5: return

  public java.lang.String getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #16                 // Field keepAliveTime:Ljava/lang/String;
       4: areturn

  public void setKeepAliveTime(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field keepAliveTime:Ljava/lang/String;
       5: return

  public java.util.concurrent.TimeUnit getTimeUnit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void setTimeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       5: return

  public java.lang.String getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field maxQueueSize:Ljava/lang/String;
       4: areturn

  public void setMaxQueueSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field maxQueueSize:Ljava/lang/String;
       5: return

  public java.lang.String getAllowCoreThreadTimeOut();
    Code:
       0: aload_0
       1: getfield      #20                 // Field allowCoreThreadTimeOut:Ljava/lang/String;
       4: areturn

  public void setAllowCoreThreadTimeOut(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field allowCoreThreadTimeOut:Ljava/lang/String;
       5: return

  public org.apache.camel.ThreadPoolRejectedPolicy getRejectedPolicy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       4: areturn

  public void setRejectedPolicy(org.apache.camel.ThreadPoolRejectedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field rejectedPolicy:Lorg/apache/camel/ThreadPoolRejectedPolicy;
       5: return

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #42                 // Field threadName:Ljava/lang/String;
       4: areturn

  public void setThreadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field threadName:Ljava/lang/String;
       5: return

  public java.lang.Boolean getScheduled();
    Code:
       0: aload_0
       1: getfield      #36                 // Field scheduled:Ljava/lang/Boolean;
       4: areturn

  public void setScheduled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field scheduled:Ljava/lang/Boolean;
       5: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getObject:()Ljava/util/concurrent/ExecutorService;
       4: areturn
}
