Compiled from "HttpString.java"
public final class io.undertow.util.HttpString implements java.lang.Comparable<io.undertow.util.HttpString>, java.io.Serializable {
  private final byte[] bytes;

  private final transient int hashCode;

  private final int orderInt;

  private transient java.lang.String string;

  private static final java.lang.reflect.Field hashCodeField;

  private static final int hashCodeBase;

  public static final io.undertow.util.HttpString EMPTY;

  static final boolean $assertionsDisabled;

  public io.undertow.util.HttpString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method "[B".clone:()Ljava/lang/Object;
       5: checkcast     #2                  // class "[B"
       8: aconst_null
       9: invokespecial #3                  // Method "<init>":([BLjava/lang/String;)V
      12: return

  public io.undertow.util.HttpString(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_2
       4: iload_3
       5: iadd
       6: invokestatic  #4                  // Method java/util/Arrays.copyOfRange:([BII)[B
       9: aconst_null
      10: invokespecial #3                  // Method "<init>":([BLjava/lang/String;)V
      13: return

  public io.undertow.util.HttpString(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method take:(Ljava/nio/ByteBuffer;)[B
       5: aconst_null
       6: invokespecial #3                  // Method "<init>":([BLjava/lang/String;)V
       9: return

  public io.undertow.util.HttpString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #6                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  io.undertow.util.HttpString(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #8                  // Field orderInt:I
       9: aload_1
      10: invokevirtual #9                  // Method java/lang/String.length:()I
      13: istore_3
      14: iload_3
      15: newarray       byte
      17: astore        4
      19: iconst_0
      20: istore        5
      22: iload         5
      24: iload_3
      25: if_icmpge     85
      28: aload_1
      29: iload         5
      31: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      34: istore        6
      36: iload         6
      38: sipush        255
      41: if_icmple     71
      44: new           #11                 // class java/lang/IllegalArgumentException
      47: dup
      48: new           #12                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #14                 // String Invalid string contents
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload         4
      73: iload         5
      75: iload         6
      77: i2b
      78: bastore
      79: iinc          5, 1
      82: goto          22
      85: aload_0
      86: aload         4
      88: putfield      #18                 // Field bytes:[B
      91: aload_0
      92: aload         4
      94: invokestatic  #19                 // Method calcHashCode:([B)I
      97: putfield      #20                 // Field hashCode:I
     100: aload_0
     101: aload_1
     102: putfield      #21                 // Field string:Ljava/lang/String;
     105: aload_0
     106: invokespecial #22                 // Method checkForNewlines:()V
     109: return

  private void checkForNewlines();
    Code:
       0: aload_0
       1: getfield      #18                 // Field bytes:[B
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     53
      15: aload_1
      16: iload_3
      17: baload
      18: istore        4
      20: iload         4
      22: bipush        13
      24: if_icmpeq     34
      27: iload         4
      29: bipush        10
      31: if_icmpne     47
      34: getstatic     #23                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      37: aload_0
      38: getfield      #21                 // Field string:Ljava/lang/String;
      41: invokeinterface #24,  2           // InterfaceMethod io/undertow/UndertowMessages.newlineNotSupportedInHttpString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      46: athrow
      47: iinc          3, 1
      50: goto          10
      53: return

  private io.undertow.util.HttpString(byte[], java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #18                 // Field bytes:[B
       9: aload_0
      10: aload_1
      11: invokestatic  #19                 // Method calcHashCode:([B)I
      14: putfield      #20                 // Field hashCode:I
      17: aload_0
      18: aload_2
      19: putfield      #21                 // Field string:Ljava/lang/String;
      22: aload_0
      23: iconst_0
      24: putfield      #8                  // Field orderInt:I
      27: aload_0
      28: invokespecial #22                 // Method checkForNewlines:()V
      31: return

  public static io.undertow.util.HttpString tryFromString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method java/lang/String.length:()I
       4: istore_1
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     45
      16: aload_0
      17: iload_3
      18: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      21: istore        4
      23: iload         4
      25: sipush        255
      28: if_icmple     33
      31: aconst_null
      32: areturn
      33: aload_2
      34: iload_3
      35: iload         4
      37: i2b
      38: bastore
      39: iinc          3, 1
      42: goto          11
      45: new           #25                 // class io/undertow/util/HttpString
      48: dup
      49: aload_2
      50: aload_0
      51: invokespecial #3                  // Method "<init>":([BLjava/lang/String;)V
      54: areturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #18                 // Field bytes:[B
       4: arraylength
       5: ireturn

  public byte byteAt(int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field bytes:[B
       4: iload_1
       5: baload
       6: ireturn

  public void copyTo(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field bytes:[B
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public void copyTo(byte[], int, int);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: iload_2
       4: iload_3
       5: invokevirtual #27                 // Method copyTo:(I[BII)V
       8: return

  public void copyTo(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #18                 // Field bytes:[B
       7: arraylength
       8: invokevirtual #28                 // Method copyTo:([BII)V
      11: return

  public void appendTo(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #18                 // Field bytes:[B
       5: invokevirtual #29                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       8: pop
       9: return

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #18                 // Field bytes:[B
       5: invokevirtual #30                 // Method java/io/OutputStream.write:([B)V
       8: return

  private static byte[] take(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          51
       7: aload_0
       8: invokevirtual #32                 // Method java/nio/ByteBuffer.array:()[B
      11: aload_0
      12: invokevirtual #33                 // Method java/nio/ByteBuffer.arrayOffset:()I
      15: aload_0
      16: invokevirtual #34                 // Method java/nio/ByteBuffer.position:()I
      19: iadd
      20: aload_0
      21: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      24: invokestatic  #4                  // Method java/util/Arrays.copyOfRange:([BII)[B
      27: astore_1
      28: aload_0
      29: aload_0
      30: invokevirtual #36                 // Method java/nio/ByteBuffer.limit:()I
      33: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_1
      38: areturn
      39: astore_2
      40: aload_0
      41: aload_0
      42: invokevirtual #36                 // Method java/nio/ByteBuffer.limit:()I
      45: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      48: pop
      49: aload_2
      50: athrow
      51: aload_0
      52: invokevirtual #35                 // Method java/nio/ByteBuffer.remaining:()I
      55: newarray       byte
      57: astore_1
      58: aload_0
      59: aload_1
      60: invokevirtual #38                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      63: pop
      64: aload_1
      65: areturn
    Exception table:
       from    to  target type
           7    28    39   any

  public int compareTo(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: getfield      #8                  // Field orderInt:I
       4: ifeq          27
       7: aload_1
       8: getfield      #8                  // Field orderInt:I
      11: ifeq          27
      14: aload_0
      15: getfield      #8                  // Field orderInt:I
      18: aload_1
      19: getfield      #8                  // Field orderInt:I
      22: isub
      23: invokestatic  #39                 // Method java/lang/Integer.signum:(I)I
      26: ireturn
      27: aload_0
      28: getfield      #18                 // Field bytes:[B
      31: arraylength
      32: aload_1
      33: getfield      #18                 // Field bytes:[B
      36: arraylength
      37: invokestatic  #40                 // Method java/lang/Math.min:(II)I
      40: istore_2
      41: iconst_0
      42: istore        4
      44: iload         4
      46: iload_2
      47: if_icmpge     87
      50: aload_0
      51: getfield      #18                 // Field bytes:[B
      54: iload         4
      56: baload
      57: invokestatic  #41                 // Method higher:(B)I
      60: aload_1
      61: getfield      #18                 // Field bytes:[B
      64: iload         4
      66: baload
      67: invokestatic  #41                 // Method higher:(B)I
      70: isub
      71: invokestatic  #39                 // Method java/lang/Integer.signum:(I)I
      74: istore_3
      75: iload_3
      76: ifeq          81
      79: iload_3
      80: ireturn
      81: iinc          4, 1
      84: goto          44
      87: aload_0
      88: getfield      #18                 // Field bytes:[B
      91: arraylength
      92: aload_1
      93: getfield      #18                 // Field bytes:[B
      96: arraylength
      97: isub
      98: invokestatic  #39                 // Method java/lang/Integer.signum:(I)I
     101: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field hashCode:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #25                 // class io/undertow/util/HttpString
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #25                 // class io/undertow/util/HttpString
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field orderInt:I
      25: ifle          37
      28: aload_2
      29: getfield      #8                  // Field orderInt:I
      32: ifle          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #18                 // Field bytes:[B
      41: aload_2
      42: getfield      #18                 // Field bytes:[B
      45: invokestatic  #42                 // Method bytesAreEqual:([B[B)Z
      48: ireturn

  public boolean equals(io.undertow.util.HttpString);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     23
       5: aload_1
       6: ifnull        27
       9: aload_0
      10: getfield      #18                 // Field bytes:[B
      13: aload_1
      14: getfield      #18                 // Field bytes:[B
      17: invokestatic  #42                 // Method bytesAreEqual:([B[B)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private static int calcHashCode(byte[]);
    Code:
       0: bipush        17
       2: istore_1
       3: aload_0
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     41
      17: aload_2
      18: iload         4
      20: baload
      21: istore        5
      23: iload_1
      24: iconst_4
      25: ishl
      26: iload_1
      27: iadd
      28: iload         5
      30: invokestatic  #41                 // Method higher:(B)I
      33: iadd
      34: istore_1
      35: iinc          4, 1
      38: goto          11
      41: iload_1
      42: ireturn

  private static int higher(byte);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        97
       4: if_icmplt     19
       7: iload_0
       8: bipush        122
      10: if_icmpgt     19
      13: sipush        223
      16: goto          22
      19: sipush        255
      22: iand
      23: ireturn

  private static boolean bytesAreEqual(byte[], byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: aload_1
       3: arraylength
       4: if_icmpne     19
       7: aload_0
       8: aload_1
       9: invokestatic  #43                 // Method bytesAreEquivalent:([B[B)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private static boolean bytesAreEquivalent(byte[], byte[]);
    Code:
       0: getstatic     #44                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: arraylength
       8: aload_1
       9: arraylength
      10: if_icmpeq     21
      13: new           #45                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #46                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: arraylength
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iload_3
      27: iload_2
      28: if_icmpge     54
      31: aload_0
      32: iload_3
      33: baload
      34: invokestatic  #41                 // Method higher:(B)I
      37: aload_1
      38: iload_3
      39: baload
      40: invokestatic  #41                 // Method higher:(B)I
      43: if_icmpeq     48
      46: iconst_0
      47: ireturn
      48: iinc          3, 1
      51: goto          26
      54: iconst_1
      55: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field string:Ljava/lang/String;
       4: ifnonnull     23
       7: aload_0
       8: new           #47                 // class java/lang/String
      11: dup
      12: aload_0
      13: getfield      #18                 // Field bytes:[B
      16: iconst_0
      17: invokespecial #48                 // Method java/lang/String."<init>":([BI)V
      20: putfield      #21                 // Field string:Ljava/lang/String;
      23: aload_0
      24: getfield      #21                 // Field string:Ljava/lang/String;
      27: areturn

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: getstatic     #50                 // Field hashCodeField:Ljava/lang/reflect/Field;
       7: aload_0
       8: aload_0
       9: getfield      #18                 // Field bytes:[B
      12: invokestatic  #19                 // Method calcHashCode:([B)I
      15: invokevirtual #51                 // Method java/lang/reflect/Field.setInt:(Ljava/lang/Object;I)V
      18: goto          34
      21: astore_2
      22: new           #53                 // class java/lang/IllegalAccessError
      25: dup
      26: aload_2
      27: invokevirtual #54                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      30: invokespecial #55                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return
    Exception table:
       from    to  target type
           4    18    21   Class java/lang/IllegalAccessException

  static int hashCodeOf(java.lang.String);
    Code:
       0: bipush        17
       2: istore_1
       3: iconst_0
       4: istore_2
       5: iload_2
       6: aload_0
       7: invokevirtual #9                  // Method java/lang/String.length:()I
      10: if_icmpge     35
      13: iload_1
      14: iconst_4
      15: ishl
      16: iload_1
      17: iadd
      18: aload_0
      19: iload_2
      20: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      23: i2b
      24: invokestatic  #41                 // Method higher:(B)I
      27: iadd
      28: istore_1
      29: iinc          2, 1
      32: goto          5
      35: iload_1
      36: ireturn

  public boolean equalToString(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/String.length:()I
       4: aload_0
       5: getfield      #18                 // Field bytes:[B
       8: arraylength
       9: if_icmpeq     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #18                 // Field bytes:[B
      18: arraylength
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iload_2
      24: if_icmpge     56
      27: aload_0
      28: getfield      #18                 // Field bytes:[B
      31: iload_3
      32: baload
      33: invokestatic  #41                 // Method higher:(B)I
      36: aload_1
      37: iload_3
      38: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      41: i2b
      42: invokestatic  #41                 // Method higher:(B)I
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: iinc          3, 1
      53: goto          22
      56: iconst_1
      57: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class io/undertow/util/HttpString
       5: invokevirtual #56                 // Method compareTo:(Lio/undertow/util/HttpString;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #25                 // class io/undertow/util/HttpString
       2: invokevirtual #57                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #44                 // Field $assertionsDisabled:Z
      16: ldc           #25                 // class io/undertow/util/HttpString
      18: ldc           #58                 // String hashCode
      20: invokevirtual #59                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      23: putstatic     #50                 // Field hashCodeField:Ljava/lang/reflect/Field;
      26: getstatic     #50                 // Field hashCodeField:Ljava/lang/reflect/Field;
      29: iconst_1
      30: invokevirtual #60                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      33: goto          49
      36: astore_0
      37: new           #62                 // class java/lang/NoSuchFieldError
      40: dup
      41: aload_0
      42: invokevirtual #63                 // Method java/lang/NoSuchFieldException.getMessage:()Ljava/lang/String;
      45: invokespecial #64                 // Method java/lang/NoSuchFieldError."<init>":(Ljava/lang/String;)V
      48: athrow
      49: new           #65                 // class java/util/Random
      52: dup
      53: invokespecial #66                 // Method java/util/Random."<init>":()V
      56: invokevirtual #67                 // Method java/util/Random.nextInt:()I
      59: putstatic     #68                 // Field hashCodeBase:I
      62: new           #25                 // class io/undertow/util/HttpString
      65: dup
      66: ldc           #69                 // String
      68: invokespecial #70                 // Method "<init>":(Ljava/lang/String;)V
      71: putstatic     #71                 // Field EMPTY:Lio/undertow/util/HttpString;
      74: return
    Exception table:
       from    to  target type
          16    33    36   Class java/lang/NoSuchFieldException
}
