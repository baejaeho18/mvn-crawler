Compiled from "ChunkReader.java"
final class io.undertow.conduits.ChunkReader$TrailerParser {
  private io.undertow.util.HeaderMap headerMap;

  private java.lang.StringBuilder builder;

  private io.undertow.util.HttpString httpString;

  int state;

  private static final int STATE_TRAILER_NAME;

  private static final int STATE_TRAILER_VALUE;

  private static final int STATE_ENDING;

  final io.undertow.conduits.ChunkReader this$0;

  private io.undertow.conduits.ChunkReader$TrailerParser(io.undertow.conduits.ChunkReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class io/undertow/util/HeaderMap
      13: dup
      14: invokespecial #5                  // Method io/undertow/util/HeaderMap."<init>":()V
      17: putfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
      20: aload_0
      21: new           #7                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      28: putfield      #9                  // Field builder:Ljava/lang/StringBuilder;
      31: aload_0
      32: iconst_0
      33: putfield      #10                 // Field state:I
      36: return

  public int handle(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          301
       7: aload_1
       8: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: aload_0
      13: getfield      #10                 // Field state:I
      16: ifne          155
      19: iload_2
      20: bipush        13
      22: if_icmpne     52
      25: aload_0
      26: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
      29: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      32: ifne          43
      35: aload_0
      36: iconst_2
      37: putfield      #10                 // Field state:I
      40: goto          298
      43: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      46: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotDecodeTrailers:()Ljava/io/IOException;
      51: athrow
      52: iload_2
      53: bipush        10
      55: if_icmpne     103
      58: aload_0
      59: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
      62: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      65: ifne          94
      68: aload_0
      69: getfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
      72: invokestatic  #17                 // Method io/undertow/conduits/ChunkReader.access$200:(Lio/undertow/conduits/ChunkReader;)Lio/undertow/util/Attachable;
      75: aload_0
      76: getfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
      79: invokestatic  #18                 // Method io/undertow/conduits/ChunkReader.access$100:(Lio/undertow/conduits/ChunkReader;)Lio/undertow/util/AttachmentKey;
      82: aload_0
      83: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
      86: invokeinterface #19,  3           // InterfaceMethod io/undertow/util/Attachable.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: iconst_m1
      93: ireturn
      94: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      97: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotDecodeTrailers:()Ljava/io/IOException;
     102: athrow
     103: iload_2
     104: bipush        58
     106: if_icmpne     142
     109: aload_0
     110: aload_0
     111: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     114: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokevirtual #21                 // Method java/lang/String.trim:()Ljava/lang/String;
     120: invokestatic  #22                 // Method io/undertow/util/HttpString.tryFromString:(Ljava/lang/String;)Lio/undertow/util/HttpString;
     123: putfield      #23                 // Field httpString:Lio/undertow/util/HttpString;
     126: aload_0
     127: iconst_1
     128: putfield      #10                 // Field state:I
     131: aload_0
     132: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     135: iconst_0
     136: invokevirtual #24                 // Method java/lang/StringBuilder.setLength:(I)V
     139: goto          298
     142: aload_0
     143: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     146: iload_2
     147: i2c
     148: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     151: pop
     152: goto          298
     155: aload_0
     156: getfield      #10                 // Field state:I
     159: iconst_1
     160: if_icmpne     231
     163: iload_2
     164: bipush        10
     166: if_icmpne     212
     169: aload_0
     170: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     173: aload_0
     174: getfield      #23                 // Field httpString:Lio/undertow/util/HttpString;
     177: aload_0
     178: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     181: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokevirtual #21                 // Method java/lang/String.trim:()Ljava/lang/String;
     187: invokevirtual #26                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     190: pop
     191: aload_0
     192: aconst_null
     193: putfield      #23                 // Field httpString:Lio/undertow/util/HttpString;
     196: aload_0
     197: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     200: iconst_0
     201: invokevirtual #24                 // Method java/lang/StringBuilder.setLength:(I)V
     204: aload_0
     205: iconst_0
     206: putfield      #10                 // Field state:I
     209: goto          298
     212: iload_2
     213: bipush        13
     215: if_icmpeq     298
     218: aload_0
     219: getfield      #9                  // Field builder:Ljava/lang/StringBuilder;
     222: iload_2
     223: i2c
     224: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     227: pop
     228: goto          298
     231: aload_0
     232: getfield      #10                 // Field state:I
     235: iconst_2
     236: if_icmpne     290
     239: iload_2
     240: bipush        10
     242: if_icmpne     281
     245: aload_0
     246: getfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
     249: invokestatic  #17                 // Method io/undertow/conduits/ChunkReader.access$200:(Lio/undertow/conduits/ChunkReader;)Lio/undertow/util/Attachable;
     252: ifnull        279
     255: aload_0
     256: getfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
     259: invokestatic  #17                 // Method io/undertow/conduits/ChunkReader.access$200:(Lio/undertow/conduits/ChunkReader;)Lio/undertow/util/Attachable;
     262: aload_0
     263: getfield      #2                  // Field this$0:Lio/undertow/conduits/ChunkReader;
     266: invokestatic  #18                 // Method io/undertow/conduits/ChunkReader.access$100:(Lio/undertow/conduits/ChunkReader;)Lio/undertow/util/AttachmentKey;
     269: aload_0
     270: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     273: invokeinterface #19,  3           // InterfaceMethod io/undertow/util/Attachable.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     278: pop
     279: iconst_m1
     280: ireturn
     281: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     284: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotDecodeTrailers:()Ljava/io/IOException;
     289: athrow
     290: new           #27                 // class java/lang/IllegalStateException
     293: dup
     294: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":()V
     297: athrow
     298: goto          0
     301: iconst_0
     302: ireturn

  io.undertow.conduits.ChunkReader$TrailerParser(io.undertow.conduits.ChunkReader, io.undertow.conduits.ChunkReader$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/conduits/ChunkReader;)V
       5: return
}
