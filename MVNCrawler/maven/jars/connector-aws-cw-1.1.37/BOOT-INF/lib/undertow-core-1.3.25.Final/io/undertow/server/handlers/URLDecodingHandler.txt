Compiled from "URLDecodingHandler.java"
public class io.undertow.server.handlers.URLDecodingHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final java.lang.String charset;

  public io.undertow.server.handlers.URLDecodingHandler(io.undertow.server.HttpHandler, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field charset:Ljava/lang/String;
      14: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: invokevirtual #5                  // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
       7: getstatic     #6                  // Field io/undertow/UndertowOptions.DECODE_URL:Lorg/xnio/Option;
      10: iconst_1
      11: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      14: istore_2
      15: iload_2
      16: ifne          292
      19: new           #8                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      26: astore_3
      27: aload_1
      28: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      31: invokevirtual #5                  // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      34: getstatic     #10                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      37: iconst_0
      38: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      41: istore        4
      43: aload_1
      44: aload_1
      45: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      48: aload_0
      49: getfield      #3                  // Field charset:Ljava/lang/String;
      52: iload         4
      54: aload_3
      55: invokestatic  #12                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
      58: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      61: pop
      62: aload_1
      63: aload_1
      64: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      67: aload_0
      68: getfield      #3                  // Field charset:Ljava/lang/String;
      71: iload         4
      73: aload_3
      74: invokestatic  #12                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
      77: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      80: pop
      81: aload_1
      82: aload_1
      83: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.getResolvedPath:()Ljava/lang/String;
      86: aload_0
      87: getfield      #3                  // Field charset:Ljava/lang/String;
      90: iload         4
      92: aload_3
      93: invokestatic  #12                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
      96: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.setResolvedPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      99: pop
     100: aload_1
     101: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
     104: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
     107: ifne          292
     110: new           #20                 // class java/util/TreeMap
     113: dup
     114: invokespecial #21                 // Method java/util/TreeMap."<init>":()V
     117: astore        5
     119: aload_1
     120: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     123: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     128: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     133: astore        6
     135: aload         6
     137: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     142: ifeq          272
     145: aload         6
     147: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     152: checkcast     #27                 // class java/util/Map$Entry
     155: astore        7
     157: new           #28                 // class java/util/ArrayDeque
     160: dup
     161: aload         7
     163: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     168: checkcast     #30                 // class java/util/Deque
     171: invokeinterface #31,  1           // InterfaceMethod java/util/Deque.size:()I
     176: invokespecial #32                 // Method java/util/ArrayDeque."<init>":(I)V
     179: astore        8
     181: aload         7
     183: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     188: checkcast     #30                 // class java/util/Deque
     191: invokeinterface #33,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     196: astore        9
     198: aload         9
     200: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     205: ifeq          242
     208: aload         9
     210: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     215: checkcast     #34                 // class java/lang/String
     218: astore        10
     220: aload         8
     222: aload         10
     224: aload_0
     225: getfield      #3                  // Field charset:Ljava/lang/String;
     228: iconst_1
     229: aload_3
     230: invokestatic  #12                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
     233: invokeinterface #35,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     238: pop
     239: goto          198
     242: aload         5
     244: aload         7
     246: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     251: checkcast     #34                 // class java/lang/String
     254: aload_0
     255: getfield      #3                  // Field charset:Ljava/lang/String;
     258: iconst_1
     259: aload_3
     260: invokestatic  #12                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
     263: aload         8
     265: invokevirtual #37                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     268: pop
     269: goto          135
     272: aload_1
     273: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     276: invokeinterface #38,  1           // InterfaceMethod java/util/Map.clear:()V
     281: aload_1
     282: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     285: aload         5
     287: invokeinterface #39,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     292: aload_0
     293: getfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
     296: aload_1
     297: invokeinterface #40,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     302: return
}
