Compiled from "LoadBalancingProxyClient.java"
public final class io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host extends io.undertow.server.handlers.proxy.ConnectionPoolErrorHandler$SimpleConnectionPoolErrorHandler implements io.undertow.server.handlers.proxy.ConnectionPoolManager {
  final io.undertow.server.handlers.proxy.ProxyConnectionPool connectionPool;

  final java.lang.String jvmRoute;

  final java.net.URI uri;

  final org.xnio.ssl.XnioSsl ssl;

  final io.undertow.server.handlers.proxy.LoadBalancingProxyClient this$0;

  private io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host(io.undertow.server.handlers.proxy.LoadBalancingProxyClient, java.lang.String, java.net.InetSocketAddress, java.net.URI, org.xnio.ssl.XnioSsl, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       5: aload_0
       6: invokespecial #3                  // Method io/undertow/server/handlers/proxy/ConnectionPoolErrorHandler$SimpleConnectionPoolErrorHandler."<init>":()V
       9: aload_0
      10: new           #4                  // class io/undertow/server/handlers/proxy/ProxyConnectionPool
      13: dup
      14: aload_0
      15: aload_3
      16: aload         4
      18: aload         5
      20: aload_1
      21: invokestatic  #5                  // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$400:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)Lio/undertow/client/UndertowClient;
      24: aload         6
      26: invokespecial #6                  // Method io/undertow/server/handlers/proxy/ProxyConnectionPool."<init>":(Lio/undertow/server/handlers/proxy/ConnectionPoolManager;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/client/UndertowClient;Lorg/xnio/OptionMap;)V
      29: putfield      #7                  // Field connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
      32: aload_0
      33: aload_2
      34: putfield      #8                  // Field jvmRoute:Ljava/lang/String;
      37: aload_0
      38: aload         4
      40: putfield      #9                  // Field uri:Ljava/net/URI;
      43: aload_0
      44: aload         5
      46: putfield      #10                 // Field ssl:Lorg/xnio/ssl/XnioSsl;
      49: return

  public int getProblemServerRetry();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #11                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$500:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #12                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$600:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: ireturn

  public int getMaxCachedConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #12                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$600:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: ireturn

  public int getSMaxConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #13                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$700:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: ireturn

  public long getTtl();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #14                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$800:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: i2l
       8: lreturn

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       4: invokestatic  #15                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient.access$900:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;)I
       7: ireturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #9                  // Field uri:Ljava/net/URI;
       4: areturn

  io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host(io.undertow.server.handlers.proxy.LoadBalancingProxyClient, java.lang.String, java.net.InetSocketAddress, java.net.URI, org.xnio.ssl.XnioSsl, org.xnio.OptionMap, io.undertow.server.handlers.proxy.LoadBalancingProxyClient$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #1                  // Method "<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;)V
      13: return
}
