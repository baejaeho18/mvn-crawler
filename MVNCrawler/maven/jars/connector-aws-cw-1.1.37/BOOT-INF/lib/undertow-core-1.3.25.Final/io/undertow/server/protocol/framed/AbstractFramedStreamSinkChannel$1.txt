Compiled from "AbstractFramedStreamSinkChannel.java"
class io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel$1 implements java.lang.Runnable {
  int loopCount;

  final io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel this$0;

  io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel$1(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field loopCount:I
      14: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
       4: invokevirtual #5                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getWriteListener:()Lorg/xnio/ChannelListener;
       7: astore_1
       8: aload_1
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      16: invokevirtual #6                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isWriteResumed:()Z
      19: ifne          34
      22: invokestatic  #7                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$000:()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      29: iconst_0
      30: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      33: return
      34: aload_0
      35: dup
      36: getfield      #4                  // Field loopCount:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #4                  // Field loopCount:I
      45: bipush        100
      47: if_icmpne     77
      50: getstatic     #9                  // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      53: invokeinterface #10,  1           // InterfaceMethod io/undertow/UndertowLogger.listenerNotProgressing:()V
      58: aload_0
      59: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      62: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      65: invokestatic  #7                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$000:()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      68: aload_0
      69: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      72: iconst_0
      73: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      76: return
      77: aload_0
      78: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      81: aload_1
      82: invokestatic  #12                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      85: pop
      86: invokestatic  #7                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$000:()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      89: aload_0
      90: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
      93: iconst_0
      94: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      97: goto          114
     100: astore_2
     101: invokestatic  #7                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$000:()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     104: aload_0
     105: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     108: iconst_0
     109: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     112: aload_2
     113: athrow
     114: aload_0
     115: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     118: invokestatic  #13                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$100:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)Z
     121: ifeq          194
     124: aload_0
     125: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     128: invokestatic  #14                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$200:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)I
     131: iconst_1
     132: invokestatic  #15                 // Method org/xnio/Bits.allAreClear:(II)Z
     135: ifeq          194
     138: aload_0
     139: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     142: invokestatic  #16                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$300:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)Z
     145: ifne          194
     148: aload_0
     149: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     152: invokestatic  #17                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$400:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)Z
     155: ifne          194
     158: aload_0
     159: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     162: invokestatic  #18                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$500:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)Z
     165: ifne          194
     168: invokestatic  #7                  // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.access$000:()Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     171: aload_0
     172: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     175: iconst_0
     176: iconst_1
     177: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     180: ifeq          194
     183: aload_0
     184: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;
     187: invokevirtual #20                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     190: aload_0
     191: invokevirtual #21                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     194: return
    Exception table:
       from    to  target type
           0    22   100   any
          34    65   100   any
          77    86   100   any
}
