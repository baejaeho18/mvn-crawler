Compiled from "Undertow.java"
public final class io.undertow.Undertow {
  private final int bufferSize;

  private final int buffersPerRegion;

  private final int ioThreads;

  private final int workerThreads;

  private final boolean directBuffers;

  private final java.util.List<io.undertow.Undertow$ListenerConfig> listeners;

  private final io.undertow.server.HttpHandler rootHandler;

  private final org.xnio.OptionMap workerOptions;

  private final org.xnio.OptionMap socketOptions;

  private final org.xnio.OptionMap serverOptions;

  private org.xnio.XnioWorker worker;

  private java.util.List<org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>> channels;

  private org.xnio.Xnio xnio;

  private io.undertow.Undertow(io.undertow.Undertow$Builder);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokestatic  #6                  // Method io/undertow/Undertow$Builder.access$000:(Lio/undertow/Undertow$Builder;)I
      20: putfield      #7                  // Field bufferSize:I
      23: aload_0
      24: aload_1
      25: invokestatic  #8                  // Method io/undertow/Undertow$Builder.access$100:(Lio/undertow/Undertow$Builder;)I
      28: putfield      #9                  // Field buffersPerRegion:I
      31: aload_0
      32: aload_1
      33: invokestatic  #10                 // Method io/undertow/Undertow$Builder.access$200:(Lio/undertow/Undertow$Builder;)I
      36: putfield      #11                 // Field ioThreads:I
      39: aload_0
      40: aload_1
      41: invokestatic  #12                 // Method io/undertow/Undertow$Builder.access$300:(Lio/undertow/Undertow$Builder;)I
      44: putfield      #13                 // Field workerThreads:I
      47: aload_0
      48: aload_1
      49: invokestatic  #14                 // Method io/undertow/Undertow$Builder.access$400:(Lio/undertow/Undertow$Builder;)Z
      52: putfield      #15                 // Field directBuffers:Z
      55: aload_0
      56: getfield      #5                  // Field listeners:Ljava/util/List;
      59: aload_1
      60: invokestatic  #16                 // Method io/undertow/Undertow$Builder.access$500:(Lio/undertow/Undertow$Builder;)Ljava/util/List;
      63: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      68: pop
      69: aload_0
      70: aload_1
      71: invokestatic  #18                 // Method io/undertow/Undertow$Builder.access$600:(Lio/undertow/Undertow$Builder;)Lio/undertow/server/HttpHandler;
      74: putfield      #19                 // Field rootHandler:Lio/undertow/server/HttpHandler;
      77: aload_0
      78: aload_1
      79: invokestatic  #20                 // Method io/undertow/Undertow$Builder.access$700:(Lio/undertow/Undertow$Builder;)Lorg/xnio/OptionMap$Builder;
      82: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      85: putfield      #22                 // Field workerOptions:Lorg/xnio/OptionMap;
      88: aload_0
      89: aload_1
      90: invokestatic  #23                 // Method io/undertow/Undertow$Builder.access$800:(Lio/undertow/Undertow$Builder;)Lorg/xnio/OptionMap$Builder;
      93: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      96: putfield      #24                 // Field socketOptions:Lorg/xnio/OptionMap;
      99: aload_0
     100: aload_1
     101: invokestatic  #25                 // Method io/undertow/Undertow$Builder.access$900:(Lio/undertow/Undertow$Builder;)Lorg/xnio/OptionMap$Builder;
     104: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     107: putfield      #26                 // Field serverOptions:Lorg/xnio/OptionMap;
     110: return

  public static io.undertow.Undertow$Builder builder();
    Code:
       0: new           #27                 // class io/undertow/Undertow$Builder
       3: dup
       4: aconst_null
       5: invokespecial #28                 // Method io/undertow/Undertow$Builder."<init>":(Lio/undertow/Undertow$1;)V
       8: areturn

  public synchronized void start();
    Code:
       0: aload_0
       1: ldc           #29                 // class io/undertow/Undertow
       3: invokevirtual #30                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       6: invokestatic  #31                 // Method org/xnio/Xnio.getInstance:(Ljava/lang/ClassLoader;)Lorg/xnio/Xnio;
       9: putfield      #32                 // Field xnio:Lorg/xnio/Xnio;
      12: aload_0
      13: new           #3                  // class java/util/ArrayList
      16: dup
      17: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      20: putfield      #33                 // Field channels:Ljava/util/List;
      23: aload_0
      24: aload_0
      25: getfield      #32                 // Field xnio:Lorg/xnio/Xnio;
      28: invokestatic  #34                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      31: getstatic     #35                 // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      34: aload_0
      35: getfield      #11                 // Field ioThreads:I
      38: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      41: getstatic     #37                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      44: ldc           #38                 // int 1000000
      46: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      49: getstatic     #39                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      52: ldc           #38                 // int 1000000
      54: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      57: getstatic     #40                 // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      60: aload_0
      61: getfield      #13                 // Field workerThreads:I
      64: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      67: getstatic     #41                 // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      70: aload_0
      71: getfield      #13                 // Field workerThreads:I
      74: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      77: getstatic     #42                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      80: iconst_1
      81: invokevirtual #43                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      84: getstatic     #44                 // Field org/xnio/Options.CORK:Lorg/xnio/Option;
      87: iconst_1
      88: invokevirtual #43                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      91: aload_0
      92: getfield      #22                 // Field workerOptions:Lorg/xnio/OptionMap;
      95: invokevirtual #45                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      98: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     101: invokevirtual #46                 // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
     104: putfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
     107: invokestatic  #34                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     110: getstatic     #35                 // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
     113: aload_0
     114: getfield      #11                 // Field ioThreads:I
     117: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     120: getstatic     #42                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     123: iconst_1
     124: invokevirtual #43                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     127: getstatic     #48                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     130: iconst_1
     131: invokevirtual #43                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     134: getstatic     #49                 // Field org/xnio/Options.BALANCING_TOKENS:Lorg/xnio/Option;
     137: iconst_1
     138: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     141: getstatic     #50                 // Field org/xnio/Options.BALANCING_CONNECTIONS:Lorg/xnio/Option;
     144: iconst_2
     145: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     148: getstatic     #51                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
     151: sipush        1000
     154: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     157: aload_0
     158: getfield      #24                 // Field socketOptions:Lorg/xnio/OptionMap;
     161: invokevirtual #45                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     164: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     167: astore_1
     168: invokestatic  #34                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     171: getstatic     #52                 // Field io/undertow/UndertowOptions.NO_REQUEST_TIMEOUT:Lorg/xnio/Option;
     174: ldc           #53                 // int 60000000
     176: invokevirtual #36                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
     179: aload_0
     180: getfield      #26                 // Field serverOptions:Lorg/xnio/OptionMap;
     183: invokevirtual #45                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     186: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     189: astore_2
     190: new           #54                 // class io/undertow/server/DefaultByteBufferPool
     193: dup
     194: aload_0
     195: getfield      #15                 // Field directBuffers:Z
     198: aload_0
     199: getfield      #7                  // Field bufferSize:I
     202: iconst_m1
     203: iconst_4
     204: invokespecial #55                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIII)V
     207: astore_3
     208: aload_0
     209: getfield      #5                  // Field listeners:Ljava/util/List;
     212: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     217: astore        4
     219: aload         4
     221: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     226: ifeq          776
     229: aload         4
     231: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     236: checkcast     #59                 // class io/undertow/Undertow$ListenerConfig
     239: astore        5
     241: aload         5
     243: getfield      #60                 // Field io/undertow/Undertow$ListenerConfig.rootHandler:Lio/undertow/server/HttpHandler;
     246: ifnull        257
     249: aload         5
     251: getfield      #60                 // Field io/undertow/Undertow$ListenerConfig.rootHandler:Lio/undertow/server/HttpHandler;
     254: goto          261
     257: aload_0
     258: getfield      #19                 // Field rootHandler:Lio/undertow/server/HttpHandler;
     261: astore        6
     263: aload         5
     265: getfield      #61                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     268: getstatic     #62                 // Field io/undertow/Undertow$ListenerType.AJP:Lio/undertow/Undertow$ListenerType;
     271: if_acmpne     353
     274: new           #63                 // class io/undertow/server/protocol/ajp/AjpOpenListener
     277: dup
     278: aload_3
     279: aload_2
     280: invokespecial #64                 // Method io/undertow/server/protocol/ajp/AjpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     283: astore        7
     285: aload         7
     287: aload         6
     289: invokevirtual #65                 // Method io/undertow/server/protocol/ajp/AjpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     292: aload         7
     294: invokestatic  #66                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     297: astore        8
     299: aload_0
     300: getfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
     303: new           #67                 // class java/net/InetSocketAddress
     306: dup
     307: aload         5
     309: getfield      #68                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     312: invokestatic  #69                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     315: aload         5
     317: getfield      #70                 // Field io/undertow/Undertow$ListenerConfig.port:I
     320: invokespecial #71                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     323: aload         8
     325: aload_1
     326: invokevirtual #72                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     329: astore        9
     331: aload         9
     333: invokeinterface #73,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     338: aload_0
     339: getfield      #33                 // Field channels:Ljava/util/List;
     342: aload         9
     344: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     349: pop
     350: goto          773
     353: invokestatic  #34                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     356: getstatic     #75                 // Field io/undertow/UndertowOptions.BUFFER_PIPELINED_DATA:Lorg/xnio/Option;
     359: iconst_1
     360: invokevirtual #43                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     363: aload_2
     364: invokevirtual #45                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     367: invokevirtual #21                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     370: astore        7
     372: aload         5
     374: getfield      #61                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     377: getstatic     #76                 // Field io/undertow/Undertow$ListenerType.HTTP:Lio/undertow/Undertow$ListenerType;
     380: if_acmpne     463
     383: new           #77                 // class io/undertow/server/protocol/http/HttpOpenListener
     386: dup
     387: aload_3
     388: aload         7
     390: invokespecial #78                 // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     393: astore        8
     395: aload         8
     397: aload         6
     399: invokevirtual #79                 // Method io/undertow/server/protocol/http/HttpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     402: aload         8
     404: invokestatic  #66                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     407: astore        9
     409: aload_0
     410: getfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
     413: new           #67                 // class java/net/InetSocketAddress
     416: dup
     417: aload         5
     419: getfield      #68                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     422: invokestatic  #69                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     425: aload         5
     427: getfield      #70                 // Field io/undertow/Undertow$ListenerConfig.port:I
     430: invokespecial #71                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     433: aload         9
     435: aload_1
     436: invokevirtual #72                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     439: astore        10
     441: aload         10
     443: invokeinterface #73,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     448: aload_0
     449: getfield      #33                 // Field channels:Ljava/util/List;
     452: aload         10
     454: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     459: pop
     460: goto          773
     463: aload         5
     465: getfield      #61                 // Field io/undertow/Undertow$ListenerConfig.type:Lio/undertow/Undertow$ListenerType;
     468: getstatic     #80                 // Field io/undertow/Undertow$ListenerType.HTTPS:Lio/undertow/Undertow$ListenerType;
     471: if_acmpne     773
     474: new           #77                 // class io/undertow/server/protocol/http/HttpOpenListener
     477: dup
     478: aload_3
     479: aload         7
     481: invokespecial #78                 // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     484: astore        9
     486: aload         9
     488: aload         6
     490: invokevirtual #79                 // Method io/undertow/server/protocol/http/HttpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     493: aload_2
     494: getstatic     #81                 // Field io/undertow/UndertowOptions.ENABLE_SPDY:Lorg/xnio/Option;
     497: iconst_0
     498: invokevirtual #82                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     501: istore        10
     503: aload_2
     504: getstatic     #83                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
     507: iconst_0
     508: invokevirtual #82                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     511: istore        11
     513: iload         10
     515: ifne          523
     518: iload         11
     520: ifeq          641
     523: new           #84                 // class io/undertow/server/protocol/http/AlpnOpenListener
     526: dup
     527: aload_3
     528: aload         7
     530: aload         9
     532: invokespecial #85                 // Method io/undertow/server/protocol/http/AlpnOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Lio/undertow/server/DelegateOpenListener;)V
     535: astore        12
     537: iload         10
     539: ifeq          586
     542: new           #86                 // class io/undertow/server/protocol/spdy/SpdyOpenListener
     545: dup
     546: aload_3
     547: new           #54                 // class io/undertow/server/DefaultByteBufferPool
     550: dup
     551: iconst_0
     552: sipush        1024
     555: iconst_m1
     556: iconst_2
     557: iconst_0
     558: invokespecial #87                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIIII)V
     561: aload         7
     563: invokespecial #88                 // Method io/undertow/server/protocol/spdy/SpdyOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     566: astore        13
     568: aload         13
     570: aload         6
     572: invokevirtual #89                 // Method io/undertow/server/protocol/spdy/SpdyOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     575: aload         12
     577: ldc           #90                 // String spdy/3.1
     579: aload         13
     581: iconst_5
     582: invokevirtual #91                 // Method io/undertow/server/protocol/http/AlpnOpenListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
     585: pop
     586: iload         11
     588: ifeq          634
     591: new           #92                 // class io/undertow/server/protocol/http2/Http2OpenListener
     594: dup
     595: aload_3
     596: aload         7
     598: invokespecial #93                 // Method io/undertow/server/protocol/http2/Http2OpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
     601: astore        13
     603: aload         13
     605: aload         6
     607: invokevirtual #94                 // Method io/undertow/server/protocol/http2/Http2OpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
     610: aload         12
     612: ldc           #95                 // String h2
     614: aload         13
     616: bipush        10
     618: invokevirtual #91                 // Method io/undertow/server/protocol/http/AlpnOpenListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
     621: pop
     622: aload         12
     624: ldc           #96                 // String h2-14
     626: aload         13
     628: bipush        7
     630: invokevirtual #91                 // Method io/undertow/server/protocol/http/AlpnOpenListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)Lio/undertow/server/protocol/http/AlpnOpenListener;
     633: pop
     634: aload         12
     636: astore        8
     638: goto          645
     641: aload         9
     643: astore        8
     645: aload         8
     647: invokestatic  #66                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     650: astore        12
     652: aload         5
     654: getfield      #97                 // Field io/undertow/Undertow$ListenerConfig.sslContext:Ljavax/net/ssl/SSLContext;
     657: ifnull        691
     660: new           #98                 // class io/undertow/protocols/ssl/UndertowXnioSsl
     663: dup
     664: aload_0
     665: getfield      #32                 // Field xnio:Lorg/xnio/Xnio;
     668: getstatic     #99                 // Field org/xnio/Options.USE_DIRECT_BUFFERS:Lorg/xnio/Option;
     671: iconst_1
     672: invokestatic  #100                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     675: invokestatic  #101                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     678: aload         5
     680: getfield      #97                 // Field io/undertow/Undertow$ListenerConfig.sslContext:Ljavax/net/ssl/SSLContext;
     683: invokespecial #102                // Method io/undertow/protocols/ssl/UndertowXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
     686: astore        13
     688: goto          720
     691: aload_0
     692: getfield      #32                 // Field xnio:Lorg/xnio/Xnio;
     695: aload         5
     697: getfield      #103                // Field io/undertow/Undertow$ListenerConfig.keyManagers:[Ljavax/net/ssl/KeyManager;
     700: aload         5
     702: getfield      #104                // Field io/undertow/Undertow$ListenerConfig.trustManagers:[Ljavax/net/ssl/TrustManager;
     705: getstatic     #99                 // Field org/xnio/Options.USE_DIRECT_BUFFERS:Lorg/xnio/Option;
     708: iconst_1
     709: invokestatic  #100                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     712: invokestatic  #101                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     715: invokevirtual #105                // Method org/xnio/Xnio.getSslProvider:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Lorg/xnio/OptionMap;)Lorg/xnio/ssl/XnioSsl;
     718: astore        13
     720: aload         13
     722: aload_0
     723: getfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
     726: new           #67                 // class java/net/InetSocketAddress
     729: dup
     730: aload         5
     732: getfield      #68                 // Field io/undertow/Undertow$ListenerConfig.host:Ljava/lang/String;
     735: invokestatic  #69                 // Method java/net/Inet4Address.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     738: aload         5
     740: getfield      #70                 // Field io/undertow/Undertow$ListenerConfig.port:I
     743: invokespecial #71                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     746: aload         12
     748: aload_1
     749: invokevirtual #106                // Method org/xnio/ssl/XnioSsl.createSslConnectionServer:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     752: astore        14
     754: aload         14
     756: invokeinterface #73,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     761: aload_0
     762: getfield      #33                 // Field channels:Ljava/util/List;
     765: aload         14
     767: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     772: pop
     773: goto          219
     776: goto          789
     779: astore_1
     780: new           #108                // class java/lang/RuntimeException
     783: dup
     784: aload_1
     785: invokespecial #109                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     788: athrow
     789: return
    Exception table:
       from    to  target type
          23   776   779   Class java/lang/Exception

  public synchronized void stop();
    Code:
       0: aload_0
       1: getfield      #33                 // Field channels:Ljava/util/List;
       4: ifnull        48
       7: aload_0
       8: getfield      #33                 // Field channels:Ljava/util/List;
      11: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          43
      26: aload_1
      27: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #110                // class org/xnio/channels/AcceptingChannel
      35: astore_2
      36: aload_2
      37: invokestatic  #111                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      40: goto          17
      43: aload_0
      44: aconst_null
      45: putfield      #33                 // Field channels:Ljava/util/List;
      48: aload_0
      49: getfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
      52: ifnull        68
      55: aload_0
      56: getfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
      59: invokevirtual #112                // Method org/xnio/XnioWorker.shutdownNow:()Ljava/util/List;
      62: pop
      63: aload_0
      64: aconst_null
      65: putfield      #47                 // Field worker:Lorg/xnio/XnioWorker;
      68: aload_0
      69: aconst_null
      70: putfield      #32                 // Field xnio:Lorg/xnio/Xnio;
      73: return

  io.undertow.Undertow(io.undertow.Undertow$Builder, io.undertow.Undertow$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/Undertow$Builder;)V
       5: return
}
