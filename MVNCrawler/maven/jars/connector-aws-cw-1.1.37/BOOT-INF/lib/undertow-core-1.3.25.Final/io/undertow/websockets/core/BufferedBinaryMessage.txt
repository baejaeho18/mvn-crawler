Compiled from "BufferedBinaryMessage.java"
public class io.undertow.websockets.core.BufferedBinaryMessage {
  private final boolean bufferFullMessage;

  private java.util.List<io.undertow.connector.PooledByteBuffer> data;

  private io.undertow.connector.PooledByteBuffer current;

  private final long maxMessageSize;

  private long currentSize;

  private boolean complete;

  private int frameCount;

  public io.undertow.websockets.core.BufferedBinaryMessage(long, boolean);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/ArrayList
       8: dup
       9: iconst_1
      10: invokespecial #9                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #10                 // Field data:Ljava/util/List;
      16: aload_0
      17: iload_3
      18: putfield      #3                  // Field bufferFullMessage:Z
      21: aload_0
      22: lload_1
      23: putfield      #11                 // Field maxMessageSize:J
      26: return

  public io.undertow.websockets.core.BufferedBinaryMessage(boolean);
    Code:
       0: aload_0
       1: ldc2_w        #12                 // long -1l
       4: iload_1
       5: invokespecial #14                 // Method "<init>":(JZ)V
       8: return

  public void readBlocking(io.undertow.websockets.core.StreamSourceFrameChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     23
       7: aload_0
       8: aload_1
       9: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      12: invokevirtual #16                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      15: invokeinterface #17,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      20: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      23: aload_1
      24: aload_0
      25: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      28: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      33: invokevirtual #19                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      36: istore_2
      37: iload_2
      38: iconst_m1
      39: if_icmpne     48
      42: aload_0
      43: iconst_1
      44: putfield      #6                  // Field complete:Z
      47: return
      48: iload_2
      49: ifne          56
      52: aload_1
      53: invokevirtual #20                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.awaitReadable:()V
      56: aload_0
      57: aload_1
      58: iload_2
      59: invokespecial #4                  // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
      62: aload_0
      63: getfield      #3                  // Field bufferFullMessage:Z
      66: ifeq          77
      69: aload_0
      70: aload_1
      71: invokespecial #2                  // Method dealWithFullBuffer:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
      74: goto          93
      77: aload_0
      78: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      81: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      86: invokevirtual #21                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      89: ifne          93
      92: return
      93: goto          23

  private void dealWithFullBuffer(io.undertow.websockets.core.StreamSourceFrameChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #21                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          58
      15: aload_0
      16: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      19: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      24: invokevirtual #22                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      27: pop
      28: aload_0
      29: getfield      #10                 // Field data:Ljava/util/List;
      32: aload_0
      33: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: aload_1
      44: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      47: invokevirtual #16                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      50: invokeinterface #17,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      55: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      58: return

  public void read(io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.WebSocketCallback<io.undertow.websockets.core.BufferedBinaryMessage>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     23
       7: aload_0
       8: aload_1
       9: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      12: invokevirtual #16                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      15: invokeinterface #17,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      20: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      23: aload_1
      24: aload_0
      25: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      28: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      33: invokevirtual #19                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.read:(Ljava/nio/ByteBuffer;)I
      36: istore_3
      37: iload_3
      38: iconst_m1
      39: if_icmpne     59
      42: aload_0
      43: iconst_1
      44: putfield      #6                  // Field complete:Z
      47: aload_2
      48: aload_1
      49: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      52: aload_0
      53: invokeinterface #24,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
      58: return
      59: iload_3
      60: ifne          86
      63: aload_1
      64: invokevirtual #25                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      67: new           #26                 // class io/undertow/websockets/core/BufferedBinaryMessage$1
      70: dup
      71: aload_0
      72: aload_2
      73: invokespecial #27                 // Method io/undertow/websockets/core/BufferedBinaryMessage$1."<init>":(Lio/undertow/websockets/core/BufferedBinaryMessage;Lio/undertow/websockets/core/WebSocketCallback;)V
      76: invokeinterface #28,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      81: aload_1
      82: invokevirtual #29                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.resumeReads:()V
      85: return
      86: aload_0
      87: aload_1
      88: iload_3
      89: invokespecial #4                  // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
      92: aload_0
      93: getfield      #3                  // Field bufferFullMessage:Z
      96: ifeq          107
      99: aload_0
     100: aload_1
     101: invokespecial #2                  // Method dealWithFullBuffer:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
     104: goto          142
     107: aload_0
     108: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
     111: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     116: invokevirtual #21                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     119: ifne          136
     122: aload_2
     123: aload_1
     124: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     127: aload_0
     128: invokeinterface #24,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.complete:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;)V
     133: goto          142
     136: aload_0
     137: aload_1
     138: aload_2
     139: invokespecial #1                  // Method handleNewFrame:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
     142: goto          0
     145: astore_3
     146: aload_2
     147: aload_1
     148: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     151: aload_0
     152: aload_3
     153: invokeinterface #31,  4           // InterfaceMethod io/undertow/websockets/core/WebSocketCallback.onError:(Lio/undertow/websockets/core/WebSocketChannel;Ljava/lang/Object;Ljava/lang/Throwable;)V
     158: return
    Exception table:
       from    to  target type
           0    58   145   Class java/io/IOException
          59    85   145   Class java/io/IOException
          86   145   145   Class java/io/IOException

  private void handleNewFrame(io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.WebSocketCallback<io.undertow.websockets.core.BufferedBinaryMessage>);
    Code:
       0: return

  private void checkMaxSize(io.undertow.websockets.core.StreamSourceFrameChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #32                 // Field currentSize:J
       5: iload_2
       6: i2l
       7: ladd
       8: putfield      #32                 // Field currentSize:J
      11: aload_0
      12: getfield      #11                 // Field maxMessageSize:J
      15: lconst_0
      16: lcmp
      17: ifle          91
      20: aload_0
      21: getfield      #32                 // Field currentSize:J
      24: aload_0
      25: getfield      #11                 // Field maxMessageSize:J
      28: lcmp
      29: ifle          91
      32: aload_0
      33: invokevirtual #33                 // Method getData:()Lorg/xnio/Pooled;
      36: invokeinterface #34,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      41: new           #35                 // class io/undertow/websockets/core/CloseMessage
      44: dup
      45: sipush        1009
      48: getstatic     #36                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      51: aload_0
      52: getfield      #11                 // Field maxMessageSize:J
      55: invokeinterface #37,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      60: invokespecial #38                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      63: aload_1
      64: invokevirtual #15                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      67: aconst_null
      68: invokestatic  #39                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Lio/undertow/websockets/core/CloseMessage;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      71: new           #30                 // class java/io/IOException
      74: dup
      75: getstatic     #36                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      78: aload_0
      79: getfield      #11                 // Field maxMessageSize:J
      82: invokeinterface #37,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.messageToBig:(J)Ljava/lang/String;
      87: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return

  public org.xnio.Pooled<java.nio.ByteBuffer[]> getData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     19
       7: new           #41                 // class io/undertow/util/ImmediatePooled
      10: dup
      11: iconst_0
      12: anewarray     #42                 // class java/nio/ByteBuffer
      15: invokespecial #43                 // Method io/undertow/util/ImmediatePooled."<init>":(Ljava/lang/Object;)V
      18: areturn
      19: aload_0
      20: getfield      #10                 // Field data:Ljava/util/List;
      23: invokeinterface #44,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      28: ifeq          79
      31: aload_0
      32: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      35: astore_1
      36: aload_1
      37: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      42: invokevirtual #22                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      45: pop
      46: aload_0
      47: aconst_null
      48: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      51: iconst_1
      52: anewarray     #42                 // class java/nio/ByteBuffer
      55: dup
      56: iconst_0
      57: aload_1
      58: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      63: aastore
      64: astore_2
      65: new           #45                 // class io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray
      68: dup
      69: aload_1
      70: invokestatic  #46                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      73: aload_2
      74: aconst_null
      75: invokespecial #47                 // Method io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray."<init>":(Ljava/util/List;[Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/BufferedBinaryMessage$1;)V
      78: areturn
      79: aload_0
      80: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
      83: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      88: invokevirtual #22                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      91: pop
      92: aload_0
      93: getfield      #10                 // Field data:Ljava/util/List;
      96: aload_0
      97: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
     100: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     105: pop
     106: aload_0
     107: aconst_null
     108: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
     111: aload_0
     112: getfield      #10                 // Field data:Ljava/util/List;
     115: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
     120: anewarray     #42                 // class java/nio/ByteBuffer
     123: astore_1
     124: iconst_0
     125: istore_2
     126: iload_2
     127: aload_0
     128: getfield      #10                 // Field data:Ljava/util/List;
     131: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
     136: if_icmpge     166
     139: aload_1
     140: iload_2
     141: aload_0
     142: getfield      #10                 // Field data:Ljava/util/List;
     145: iload_2
     146: invokeinterface #49,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     151: checkcast     #50                 // class io/undertow/connector/PooledByteBuffer
     154: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     159: aastore
     160: iinc          2, 1
     163: goto          126
     166: aload_0
     167: getfield      #10                 // Field data:Ljava/util/List;
     170: astore_2
     171: aload_0
     172: new           #8                  // class java/util/ArrayList
     175: dup
     176: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
     179: putfield      #10                 // Field data:Ljava/util/List;
     182: new           #45                 // class io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray
     185: dup
     186: aload_2
     187: aload_1
     188: aconst_null
     189: invokespecial #47                 // Method io/undertow/websockets/core/BufferedBinaryMessage$PooledByteBufferArray."<init>":(Ljava/util/List;[Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/BufferedBinaryMessage$1;)V
     192: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field complete:Z
       4: ireturn

  static boolean access$000(io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #6                  // Field complete:Z
       4: ireturn

  static io.undertow.connector.PooledByteBuffer access$100(io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$102(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field current:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static boolean access$002(io.undertow.websockets.core.BufferedBinaryMessage, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field complete:Z
       6: ireturn

  static void access$200(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.core.StreamSourceFrameChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method checkMaxSize:(Lio/undertow/websockets/core/StreamSourceFrameChannel;I)V
       6: return

  static boolean access$300(io.undertow.websockets.core.BufferedBinaryMessage);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferFullMessage:Z
       4: ireturn

  static void access$400(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.core.StreamSourceFrameChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method dealWithFullBuffer:(Lio/undertow/websockets/core/StreamSourceFrameChannel;)V
       5: return

  static void access$500(io.undertow.websockets.core.BufferedBinaryMessage, io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.WebSocketCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method handleNewFrame:(Lio/undertow/websockets/core/StreamSourceFrameChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
       6: return
}
