Compiled from "JettyALPNClientProvider.java"
class io.undertow.client.JettyALPNClientProvider$1 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  final io.undertow.client.JettyALPNClientProvider$ALPNSelectionProvider val$selectionProvider;

  final org.xnio.ssl.SslConnection val$connection;

  final javax.net.ssl.SSLEngine val$sslEngine;

  final org.xnio.ssl.SslConnection val$sslConnection;

  final org.xnio.ChannelListener val$fallback;

  final io.undertow.client.ClientCallback val$failedListener;

  final java.util.Map val$protocolMap;

  final io.undertow.client.JettyALPNClientProvider this$0;

  io.undertow.client.JettyALPNClientProvider$1(io.undertow.client.JettyALPNClientProvider, io.undertow.client.JettyALPNClientProvider$ALPNSelectionProvider, org.xnio.ssl.SslConnection, javax.net.ssl.SSLEngine, org.xnio.ssl.SslConnection, org.xnio.ChannelListener, io.undertow.client.ClientCallback, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/client/JettyALPNClientProvider;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$sslEngine:Ljavax/net/ssl/SSLEngine;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$failedListener:Lio/undertow/client/ClientCallback;
      39: aload_0
      40: aload         8
      42: putfield      #8                  // Field val$protocolMap:Ljava/util/Map;
      45: aload_0
      46: invokespecial #9                  // Method java/lang/Object."<init>":()V
      49: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
       4: invokestatic  #10                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$100:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;)Ljava/lang/String;
       7: ifnull        24
      10: aload_0
      11: aload_0
      12: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
      15: invokestatic  #10                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$100:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;)Ljava/lang/String;
      18: invokevirtual #11                 // Method handleSelected:(Ljava/lang/String;)V
      21: goto          193
      24: bipush        100
      26: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      29: astore_2
      30: aload_1
      31: aload_2
      32: invokeinterface #13,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      37: istore_3
      38: iload_3
      39: ifle          91
      42: aload_2
      43: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      46: pop
      47: new           #15                 // class org/xnio/conduits/PushBackStreamSourceConduit
      50: dup
      51: aload_0
      52: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      55: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      58: invokevirtual #17                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      61: invokespecial #18                 // Method org/xnio/conduits/PushBackStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      64: astore        4
      66: aload         4
      68: new           #19                 // class io/undertow/util/ImmediatePooled
      71: dup
      72: aload_2
      73: invokespecial #20                 // Method io/undertow/util/ImmediatePooled."<init>":(Ljava/lang/Object;)V
      76: invokevirtual #21                 // Method org/xnio/conduits/PushBackStreamSourceConduit.pushBack:(Lorg/xnio/Pooled;)V
      79: aload_0
      80: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      83: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      86: aload         4
      88: invokevirtual #22                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      91: aload_0
      92: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
      95: invokestatic  #10                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$100:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;)Ljava/lang/String;
      98: ifnonnull     127
     101: aload_0
     102: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
     105: aload_0
     106: getfield      #4                  // Field val$sslEngine:Ljavax/net/ssl/SSLEngine;
     109: invokevirtual #23                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     112: invokestatic  #24                 // Method io/undertow/client/JettyALPNClientProvider.access$200:()Ljava/lang/String;
     115: invokeinterface #25,  2           // InterfaceMethod javax/net/ssl/SSLSession.getValue:(Ljava/lang/String;)Ljava/lang/Object;
     120: checkcast     #26                 // class java/lang/String
     123: invokestatic  #27                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$102:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;Ljava/lang/String;)Ljava/lang/String;
     126: pop
     127: aload_0
     128: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
     131: invokestatic  #10                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$100:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;)Ljava/lang/String;
     134: ifnull        151
     137: aload_0
     138: aload_0
     139: getfield      #2                  // Field val$selectionProvider:Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;
     142: invokestatic  #10                 // Method io/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider.access$100:(Lio/undertow/client/JettyALPNClientProvider$ALPNSelectionProvider;)Ljava/lang/String;
     145: invokevirtual #11                 // Method handleSelected:(Ljava/lang/String;)V
     148: goto          179
     151: iload_3
     152: ifle          179
     155: aload_0
     156: getfield      #5                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
     159: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     162: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     165: aload_0
     166: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
     169: aload_0
     170: getfield      #5                  // Field val$sslConnection:Lorg/xnio/ssl/SslConnection;
     173: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
     178: return
     179: goto          193
     182: astore_3
     183: aload_0
     184: getfield      #7                  // Field val$failedListener:Lio/undertow/client/ClientCallback;
     187: aload_3
     188: invokeinterface #31,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     193: return
    Exception table:
       from    to  target type
          30   178   182   Class java/io/IOException

  protected void handleSelected(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      11: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      14: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      17: aload_0
      18: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      21: aload_0
      22: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      25: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      30: return
      31: aload_0
      32: getfield      #8                  // Field val$protocolMap:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #34                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
      44: astore_2
      45: aload_2
      46: ifnonnull     73
      49: aload_0
      50: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      53: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      56: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      59: aload_0
      60: getfield      #6                  // Field val$fallback:Lorg/xnio/ChannelListener;
      63: aload_0
      64: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      67: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      72: return
      73: aload_0
      74: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      77: invokevirtual #16                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      80: invokevirtual #28                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      83: aload_2
      84: invokevirtual #35                 // Method io/undertow/client/ALPNClientSelector$ALPNProtocol.getSelected:()Lorg/xnio/ChannelListener;
      87: aload_0
      88: getfield      #3                  // Field val$connection:Lorg/xnio/ssl/SslConnection;
      91: invokeinterface #29,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      96: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #37                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
