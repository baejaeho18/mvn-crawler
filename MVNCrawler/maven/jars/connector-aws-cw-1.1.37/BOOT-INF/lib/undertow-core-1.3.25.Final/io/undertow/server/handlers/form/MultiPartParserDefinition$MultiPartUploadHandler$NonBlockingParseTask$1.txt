Compiled from "MultiPartParserDefinition.java"
class io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask$1 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  final io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask this$2;

  io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask$1(io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$2:Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
       6: aload_0
       7: getfield      #1                  // Field this$2:Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask;
      10: invokestatic  #4                  // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask.access$600:(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask;)Ljava/util/concurrent/Executor;
      13: aload_0
      14: getfield      #1                  // Field this$2:Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask;
      17: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      22: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #7                  // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
