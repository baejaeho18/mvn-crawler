Compiled from "ProxyHandler.java"
public final class io.undertow.server.handlers.proxy.ProxyHandler implements io.undertow.server.HttpHandler {
  private static final int DEFAULT_MAX_RETRY_ATTEMPTS;

  private static final org.jboss.logging.Logger log;

  public static final java.lang.String UTF_8;

  private final io.undertow.server.handlers.proxy.ProxyClient proxyClient;

  private final int maxRequestTime;

  private static final io.undertow.util.AttachmentKey<io.undertow.server.handlers.proxy.ProxyConnection> CONNECTION;

  private static final io.undertow.util.AttachmentKey<io.undertow.server.HttpServerExchange> EXCHANGE;

  private static final io.undertow.util.AttachmentKey<org.xnio.XnioExecutor$Key> TIMEOUT_KEY;

  private final java.util.Map<io.undertow.util.HttpString, io.undertow.attribute.ExchangeAttribute> requestHeaders;

  private final io.undertow.server.HttpHandler next;

  private final boolean rewriteHostHeader;

  private final boolean reuseXForwarded;

  private final int maxConnectionRetries;

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: iconst_0
       6: invokespecial #9                  // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;ZZ)V
       9: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: getstatic     #10                 // Field DEFAULT_MAX_RETRY_ATTEMPTS:I
      11: invokespecial #11                 // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;ZZI)V
      14: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, int, io.undertow.server.HttpHandler, boolean, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #13                 // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #14                 // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #6                  // Field requestHeaders:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
      20: aload_0
      21: iload_2
      22: putfield      #15                 // Field maxRequestTime:I
      25: aload_0
      26: aload_3
      27: putfield      #16                 // Field next:Lio/undertow/server/HttpHandler;
      30: aload_0
      31: iload         4
      33: putfield      #5                  // Field rewriteHostHeader:Z
      36: aload_0
      37: iload         5
      39: putfield      #4                  // Field reuseXForwarded:Z
      42: aload_0
      43: iload         6
      45: putfield      #17                 // Field maxConnectionRetries:I
      48: return

  public io.undertow.server.handlers.proxy.ProxyHandler(io.undertow.server.handlers.proxy.ProxyClient, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: aload_2
       4: invokespecial #18                 // Method "<init>":(Lio/undertow/server/handlers/proxy/ProxyClient;ILio/undertow/server/HttpHandler;)V
       7: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyClient.findTarget:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
      10: astore_2
      11: aload_2
      12: ifnonnull     38
      15: getstatic     #2                  // Field log:Lorg/jboss/logging/Logger;
      18: ldc           #20                 // String No proxy target for request to %s
      20: aload_1
      21: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getRequestURL:()Ljava/lang/String;
      24: invokevirtual #22                 // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #16                 // Field next:Lio/undertow/server/HttpHandler;
      31: aload_1
      32: invokeinterface #23,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      37: return
      38: aload_0
      39: getfield      #15                 // Field maxRequestTime:I
      42: ifle          57
      45: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
      48: aload_0
      49: getfield      #15                 // Field maxRequestTime:I
      52: i2l
      53: ladd
      54: goto          58
      57: lconst_0
      58: lstore_3
      59: new           #25                 // class io/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler
      62: dup
      63: aload_0
      64: aload_1
      65: aload_2
      66: lload_3
      67: aload_0
      68: getfield      #17                 // Field maxConnectionRetries:I
      71: invokespecial #26                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;JI)V
      74: astore        5
      76: lload_3
      77: lconst_0
      78: lcmp
      79: ifle          135
      82: aload_1
      83: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      86: new           #28                 // class io/undertow/server/handlers/proxy/ProxyHandler$1
      89: dup
      90: aload_0
      91: aload         5
      93: aload_1
      94: invokespecial #29                 // Method io/undertow/server/handlers/proxy/ProxyHandler$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lio/undertow/server/handlers/proxy/ProxyHandler$ProxyClientHandler;Lio/undertow/server/HttpServerExchange;)V
      97: aload_0
      98: getfield      #15                 // Field maxRequestTime:I
     101: i2l
     102: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     105: invokevirtual #31                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     108: astore        6
     110: aload_1
     111: getstatic     #32                 // Field TIMEOUT_KEY:Lio/undertow/util/AttachmentKey;
     114: aload         6
     116: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: aload_1
     121: new           #34                 // class io/undertow/server/handlers/proxy/ProxyHandler$2
     124: dup
     125: aload_0
     126: aload         6
     128: invokespecial #35                 // Method io/undertow/server/handlers/proxy/ProxyHandler$2."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler;Lorg/xnio/XnioExecutor$Key;)V
     131: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
     134: pop
     135: aload_1
     136: aload_1
     137: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
     140: ifeq          149
     143: getstatic     #38                 // Field io/undertow/util/SameThreadExecutor.INSTANCE:Ljava/util/concurrent/Executor;
     146: goto          153
     149: aload_1
     150: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     153: aload         5
     155: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
     158: pop
     159: return

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, io.undertow.attribute.ExchangeAttribute);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #41                 // Method io/undertow/attribute/ExchangeAttributes.constant:(Ljava/lang/String;)Lio/undertow/attribute/ExchangeAttribute;
       9: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler addRequestHeader(io.undertow.util.HttpString, java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: aload_3
       6: invokestatic  #42                 // Method io/undertow/attribute/ExchangeAttributes.parser:(Ljava/lang/ClassLoader;)Lio/undertow/attribute/ExchangeAttributeParser;
       9: aload_2
      10: invokevirtual #43                 // Method io/undertow/attribute/ExchangeAttributeParser.parse:(Ljava/lang/String;)Lio/undertow/attribute/ExchangeAttribute;
      13: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: areturn

  public io.undertow.server.handlers.proxy.ProxyHandler removeRequestHeader(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestHeaders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: areturn

  static void copyHeaders(io.undertow.util.HeaderMap, io.undertow.util.HeaderMap);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method io/undertow/util/HeaderMap.fastIterateNonEmpty:()J
       4: lstore_2
       5: lload_2
       6: ldc2_w        #46                 // long -1l
       9: lcmp
      10: ifeq          53
      13: aload_1
      14: lload_2
      15: invokevirtual #48                 // Method io/undertow/util/HeaderMap.fiCurrent:(J)Lio/undertow/util/HeaderValues;
      18: astore        4
      20: aload_0
      21: aload         4
      23: invokevirtual #49                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      26: invokevirtual #50                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      29: ifne          44
      32: aload_0
      33: aload         4
      35: invokevirtual #49                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      38: aload         4
      40: invokevirtual #51                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
      43: pop
      44: aload_1
      45: lload_2
      46: invokevirtual #52                 // Method io/undertow/util/HeaderMap.fiNextNonEmpty:(J)J
      49: lstore_2
      50: goto          5
      53: return

  public io.undertow.server.handlers.proxy.ProxyClient getProxyClient();
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: areturn

  public int getMaxConnectionRetries();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maxConnectionRetries:I
       4: ireturn

  private static java.lang.String encodeUrlPart(java.lang.String, io.undertow.server.HttpServerExchange) throws java.io.UnsupportedEncodingException;
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_0
      10: invokevirtual #53                 // Method java/lang/String.length:()I
      13: if_icmpge     253
      16: aload_0
      17: iload         4
      19: invokevirtual #54                 // Method java/lang/String.charAt:(I)C
      22: istore        5
      24: iload         5
      26: bipush        97
      28: if_icmplt     38
      31: iload         5
      33: bipush        122
      35: if_icmple     101
      38: iload         5
      40: bipush        65
      42: if_icmplt     52
      45: iload         5
      47: bipush        90
      49: if_icmple     101
      52: iload         5
      54: bipush        48
      56: if_icmplt     66
      59: iload         5
      61: bipush        57
      63: if_icmple     101
      66: iload         5
      68: bipush        46
      70: if_icmpeq     101
      73: iload         5
      75: bipush        45
      77: if_icmpeq     101
      80: iload         5
      82: bipush        42
      84: if_icmpeq     101
      87: iload         5
      89: bipush        95
      91: if_icmpeq     101
      94: iload         5
      96: bipush        47
      98: if_icmpne     115
     101: aload_2
     102: ifnull        247
     105: aload_2
     106: iload         5
     108: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     111: pop
     112: goto          247
     115: aload_2
     116: ifnonnull     157
     119: new           #56                 // class java/lang/StringBuilder
     122: dup
     123: aload_0
     124: iconst_0
     125: iload         4
     127: invokevirtual #57                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     130: invokespecial #58                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     133: astore_2
     134: aload_1
     135: invokevirtual #59                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     138: invokevirtual #60                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     141: getstatic     #61                 // Field io/undertow/UndertowOptions.URL_CHARSET:Lorg/xnio/Option;
     144: getstatic     #62                 // Field UTF_8:Ljava/lang/String;
     147: invokevirtual #63                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     150: checkcast     #64                 // class java/lang/String
     153: invokestatic  #65                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     156: astore_3
     157: iload         5
     159: bipush        127
     161: if_icmpge     197
     164: aload_3
     165: invokevirtual #66                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     168: getstatic     #62                 // Field UTF_8:Ljava/lang/String;
     171: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     174: ifeq          197
     177: aload_2
     178: bipush        37
     180: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     183: pop
     184: aload_2
     185: iload         5
     187: invokestatic  #68                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     190: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: pop
     194: goto          247
     197: aload_3
     198: iload         5
     200: invokestatic  #70                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
     203: invokevirtual #71                 // Method java/nio/charset/Charset.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
     206: astore        6
     208: aload         6
     210: invokevirtual #72                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     213: ifeq          247
     216: aload         6
     218: invokevirtual #73                 // Method java/nio/ByteBuffer.get:()B
     221: istore        7
     223: aload_2
     224: bipush        37
     226: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     229: pop
     230: aload_2
     231: iload         7
     233: sipush        255
     236: iand
     237: invokestatic  #68                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     240: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: pop
     244: goto          208
     247: iinc          4, 1
     250: goto          7
     253: aload_2
     254: ifnonnull     261
     257: aload_0
     258: goto          265
     261: aload_2
     262: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: areturn

  static io.undertow.server.handlers.proxy.ProxyClient access$000(io.undertow.server.handlers.proxy.ProxyHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: areturn

  static io.undertow.util.AttachmentKey access$100();
    Code:
       0: getstatic     #7                  // Field CONNECTION:Lio/undertow/util/AttachmentKey;
       3: areturn

  static java.util.Map access$200(io.undertow.server.handlers.proxy.ProxyHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestHeaders:Ljava/util/Map;
       4: areturn

  static boolean access$300(io.undertow.server.handlers.proxy.ProxyHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rewriteHostHeader:Z
       4: ireturn

  static boolean access$400(io.undertow.server.handlers.proxy.ProxyHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field reuseXForwarded:Z
       4: ireturn

  static java.lang.String access$500(java.lang.String, io.undertow.server.HttpServerExchange) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method encodeUrlPart:(Ljava/lang/String;Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
       5: areturn

  static org.jboss.logging.Logger access$600();
    Code:
       0: getstatic     #2                  // Field log:Lorg/jboss/logging/Logger;
       3: areturn

  static io.undertow.util.AttachmentKey access$800();
    Code:
       0: getstatic     #1                  // Field EXCHANGE:Lio/undertow/util/AttachmentKey;
       3: areturn

  static {};
    Code:
       0: ldc           #75                 // String io.undertow.server.handlers.proxy.maxRetries
       2: iconst_1
       3: invokestatic  #76                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       6: invokevirtual #77                 // Method java/lang/Integer.intValue:()I
       9: putstatic     #10                 // Field DEFAULT_MAX_RETRY_ATTEMPTS:I
      12: ldc           #78                 // class io/undertow/server/handlers/proxy/ProxyHandler
      14: invokevirtual #79                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      17: invokevirtual #80                 // Method java/lang/Package.getName:()Ljava/lang/String;
      20: invokestatic  #81                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      23: putstatic     #2                  // Field log:Lorg/jboss/logging/Logger;
      26: getstatic     #82                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      29: invokevirtual #66                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      32: putstatic     #62                 // Field UTF_8:Ljava/lang/String;
      35: ldc           #83                 // class io/undertow/server/handlers/proxy/ProxyConnection
      37: invokestatic  #84                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      40: putstatic     #7                  // Field CONNECTION:Lio/undertow/util/AttachmentKey;
      43: ldc           #85                 // class io/undertow/server/HttpServerExchange
      45: invokestatic  #84                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      48: putstatic     #1                  // Field EXCHANGE:Lio/undertow/util/AttachmentKey;
      51: ldc           #86                 // class org/xnio/XnioExecutor$Key
      53: invokestatic  #84                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      56: putstatic     #32                 // Field TIMEOUT_KEY:Lio/undertow/util/AttachmentKey;
      59: return
}
