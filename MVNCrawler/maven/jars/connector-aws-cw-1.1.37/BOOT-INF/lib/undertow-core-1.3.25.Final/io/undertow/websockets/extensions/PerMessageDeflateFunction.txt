Compiled from "PerMessageDeflateFunction.java"
public class io.undertow.websockets.extensions.PerMessageDeflateFunction implements io.undertow.websockets.extensions.ExtensionFunction {
  public static final byte[] TAIL;

  private final int deflaterLevel;

  private final boolean compressContextTakeover;

  private final boolean decompressContextTakeover;

  private final java.util.zip.Inflater decompress;

  private final java.util.zip.Deflater compress;

  private io.undertow.websockets.core.StreamSourceFrameChannel currentReadChannel;

  public io.undertow.websockets.extensions.PerMessageDeflateFunction(int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field deflaterLevel:I
       9: aload_0
      10: new           #3                  // class java/util/zip/Inflater
      13: dup
      14: iconst_1
      15: invokespecial #4                  // Method java/util/zip/Inflater."<init>":(Z)V
      18: putfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      21: aload_0
      22: new           #6                  // class java/util/zip/Deflater
      25: dup
      26: aload_0
      27: getfield      #2                  // Field deflaterLevel:I
      30: iconst_1
      31: invokespecial #7                  // Method java/util/zip/Deflater."<init>":(IZ)V
      34: putfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      37: aload_0
      38: iload_2
      39: putfield      #9                  // Field compressContextTakeover:Z
      42: aload_0
      43: iload_3
      44: putfield      #10                 // Field decompressContextTakeover:Z
      47: return

  public int writeRsv(int);
    Code:
       0: iload_1
       1: iconst_4
       2: ior
       3: ireturn

  public boolean hasExtensionOpCode();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized io.undertow.connector.PooledByteBuffer transformForWrite(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method io/undertow/websockets/core/WebSocketChannel.getExtensionSinkChannel:()Lio/undertow/websockets/core/StreamSinkFrameChannel;
       4: astore_3
       5: aload_2
       6: invokevirtual #13                 // Method io/undertow/websockets/core/WebSocketChannel.isExtensionSinkLastFrame:()Z
       9: istore        4
      11: aload_1
      12: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      17: astore        5
      19: aload         5
      21: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      24: ifeq          58
      27: aload_0
      28: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      31: aload         5
      33: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      36: aload         5
      38: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I
      41: aload         5
      43: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      46: iadd
      47: aload         5
      49: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      52: invokevirtual #20                 // Method java/util/zip/Deflater.setInput:([BII)V
      55: goto          70
      58: aload_0
      59: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      62: aload         5
      64: invokestatic  #21                 // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
      67: invokevirtual #22                 // Method java/util/zip/Deflater.setInput:([B)V
      70: aload_0
      71: aload_3
      72: invokevirtual #23                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      75: iconst_0
      76: invokespecial #24                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      79: astore        6
      81: aload         6
      83: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      88: astore        7
      90: iconst_1
      91: istore        8
      93: aload_0
      94: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      97: invokevirtual #25                 // Method java/util/zip/Deflater.needsInput:()Z
     100: ifne          113
     103: aload_0
     104: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
     107: invokevirtual #26                 // Method java/util/zip/Deflater.finished:()Z
     110: ifeq          131
     113: aload         7
     115: invokevirtual #27                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     118: ifeq          131
     121: iload         8
     123: ifeq          227
     126: iload         4
     128: ifeq          227
     131: iconst_0
     132: istore        8
     134: aload         7
     136: invokevirtual #27                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     139: ifne          170
     142: aload_0
     143: aload         6
     145: aload_3
     146: invokevirtual #23                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     149: aload         7
     151: invokevirtual #28                 // Method java/nio/ByteBuffer.capacity:()I
     154: iconst_2
     155: imul
     156: invokespecial #29                 // Method largerBuffer:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
     159: astore        6
     161: aload         6
     163: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     168: astore        7
     170: aload_0
     171: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
     174: aload         7
     176: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     179: aload         7
     181: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I
     184: aload         7
     186: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
     189: iadd
     190: aload         7
     192: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     195: iload         4
     197: ifeq          204
     200: iconst_2
     201: goto          205
     204: iconst_0
     205: invokevirtual #30                 // Method java/util/zip/Deflater.deflate:([BIII)I
     208: istore        9
     210: aload         7
     212: aload         7
     214: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
     217: iload         9
     219: iadd
     220: invokevirtual #31                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     223: pop
     224: goto          93
     227: aload_1
     228: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     233: goto          247
     236: astore        10
     238: aload_1
     239: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     244: aload         10
     246: athrow
     247: iload         4
     249: ifeq          273
     252: aload         7
     254: iconst_0
     255: invokevirtual #33                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     258: pop
     259: aload_0
     260: getfield      #9                  // Field compressContextTakeover:Z
     263: ifne          273
     266: aload_0
     267: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
     270: invokevirtual #34                 // Method java/util/zip/Deflater.reset:()V
     273: aload         7
     275: invokevirtual #35                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     278: pop
     279: aload         6
     281: areturn
    Exception table:
       from    to  target type
          93   227   236   any
         236   238   236   any

  private io.undertow.connector.PooledByteBuffer largerBuffer(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel, int);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore        4
       8: aload         4
      10: invokevirtual #35                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      13: pop
      14: aload_0
      15: aload_2
      16: iload_3
      17: invokespecial #24                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      20: astore        5
      22: aload         5
      24: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      29: aload         4
      31: invokevirtual #36                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_1
      36: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      41: aload         5
      43: areturn

  private io.undertow.connector.PooledByteBuffer allocateBufferWithArray(io.undertow.websockets.core.WebSocketChannel, int);
    Code:
       0: iload_2
       1: ifle          16
       4: new           #37                 // class io/undertow/util/ImmediatePooledByteBuffer
       7: dup
       8: iload_2
       9: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      12: invokespecial #39                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      15: areturn
      16: aload_1
      17: invokevirtual #40                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      20: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      25: astore_3
      26: aload_3
      27: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      32: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      35: ifeq          40
      38: aload_3
      39: areturn
      40: aload_3
      41: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      46: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      49: istore        4
      51: aload_3
      52: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      57: aload_0
      58: aload_1
      59: iload         4
      61: invokespecial #24                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      64: areturn

  public synchronized io.undertow.connector.PooledByteBuffer transformForRead(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel, boolean) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #42                 // Method io/undertow/websockets/core/WebSocketChannel.getExtensionSourceChannel:()Lio/undertow/websockets/core/StreamSourceFrameChannel;
       4: astore        4
       6: aload         4
       8: invokevirtual #43                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getRsv:()I
      11: iconst_4
      12: iand
      13: ifne          18
      16: aload_1
      17: areturn
      18: aload_0
      19: aload         4
      21: invokevirtual #44                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      24: iconst_0
      25: invokespecial #24                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      28: astore        5
      30: aload_0
      31: getfield      #45                 // Field currentReadChannel:Lio/undertow/websockets/core/StreamSourceFrameChannel;
      34: ifnull        69
      37: aload_0
      38: getfield      #45                 // Field currentReadChannel:Lio/undertow/websockets/core/StreamSourceFrameChannel;
      41: aload         4
      43: if_acmpeq     69
      46: aload_0
      47: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      50: getstatic     #46                 // Field TAIL:[B
      53: invokevirtual #47                 // Method java/util/zip/Inflater.setInput:([B)V
      56: aload_0
      57: aload         4
      59: invokevirtual #44                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
      62: aload         5
      64: invokespecial #48                 // Method decompress:(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
      67: astore        5
      69: aload_1
      70: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      75: astore        6
      77: aload         6
      79: invokevirtual #15                 // Method java/nio/ByteBuffer.hasArray:()Z
      82: ifeq          116
      85: aload_0
      86: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      89: aload         6
      91: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      94: aload         6
      96: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I
      99: aload         6
     101: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
     104: iadd
     105: aload         6
     107: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     110: invokevirtual #49                 // Method java/util/zip/Inflater.setInput:([BII)V
     113: goto          128
     116: aload_0
     117: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
     120: aload         6
     122: invokestatic  #21                 // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
     125: invokevirtual #47                 // Method java/util/zip/Inflater.setInput:([B)V
     128: aload_0
     129: aload         4
     131: invokevirtual #44                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     134: aload         5
     136: invokespecial #48                 // Method decompress:(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     139: astore        5
     141: aload_1
     142: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     147: goto          161
     150: astore        7
     152: aload_1
     153: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     158: aload         7
     160: athrow
     161: iload_3
     162: ifeq          196
     165: aload_0
     166: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
     169: getstatic     #46                 // Field TAIL:[B
     172: invokevirtual #47                 // Method java/util/zip/Inflater.setInput:([B)V
     175: aload_0
     176: aload         4
     178: invokevirtual #44                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getWebSocketChannel:()Lio/undertow/websockets/core/WebSocketChannel;
     181: aload         5
     183: invokespecial #48                 // Method decompress:(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     186: astore        5
     188: aload_0
     189: aconst_null
     190: putfield      #45                 // Field currentReadChannel:Lio/undertow/websockets/core/StreamSourceFrameChannel;
     193: goto          202
     196: aload_0
     197: aload         4
     199: putfield      #45                 // Field currentReadChannel:Lio/undertow/websockets/core/StreamSourceFrameChannel;
     202: aload         5
     204: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     209: invokevirtual #35                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     212: pop
     213: aload         5
     215: areturn
    Exception table:
       from    to  target type
         128   141   150   any
         150   152   150   any

  private io.undertow.connector.PooledByteBuffer decompress(io.undertow.websockets.core.WebSocketChannel, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_0
       8: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      11: invokevirtual #50                 // Method java/util/zip/Inflater.needsInput:()Z
      14: ifne          126
      17: aload_0
      18: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      21: invokevirtual #51                 // Method java/util/zip/Inflater.finished:()Z
      24: ifne          126
      27: aload_3
      28: invokevirtual #27                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      31: ifne          54
      34: aload_0
      35: aload_2
      36: aload_1
      37: aload_3
      38: invokevirtual #28                 // Method java/nio/ByteBuffer.capacity:()I
      41: iconst_2
      42: imul
      43: invokespecial #29                 // Method largerBuffer:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      46: astore_2
      47: aload_2
      48: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      53: astore_3
      54: aload_0
      55: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      58: aload_3
      59: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      62: aload_3
      63: invokevirtual #17                 // Method java/nio/ByteBuffer.arrayOffset:()I
      66: aload_3
      67: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
      70: iadd
      71: aload_3
      72: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      75: invokevirtual #52                 // Method java/util/zip/Inflater.inflate:([BII)I
      78: istore        4
      80: goto          111
      83: astore        5
      85: getstatic     #54                 // Field io/undertow/websockets/core/WebSocketLogger.EXTENSION_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
      88: aload         5
      90: invokevirtual #55                 // Method java/util/zip/DataFormatException.getMessage:()Ljava/lang/String;
      93: aload         5
      95: invokeinterface #56,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     100: getstatic     #57                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
     103: aload         5
     105: invokeinterface #58,  2           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.badCompressedPayload:(Ljava/util/zip/DataFormatException;)Ljava/io/IOException;
     110: athrow
     111: aload_3
     112: aload_3
     113: invokevirtual #18                 // Method java/nio/ByteBuffer.position:()I
     116: iload         4
     118: iadd
     119: invokevirtual #31                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     122: pop
     123: goto          7
     126: aload_2
     127: areturn
    Exception table:
       from    to  target type
          54    80    83   Class java/util/zip/DataFormatException

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
       4: invokevirtual #59                 // Method java/util/zip/Deflater.end:()V
       7: aload_0
       8: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      11: invokevirtual #60                 // Method java/util/zip/Inflater.end:()V
      14: return

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: bastore
      11: dup
      12: iconst_2
      13: iconst_m1
      14: bastore
      15: dup
      16: iconst_3
      17: iconst_m1
      18: bastore
      19: putstatic     #46                 // Field TAIL:[B
      22: return
}
