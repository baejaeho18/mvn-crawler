Compiled from "IPAddressAccessControlHandler.java"
public class io.undertow.server.handlers.IPAddressAccessControlHandler$Builder implements io.undertow.server.handlers.builder.HandlerBuilder {
  public io.undertow.server.handlers.IPAddressAccessControlHandler$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name();
    Code:
       0: ldc           #2                  // String ip-access-control
       2: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> parameters();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #5                  // String acl
      11: ldc           #6                  // class "[Ljava/lang/String;"
      13: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #8                  // String failure-status
      22: getstatic     #9                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      25: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_1
      32: ldc           #10                 // String default-allow
      34: getstatic     #11                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      37: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_1
      44: areturn

  public java.util.Set<java.lang.String> requiredParameters();
    Code:
       0: ldc           #5                  // String acl
       2: invokestatic  #12                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       5: areturn

  public java.lang.String defaultParameter();
    Code:
       0: ldc           #5                  // String acl
       2: areturn

  public io.undertow.server.HandlerWrapper build(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #5                  // String acl
       3: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class "[Ljava/lang/String;"
      11: checkcast     #6                  // class "[Ljava/lang/String;"
      14: astore_2
      15: aload_1
      16: ldc           #10                 // String default-allow
      18: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #14                 // class java/lang/Boolean
      26: astore_3
      27: aload_1
      28: ldc           #8                  // String failure-status
      30: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #15                 // class java/lang/Integer
      38: astore        4
      40: new           #16                 // class java/util/ArrayList
      43: dup
      44: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      47: astore        5
      49: aload_2
      50: astore        6
      52: aload         6
      54: arraylength
      55: istore        7
      57: iconst_0
      58: istore        8
      60: iload         8
      62: iload         7
      64: if_icmpge     202
      67: aload         6
      69: iload         8
      71: aaload
      72: astore        9
      74: aload         9
      76: ldc           #18                 // String
      78: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      81: astore        10
      83: aload         10
      85: arraylength
      86: iconst_2
      87: if_icmpeq     101
      90: getstatic     #20                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      93: aload         9
      95: invokeinterface #21,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidAclRule:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     100: athrow
     101: aload         10
     103: iconst_1
     104: aaload
     105: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
     108: ldc           #23                 // String allow
     110: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifeq          143
     116: aload         5
     118: new           #25                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$Holder
     121: dup
     122: aload         10
     124: iconst_0
     125: aaload
     126: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
     129: iconst_0
     130: aconst_null
     131: invokespecial #26                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$Holder."<init>":(Ljava/lang/String;ZLio/undertow/server/handlers/IPAddressAccessControlHandler$1;)V
     134: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     139: pop
     140: goto          196
     143: aload         10
     145: iconst_1
     146: aaload
     147: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
     150: ldc           #28                 // String deny
     152: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     155: ifeq          185
     158: aload         5
     160: new           #25                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$Holder
     163: dup
     164: aload         10
     166: iconst_0
     167: aaload
     168: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
     171: iconst_1
     172: aconst_null
     173: invokespecial #26                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$Holder."<init>":(Ljava/lang/String;ZLio/undertow/server/handlers/IPAddressAccessControlHandler$1;)V
     176: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     181: pop
     182: goto          196
     185: getstatic     #20                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     188: aload         9
     190: invokeinterface #21,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidAclRule:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     195: athrow
     196: iinc          8, 1
     199: goto          60
     202: new           #29                 // class io/undertow/server/handlers/IPAddressAccessControlHandler$Wrapper
     205: dup
     206: aload         5
     208: aload_3
     209: ifnonnull     216
     212: iconst_0
     213: goto          220
     216: aload_3
     217: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
     220: aload         4
     222: ifnonnull     231
     225: sipush        403
     228: goto          236
     231: aload         4
     233: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
     236: aconst_null
     237: invokespecial #33                 // Method io/undertow/server/handlers/IPAddressAccessControlHandler$Wrapper."<init>":(Ljava/util/List;ZILio/undertow/server/handlers/IPAddressAccessControlHandler$1;)V
     240: areturn
}
