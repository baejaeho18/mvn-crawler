Compiled from "JvmRouteHandler.java"
class io.undertow.server.JvmRouteHandler$JvmRouteWrapper implements io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSinkConduit> {
  final io.undertow.server.JvmRouteHandler this$0;

  private io.undertow.server.JvmRouteHandler$JvmRouteWrapper(io.undertow.server.JvmRouteHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/JvmRouteHandler;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public org.xnio.conduits.StreamSinkConduit wrap(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getResponseCookies:()Ljava/util/Map;
       4: aload_0
       5: getfield      #2                  // Field this$0:Lio/undertow/server/JvmRouteHandler;
       8: invokestatic  #5                  // Method io/undertow/server/JvmRouteHandler.access$100:(Lio/undertow/server/JvmRouteHandler;)Ljava/lang/String;
      11: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #7                  // class io/undertow/server/handlers/Cookie
      19: astore_3
      20: aload_3
      21: ifnull        72
      24: new           #8                  // class java/lang/StringBuilder
      27: dup
      28: aload_3
      29: invokeinterface #9,  1            // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      34: invokespecial #10                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      37: astore        4
      39: aload         4
      41: bipush        46
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      46: pop
      47: aload         4
      49: aload_0
      50: getfield      #2                  // Field this$0:Lio/undertow/server/JvmRouteHandler;
      53: invokestatic  #12                 // Method io/undertow/server/JvmRouteHandler.access$200:(Lio/undertow/server/JvmRouteHandler;)Ljava/lang/String;
      56: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_3
      61: aload         4
      63: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #15,  2           // InterfaceMethod io/undertow/server/handlers/Cookie.setValue:(Ljava/lang/String;)Lio/undertow/server/handlers/Cookie;
      71: pop
      72: aload_1
      73: invokeinterface #16,  1           // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
      78: checkcast     #17                 // class org/xnio/conduits/StreamSinkConduit
      81: areturn

  public org.xnio.conduits.Conduit wrap(io.undertow.util.ConduitFactory, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #18                 // Method wrap:(Lio/undertow/util/ConduitFactory;Lio/undertow/server/HttpServerExchange;)Lorg/xnio/conduits/StreamSinkConduit;
       6: areturn

  io.undertow.server.JvmRouteHandler$JvmRouteWrapper(io.undertow.server.JvmRouteHandler, io.undertow.server.JvmRouteHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/server/JvmRouteHandler;)V
       5: return
}
