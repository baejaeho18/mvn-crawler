Compiled from "Connectors.java"
public class io.undertow.server.Connectors {
  public io.undertow.server.Connectors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void flattenCookies(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method io/undertow/server/HttpServerExchange.getResponseCookiesInternal:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        66
       9: aload_1
      10: invokeinterface #3,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #4,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          66
      30: aload_2
      31: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #7                  // class java/util/Map$Entry
      39: astore_3
      40: aload_0
      41: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      44: getstatic     #9                  // Field io/undertow/util/Headers.SET_COOKIE:Lio/undertow/util/HttpString;
      47: aload_3
      48: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #11                 // class io/undertow/server/handlers/Cookie
      56: invokestatic  #12                 // Method getCookieString:(Lio/undertow/server/handlers/Cookie;)Ljava/lang/String;
      59: invokevirtual #13                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      62: pop
      63: goto          21
      66: return

  public static void ungetRequestBytes(io.undertow.server.HttpServerExchange, io.undertow.connector.PooledByteBuffer...);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #16                 // class "[Lio/undertow/connector/PooledByteBuffer;"
      10: astore_2
      11: aload_2
      12: ifnonnull     33
      15: aload_1
      16: arraylength
      17: anewarray     #17                 // class io/undertow/connector/PooledByteBuffer
      20: astore_3
      21: aload_1
      22: iconst_0
      23: aload_3
      24: iconst_0
      25: aload_1
      26: arraylength
      27: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: goto          61
      33: aload_2
      34: arraylength
      35: aload_1
      36: arraylength
      37: iadd
      38: anewarray     #17                 // class io/undertow/connector/PooledByteBuffer
      41: astore_3
      42: aload_2
      43: iconst_0
      44: aload_3
      45: iconst_0
      46: aload_2
      47: arraylength
      48: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: aload_1
      52: iconst_0
      53: aload_3
      54: aload_2
      55: arraylength
      56: aload_1
      57: arraylength
      58: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: aload_0
      62: getstatic     #14                 // Field io/undertow/server/HttpServerExchange.BUFFERED_REQUEST_DATA:Lio/undertow/util/AttachmentKey;
      65: aload_3
      66: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_0
      71: new           #20                 // class io/undertow/server/Connectors$1
      74: dup
      75: invokespecial #21                 // Method io/undertow/server/Connectors$1."<init>":()V
      78: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      81: pop
      82: return

  public static void terminateRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.terminateRequest:()V
       4: return

  public static void terminateResponse(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.terminateResponse:()Lio/undertow/server/HttpServerExchange;
       4: pop
       5: return

  public static void resetRequestChannel(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.resetRequestChannel:()V
       4: return

  private static java.lang.String getCookieString(io.undertow.server.handlers.Cookie);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getVersion:()I
       6: lookupswitch  { // 2
                     0: 32
                     1: 37
               default: 37
          }
      32: aload_0
      33: invokestatic  #27                 // Method addVersion0ResponseCookieToExchange:(Lio/undertow/server/handlers/Cookie;)Ljava/lang/String;
      36: areturn
      37: aload_0
      38: invokestatic  #28                 // Method addVersion1ResponseCookieToExchange:(Lio/undertow/server/handlers/Cookie;)Ljava/lang/String;
      41: areturn

  public static void setRequestStartTime(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method java/lang/System.nanoTime:()J
       4: invokevirtual #30                 // Method io/undertow/server/HttpServerExchange.setRequestStartTime:(J)Lio/undertow/server/HttpServerExchange;
       7: pop
       8: return

  private static java.lang.String addVersion0ResponseCookieToExchange(io.undertow.server.handlers.Cookie);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      10: invokespecial #33                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      13: astore_1
      14: aload_1
      15: ldc           #34                 // String =
      17: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: aload_0
      23: invokeinterface #36,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_0
      33: invokeinterface #37,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      38: ifnull        59
      41: aload_1
      42: ldc           #38                 // String ; path=
      44: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: aload_0
      50: invokeinterface #37,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      55: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_0
      60: invokeinterface #39,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
      65: ifnull        86
      68: aload_1
      69: ldc           #40                 // String ; domain=
      71: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_1
      76: aload_0
      77: invokeinterface #39,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
      82: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_0
      87: invokeinterface #41,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.isSecure:()Z
      92: ifeq          102
      95: aload_1
      96: ldc           #42                 // String ; secure
      98: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_0
     103: invokeinterface #43,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.isHttpOnly:()Z
     108: ifeq          118
     111: aload_1
     112: ldc           #44                 // String ; HttpOnly
     114: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: aload_0
     119: invokeinterface #45,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getExpires:()Ljava/util/Date;
     124: ifnull        151
     127: aload_1
     128: ldc           #46                 // String ; Expires=
     130: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: aload_1
     135: aload_0
     136: invokeinterface #45,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getExpires:()Ljava/util/Date;
     141: invokestatic  #47                 // Method io/undertow/util/DateUtils.toOldCookieDateString:(Ljava/util/Date;)Ljava/lang/String;
     144: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: pop
     148: goto          293
     151: aload_0
     152: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     157: ifnull        293
     160: aload_0
     161: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     166: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     169: iflt          190
     172: aload_1
     173: ldc           #50                 // String ; Max-Age=
     175: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: pop
     179: aload_1
     180: aload_0
     181: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     186: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     189: pop
     190: aload_0
     191: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     196: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     199: ifne          234
     202: new           #52                 // class java/util/Date
     205: dup
     206: invokespecial #53                 // Method java/util/Date."<init>":()V
     209: astore_2
     210: aload_2
     211: lconst_0
     212: invokevirtual #54                 // Method java/util/Date.setTime:(J)V
     215: aload_1
     216: ldc           #46                 // String ; Expires=
     218: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: pop
     222: aload_1
     223: aload_2
     224: invokestatic  #47                 // Method io/undertow/util/DateUtils.toOldCookieDateString:(Ljava/util/Date;)Ljava/lang/String;
     227: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: pop
     231: goto          293
     234: aload_0
     235: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     240: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     243: ifle          293
     246: new           #52                 // class java/util/Date
     249: dup
     250: invokespecial #53                 // Method java/util/Date."<init>":()V
     253: astore_2
     254: aload_2
     255: aload_2
     256: invokevirtual #55                 // Method java/util/Date.getTime:()J
     259: aload_0
     260: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     265: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     268: i2l
     269: ldc2_w        #56                 // long 1000l
     272: lmul
     273: ladd
     274: invokevirtual #54                 // Method java/util/Date.setTime:(J)V
     277: aload_1
     278: ldc           #46                 // String ; Expires=
     280: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: pop
     284: aload_1
     285: aload_2
     286: invokestatic  #47                 // Method io/undertow/util/DateUtils.toOldCookieDateString:(Ljava/util/Date;)Ljava/lang/String;
     289: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: pop
     293: aload_1
     294: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: areturn

  private static java.lang.String addVersion1ResponseCookieToExchange(io.undertow.server.handlers.Cookie);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getName:()Ljava/lang/String;
      10: invokespecial #33                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      13: astore_1
      14: aload_1
      15: ldc           #34                 // String =
      17: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: aload_0
      23: invokeinterface #36,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: ldc           #59                 // String ; Version=1
      35: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_0
      40: invokeinterface #37,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      45: ifnull        66
      48: aload_1
      49: ldc           #60                 // String ; Path=
      51: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: aload_0
      57: invokeinterface #37,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getPath:()Ljava/lang/String;
      62: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_0
      67: invokeinterface #39,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
      72: ifnull        93
      75: aload_1
      76: ldc           #61                 // String ; Domain=
      78: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: pop
      82: aload_1
      83: aload_0
      84: invokeinterface #39,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getDomain:()Ljava/lang/String;
      89: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_0
      94: invokeinterface #62,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.isDiscard:()Z
      99: ifeq          109
     102: aload_1
     103: ldc           #63                 // String ; Discard
     105: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: pop
     109: aload_0
     110: invokeinterface #41,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.isSecure:()Z
     115: ifeq          125
     118: aload_1
     119: ldc           #64                 // String ; Secure
     121: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_0
     126: invokeinterface #43,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.isHttpOnly:()Z
     131: ifeq          141
     134: aload_1
     135: ldc           #44                 // String ; HttpOnly
     137: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: pop
     141: aload_0
     142: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     147: ifnull        180
     150: aload_0
     151: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     156: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
     159: iflt          180
     162: aload_1
     163: ldc           #50                 // String ; Max-Age=
     165: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_1
     170: aload_0
     171: invokeinterface #48,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getMaxAge:()Ljava/lang/Integer;
     176: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: pop
     180: aload_0
     181: invokeinterface #45,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getExpires:()Ljava/util/Date;
     186: ifnull        210
     189: aload_1
     190: ldc           #46                 // String ; Expires=
     192: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: aload_1
     197: aload_0
     198: invokeinterface #45,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getExpires:()Ljava/util/Date;
     203: invokestatic  #65                 // Method io/undertow/util/DateUtils.toDateString:(Ljava/util/Date;)Ljava/lang/String;
     206: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: invokeinterface #66,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getComment:()Ljava/lang/String;
     216: ifnull        249
     219: aload_0
     220: invokeinterface #66,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getComment:()Ljava/lang/String;
     225: invokevirtual #67                 // Method java/lang/String.isEmpty:()Z
     228: ifne          249
     231: aload_1
     232: ldc           #68                 // String ; Comment=
     234: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: pop
     238: aload_1
     239: aload_0
     240: invokeinterface #66,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getComment:()Ljava/lang/String;
     245: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: pop
     249: aload_1
     250: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: areturn

  public static void executeRootHandler(io.undertow.server.HttpHandler, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.setInCall:(Z)Lio/undertow/server/HttpServerExchange;
       5: pop
       6: aload_0
       7: aload_1
       8: invokeinterface #70,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      13: aload_1
      14: iconst_0
      15: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.setInCall:(Z)Lio/undertow/server/HttpServerExchange;
      18: pop
      19: aload_1
      20: invokevirtual #71                 // Method io/undertow/server/HttpServerExchange.runResumeReadWrite:()Z
      23: istore_2
      24: aload_1
      25: invokevirtual #72                 // Method io/undertow/server/HttpServerExchange.isDispatched:()Z
      28: ifeq          113
      31: iload_2
      32: ifeq          57
      35: getstatic     #73                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      38: invokeinterface #74,  1           // InterfaceMethod io/undertow/UndertowLogger.resumedAndDispatched:()V
      43: aload_1
      44: sipush        500
      47: invokevirtual #75                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      50: pop
      51: aload_1
      52: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      55: pop
      56: return
      57: aload_1
      58: invokevirtual #77                 // Method io/undertow/server/HttpServerExchange.getDispatchTask:()Ljava/lang/Runnable;
      61: astore_3
      62: aload_1
      63: invokevirtual #78                 // Method io/undertow/server/HttpServerExchange.getDispatchExecutor:()Ljava/util/concurrent/Executor;
      66: astore        4
      68: aload_1
      69: aconst_null
      70: invokevirtual #79                 // Method io/undertow/server/HttpServerExchange.setDispatchExecutor:(Ljava/util/concurrent/Executor;)Lio/undertow/server/HttpServerExchange;
      73: pop
      74: aload_1
      75: invokevirtual #80                 // Method io/undertow/server/HttpServerExchange.unDispatch:()Lio/undertow/server/HttpServerExchange;
      78: pop
      79: aload_3
      80: ifnull        110
      83: aload         4
      85: ifnonnull     98
      88: aload_1
      89: invokevirtual #81                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      92: invokevirtual #82                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      95: goto          100
      98: aload         4
     100: astore        4
     102: aload         4
     104: aload_3
     105: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     110: goto          122
     113: iload_2
     114: ifne          122
     117: aload_1
     118: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
     121: pop
     122: goto          162
     125: astore_2
     126: aload_1
     127: iconst_0
     128: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.setInCall:(Z)Lio/undertow/server/HttpServerExchange;
     131: pop
     132: aload_1
     133: invokevirtual #85                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
     136: ifne          147
     139: aload_1
     140: sipush        500
     143: invokevirtual #75                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
     146: pop
     147: getstatic     #73                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     150: aload_2
     151: aload_1
     152: invokeinterface #87,  3           // InterfaceMethod io/undertow/UndertowLogger.undertowRequestFailed:(Ljava/lang/Throwable;Lio/undertow/server/HttpServerExchange;)V
     157: aload_1
     158: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
     161: pop
     162: return
    Exception table:
       from    to  target type
           0    56   125   Class java/lang/Throwable
          57   122   125   Class java/lang/Throwable

  public static void setExchangeRequestPath(io.undertow.server.HttpServerExchange, java.lang.String, java.lang.String, boolean, boolean, java.lang.StringBuilder);
    Code:
       0: iconst_0
       1: istore        6
       3: iconst_0
       4: istore        7
       6: iload         7
       8: aload_1
       9: invokevirtual #88                 // Method java/lang/String.length:()I
      12: if_icmpge     296
      15: aload_1
      16: iload         7
      18: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
      21: istore        8
      23: iload         8
      25: bipush        63
      27: if_icmpne     110
      30: aload_1
      31: iconst_0
      32: iload         7
      34: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: astore        10
      39: iload         6
      41: ifeq          59
      44: aload         10
      46: aload_2
      47: iload         4
      49: aload         5
      51: invokestatic  #91                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
      54: astore        9
      56: goto          63
      59: aload         10
      61: astore        9
      63: aload_0
      64: aload         9
      66: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      69: pop
      70: aload_0
      71: aload         9
      73: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      76: pop
      77: aload_0
      78: aload         10
      80: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
      83: pop
      84: aload_1
      85: iload         7
      87: iconst_1
      88: iadd
      89: invokevirtual #95                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      92: astore        11
      94: aload_0
      95: aload         11
      97: invokevirtual #96                 // Method io/undertow/server/HttpServerExchange.setQueryString:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     100: pop
     101: aload         11
     103: aload_0
     104: aload_2
     105: iload_3
     106: invokestatic  #97                 // Method io/undertow/util/URLUtils.parseQueryString:(Ljava/lang/String;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     109: return
     110: iload         8
     112: bipush        59
     114: if_icmpne     273
     117: aload_1
     118: iconst_0
     119: iload         7
     121: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     124: astore        10
     126: iload         6
     128: ifeq          146
     131: aload         10
     133: aload_2
     134: iload         4
     136: aload         5
     138: invokestatic  #91                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
     141: astore        9
     143: goto          150
     146: aload         10
     148: astore        9
     150: aload_0
     151: aload         9
     153: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     156: pop
     157: aload_0
     158: aload         9
     160: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     163: pop
     164: iload         7
     166: istore        11
     168: iload         11
     170: aload_1
     171: invokevirtual #88                 // Method java/lang/String.length:()I
     174: if_icmpge     252
     177: aload_1
     178: iload         11
     180: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
     183: bipush        63
     185: if_icmpne     246
     188: aload_0
     189: aload_1
     190: iconst_0
     191: iload         11
     193: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     196: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     199: pop
     200: aload_1
     201: iload         7
     203: iconst_1
     204: iadd
     205: iload         11
     207: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     210: astore        12
     212: aload         12
     214: aload_0
     215: aload_2
     216: iload_3
     217: invokestatic  #98                 // Method io/undertow/util/URLUtils.parsePathParms:(Ljava/lang/String;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     220: aload_1
     221: iload         11
     223: iconst_1
     224: iadd
     225: invokevirtual #95                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     228: astore        13
     230: aload_0
     231: aload         13
     233: invokevirtual #96                 // Method io/undertow/server/HttpServerExchange.setQueryString:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     236: pop
     237: aload         13
     239: aload_0
     240: aload_2
     241: iload_3
     242: invokestatic  #97                 // Method io/undertow/util/URLUtils.parseQueryString:(Ljava/lang/String;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     245: return
     246: iinc          11, 1
     249: goto          168
     252: aload_0
     253: aload_1
     254: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     257: pop
     258: aload_1
     259: iload         7
     261: iconst_1
     262: iadd
     263: invokevirtual #95                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     266: aload_0
     267: aload_2
     268: iload_3
     269: invokestatic  #98                 // Method io/undertow/util/URLUtils.parsePathParms:(Ljava/lang/String;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     272: return
     273: iload         8
     275: bipush        37
     277: if_icmpeq     287
     280: iload         8
     282: bipush        43
     284: if_icmpne     290
     287: iconst_1
     288: istore        6
     290: iinc          7, 1
     293: goto          6
     296: iload         6
     298: ifeq          315
     301: aload_1
     302: aload_2
     303: iload         4
     305: aload         5
     307: invokestatic  #91                 // Method io/undertow/util/URLUtils.decode:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/StringBuilder;)Ljava/lang/String;
     310: astore        7
     312: goto          318
     315: aload_1
     316: astore        7
     318: aload_0
     319: aload         7
     321: invokevirtual #92                 // Method io/undertow/server/HttpServerExchange.setRequestPath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     324: pop
     325: aload_0
     326: aload         7
     328: invokevirtual #93                 // Method io/undertow/server/HttpServerExchange.setRelativePath:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     331: pop
     332: aload_0
     333: aload_1
     334: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.setRequestURI:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     337: pop
     338: return

  public static org.xnio.channels.StreamSourceChannel getExistingRequestChannel(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #99                 // Field io/undertow/server/HttpServerExchange.requestChannel:Lio/undertow/server/HttpServerExchange$ReadDispatchChannel;
       4: areturn

  public static boolean isEntityBodyAllowed(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method io/undertow/server/HttpServerExchange.getStatusCode:()I
       4: istore_1
       5: iload_1
       6: invokestatic  #101                // Method isEntityBodyAllowed:(I)Z
       9: ireturn

  public static boolean isEntityBodyAllowed(int);
    Code:
       0: iload_0
       1: bipush        100
       3: if_icmplt     15
       6: iload_0
       7: sipush        200
      10: if_icmpge     15
      13: iconst_0
      14: ireturn
      15: iload_0
      16: sipush        204
      19: if_icmpeq     29
      22: iload_0
      23: sipush        304
      26: if_icmpne     31
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  public static void updateResponseBytesSent(io.undertow.server.HttpServerExchange, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #102                // Method io/undertow/server/HttpServerExchange.updateBytesSent:(J)V
       5: return

  public static org.xnio.conduits.ConduitStreamSinkChannel getConduitSinkChannel(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: invokevirtual #103                // Method io/undertow/server/ServerConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: areturn
}
