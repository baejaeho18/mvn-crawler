Compiled from "UndertowLogger.java"
public interface io.undertow.UndertowLogger extends org.jboss.logging.BasicLogger {
  public static final io.undertow.UndertowLogger ROOT_LOGGER;

  public static final io.undertow.UndertowLogger CLIENT_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_LOGGER;

  public static final io.undertow.UndertowLogger SECURITY_LOGGER;

  public static final io.undertow.UndertowLogger PROXY_REQUEST_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_DUMPER_LOGGER;

  public static final io.undertow.UndertowLogger REQUEST_IO_LOGGER;

  public abstract void exceptionProcessingRequest(java.lang.Throwable);

  public abstract void ioExceptionReadingFromChannel(java.io.IOException);

  public abstract void cannotRemoveUploadedFile(java.nio.file.Path);

  public abstract void requestHeaderWasTooLarge(java.net.SocketAddress, int);

  public abstract void requestWasNotFullyConsumed();

  public abstract void invalidTokenReceived(java.lang.String, java.lang.String);

  public abstract void missingAuthorizationToken(java.lang.String);

  public abstract void authenticationFailed(java.lang.String, java.lang.String);

  public abstract void ignoringAjpRequestWithPrefixCode(byte);

  public abstract void ioException(java.io.IOException);

  public abstract void failedToParseRequest(java.lang.Exception);

  public abstract void errorRotatingAccessLog(java.io.IOException);

  public abstract void errorWritingAccessLog(java.io.IOException);

  public abstract void unknownVariable(java.lang.String);

  public abstract void exceptionInvokingCloseListener(io.undertow.server.ServerConnection$CloseListener, java.lang.Throwable);

  public abstract void errorWritingJDBCLog(java.sql.SQLException);

  public abstract void exceptionGeneratingErrorPage(java.lang.Exception, java.lang.String);

  public abstract void exceptionHandlingRequest(java.lang.Throwable, java.lang.String);

  public abstract void couldNotRegisterChangeListener(java.lang.Exception);

  public abstract void jettyALPNNotFound(java.lang.String);

  public abstract void timingOutRequest(java.lang.String);

  public abstract void proxyRequestFailed(java.lang.String, java.lang.Exception);

  public abstract void proxyFailedToConnectToBackend(java.lang.String, java.net.URI);

  public abstract void listenerNotProgressing();

  public abstract void remoteEndpointFailedToSendInitialSettings(int);

  public abstract void parseRequestTimedOut(java.net.SocketAddress);

  public abstract void noALPNFallback(java.net.SocketAddress);

  public abstract void stickySessionCookieLengthTruncated(java.lang.String, java.lang.String);

  public abstract void balancerCreated(int, java.lang.String, boolean, java.lang.String, java.lang.String, boolean, boolean, int, int);

  public abstract void proxyAdvertisementsStarted(java.lang.String, int);

  public abstract void proxyAdvertiseMessagePayload(java.lang.String);

  public abstract void proxyAdvertiseCannotSendMessage(java.lang.Exception, java.net.InetSocketAddress);

  public abstract void mcmpHandlerCreated();

  public abstract void mcmpProcessingError(java.lang.String, java.lang.String);

  public abstract void removingNode(java.lang.String);

  public abstract void registeringContext(java.lang.String, java.lang.String);

  public abstract void registeringContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);

  public abstract void unregisteringContext(java.lang.String, java.lang.String);

  public abstract void nodeIsInError(java.lang.String);

  public abstract void nodeConfigCreated(java.net.URI, java.lang.String, java.lang.String, java.lang.String, boolean, int, int, long, int, int, int, int, boolean);

  public abstract void failedToProcessManagementReq(java.lang.Exception);

  public abstract void failedToSendPingResponse(java.lang.Exception);

  public abstract void failedToSendPingResponseDBG(java.lang.Exception, java.lang.String, java.lang.String);

  public abstract void registeringNode(java.lang.String, java.net.URI);

  public abstract void mcmpKeyValue(io.undertow.util.HttpString, java.lang.String);

  public abstract void httpClientPingTask(java.net.URI);

  public abstract void receivedNodeLoad(java.lang.String, java.lang.String);

  public abstract void mcmpSendingResponse(java.net.InetSocketAddress, int, io.undertow.util.HeaderMap, java.lang.String);

  public abstract void potentialCrossTalking(java.net.InetAddress, java.lang.String, java.lang.String);

  public abstract void oldStylePredicateSyntax(java.lang.String);

  public abstract java.lang.IllegalStateException maxRestartsExceeded(int);

  public abstract void extendedAccessLogPatternParseError(java.lang.Throwable);

  public abstract void extendedAccessLogUnknownToken(java.lang.String);

  public abstract void extendedAccessLogMissingClosing();

  public abstract void extendedAccessLogCannotDecode(java.lang.String);

  public abstract void extendedAccessLogCannotDecodeXParamValue(java.lang.String);

  public abstract void extendedAccessLogBadXParam();

  public abstract void extendedAccessLogEmptyPattern();

  public abstract void failedToWriteJdbcAccessLog(java.sql.SQLException);

  public abstract void failedToWritePreCachedFile();

  public abstract void undertowRequestFailed(java.lang.Throwable, io.undertow.server.HttpServerExchange);

  public abstract void stuckThreadDetected(java.lang.String, long, long, java.util.Date, java.lang.String, int, int, java.lang.Throwable);

  public abstract void stuckThreadCompleted(java.lang.String, long, long, int);

  public abstract void failedToInvokeFailedCallback(io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback, java.lang.Exception);

  public abstract java.lang.IllegalStateException unableToResolveModClusterManagementHost(java.lang.String);

  public abstract void sslReadLoopDetected(io.undertow.protocols.ssl.SslConduit);

  public abstract void sslBufferOverflow(io.undertow.protocols.ssl.SslConduit);

  public abstract void alpnConnectionFailed(java.lang.Exception);

  public abstract void alpnConnectionFailed(org.xnio.ssl.SslConnection);

  public abstract void resumedAndDispatched();

  static {};
    Code:
       0: ldc           #1                  // class io/undertow/UndertowLogger
       2: ldc           #1                  // class io/undertow/UndertowLogger
       4: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       7: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      10: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #1                  // class io/undertow/UndertowLogger
      16: putstatic     #5                  // Field ROOT_LOGGER:Lio/undertow/UndertowLogger;
      19: ldc           #1                  // class io/undertow/UndertowLogger
      21: ldc           #6                  // class io/undertow/client/ClientConnection
      23: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      26: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      29: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #1                  // class io/undertow/UndertowLogger
      35: putstatic     #7                  // Field CLIENT_LOGGER:Lio/undertow/UndertowLogger;
      38: ldc           #1                  // class io/undertow/UndertowLogger
      40: new           #8                  // class java/lang/StringBuilder
      43: dup
      44: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #1                  // class io/undertow/UndertowLogger
      49: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      52: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      55: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #11                 // String .request
      60: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      69: checkcast     #1                  // class io/undertow/UndertowLogger
      72: putstatic     #13                 // Field REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      75: ldc           #1                  // class io/undertow/UndertowLogger
      77: new           #8                  // class java/lang/StringBuilder
      80: dup
      81: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #1                  // class io/undertow/UndertowLogger
      86: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      89: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      92: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #14                 // String .request.security
      97: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     106: checkcast     #1                  // class io/undertow/UndertowLogger
     109: putstatic     #15                 // Field SECURITY_LOGGER:Lio/undertow/UndertowLogger;
     112: ldc           #1                  // class io/undertow/UndertowLogger
     114: new           #8                  // class java/lang/StringBuilder
     117: dup
     118: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #1                  // class io/undertow/UndertowLogger
     123: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     126: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     129: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #16                 // String .proxy
     134: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     143: checkcast     #1                  // class io/undertow/UndertowLogger
     146: putstatic     #17                 // Field PROXY_REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     149: ldc           #1                  // class io/undertow/UndertowLogger
     151: new           #8                  // class java/lang/StringBuilder
     154: dup
     155: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     158: ldc           #1                  // class io/undertow/UndertowLogger
     160: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     163: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     166: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: ldc           #18                 // String .request.dump
     171: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     180: checkcast     #1                  // class io/undertow/UndertowLogger
     183: putstatic     #19                 // Field REQUEST_DUMPER_LOGGER:Lio/undertow/UndertowLogger;
     186: ldc           #1                  // class io/undertow/UndertowLogger
     188: new           #8                  // class java/lang/StringBuilder
     191: dup
     192: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     195: ldc           #1                  // class io/undertow/UndertowLogger
     197: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     200: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
     203: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: ldc           #20                 // String .request.io
     208: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     217: checkcast     #1                  // class io/undertow/UndertowLogger
     220: putstatic     #21                 // Field REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     223: return
}
