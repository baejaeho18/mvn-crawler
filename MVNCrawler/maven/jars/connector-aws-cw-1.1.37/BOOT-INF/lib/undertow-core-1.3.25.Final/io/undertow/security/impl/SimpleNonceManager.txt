Compiled from "SimpleNonceManager.java"
public class io.undertow.security.impl.SimpleNonceManager implements io.undertow.security.api.SessionNonceManager {
  private static final java.lang.String DEFAULT_HASH_ALG;

  private final java.util.Set<java.lang.String> invalidNonces;

  private final java.util.Map<java.lang.String, io.undertow.security.impl.SimpleNonceManager$Nonce> knownNonces;

  private final java.util.Map<io.undertow.security.impl.SimpleNonceManager$NonceHolder, java.lang.String> forwardMapping;

  private final java.util.Random random;

  private final java.lang.String secret;

  private final java.lang.String hashAlg;

  private final int hashLength;

  private final long firstUseTimeOut;

  private final long overallTimeOut;

  private final long cacheTimePostExpiry;

  public io.undertow.security.impl.SimpleNonceManager();
    Code:
       0: aload_0
       1: ldc           #4                  // String MD5
       3: invokespecial #5                  // Method "<init>":(Ljava/lang/String;)V
       6: return

  public io.undertow.security.impl.SimpleNonceManager(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashSet
       8: dup
       9: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      12: invokestatic  #9                  // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      15: putfield      #2                  // Field invalidNonces:Ljava/util/Set;
      18: aload_0
      19: new           #10                 // class java/util/HashMap
      22: dup
      23: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      26: invokestatic  #12                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      29: putfield      #1                  // Field knownNonces:Ljava/util/Map;
      32: aload_0
      33: new           #13                 // class java/util/WeakHashMap
      36: dup
      37: invokespecial #14                 // Method java/util/WeakHashMap."<init>":()V
      40: invokestatic  #12                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      43: putfield      #15                 // Field forwardMapping:Ljava/util/Map;
      46: aload_0
      47: new           #16                 // class java/util/Random
      50: dup
      51: invokespecial #17                 // Method java/util/Random."<init>":()V
      54: putfield      #18                 // Field random:Ljava/util/Random;
      57: aload_0
      58: ldc2_w        #19                 // long 300000l
      61: putfield      #21                 // Field firstUseTimeOut:J
      64: aload_0
      65: ldc2_w        #22                 // long 900000l
      68: putfield      #24                 // Field overallTimeOut:J
      71: aload_0
      72: ldc2_w        #19                 // long 300000l
      75: putfield      #25                 // Field cacheTimePostExpiry:J
      78: aload_0
      79: aload_1
      80: invokespecial #26                 // Method getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;
      83: astore_2
      84: aload_0
      85: aload_1
      86: putfield      #27                 // Field hashAlg:Ljava/lang/String;
      89: aload_0
      90: aload_2
      91: invokevirtual #28                 // Method java/security/MessageDigest.getDigestLength:()I
      94: putfield      #29                 // Field hashLength:I
      97: new           #30                 // class java/security/SecureRandom
     100: dup
     101: invokespecial #31                 // Method java/security/SecureRandom."<init>":()V
     104: astore_3
     105: bipush        32
     107: newarray       byte
     109: astore        4
     111: aload_3
     112: aload         4
     114: invokevirtual #32                 // Method java/util/Random.nextBytes:([B)V
     117: aload_0
     118: aload_2
     119: aload         4
     121: invokevirtual #33                 // Method java/security/MessageDigest.digest:([B)[B
     124: iconst_0
     125: invokestatic  #34                 // Method io/undertow/util/FlexBase64.encodeString:([BZ)Ljava/lang/String;
     128: putfield      #35                 // Field secret:Ljava/lang/String;
     131: return

  private java.security.MessageDigest getDigest(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       4: areturn
       5: astore_2
       6: getstatic     #38                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: aload_1
      10: invokeinterface #39,  2           // InterfaceMethod io/undertow/UndertowMessages.hashAlgorithmNotFound:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/security/NoSuchAlgorithmException

  public java.lang.String nextNonce(java.lang.String, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokespecial #40                 // Method createNewNonceString:()Ljava/lang/String;
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field invalidNonces:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      19: ifeq          27
      22: aload_0
      23: invokespecial #40                 // Method createNewNonceString:()Ljava/lang/String;
      26: areturn
      27: aload_1
      28: astore_3
      29: aload_0
      30: getfield      #15                 // Field forwardMapping:Ljava/util/Map;
      33: dup
      34: astore        4
      36: monitorenter
      37: new           #42                 // class io/undertow/security/impl/SimpleNonceManager$NonceHolder
      40: dup
      41: aload_0
      42: aload_1
      43: aconst_null
      44: invokespecial #43                 // Method io/undertow/security/impl/SimpleNonceManager$NonceHolder."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      47: astore        5
      49: aload_0
      50: getfield      #15                 // Field forwardMapping:Ljava/util/Map;
      53: aload         5
      55: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      60: ifeq          93
      63: aload_0
      64: getfield      #15                 // Field forwardMapping:Ljava/util/Map;
      67: aload         5
      69: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #46                 // class java/lang/String
      77: astore_3
      78: new           #42                 // class io/undertow/security/impl/SimpleNonceManager$NonceHolder
      81: dup
      82: aload_0
      83: aload_3
      84: aconst_null
      85: invokespecial #43                 // Method io/undertow/security/impl/SimpleNonceManager$NonceHolder."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      88: astore        5
      90: goto          49
      93: aload_0
      94: getfield      #1                  // Field knownNonces:Ljava/util/Map;
      97: dup
      98: astore        6
     100: monitorenter
     101: aload_0
     102: getfield      #1                  // Field knownNonces:Ljava/util/Map;
     105: aload_3
     106: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #47                 // class io/undertow/security/impl/SimpleNonceManager$Nonce
     114: astore        7
     116: aload         7
     118: ifnonnull     129
     121: aload_0
     122: invokespecial #40                 // Method createNewNonceString:()Ljava/lang/String;
     125: astore_3
     126: goto          300
     129: invokestatic  #48                 // Method java/lang/System.currentTimeMillis:()J
     132: lstore        8
     134: lload         8
     136: ldc2_w        #19                 // long 300000l
     139: lsub
     140: lstore        10
     142: aload         7
     144: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     147: lload         10
     149: lcmp
     150: iflt          164
     153: aload         7
     155: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     158: lload         8
     160: lcmp
     161: ifle          300
     164: aload_2
     165: invokevirtual #50                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     168: astore        12
     170: aload_0
     171: aload         5
     173: invokespecial #51                 // Method createNewNonce:(Lio/undertow/security/impl/SimpleNonceManager$NonceHolder;)Lio/undertow/security/impl/SimpleNonceManager$Nonce;
     176: astore        13
     178: aload         7
     180: invokestatic  #52                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$200:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Lorg/xnio/XnioExecutor$Key;
     183: ifnull        197
     186: aload         7
     188: invokestatic  #52                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$200:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Lorg/xnio/XnioExecutor$Key;
     191: invokeinterface #53,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     196: pop
     197: aload         13
     199: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
     202: astore_3
     203: aload_0
     204: getfield      #15                 // Field forwardMapping:Ljava/util/Map;
     207: aload         5
     209: aload_3
     210: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     215: pop
     216: aload         13
     218: aload         7
     220: invokevirtual #56                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.getSessionKey:()[B
     223: invokevirtual #57                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.setSessionKey:([B)V
     226: aload_0
     227: getfield      #1                  // Field knownNonces:Ljava/util/Map;
     230: aload         5
     232: invokestatic  #58                 // Method io/undertow/security/impl/SimpleNonceManager$NonceHolder.access$400:(Lio/undertow/security/impl/SimpleNonceManager$NonceHolder;)Ljava/lang/String;
     235: invokeinterface #59,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     240: pop
     241: aload_0
     242: getfield      #1                  // Field knownNonces:Ljava/util/Map;
     245: aload_3
     246: aload         13
     248: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     253: pop
     254: lload         8
     256: ldc2_w        #60                 // long 1200000l
     259: lsub
     260: lstore        10
     262: aload         13
     264: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     267: lload         10
     269: lsub
     270: lstore        14
     272: aload         13
     274: aload         12
     276: new           #62                 // class io/undertow/security/impl/SimpleNonceManager$KnownNonceCleaner
     279: dup
     280: aload_0
     281: aload_3
     282: aconst_null
     283: invokespecial #63                 // Method io/undertow/security/impl/SimpleNonceManager$KnownNonceCleaner."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
     286: lload         14
     288: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     291: invokeinterface #65,  5           // InterfaceMethod org/xnio/XnioExecutor.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     296: invokestatic  #66                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$202:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;Lorg/xnio/XnioExecutor$Key;)Lorg/xnio/XnioExecutor$Key;
     299: pop
     300: aload         6
     302: monitorexit
     303: goto          314
     306: astore        16
     308: aload         6
     310: monitorexit
     311: aload         16
     313: athrow
     314: aload         4
     316: monitorexit
     317: goto          328
     320: astore        17
     322: aload         4
     324: monitorexit
     325: aload         17
     327: athrow
     328: aload_3
     329: areturn
    Exception table:
       from    to  target type
         101   303   306   any
         306   311   306   any
          37   317   320   any
         320   325   320   any

  private java.lang.String createNewNonceString();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #51                 // Method createNewNonce:(Lio/undertow/security/impl/SimpleNonceManager$NonceHolder;)Lio/undertow/security/impl/SimpleNonceManager$Nonce;
       5: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
       8: areturn

  private io.undertow.security.impl.SimpleNonceManager$Nonce createNewNonce(io.undertow.security.impl.SimpleNonceManager$NonceHolder);
    Code:
       0: bipush        8
       2: newarray       byte
       4: astore_2
       5: aload_0
       6: getfield      #18                 // Field random:Ljava/util/Random;
       9: aload_2
      10: invokevirtual #32                 // Method java/util/Random.nextBytes:([B)V
      13: invokestatic  #48                 // Method java/lang/System.currentTimeMillis:()J
      16: lstore_3
      17: lload_3
      18: invokestatic  #67                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      21: getstatic     #68                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      24: invokevirtual #69                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      27: astore        5
      29: aload_0
      30: aload_2
      31: aload         5
      33: invokespecial #70                 // Method createNonce:([B[B)Ljava/lang/String;
      36: astore        6
      38: new           #47                 // class io/undertow/security/impl/SimpleNonceManager$Nonce
      41: dup
      42: aload_0
      43: aload         6
      45: lload_3
      46: aload_1
      47: aconst_null
      48: invokespecial #71                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JLio/undertow/security/impl/SimpleNonceManager$NonceHolder;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      51: areturn

  public boolean validateNonce(java.lang.String, int, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_3
       1: invokevirtual #50                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
       4: astore        4
       6: iload_2
       7: ifge          25
      10: aload_0
      11: getfield      #2                  // Field invalidNonces:Ljava/util/Set;
      14: aload_1
      15: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifeq          80
      23: iconst_0
      24: ireturn
      25: aload_0
      26: getfield      #1                  // Field knownNonces:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      35: ifeq          56
      38: aload_0
      39: new           #47                 // class io/undertow/security/impl/SimpleNonceManager$Nonce
      42: dup
      43: aload_0
      44: aload_1
      45: aconst_null
      46: invokespecial #72                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      49: iload_2
      50: aload         4
      52: invokespecial #73                 // Method validateNonceWithCount:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;ILorg/xnio/XnioExecutor;)Z
      55: ireturn
      56: aload_0
      57: getfield      #15                 // Field forwardMapping:Ljava/util/Map;
      60: new           #42                 // class io/undertow/security/impl/SimpleNonceManager$NonceHolder
      63: dup
      64: aload_0
      65: aload_1
      66: aconst_null
      67: invokespecial #43                 // Method io/undertow/security/impl/SimpleNonceManager$NonceHolder."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      70: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      75: ifeq          80
      78: iconst_0
      79: ireturn
      80: aload_0
      81: aload_1
      82: iload_2
      83: invokespecial #74                 // Method verifyUnknownNonce:(Ljava/lang/String;I)Lio/undertow/security/impl/SimpleNonceManager$Nonce;
      86: astore        5
      88: aload         5
      90: ifnonnull     95
      93: iconst_0
      94: ireturn
      95: invokestatic  #48                 // Method java/lang/System.currentTimeMillis:()J
      98: lstore        6
     100: lload         6
     102: ldc2_w        #19                 // long 300000l
     105: lsub
     106: lstore        8
     108: aload         5
     110: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     113: lload         8
     115: lcmp
     116: iflt          130
     119: aload         5
     121: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     124: lload         6
     126: lcmp
     127: ifle          132
     130: iconst_0
     131: ireturn
     132: iload_2
     133: ifge          145
     136: aload_0
     137: aload         5
     139: aload         4
     141: invokespecial #75                 // Method addInvalidNonce:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;Lorg/xnio/XnioExecutor;)Z
     144: ireturn
     145: aload_0
     146: aload         5
     148: iload_2
     149: aload         4
     151: invokespecial #73                 // Method validateNonceWithCount:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;ILorg/xnio/XnioExecutor;)Z
     154: ireturn

  private boolean validateNonceWithCount(io.undertow.security.impl.SimpleNonceManager$Nonce, int, org.xnio.XnioExecutor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field knownNonces:Ljava/util/Map;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #1                  // Field knownNonces:Ljava/util/Map;
      12: aload_1
      13: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
      16: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #47                 // class io/undertow/security/impl/SimpleNonceManager$Nonce
      24: astore        5
      26: invokestatic  #48                 // Method java/lang/System.currentTimeMillis:()J
      29: lstore        6
      31: lload         6
      33: ldc2_w        #60                 // long 1200000l
      36: lsub
      37: lstore        8
      39: aload         5
      41: ifnonnull     141
      44: aload_1
      45: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
      48: lconst_0
      49: lcmp
      50: ifge          58
      53: iconst_0
      54: aload         4
      56: monitorexit
      57: ireturn
      58: aload_1
      59: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
      62: lload         8
      64: lcmp
      65: ifle          136
      68: aload_1
      69: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
      72: lload         6
      74: lcmp
      75: ifgt          136
      78: aload_0
      79: getfield      #1                  // Field knownNonces:Ljava/util/Map;
      82: aload_1
      83: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
      86: aload_1
      87: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_1
      94: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
      97: lload         8
      99: lsub
     100: lstore        10
     102: aload_1
     103: aload_3
     104: new           #62                 // class io/undertow/security/impl/SimpleNonceManager$KnownNonceCleaner
     107: dup
     108: aload_0
     109: aload_1
     110: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
     113: aconst_null
     114: invokespecial #63                 // Method io/undertow/security/impl/SimpleNonceManager$KnownNonceCleaner."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
     117: lload         10
     119: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     122: invokeinterface #65,  5           // InterfaceMethod org/xnio/XnioExecutor.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     127: invokestatic  #66                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$202:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;Lorg/xnio/XnioExecutor$Key;)Lorg/xnio/XnioExecutor$Key;
     130: pop
     131: iconst_1
     132: aload         4
     134: monitorexit
     135: ireturn
     136: iconst_0
     137: aload         4
     139: monitorexit
     140: ireturn
     141: aload         5
     143: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     146: lload         8
     148: lcmp
     149: iflt          163
     152: aload         5
     154: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
     157: lload         6
     159: lcmp
     160: ifle          168
     163: iconst_0
     164: aload         4
     166: monitorexit
     167: ireturn
     168: aload         5
     170: invokevirtual #76                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.getMaxNonceCount:()I
     173: iload_2
     174: if_icmpge     188
     177: aload         5
     179: iload_2
     180: invokevirtual #77                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.setMaxNonceCount:(I)V
     183: iconst_1
     184: aload         4
     186: monitorexit
     187: ireturn
     188: iconst_0
     189: aload         4
     191: monitorexit
     192: ireturn
     193: astore        12
     195: aload         4
     197: monitorexit
     198: aload         12
     200: athrow
    Exception table:
       from    to  target type
           8    57   193   any
          58   135   193   any
         136   140   193   any
         141   167   193   any
         168   187   193   any
         188   192   193   any
         193   198   193   any

  private boolean addInvalidNonce(io.undertow.security.impl.SimpleNonceManager$Nonce, org.xnio.XnioExecutor);
    Code:
       0: invokestatic  #48                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_3
       4: lload_3
       5: ldc2_w        #19                 // long 300000l
       8: lsub
       9: lstore        5
      11: aload_1
      12: invokestatic  #49                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$100:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)J
      15: lload         5
      17: lsub
      18: lstore        7
      20: lload         7
      22: lconst_0
      23: lcmp
      24: ifle          72
      27: aload_0
      28: getfield      #2                  // Field invalidNonces:Ljava/util/Set;
      31: aload_1
      32: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
      35: invokeinterface #78,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      40: ifeq          70
      43: aload_2
      44: new           #79                 // class io/undertow/security/impl/SimpleNonceManager$InvalidNonceCleaner
      47: dup
      48: aload_0
      49: aload_1
      50: invokestatic  #54                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce.access$300:(Lio/undertow/security/impl/SimpleNonceManager$Nonce;)Ljava/lang/String;
      53: aconst_null
      54: invokespecial #80                 // Method io/undertow/security/impl/SimpleNonceManager$InvalidNonceCleaner."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;Lio/undertow/security/impl/SimpleNonceManager$1;)V
      57: lload         7
      59: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      62: invokeinterface #65,  5           // InterfaceMethod org/xnio/XnioExecutor.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      67: pop
      68: iconst_1
      69: ireturn
      70: iconst_0
      71: ireturn
      72: iconst_0
      73: ireturn

  private io.undertow.security.impl.SimpleNonceManager$Nonce verifyUnknownNonce(java.lang.String, int);
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method io/undertow/util/FlexBase64.decode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
       4: astore        6
       6: aload         6
       8: invokevirtual #82                 // Method java/nio/ByteBuffer.array:()[B
      11: astore_3
      12: aload         6
      14: invokevirtual #83                 // Method java/nio/ByteBuffer.arrayOffset:()I
      17: istore        4
      19: aload         6
      21: invokevirtual #84                 // Method java/nio/ByteBuffer.limit:()I
      24: iload         4
      26: isub
      27: istore        5
      29: goto          45
      32: astore        6
      34: getstatic     #38                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      37: aload         6
      39: invokeinterface #86,  2           // InterfaceMethod io/undertow/UndertowMessages.invalidBase64Token:(Ljava/io/IOException;)Ljava/lang/IllegalArgumentException;
      44: athrow
      45: aload_3
      46: iload         4
      48: bipush        8
      50: iadd
      51: baload
      52: istore        6
      54: aload_0
      55: getfield      #29                 // Field hashLength:I
      58: ifle          107
      61: bipush        9
      63: iload         6
      65: iadd
      66: aload_0
      67: getfield      #29                 // Field hashLength:I
      70: iadd
      71: istore        7
      73: iload         5
      75: iload         7
      77: if_icmpeq     89
      80: getstatic     #38                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      83: invokeinterface #87,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidNonceReceived:()Ljava/lang/IllegalArgumentException;
      88: athrow
      89: iload         6
      91: iconst_1
      92: iadd
      93: iload         5
      95: if_icmplt     107
      98: getstatic     #38                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     101: invokeinterface #87,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidNonceReceived:()Ljava/lang/IllegalArgumentException;
     106: athrow
     107: bipush        8
     109: newarray       byte
     111: astore        7
     113: aload_3
     114: iload         4
     116: aload         7
     118: iconst_0
     119: bipush        8
     121: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     124: iload         6
     126: newarray       byte
     128: astore        8
     130: aload_3
     131: iload         4
     133: bipush        9
     135: iadd
     136: aload         8
     138: iconst_0
     139: aload         8
     141: arraylength
     142: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     145: aload_0
     146: aload         7
     148: aload         8
     150: invokespecial #70                 // Method createNonce:([B[B)Ljava/lang/String;
     153: astore        9
     155: aload         9
     157: aload_1
     158: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     161: ifeq          198
     164: new           #46                 // class java/lang/String
     167: dup
     168: aload         8
     170: getstatic     #68                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     173: invokespecial #90                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     176: invokestatic  #91                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     179: lstore        10
     181: new           #47                 // class io/undertow/security/impl/SimpleNonceManager$Nonce
     184: dup
     185: aload_0
     186: aload         9
     188: lload         10
     190: iload_2
     191: aconst_null
     192: invokespecial #92                 // Method io/undertow/security/impl/SimpleNonceManager$Nonce."<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JILio/undertow/security/impl/SimpleNonceManager$1;)V
     195: areturn
     196: astore        10
     198: aconst_null
     199: areturn
    Exception table:
       from    to  target type
           0    29    32   Class java/io/IOException
         164   195   196   Class java/lang/NumberFormatException

  private java.lang.String createNonce(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #94                 // Method generateHash:([B[B)[B
       6: astore_3
       7: bipush        9
       9: aload_2
      10: arraylength
      11: iadd
      12: aload_3
      13: arraylength
      14: iadd
      15: newarray       byte
      17: astore        4
      19: aload_1
      20: iconst_0
      21: aload         4
      23: iconst_0
      24: bipush        8
      26: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload         4
      31: bipush        8
      33: aload_2
      34: arraylength
      35: i2b
      36: bastore
      37: aload_2
      38: iconst_0
      39: aload         4
      41: bipush        9
      43: aload_2
      44: arraylength
      45: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      48: aload_3
      49: iconst_0
      50: aload         4
      52: bipush        9
      54: aload_2
      55: arraylength
      56: iadd
      57: aload_3
      58: arraylength
      59: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload         4
      64: iconst_0
      65: invokestatic  #34                 // Method io/undertow/util/FlexBase64.encodeString:([BZ)Ljava/lang/String;
      68: areturn

  private byte[] generateHash(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #27                 // Field hashAlg:Ljava/lang/String;
       5: invokespecial #26                 // Method getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;
       8: astore_3
       9: aload_3
      10: aload_1
      11: invokevirtual #95                 // Method java/security/MessageDigest.update:([B)V
      14: aload_3
      15: aload_2
      16: invokevirtual #95                 // Method java/security/MessageDigest.update:([B)V
      19: aload_3
      20: aload_0
      21: getfield      #35                 // Field secret:Ljava/lang/String;
      24: getstatic     #68                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      27: invokevirtual #69                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      30: invokevirtual #33                 // Method java/security/MessageDigest.digest:([B)[B
      33: areturn

  public void associateHash(java.lang.String, byte[]);
    Code:
       0: return

  public byte[] lookupHash(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  static java.util.Set access$1000(io.undertow.security.impl.SimpleNonceManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field invalidNonces:Ljava/util/Set;
       4: areturn

  static java.util.Map access$1100(io.undertow.security.impl.SimpleNonceManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field knownNonces:Ljava/util/Map;
       4: areturn
}
