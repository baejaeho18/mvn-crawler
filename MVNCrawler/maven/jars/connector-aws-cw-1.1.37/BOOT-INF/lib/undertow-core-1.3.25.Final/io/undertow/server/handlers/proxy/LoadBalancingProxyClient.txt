Compiled from "LoadBalancingProxyClient.java"
public class io.undertow.server.handlers.proxy.LoadBalancingProxyClient implements io.undertow.server.handlers.proxy.ProxyClient {
  private final io.undertow.util.AttachmentKey<io.undertow.server.handlers.proxy.LoadBalancingProxyClient$ExclusiveConnectionHolder> exclusiveConnectionKey;

  private static final io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host>> ATTEMPTED_HOSTS;

  private volatile int problemServerRetry;

  private final java.util.Set<java.lang.String> sessionCookieNames;

  private volatile int connectionsPerThread;

  private volatile int maxQueueSize;

  private volatile int softMaxConnectionsPerThread;

  private volatile int ttl;

  private volatile io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host[] hosts;

  private final io.undertow.server.handlers.proxy.LoadBalancingProxyClient$HostSelector hostSelector;

  private final io.undertow.client.UndertowClient client;

  private final java.util.Map<java.lang.String, io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host> routes;

  private final io.undertow.server.handlers.proxy.ExclusivityChecker exclusivityChecker;

  private static final io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget PROXY_TARGET;

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       4: invokespecial #9                  // Method "<init>":(Lio/undertow/client/UndertowClient;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.server.handlers.proxy.ExclusivityChecker);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method io/undertow/client/UndertowClient.getInstance:()Lio/undertow/client/UndertowClient;
       4: aload_1
       5: aconst_null
       6: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       9: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient, io.undertow.server.handlers.proxy.ExclusivityChecker);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #10                 // Method "<init>":(Lio/undertow/client/UndertowClient;Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;)V
       7: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient(io.undertow.client.UndertowClient, io.undertow.server.handlers.proxy.ExclusivityChecker, io.undertow.server.handlers.proxy.LoadBalancingProxyClient$HostSelector);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #12                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder
       7: invokestatic  #13                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      10: putfield      #7                  // Field exclusiveConnectionKey:Lio/undertow/util/AttachmentKey;
      13: aload_0
      14: bipush        10
      16: putfield      #5                  // Field problemServerRetry:I
      19: aload_0
      20: new           #14                 // class java/util/concurrent/CopyOnWriteArraySet
      23: dup
      24: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      27: putfield      #16                 // Field sessionCookieNames:Ljava/util/Set;
      30: aload_0
      31: bipush        10
      33: putfield      #4                  // Field connectionsPerThread:I
      36: aload_0
      37: iconst_0
      38: putfield      #1                  // Field maxQueueSize:I
      41: aload_0
      42: iconst_5
      43: putfield      #3                  // Field softMaxConnectionsPerThread:I
      46: aload_0
      47: iconst_m1
      48: putfield      #2                  // Field ttl:I
      51: aload_0
      52: iconst_0
      53: anewarray     #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      56: putfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      59: aload_0
      60: new           #19                 // class io/undertow/util/CopyOnWriteMap
      63: dup
      64: invokespecial #20                 // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      67: putfield      #21                 // Field routes:Ljava/util/Map;
      70: aload_0
      71: aload_1
      72: putfield      #6                  // Field client:Lio/undertow/client/UndertowClient;
      75: aload_0
      76: aload_2
      77: putfield      #22                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      80: aload_0
      81: getfield      #16                 // Field sessionCookieNames:Ljava/util/Set;
      84: ldc           #23                 // String JSESSIONID
      86: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      91: pop
      92: aload_3
      93: ifnonnull     110
      96: aload_0
      97: new           #25                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$RoundRobinHostSelector
     100: dup
     101: invokespecial #26                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$RoundRobinHostSelector."<init>":()V
     104: putfield      #27                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
     107: goto          115
     110: aload_0
     111: aload_3
     112: putfield      #27                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
     115: return

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient addSessionCookieName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sessionCookieNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient removeSessionCookieName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field sessionCookieNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setProblemServerRetry(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field problemServerRetry:I
       5: aload_0
       6: areturn

  public int getProblemServerRetry();
    Code:
       0: aload_0
       1: getfield      #5                  // Field problemServerRetry:I
       4: ireturn

  public int getConnectionsPerThread();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionsPerThread:I
       4: ireturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setConnectionsPerThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field connectionsPerThread:I
       5: aload_0
       6: areturn

  public int getMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxQueueSize:I
       4: ireturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setMaxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field maxQueueSize:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setTtl(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ttl:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.LoadBalancingProxyClient setSoftMaxConnectionsPerThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field softMaxConnectionsPerThread:I
       5: aload_0
       6: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokevirtual #29                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, org.xnio.ssl.XnioSsl);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #29                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #29                 // Method addHost:(Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
       7: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl);
    Code:
       0: new           #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       3: dup
       4: aload_0
       5: aload_2
       6: aconst_null
       7: aload_1
       8: aload_3
       9: getstatic     #30                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      12: aconst_null
      13: invokespecial #31                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$1;)V
      16: astore        4
      18: aload_0
      19: getfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      22: astore        5
      24: aload         5
      26: arraylength
      27: iconst_1
      28: iadd
      29: anewarray     #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      32: astore        6
      34: aload         5
      36: iconst_0
      37: aload         6
      39: iconst_0
      40: aload         5
      42: arraylength
      43: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload         6
      48: aload         5
      50: arraylength
      51: aload         4
      53: aastore
      54: aload_0
      55: aload         6
      57: putfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      60: aload_2
      61: ifnull        77
      64: aload_0
      65: getfield      #21                 // Field routes:Ljava/util/Map;
      68: aload_2
      69: aload         4
      71: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokevirtual #34                 // Method addHost:(Ljava/net/InetSocketAddress;Ljava/net/URI;Ljava/lang/String;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;
      10: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient addHost(java.net.InetSocketAddress, java.net.URI, java.lang.String, org.xnio.ssl.XnioSsl, org.xnio.OptionMap);
    Code:
       0: new           #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: aload         4
      10: aload         5
      12: aconst_null
      13: invokespecial #31                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lorg/xnio/OptionMap;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$1;)V
      16: astore        6
      18: aload_0
      19: getfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      22: astore        7
      24: aload         7
      26: arraylength
      27: iconst_1
      28: iadd
      29: anewarray     #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      32: astore        8
      34: aload         7
      36: iconst_0
      37: aload         8
      39: iconst_0
      40: aload         7
      42: arraylength
      43: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload         8
      48: aload         7
      50: arraylength
      51: aload         6
      53: aastore
      54: aload_0
      55: aload         8
      57: putfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      60: aload_3
      61: ifnull        77
      64: aload_0
      65: getfield      #21                 // Field routes:Ljava/util/Map;
      68: aload_3
      69: aload         6
      71: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: areturn

  public synchronized io.undertow.server.handlers.proxy.LoadBalancingProxyClient removeHost(java.net.URI);
    Code:
       0: iconst_m1
       1: istore_2
       2: aload_0
       3: getfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: aload_3
      16: arraylength
      17: if_icmpge     52
      20: aload_3
      21: iload         5
      23: aaload
      24: getfield      #35                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.uri:Ljava/net/URI;
      27: aload_1
      28: invokevirtual #36                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      31: ifeq          46
      34: iload         5
      36: istore_2
      37: aload_3
      38: iload         5
      40: aaload
      41: astore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          13
      52: iload_2
      53: iconst_m1
      54: if_icmpne     59
      57: aload_0
      58: areturn
      59: aload_3
      60: arraylength
      61: iconst_1
      62: isub
      63: anewarray     #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
      66: astore        5
      68: aload_3
      69: iconst_0
      70: aload         5
      72: iconst_0
      73: iload_2
      74: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_3
      78: iload_2
      79: iconst_1
      80: iadd
      81: aload         5
      83: iload_2
      84: aload_3
      85: arraylength
      86: iload_2
      87: isub
      88: iconst_1
      89: isub
      90: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_0
      94: aload         5
      96: putfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      99: aload         4
     101: getfield      #37                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     104: invokevirtual #38                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.close:()V
     107: aload         4
     109: getfield      #39                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.jvmRoute:Ljava/lang/String;
     112: ifnull        130
     115: aload_0
     116: getfield      #21                 // Field routes:Ljava/util/Map;
     119: aload         4
     121: getfield      #39                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.jvmRoute:Ljava/lang/String;
     124: invokeinterface #40,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: areturn

  public io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget findTarget(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #41                 // Field PROXY_TARGET:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
       3: areturn

  public void getConnection(io.undertow.server.handlers.proxy.ProxyClient$ProxyTarget, io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: aload_0
       5: getfield      #7                  // Field exclusiveConnectionKey:Lio/undertow/util/AttachmentKey;
       8: invokevirtual #43                 // Method io/undertow/server/ServerConnection.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      11: checkcast     #12                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder
      14: astore        7
      16: aload         7
      18: ifnull        50
      21: aload         7
      23: invokestatic  #44                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder.access$100:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder;)Lio/undertow/server/handlers/proxy/ProxyConnection;
      26: invokevirtual #45                 // Method io/undertow/server/handlers/proxy/ProxyConnection.getConnection:()Lio/undertow/client/ClientConnection;
      29: invokeinterface #46,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      34: ifeq          50
      37: aload_3
      38: aload_2
      39: aload         7
      41: invokestatic  #44                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder.access$100:(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder;)Lio/undertow/server/handlers/proxy/ProxyConnection;
      44: invokeinterface #47,  3           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.completed:(Lio/undertow/server/HttpServerExchange;Ljava/lang/Object;)V
      49: return
      50: aload_0
      51: aload_2
      52: invokevirtual #48                 // Method selectHost:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      55: astore        8
      57: aload         8
      59: ifnonnull     72
      62: aload_3
      63: aload_2
      64: invokeinterface #49,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.couldNotResolveBackend:(Lio/undertow/server/HttpServerExchange;)V
      69: goto          153
      72: aload_2
      73: getstatic     #50                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
      76: aload         8
      78: invokevirtual #51                 // Method io/undertow/server/HttpServerExchange.addToAttachmentList:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
      81: aload         7
      83: ifnonnull     106
      86: aload_0
      87: getfield      #22                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      90: ifnull        137
      93: aload_0
      94: getfield      #22                 // Field exclusivityChecker:Lio/undertow/server/handlers/proxy/ExclusivityChecker;
      97: aload_2
      98: invokeinterface #52,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ExclusivityChecker.isExclusivityRequired:(Lio/undertow/server/HttpServerExchange;)Z
     103: ifeq          137
     106: aload         8
     108: getfield      #37                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     111: aload_1
     112: aload_2
     113: new           #53                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$2
     116: dup
     117: aload_0
     118: aload         7
     120: aload_3
     121: aload         8
     123: invokespecial #54                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$2."<init>":(Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$ExclusiveConnectionHolder;Lio/undertow/server/handlers/proxy/ProxyCallback;Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;)V
     126: lload         4
     128: aload         6
     130: iconst_1
     131: invokevirtual #55                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.connect:(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;Z)V
     134: goto          153
     137: aload         8
     139: getfield      #37                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
     142: aload_1
     143: aload_2
     144: aload_3
     145: lload         4
     147: aload         6
     149: iconst_0
     150: invokevirtual #55                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.connect:(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;Z)V
     153: return

  protected io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host selectHost(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: getstatic     #50                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #56                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #57                 // class io/undertow/util/AttachmentList
      10: astore_2
      11: aload_0
      12: getfield      #18                 // Field hosts:[Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      15: astore_3
      16: aload_3
      17: arraylength
      18: ifne          23
      21: aconst_null
      22: areturn
      23: aload_0
      24: aload_1
      25: invokevirtual #58                 // Method findStickyHost:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;
      28: astore        4
      30: aload         4
      32: ifnull        51
      35: aload_2
      36: ifnull        48
      39: aload_2
      40: aload         4
      42: invokevirtual #59                 // Method io/undertow/util/AttachmentList.contains:(Ljava/lang/Object;)Z
      45: ifne          51
      48: aload         4
      50: areturn
      51: aload_0
      52: getfield      #27                 // Field hostSelector:Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector;
      55: aload_3
      56: invokeinterface #60,  2           // InterfaceMethod io/undertow/server/handlers/proxy/LoadBalancingProxyClient$HostSelector.selectHost:([Lio/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host;)I
      61: istore        5
      63: iload         5
      65: istore        6
      67: aconst_null
      68: astore        7
      70: aconst_null
      71: astore        8
      73: aload_3
      74: iload         5
      76: aaload
      77: astore        9
      79: aload_2
      80: ifnull        92
      83: aload_2
      84: aload         9
      86: invokevirtual #59                 // Method io/undertow/util/AttachmentList.contains:(Ljava/lang/Object;)Z
      89: ifne          158
      92: aload         9
      94: getfield      #37                 // Field io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host.connectionPool:Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
      97: invokevirtual #61                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.available:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     100: astore        10
     102: aload         10
     104: getstatic     #62                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.AVAILABLE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     107: if_acmpne     113
     110: aload         9
     112: areturn
     113: aload         10
     115: getstatic     #63                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     118: if_acmpne     133
     121: aload         7
     123: ifnonnull     133
     126: aload         9
     128: astore        7
     130: goto          158
     133: aload         10
     135: getstatic     #64                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.PROBLEM:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     138: if_acmpeq     149
     141: aload         10
     143: getstatic     #65                 // Field io/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType.FULL_QUEUE:Lio/undertow/server/handlers/proxy/ProxyConnectionPool$AvailabilityType;
     146: if_acmpne     158
     149: aload         8
     151: ifnonnull     158
     154: aload         9
     156: astore        8
     158: iload         5
     160: iconst_1
     161: iadd
     162: aload_3
     163: arraylength
     164: irem
     165: istore        5
     167: iload         5
     169: iload         6
     171: if_icmpne     73
     174: aload         7
     176: ifnull        182
     179: aload         7
     181: areturn
     182: aload         8
     184: ifnull        190
     187: aload         8
     189: areturn
     190: aconst_null
     191: areturn

  protected io.undertow.server.handlers.proxy.LoadBalancingProxyClient$Host findStickyHost(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method io/undertow/server/HttpServerExchange.getRequestCookies:()Ljava/util/Map;
       4: astore_2
       5: aload_0
       6: getfield      #16                 // Field sessionCookieNames:Ljava/util/Set;
       9: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          135
      24: aload_3
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #70                 // class java/lang/String
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokeinterface #71,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #72                 // class io/undertow/server/handlers/Cookie
      46: astore        5
      48: aload         5
      50: ifnull        132
      53: aload         5
      55: invokeinterface #73,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      60: bipush        46
      62: invokevirtual #74                 // Method java/lang/String.indexOf:(I)I
      65: istore        6
      67: iload         6
      69: iconst_m1
      70: if_icmpne     76
      73: goto          15
      76: aload         5
      78: invokeinterface #73,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      83: iload         6
      85: iconst_1
      86: iadd
      87: invokevirtual #75                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      90: astore        7
      92: aload         7
      94: bipush        46
      96: invokevirtual #74                 // Method java/lang/String.indexOf:(I)I
      99: istore        6
     101: iload         6
     103: iconst_m1
     104: if_icmpeq     117
     107: aload         7
     109: iconst_0
     110: iload         6
     112: invokevirtual #76                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     115: astore        7
     117: aload_0
     118: getfield      #21                 // Field routes:Ljava/util/Map;
     121: aload         7
     123: invokeinterface #71,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
     131: areturn
     132: goto          15
     135: aconst_null
     136: areturn

  static io.undertow.util.AttachmentKey access$300(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exclusiveConnectionKey:Lio/undertow/util/AttachmentKey;
       4: areturn

  static io.undertow.client.UndertowClient access$400(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #6                  // Field client:Lio/undertow/client/UndertowClient;
       4: areturn

  static int access$500(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #5                  // Field problemServerRetry:I
       4: ireturn

  static int access$600(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionsPerThread:I
       4: ireturn

  static int access$700(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #3                  // Field softMaxConnectionsPerThread:I
       4: ireturn

  static int access$800(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ttl:I
       4: ireturn

  static int access$900(io.undertow.server.handlers.proxy.LoadBalancingProxyClient);
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxQueueSize:I
       4: ireturn

  static {};
    Code:
       0: ldc           #17                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$Host
       2: invokestatic  #77                 // Method io/undertow/util/AttachmentKey.createList:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
       5: putstatic     #50                 // Field ATTEMPTED_HOSTS:Lio/undertow/util/AttachmentKey;
       8: new           #78                 // class io/undertow/server/handlers/proxy/LoadBalancingProxyClient$1
      11: dup
      12: invokespecial #79                 // Method io/undertow/server/handlers/proxy/LoadBalancingProxyClient$1."<init>":()V
      15: putstatic     #41                 // Field PROXY_TARGET:Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;
      18: return
}
