Compiled from "LocalServerNameAttribute.java"
public class io.undertow.attribute.LocalServerNameAttribute implements io.undertow.attribute.ExchangeAttribute {
  public static final java.lang.String LOCAL_SERVER_NAME_SHORT;

  public static final java.lang.String LOCAL_SERVER_NAME;

  public static final io.undertow.attribute.ExchangeAttribute INSTANCE;

  private io.undertow.attribute.LocalServerNameAttribute();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #3                  // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
       7: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: new           #5                  // class io/undertow/attribute/ReadOnlyAttributeException
       3: dup
       4: ldc           #6                  // String Local server name
       6: aload_2
       7: invokespecial #7                  // Method io/undertow/attribute/ReadOnlyAttributeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: athrow

  static {};
    Code:
       0: new           #8                  // class io/undertow/attribute/LocalServerNameAttribute
       3: dup
       4: invokespecial #9                  // Method "<init>":()V
       7: putstatic     #10                 // Field INSTANCE:Lio/undertow/attribute/ExchangeAttribute;
      10: return
}
