Compiled from "QValueParser.java"
public class io.undertow.util.QValueParser$QValueResult implements java.lang.Comparable<io.undertow.util.QValueParser$QValueResult> {
  private java.lang.String value;

  private java.lang.String qvalue;

  public io.undertow.util.QValueParser$QValueResult();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String 1
       7: putfield      #2                  // Field qvalue:Ljava/lang/String;
      10: return

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field value:Ljava/lang/String;
       4: areturn

  public java.lang.String getQvalue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qvalue:Ljava/lang/String;
       4: areturn

  public int compareTo(io.undertow.util.QValueParser$QValueResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field qvalue:Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: getfield      #2                  // Field qvalue:Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: ifnonnull     20
      14: aload_3
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_3
      21: ifnonnull     26
      24: iconst_1
      25: ireturn
      26: aload_2
      27: ifnonnull     32
      30: iconst_m1
      31: ireturn
      32: aload_2
      33: invokevirtual #5                  // Method java/lang/String.length:()I
      36: istore        4
      38: aload_3
      39: invokevirtual #5                  // Method java/lang/String.length:()I
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iconst_5
      50: if_icmpge     119
      53: iload         4
      55: iload         6
      57: if_icmpeq     67
      60: iload         5
      62: iload         6
      64: if_icmpne     73
      67: iload         5
      69: iload         4
      71: isub
      72: ireturn
      73: iload         6
      75: iconst_1
      76: if_icmpne     82
      79: goto          113
      82: aload_2
      83: iload         6
      85: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      88: istore        7
      90: aload_3
      91: iload         6
      93: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      96: istore        8
      98: iload         7
     100: iload         8
     102: isub
     103: istore        9
     105: iload         9
     107: ifeq          113
     110: iload         9
     112: ireturn
     113: iinc          6, 1
     116: goto          47
     119: iconst_0
     120: ireturn

  public boolean isQValueZero();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qvalue:Ljava/lang/String;
       4: ifnull        62
       7: iconst_5
       8: aload_0
       9: getfield      #2                  // Field qvalue:Ljava/lang/String;
      12: invokevirtual #5                  // Method java/lang/String.length:()I
      15: invokestatic  #7                  // Method java/lang/Math.min:(II)I
      18: istore_1
      19: iconst_1
      20: istore_2
      21: iconst_0
      22: istore_3
      23: iload_3
      24: iload_1
      25: if_icmpge     60
      28: iload_3
      29: iconst_1
      30: if_icmpne     36
      33: goto          54
      36: aload_0
      37: getfield      #2                  // Field qvalue:Ljava/lang/String;
      40: iload_3
      41: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      44: bipush        48
      46: if_icmpeq     54
      49: iconst_0
      50: istore_2
      51: goto          60
      54: iinc          3, 1
      57: goto          23
      60: iload_2
      61: ireturn
      62: iconst_0
      63: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class io/undertow/util/QValueParser$QValueResult
       5: invokevirtual #9                  // Method compareTo:(Lio/undertow/util/QValueParser$QValueResult;)I
       8: ireturn

  static java.lang.String access$002(io.undertow.util.QValueParser$QValueResult, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field qvalue:Ljava/lang/String;
       6: areturn

  static java.lang.String access$000(io.undertow.util.QValueParser$QValueResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field qvalue:Ljava/lang/String;
       4: areturn

  static java.lang.String access$102(io.undertow.util.QValueParser$QValueResult, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field value:Ljava/lang/String;
       6: areturn
}
