Compiled from "SecureHashMap.java"
final class io.undertow.util.SecureHashMap$Values extends java.util.AbstractCollection<V> implements java.util.Collection<V> {
  final io.undertow.util.SecureHashMap this$0;

  io.undertow.util.SecureHashMap$Values(io.undertow.util.SecureHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractCollection."<init>":()V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #3                  // Method io/undertow/util/SecureHashMap.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: invokevirtual #4                  // Method io/undertow/util/SecureHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.Iterator<V> iterator();
    Code:
       0: new           #5                  // class io/undertow/util/SecureHashMap$ValueIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       8: invokespecial #6                  // Method io/undertow/util/SecureHashMap$ValueIterator."<init>":(Lio/undertow/util/SecureHashMap;)V
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #7                  // Method io/undertow/util/SecureHashMap.size:()I
       7: ireturn
}
