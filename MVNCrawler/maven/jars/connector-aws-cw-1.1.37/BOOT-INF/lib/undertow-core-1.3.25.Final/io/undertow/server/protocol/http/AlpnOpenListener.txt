Compiled from "AlpnOpenListener.java"
public class io.undertow.server.protocol.http.AlpnOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.OpenListener {
  private final io.undertow.server.protocol.http.AlpnOpenListener$AlpnDelegateListener delegate;

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String http/1.1
       5: aload_3
       6: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       9: return

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       8: return

  public io.undertow.server.protocol.http.AlpnOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: new           #3                  // class io/undertow/server/XnioByteBufferPool
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method io/undertow/server/XnioByteBufferPool."<init>":(Lorg/xnio/Pool;)V
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      16: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String http/1.1
       5: aload_3
       6: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       9: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: aconst_null
       6: aconst_null
       7: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      10: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
       8: return

  public io.undertow.server.protocol.http.AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: getstatic     #8                  // Field io/undertow/util/ALPN.JDK_9_ALPN_METHODS:Lio/undertow/util/ALPN$JDK9ALPNMethods;
       7: ifnull        29
      10: aload_0
      11: new           #9                  // class io/undertow/server/protocol/http/JDK9AlpnOpenListener
      14: dup
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: invokespecial #10                 // Method io/undertow/server/protocol/http/JDK9AlpnOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      23: putfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
      26: goto          45
      29: aload_0
      30: new           #12                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener
      33: dup
      34: aload_1
      35: aload_2
      36: aload_3
      37: aload         4
      39: invokespecial #13                 // Method io/undertow/server/protocol/http/JettyAlpnOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;)V
      42: putfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
      45: return

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: invokeinterface #14,  1           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.getRootHandler:()Lio/undertow/server/HttpHandler;
       9: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      10: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: invokeinterface #16,  1           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.getUndertowOptions:()Lorg/xnio/OptionMap;
       9: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.setUndertowOptions:(Lorg/xnio/OptionMap;)V
      10: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: invokeinterface #18,  1           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
       9: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: invokeinterface #19,  1           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.getConnectorStatistics:()Lio/undertow/server/ConnectorStatistics;
       9: areturn

  public io.undertow.server.protocol.http.AlpnOpenListener addProtocol(java.lang.String, io.undertow.server.DelegateOpenListener, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #20,  4           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)V
      12: aload_0
      13: areturn

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lio/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod io/undertow/server/protocol/http/AlpnOpenListener$AlpnDelegateListener.handleEvent:(Ljava/nio/channels/Channel;)V
      10: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/xnio/StreamConnection
       5: invokevirtual #23                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
