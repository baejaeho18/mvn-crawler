Compiled from "ModClusterContainer.java"
class io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer implements io.undertow.server.handlers.proxy.mod_cluster.ModClusterController {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.handlers.proxy.mod_cluster.Balancer> balancers;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.handlers.proxy.mod_cluster.Node> nodes;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.handlers.proxy.mod_cluster.VirtualHost> hosts;

  private final io.undertow.server.handlers.cache.LRUCache<java.lang.String, java.lang.String> failoverDomains;

  private final java.util.concurrent.ConcurrentMap<org.xnio.XnioIoThread, io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer$HealthCheckTask> healthChecks;

  private final io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer$UpdateLoadTask updateLoadTask;

  private final org.xnio.ssl.XnioSsl xnioSsl;

  private final io.undertow.client.UndertowClient client;

  private final io.undertow.server.handlers.proxy.ProxyClient proxyClient;

  private final io.undertow.server.handlers.proxy.mod_cluster.ModCluster modCluster;

  private final io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker healthChecker;

  private final long removeBrokenNodesThreshold;

  private final org.xnio.OptionMap clientOptions;

  static final boolean $assertionsDisabled;

  io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer(io.undertow.server.handlers.proxy.mod_cluster.ModCluster, org.xnio.ssl.XnioSsl, io.undertow.client.UndertowClient, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #4                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #3                  // class io/undertow/util/CopyOnWriteMap
      19: dup
      20: invokespecial #4                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      23: putfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: new           #3                  // class io/undertow/util/CopyOnWriteMap
      30: dup
      31: invokespecial #4                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      34: putfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      37: aload_0
      38: new           #7                  // class io/undertow/server/handlers/cache/LRUCache
      41: dup
      42: bipush        100
      44: ldc           #8                  // int 300000
      46: invokespecial #9                  // Method io/undertow/server/handlers/cache/LRUCache."<init>":(II)V
      49: putfield      #10                 // Field failoverDomains:Lio/undertow/server/handlers/cache/LRUCache;
      52: aload_0
      53: new           #3                  // class io/undertow/util/CopyOnWriteMap
      56: dup
      57: invokespecial #4                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      60: putfield      #11                 // Field healthChecks:Ljava/util/concurrent/ConcurrentMap;
      63: aload_0
      64: new           #12                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask
      67: dup
      68: aload_0
      69: invokespecial #13                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;)V
      72: putfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
      75: aload_0
      76: aload_2
      77: putfield      #15                 // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
      80: aload_0
      81: aload_3
      82: putfield      #16                 // Field client:Lio/undertow/client/UndertowClient;
      85: aload_0
      86: aload_1
      87: putfield      #17                 // Field modCluster:Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;
      90: aload_0
      91: aload         4
      93: putfield      #18                 // Field clientOptions:Lorg/xnio/OptionMap;
      96: aload_0
      97: aload_1
      98: invokevirtual #19                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getHealthChecker:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
     101: putfield      #20                 // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
     104: aload_0
     105: new           #21                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyClient
     108: dup
     109: aconst_null
     110: aload_0
     111: invokespecial #22                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyClient."<init>":(Lio/undertow/server/handlers/proxy/ExclusivityChecker;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;)V
     114: putfield      #23                 // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
     117: aload_0
     118: aload_1
     119: invokevirtual #24                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getHealthCheckInterval:()J
     122: aload_1
     123: invokevirtual #25                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getRemoveBrokenNodes:()J
     126: invokestatic  #26                 // Method removeThreshold:(JJ)J
     129: putfield      #27                 // Field removeBrokenNodesThreshold:J
     132: return

  java.lang.String getServerID();
    Code:
       0: aload_0
       1: getfield      #17                 // Field modCluster:Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;
       4: invokevirtual #28                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getServerID:()Ljava/lang/String;
       7: areturn

  io.undertow.client.UndertowClient getClient();
    Code:
       0: aload_0
       1: getfield      #16                 // Field client:Lio/undertow/client/UndertowClient;
       4: areturn

  org.xnio.ssl.XnioSsl getXnioSsl();
    Code:
       0: aload_0
       1: getfield      #15                 // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
       4: areturn

  public io.undertow.server.handlers.proxy.ProxyClient getProxyClient();
    Code:
       0: aload_0
       1: getfield      #23                 // Field proxyClient:Lio/undertow/server/handlers/proxy/ProxyClient;
       4: areturn

  java.util.Collection<io.undertow.server.handlers.proxy.mod_cluster.Balancer> getBalancers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokestatic  #30                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  java.util.Collection<io.undertow.server.handlers.proxy.mod_cluster.Node> getNodes();
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokestatic  #30                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  io.undertow.server.handlers.proxy.mod_cluster.Node getNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget findTarget(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method mapVirtualHost:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/util/PathMatcher$PathMatch;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          211
      36: aload_3
      37: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #37                 // class io/undertow/server/handlers/proxy/mod_cluster/Balancer
      45: astore        4
      47: aload_1
      48: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getRequestCookies:()Ljava/util/Map;
      51: astore        5
      53: aload         4
      55: invokevirtual #39                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.isStickySession:()Z
      58: ifeq          208
      61: aload         5
      63: aload         4
      65: invokevirtual #40                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getStickySessionCookie:()Ljava/lang/String;
      68: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      73: ifeq          129
      76: aload         5
      78: aload         4
      80: invokevirtual #40                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getStickySessionCookie:()Ljava/lang/String;
      83: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      88: checkcast     #43                 // class io/undertow/server/handlers/Cookie
      91: invokeinterface #44,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      96: invokestatic  #45                 // Method getJVMRoute:(Ljava/lang/String;)Ljava/lang/String;
      99: astore        6
     101: aload         6
     103: ifnull        129
     106: new           #46                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$ExistingSessionTarget
     109: dup
     110: aload         6
     112: aload_2
     113: invokevirtual #47                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     116: checkcast     #48                 // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry
     119: aload_0
     120: aload         4
     122: invokevirtual #49                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.isStickySessionForce:()Z
     125: invokespecial #50                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$ExistingSessionTarget."<init>":(Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Z)V
     128: areturn
     129: aload_1
     130: invokevirtual #51                 // Method io/undertow/server/HttpServerExchange.getPathParameters:()Ljava/util/Map;
     133: aload         4
     135: invokevirtual #52                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getStickySessionPath:()Ljava/lang/String;
     138: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     143: ifeq          208
     146: aload_1
     147: invokevirtual #51                 // Method io/undertow/server/HttpServerExchange.getPathParameters:()Ljava/util/Map;
     150: aload         4
     152: invokevirtual #52                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getStickySessionPath:()Ljava/lang/String;
     155: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     160: checkcast     #53                 // class java/util/Deque
     163: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     168: checkcast     #55                 // class java/lang/String
     171: astore        6
     173: aload         6
     175: invokestatic  #45                 // Method getJVMRoute:(Ljava/lang/String;)Ljava/lang/String;
     178: astore        7
     180: aload         7
     182: ifnull        208
     185: new           #46                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$ExistingSessionTarget
     188: dup
     189: aload         7
     191: aload_2
     192: invokevirtual #47                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     195: checkcast     #48                 // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry
     198: aload_0
     199: aload         4
     201: invokevirtual #49                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.isStickySessionForce:()Z
     204: invokespecial #50                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$ExistingSessionTarget."<init>":(Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Z)V
     207: areturn
     208: goto          27
     211: new           #56                 // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$BasicTarget
     214: dup
     215: aload_2
     216: invokevirtual #47                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     219: checkcast     #48                 // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry
     222: aload_0
     223: invokespecial #57                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterProxyTarget$BasicTarget."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;)V
     226: areturn

  public synchronized boolean addNode(io.undertow.server.handlers.proxy.mod_cluster.NodeConfig, io.undertow.server.handlers.proxy.mod_cluster.Balancer$BalancerBuilder, org.xnio.XnioIoThread, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getJvmRoute:()Ljava/lang/String;
       4: astore        5
       6: aload_0
       7: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      10: aload         5
      12: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      20: astore        6
      22: aload         6
      24: ifnull        73
      27: aload_1
      28: invokevirtual #59                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getConnectionURI:()Ljava/net/URI;
      31: aload         6
      33: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getNodeConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
      36: invokevirtual #59                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getConnectionURI:()Ljava/net/URI;
      39: invokevirtual #61                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      42: ifeq          52
      45: aload         6
      47: invokevirtual #62                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.resetState:()V
      50: iconst_1
      51: ireturn
      52: aload         6
      54: invokevirtual #63                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.markRemoved:()V
      57: aload_0
      58: aload         6
      60: invokevirtual #64                 // Method removeNode:(Lio/undertow/server/handlers/proxy/mod_cluster/Node;)V
      63: aload         6
      65: invokevirtual #65                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.isInErrorState:()Z
      68: ifne          73
      71: iconst_0
      72: ireturn
      73: aload_1
      74: invokevirtual #66                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getBalancer:()Ljava/lang/String;
      77: astore        7
      79: aload_0
      80: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
      83: aload         7
      85: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #37                 // class io/undertow/server/handlers/proxy/mod_cluster/Balancer
      93: astore        8
      95: aload         8
      97: ifnonnull     120
     100: aload_2
     101: invokevirtual #67                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer$BalancerBuilder.build:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
     104: astore        8
     106: aload_0
     107: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
     110: aload         7
     112: aload         8
     114: invokeinterface #68,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: new           #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
     123: dup
     124: aload_1
     125: aload         8
     127: aload_3
     128: aload         4
     130: aload_0
     131: invokespecial #69                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;Lorg/xnio/XnioIoThread;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;)V
     134: astore        9
     136: aload_0
     137: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
     140: aload         5
     142: aload         9
     144: invokeinterface #68,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     149: pop
     150: aload_0
     151: aload         9
     153: aload_3
     154: invokevirtual #70                 // Method scheduleHealthCheck:(Lio/undertow/server/handlers/proxy/mod_cluster/Node;Lorg/xnio/XnioIoThread;)V
     157: aload_0
     158: getfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
     161: invokestatic  #71                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask.access$000:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;)Lorg/xnio/XnioExecutor$Key;
     164: ifnonnull     193
     167: aload_0
     168: getfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
     171: aload_3
     172: aload_0
     173: getfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
     176: aload_0
     177: getfield      #17                 // Field modCluster:Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;
     180: invokevirtual #24                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getHealthCheckInterval:()J
     183: getstatic     #72                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     186: invokevirtual #73                 // Method org/xnio/XnioIoThread.executeAtInterval:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     189: invokestatic  #74                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask.access$002:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;Lorg/xnio/XnioExecutor$Key;)Lorg/xnio/XnioExecutor$Key;
     192: pop
     193: aload_0
     194: getfield      #10                 // Field failoverDomains:Lio/undertow/server/handlers/cache/LRUCache;
     197: aload         9
     199: invokevirtual #75                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getJvmRoute:()Ljava/lang/String;
     202: invokevirtual #76                 // Method io/undertow/server/handlers/cache/LRUCache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     205: pop
     206: getstatic     #77                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     209: aload         5
     211: aload_1
     212: invokevirtual #59                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getConnectionURI:()Ljava/net/URI;
     215: invokeinterface #78,  3           // InterfaceMethod io/undertow/UndertowLogger.registeringNode:(Ljava/lang/String;Ljava/net/URI;)V
     220: iconst_1
     221: ireturn

  public synchronized boolean enableNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore_2
      14: aload_2
      15: ifnull        58
      18: aload_2
      19: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContexts:()Ljava/util/Collection;
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          56
      37: aload_3
      38: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
      46: astore        4
      48: aload         4
      50: invokevirtual #81                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.enable:()V
      53: goto          28
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public synchronized boolean disableNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore_2
      14: aload_2
      15: ifnull        58
      18: aload_2
      19: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContexts:()Ljava/util/Collection;
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          56
      37: aload_3
      38: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
      46: astore        4
      48: aload         4
      50: invokevirtual #82                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.disable:()V
      53: goto          28
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public synchronized boolean stopNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore_2
      14: aload_2
      15: ifnull        58
      18: aload_2
      19: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContexts:()Ljava/util/Collection;
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          56
      37: aload_3
      38: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
      46: astore        4
      48: aload         4
      50: invokevirtual #83                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.stop:()V
      53: goto          28
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public synchronized io.undertow.server.handlers.proxy.mod_cluster.Node removeNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_0
      19: aload_2
      20: invokevirtual #64                 // Method removeNode:(Lio/undertow/server/handlers/proxy/mod_cluster/Node;)V
      23: aload_2
      24: areturn

  protected void removeNode(io.undertow.server.handlers.proxy.mod_cluster.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #84                 // Method removeNode:(Lio/undertow/server/handlers/proxy/mod_cluster/Node;Z)V
       6: return

  protected synchronized void removeNode(io.undertow.server.handlers.proxy.mod_cluster.Node, boolean);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_1
       5: invokevirtual #65                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.isInErrorState:()Z
       8: ifne          12
      11: return
      12: aload_1
      13: invokevirtual #75                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getJvmRoute:()Ljava/lang/String;
      16: astore_3
      17: aload_1
      18: invokevirtual #63                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.markRemoved:()V
      21: aload_0
      22: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      25: aload_3
      26: aload_1
      27: invokeinterface #85,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          215
      35: getstatic     #77                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      38: aload_3
      39: invokeinterface #86,  2           // InterfaceMethod io/undertow/UndertowLogger.removingNode:(Ljava/lang/String;)V
      44: aload_1
      45: invokevirtual #63                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.markRemoved:()V
      48: aload_0
      49: aload_1
      50: aload_1
      51: invokevirtual #87                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getIoThread:()Lorg/xnio/XnioIoThread;
      54: invokevirtual #88                 // Method removeHealthCheck:(Lio/undertow/server/handlers/proxy/mod_cluster/Node;Lorg/xnio/XnioIoThread;)V
      57: aload_1
      58: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContexts:()Ljava/util/Collection;
      61: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      66: astore        4
      68: aload         4
      70: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          109
      78: aload         4
      80: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
      88: astore        5
      90: aload_0
      91: aload         5
      93: invokevirtual #89                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getPath:()Ljava/lang/String;
      96: aload_1
      97: aload         5
      99: invokevirtual #90                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getVirtualHosts:()Ljava/util/List;
     102: invokevirtual #91                 // Method removeContext:(Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/Node;Ljava/util/List;)Z
     105: pop
     106: goto          68
     109: aload_1
     110: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getNodeConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
     113: invokevirtual #92                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getDomain:()Ljava/lang/String;
     116: astore        4
     118: aload         4
     120: ifnull        136
     123: aload_0
     124: getfield      #10                 // Field failoverDomains:Lio/undertow/server/handlers/cache/LRUCache;
     127: aload_1
     128: invokevirtual #75                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getJvmRoute:()Ljava/lang/String;
     131: aload         4
     133: invokevirtual #93                 // Method io/undertow/server/handlers/cache/LRUCache.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     136: aload_1
     137: invokevirtual #94                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getBalancer:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
     140: invokevirtual #95                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getName:()Ljava/lang/String;
     143: astore        5
     145: aload_0
     146: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
     149: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     154: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     159: astore        6
     161: aload         6
     163: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     168: ifeq          203
     171: aload         6
     173: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     178: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
     181: astore        7
     183: aload         7
     185: invokevirtual #94                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getBalancer:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
     188: invokevirtual #95                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getName:()Ljava/lang/String;
     191: aload         5
     193: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     196: ifeq          200
     199: return
     200: goto          161
     203: aload_0
     204: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
     207: aload         5
     209: invokeinterface #97,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     214: pop
     215: aload_0
     216: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
     219: invokeinterface #98,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     224: ifne          249
     227: aload_0
     228: getfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
     231: invokestatic  #71                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask.access$000:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;)Lorg/xnio/XnioExecutor$Key;
     234: invokeinterface #99,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     239: pop
     240: aload_0
     241: getfield      #14                 // Field updateLoadTask:Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;
     244: aconst_null
     245: invokestatic  #74                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask.access$002:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$UpdateLoadTask;Lorg/xnio/XnioExecutor$Key;)Lorg/xnio/XnioExecutor$Key;
     248: pop
     249: return

  public synchronized boolean enableContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore        4
      15: aload         4
      17: ifnull        157
      20: aload         4
      22: aload_1
      23: aload_3
      24: invokevirtual #100                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContext:(Ljava/lang/String;Ljava/util/List;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      27: astore        5
      29: aload         5
      31: ifnonnull     150
      34: aload         4
      36: aload_1
      37: aload_3
      38: invokevirtual #101                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.registerContext:(Ljava/lang/String;Ljava/util/List;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      41: astore        5
      43: getstatic     #77                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      46: aload_1
      47: aload_2
      48: invokeinterface #102,  3          // InterfaceMethod io/undertow/UndertowLogger.registeringContext:(Ljava/lang/String;Ljava/lang/String;)V
      53: getstatic     #77                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokeinterface #103,  4          // InterfaceMethod io/undertow/UndertowLogger.registeringContext:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
      64: aload_3
      65: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      70: astore        6
      72: aload         6
      74: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          150
      82: aload         6
      84: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #55                 // class java/lang/String
      92: astore        7
      94: aload_0
      95: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      98: aload         7
     100: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
     108: astore        8
     110: aload         8
     112: ifnonnull     138
     115: new           #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
     118: dup
     119: invokespecial #106                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost."<init>":()V
     122: astore        8
     124: aload_0
     125: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
     128: aload         7
     130: aload         8
     132: invokeinterface #68,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: aload         8
     140: aload_1
     141: aload_2
     142: aload         5
     144: invokevirtual #107                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost.registerContext:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/Context;)V
     147: goto          72
     150: aload         5
     152: invokevirtual #81                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.enable:()V
     155: iconst_1
     156: ireturn
     157: iconst_0
     158: ireturn

  public synchronized boolean disableContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore        4
      15: aload         4
      17: ifnull        30
      20: aload         4
      22: aload_1
      23: aload_3
      24: invokevirtual #108                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.disableContext:(Ljava/lang/String;Ljava/util/List;)Z
      27: pop
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: ireturn

  synchronized int stopContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore        4
      15: aload         4
      17: ifnull        28
      20: aload         4
      22: aload_1
      23: aload_3
      24: invokevirtual #109                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.stopContext:(Ljava/lang/String;Ljava/util/List;)I
      27: ireturn
      28: iconst_m1
      29: ireturn

  synchronized boolean removeContext(java.lang.String, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      13: astore        4
      15: aload         4
      17: ifnull        29
      20: aload_0
      21: aload_1
      22: aload         4
      24: aload_3
      25: invokevirtual #91                 // Method removeContext:(Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/Node;Ljava/util/List;)Z
      28: ireturn
      29: iconst_0
      30: ireturn

  public synchronized boolean removeContext(java.lang.String, io.undertow.server.handlers.proxy.mod_cluster.Node, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_2
       7: invokevirtual #75                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getJvmRoute:()Ljava/lang/String;
      10: astore        4
      12: getstatic     #77                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
      15: aload_1
      16: aload         4
      18: invokeinterface #110,  3          // InterfaceMethod io/undertow/UndertowLogger.unregisteringContext:(Ljava/lang/String;Ljava/lang/String;)V
      23: aload_2
      24: aload_1
      25: aload_3
      26: invokevirtual #111                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.removeContext:(Ljava/lang/String;Ljava/util/List;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: iconst_0
      37: ireturn
      38: aload         5
      40: invokevirtual #83                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.stop:()V
      43: aload         5
      45: invokevirtual #90                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getVirtualHosts:()Ljava/util/List;
      48: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore        6
      55: aload         6
      57: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          131
      65: aload         6
      67: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #55                 // class java/lang/String
      75: astore        7
      77: aload_0
      78: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      81: aload         7
      83: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      88: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
      91: astore        8
      93: aload         8
      95: ifnull        128
      98: aload         8
     100: aload_1
     101: aload         4
     103: aload         5
     105: invokevirtual #112                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost.removeContext:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/proxy/mod_cluster/Context;)V
     108: aload         8
     110: invokevirtual #113                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost.isEmpty:()Z
     113: ifeq          128
     116: aload_0
     117: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
     120: aload         7
     122: invokeinterface #97,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: goto          55
     131: iconst_1
     132: ireturn

  io.undertow.server.handlers.proxy.mod_cluster.Context findNewNode(io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry);
    Code:
       0: aload_1
       1: invokevirtual #114                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry.getContexts:()Ljava/util/Collection;
       4: iconst_0
       5: aconst_null
       6: invokestatic  #115                // Method electNode:(Ljava/lang/Iterable;ZLjava/lang/String;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
       9: areturn

  io.undertow.server.handlers.proxy.mod_cluster.Context findFailoverNode(io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry, java.lang.String, java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_2
       4: ifnonnull     58
       7: aload_0
       8: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      11: aload_3
      12: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      20: astore        6
      22: aload         6
      24: ifnull        37
      27: aload         6
      29: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getNodeConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
      32: invokevirtual #92                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getDomain:()Ljava/lang/String;
      35: astore        5
      37: aload         5
      39: ifnonnull     55
      42: aload_0
      43: getfield      #10                 // Field failoverDomains:Lio/undertow/server/handlers/cache/LRUCache;
      46: aload_3
      47: invokevirtual #116                // Method io/undertow/server/handlers/cache/LRUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #55                 // class java/lang/String
      53: astore        5
      55: goto          61
      58: aload_2
      59: astore        5
      61: aload_1
      62: invokevirtual #114                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost$HostEntry.getContexts:()Ljava/util/Collection;
      65: astore        6
      67: aload         5
      69: ifnull        90
      72: aload         6
      74: iconst_1
      75: aload         5
      77: invokestatic  #115                // Method electNode:(Ljava/lang/Iterable;ZLjava/lang/String;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
      80: astore        7
      82: aload         7
      84: ifnull        90
      87: aload         7
      89: areturn
      90: iload         4
      92: ifeq          97
      95: aconst_null
      96: areturn
      97: aload         6
      99: iconst_0
     100: aconst_null
     101: invokestatic  #115                // Method electNode:(Ljava/lang/Iterable;ZLjava/lang/String;)Lio/undertow/server/handlers/proxy/mod_cluster/Context;
     104: areturn

  private io.undertow.util.PathMatcher$PathMatch<io.undertow.server.handlers.proxy.mod_cluster.VirtualHost$HostEntry> mapVirtualHost(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #17                 // Field modCluster:Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;
       9: invokevirtual #118                // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.isUseAlias:()Z
      12: ifeq          133
      15: aload_1
      16: invokevirtual #119                // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      19: getstatic     #120                // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      22: invokevirtual #121                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: ifnull        130
      30: aload_3
      31: ldc           #122                // String :
      33: invokevirtual #123                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      36: istore        4
      38: iload         4
      40: ifle          87
      43: aload_0
      44: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      47: aload_3
      48: iconst_0
      49: iload         4
      51: invokevirtual #124                // Method java/lang/String.substring:(II)Ljava/lang/String;
      54: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
      62: astore        5
      64: aload         5
      66: ifnonnull     102
      69: aload_0
      70: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      73: aload_3
      74: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
      82: astore        5
      84: goto          102
      87: aload_0
      88: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
      91: aload_3
      92: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
     100: astore        5
     102: aload         5
     104: ifnonnull     109
     107: aconst_null
     108: areturn
     109: aload         5
     111: aload_2
     112: invokevirtual #125                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost.match:(Ljava/lang/String;)Lio/undertow/util/PathMatcher$PathMatch;
     115: astore        6
     117: aload         6
     119: invokevirtual #47                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     122: ifnonnull     127
     125: aconst_null
     126: areturn
     127: aload         6
     129: areturn
     130: goto          198
     133: aload_0
     134: getfield      #6                  // Field hosts:Ljava/util/concurrent/ConcurrentMap;
     137: invokeinterface #126,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
     142: invokeinterface #127,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     147: astore_3
     148: aload_3
     149: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     154: ifeq          198
     157: aload_3
     158: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #128                // class java/util/Map$Entry
     166: astore        4
     168: aload         4
     170: invokeinterface #129,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     175: checkcast     #105                // class io/undertow/server/handlers/proxy/mod_cluster/VirtualHost
     178: aload_2
     179: invokevirtual #125                // Method io/undertow/server/handlers/proxy/mod_cluster/VirtualHost.match:(Ljava/lang/String;)Lio/undertow/util/PathMatcher$PathMatch;
     182: astore        5
     184: aload         5
     186: invokevirtual #47                 // Method io/undertow/util/PathMatcher$PathMatch.getValue:()Ljava/lang/Object;
     189: ifnull        195
     192: aload         5
     194: areturn
     195: goto          148
     198: aconst_null
     199: areturn

  org.xnio.OptionMap getClientOptions();
    Code:
       0: aload_0
       1: getfield      #18                 // Field clientOptions:Lorg/xnio/OptionMap;
       4: areturn

  static java.lang.String getJVMRoute(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokevirtual #130                // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iconst_m1
       9: if_icmpne     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: iconst_1
      17: iadd
      18: invokevirtual #131                // Method java/lang/String.substring:(I)Ljava/lang/String;
      21: areturn

  static io.undertow.server.handlers.proxy.mod_cluster.Context electNode(java.lang.Iterable<io.undertow.server.handlers.proxy.mod_cluster.Context>, boolean, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: iconst_0
       6: istore        5
       8: aload_0
       9: invokeinterface #132,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore        6
      16: aload         6
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          191
      26: aload         6
      28: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
      36: astore        7
      38: aload         7
      40: iload_1
      41: invokevirtual #133                // Method io/undertow/server/handlers/proxy/mod_cluster/Context.checkAvailable:(Z)Z
      44: ifeq          188
      47: aload         7
      49: invokevirtual #134                // Method io/undertow/server/handlers/proxy/mod_cluster/Context.getNode:()Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      52: astore        8
      54: aload         8
      56: invokevirtual #135                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.isHotStandby:()Z
      59: istore        9
      61: aload_2
      62: ifnull        83
      65: aload_2
      66: aload         8
      68: invokevirtual #60                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getNodeConfig:()Lio/undertow/server/handlers/proxy/mod_cluster/NodeConfig;
      71: invokevirtual #92                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodeConfig.getDomain:()Ljava/lang/String;
      74: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifne          83
      80: goto          16
      83: aload         4
      85: ifnull        177
      88: iload         5
      90: ifeq          135
      93: iload         9
      95: ifeq          121
      98: aload         4
     100: invokevirtual #136                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getElectedDiff:()I
     103: aload         8
     105: invokevirtual #136                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getElectedDiff:()I
     108: if_icmple     188
     111: aload         8
     113: astore        4
     115: aload         7
     117: astore_3
     118: goto          188
     121: aload         8
     123: astore        4
     125: aload         7
     127: astore_3
     128: iload         9
     130: istore        5
     132: goto          188
     135: iload         9
     137: ifeq          143
     140: goto          16
     143: aload         4
     145: invokevirtual #137                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getLoadStatus:()I
     148: istore        10
     150: aload         8
     152: invokevirtual #137                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getLoadStatus:()I
     155: istore        11
     157: iload         10
     159: iload         11
     161: if_icmple     174
     164: aload         8
     166: astore        4
     168: aload         7
     170: astore_3
     171: iconst_0
     172: istore        5
     174: goto          188
     177: aload         8
     179: astore        4
     181: aload         7
     183: astore_3
     184: iload         9
     186: istore        5
     188: goto          16
     191: aload         4
     193: ifnull        201
     196: aload         4
     198: invokevirtual #138                // Method io/undertow/server/handlers/proxy/mod_cluster/Node.elected:()V
     201: aload_3
     202: areturn

  void scheduleHealthCheck(io.undertow.server.handlers.proxy.mod_cluster.Node, org.xnio.XnioIoThread);
    Code:
       0: getstatic     #139                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #140                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #141                // class java/lang/AssertionError
      16: dup
      17: invokespecial #142                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #11                 // Field healthChecks:Ljava/util/concurrent/ConcurrentMap;
      25: aload_2
      26: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #143                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask
      34: astore_3
      35: aload_3
      36: ifnonnull     87
      39: new           #143                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask
      42: dup
      43: aload_0
      44: getfield      #27                 // Field removeBrokenNodesThreshold:J
      47: aload_0
      48: getfield      #20                 // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      51: invokespecial #144                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask."<init>":(JLio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;)V
      54: astore_3
      55: aload_0
      56: getfield      #11                 // Field healthChecks:Ljava/util/concurrent/ConcurrentMap;
      59: aload_2
      60: aload_3
      61: invokeinterface #68,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload_3
      68: aload_2
      69: aload_3
      70: aload_0
      71: getfield      #17                 // Field modCluster:Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster;
      74: invokevirtual #24                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster.getHealthCheckInterval:()J
      77: getstatic     #72                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      80: invokevirtual #73                 // Method org/xnio/XnioIoThread.executeAtInterval:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      83: invokestatic  #145                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask.access$102:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask;Lorg/xnio/XnioExecutor$Key;)Lorg/xnio/XnioExecutor$Key;
      86: pop
      87: aload_3
      88: invokestatic  #146                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask.access$200:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask;)Ljava/util/ArrayList;
      91: aload_1
      92: invokevirtual #147                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      95: pop
      96: return

  void removeHealthCheck(io.undertow.server.handlers.proxy.mod_cluster.Node, org.xnio.XnioIoThread);
    Code:
       0: getstatic     #139                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #140                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #141                // class java/lang/AssertionError
      16: dup
      17: invokespecial #142                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #11                 // Field healthChecks:Ljava/util/concurrent/ConcurrentMap;
      25: aload_2
      26: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #143                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask
      34: astore_3
      35: aload_3
      36: ifnonnull     40
      39: return
      40: aload_3
      41: invokestatic  #146                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask.access$200:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask;)Ljava/util/ArrayList;
      44: aload_1
      45: invokevirtual #148                // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
      48: pop
      49: aload_3
      50: invokestatic  #146                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask.access$200:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask;)Ljava/util/ArrayList;
      53: invokevirtual #149                // Method java/util/ArrayList.size:()I
      56: ifne          80
      59: aload_0
      60: getfield      #11                 // Field healthChecks:Ljava/util/concurrent/ConcurrentMap;
      63: aload_2
      64: invokeinterface #97,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload_3
      71: invokestatic  #150                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask.access$100:(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$HealthCheckTask;)Lorg/xnio/XnioExecutor$Key;
      74: invokeinterface #99,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      79: pop
      80: return

  static long removeThreshold(long, long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifle          42
       6: lload_2
       7: lconst_0
       8: lcmp
       9: ifle          42
      12: lload_2
      13: lload_0
      14: ldiv
      15: lstore        4
      17: lload         4
      19: ldc2_w        #151                // long 1000l
      22: lcmp
      23: ifle          30
      26: ldc2_w        #151                // long 1000l
      29: lreturn
      30: lload         4
      32: lconst_1
      33: lcmp
      34: ifge          39
      37: lconst_1
      38: lreturn
      39: lload         4
      41: lreturn
      42: ldc2_w        #153                // long -1l
      45: lreturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModClusterStatus getStatus();
    Code:
       0: new           #155                // class java/util/ArrayList
       3: dup
       4: invokespecial #156                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field balancers:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #126,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #127,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          223
      32: aload_2
      33: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #128                // class java/util/Map$Entry
      41: astore_3
      42: new           #155                // class java/util/ArrayList
      45: dup
      46: invokespecial #156                // Method java/util/ArrayList."<init>":()V
      49: astore        4
      51: aload_0
      52: invokevirtual #157                // Method getNodes:()Ljava/util/Collection;
      55: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore        5
      62: aload         5
      64: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          193
      72: aload         5
      74: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #32                 // class io/undertow/server/handlers/proxy/mod_cluster/Node
      82: astore        6
      84: aload         6
      86: invokevirtual #94                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getBalancer:()Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;
      89: invokevirtual #95                 // Method io/undertow/server/handlers/proxy/mod_cluster/Balancer.getName:()Ljava/lang/String;
      92: aload_3
      93: invokeinterface #158,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      98: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     101: ifeq          190
     104: new           #155                // class java/util/ArrayList
     107: dup
     108: invokespecial #156                // Method java/util/ArrayList."<init>":()V
     111: astore        7
     113: aload         6
     115: invokevirtual #79                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getContexts:()Ljava/util/Collection;
     118: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     123: astore        8
     125: aload         8
     127: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     132: ifeq          169
     135: aload         8
     137: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     142: checkcast     #80                 // class io/undertow/server/handlers/proxy/mod_cluster/Context
     145: astore        9
     147: aload         7
     149: new           #159                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$ContextImpl
     152: dup
     153: aload_0
     154: aload         9
     156: aconst_null
     157: invokespecial #160                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$ContextImpl."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Lio/undertow/server/handlers/proxy/mod_cluster/Context;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$1;)V
     160: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     165: pop
     166: goto          125
     169: aload         4
     171: new           #162                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$NodeImpl
     174: dup
     175: aload_0
     176: aload         6
     178: aload         7
     180: aconst_null
     181: invokespecial #163                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$NodeImpl."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Lio/undertow/server/handlers/proxy/mod_cluster/Node;Ljava/util/List;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$1;)V
     184: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     189: pop
     190: goto          62
     193: aload_1
     194: new           #164                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$BalancerImpl
     197: dup
     198: aload_0
     199: aload_3
     200: invokeinterface #129,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     205: checkcast     #37                 // class io/undertow/server/handlers/proxy/mod_cluster/Balancer
     208: aload         4
     210: aconst_null
     211: invokespecial #165                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$BalancerImpl."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Lio/undertow/server/handlers/proxy/mod_cluster/Balancer;Ljava/util/List;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$1;)V
     214: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     219: pop
     220: goto          23
     223: new           #166                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$ModClusterStatusImpl
     226: dup
     227: aload_0
     228: aload_1
     229: aconst_null
     230: invokespecial #167                // Method io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$ModClusterStatusImpl."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer;Ljava/util/List;Lio/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer$1;)V
     233: areturn

  static java.util.concurrent.ConcurrentMap access$300(io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static {};
    Code:
       0: ldc           #168                // class io/undertow/server/handlers/proxy/mod_cluster/ModClusterContainer
       2: invokevirtual #169                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #139                // Field $assertionsDisabled:Z
      16: return
}
