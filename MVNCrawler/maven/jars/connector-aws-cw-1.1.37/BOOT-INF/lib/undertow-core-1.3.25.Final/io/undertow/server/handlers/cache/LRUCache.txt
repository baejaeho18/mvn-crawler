Compiled from "LRUCache.java"
public class io.undertow.server.handlers.cache.LRUCache<K, V> {
  private static final int SAMPLE_INTERVAL;

  private final int maxEntries;

  private final java.util.concurrent.ConcurrentMap<K, io.undertow.server.handlers.cache.LRUCache$CacheEntry<K, V>> cache;

  private final io.undertow.util.ConcurrentDirectDeque<io.undertow.server.handlers.cache.LRUCache$CacheEntry<K, V>> accessQueue;

  private final int maxAge;

  private final boolean fifo;

  public io.undertow.server.handlers.cache.LRUCache(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field maxAge:I
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: bipush        16
      16: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      19: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      22: aload_0
      23: invokestatic  #6                  // Method io/undertow/util/ConcurrentDirectDeque.newInstance:()Lio/undertow/util/ConcurrentDirectDeque;
      26: putfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      29: aload_0
      30: iload_1
      31: putfield      #8                  // Field maxEntries:I
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field fifo:Z
      39: return

  public io.undertow.server.handlers.cache.LRUCache(int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field maxAge:I
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: bipush        16
      16: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      19: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      22: aload_0
      23: invokestatic  #6                  // Method io/undertow/util/ConcurrentDirectDeque.newInstance:()Lio/undertow/util/ConcurrentDirectDeque;
      26: putfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      29: aload_0
      30: iload_1
      31: putfield      #8                  // Field maxEntries:I
      34: aload_0
      35: iload_3
      36: putfield      #9                  // Field fifo:Z
      39: return

  public void add(K, V);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      13: astore_3
      14: aload_3
      15: ifnonnull     136
      18: aload_0
      19: getfield      #2                  // Field maxAge:I
      22: iconst_m1
      23: if_icmpne     34
      26: ldc2_w        #12                 // long -1l
      29: lstore        4
      31: goto          45
      34: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      37: aload_0
      38: getfield      #2                  // Field maxAge:I
      41: i2l
      42: ladd
      43: lstore        4
      45: new           #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      48: dup
      49: aload_1
      50: aload_2
      51: lload         4
      53: aconst_null
      54: invokespecial #15                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;JLio/undertow/server/handlers/cache/LRUCache$1;)V
      57: astore_3
      58: aload_0
      59: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      62: aload_1
      63: aload_3
      64: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      72: astore        6
      74: aload         6
      76: ifnull        87
      79: aload         6
      81: astore_3
      82: aload_3
      83: aload_2
      84: invokevirtual #17                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.setValue:(Ljava/lang/Object;)V
      87: aload_0
      88: aload_3
      89: invokespecial #18                 // Method bumpAccess:(Lio/undertow/server/handlers/cache/LRUCache$CacheEntry;)V
      92: aload_0
      93: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      96: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     101: aload_0
     102: getfield      #8                  // Field maxEntries:I
     105: if_icmple     136
     108: aload_0
     109: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
     112: invokevirtual #20                 // Method io/undertow/util/ConcurrentDirectDeque.poll:()Ljava/lang/Object;
     115: checkcast     #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
     118: astore        7
     120: aload         7
     122: aload_3
     123: if_acmpeq     136
     126: aload_0
     127: aload         7
     129: invokevirtual #21                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.key:()Ljava/lang/Object;
     132: invokevirtual #22                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: return

  public V get(K);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: invokevirtual #23                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.getExpires:()J
      24: lstore_3
      25: lload_3
      26: ldc2_w        #12                 // long -1l
      29: lcmp
      30: ifeq          49
      33: invokestatic  #14                 // Method java/lang/System.currentTimeMillis:()J
      36: lload_3
      37: lcmp
      38: ifle          49
      41: aload_0
      42: aload_1
      43: invokevirtual #22                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aconst_null
      48: areturn
      49: aload_0
      50: getfield      #9                  // Field fifo:Z
      53: ifne          70
      56: aload_2
      57: invokevirtual #24                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.hit:()I
      60: iconst_5
      61: irem
      62: ifne          70
      65: aload_0
      66: aload_2
      67: invokespecial #18                 // Method bumpAccess:(Lio/undertow/server/handlers/cache/LRUCache$CacheEntry;)V
      70: aload_2
      71: invokevirtual #26                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.getValue:()Ljava/lang/Object;
      74: areturn

  private void bumpAccess(io.undertow.server.handlers.cache.LRUCache$CacheEntry<K, V>);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.claimToken:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: getstatic     #28                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       9: if_acmpeq     60
      12: aload_2
      13: ifnull        24
      16: aload_0
      17: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      20: aload_2
      21: invokevirtual #29                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      24: aconst_null
      25: astore_3
      26: aload_0
      27: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      30: aload_1
      31: invokevirtual #30                 // Method io/undertow/util/ConcurrentDirectDeque.offerLastAndReturnToken:(Ljava/lang/Object;)Ljava/lang/Object;
      34: astore_3
      35: goto          40
      38: astore        4
      40: aload_1
      41: aload_3
      42: invokevirtual #32                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.setToken:(Ljava/lang/Object;)Z
      45: ifne          60
      48: aload_3
      49: ifnull        60
      52: aload_0
      53: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      56: aload_3
      57: invokevirtual #29                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      60: return
    Exception table:
       from    to  target type
          26    35    38   Class java/lang/Throwable

  public V remove(K);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class io/undertow/server/handlers/cache/LRUCache$CacheEntry
      13: astore_2
      14: aload_2
      15: ifnull        40
      18: aload_2
      19: invokevirtual #34                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.clearToken:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: ifnull        35
      27: aload_0
      28: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      31: aload_3
      32: invokevirtual #29                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      35: aload_2
      36: invokevirtual #26                 // Method io/undertow/server/handlers/cache/LRUCache$CacheEntry.getValue:()Ljava/lang/Object;
      39: areturn
      40: aconst_null
      41: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: getfield      #7                  // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      13: invokevirtual #36                 // Method io/undertow/util/ConcurrentDirectDeque.clear:()V
      16: return
}
