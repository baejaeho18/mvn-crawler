Compiled from "ProxyHandler.java"
final class io.undertow.server.handlers.proxy.ProxyHandler$HTTPTrailerChannelListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> {
  private final io.undertow.util.Attachable source;

  private final io.undertow.util.Attachable target;

  private io.undertow.server.handlers.proxy.ProxyHandler$HTTPTrailerChannelListener(io.undertow.util.Attachable, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field source:Lio/undertow/util/Attachable;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field target:Lio/undertow/util/Attachable;
      14: return

  public void handleEvent(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field source:Lio/undertow/util/Attachable;
       4: getstatic     #5                  // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
       7: invokeinterface #6,  2            // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      12: checkcast     #7                  // class io/undertow/util/HeaderMap
      15: astore_2
      16: aload_2
      17: ifnull        34
      20: aload_0
      21: getfield      #4                  // Field target:Lio/undertow/util/Attachable;
      24: getstatic     #8                  // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
      27: aload_2
      28: invokeinterface #9,  3            // InterfaceMethod io/undertow/util/Attachable.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_1
      35: invokeinterface #10,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      40: aload_1
      41: invokeinterface #11,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      46: ifne          83
      49: aload_1
      50: invokeinterface #12,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      55: new           #13                 // class io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener$1
      58: dup
      59: aload_0
      60: invokespecial #14                 // Method io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener;)V
      63: invokestatic  #15                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      66: invokestatic  #16                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      69: invokeinterface #17,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      74: aload_1
      75: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
      80: goto          101
      83: aload_1
      84: invokeinterface #12,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      89: aconst_null
      90: invokeinterface #17,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      95: aload_1
      96: invokeinterface #10,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     101: goto          142
     104: astore_3
     105: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     108: aload_3
     109: invokeinterface #21,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     114: aload_1
     115: invokestatic  #22                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     118: goto          142
     121: astore_3
     122: getstatic     #20                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     125: new           #19                 // class java/io/IOException
     128: dup
     129: aload_3
     130: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     133: invokeinterface #21,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     138: aload_1
     139: invokestatic  #22                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     142: return
    Exception table:
       from    to  target type
          34   101   104   Class java/io/IOException
          34   101   121   Class java/lang/Exception

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/xnio/channels/StreamSinkChannel
       5: invokevirtual #26                 // Method handleEvent:(Lorg/xnio/channels/StreamSinkChannel;)V
       8: return

  io.undertow.server.handlers.proxy.ProxyHandler$HTTPTrailerChannelListener(io.undertow.util.Attachable, io.undertow.util.Attachable, io.undertow.server.handlers.proxy.ProxyHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/Attachable;)V
       6: return
}
