Compiled from "SpdyPushBackParser.java"
public abstract class io.undertow.protocols.spdy.SpdyPushBackParser {
  private byte[] pushedBackData;

  private boolean finished;

  protected int streamId;

  private int remainingData;

  public io.undertow.protocols.spdy.SpdyPushBackParser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field streamId:I
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field remainingData:I
      14: return

  public void parse(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: astore_3
       4: aload_3
       5: invokevirtual #4                  // Method java/nio/ByteBuffer.limit:()I
       8: istore        4
      10: aload_0
      11: getfield      #5                  // Field pushedBackData:[B
      14: ifnull        59
      17: aload_0
      18: getfield      #5                  // Field pushedBackData:[B
      21: arraylength
      22: aload_1
      23: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      26: iadd
      27: newarray       byte
      29: invokestatic  #7                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      32: astore_3
      33: aload_3
      34: aload_0
      35: getfield      #5                  // Field pushedBackData:[B
      38: invokevirtual #8                  // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      41: pop
      42: aload_3
      43: aload_1
      44: invokevirtual #9                  // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      47: pop
      48: aload_3
      49: invokevirtual #10                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      52: pop
      53: aload_3
      54: invokevirtual #4                  // Method java/nio/ByteBuffer.limit:()I
      57: istore        4
      59: aload_3
      60: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      63: aload_0
      64: getfield      #3                  // Field remainingData:I
      67: if_icmple     84
      70: aload_3
      71: aload_3
      72: invokevirtual #11                 // Method java/nio/ByteBuffer.position:()I
      75: aload_0
      76: getfield      #3                  // Field remainingData:I
      79: iadd
      80: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      83: pop
      84: aload_3
      85: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      88: istore        5
      90: aload_0
      91: aload_3
      92: invokevirtual #13                 // Method handleData:(Ljava/nio/ByteBuffer;)V
      95: iload         5
      97: aload_3
      98: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
     101: isub
     102: istore_2
     103: aload_3
     104: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
     107: istore        5
     109: iload         5
     111: ifle          134
     114: aload_0
     115: iload         5
     117: newarray       byte
     119: putfield      #5                  // Field pushedBackData:[B
     122: aload_3
     123: aload_0
     124: getfield      #5                  // Field pushedBackData:[B
     127: invokevirtual #14                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     130: pop
     131: goto          139
     134: aload_0
     135: aconst_null
     136: putfield      #5                  // Field pushedBackData:[B
     139: aload_3
     140: iload         4
     142: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     145: pop
     146: aload_0
     147: dup
     148: getfield      #3                  // Field remainingData:I
     151: iload_2
     152: isub
     153: putfield      #3                  // Field remainingData:I
     156: aload_0
     157: getfield      #3                  // Field remainingData:I
     160: ifne          172
     163: aload_0
     164: iconst_1
     165: putfield      #15                 // Field finished:Z
     168: aload_0
     169: invokevirtual #16                 // Method finished:()V
     172: goto          249
     175: astore        6
     177: aload_3
     178: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
     181: istore        7
     183: iload         7
     185: ifle          208
     188: aload_0
     189: iload         7
     191: newarray       byte
     193: putfield      #5                  // Field pushedBackData:[B
     196: aload_3
     197: aload_0
     198: getfield      #5                  // Field pushedBackData:[B
     201: invokevirtual #14                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     204: pop
     205: goto          213
     208: aload_0
     209: aconst_null
     210: putfield      #5                  // Field pushedBackData:[B
     213: aload_3
     214: iload         4
     216: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     219: pop
     220: aload_0
     221: dup
     222: getfield      #3                  // Field remainingData:I
     225: iload_2
     226: isub
     227: putfield      #3                  // Field remainingData:I
     230: aload_0
     231: getfield      #3                  // Field remainingData:I
     234: ifne          246
     237: aload_0
     238: iconst_1
     239: putfield      #15                 // Field finished:Z
     242: aload_0
     243: invokevirtual #16                 // Method finished:()V
     246: aload         6
     248: athrow
     249: return
    Exception table:
       from    to  target type
          10   103   175   any
         175   177   175   any

  protected void finished() throws java.io.IOException;
    Code:
       0: return

  protected abstract void handleData(java.nio.ByteBuffer) throws java.io.IOException;

  public boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #15                 // Field finished:Z
       4: ireturn

  public int getStreamId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field streamId:I
       4: ireturn
}
