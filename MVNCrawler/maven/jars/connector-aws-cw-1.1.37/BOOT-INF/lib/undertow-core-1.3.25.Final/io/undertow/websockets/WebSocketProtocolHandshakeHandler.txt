Compiled from "WebSocketProtocolHandshakeHandler.java"
public class io.undertow.websockets.WebSocketProtocolHandshakeHandler implements io.undertow.server.HttpHandler {
  private final java.util.Set<io.undertow.websockets.core.protocol.Handshake> handshakes;

  private final io.undertow.server.HttpUpgradeListener upgradeListener;

  private final io.undertow.websockets.WebSocketConnectionCallback callback;

  private final java.util.Set<io.undertow.websockets.core.WebSocketChannel> peerConnections;

  private final io.undertow.server.HttpHandler next;

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(io.undertow.websockets.WebSocketConnectionCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
       5: invokespecial #4                  // Method "<init>":(Lio/undertow/websockets/WebSocketConnectionCallback;Lio/undertow/server/HttpHandler;)V
       8: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(io.undertow.websockets.WebSocketConnectionCallback, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #8                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #2                  // Field peerConnections:Ljava/util/Set;
      18: aload_0
      19: aload_1
      20: putfield      #1                  // Field callback:Lio/undertow/websockets/WebSocketConnectionCallback;
      23: new           #9                  // class java/util/HashSet
      26: dup
      27: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      30: astore_3
      31: aload_3
      32: new           #11                 // class io/undertow/websockets/core/protocol/version13/Hybi13Handshake
      35: dup
      36: invokespecial #12                 // Method io/undertow/websockets/core/protocol/version13/Hybi13Handshake."<init>":()V
      39: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_3
      46: new           #14                 // class io/undertow/websockets/core/protocol/version08/Hybi08Handshake
      49: dup
      50: invokespecial #15                 // Method io/undertow/websockets/core/protocol/version08/Hybi08Handshake."<init>":()V
      53: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_3
      60: new           #16                 // class io/undertow/websockets/core/protocol/version07/Hybi07Handshake
      63: dup
      64: invokespecial #17                 // Method io/undertow/websockets/core/protocol/version07/Hybi07Handshake."<init>":()V
      67: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: aload_3
      75: putfield      #18                 // Field handshakes:Ljava/util/Set;
      78: aload_0
      79: aload_2
      80: putfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      83: aload_0
      84: aconst_null
      85: putfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
      88: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(java.util.Collection<io.undertow.websockets.core.protocol.Handshake>, io.undertow.websockets.WebSocketConnectionCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #3                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
       6: invokespecial #21                 // Method "<init>":(Ljava/util/Collection;Lio/undertow/websockets/WebSocketConnectionCallback;Lio/undertow/server/HttpHandler;)V
       9: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(java.util.Collection<io.undertow.websockets.core.protocol.Handshake>, io.undertow.websockets.WebSocketConnectionCallback, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #8                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #2                  // Field peerConnections:Ljava/util/Set;
      18: aload_0
      19: aload_2
      20: putfield      #1                  // Field callback:Lio/undertow/websockets/WebSocketConnectionCallback;
      23: aload_0
      24: new           #9                  // class java/util/HashSet
      27: dup
      28: aload_1
      29: invokespecial #22                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      32: putfield      #18                 // Field handshakes:Ljava/util/Set;
      35: aload_0
      36: aload_3
      37: putfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      40: aload_0
      41: aconst_null
      42: putfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
      45: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(io.undertow.server.HttpUpgradeListener);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
       5: invokespecial #23                 // Method "<init>":(Lio/undertow/server/HttpUpgradeListener;Lio/undertow/server/HttpHandler;)V
       8: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(io.undertow.server.HttpUpgradeListener, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #8                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #2                  // Field peerConnections:Ljava/util/Set;
      18: aload_0
      19: aconst_null
      20: putfield      #1                  // Field callback:Lio/undertow/websockets/WebSocketConnectionCallback;
      23: new           #9                  // class java/util/HashSet
      26: dup
      27: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      30: astore_3
      31: aload_3
      32: new           #11                 // class io/undertow/websockets/core/protocol/version13/Hybi13Handshake
      35: dup
      36: invokespecial #12                 // Method io/undertow/websockets/core/protocol/version13/Hybi13Handshake."<init>":()V
      39: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_3
      46: new           #14                 // class io/undertow/websockets/core/protocol/version08/Hybi08Handshake
      49: dup
      50: invokespecial #15                 // Method io/undertow/websockets/core/protocol/version08/Hybi08Handshake."<init>":()V
      53: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_3
      60: new           #16                 // class io/undertow/websockets/core/protocol/version07/Hybi07Handshake
      63: dup
      64: invokespecial #17                 // Method io/undertow/websockets/core/protocol/version07/Hybi07Handshake."<init>":()V
      67: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: aload_3
      75: putfield      #18                 // Field handshakes:Ljava/util/Set;
      78: aload_0
      79: aload_2
      80: putfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      83: aload_0
      84: aload_1
      85: putfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
      88: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(java.util.Collection<io.undertow.websockets.core.protocol.Handshake>, io.undertow.server.HttpUpgradeListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #3                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
       6: invokespecial #24                 // Method "<init>":(Ljava/util/Collection;Lio/undertow/server/HttpUpgradeListener;Lio/undertow/server/HttpHandler;)V
       9: return

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler(java.util.Collection<io.undertow.websockets.core.protocol.Handshake>, io.undertow.server.HttpUpgradeListener, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #8                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #2                  // Field peerConnections:Ljava/util/Set;
      18: aload_0
      19: aconst_null
      20: putfield      #1                  // Field callback:Lio/undertow/websockets/WebSocketConnectionCallback;
      23: aload_0
      24: new           #9                  // class java/util/HashSet
      27: dup
      28: aload_1
      29: invokespecial #22                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      32: putfield      #18                 // Field handshakes:Ljava/util/Set;
      35: aload_0
      36: aload_3
      37: putfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      40: aload_0
      41: aload_2
      42: putfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
      45: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       4: getstatic     #26                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
       7: invokevirtual #27                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      10: ifne          24
      13: aload_0
      14: getfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      17: aload_1
      18: invokeinterface #28,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      23: return
      24: new           #29                 // class io/undertow/websockets/spi/AsyncWebSocketHttpServerExchange
      27: dup
      28: aload_1
      29: aload_0
      30: getfield      #2                  // Field peerConnections:Ljava/util/Set;
      33: invokespecial #30                 // Method io/undertow/websockets/spi/AsyncWebSocketHttpServerExchange."<init>":(Lio/undertow/server/HttpServerExchange;Ljava/util/Set;)V
      36: astore_2
      37: aconst_null
      38: astore_3
      39: aload_0
      40: getfield      #18                 // Field handshakes:Ljava/util/Set;
      43: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          90
      60: aload         4
      62: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #34                 // class io/undertow/websockets/core/protocol/Handshake
      70: astore        5
      72: aload         5
      74: aload_2
      75: invokevirtual #35                 // Method io/undertow/websockets/core/protocol/Handshake.matches:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)Z
      78: ifeq          87
      81: aload         5
      83: astore_3
      84: goto          90
      87: goto          50
      90: aload_3
      91: ifnonnull     107
      94: aload_0
      95: getfield      #19                 // Field next:Lio/undertow/server/HttpHandler;
      98: aload_1
      99: invokeinterface #28,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     104: goto          150
     107: aload_3
     108: astore        4
     110: aload_0
     111: getfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
     114: ifnonnull     136
     117: aload_1
     118: new           #36                 // class io/undertow/websockets/WebSocketProtocolHandshakeHandler$1
     121: dup
     122: aload_0
     123: aload         4
     125: aload_2
     126: invokespecial #37                 // Method io/undertow/websockets/WebSocketProtocolHandshakeHandler$1."<init>":(Lio/undertow/websockets/WebSocketProtocolHandshakeHandler;Lio/undertow/websockets/core/protocol/Handshake;Lio/undertow/websockets/spi/AsyncWebSocketHttpServerExchange;)V
     129: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.upgradeChannel:(Lio/undertow/server/HttpUpgradeListener;)Lio/undertow/server/HttpServerExchange;
     132: pop
     133: goto          145
     136: aload_1
     137: aload_0
     138: getfield      #20                 // Field upgradeListener:Lio/undertow/server/HttpUpgradeListener;
     141: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.upgradeChannel:(Lio/undertow/server/HttpUpgradeListener;)Lio/undertow/server/HttpServerExchange;
     144: pop
     145: aload_3
     146: aload_2
     147: invokevirtual #39                 // Method io/undertow/websockets/core/protocol/Handshake.handshake:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
     150: return

  public java.util.Set<io.undertow.websockets.core.WebSocketChannel> getPeerConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field peerConnections:Ljava/util/Set;
       4: areturn

  public io.undertow.websockets.WebSocketProtocolHandshakeHandler addExtension(io.undertow.websockets.extensions.ExtensionHandshake);
    Code:
       0: aload_1
       1: ifnull        41
       4: aload_0
       5: getfield      #18                 // Field handshakes:Ljava/util/Set;
       8: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          41
      23: aload_2
      24: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #34                 // class io/undertow/websockets/core/protocol/Handshake
      32: astore_3
      33: aload_3
      34: aload_1
      35: invokevirtual #40                 // Method io/undertow/websockets/core/protocol/Handshake.addExtension:(Lio/undertow/websockets/extensions/ExtensionHandshake;)V
      38: goto          14
      41: aload_0
      42: areturn

  static java.util.Set access$000(io.undertow.websockets.WebSocketProtocolHandshakeHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field peerConnections:Ljava/util/Set;
       4: areturn

  static io.undertow.websockets.WebSocketConnectionCallback access$100(io.undertow.websockets.WebSocketProtocolHandshakeHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field callback:Lio/undertow/websockets/WebSocketConnectionCallback;
       4: areturn
}
