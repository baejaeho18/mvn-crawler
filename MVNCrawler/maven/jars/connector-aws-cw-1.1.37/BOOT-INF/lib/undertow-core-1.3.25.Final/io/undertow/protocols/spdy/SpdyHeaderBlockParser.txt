Compiled from "SpdyHeaderBlockParser.java"
abstract class io.undertow.protocols.spdy.SpdyHeaderBlockParser extends io.undertow.protocols.spdy.SpdyPushBackParser {
  private final io.undertow.protocols.spdy.SpdyChannel channel;

  private int numHeaders;

  private int readHeaders;

  private final io.undertow.util.HeaderMap headerMap;

  private final java.util.zip.Inflater inflater;

  private io.undertow.util.HttpString currentHeader;

  private java.io.ByteArrayOutputStream partialValue;

  private int remainingData;

  private boolean beforeHeadersHandled;

  private byte[] dataOverflow;

  io.undertow.protocols.spdy.SpdyHeaderBlockParser(io.undertow.protocols.spdy.SpdyChannel, int, java.util.zip.Inflater);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method io/undertow/protocols/spdy/SpdyPushBackParser."<init>":(I)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field numHeaders:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field readHeaders:I
      15: aload_0
      16: new           #4                  // class io/undertow/util/HeaderMap
      19: dup
      20: invokespecial #5                  // Method io/undertow/util/HeaderMap."<init>":()V
      23: putfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field beforeHeadersHandled:Z
      31: aload_0
      32: aload_1
      33: putfield      #8                  // Field channel:Lio/undertow/protocols/spdy/SpdyChannel;
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
      41: return

  protected void handleData(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field beforeHeadersHandled:Z
       4: ifne          16
       7: aload_0
       8: aload_1
       9: invokevirtual #10                 // Method handleBeforeHeader:(Ljava/nio/ByteBuffer;)Z
      12: ifne          16
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #7                  // Field beforeHeadersHandled:Z
      21: aload_0
      22: getfield      #8                  // Field channel:Lio/undertow/protocols/spdy/SpdyChannel;
      25: invokevirtual #11                 // Method io/undertow/protocols/spdy/SpdyChannel.getHeapBufferPool:()Lio/undertow/connector/ByteBufferPool;
      28: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      33: astore_2
      34: aload_0
      35: getfield      #8                  // Field channel:Lio/undertow/protocols/spdy/SpdyChannel;
      38: invokevirtual #11                 // Method io/undertow/protocols/spdy/SpdyChannel.getHeapBufferPool:()Lio/undertow/connector/ByteBufferPool;
      41: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      46: astore_3
      47: iconst_0
      48: istore        4
      50: aload_2
      51: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      56: astore        5
      58: aload_3
      59: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      64: astore        6
      66: aload_0
      67: getfield      #14                 // Field dataOverflow:[B
      70: ifnull        91
      73: aload         5
      75: aload_0
      76: getfield      #14                 // Field dataOverflow:[B
      79: invokevirtual #15                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      82: pop
      83: aload_0
      84: aconst_null
      85: putfield      #14                 // Field dataOverflow:[B
      88: iconst_1
      89: istore        4
      91: aload         6
      93: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
      96: astore        7
      98: aload_1
      99: invokevirtual #17                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     102: ifeq          328
     105: aload_1
     106: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     109: istore        8
     111: iload         8
     113: aload         7
     115: arraylength
     116: if_icmple     139
     119: aload_1
     120: aload         7
     122: aload         6
     124: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     127: aload         6
     129: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     132: invokevirtual #21                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     135: pop
     136: goto          155
     139: aload_1
     140: aload         7
     142: aload         6
     144: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     147: aload_1
     148: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     151: invokevirtual #21                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     154: pop
     155: iload         8
     157: aload         6
     159: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     162: invokestatic  #22                 // Method java/lang/Math.min:(II)I
     165: istore        9
     167: aload_0
     168: getfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
     171: aload         7
     173: aload         6
     175: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     178: iload         9
     180: invokevirtual #23                 // Method java/util/zip/Inflater.setInput:([BII)V
     183: aload_0
     184: getfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
     187: invokevirtual #24                 // Method java/util/zip/Inflater.needsInput:()Z
     190: ifne          325
     193: iconst_0
     194: istore        10
     196: aload_0
     197: getfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
     200: aload         5
     202: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     205: aload         5
     207: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     210: aload         5
     212: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     215: iadd
     216: aload         5
     218: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     221: invokevirtual #26                 // Method java/util/zip/Inflater.inflate:([BII)I
     224: istore        10
     226: goto          240
     229: astore        11
     231: new           #28                 // class io/undertow/protocols/spdy/StreamErrorException
     234: dup
     235: iconst_1
     236: invokespecial #29                 // Method io/undertow/protocols/spdy/StreamErrorException."<init>":(I)V
     239: athrow
     240: iload         10
     242: ifne          268
     245: aload_0
     246: getfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
     249: invokevirtual #30                 // Method java/util/zip/Inflater.needsDictionary:()Z
     252: ifeq          268
     255: aload_0
     256: getfield      #9                  // Field inflater:Ljava/util/zip/Inflater;
     259: getstatic     #31                 // Field io/undertow/protocols/spdy/SpdyProtocolUtils.SPDY_DICT:[B
     262: invokevirtual #32                 // Method java/util/zip/Inflater.setDictionary:([B)V
     265: goto          322
     268: iload         10
     270: ifle          322
     273: aload         5
     275: aload         5
     277: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     280: iload         10
     282: iadd
     283: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     286: pop
     287: aload_0
     288: aload         5
     290: invokespecial #34                 // Method handleDecompressedData:(Ljava/nio/ByteBuffer;)V
     293: aload         5
     295: invokevirtual #17                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     298: ifeq          313
     301: aload         5
     303: invokevirtual #35                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     306: pop
     307: iconst_1
     308: istore        4
     310: goto          322
     313: iconst_0
     314: istore        4
     316: aload         5
     318: invokevirtual #36                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     321: pop
     322: goto          183
     325: goto          98
     328: iload         4
     330: ifeq          372
     333: aload_2
     334: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     339: invokevirtual #37                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     342: pop
     343: aload_0
     344: aload_2
     345: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     350: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     353: newarray       byte
     355: putfield      #14                 // Field dataOverflow:[B
     358: aload_2
     359: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     364: aload_0
     365: getfield      #14                 // Field dataOverflow:[B
     368: invokevirtual #38                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     371: pop
     372: aload_3
     373: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     378: aload_2
     379: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     384: goto          448
     387: astore        12
     389: iload         4
     391: ifeq          433
     394: aload_2
     395: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     400: invokevirtual #37                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     403: pop
     404: aload_0
     405: aload_2
     406: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     411: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     414: newarray       byte
     416: putfield      #14                 // Field dataOverflow:[B
     419: aload_2
     420: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     425: aload_0
     426: getfield      #14                 // Field dataOverflow:[B
     429: invokevirtual #38                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     432: pop
     433: aload_3
     434: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     439: aload_2
     440: invokeinterface #39,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     445: aload         12
     447: athrow
     448: return
    Exception table:
       from    to  target type
         196   226   229   Class java/util/zip/DataFormatException
          50   328   387   any
         387   389   387   any

  protected abstract boolean handleBeforeHeader(java.nio.ByteBuffer);

  private void handleDecompressedData(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       4: pop
       5: aload_0
       6: getfield      #2                  // Field numHeaders:I
       9: iconst_m1
      10: if_icmpne     94
      13: aload_1
      14: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      17: iconst_4
      18: if_icmpge     22
      21: return
      22: aload_0
      23: aload_1
      24: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
      27: sipush        255
      30: iand
      31: bipush        24
      33: ishl
      34: putfield      #2                  // Field numHeaders:I
      37: aload_0
      38: dup
      39: getfield      #2                  // Field numHeaders:I
      42: aload_1
      43: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
      46: sipush        255
      49: iand
      50: bipush        16
      52: ishl
      53: iadd
      54: putfield      #2                  // Field numHeaders:I
      57: aload_0
      58: dup
      59: getfield      #2                  // Field numHeaders:I
      62: aload_1
      63: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
      66: sipush        255
      69: iand
      70: bipush        8
      72: ishl
      73: iadd
      74: putfield      #2                  // Field numHeaders:I
      77: aload_0
      78: dup
      79: getfield      #2                  // Field numHeaders:I
      82: aload_1
      83: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
      86: sipush        255
      89: iand
      90: iadd
      91: putfield      #2                  // Field numHeaders:I
      94: aload_0
      95: getfield      #3                  // Field readHeaders:I
      98: aload_0
      99: getfield      #2                  // Field numHeaders:I
     102: if_icmpge     1003
     105: aload_0
     106: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     109: ifnonnull     297
     112: aload_0
     113: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     116: ifnonnull     297
     119: aload_1
     120: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     123: iconst_4
     124: if_icmpge     128
     127: return
     128: aload_1
     129: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     132: sipush        255
     135: iand
     136: bipush        24
     138: ishl
     139: istore_2
     140: iload_2
     141: aload_1
     142: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     145: sipush        255
     148: iand
     149: bipush        16
     151: ishl
     152: iadd
     153: istore_2
     154: iload_2
     155: aload_1
     156: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     159: sipush        255
     162: iand
     163: bipush        8
     165: ishl
     166: iadd
     167: istore_2
     168: iload_2
     169: aload_1
     170: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     173: sipush        255
     176: iand
     177: iadd
     178: istore_2
     179: iload_2
     180: ifne          192
     183: new           #28                 // class io/undertow/protocols/spdy/StreamErrorException
     186: dup
     187: iconst_1
     188: invokespecial #29                 // Method io/undertow/protocols/spdy/StreamErrorException."<init>":(I)V
     191: athrow
     192: aload_1
     193: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     196: iload_2
     197: if_icmplt     239
     200: aload_0
     201: new           #43                 // class io/undertow/util/HttpString
     204: dup
     205: aload_1
     206: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     209: aload_1
     210: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     213: aload_1
     214: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     217: iadd
     218: iload_2
     219: invokespecial #44                 // Method io/undertow/util/HttpString."<init>":([BII)V
     222: putfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     225: aload_1
     226: aload_1
     227: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     230: iload_2
     231: iadd
     232: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     235: pop
     236: goto          294
     239: aload_0
     240: iload_2
     241: aload_1
     242: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     245: isub
     246: putfield      #45                 // Field remainingData:I
     249: aload_0
     250: new           #46                 // class java/io/ByteArrayOutputStream
     253: dup
     254: invokespecial #47                 // Method java/io/ByteArrayOutputStream."<init>":()V
     257: putfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     260: aload_0
     261: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     264: aload_1
     265: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     268: aload_1
     269: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     272: aload_1
     273: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     276: iadd
     277: aload_1
     278: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     281: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     284: aload_1
     285: aload_1
     286: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     289: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     292: pop
     293: return
     294: goto          438
     297: aload_0
     298: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     301: ifnonnull     438
     304: aload_0
     305: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     308: ifnull        438
     311: aload_1
     312: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     315: aload_0
     316: getfield      #45                 // Field remainingData:I
     319: if_icmplt     391
     322: aload_0
     323: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     326: aload_1
     327: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     330: aload_1
     331: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     334: aload_1
     335: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     338: iadd
     339: aload_0
     340: getfield      #45                 // Field remainingData:I
     343: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     346: aload_0
     347: new           #43                 // class io/undertow/util/HttpString
     350: dup
     351: aload_0
     352: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     355: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     358: invokespecial #50                 // Method io/undertow/util/HttpString."<init>":([B)V
     361: putfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     364: aload_1
     365: aload_1
     366: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     369: aload_0
     370: getfield      #45                 // Field remainingData:I
     373: iadd
     374: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     377: pop
     378: aload_0
     379: iconst_m1
     380: putfield      #45                 // Field remainingData:I
     383: aload_0
     384: aconst_null
     385: putfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     388: goto          438
     391: aload_0
     392: aload_0
     393: getfield      #45                 // Field remainingData:I
     396: aload_1
     397: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     400: isub
     401: putfield      #45                 // Field remainingData:I
     404: aload_0
     405: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     408: aload_1
     409: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     412: aload_1
     413: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     416: aload_1
     417: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     420: iadd
     421: aload_1
     422: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     425: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     428: aload_1
     429: aload_1
     430: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     433: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     436: pop
     437: return
     438: aload_0
     439: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     442: ifnonnull     776
     445: aload_1
     446: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     449: iconst_4
     450: if_icmpge     454
     453: return
     454: aload_1
     455: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     458: sipush        255
     461: iand
     462: bipush        24
     464: ishl
     465: istore_2
     466: iload_2
     467: aload_1
     468: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     471: sipush        255
     474: iand
     475: bipush        16
     477: ishl
     478: iadd
     479: istore_2
     480: iload_2
     481: aload_1
     482: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     485: sipush        255
     488: iand
     489: bipush        8
     491: ishl
     492: iadd
     493: istore_2
     494: iload_2
     495: aload_1
     496: invokevirtual #40                 // Method java/nio/ByteBuffer.get:()B
     499: sipush        255
     502: iand
     503: iadd
     504: istore_2
     505: aload_1
     506: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     509: iload_2
     510: if_icmplt     640
     513: aload_1
     514: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     517: aload_1
     518: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     521: iadd
     522: istore_3
     523: iload_3
     524: iload_2
     525: iadd
     526: istore        4
     528: aload_1
     529: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     532: astore        5
     534: iload_3
     535: istore        6
     537: iload         6
     539: iload         4
     541: if_icmpge     592
     544: aload         5
     546: iload         6
     548: baload
     549: ifne          586
     552: aload_0
     553: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     556: aload_0
     557: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     560: new           #51                 // class java/lang/String
     563: dup
     564: aload         5
     566: iload_3
     567: iload         6
     569: iload_3
     570: isub
     571: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     574: invokespecial #53                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     577: invokevirtual #54                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     580: pop
     581: iload         6
     583: iconst_1
     584: iadd
     585: istore_3
     586: iinc          6, 1
     589: goto          537
     592: aload_0
     593: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     596: aload_0
     597: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     600: new           #51                 // class java/lang/String
     603: dup
     604: aload         5
     606: iload_3
     607: iload         4
     609: iload_3
     610: isub
     611: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     614: invokespecial #53                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     617: invokevirtual #54                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     620: pop
     621: aload_0
     622: aconst_null
     623: putfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     626: aload_1
     627: aload_1
     628: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     631: iload_2
     632: iadd
     633: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     636: pop
     637: goto          773
     640: aload_0
     641: iload_2
     642: aload_1
     643: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     646: isub
     647: putfield      #45                 // Field remainingData:I
     650: aload_1
     651: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     654: aload_1
     655: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     658: iadd
     659: istore_3
     660: iload_3
     661: aload_1
     662: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     665: iadd
     666: istore        4
     668: aload_1
     669: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     672: astore        5
     674: iload_3
     675: istore        6
     677: iload         6
     679: iload         4
     681: if_icmpge     738
     684: aload         5
     686: iload         6
     688: baload
     689: ifne          732
     692: new           #51                 // class java/lang/String
     695: dup
     696: aload         5
     698: iload_3
     699: iload         6
     701: iload_3
     702: isub
     703: iconst_1
     704: isub
     705: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     708: invokespecial #53                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     711: astore        7
     713: aload_0
     714: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     717: aload_0
     718: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     721: aload         7
     723: invokevirtual #54                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     726: pop
     727: iload         6
     729: iconst_1
     730: iadd
     731: istore_3
     732: iinc          6, 1
     735: goto          677
     738: aload_0
     739: new           #46                 // class java/io/ByteArrayOutputStream
     742: dup
     743: invokespecial #47                 // Method java/io/ByteArrayOutputStream."<init>":()V
     746: putfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     749: aload_0
     750: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     753: aload         5
     755: iload_3
     756: iload         4
     758: iload_3
     759: isub
     760: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     763: aload_1
     764: aload_1
     765: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     768: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     771: pop
     772: return
     773: goto          990
     776: aload_1
     777: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     780: aload_0
     781: getfield      #45                 // Field remainingData:I
     784: if_icmplt     943
     787: aload_0
     788: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     791: aload_1
     792: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     795: aload_1
     796: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     799: aload_1
     800: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     803: iadd
     804: aload_0
     805: getfield      #45                 // Field remainingData:I
     808: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     811: aload_0
     812: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     815: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     818: astore_2
     819: iconst_0
     820: istore_3
     821: aload_2
     822: arraylength
     823: istore        4
     825: iload_3
     826: istore        5
     828: iload         5
     830: iload         4
     832: if_icmpge     883
     835: aload_2
     836: iload         5
     838: baload
     839: ifne          877
     842: aload_0
     843: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     846: aload_0
     847: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     850: new           #51                 // class java/lang/String
     853: dup
     854: aload_2
     855: iload_3
     856: iload         5
     858: iload_3
     859: isub
     860: iconst_1
     861: isub
     862: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     865: invokespecial #53                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     868: invokevirtual #54                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     871: pop
     872: iload         5
     874: iconst_1
     875: iadd
     876: istore_3
     877: iinc          5, 1
     880: goto          828
     883: aload_0
     884: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
     887: aload_0
     888: getfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     891: new           #51                 // class java/lang/String
     894: dup
     895: aload_2
     896: iload_3
     897: iload         4
     899: iload_3
     900: isub
     901: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     904: invokespecial #53                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
     907: invokevirtual #54                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     910: pop
     911: aload_1
     912: aload_1
     913: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     916: aload_0
     917: getfield      #45                 // Field remainingData:I
     920: iadd
     921: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     924: pop
     925: aload_0
     926: aconst_null
     927: putfield      #41                 // Field currentHeader:Lio/undertow/util/HttpString;
     930: aload_0
     931: iconst_m1
     932: putfield      #45                 // Field remainingData:I
     935: aload_0
     936: aconst_null
     937: putfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     940: goto          990
     943: aload_0
     944: aload_0
     945: getfield      #45                 // Field remainingData:I
     948: aload_1
     949: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     952: isub
     953: putfield      #45                 // Field remainingData:I
     956: aload_0
     957: getfield      #42                 // Field partialValue:Ljava/io/ByteArrayOutputStream;
     960: aload_1
     961: invokevirtual #16                 // Method java/nio/ByteBuffer.array:()[B
     964: aload_1
     965: invokevirtual #19                 // Method java/nio/ByteBuffer.arrayOffset:()I
     968: aload_1
     969: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     972: iadd
     973: aload_1
     974: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     977: invokevirtual #48                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     980: aload_1
     981: aload_1
     982: invokevirtual #20                 // Method java/nio/ByteBuffer.limit:()I
     985: invokevirtual #33                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     988: pop
     989: return
     990: aload_0
     991: dup
     992: getfield      #3                  // Field readHeaders:I
     995: iconst_1
     996: iadd
     997: putfield      #3                  // Field readHeaders:I
    1000: goto          94
    1003: return

  io.undertow.util.HeaderMap getHeaderMap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: areturn
}
