Compiled from "ResponseRateLimitingHandler.java"
public class io.undertow.server.handlers.ResponseRateLimitingHandler implements io.undertow.server.HttpHandler {
  private final long time;

  private final int bytes;

  private final io.undertow.server.HttpHandler next;

  private final io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSinkConduit> WRAPPER;

  public io.undertow.server.handlers.ResponseRateLimitingHandler(io.undertow.server.HttpHandler, int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class io/undertow/server/handlers/ResponseRateLimitingHandler$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method io/undertow/server/handlers/ResponseRateLimitingHandler$1."<init>":(Lio/undertow/server/handlers/ResponseRateLimitingHandler;)V
      13: putfield      #6                  // Field WRAPPER:Lio/undertow/server/ConduitWrapper;
      16: aload_0
      17: aload         5
      19: lload_3
      20: invokevirtual #7                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      23: putfield      #1                  // Field time:J
      26: aload_0
      27: iload_2
      28: putfield      #2                  // Field bytes:I
      31: aload_0
      32: aload_1
      33: putfield      #8                  // Field next:Lio/undertow/server/HttpHandler;
      36: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field WRAPPER:Lio/undertow/server/ConduitWrapper;
       5: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.addResponseWrapper:(Lio/undertow/server/ConduitWrapper;)Lio/undertow/server/HttpServerExchange;
       8: pop
       9: aload_0
      10: getfield      #8                  // Field next:Lio/undertow/server/HttpHandler;
      13: aload_1
      14: invokeinterface #10,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      19: return

  static int access$000(io.undertow.server.handlers.ResponseRateLimitingHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytes:I
       4: ireturn

  static long access$100(io.undertow.server.handlers.ResponseRateLimitingHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field time:J
       4: lreturn
}
