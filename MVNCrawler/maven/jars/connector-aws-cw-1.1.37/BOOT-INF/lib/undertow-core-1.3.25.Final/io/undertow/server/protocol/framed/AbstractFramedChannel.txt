Compiled from "AbstractFramedChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.ConnectedChannel {
  private final int maxQueuedBuffers;

  private final org.xnio.StreamConnection channel;

  private final io.undertow.conduits.IdleTimeoutConduit idleTimeoutConduit;

  private final org.xnio.ChannelListener$SimpleSetter<C> closeSetter;

  private final org.xnio.ChannelListener$SimpleSetter<C> receiveSetter;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final io.undertow.server.protocol.framed.FramePriority<C, R, S> framePriority;

  private final java.util.List<S> pendingFrames;

  private final java.util.Deque<S> heldFrames;

  private final java.util.Deque<S> newFrames;

  private volatile long frameDataRemaining;

  private volatile R receiver;

  private boolean receivesSuspended;

  private volatile int readsBroken;

  private volatile int writesBroken;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> readsBrokenUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> writesBrokenUpdater;

  private io.undertow.util.ReferenceCountedPooled readData;

  private final java.util.List<org.xnio.ChannelListener<C>> closeTasks;

  private volatile boolean flushingSenders;

  private final java.util.Set<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>> receivers;

  private volatile int outstandingBuffers;

  private volatile java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> outstandingBuffersUpdater;

  private final java.util.concurrent.LinkedBlockingDeque<java.lang.Runnable> taskRunQueue;

  private final org.xnio.OptionMap settings;

  private boolean readChannelDone;

  private final io.undertow.util.ReferenceCountedPooled$FreeNotifier freeNotifier;

  private static final org.xnio.ChannelListener<io.undertow.server.protocol.framed.AbstractFramedChannel> DRAIN_LISTENER;

  static final boolean $assertionsDisabled;

  protected io.undertow.server.protocol.framed.AbstractFramedChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.server.protocol.framed.FramePriority<C, R, S>, io.undertow.connector.PooledByteBuffer, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/LinkedList
       8: dup
       9: invokespecial #19                 // Method java/util/LinkedList."<init>":()V
      12: putfield      #6                  // Field pendingFrames:Ljava/util/List;
      15: aload_0
      16: new           #20                 // class java/util/ArrayDeque
      19: dup
      20: invokespecial #21                 // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #4                  // Field heldFrames:Ljava/util/Deque;
      26: aload_0
      27: new           #22                 // class java/util/concurrent/LinkedBlockingDeque
      30: dup
      31: invokespecial #23                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      34: putfield      #5                  // Field newFrames:Ljava/util/Deque;
      37: aload_0
      38: iconst_1
      39: putfield      #15                 // Field receivesSuspended:Z
      42: aload_0
      43: iconst_0
      44: putfield      #24                 // Field readsBroken:I
      47: aload_0
      48: iconst_0
      49: putfield      #25                 // Field writesBroken:I
      52: aload_0
      53: aconst_null
      54: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      57: aload_0
      58: new           #26                 // class java/util/concurrent/CopyOnWriteArrayList
      61: dup
      62: invokespecial #27                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      65: putfield      #2                  // Field closeTasks:Ljava/util/List;
      68: aload_0
      69: iconst_0
      70: putfield      #28                 // Field flushingSenders:Z
      73: aload_0
      74: new           #29                 // class java/util/HashSet
      77: dup
      78: invokespecial #30                 // Method java/util/HashSet."<init>":()V
      81: putfield      #3                  // Field receivers:Ljava/util/Set;
      84: aload_0
      85: ldc           #31                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      87: ldc           #32                 // String outstandingBuffers
      89: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      92: putfield      #16                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      95: aload_0
      96: new           #22                 // class java/util/concurrent/LinkedBlockingDeque
      99: dup
     100: invokespecial #23                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
     103: putfield      #12                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
     106: aload_0
     107: iconst_0
     108: putfield      #10                 // Field readChannelDone:Z
     111: aload_0
     112: new           #34                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$1
     115: dup
     116: aload_0
     117: invokespecial #35                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     120: putfield      #36                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     123: aload_0
     124: aload_3
     125: putfield      #37                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
     128: aload_0
     129: aload         5
     131: getstatic     #38                 // Field io/undertow/UndertowOptions.MAX_QUEUED_READ_BUFFERS:Lorg/xnio/Option;
     134: bipush        10
     136: invokevirtual #39                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     139: putfield      #14                 // Field maxQueuedBuffers:I
     142: aload_0
     143: aload         5
     145: putfield      #40                 // Field settings:Lorg/xnio/OptionMap;
     148: aload         4
     150: ifnull        190
     153: aload         4
     155: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     160: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     163: ifeq          183
     166: aload_0
     167: new           #43                 // class io/undertow/util/ReferenceCountedPooled
     170: dup
     171: aload         4
     173: iconst_1
     174: invokespecial #44                 // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;I)V
     177: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     180: goto          190
     183: aload         4
     185: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     190: aload_2
     191: ifnonnull     205
     194: getstatic     #46                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     197: ldc           #47                 // String bufferPool
     199: invokeinterface #48,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     204: athrow
     205: aload_1
     206: ifnonnull     220
     209: getstatic     #46                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     212: ldc           #49                 // String connectedStreamChannel
     214: invokeinterface #48,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     219: athrow
     220: aload_0
     221: aload_1
     222: invokevirtual #50                 // Method createIdleTimeoutChannel:(Lorg/xnio/StreamConnection;)Lio/undertow/conduits/IdleTimeoutConduit;
     225: astore        6
     227: aload_1
     228: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     231: aload         6
     233: invokevirtual #52                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     236: aload_1
     237: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     240: aload         6
     242: invokevirtual #54                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     245: aload_0
     246: aload         6
     248: putfield      #55                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
     251: aload_0
     252: aload_1
     253: putfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     256: aload_0
     257: aload_2
     258: putfield      #56                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     261: aload_0
     262: new           #57                 // class org/xnio/ChannelListener$SimpleSetter
     265: dup
     266: invokespecial #58                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     269: putfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     272: aload_0
     273: new           #57                 // class org/xnio/ChannelListener$SimpleSetter
     276: dup
     277: invokespecial #58                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     280: putfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     283: aload_0
     284: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     287: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     290: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     293: aconst_null
     294: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     299: aload_0
     300: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     303: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     306: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     309: aload_0
     310: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     313: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     316: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     319: new           #62                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener
     322: dup
     323: aload_0
     324: aconst_null
     325: invokespecial #63                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     328: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     333: aload_1
     334: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     337: invokevirtual #64                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     340: new           #65                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener
     343: dup
     344: aload_0
     345: aconst_null
     346: invokespecial #66                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     349: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     354: new           #67                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener
     357: dup
     358: aload_0
     359: aconst_null
     360: invokespecial #68                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     363: astore        7
     365: aload_1
     366: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     369: invokevirtual #69                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     372: aload         7
     374: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     379: aload_1
     380: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     383: invokevirtual #70                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     386: aload         7
     388: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     393: return

  protected io.undertow.conduits.IdleTimeoutConduit createIdleTimeoutChannel(org.xnio.StreamConnection);
    Code:
       0: new           #71                 // class io/undertow/conduits/IdleTimeoutConduit
       3: dup
       4: aload_1
       5: invokespecial #72                 // Method io/undertow/conduits/IdleTimeoutConduit."<init>":(Lorg/xnio/StreamConnection;)V
       8: areturn

  void runInIoThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
       4: aload_1
       5: invokevirtual #73                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokevirtual #74                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      13: new           #75                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$3
      16: dup
      17: aload_0
      18: invokespecial #76                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$3."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
      21: invokevirtual #77                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      24: goto          56
      27: astore_2
      28: aload_0
      29: getfield      #12                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
      32: invokevirtual #79                 // Method java/util/concurrent/LinkedBlockingDeque.isEmpty:()Z
      35: ifne          56
      38: aload_0
      39: getfield      #12                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
      42: invokevirtual #80                 // Method java/util/concurrent/LinkedBlockingDeque.poll:()Ljava/lang/Object;
      45: checkcast     #81                 // class java/lang/Runnable
      48: invokeinterface #82,  1           // InterfaceMethod java/lang/Runnable.run:()V
      53: goto          28
      56: return
    Exception table:
       from    to  target type
           9    24    27   Class java/util/concurrent/RejectedExecutionException

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #56                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #83                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #84                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #85                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #86                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #87                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
       8: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #88                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       8: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: aload_2
       6: invokevirtual #89                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #90                 // Method org/xnio/StreamConnection.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #91                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #92                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public java.net.InetSocketAddress getSourceAddress();
    Code:
       0: aload_0
       1: ldc           #93                 // class java/net/InetSocketAddress
       3: invokevirtual #94                 // Method getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #93                 // class java/net/InetSocketAddress
       9: areturn

  public java.net.InetSocketAddress getDestinationAddress();
    Code:
       0: aload_0
       1: ldc           #93                 // class java/net/InetSocketAddress
       3: invokevirtual #95                 // Method getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #93                 // class java/net/InetSocketAddress
       9: areturn

  public synchronized R receive() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field readChannelDone:Z
       4: ifeq          55
       7: aload_0
       8: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      11: ifnonnull     55
      14: aload_0
      15: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      18: ifnull        33
      21: aload_0
      22: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      25: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      33: aload_0
      34: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      37: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      40: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      43: aload_0
      44: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      47: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      50: invokevirtual #97                 // Method org/xnio/conduits/ConduitStreamSourceChannel.shutdownReads:()V
      53: aconst_null
      54: areturn
      55: aload_0
      56: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      59: astore_1
      60: aload_1
      61: ifnonnull     80
      64: aload_0
      65: invokespecial #98                 // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      68: astore_1
      69: aload_1
      70: ifnonnull     75
      73: aconst_null
      74: areturn
      75: iconst_0
      76: istore_2
      77: goto          133
      80: aload_1
      81: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      84: ifeq          125
      87: aload_1
      88: invokevirtual #100                // Method io/undertow/util/ReferenceCountedPooled.tryUnfree:()Z
      91: ifne          105
      94: aload_0
      95: invokespecial #98                 // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      98: astore_1
      99: aload_1
     100: ifnonnull     120
     103: aconst_null
     104: areturn
     105: aload_1
     106: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     109: aload_1
     110: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     113: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     116: invokevirtual #103                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     119: pop
     120: iconst_0
     121: istore_2
     122: goto          133
     125: aload_1
     126: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     129: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     132: istore_2
     133: iconst_0
     134: istore_3
     135: iconst_0
     136: istore        4
     138: iload_2
     139: ifne          345
     142: aload_1
     143: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     146: invokevirtual #104                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     149: pop
     150: aload_0
     151: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     154: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     157: aload_1
     158: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     161: invokevirtual #105                // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     164: istore        4
     166: iload         4
     168: ifne          232
     171: iconst_1
     172: istore_3
     173: aconst_null
     174: astore        5
     176: aload_0
     177: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     180: ifnull        229
     183: aload_1
     184: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     187: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     190: ifeq          197
     193: iload_3
     194: ifeq          229
     197: aload_1
     198: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     201: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     204: iconst_2
     205: imul
     206: aload_1
     207: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     210: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     213: if_icmpgt     220
     216: iload_3
     217: ifeq          225
     220: aload_0
     221: aconst_null
     222: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     225: aload_1
     226: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     229: aload         5
     231: areturn
     232: iload         4
     234: iconst_m1
     235: if_icmpne     308
     238: iconst_1
     239: istore_3
     240: aload_0
     241: iconst_1
     242: putfield      #10                 // Field readChannelDone:Z
     245: aload_0
     246: invokevirtual #107                // Method lastDataRead:()V
     249: aconst_null
     250: astore        5
     252: aload_0
     253: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     256: ifnull        305
     259: aload_1
     260: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     263: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     266: ifeq          273
     269: iload_3
     270: ifeq          305
     273: aload_1
     274: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     277: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     280: iconst_2
     281: imul
     282: aload_1
     283: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     286: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     289: if_icmpgt     296
     292: iload_3
     293: ifeq          301
     296: aload_0
     297: aconst_null
     298: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     301: aload_1
     302: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     305: aload         5
     307: areturn
     308: aload_0
     309: invokevirtual #108                // Method isLastFrameReceived:()Z
     312: ifeq          337
     315: aload_0
     316: getfield      #109                // Field frameDataRemaining:J
     319: lconst_0
     320: lcmp
     321: ifne          337
     324: iconst_1
     325: istore_3
     326: aload_0
     327: new           #110                // class java/nio/channels/ClosedChannelException
     330: dup
     331: invokespecial #111                // Method java/nio/channels/ClosedChannelException."<init>":()V
     334: invokevirtual #112                // Method markReadsBroken:(Ljava/lang/Throwable;)V
     337: aload_1
     338: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     341: invokevirtual #113                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     344: pop
     345: aload_0
     346: getfield      #109                // Field frameDataRemaining:J
     349: lconst_0
     350: lcmp
     351: ifle          674
     354: aload_0
     355: getfield      #109                // Field frameDataRemaining:J
     358: aload_1
     359: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     362: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     365: i2l
     366: lcmp
     367: iflt          521
     370: aload_0
     371: dup
     372: getfield      #109                // Field frameDataRemaining:J
     375: aload_1
     376: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     379: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     382: i2l
     383: lsub
     384: putfield      #109                // Field frameDataRemaining:J
     387: aload_0
     388: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     391: ifnull        439
     394: aload_1
     395: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     398: invokevirtual #115                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     401: astore        5
     403: aload_1
     404: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     407: aload_1
     408: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     411: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     414: invokevirtual #116                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     417: pop
     418: aload_1
     419: aload         5
     421: invokevirtual #117                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     424: astore        6
     426: aload_0
     427: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     430: aconst_null
     431: aload         6
     433: invokevirtual #118                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     436: goto          448
     439: aload_1
     440: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     443: aload_0
     444: aconst_null
     445: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     448: aload_0
     449: getfield      #109                // Field frameDataRemaining:J
     452: lconst_0
     453: lcmp
     454: ifne          462
     457: aload_0
     458: aconst_null
     459: putfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     462: aconst_null
     463: astore        5
     465: aload_0
     466: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     469: ifnull        518
     472: aload_1
     473: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     476: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     479: ifeq          486
     482: iload_3
     483: ifeq          518
     486: aload_1
     487: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     490: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     493: iconst_2
     494: imul
     495: aload_1
     496: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     499: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     502: if_icmpgt     509
     505: iload_3
     506: ifeq          514
     509: aload_0
     510: aconst_null
     511: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     514: aload_1
     515: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     518: aload         5
     520: areturn
     521: aload_1
     522: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     525: invokevirtual #115                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     528: astore        5
     530: aload         5
     532: aload         5
     534: invokevirtual #119                // Method java/nio/ByteBuffer.position:()I
     537: i2l
     538: aload_0
     539: getfield      #109                // Field frameDataRemaining:J
     542: ladd
     543: l2i
     544: invokevirtual #103                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     547: pop
     548: aload_1
     549: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     552: aload_1
     553: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     556: invokevirtual #119                // Method java/nio/ByteBuffer.position:()I
     559: i2l
     560: aload_0
     561: getfield      #109                // Field frameDataRemaining:J
     564: ladd
     565: l2i
     566: invokevirtual #116                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     569: pop
     570: aload_0
     571: lconst_0
     572: putfield      #109                // Field frameDataRemaining:J
     575: aload_1
     576: aload         5
     578: invokevirtual #117                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     581: astore        6
     583: aload_0
     584: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     587: ifnull        603
     590: aload_0
     591: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     594: aconst_null
     595: aload         6
     597: invokevirtual #118                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     600: goto          610
     603: aload         6
     605: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     610: aload_0
     611: aconst_null
     612: putfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     615: aconst_null
     616: astore        5
     618: aload_0
     619: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     622: ifnull        671
     625: aload_1
     626: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     629: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     632: ifeq          639
     635: iload_3
     636: ifeq          671
     639: aload_1
     640: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     643: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     646: iconst_2
     647: imul
     648: aload_1
     649: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     652: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     655: if_icmpgt     662
     658: iload_3
     659: ifeq          667
     662: aload_0
     663: aconst_null
     664: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     667: aload_1
     668: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     671: aload         5
     673: areturn
     674: aload_0
     675: aload_1
     676: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     679: invokevirtual #120                // Method parseFrame:(Ljava/nio/ByteBuffer;)Lio/undertow/server/protocol/framed/FrameHeaderData;
     682: astore        5
     684: aload         5
     686: ifnull        1103
     689: aload         5
     691: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     696: aload_1
     697: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     700: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     703: i2l
     704: lcmp
     705: iflt          759
     708: aload_0
     709: aload         5
     711: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     716: aload_1
     717: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     720: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     723: i2l
     724: lsub
     725: putfield      #109                // Field frameDataRemaining:J
     728: aload_1
     729: aload_1
     730: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     733: invokevirtual #115                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     736: invokevirtual #117                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     739: astore        6
     741: aload_1
     742: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     745: aload_1
     746: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     749: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     752: invokevirtual #116                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     755: pop
     756: goto          822
     759: aload_1
     760: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     763: invokevirtual #115                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     766: astore        7
     768: aload         7
     770: aload         7
     772: invokevirtual #119                // Method java/nio/ByteBuffer.position:()I
     775: i2l
     776: aload         5
     778: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     783: ladd
     784: l2i
     785: invokevirtual #103                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     788: pop
     789: aload_1
     790: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     793: aload_1
     794: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     797: invokevirtual #119                // Method java/nio/ByteBuffer.position:()I
     800: i2l
     801: aload         5
     803: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     808: ladd
     809: l2i
     810: invokevirtual #116                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     813: pop
     814: aload_1
     815: aload         7
     817: invokevirtual #117                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     820: astore        6
     822: aload         5
     824: invokeinterface #122,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getExistingChannel:()Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     829: astore        7
     831: aload         7
     833: ifnull        945
     836: aload         5
     838: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     843: aload         6
     845: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     850: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     853: i2l
     854: lcmp
     855: ifle          864
     858: aload_0
     859: aload         7
     861: putfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     864: aload         7
     866: aload         5
     868: aload         6
     870: invokevirtual #118                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     873: aload_0
     874: invokevirtual #108                // Method isLastFrameReceived:()Z
     877: ifeq          886
     880: aload_0
     881: aload         7
     883: invokespecial #123                // Method handleLastFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     886: aconst_null
     887: astore        8
     889: aload_0
     890: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     893: ifnull        942
     896: aload_1
     897: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     900: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     903: ifeq          910
     906: iload_3
     907: ifeq          942
     910: aload_1
     911: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     914: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
     917: iconst_2
     918: imul
     919: aload_1
     920: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     923: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
     926: if_icmpgt     933
     929: iload_3
     930: ifeq          938
     933: aload_0
     934: aconst_null
     935: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     938: aload_1
     939: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     942: aload         8
     944: areturn
     945: aload         5
     947: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     952: aload         6
     954: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     959: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     962: i2l
     963: lcmp
     964: ifle          971
     967: iconst_1
     968: goto          972
     971: iconst_0
     972: istore        8
     974: aload_0
     975: aload         5
     977: aload         6
     979: invokevirtual #124                // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     982: astore        9
     984: aload         9
     986: ifnull        1036
     989: aload         9
     991: invokevirtual #125                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.isComplete:()Z
     994: ifne          1009
     997: aload_0
     998: getfield      #3                  // Field receivers:Ljava/util/Set;
    1001: aload         9
    1003: invokeinterface #126,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
    1008: pop
    1009: iload         8
    1011: ifeq          1020
    1014: aload_0
    1015: aload         9
    1017: putfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
    1020: aload_0
    1021: invokevirtual #108                // Method isLastFrameReceived:()Z
    1024: ifeq          1043
    1027: aload_0
    1028: aload         9
    1030: invokespecial #123                // Method handleLastFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
    1033: goto          1043
    1036: aload         6
    1038: invokeinterface #45,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1043: aload         9
    1045: astore        10
    1047: aload_0
    1048: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1051: ifnull        1100
    1054: aload_1
    1055: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1058: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1061: ifeq          1068
    1064: iload_3
    1065: ifeq          1100
    1068: aload_1
    1069: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1072: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
    1075: iconst_2
    1076: imul
    1077: aload_1
    1078: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1081: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
    1084: if_icmpgt     1091
    1087: iload_3
    1088: ifeq          1096
    1091: aload_0
    1092: aconst_null
    1093: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1096: aload_1
    1097: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1100: aload         10
    1102: areturn
    1103: aconst_null
    1104: astore        6
    1106: aload_0
    1107: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1110: ifnull        1159
    1113: aload_1
    1114: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1117: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1120: ifeq          1127
    1123: iload_3
    1124: ifeq          1159
    1127: aload_1
    1128: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1131: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
    1134: iconst_2
    1135: imul
    1136: aload_1
    1137: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1140: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
    1143: if_icmpgt     1150
    1146: iload_3
    1147: ifeq          1155
    1150: aload_0
    1151: aconst_null
    1152: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1155: aload_1
    1156: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1159: aload         6
    1161: areturn
    1162: astore        5
    1164: aload_0
    1165: aload         5
    1167: invokevirtual #112                // Method markReadsBroken:(Ljava/lang/Throwable;)V
    1170: iconst_1
    1171: istore_3
    1172: aload         5
    1174: athrow
    1175: astore        11
    1177: aload_0
    1178: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1181: ifnull        1230
    1184: aload_1
    1185: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1188: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1191: ifeq          1198
    1194: iload_3
    1195: ifeq          1230
    1198: aload_1
    1199: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1202: invokevirtual #106                // Method java/nio/ByteBuffer.limit:()I
    1205: iconst_2
    1206: imul
    1207: aload_1
    1208: invokevirtual #101                // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1211: invokevirtual #102                // Method java/nio/ByteBuffer.capacity:()I
    1214: if_icmpgt     1221
    1217: iload_3
    1218: ifeq          1226
    1221: aload_0
    1222: aconst_null
    1223: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1226: aload_1
    1227: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1230: aload         11
    1232: athrow
    Exception table:
       from    to  target type
         138   176  1162   Class java/io/IOException
         138   176  1162   Class java/lang/RuntimeException
         232   252  1162   Class java/io/IOException
         232   252  1162   Class java/lang/RuntimeException
         308   465  1162   Class java/io/IOException
         308   465  1162   Class java/lang/RuntimeException
         521   618  1162   Class java/io/IOException
         521   618  1162   Class java/lang/RuntimeException
         674   889  1162   Class java/io/IOException
         674   889  1162   Class java/lang/RuntimeException
         945  1047  1162   Class java/io/IOException
         945  1047  1162   Class java/lang/RuntimeException
        1103  1106  1162   Class java/io/IOException
        1103  1106  1162   Class java/lang/RuntimeException
         138   176  1175   any
         232   252  1175   any
         308   465  1175   any
         521   618  1175   any
         674   889  1175   any
         945  1047  1175   any
        1103  1106  1175   any
        1162  1177  1175   any

  private void handleLastFrame(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: new           #29                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #3                  // Field receivers:Ljava/util/Set;
       8: invokespecial #129                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: invokeinterface #130,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          53
      28: aload_3
      29: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #133                // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
      37: astore        4
      39: aload         4
      41: aload_1
      42: if_acmpeq     50
      45: aload         4
      47: invokevirtual #134                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      50: goto          19
      53: return

  private io.undertow.util.ReferenceCountedPooled allocateReferenceCountedBuffer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxQueuedBuffers:I
       4: ifle          106
       7: aload_0
       8: getfield      #16                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: invokevirtual #135                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: getfield      #14                 // Field maxQueuedBuffers:I
      21: if_icmpne     91
      24: aload_0
      25: dup
      26: astore_2
      27: monitorenter
      28: aload_0
      29: getfield      #16                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: aload_0
      33: invokevirtual #135                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      36: istore_1
      37: iload_1
      38: aload_0
      39: getfield      #14                 // Field maxQueuedBuffers:I
      42: if_icmpne     81
      45: getstatic     #136                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      48: invokeinterface #137,  1          // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
      53: ifeq          67
      56: getstatic     #136                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      59: ldc           #138                // String Suspending reads on %s due to too many outstanding buffers
      61: aload_0
      62: invokeinterface #139,  3          // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      71: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      74: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      77: aconst_null
      78: aload_2
      79: monitorexit
      80: areturn
      81: aload_2
      82: monitorexit
      83: goto          91
      86: astore_3
      87: aload_2
      88: monitorexit
      89: aload_3
      90: athrow
      91: aload_0
      92: getfield      #16                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      95: aload_0
      96: iload_1
      97: iload_1
      98: iconst_1
      99: iadd
     100: invokevirtual #140                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     103: ifeq          7
     106: aload_0
     107: getfield      #56                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     110: invokeinterface #141,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     115: astore_1
     116: aload_0
     117: new           #43                 // class io/undertow/util/ReferenceCountedPooled
     120: dup
     121: aload_1
     122: iconst_1
     123: aload_0
     124: getfield      #14                 // Field maxQueuedBuffers:I
     127: ifle          137
     130: aload_0
     131: getfield      #36                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     134: goto          138
     137: aconst_null
     138: invokespecial #142                // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;ILio/undertow/util/ReferenceCountedPooled$FreeNotifier;)V
     141: dup_x1
     142: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     145: areturn
    Exception table:
       from    to  target type
          28    80    86   any
          81    83    86   any
          86    89    86   any

  protected void lastDataRead();
    Code:
       0: return

  protected abstract R createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;

  protected abstract io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;

  protected synchronized void recalculateHeldFrames() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
       4: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          34
      12: aload_0
      13: getfield      #37                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      16: aconst_null
      17: aload_0
      18: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      21: aload_0
      22: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      25: invokeinterface #144,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      30: aload_0
      31: invokevirtual #145                // Method flushSenders:()V
      34: return

  protected synchronized void flushSenders();
    Code:
       0: aload_0
       1: getfield      #28                 // Field flushingSenders:Z
       4: ifeq          16
       7: getstatic     #46                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #146,  1          // InterfaceMethod io/undertow/UndertowMessages.recursiveCallToFlushingSenders:()Ljava/lang/RuntimeException;
      15: athrow
      16: aload_0
      17: iconst_1
      18: putfield      #28                 // Field flushingSenders:Z
      21: iconst_0
      22: istore_1
      23: aload_0
      24: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      27: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      32: ifne          116
      35: aload_0
      36: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      39: invokeinterface #147,  1          // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      44: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      47: astore_2
      48: aload_2
      49: invokevirtual #149                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.preWrite:()V
      52: aload_0
      53: getfield      #37                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      56: aload_2
      57: aload_0
      58: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      61: invokeinterface #150,  3          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.insertFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;)Z
      66: ifeq          102
      69: aload_0
      70: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      73: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      78: ifne          113
      81: aload_0
      82: getfield      #37                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      85: aload_2
      86: aload_0
      87: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      90: aload_0
      91: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      94: invokeinterface #144,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      99: goto          113
     102: aload_0
     103: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     106: aload_2
     107: invokeinterface #151,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          23
     116: iconst_0
     117: istore_2
     118: aload_0
     119: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     122: invokeinterface #152,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     127: astore_3
     128: aload_3
     129: invokeinterface #153,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
     134: ifeq          172
     137: aload_3
     138: invokeinterface #154,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     143: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     146: astore        4
     148: aload         4
     150: invokevirtual #155                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isReadyForFlush:()Z
     153: ifeq          172
     156: iinc          1, 1
     159: aload         4
     161: invokevirtual #156                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isLastFrame:()Z
     164: ifeq          169
     167: iconst_1
     168: istore_2
     169: goto          128
     172: iload_1
     173: ifne          247
     176: aload_0
     177: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     180: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     183: invokevirtual #157                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     186: ifeq          199
     189: aload_0
     190: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     193: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     196: invokevirtual #158                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     199: goto          217
     202: astore        4
     204: aload_0
     205: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     208: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     211: aload_0
     212: aload         4
     214: invokevirtual #160                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     217: aload_0
     218: iconst_0
     219: putfield      #28                 // Field flushingSenders:Z
     222: aload_0
     223: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     226: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     231: ifne          246
     234: aload_0
     235: new           #161                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     238: dup
     239: aload_0
     240: invokespecial #162                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     243: invokevirtual #163                // Method runInIoThread:(Ljava/lang/Runnable;)V
     246: return
     247: iload_1
     248: iconst_3
     249: imul
     250: anewarray     #164                // class java/nio/ByteBuffer
     253: astore        4
     255: iconst_0
     256: istore        5
     258: aload_0
     259: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     262: invokeinterface #152,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     267: astore_3
     268: iload         5
     270: iload_1
     271: if_icmpge     372
     274: aload_3
     275: invokeinterface #154,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     280: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     283: astore        6
     285: aload         6
     287: invokevirtual #165                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     290: astore        7
     292: aload         7
     294: invokevirtual #166                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     297: astore        8
     299: aload         4
     301: iload         5
     303: iconst_3
     304: imul
     305: aload         8
     307: ifnull        320
     310: aload         8
     312: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     317: goto          323
     320: getstatic     #167                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     323: aastore
     324: aload         4
     326: iload         5
     328: iconst_3
     329: imul
     330: iconst_1
     331: iadd
     332: aload         6
     334: invokevirtual #168                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     337: ifnonnull     346
     340: getstatic     #167                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     343: goto          351
     346: aload         6
     348: invokevirtual #168                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     351: aastore
     352: aload         4
     354: iload         5
     356: iconst_3
     357: imul
     358: iconst_2
     359: iadd
     360: aload         6
     362: invokevirtual #169                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameFooter:()Ljava/nio/ByteBuffer;
     365: aastore
     366: iinc          5, 1
     369: goto          268
     372: aload         4
     374: invokestatic  #170                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     377: lstore        6
     379: aload_0
     380: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     383: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     386: aload         4
     388: invokevirtual #171                // Method org/xnio/conduits/ConduitStreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     391: lstore        8
     393: lload         6
     395: lload         8
     397: lsub
     398: lstore        6
     400: lload         8
     402: lconst_0
     403: lcmp
     404: ifle          414
     407: lload         6
     409: lconst_0
     410: lcmp
     411: ifgt          379
     414: iload_1
     415: istore        10
     417: iload         10
     419: ifle          521
     422: aload_0
     423: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     426: iconst_0
     427: invokeinterface #172,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     432: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     435: astore        11
     437: aload         11
     439: invokevirtual #165                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     442: invokevirtual #166                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     445: astore        12
     447: aload         12
     449: ifnull        465
     452: aload         12
     454: invokeinterface #41,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     459: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     462: ifne          521
     465: aload         11
     467: invokevirtual #168                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     470: ifnull        484
     473: aload         11
     475: invokevirtual #168                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     478: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     481: ifne          521
     484: aload         11
     486: invokevirtual #169                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameFooter:()Ljava/nio/ByteBuffer;
     489: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     492: ifeq          498
     495: goto          521
     498: aload         11
     500: invokevirtual #173                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.flushComplete:()V
     503: aload_0
     504: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     507: aload         11
     509: invokeinterface #174,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     514: pop
     515: iinc          10, -1
     518: goto          417
     521: aload_0
     522: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     525: invokeinterface #175,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     530: ifeq          546
     533: aload_0
     534: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     537: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     540: invokevirtual #157                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     543: ifne          559
     546: aload_0
     547: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     550: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     553: invokevirtual #176                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     556: goto          569
     559: aload_0
     560: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     563: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     566: invokevirtual #158                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     569: aload_0
     570: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     573: invokeinterface #175,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     578: ifeq          633
     581: iload_2
     582: ifeq          633
     585: aload_0
     586: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     589: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     592: invokevirtual #177                // Method org/xnio/conduits/ConduitStreamSinkChannel.shutdownWrites:()V
     595: aload_0
     596: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     599: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     602: invokevirtual #157                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     605: ifne          633
     608: aload_0
     609: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     612: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     615: aconst_null
     616: aconst_null
     617: invokestatic  #178                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     620: invokevirtual #179                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     623: aload_0
     624: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     627: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     630: invokevirtual #176                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     633: goto          651
     636: astore        6
     638: aload_0
     639: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
     642: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     645: aload_0
     646: aload         6
     648: invokevirtual #160                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     651: aload_0
     652: iconst_0
     653: putfield      #28                 // Field flushingSenders:Z
     656: aload_0
     657: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     660: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     665: ifne          717
     668: aload_0
     669: new           #161                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     672: dup
     673: aload_0
     674: invokespecial #162                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     677: invokevirtual #163                // Method runInIoThread:(Ljava/lang/Runnable;)V
     680: goto          717
     683: astore        13
     685: aload_0
     686: iconst_0
     687: putfield      #28                 // Field flushingSenders:Z
     690: aload_0
     691: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     694: invokeinterface #143,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     699: ifne          714
     702: aload_0
     703: new           #161                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     706: dup
     707: aload_0
     708: invokespecial #162                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     711: invokevirtual #163                // Method runInIoThread:(Ljava/lang/Runnable;)V
     714: aload         13
     716: athrow
     717: return
    Exception table:
       from    to  target type
         176   199   202   Class java/io/IOException
         268   633   636   Class java/io/IOException
          21   217   683   any
         247   651   683   any
         683   685   683   any

  void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #180                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:()V
      10: return

  void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: lload_1
       8: aload_3
       9: invokevirtual #181                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      12: return

  protected void queueFrame(S) throws java.io.IOException;
    Code:
       0: getstatic     #182                // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      10: aload_1
      11: invokeinterface #183,  2          // InterfaceMethod java/util/Deque.contains:(Ljava/lang/Object;)Z
      16: ifeq          27
      19: new           #184                // class java/lang/AssertionError
      22: dup
      23: invokespecial #185                // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: invokevirtual #186                // Method isWritesBroken:()Z
      31: ifne          61
      34: aload_0
      35: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      38: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      41: invokevirtual #187                // Method org/xnio/conduits/ConduitStreamSinkChannel.isOpen:()Z
      44: ifeq          61
      47: aload_1
      48: invokevirtual #188                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isBroken:()Z
      51: ifne          61
      54: aload_1
      55: invokevirtual #189                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isOpen:()Z
      58: ifne          74
      61: aload_1
      62: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      65: getstatic     #46                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      68: invokeinterface #190,  1          // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      73: athrow
      74: aload_0
      75: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      78: aload_1
      79: invokeinterface #151,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #28                 // Field flushingSenders:Z
      89: ifne          121
      92: aload_1
      93: invokevirtual #191                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      96: invokestatic  #192                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      99: if_acmpne     109
     102: aload_0
     103: invokevirtual #145                // Method flushSenders:()V
     106: goto          121
     109: aload_0
     110: new           #193                // class io/undertow/server/protocol/framed/AbstractFramedChannel$5
     113: dup
     114: aload_0
     115: invokespecial #194                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$5."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     118: invokevirtual #163                // Method runInIoThread:(Ljava/lang/Runnable;)V
     121: return

  protected abstract boolean isLastFrameReceived();

  protected abstract boolean isLastFrameSent();

  protected abstract void handleBrokenSourceChannel(java.lang.Throwable);

  protected abstract void handleBrokenSinkChannel(java.lang.Throwable);

  public org.xnio.ChannelListener$Setter<C> getReceiveSetter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public synchronized void suspendReceives();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field receivesSuspended:Z
       5: aload_0
       6: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       9: ifnonnull     22
      12: aload_0
      13: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      16: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      19: invokevirtual #61                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      22: return

  public synchronized void resumeReceives();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #15                 // Field receivesSuspended:Z
       5: aload_0
       6: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       9: ifnull        35
      12: aload_0
      13: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      16: invokevirtual #99                 // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      19: ifne          35
      22: aload_0
      23: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      26: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      29: invokevirtual #195                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
      32: goto          45
      35: aload_0
      36: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      39: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      42: invokevirtual #196                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      45: return

  public boolean isReceivesResumed();
    Code:
       0: aload_0
       1: getfield      #15                 // Field receivesSuspended:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: aload_0
       8: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      11: ifnull        26
      14: aload_0
      15: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      18: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      21: aload_0
      22: aconst_null
      23: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      26: return

  public org.xnio.ChannelListener$Setter<? extends io.undertow.server.protocol.framed.AbstractFramedChannel> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  protected void markReadsBroken(java.lang.Throwable);
    Code:
       0: getstatic     #197                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #140                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          81
      12: aload_0
      13: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      16: ifnull        26
      19: aload_0
      20: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      23: invokevirtual #134                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      26: aload_0
      27: getfield      #3                  // Field receivers:Ljava/util/Set;
      30: invokeinterface #130,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          62
      45: aload_2
      46: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #133                // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
      54: astore_3
      55: aload_3
      56: invokevirtual #134                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.markStreamBroken:()V
      59: goto          36
      62: aload_0
      63: aload_1
      64: invokevirtual #198                // Method handleBrokenSourceChannel:(Ljava/lang/Throwable;)V
      67: aload_0
      68: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      71: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      74: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      77: aload_0
      78: invokevirtual #199                // Method closeSubChannels:()V
      81: return

  protected abstract void closeSubChannels();

  protected void markWritesBroken(java.lang.Throwable);
    Code:
       0: getstatic     #200                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #140                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          184
      12: aload_0
      13: aload_1
      14: invokevirtual #201                // Method handleBrokenSinkChannel:(Ljava/lang/Throwable;)V
      17: aload_0
      18: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      21: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      24: invokestatic  #159                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      27: aload_0
      28: dup
      29: astore_2
      30: monitorenter
      31: aload_0
      32: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      35: invokeinterface #202,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          69
      50: aload_3
      51: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      59: astore        4
      61: aload         4
      63: invokevirtual #203                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
      66: goto          41
      69: aload_0
      70: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      73: invokeinterface #204,  1          // InterfaceMethod java/util/List.clear:()V
      78: aload_0
      79: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      82: invokeinterface #205,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      87: astore_3
      88: aload_3
      89: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          116
      97: aload_3
      98: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     106: astore        4
     108: aload         4
     110: invokevirtual #203                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     113: goto          88
     116: aload_0
     117: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     120: invokeinterface #206,  1          // InterfaceMethod java/util/Deque.clear:()V
     125: aload_0
     126: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     129: invokeinterface #205,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     134: astore_3
     135: aload_3
     136: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          163
     144: aload_3
     145: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #148                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     153: astore        4
     155: aload         4
     157: invokevirtual #203                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     160: goto          135
     163: aload_0
     164: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     167: invokeinterface #206,  1          // InterfaceMethod java/util/Deque.clear:()V
     172: aload_2
     173: monitorexit
     174: goto          184
     177: astore        5
     179: aload_2
     180: monitorexit
     181: aload         5
     183: athrow
     184: return
    Exception table:
       from    to  target type
          31   174   177   any
         177   181   177   any

  protected boolean isWritesBroken();
    Code:
       0: getstatic     #200                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #135                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean isReadsBroken();
    Code:
       0: getstatic     #197                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #135                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #176                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      10: return

  void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #158                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: return

  void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #53                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #207                // Method org/xnio/conduits/ConduitStreamSinkChannel.wakeupWrites:()V
      10: return

  org.xnio.channels.StreamSourceChannel getSourceChannel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #51                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: areturn

  void notifyFrameReadComplete(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>);
    Code:
       0: return

  void notifyClosed(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field receivers:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #208,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      14: pop
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public void setIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #55                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: lload_1
       5: invokevirtual #209                // Method io/undertow/conduits/IdleTimeoutConduit.setIdleTimeout:(J)V
       8: return

  public long getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #55                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: invokevirtual #210                // Method io/undertow/conduits/IdleTimeoutConduit.getIdleTimeout:()J
       7: lreturn

  protected io.undertow.server.protocol.framed.FramePriority<C, R, S> getFramePriority();
    Code:
       0: aload_0
       1: getfield      #37                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
       4: areturn

  public void addCloseTask(org.xnio.ChannelListener<C>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeTasks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #211,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.lang.String toString();
    Code:
       0: new           #212                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #213                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #214                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #215                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #217                // String  peer
      19: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      26: invokevirtual #91                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      29: invokevirtual #218                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #219                // String  local
      34: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
      41: invokevirtual #83                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
      44: invokevirtual #218                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #220                // String [
      49: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      56: ifnonnull     64
      59: ldc           #221                // String No Receiver
      61: goto          71
      64: aload_0
      65: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      68: invokevirtual #222                // Method java/lang/Object.toString:()Ljava/lang/String;
      71: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #223                // String
      76: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      83: invokevirtual #222                // Method java/lang/Object.toString:()Ljava/lang/String;
      86: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #224                // String  --
      91: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_0
      95: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      98: invokevirtual #222                // Method java/lang/Object.toString:()Ljava/lang/String;
     101: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #224                // String  --
     106: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     113: invokevirtual #222                // Method java/lang/Object.toString:()Ljava/lang/String;
     116: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #225                // String ]
     121: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #226                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn

  protected org.xnio.StreamConnection getUnderlyingConnection();
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  protected org.xnio.ChannelExceptionHandler<org.xnio.channels.SuspendableWriteChannel> writeExceptionHandler();
    Code:
       0: new           #227                // class io/undertow/server/protocol/framed/AbstractFramedChannel$6
       3: dup
       4: aload_0
       5: invokespecial #228                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$6."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
       8: areturn

  protected org.xnio.OptionMap getSettings();
    Code:
       0: aload_0
       1: getfield      #40                 // Field settings:Lorg/xnio/OptionMap;
       4: areturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #16                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       4: areturn

  static boolean access$100(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #15                 // Field receivesSuspended:Z
       4: ireturn

  static int access$200(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxQueuedBuffers:I
       4: ireturn

  static org.xnio.StreamConnection access$300(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #13                 // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  static java.util.concurrent.LinkedBlockingDeque access$700(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #12                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
       4: areturn

  static io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel access$800(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #11                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       4: areturn

  static boolean access$900(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field readChannelDone:Z
       4: ireturn

  static org.xnio.ChannelListener$SimpleSetter access$1000(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static org.xnio.ChannelListener access$1100();
    Code:
       0: getstatic     #8                  // Field DRAIN_LISTENER:Lorg/xnio/ChannelListener;
       3: areturn

  static io.undertow.util.ReferenceCountedPooled access$1200(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       4: areturn

  static java.util.List access$1300(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingFrames:Ljava/util/List;
       4: areturn

  static java.util.Deque access$1400(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field newFrames:Ljava/util/Deque;
       4: areturn

  static java.util.Deque access$1500(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
       4: areturn

  static java.util.Set access$1600(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field receivers:Ljava/util/Set;
       4: areturn

  static java.util.List access$1700(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeTasks:Ljava/util/List;
       4: areturn

  static io.undertow.util.ReferenceCountedPooled access$1202(io.undertow.server.protocol.framed.AbstractFramedChannel, io.undertow.util.ReferenceCountedPooled);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       6: areturn

  static org.xnio.ChannelListener$SimpleSetter access$1800(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static {};
    Code:
       0: ldc           #31                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
       2: invokevirtual #229                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #182                // Field $assertionsDisabled:Z
      16: ldc           #31                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      18: ldc           #230                // String readsBroken
      20: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      23: putstatic     #197                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      26: ldc           #31                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      28: ldc           #231                // String writesBroken
      30: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      33: putstatic     #200                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      36: new           #232                // class io/undertow/server/protocol/framed/AbstractFramedChannel$2
      39: dup
      40: invokespecial #233                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$2."<init>":()V
      43: putstatic     #8                  // Field DRAIN_LISTENER:Lorg/xnio/ChannelListener;
      46: return
}
