Compiled from "HttpOpenListener.java"
public final class io.undertow.server.protocol.http.HttpOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.DelegateOpenListener {
  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final int bufferSize;

  private volatile io.undertow.server.HttpHandler rootHandler;

  private volatile org.xnio.OptionMap undertowOptions;

  private volatile io.undertow.server.protocol.http.HttpRequestParser parser;

  private volatile boolean statisticsEnabled;

  private final io.undertow.server.ConnectorStatisticsImpl connectorStatistics;

  public io.undertow.server.protocol.http.HttpOpenListener(org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: invokespecial #2                  // Method "<init>":(Lorg/xnio/Pool;Lorg/xnio/OptionMap;)V
       8: return

  public io.undertow.server.protocol.http.HttpOpenListener(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: new           #3                  // class io/undertow/server/XnioByteBufferPool
       4: dup
       5: aload_1
       6: invokespecial #4                  // Method io/undertow/server/XnioByteBufferPool."<init>":(Lorg/xnio/Pool;)V
       9: aload_2
      10: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      13: return

  public io.undertow.server.protocol.http.HttpOpenListener(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: invokespecial #5                  // Method "<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
       8: return

  public io.undertow.server.protocol.http.HttpOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #7                  // Field undertowOptions:Lorg/xnio/OptionMap;
       9: aload_0
      10: aload_1
      11: putfield      #8                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      20: astore_3
      21: aload_0
      22: aload_3
      23: invokeinterface #10,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      28: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      31: putfield      #12                 // Field bufferSize:I
      34: aload_3
      35: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      40: aload_0
      41: aload_2
      42: invokestatic  #14                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      45: putfield      #15                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
      48: aload_0
      49: new           #16                 // class io/undertow/server/ConnectorStatisticsImpl
      52: dup
      53: invokespecial #17                 // Method io/undertow/server/ConnectorStatisticsImpl."<init>":()V
      56: putfield      #18                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      59: aload_0
      60: aload_2
      61: getstatic     #19                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      64: iconst_0
      65: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      68: putfield      #21                 // Field statisticsEnabled:Z
      71: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #22                 // Method handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
       6: return

  public void handleEvent(org.xnio.StreamConnection, io.undertow.connector.PooledByteBuffer);
    Code:
       0: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #24,  1           // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          25
      11: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      14: ldc           #25                 // String Opened connection with %s
      16: aload_1
      17: invokevirtual #26                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      20: invokeinterface #27,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_1
      26: getstatic     #28                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      29: invokevirtual #29                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      32: checkcast     #30                 // class java/lang/Integer
      35: astore_3
      36: aload_0
      37: getfield      #7                  // Field undertowOptions:Lorg/xnio/OptionMap;
      40: getstatic     #31                 // Field io/undertow/UndertowOptions.IDLE_TIMEOUT:Lorg/xnio/Option;
      43: invokevirtual #32                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      46: checkcast     #30                 // class java/lang/Integer
      49: astore        4
      51: aload_3
      52: ifnull        62
      55: aload_3
      56: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      59: ifgt          73
      62: aload         4
      64: ifnull        73
      67: aload         4
      69: astore_3
      70: goto          106
      73: aload_3
      74: ifnull        106
      77: aload         4
      79: ifnull        106
      82: aload         4
      84: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      87: ifle          106
      90: aload_3
      91: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      94: aload         4
      96: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      99: invokestatic  #34                 // Method java/lang/Math.min:(II)I
     102: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: astore_3
     106: aload_3
     107: ifnull        140
     110: aload_3
     111: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     114: ifle          140
     117: aload_1
     118: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     121: new           #37                 // class io/undertow/conduits/ReadTimeoutStreamSourceConduit
     124: dup
     125: aload_1
     126: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     129: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     132: aload_1
     133: aload_0
     134: invokespecial #39                 // Method io/undertow/conduits/ReadTimeoutStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
     137: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     140: aload_1
     141: getstatic     #41                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     144: invokevirtual #29                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
     147: checkcast     #30                 // class java/lang/Integer
     150: astore        5
     152: aload         5
     154: ifnull        165
     157: aload         5
     159: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     162: ifgt          177
     165: aload         4
     167: ifnull        177
     170: aload         4
     172: astore        5
     174: goto          213
     177: aload         5
     179: ifnull        213
     182: aload         4
     184: ifnull        213
     187: aload         4
     189: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     192: ifle          213
     195: aload         5
     197: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     200: aload         4
     202: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     205: invokestatic  #34                 // Method java/lang/Math.min:(II)I
     208: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     211: astore        5
     213: aload         5
     215: ifnull        249
     218: aload         5
     220: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
     223: ifle          249
     226: aload_1
     227: invokevirtual #42                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     230: new           #43                 // class io/undertow/conduits/WriteTimeoutStreamSinkConduit
     233: dup
     234: aload_1
     235: invokevirtual #42                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     238: invokevirtual #44                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     241: aload_1
     242: aload_0
     243: invokespecial #45                 // Method io/undertow/conduits/WriteTimeoutStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/OpenListener;)V
     246: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     249: goto          266
     252: astore_3
     253: aload_1
     254: invokestatic  #48                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     257: getstatic     #49                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     260: aload_3
     261: invokeinterface #50,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     266: aload_0
     267: getfield      #21                 // Field statisticsEnabled:Z
     270: ifeq          329
     273: aload_1
     274: invokevirtual #42                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     277: new           #51                 // class io/undertow/conduits/BytesSentStreamSinkConduit
     280: dup
     281: aload_1
     282: invokevirtual #42                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     285: invokevirtual #44                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     288: aload_0
     289: getfield      #18                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     292: invokevirtual #52                 // Method io/undertow/server/ConnectorStatisticsImpl.sentAccumulator:()Lio/undertow/conduits/ByteActivityCallback;
     295: invokespecial #53                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     298: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     301: aload_1
     302: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     305: new           #54                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
     308: dup
     309: aload_1
     310: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     313: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     316: aload_0
     317: getfield      #18                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     320: invokevirtual #55                 // Method io/undertow/server/ConnectorStatisticsImpl.receivedAccumulator:()Lio/undertow/conduits/ByteActivityCallback;
     323: invokespecial #56                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     326: invokevirtual #40                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     329: new           #57                 // class io/undertow/server/protocol/http/HttpServerConnection
     332: dup
     333: aload_1
     334: aload_0
     335: getfield      #8                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     338: aload_0
     339: getfield      #58                 // Field rootHandler:Lio/undertow/server/HttpHandler;
     342: aload_0
     343: getfield      #7                  // Field undertowOptions:Lorg/xnio/OptionMap;
     346: aload_0
     347: getfield      #12                 // Field bufferSize:I
     350: invokespecial #59                 // Method io/undertow/server/protocol/http/HttpServerConnection."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/HttpHandler;Lorg/xnio/OptionMap;I)V
     353: astore_3
     354: new           #60                 // class io/undertow/server/protocol/http/HttpReadListener
     357: dup
     358: aload_3
     359: aload_0
     360: getfield      #15                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
     363: aload_0
     364: getfield      #21                 // Field statisticsEnabled:Z
     367: ifeq          377
     370: aload_0
     371: getfield      #18                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     374: goto          378
     377: aconst_null
     378: invokespecial #61                 // Method io/undertow/server/protocol/http/HttpReadListener."<init>":(Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/server/protocol/http/HttpRequestParser;Lio/undertow/server/ConnectorStatisticsImpl;)V
     381: astore        4
     383: aload_2
     384: ifnull        413
     387: aload_2
     388: invokeinterface #10,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     393: invokevirtual #62                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     396: ifeq          407
     399: aload_3
     400: aload_2
     401: invokevirtual #63                 // Method io/undertow/server/protocol/http/HttpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     404: goto          413
     407: aload_2
     408: invokeinterface #13,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     413: aload_3
     414: aload         4
     416: invokevirtual #64                 // Method io/undertow/server/protocol/http/HttpServerConnection.setReadListener:(Lio/undertow/server/protocol/http/HttpReadListener;)V
     419: aload         4
     421: invokevirtual #65                 // Method io/undertow/server/protocol/http/HttpReadListener.newRequest:()V
     424: aload_1
     425: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     428: aload         4
     430: invokevirtual #66                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     433: aload         4
     435: aload_1
     436: invokevirtual #36                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     439: invokevirtual #67                 // Method io/undertow/server/protocol/http/HttpReadListener.handleEvent:(Lorg/xnio/conduits/ConduitStreamSourceChannel;)V
     442: return
    Exception table:
       from    to  target type
          25   249   252   Class java/io/IOException

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #58                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       5: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #7                  // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #68                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #69                 // String undertowOptions
       9: invokeinterface #70,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field undertowOptions:Lorg/xnio/OptionMap;
      20: aload_0
      21: aload_1
      22: invokestatic  #14                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      25: putfield      #15                 // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
      28: aload_0
      29: aload_1
      30: getstatic     #19                 // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      33: iconst_0
      34: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      37: putfield      #21                 // Field statisticsEnabled:Z
      40: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #21                 // Field statisticsEnabled:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #18                 // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      11: areturn
      12: aconst_null
      13: areturn

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #71                 // class org/xnio/StreamConnection
       5: invokevirtual #72                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
