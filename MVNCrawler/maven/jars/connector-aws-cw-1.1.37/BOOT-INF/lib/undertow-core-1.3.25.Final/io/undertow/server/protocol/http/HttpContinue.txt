Compiled from "HttpContinue.java"
public class io.undertow.server.protocol.http.HttpContinue {
  private static final java.util.Set<io.undertow.util.HttpString> COMPATIBLE_PROTOCOLS;

  public static final java.lang.String CONTINUE;

  private static final io.undertow.util.AttachmentKey<java.lang.Boolean> ALREADY_SENT;

  public io.undertow.server.protocol.http.HttpContinue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean requiresContinueResponse(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #2                  // Field COMPATIBLE_PROTOCOLS:Ljava/util/Set;
       3: aload_0
       4: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
       7: invokeinterface #4,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ifeq          42
      15: aload_0
      16: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      19: ifne          42
      22: aload_0
      23: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      26: invokevirtual #7                  // Method io/undertow/server/ServerConnection.isContinueResponseSupported:()Z
      29: ifeq          42
      32: aload_0
      33: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      36: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      39: ifnull        44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      48: instanceof    #10                 // class io/undertow/server/protocol/http/HttpServerConnection
      51: ifeq          69
      54: aload_0
      55: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      58: checkcast     #10                 // class io/undertow/server/protocol/http/HttpServerConnection
      61: invokevirtual #11                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
      64: ifnull        69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      73: astore_1
      74: aload_1
      75: invokestatic  #13                 // Method requiresContinueResponse:(Lio/undertow/util/HeaderMap;)Z
      78: ireturn

  public static boolean requiresContinueResponse(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field io/undertow/util/Headers.EXPECT:Lio/undertow/util/HttpString;
       4: invokevirtual #15                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
       7: astore_1
       8: aload_1
       9: ifnull        52
      12: aload_1
      13: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          52
      28: aload_2
      29: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #19                 // class java/lang/String
      37: astore_3
      38: aload_3
      39: ldc           #21                 // String 100-continue
      41: invokevirtual #22                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: goto          19
      52: iconst_0
      53: ireturn

  public static void sendContinueResponse(io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isResponseChannelAvailable:()Z
       4: ifne          24
       7: aload_1
       8: aload_0
       9: aconst_null
      10: getstatic     #24                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #25,  1           // InterfaceMethod io/undertow/UndertowMessages.cannotSendContinueResponse:()Ljava/io/IOException;
      18: invokeinterface #26,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      23: return
      24: aload_0
      25: aload_1
      26: invokestatic  #27                 // Method internalSendContinueResponse:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/IoCallback;)V
      29: return

  public static io.undertow.server.protocol.http.HttpContinue$ContinueResponseSender createResponseSender(io.undertow.server.HttpServerExchange) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isResponseChannelAvailable:()Z
       4: ifne          16
       7: getstatic     #24                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #25,  1           // InterfaceMethod io/undertow/UndertowMessages.cannotSendContinueResponse:()Ljava/io/IOException;
      15: athrow
      16: aload_0
      17: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      20: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      23: ifnull        34
      26: new           #28                 // class io/undertow/server/protocol/http/HttpContinue$1
      29: dup
      30: invokespecial #29                 // Method io/undertow/server/protocol/http/HttpContinue$1."<init>":()V
      33: areturn
      34: aload_0
      35: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      38: aload_0
      39: invokevirtual #30                 // Method io/undertow/server/ServerConnection.sendOutOfBandResponse:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/HttpServerExchange;
      42: astore_1
      43: aload_0
      44: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      47: iconst_1
      48: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_1
      56: bipush        100
      58: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      61: pop
      62: aload_1
      63: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      66: getstatic     #36                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      69: lconst_0
      70: invokevirtual #37                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;J)Lio/undertow/util/HeaderMap;
      73: pop
      74: aload_1
      75: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      78: astore_2
      79: new           #39                 // class io/undertow/server/protocol/http/HttpContinue$2
      82: dup
      83: aload_2
      84: invokespecial #40                 // Method io/undertow/server/protocol/http/HttpContinue$2."<init>":(Lorg/xnio/channels/StreamSinkChannel;)V
      87: areturn

  public static void sendContinueResponseBlocking(io.undertow.server.HttpServerExchange) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isResponseChannelAvailable:()Z
       4: ifne          16
       7: getstatic     #24                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #25,  1           // InterfaceMethod io/undertow/UndertowMessages.cannotSendContinueResponse:()Ljava/io/IOException;
      15: athrow
      16: aload_0
      17: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      20: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      23: ifnull        27
      26: return
      27: aload_0
      28: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      31: aload_0
      32: invokevirtual #30                 // Method io/undertow/server/ServerConnection.sendOutOfBandResponse:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/HttpServerExchange;
      35: astore_1
      36: aload_0
      37: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      40: iconst_1
      41: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_1
      49: bipush        100
      51: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      54: pop
      55: aload_1
      56: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      59: getstatic     #36                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      62: lconst_0
      63: invokevirtual #37                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;J)Lio/undertow/util/HeaderMap;
      66: pop
      67: aload_1
      68: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.startBlocking:()Lio/undertow/server/BlockingHttpExchange;
      71: pop
      72: aload_1
      73: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getOutputStream:()Ljava/io/OutputStream;
      76: invokevirtual #43                 // Method java/io/OutputStream.close:()V
      79: aload_1
      80: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      83: invokevirtual #45                 // Method java/io/InputStream.close:()V
      86: return

  public static void rejectExchange(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: sipush        417
       4: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
       7: pop
       8: aload_0
       9: iconst_0
      10: invokevirtual #46                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      13: pop
      14: aload_0
      15: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      18: pop
      19: return

  private static void internalSendContinueResponse(io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
       4: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       7: ifnull        19
      10: aload_1
      11: aload_0
      12: aconst_null
      13: invokeinterface #48,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      18: return
      19: aload_0
      20: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      23: aload_0
      24: invokevirtual #30                 // Method io/undertow/server/ServerConnection.sendOutOfBandResponse:(Lio/undertow/server/HttpServerExchange;)Lio/undertow/server/HttpServerExchange;
      27: astore_2
      28: aload_0
      29: getstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      32: iconst_1
      33: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      36: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: bipush        100
      43: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      46: pop
      47: aload_2
      48: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      51: getstatic     #36                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      54: lconst_0
      55: invokevirtual #37                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;J)Lio/undertow/util/HeaderMap;
      58: pop
      59: aload_2
      60: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      63: astore_3
      64: aload_3
      65: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      70: aload_3
      71: invokeinterface #50,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      76: ifne          125
      79: aload_3
      80: invokeinterface #51,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      85: new           #52                 // class io/undertow/server/protocol/http/HttpContinue$3
      88: dup
      89: aload_0
      90: aload_1
      91: invokespecial #53                 // Method io/undertow/server/protocol/http/HttpContinue$3."<init>":(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/IoCallback;)V
      94: new           #54                 // class io/undertow/server/protocol/http/HttpContinue$4
      97: dup
      98: aload_0
      99: aload_1
     100: invokespecial #55                 // Method io/undertow/server/protocol/http/HttpContinue$4."<init>":(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/IoCallback;)V
     103: invokestatic  #56                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     106: invokeinterface #57,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     111: aload_3
     112: invokeinterface #58,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     117: aload_0
     118: invokevirtual #59                 // Method io/undertow/server/HttpServerExchange.dispatch:()Lio/undertow/server/HttpServerExchange;
     121: pop
     122: goto          133
     125: aload_1
     126: aload_0
     127: aconst_null
     128: invokeinterface #48,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     133: goto          148
     136: astore        4
     138: aload_1
     139: aload_0
     140: aconst_null
     141: aload         4
     143: invokeinterface #26,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     148: return
    Exception table:
       from    to  target type
          64   133   136   Class java/io/IOException

  static {};
    Code:
       0: new           #61                 // class java/util/HashSet
       3: dup
       4: invokespecial #62                 // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #63                 // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
      12: invokeinterface #64,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getstatic     #65                 // Field io/undertow/util/Protocols.HTTP_2_0:Lio/undertow/util/HttpString;
      22: invokeinterface #64,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: invokestatic  #66                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      32: putstatic     #2                  // Field COMPATIBLE_PROTOCOLS:Ljava/util/Set;
      35: ldc           #67                 // class java/lang/Boolean
      37: invokestatic  #68                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      40: putstatic     #8                  // Field ALREADY_SENT:Lio/undertow/util/AttachmentKey;
      43: return
}
