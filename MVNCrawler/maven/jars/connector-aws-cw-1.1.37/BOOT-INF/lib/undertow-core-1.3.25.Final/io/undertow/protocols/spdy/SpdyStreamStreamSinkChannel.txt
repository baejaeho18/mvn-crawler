Compiled from "SpdyStreamStreamSinkChannel.java"
public abstract class io.undertow.protocols.spdy.SpdyStreamStreamSinkChannel extends io.undertow.protocols.spdy.SpdyStreamSinkChannel {
  private final int streamId;

  private volatile boolean reset;

  private int flowControlWindow;

  private int initialWindowSize;

  private io.undertow.server.protocol.framed.SendFrameHeader header;

  io.undertow.protocols.spdy.SpdyStreamStreamSinkChannel(io.undertow.protocols.spdy.SpdyChannel, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/undertow/protocols/spdy/SpdyStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field reset:Z
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field streamId:I
      15: aload_0
      16: aload_1
      17: invokevirtual #4                  // Method io/undertow/protocols/spdy/SpdyChannel.getInitialWindowSize:()I
      20: putfield      #5                  // Field flowControlWindow:I
      23: aload_0
      24: aload_0
      25: getfield      #5                  // Field flowControlWindow:I
      28: putfield      #6                  // Field initialWindowSize:I
      31: return

  public int getStreamId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field streamId:I
       4: ireturn

  io.undertow.server.protocol.framed.SendFrameHeader generateSendFrameHeader();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method createFrameHeaderImpl:()Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: putfield      #8                  // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       8: aload_0
       9: getfield      #8                  // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      12: areturn

  void clearHeader();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #8                  // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: return

  protected void channelForciblyClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
       7: aload_0
       8: invokevirtual #11                 // Method getStreamId:()I
      11: invokevirtual #12                 // Method io/undertow/protocols/spdy/SpdyChannel.removeStreamSink:(I)V
      14: aload_0
      15: getfield      #2                  // Field reset:Z
      18: ifeq          22
      21: return
      22: aload_0
      23: iconst_1
      24: putfield      #2                  // Field reset:Z
      27: aload_0
      28: getfield      #3                  // Field streamId:I
      31: iconst_2
      32: irem
      33: aload_0
      34: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      37: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      40: invokevirtual #13                 // Method io/undertow/protocols/spdy/SpdyChannel.isClient:()Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: if_icmpne     79
      54: aload_0
      55: invokevirtual #14                 // Method isFirstDataWritten:()Z
      58: ifeq          95
      61: aload_0
      62: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      65: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      68: aload_0
      69: getfield      #3                  // Field streamId:I
      72: iconst_5
      73: invokevirtual #15                 // Method io/undertow/protocols/spdy/SpdyChannel.sendRstStream:(II)V
      76: goto          95
      79: aload_0
      80: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      83: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      86: aload_0
      87: getfield      #3                  // Field streamId:I
      90: bipush        6
      92: invokevirtual #15                 // Method io/undertow/protocols/spdy/SpdyChannel.sendRstStream:(II)V
      95: aload_0
      96: invokevirtual #16                 // Method markBroken:()V
      99: return

  protected final io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader();
    Code:
       0: aload_0
       1: getfield      #8                  // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #8                  // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      10: aload_1
      11: areturn

  protected void handleFlushComplete(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       8: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      11: aload_0
      12: invokevirtual #11                 // Method getStreamId:()I
      15: invokevirtual #12                 // Method io/undertow/protocols/spdy/SpdyChannel.removeStreamSink:(I)V
      18: return

  protected io.undertow.connector.PooledByteBuffer[] createHeaderBlock(io.undertow.connector.PooledByteBuffer, io.undertow.connector.PooledByteBuffer[], java.nio.ByteBuffer, io.undertow.util.HeaderMap, boolean);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
       7: invokevirtual #17                 // Method io/undertow/protocols/spdy/SpdyChannel.getHeapBufferPool:()Lio/undertow/connector/ByteBufferPool;
      10: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      15: astore        6
      17: aload_0
      18: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      24: invokevirtual #17                 // Method io/undertow/protocols/spdy/SpdyChannel.getHeapBufferPool:()Lio/undertow/connector/ByteBufferPool;
      27: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      32: astore        7
      34: aload_1
      35: astore        8
      37: aload         7
      39: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      44: astore        9
      46: aload         6
      48: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      53: astore        10
      55: aload         9
      57: aload         4
      59: invokevirtual #20                 // Method io/undertow/util/HeaderMap.size:()I
      62: invokestatic  #21                 // Method io/undertow/protocols/spdy/SpdyProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
      65: aload         4
      67: invokevirtual #22                 // Method io/undertow/util/HeaderMap.fastIterateNonEmpty:()J
      70: lstore        11
      72: lload         11
      74: ldc2_w        #23                 // long -1l
      77: lcmp
      78: ifeq          402
      81: aload         4
      83: lload         11
      85: invokevirtual #25                 // Method io/undertow/util/HeaderMap.fiCurrent:(J)Lio/undertow/util/HeaderValues;
      88: astore        13
      90: aload         13
      92: invokevirtual #26                 // Method io/undertow/util/HeaderValues.size:()I
      95: iconst_1
      96: isub
      97: istore        14
      99: iconst_0
     100: istore        15
     102: iload         15
     104: aload         13
     106: invokevirtual #26                 // Method io/undertow/util/HeaderValues.size:()I
     109: if_icmpge     137
     112: aload         13
     114: iload         15
     116: invokevirtual #27                 // Method io/undertow/util/HeaderValues.get:(I)Ljava/lang/String;
     119: astore        16
     121: iload         14
     123: aload         16
     125: invokevirtual #28                 // Method java/lang/String.length:()I
     128: iadd
     129: istore        14
     131: iinc          15, 1
     134: goto          102
     137: bipush        8
     139: aload         13
     141: invokevirtual #29                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     144: invokevirtual #30                 // Method io/undertow/util/HttpString.length:()I
     147: iadd
     148: iload         14
     150: iadd
     151: istore        15
     153: iload         15
     155: aload         9
     157: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
     160: if_icmple     172
     163: getstatic     #32                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     166: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.headersTooLargeToFitInHeapBuffer:()Ljava/lang/IllegalStateException;
     171: athrow
     172: iload         15
     174: aload         9
     176: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
     179: if_icmple     218
     182: aload_0
     183: aload         9
     185: aload         10
     187: aload         8
     189: aload_2
     190: invokespecial #35                 // Method doDeflate:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lio/undertow/connector/PooledByteBuffer;[Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     193: astore_2
     194: aload_2
     195: ifnull        206
     198: aload_2
     199: aload_2
     200: arraylength
     201: iconst_1
     202: isub
     203: aaload
     204: astore        8
     206: aload         9
     208: invokevirtual #36                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     211: pop
     212: aload         10
     214: invokevirtual #36                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     217: pop
     218: aload         9
     220: aload         13
     222: invokevirtual #29                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     225: invokevirtual #30                 // Method io/undertow/util/HttpString.length:()I
     228: invokestatic  #21                 // Method io/undertow/protocols/spdy/SpdyProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     231: iconst_0
     232: istore        16
     234: iload         16
     236: aload         13
     238: invokevirtual #29                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     241: invokevirtual #30                 // Method io/undertow/util/HttpString.length:()I
     244: if_icmpge     274
     247: aload         9
     249: aload         13
     251: invokevirtual #29                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     254: iload         16
     256: invokevirtual #37                 // Method io/undertow/util/HttpString.byteAt:(I)B
     259: i2c
     260: invokestatic  #38                 // Method java/lang/Character.toLowerCase:(C)C
     263: i2b
     264: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     267: pop
     268: iinc          16, 1
     271: goto          234
     274: aload         9
     276: iload         14
     278: invokestatic  #21                 // Method io/undertow/protocols/spdy/SpdyProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     281: iconst_0
     282: istore        16
     284: iload         16
     286: aload         13
     288: invokevirtual #26                 // Method io/undertow/util/HeaderValues.size:()I
     291: if_icmpge     390
     294: aload         13
     296: iload         16
     298: invokevirtual #27                 // Method io/undertow/util/HeaderValues.get:(I)Ljava/lang/String;
     301: astore        17
     303: iconst_0
     304: istore        18
     306: iload         18
     308: aload         17
     310: invokevirtual #28                 // Method java/lang/String.length:()I
     313: if_icmpge     365
     316: aload         17
     318: iload         18
     320: invokevirtual #40                 // Method java/lang/String.charAt:(I)C
     323: istore        19
     325: iload         19
     327: bipush        13
     329: if_icmpeq     351
     332: iload         19
     334: bipush        10
     336: if_icmpeq     351
     339: aload         9
     341: iload         19
     343: i2b
     344: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     347: pop
     348: goto          359
     351: aload         9
     353: bipush        32
     355: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     358: pop
     359: iinc          18, 1
     362: goto          306
     365: iload         16
     367: aload         13
     369: invokevirtual #26                 // Method io/undertow/util/HeaderValues.size:()I
     372: iconst_1
     373: isub
     374: if_icmpeq     384
     377: aload         9
     379: iconst_0
     380: invokevirtual #39                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     383: pop
     384: iinc          16, 1
     387: goto          284
     390: aload         4
     392: lload         11
     394: invokevirtual #41                 // Method io/undertow/util/HeaderMap.fiNext:(J)J
     397: lstore        11
     399: goto          72
     402: aload_0
     403: aload         9
     405: aload         10
     407: aload         8
     409: aload_2
     410: invokespecial #35                 // Method doDeflate:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lio/undertow/connector/PooledByteBuffer;[Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     413: astore_2
     414: aload_2
     415: ifnull        471
     418: bipush        -8
     420: istore        13
     422: aload_2
     423: astore        14
     425: aload         14
     427: arraylength
     428: istore        15
     430: iconst_0
     431: istore        16
     433: iload         16
     435: iload         15
     437: if_icmpge     468
     440: aload         14
     442: iload         16
     444: aaload
     445: astore        17
     447: iload         13
     449: aload         17
     451: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     456: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
     459: iadd
     460: istore        13
     462: iinc          16, 1
     465: goto          433
     468: goto          480
     471: aload_3
     472: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
     475: bipush        8
     477: isub
     478: istore        13
     480: aload_3
     481: aload_0
     482: invokevirtual #43                 // Method isWritesShutdown:()Z
     485: ifeq          502
     488: aload_0
     489: invokevirtual #44                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     492: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     495: ifne          502
     498: iconst_1
     499: goto          503
     502: iconst_0
     503: bipush        24
     505: ishl
     506: iload         5
     508: ifeq          515
     511: iconst_2
     512: goto          516
     515: iconst_0
     516: bipush        24
     518: ishl
     519: ior
     520: iload         13
     522: ior
     523: iconst_4
     524: invokestatic  #46                 // Method io/undertow/protocols/spdy/SpdyProtocolUtils.putInt:(Ljava/nio/ByteBuffer;II)V
     527: aload         7
     529: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     534: aload         6
     536: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     541: goto          563
     544: astore        20
     546: aload         7
     548: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     553: aload         6
     555: invokeinterface #47,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     560: aload         20
     562: athrow
     563: aload_2
     564: areturn
    Exception table:
       from    to  target type
          34   527   544   any
         544   546   544   any

  protected abstract io.undertow.server.protocol.framed.SendFrameHeader createFrameHeaderImpl();

  protected synchronized int grabFlowControlBytes(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      10: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      13: invokevirtual #4                  // Method io/undertow/protocols/spdy/SpdyChannel.getInitialWindowSize:()I
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #6                  // Field initialWindowSize:I
      22: isub
      23: istore_3
      24: aload_0
      25: iload_2
      26: putfield      #6                  // Field initialWindowSize:I
      29: aload_0
      30: dup
      31: getfield      #5                  // Field flowControlWindow:I
      34: iload_3
      35: iadd
      36: putfield      #5                  // Field flowControlWindow:I
      39: iload_1
      40: aload_0
      41: getfield      #5                  // Field flowControlWindow:I
      44: invokestatic  #48                 // Method java/lang/Math.min:(II)I
      47: istore        4
      49: aload_0
      50: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      53: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      56: iload         4
      58: invokevirtual #49                 // Method io/undertow/protocols/spdy/SpdyChannel.grabFlowControlBytes:(I)I
      61: istore        5
      63: aload_0
      64: dup
      65: getfield      #5                  // Field flowControlWindow:I
      68: iload         5
      70: isub
      71: putfield      #5                  // Field flowControlWindow:I
      74: iload         5
      76: ireturn

  synchronized void updateFlowControlWindow(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field flowControlWindow:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: aload_0
      14: dup
      15: getfield      #5                  // Field flowControlWindow:I
      18: iload_1
      19: iadd
      20: putfield      #5                  // Field flowControlWindow:I
      23: iload_2
      24: ifeq          49
      27: aload_0
      28: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      31: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      34: invokevirtual #50                 // Method io/undertow/protocols/spdy/SpdyChannel.notifyFlowControlAllowed:()V
      37: aload_0
      38: invokevirtual #51                 // Method isWriteResumed:()Z
      41: ifeq          49
      44: aload_0
      45: iconst_1
      46: invokevirtual #52                 // Method resumeWritesInternal:(Z)V
      49: return

  private io.undertow.connector.PooledByteBuffer[] doDeflate(java.nio.ByteBuffer, java.nio.ByteBuffer, io.undertow.connector.PooledByteBuffer, io.undertow.connector.PooledByteBuffer[]);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getDeflater:()Ljava/util/zip/Deflater;
       4: astore        5
       6: aload         5
       8: aload_1
       9: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
      12: aload_1
      13: invokevirtual #55                 // Method java/nio/ByteBuffer.arrayOffset:()I
      16: aload_1
      17: invokevirtual #42                 // Method java/nio/ByteBuffer.position:()I
      20: invokevirtual #56                 // Method java/util/zip/Deflater.setInput:([BII)V
      23: aload         5
      25: aload_2
      26: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
      29: aload_2
      30: invokevirtual #55                 // Method java/nio/ByteBuffer.arrayOffset:()I
      33: aload_2
      34: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      37: iconst_2
      38: invokevirtual #58                 // Method java/util/zip/Deflater.deflate:([BIII)I
      41: istore        6
      43: iload         6
      45: aload_3
      46: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      51: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      54: if_icmpgt     80
      57: aload_3
      58: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      63: aload_2
      64: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
      67: aload_2
      68: invokevirtual #55                 // Method java/nio/ByteBuffer.arrayOffset:()I
      71: iload         6
      73: invokevirtual #59                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      76: pop
      77: goto          174
      80: aload_2
      81: invokevirtual #55                 // Method java/nio/ByteBuffer.arrayOffset:()I
      84: istore        7
      86: iload         6
      88: istore        8
      90: aload_3
      91: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      96: astore        9
      98: aload         9
     100: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
     103: iload         8
     105: invokestatic  #48                 // Method java/lang/Math.min:(II)I
     108: istore        10
     110: aload         9
     112: aload_2
     113: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
     116: iload         7
     118: iload         10
     120: invokevirtual #59                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     123: pop
     124: iload         7
     126: iload         10
     128: iadd
     129: istore        7
     131: iload         8
     133: iload         10
     135: isub
     136: istore        8
     138: iload         8
     140: ifle          169
     143: aload_0
     144: aload         4
     146: aload_3
     147: invokevirtual #60                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     150: astore        4
     152: aload         4
     154: aload         4
     156: arraylength
     157: iconst_1
     158: isub
     159: aaload
     160: astore_3
     161: aload_3
     162: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     167: astore        9
     169: iload         8
     171: ifgt          98
     174: aload         5
     176: invokevirtual #61                 // Method java/util/zip/Deflater.needsInput:()Z
     179: ifeq          23
     182: aload         4
     184: areturn

  protected abstract java.util.zip.Deflater getDeflater();

  protected io.undertow.connector.PooledByteBuffer[] allocateAll(io.undertow.connector.PooledByteBuffer[], io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_1
       1: ifnonnull     34
       4: iconst_2
       5: anewarray     #62                 // class io/undertow/connector/PooledByteBuffer
       8: astore_3
       9: aload_3
      10: iconst_0
      11: aload_2
      12: aastore
      13: aload_3
      14: iconst_1
      15: aload_0
      16: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      19: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      22: invokevirtual #63                 // Method io/undertow/protocols/spdy/SpdyChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      25: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      30: aastore
      31: goto          72
      34: aload_1
      35: arraylength
      36: iconst_1
      37: iadd
      38: anewarray     #62                 // class io/undertow/connector/PooledByteBuffer
      41: astore_3
      42: aload_1
      43: iconst_0
      44: aload_3
      45: iconst_0
      46: aload_1
      47: arraylength
      48: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: aload_3
      52: aload_3
      53: arraylength
      54: iconst_1
      55: isub
      56: aload_0
      57: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      60: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      63: invokevirtual #63                 // Method io/undertow/protocols/spdy/SpdyChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      66: invokeinterface #18,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      71: aastore
      72: aload_3
      73: areturn

  void rstStream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field reset:Z
      13: aload_0
      14: invokestatic  #65                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      17: aload_0
      18: invokevirtual #9                  // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: checkcast     #10                 // class io/undertow/protocols/spdy/SpdyChannel
      24: aload_0
      25: invokevirtual #11                 // Method getStreamId:()I
      28: invokevirtual #12                 // Method io/undertow/protocols/spdy/SpdyChannel.removeStreamSink:(I)V
      31: return
}
