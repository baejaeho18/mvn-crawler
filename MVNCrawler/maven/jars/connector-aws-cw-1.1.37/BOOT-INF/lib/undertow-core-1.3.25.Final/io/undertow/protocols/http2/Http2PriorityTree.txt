Compiled from "Http2PriorityTree.java"
public class io.undertow.protocols.http2.Http2PriorityTree {
  private final io.undertow.protocols.http2.Http2PriorityTree$Http2PriorityNode rootNode;

  private final java.util.Map<java.lang.Integer, io.undertow.protocols.http2.Http2PriorityTree$Http2PriorityNode> nodesByID;

  private int[] evictionQueue;

  private int evictionQueuePosition;

  public io.undertow.protocols.http2.Http2PriorityTree();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      12: putfield      #2                  // Field nodesByID:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      19: dup
      20: iconst_0
      21: iconst_0
      22: invokespecial #7                  // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode."<init>":(II)V
      25: putfield      #8                  // Field rootNode:Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
      28: aload_0
      29: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      32: iconst_0
      33: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aload_0
      37: getfield      #8                  // Field rootNode:Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
      40: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: bipush        10
      49: newarray       int
      51: putfield      #11                 // Field evictionQueue:[I
      54: return

  public void registerStream(int, int, int, boolean);
    Code:
       0: new           #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
       3: dup
       4: iload_1
       5: iload_3
       6: invokespecial #7                  // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode."<init>":(II)V
       9: astore        5
      11: iload         4
      13: ifeq          49
      16: aload_0
      17: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      20: iload_2
      21: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      32: astore        6
      34: aload         6
      36: ifnull        46
      39: aload         6
      41: aload         5
      43: invokevirtual #13                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.exclusive:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)V
      46: goto          79
      49: aload_0
      50: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      53: iload_2
      54: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      65: astore        6
      67: aload         6
      69: ifnull        79
      72: aload         6
      74: aload         5
      76: invokevirtual #14                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.addDependent:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)V
      79: aload_0
      80: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      83: iload_1
      84: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: aload         5
      89: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: return

  public void streamRemoved(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nodesByID:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      16: astore_2
      17: aload_2
      18: ifnonnull     22
      21: return
      22: aload_2
      23: iconst_1
      24: putfield      #15                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.dead:Z
      27: aload_2
      28: invokevirtual #16                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.hasDependents:()Z
      31: ifne          106
      34: aload_0
      35: getfield      #11                 // Field evictionQueue:[I
      38: aload_0
      39: getfield      #17                 // Field evictionQueuePosition:I
      42: iaload
      43: istore_3
      44: aload_0
      45: getfield      #11                 // Field evictionQueue:[I
      48: aload_0
      49: dup
      50: getfield      #17                 // Field evictionQueuePosition:I
      53: dup_x1
      54: iconst_1
      55: iadd
      56: putfield      #17                 // Field evictionQueuePosition:I
      59: iload_1
      60: iastore
      61: aload_0
      62: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      65: iload_3
      66: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      77: astore        4
      79: aload         4
      81: ifnull        106
      84: aload         4
      86: invokevirtual #16                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.hasDependents:()Z
      89: ifne          106
      92: aload_0
      93: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      96: iload_3
      97: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: return

  public java.util.Comparator<java.lang.Integer> comparator();
    Code:
       0: new           #19                 // class io/undertow/protocols/http2/Http2PriorityTree$1
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method io/undertow/protocols/http2/Http2PriorityTree$1."<init>":(Lio/undertow/protocols/http2/Http2PriorityTree;)V
       8: areturn

  private double createWeightingProportion(io.undertow.protocols.http2.Http2PriorityTree$Http2PriorityNode);
    Code:
       0: dconst_1
       1: dstore_2
       2: aload_1
       3: astore        4
       5: aload         4
       7: ifnull        45
      10: aload         4
      12: invokestatic  #21                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.access$200:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
      15: astore        5
      17: aload         5
      19: ifnull        38
      22: dload_2
      23: aload         4
      25: getfield      #22                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.weighting:I
      28: i2d
      29: aload         5
      31: getfield      #23                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.totalWeights:I
      34: i2d
      35: ddiv
      36: dmul
      37: dstore_2
      38: aload         5
      40: astore        4
      42: goto          5
      45: dload_2
      46: dreturn

  public void priorityFrame(int, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nodesByID:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      16: astore        5
      18: aload         5
      20: ifnonnull     24
      23: return
      24: iload_3
      25: aload         5
      27: getfield      #22                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.weighting:I
      30: isub
      31: istore        6
      33: aload         5
      35: invokestatic  #21                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.access$200:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
      38: dup
      39: getfield      #23                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.totalWeights:I
      42: iload         6
      44: iadd
      45: putfield      #23                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.totalWeights:I
      48: aload         5
      50: iload_3
      51: putfield      #22                 // Field io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.weighting:I
      54: iload         4
      56: ifeq          102
      59: aload_0
      60: getfield      #2                  // Field nodesByID:Ljava/util/Map;
      63: iload_2
      64: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
      75: astore        7
      77: aload         7
      79: ifnull        99
      82: aload         5
      84: invokestatic  #21                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.access$200:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
      87: aload         5
      89: invokevirtual #24                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.removeDependent:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)V
      92: aload         7
      94: aload         5
      96: invokevirtual #13                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.exclusive:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)V
      99: goto          144
     102: aload         5
     104: invokestatic  #21                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.access$200:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;
     107: invokestatic  #25                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.access$300:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)I
     110: iload_2
     111: if_icmpeq     144
     114: aload_0
     115: getfield      #2                  // Field nodesByID:Ljava/util/Map;
     118: iload_2
     119: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     122: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     127: checkcast     #6                  // class io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode
     130: astore        7
     132: aload         7
     134: ifnull        144
     137: aload         7
     139: aload         5
     141: invokevirtual #14                 // Method io/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode.addDependent:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)V
     144: return

  static java.util.Map access$000(io.undertow.protocols.http2.Http2PriorityTree);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nodesByID:Ljava/util/Map;
       4: areturn

  static double access$100(io.undertow.protocols.http2.Http2PriorityTree, io.undertow.protocols.http2.Http2PriorityTree$Http2PriorityNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method createWeightingProportion:(Lio/undertow/protocols/http2/Http2PriorityTree$Http2PriorityNode;)D
       5: dreturn
}
