Compiled from "NodePingUtil.java"
class io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener$1 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  final io.undertow.client.ClientExchange val$result;

  final io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener this$0;

  io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener$1(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener, io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
       4: invokestatic  #4                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$500:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
       7: aload_0
       8: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      11: invokeinterface #5,  1            // InterfaceMethod io/undertow/client/ClientExchange.getResponse:()Lio/undertow/client/ClientResponse;
      16: invokeinterface #6,  2            // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker.checkResponse:(Lio/undertow/client/ClientResponse;)Z
      21: ifeq          34
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      28: invokevirtual #7                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.taskCompleted:()V
      31: goto          41
      34: aload_0
      35: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      38: invokevirtual #8                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.taskFailed:()V
      41: aload_0
      42: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      45: invokestatic  #9                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$600:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Z
      48: ifeq          117
      51: aload_0
      52: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      55: invokestatic  #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$300:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Lio/undertow/client/ClientExchange;
      58: ifnull        117
      61: aload_0
      62: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      65: invokestatic  #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$300:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Lio/undertow/client/ClientExchange;
      68: invokeinterface #11,  1           // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
      73: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      76: goto          117
      79: astore_2
      80: aload_0
      81: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      84: invokestatic  #9                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$600:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Z
      87: ifeq          115
      90: aload_0
      91: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
      94: invokestatic  #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$300:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Lio/undertow/client/ClientExchange;
      97: ifnull        115
     100: aload_0
     101: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;
     104: invokestatic  #10                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener.access$300:(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)Lio/undertow/client/ClientExchange;
     107: invokeinterface #11,  1           // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     112: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     115: aload_2
     116: athrow
     117: return
    Exception table:
       from    to  target type
           0    41    79   any

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #14                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
