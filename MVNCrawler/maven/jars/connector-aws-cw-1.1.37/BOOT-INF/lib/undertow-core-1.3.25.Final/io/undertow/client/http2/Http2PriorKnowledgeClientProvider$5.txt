Compiled from "Http2PriorKnowledgeClientProvider.java"
class io.undertow.client.http2.Http2PriorKnowledgeClientProvider$5 implements org.xnio.ChannelListener<org.xnio.conduits.ConduitStreamSinkChannel> {
  final java.nio.ByteBuffer val$pri;

  final io.undertow.client.ClientCallback val$listener;

  final org.xnio.StreamConnection val$connection;

  final io.undertow.connector.ByteBufferPool val$bufferPool;

  final org.xnio.OptionMap val$options;

  final java.lang.String val$defaultHost;

  final io.undertow.client.http2.Http2PriorKnowledgeClientProvider$ClientStatisticsImpl val$clientStatistics;

  final io.undertow.client.http2.Http2PriorKnowledgeClientProvider this$0;

  io.undertow.client.http2.Http2PriorKnowledgeClientProvider$5(io.undertow.client.http2.Http2PriorKnowledgeClientProvider, java.nio.ByteBuffer, io.undertow.client.ClientCallback, org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String, io.undertow.client.http2.Http2PriorKnowledgeClientProvider$ClientStatisticsImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/client/http2/Http2PriorKnowledgeClientProvider;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$pri:Ljava/nio/ByteBuffer;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$listener:Lio/undertow/client/ClientCallback;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$connection:Lorg/xnio/StreamConnection;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$bufferPool:Lio/undertow/connector/ByteBufferPool;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$options:Lorg/xnio/OptionMap;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$defaultHost:Ljava/lang/String;
      39: aload_0
      40: aload         8
      42: putfield      #8                  // Field val$clientStatistics:Lio/undertow/client/http2/Http2PriorKnowledgeClientProvider$ClientStatisticsImpl;
      45: aload_0
      46: invokespecial #9                  // Method java/lang/Object."<init>":()V
      49: return

  public void handleEvent(org.xnio.conduits.ConduitStreamSinkChannel);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field val$pri:Ljava/nio/ByteBuffer;
       5: invokevirtual #10                 // Method org/xnio/conduits/ConduitStreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
       8: pop
       9: aload_0
      10: getfield      #2                  // Field val$pri:Ljava/nio/ByteBuffer;
      13: invokevirtual #11                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #3                  // Field val$listener:Lio/undertow/client/ClientCallback;
      24: new           #12                 // class io/undertow/client/http2/Http2ClientConnection
      27: dup
      28: new           #13                 // class io/undertow/protocols/http2/Http2Channel
      31: dup
      32: aload_0
      33: getfield      #4                  // Field val$connection:Lorg/xnio/StreamConnection;
      36: aconst_null
      37: aload_0
      38: getfield      #5                  // Field val$bufferPool:Lio/undertow/connector/ByteBufferPool;
      41: aconst_null
      42: iconst_1
      43: iconst_0
      44: aload_0
      45: getfield      #6                  // Field val$options:Lorg/xnio/OptionMap;
      48: invokespecial #14                 // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
      51: iconst_0
      52: aload_0
      53: getfield      #7                  // Field val$defaultHost:Ljava/lang/String;
      56: aload_0
      57: getfield      #8                  // Field val$clientStatistics:Lio/undertow/client/http2/Http2PriorKnowledgeClientProvider$ClientStatisticsImpl;
      60: invokespecial #15                 // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;ZLjava/lang/String;Lio/undertow/client/ClientStatistics;)V
      63: invokeinterface #16,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
      68: goto          82
      71: astore_2
      72: aload_0
      73: getfield      #3                  // Field val$listener:Lio/undertow/client/ClientCallback;
      76: aload_2
      77: invokeinterface #18,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      82: return
    Exception table:
       from    to  target type
           0    19    71   Class java/io/IOException
          20    68    71   Class java/io/IOException

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/xnio/conduits/ConduitStreamSinkChannel
       5: invokevirtual #20                 // Method handleEvent:(Lorg/xnio/conduits/ConduitStreamSinkChannel;)V
       8: return
}
