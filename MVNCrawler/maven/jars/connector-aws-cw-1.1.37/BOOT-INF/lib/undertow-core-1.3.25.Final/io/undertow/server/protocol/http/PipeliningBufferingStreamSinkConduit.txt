Compiled from "PipeliningBufferingStreamSinkConduit.java"
public class io.undertow.server.protocol.http.PipeliningBufferingStreamSinkConduit extends org.xnio.conduits.AbstractStreamSinkConduit<org.xnio.conduits.StreamSinkConduit> {
  private static final int SHUTDOWN;

  private static final int DELEGATE_SHUTDOWN;

  private static final int FLUSHING;

  private int state;

  private final io.undertow.connector.ByteBufferPool pool;

  private io.undertow.connector.PooledByteBuffer buffer;

  public io.undertow.server.protocol.http.PipeliningBufferingStreamSinkConduit(org.xnio.conduits.StreamSinkConduit, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/conduits/AbstractStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field pool:Lio/undertow/connector/ByteBufferPool;
      10: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #6                  // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #7                  // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: lload_2
      21: lload         4
      23: new           #8                  // class org/xnio/conduits/ConduitWritableByteChannel
      26: dup
      27: aload_0
      28: invokespecial #9                  // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      31: invokevirtual #10                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      34: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: new           #8                  // class org/xnio/conduits/ConduitWritableByteChannel
       7: dup
       8: aload_0
       9: invokespecial #9                  // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      12: invokestatic  #11                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      15: lreturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #6                  // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #7                  // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field state:I
      23: bipush        8
      25: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
      28: ifeq          44
      31: aload_0
      32: invokespecial #12                 // Method flushBuffer:()Z
      35: istore        4
      37: iload         4
      39: ifne          44
      42: lconst_0
      43: lreturn
      44: aload_0
      45: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      48: astore        4
      50: aload         4
      52: ifnonnull     71
      55: aload_0
      56: aload_0
      57: getfield      #2                  // Field pool:Lio/undertow/connector/ByteBufferPool;
      60: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      65: dup
      66: astore        4
      68: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      71: aload         4
      73: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      78: astore        5
      80: aload_1
      81: iload_2
      82: iload_3
      83: invokestatic  #16                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
      86: lstore        6
      88: aload         5
      90: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      93: i2l
      94: lload         6
      96: lcmp
      97: ifle          116
     100: lload         6
     102: lstore        8
     104: aload         5
     106: aload_1
     107: iload_2
     108: iload_3
     109: invokestatic  #18                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     112: pop
     113: lload         8
     115: lreturn
     116: aload_0
     117: aload_1
     118: iload_2
     119: iload_3
     120: invokespecial #19                 // Method flushBufferWithUserData:([Ljava/nio/ByteBuffer;II)J
     123: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #6                  // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #7                  // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field state:I
      23: bipush        8
      25: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
      28: ifeq          42
      31: aload_0
      32: invokespecial #12                 // Method flushBuffer:()Z
      35: istore_2
      36: iload_2
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      46: astore_2
      47: aload_2
      48: ifnonnull     66
      51: aload_0
      52: aload_0
      53: getfield      #2                  // Field pool:Lio/undertow/connector/ByteBufferPool;
      56: invokeinterface #14,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      61: dup
      62: astore_2
      63: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      66: aload_2
      67: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      72: astore_3
      73: aload_3
      74: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      77: aload_1
      78: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      81: if_icmple     99
      84: aload_1
      85: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      88: istore        4
      90: aload_3
      91: aload_1
      92: invokevirtual #20                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      95: pop
      96: iload         4
      98: ireturn
      99: aload_0
     100: iconst_1
     101: anewarray     #21                 // class java/nio/ByteBuffer
     104: dup
     105: iconst_0
     106: aload_1
     107: aastore
     108: iconst_0
     109: iconst_1
     110: invokespecial #19                 // Method flushBufferWithUserData:([Ljava/nio/ByteBuffer;II)J
     113: l2i
     114: ireturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
       5: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #23                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  private long flushBufferWithUserData(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: astore        4
      11: aload         4
      13: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      16: ifne          72
      19: aload_0
      20: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      23: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      26: aload_1
      27: iload_2
      28: iload_3
      29: invokeinterface #27,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
      34: lstore        5
      36: aload_0
      37: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      40: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      45: aload_0
      46: aconst_null
      47: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      50: lload         5
      52: lreturn
      53: astore        7
      55: aload_0
      56: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      59: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      64: aload_0
      65: aconst_null
      66: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      69: aload         7
      71: athrow
      72: aload_0
      73: getfield      #3                  // Field state:I
      76: bipush        8
      78: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
      81: ifne          101
      84: aload_0
      85: dup
      86: getfield      #3                  // Field state:I
      89: bipush        8
      91: ior
      92: putfield      #3                  // Field state:I
      95: aload         4
      97: invokevirtual #29                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     100: pop
     101: aload         4
     103: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     106: istore        5
     108: iload         5
     110: i2l
     111: lstore        6
     113: iload_3
     114: iconst_1
     115: iadd
     116: anewarray     #21                 // class java/nio/ByteBuffer
     119: astore        8
     121: aload         8
     123: iconst_0
     124: aload         4
     126: aastore
     127: iload_2
     128: istore        9
     130: iload         9
     132: iload_2
     133: iload_3
     134: iadd
     135: if_icmpge     170
     138: aload         8
     140: iload         9
     142: iconst_1
     143: iadd
     144: iload_2
     145: isub
     146: aload_1
     147: iload         9
     149: aaload
     150: aastore
     151: lload         6
     153: aload_1
     154: iload         9
     156: aaload
     157: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     160: i2l
     161: ladd
     162: lstore        6
     164: iinc          9, 1
     167: goto          130
     170: lconst_0
     171: lstore        9
     173: lconst_0
     174: lstore        11
     176: aload_0
     177: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
     180: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
     183: aload         8
     185: iconst_0
     186: aload         8
     188: arraylength
     189: invokeinterface #27,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     194: lstore        9
     196: lload         11
     198: lload         9
     200: ladd
     201: lstore        11
     203: lload         9
     205: lconst_0
     206: lcmp
     207: ifne          253
     210: lload         11
     212: iload         5
     214: i2l
     215: lcmp
     216: ifle          251
     219: aload_0
     220: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     223: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     228: aload_0
     229: aconst_null
     230: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     233: aload_0
     234: dup
     235: getfield      #3                  // Field state:I
     238: bipush        -9
     240: iand
     241: putfield      #3                  // Field state:I
     244: lload         11
     246: iload         5
     248: i2l
     249: lsub
     250: lreturn
     251: lconst_0
     252: lreturn
     253: lload         11
     255: lload         6
     257: lcmp
     258: iflt          176
     261: aload_0
     262: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     265: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     270: aload_0
     271: aconst_null
     272: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     275: aload_0
     276: dup
     277: getfield      #3                  // Field state:I
     280: bipush        -9
     282: iand
     283: putfield      #3                  // Field state:I
     286: lload         11
     288: iload         5
     290: i2l
     291: lsub
     292: lreturn
    Exception table:
       from    to  target type
          19    36    53   any
          53    55    53   any

  public boolean flushPipelinedData() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        34
       7: aload_0
       8: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #24                 // Method java/nio/ByteBuffer.position:()I
      19: ifne          47
      22: aload_0
      23: getfield      #3                  // Field state:I
      26: bipush        8
      28: invokestatic  #30                 // Method org/xnio/Bits.allAreClear:(II)Z
      31: ifeq          47
      34: aload_0
      35: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      38: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      41: invokeinterface #31,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      46: ireturn
      47: aload_0
      48: invokespecial #12                 // Method flushBuffer:()Z
      51: ireturn

  public void setupPipelineBuffer(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: checkcast     #33                 // class io/undertow/server/protocol/http/HttpServerConnection
       7: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      10: invokevirtual #35                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      13: aload_0
      14: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      17: return

  private boolean flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     20
       7: aload_0
       8: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      14: invokeinterface #31,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      19: ireturn
      20: aload_0
      21: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      24: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      29: astore_1
      30: aload_0
      31: getfield      #3                  // Field state:I
      34: bipush        8
      36: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
      39: ifne          58
      42: aload_0
      43: dup
      44: getfield      #3                  // Field state:I
      47: bipush        8
      49: ior
      50: putfield      #3                  // Field state:I
      53: aload_1
      54: invokevirtual #29                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      57: pop
      58: aload_1
      59: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      62: ifeq          83
      65: aload_0
      66: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      69: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      72: aload_1
      73: invokeinterface #38,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      78: ifne          58
      81: iconst_0
      82: ireturn
      83: aload_0
      84: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      87: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      90: invokeinterface #31,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      95: ifne          100
      98: iconst_0
      99: ireturn
     100: aload_0
     101: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     104: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     109: aload_0
     110: aconst_null
     111: putfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     114: aload_0
     115: dup
     116: getfield      #3                  // Field state:I
     119: bipush        -9
     121: iand
     122: putfield      #3                  // Field state:I
     125: iconst_1
     126: ireturn

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        23
       7: aload_0
       8: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      27: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      30: lload_1
      31: aload_3
      32: invokeinterface #39,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      37: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        35
       7: aload_0
       8: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #15,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #37                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      27: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      30: invokeinterface #40,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      35: return

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          77
      11: aload_0
      12: invokespecial #12                 // Method flushBuffer:()Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #3                  // Field state:I
      24: iconst_1
      25: invokestatic  #5                  // Method org/xnio/Bits.anyAreSet:(II)Z
      28: ifeq          64
      31: aload_0
      32: getfield      #3                  // Field state:I
      35: iconst_2
      36: invokestatic  #41                 // Method org/xnio/Bits.anyAreClear:(II)Z
      39: ifeq          64
      42: aload_0
      43: dup
      44: getfield      #3                  // Field state:I
      47: iconst_2
      48: ior
      49: putfield      #3                  // Field state:I
      52: aload_0
      53: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      56: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      59: invokeinterface #42,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
      64: aload_0
      65: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      68: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      71: invokeinterface #31,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      76: ireturn
      77: iconst_1
      78: ireturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field state:I
       5: iconst_1
       6: ior
       7: putfield      #3                  // Field state:I
      10: aload_0
      11: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      14: ifnonnull     39
      17: aload_0
      18: dup
      19: getfield      #3                  // Field state:I
      22: iconst_2
      23: ior
      24: putfield      #3                  // Field state:I
      27: aload_0
      28: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
      31: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
      34: invokeinterface #42,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
      39: return

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #26                 // class org/xnio/conduits/StreamSinkConduit
       7: invokeinterface #43,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.truncateWrites:()V
      12: aload_0
      13: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      16: ifnull        50
      19: aload_0
      20: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      23: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      28: goto          50
      31: astore_1
      32: aload_0
      33: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      36: ifnull        48
      39: aload_0
      40: getfield      #13                 // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      43: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    12    31   any

  public void exchangeComplete(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: checkcast     #33                 // class io/undertow/server/protocol/http/HttpServerConnection
       7: astore_2
       8: aload_2
       9: invokevirtual #44                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
      12: ifnull        22
      15: aload_1
      16: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.isUpgrade:()Z
      19: ifeq          31
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokevirtual #46                 // Method performFlush:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/protocol/http/HttpServerConnection;)V
      28: goto          39
      31: aload_2
      32: invokevirtual #47                 // Method io/undertow/server/protocol/http/HttpServerConnection.getReadListener:()Lio/undertow/server/protocol/http/HttpReadListener;
      35: aload_1
      36: invokevirtual #48                 // Method io/undertow/server/protocol/http/HttpReadListener.exchangeComplete:(Lio/undertow/server/HttpServerExchange;)V
      39: return

  void performFlush(io.undertow.server.HttpServerExchange, io.undertow.server.protocol.http.HttpServerConnection);
    Code:
       0: aload_2
       1: invokevirtual #49                 // Method io/undertow/server/protocol/http/HttpServerConnection.resetChannel:()Lio/undertow/server/AbstractServerConnection$ConduitState;
       4: astore_3
       5: aload_0
       6: invokevirtual #50                 // Method flushPipelinedData:()Z
       9: ifne          50
      12: aload_2
      13: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      16: astore        4
      18: aload         4
      20: invokevirtual #35                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      23: new           #51                 // class io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit$1
      26: dup
      27: aload_0
      28: aload         4
      30: aload_2
      31: aload_3
      32: aload_1
      33: invokespecial #52                 // Method io/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit$1."<init>":(Lio/undertow/server/protocol/http/PipeliningBufferingStreamSinkConduit;Lorg/xnio/StreamConnection;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/server/AbstractServerConnection$ConduitState;Lio/undertow/server/HttpServerExchange;)V
      36: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
      39: aload_2
      40: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      43: invokevirtual #35                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      46: invokevirtual #54                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      49: return
      50: aload_2
      51: aload_3
      52: invokevirtual #55                 // Method io/undertow/server/protocol/http/HttpServerConnection.restoreChannel:(Lio/undertow/server/AbstractServerConnection$ConduitState;)V
      55: aload_2
      56: invokevirtual #47                 // Method io/undertow/server/protocol/http/HttpServerConnection.getReadListener:()Lio/undertow/server/protocol/http/HttpReadListener;
      59: aload_1
      60: invokevirtual #48                 // Method io/undertow/server/protocol/http/HttpReadListener.exchangeComplete:(Lio/undertow/server/HttpServerExchange;)V
      63: goto          83
      66: astore_3
      67: getstatic     #57                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      70: aload_3
      71: invokeinterface #58,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      76: aload_2
      77: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      80: invokestatic  #59                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      83: return
    Exception table:
       from    to  target type
           0    49    66   Class java/io/IOException
          50    63    66   Class java/io/IOException
}
