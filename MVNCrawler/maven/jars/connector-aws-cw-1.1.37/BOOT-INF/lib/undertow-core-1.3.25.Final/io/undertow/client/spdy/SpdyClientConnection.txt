Compiled from "SpdyClientConnection.java"
public class io.undertow.client.spdy.SpdyClientConnection implements io.undertow.client.ClientConnection {
  static final io.undertow.util.HttpString METHOD;

  static final io.undertow.util.HttpString PATH;

  static final io.undertow.util.HttpString SCHEME;

  static final io.undertow.util.HttpString VERSION;

  static final io.undertow.util.HttpString HOST;

  static final io.undertow.util.HttpString STATUS;

  private final io.undertow.protocols.spdy.SpdyChannel spdyChannel;

  private final org.xnio.ChannelListener$SimpleSetter<io.undertow.client.ClientConnection> closeSetter;

  private final java.util.Map<java.lang.Integer, io.undertow.client.spdy.SpdyClientExchange> currentExchanges;

  private final io.undertow.client.ClientStatistics clientStatistics;

  public io.undertow.client.spdy.SpdyClientConnection(io.undertow.protocols.spdy.SpdyChannel, io.undertow.client.ClientStatistics);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #6                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #3                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #1                  // Field currentExchanges:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
      31: aload_0
      32: aload_2
      33: putfield      #10                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
      36: aload_1
      37: invokevirtual #11                 // Method io/undertow/protocols/spdy/SpdyChannel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
      40: new           #12                 // class io/undertow/client/spdy/SpdyClientConnection$SpdyReceiveListener
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #13                 // Method io/undertow/client/spdy/SpdyClientConnection$SpdyReceiveListener."<init>":(Lio/undertow/client/spdy/SpdyClientConnection;Lio/undertow/client/spdy/SpdyClientConnection$1;)V
      49: invokeinterface #14,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      54: aload_1
      55: invokevirtual #15                 // Method io/undertow/protocols/spdy/SpdyChannel.resumeReceives:()V
      58: aload_1
      59: new           #16                 // class io/undertow/client/spdy/SpdyClientConnection$1
      62: dup
      63: aload_0
      64: invokespecial #17                 // Method io/undertow/client/spdy/SpdyClientConnection$1."<init>":(Lio/undertow/client/spdy/SpdyClientConnection;)V
      67: invokevirtual #18                 // Method io/undertow/protocols/spdy/SpdyChannel.addCloseTask:(Lorg/xnio/ChannelListener;)V
      70: return

  public synchronized void sendRequest(io.undertow.client.ClientRequest, io.undertow.client.ClientCallback<io.undertow.client.ClientExchange>);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #20                 // Field PATH:Lio/undertow/util/HttpString;
       7: aload_1
       8: invokevirtual #21                 // Method io/undertow/client/ClientRequest.getPath:()Ljava/lang/String;
      11: invokevirtual #22                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      14: pop
      15: aload_1
      16: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      19: getstatic     #23                 // Field SCHEME:Lio/undertow/util/HttpString;
      22: ldc           #24                 // String https
      24: invokevirtual #22                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      27: pop
      28: aload_1
      29: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      32: getstatic     #25                 // Field VERSION:Lio/undertow/util/HttpString;
      35: aload_1
      36: invokevirtual #26                 // Method io/undertow/client/ClientRequest.getProtocol:()Lio/undertow/util/HttpString;
      39: invokevirtual #27                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      42: invokevirtual #22                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      45: pop
      46: aload_1
      47: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      50: getstatic     #28                 // Field METHOD:Lio/undertow/util/HttpString;
      53: aload_1
      54: invokevirtual #29                 // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
      57: invokevirtual #27                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      60: invokevirtual #22                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      63: pop
      64: aload_1
      65: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      68: getstatic     #30                 // Field HOST:Lio/undertow/util/HttpString;
      71: aload_1
      72: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #31                 // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      78: invokevirtual #32                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      81: invokevirtual #22                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      84: pop
      85: aload_1
      86: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      89: getstatic     #31                 // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      92: invokevirtual #33                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      95: pop
      96: aload_0
      97: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
     100: aload_1
     101: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     104: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel.createStream:(Lio/undertow/util/HeaderMap;)Lio/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel;
     107: astore_3
     108: goto          122
     111: astore        4
     113: aload_2
     114: aload         4
     116: invokeinterface #36,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     121: return
     122: new           #37                 // class io/undertow/client/spdy/SpdyClientExchange
     125: dup
     126: aload_0
     127: aload_3
     128: aload_1
     129: invokespecial #38                 // Method io/undertow/client/spdy/SpdyClientExchange."<init>":(Lio/undertow/client/ClientConnection;Lio/undertow/protocols/spdy/SpdyStreamSinkChannel;Lio/undertow/client/ClientRequest;)V
     132: astore        4
     134: aload_0
     135: getfield      #1                  // Field currentExchanges:Ljava/util/Map;
     138: aload_3
     139: invokevirtual #39                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.getStreamId:()I
     142: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     145: aload         4
     147: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: iconst_1
     154: istore        5
     156: aload_1
     157: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     160: getstatic     #42                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     163: invokevirtual #32                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     166: astore        6
     168: aload_1
     169: invokevirtual #19                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     172: getstatic     #43                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     175: invokevirtual #44                 // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     178: astore        7
     180: aload         6
     182: ifnull        225
     185: aload         6
     187: invokestatic  #45                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     190: lstore        8
     192: lload         8
     194: lconst_0
     195: lcmp
     196: ifeq          203
     199: iconst_1
     200: goto          204
     203: iconst_0
     204: istore        5
     206: goto          233
     209: astore        8
     211: aload_0
     212: new           #35                 // class java/io/IOException
     215: dup
     216: aload         8
     218: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     221: invokespecial #2                  // Method handleError:(Ljava/io/IOException;)V
     224: return
     225: aload         7
     227: ifnonnull     233
     230: iconst_0
     231: istore        5
     233: aload_2
     234: ifnull        245
     237: aload_2
     238: aload         4
     240: invokeinterface #48,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
     245: iload         5
     247: ifne          300
     250: aload_3
     251: invokevirtual #49                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.shutdownWrites:()V
     254: aload_3
     255: invokevirtual #50                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.flush:()Z
     258: ifne          286
     261: aload_3
     262: invokevirtual #51                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     265: aconst_null
     266: new           #52                 // class io/undertow/client/spdy/SpdyClientConnection$2
     269: dup
     270: aload_0
     271: invokespecial #53                 // Method io/undertow/client/spdy/SpdyClientConnection$2."<init>":(Lio/undertow/client/spdy/SpdyClientConnection;)V
     274: invokestatic  #54                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     277: invokeinterface #14,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     282: aload_3
     283: invokevirtual #55                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.resumeWrites:()V
     286: goto          346
     289: astore        8
     291: aload_0
     292: aload         8
     294: invokespecial #2                  // Method handleError:(Ljava/io/IOException;)V
     297: goto          346
     300: aload_3
     301: invokevirtual #56                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.isWriteResumed:()Z
     304: ifne          346
     307: aload_3
     308: invokevirtual #50                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.flush:()Z
     311: ifne          335
     314: aload_3
     315: invokevirtual #51                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     318: new           #57                 // class io/undertow/client/spdy/SpdyClientConnection$3
     321: dup
     322: aload_0
     323: invokespecial #58                 // Method io/undertow/client/spdy/SpdyClientConnection$3."<init>":(Lio/undertow/client/spdy/SpdyClientConnection;)V
     326: invokeinterface #14,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     331: aload_3
     332: invokevirtual #55                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel.resumeWrites:()V
     335: goto          346
     338: astore        8
     340: aload_0
     341: aload         8
     343: invokespecial #2                  // Method handleError:(Ljava/io/IOException;)V
     346: return
    Exception table:
       from    to  target type
          96   108   111   Class java/io/IOException
         185   206   209   Class java/lang/NumberFormatException
         250   286   289   Class java/io/IOException
         307   335   338   Class java/io/IOException

  private void handleError(java.io.IOException);
    Code:
       0: getstatic     #59                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_1
       4: invokeinterface #60,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
       9: aload_0
      10: invokestatic  #61                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      13: aload_0
      14: getfield      #1                  // Field currentExchanges:Ljava/util/Map;
      17: invokeinterface #62,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          85
      37: aload_2
      38: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #66                 // class java/util/Map$Entry
      46: astore_3
      47: aload_3
      48: invokeinterface #67,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #37                 // class io/undertow/client/spdy/SpdyClientExchange
      56: aload_1
      57: invokevirtual #68                 // Method io/undertow/client/spdy/SpdyClientExchange.failed:(Ljava/io/IOException;)V
      60: goto          82
      63: astore        4
      65: getstatic     #59                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      68: new           #35                 // class java/io/IOException
      71: dup
      72: aload         4
      74: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      77: invokeinterface #60,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      82: goto          28
      85: return
    Exception table:
       from    to  target type
          47    60    63   Class java/lang/Exception

  public org.xnio.StreamConnection performUpgrade() throws java.io.IOException;
    Code:
       0: getstatic     #70                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       3: invokeinterface #71,  1           // InterfaceMethod io/undertow/UndertowMessages.upgradeNotSupported:()Ljava/lang/IllegalStateException;
       8: athrow

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #72                 // Method io/undertow/protocols/spdy/SpdyChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
       7: areturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #73                 // Method io/undertow/protocols/spdy/SpdyChannel.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: aload_1
       5: invokevirtual #74                 // Method io/undertow/protocols/spdy/SpdyChannel.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.ChannelListener$Setter<? extends io.undertow.client.ClientConnection> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #75                 // Method io/undertow/protocols/spdy/SpdyChannel.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: aload_1
       5: invokevirtual #76                 // Method io/undertow/protocols/spdy/SpdyChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #77                 // Method io/undertow/protocols/spdy/SpdyChannel.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #78                 // Method io/undertow/protocols/spdy/SpdyChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: invokevirtual #79                 // Method io/undertow/protocols/spdy/SpdyChannel.isOpen:()Z
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field spdyChannel:Lio/undertow/protocols/spdy/SpdyChannel;
       4: iconst_0
       5: invokevirtual #81                 // Method io/undertow/protocols/spdy/SpdyChannel.sendGoAway:(I)V
       8: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public boolean isUpgraded();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPushSupported();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isMultiplexingSupported();
    Code:
       0: iconst_1
       1: ireturn

  public io.undertow.client.ClientStatistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
       4: areturn

  public boolean isUpgradeSupported();
    Code:
       0: iconst_0
       1: ireturn

  static org.xnio.ChannelListener$SimpleSetter access$100(io.undertow.client.spdy.SpdyClientConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static void access$200(io.undertow.client.spdy.SpdyClientConnection, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method handleError:(Ljava/io/IOException;)V
       5: return

  static java.util.Map access$300(io.undertow.client.spdy.SpdyClientConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentExchanges:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: new           #82                 // class io/undertow/util/HttpString
       3: dup
       4: ldc           #83                 // String :method
       6: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
       9: putstatic     #28                 // Field METHOD:Lio/undertow/util/HttpString;
      12: new           #82                 // class io/undertow/util/HttpString
      15: dup
      16: ldc           #85                 // String :path
      18: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      21: putstatic     #20                 // Field PATH:Lio/undertow/util/HttpString;
      24: new           #82                 // class io/undertow/util/HttpString
      27: dup
      28: ldc           #86                 // String :scheme
      30: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      33: putstatic     #23                 // Field SCHEME:Lio/undertow/util/HttpString;
      36: new           #82                 // class io/undertow/util/HttpString
      39: dup
      40: ldc           #87                 // String :version
      42: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      45: putstatic     #25                 // Field VERSION:Lio/undertow/util/HttpString;
      48: new           #82                 // class io/undertow/util/HttpString
      51: dup
      52: ldc           #88                 // String :host
      54: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      57: putstatic     #30                 // Field HOST:Lio/undertow/util/HttpString;
      60: new           #82                 // class io/undertow/util/HttpString
      63: dup
      64: ldc           #89                 // String :status
      66: invokespecial #84                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      69: putstatic     #90                 // Field STATUS:Lio/undertow/util/HttpString;
      72: return
}
