Compiled from "ServerSentEventConnection.java"
public class io.undertow.server.handlers.sse.ServerSentEventConnection implements java.nio.channels.Channel,io.undertow.util.Attachable {
  private final io.undertow.server.HttpServerExchange exchange;

  private final org.xnio.channels.StreamSinkChannel sink;

  private final io.undertow.server.handlers.sse.ServerSentEventConnection$SseWriteListener writeListener;

  private io.undertow.connector.PooledByteBuffer pooled;

  private final java.util.Deque<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> queue;

  private final java.util.Queue<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> buffered;

  private final java.util.Queue<io.undertow.server.handlers.sse.ServerSentEventConnection$SSEData> flushingMessages;

  private final java.util.List<org.xnio.ChannelListener<io.undertow.server.handlers.sse.ServerSentEventConnection>> closeTasks;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private java.util.Map<java.lang.String, java.lang.Object> properties;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.sse.ServerSentEventConnection> openUpdater;

  private volatile int open;

  private volatile boolean shutdown;

  private volatile long keepAliveTime;

  private org.xnio.XnioExecutor$Key timerKey;

  public io.undertow.server.handlers.sse.ServerSentEventConnection(io.undertow.server.HttpServerExchange, org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #15                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #16                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Lio/undertow/server/handlers/sse/ServerSentEventConnection$1;)V
      14: putfield      #8                  // Field writeListener:Lio/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener;
      17: aload_0
      18: new           #17                 // class java/util/concurrent/ConcurrentLinkedDeque
      21: dup
      22: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      25: putfield      #4                  // Field queue:Ljava/util/Deque;
      28: aload_0
      29: new           #17                 // class java/util/concurrent/ConcurrentLinkedDeque
      32: dup
      33: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      36: putfield      #2                  // Field buffered:Ljava/util/Queue;
      39: aload_0
      40: new           #19                 // class java/util/ArrayDeque
      43: dup
      44: invokespecial #20                 // Method java/util/ArrayDeque."<init>":()V
      47: putfield      #3                  // Field flushingMessages:Ljava/util/Queue;
      50: aload_0
      51: new           #21                 // class java/util/concurrent/CopyOnWriteArrayList
      54: dup
      55: invokespecial #22                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      58: putfield      #12                 // Field closeTasks:Ljava/util/List;
      61: aload_0
      62: new           #23                 // class java/util/HashMap
      65: dup
      66: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      69: putfield      #25                 // Field properties:Ljava/util/Map;
      72: aload_0
      73: iconst_1
      74: putfield      #6                  // Field open:I
      77: aload_0
      78: iconst_0
      79: putfield      #7                  // Field shutdown:Z
      82: aload_0
      83: ldc2_w        #26                 // long -1l
      86: putfield      #28                 // Field keepAliveTime:J
      89: aload_0
      90: aload_1
      91: putfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      94: aload_0
      95: aload_2
      96: putfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      99: aload_0
     100: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     103: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     108: new           #30                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$1
     111: dup
     112: aload_0
     113: invokespecial #31                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$1."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
     116: invokeinterface #32,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     121: aload_0
     122: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     125: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     130: aload_0
     131: getfield      #8                  // Field writeListener:Lio/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener;
     134: invokeinterface #32,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     139: return

  public synchronized void addCloseTask(org.xnio.ChannelListener<io.undertow.server.handlers.sse.ServerSentEventConnection>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field closeTasks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.security.Principal getPrincipal();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getAccount:()Lio/undertow/security/idm/Account;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #36,  1           // InterfaceMethod io/undertow/security/idm/Account.getPrincipal:()Ljava/security/Principal;
      15: areturn
      16: aconst_null
      17: areturn

  public io.undertow.security.idm.Account getAccount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getSecurityContext:()Lio/undertow/security/api/SecurityContext;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokeinterface #38,  1           // InterfaceMethod io/undertow/security/api/SecurityContext.getAuthenticatedAccount:()Lio/undertow/security/idm/Account;
      18: areturn
      19: aconst_null
      20: areturn

  public io.undertow.util.HeaderMap getRequestHeaders();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       7: areturn

  public io.undertow.util.HeaderMap getResponseHeaders();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       7: areturn

  public java.lang.String getRequestURI();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
       7: areturn

  public java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> getQueryParameters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
       7: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
       7: areturn

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aconst_null
       5: invokevirtual #44                 // Method send:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
       8: return

  public void send(java.lang.String, io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aload_2
       5: invokevirtual #44                 // Method send:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;)V
       8: return

  public synchronized void send(java.lang.String, java.lang.String, java.lang.String, io.undertow.server.handlers.sse.ServerSentEventConnection$EventCallback);
    Code:
       0: aload_0
       1: getfield      #6                  // Field open:I
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field shutdown:Z
      11: ifeq          38
      14: aload         4
      16: ifnull        37
      19: aload         4
      21: aload_0
      22: aload_2
      23: aload_1
      24: aload_3
      25: new           #45                 // class java/nio/channels/ClosedChannelException
      28: dup
      29: invokespecial #46                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      32: invokeinterface #47,  6           // InterfaceMethod io/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback.failed:(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)V
      37: return
      38: aload_0
      39: getfield      #4                  // Field queue:Ljava/util/Deque;
      42: new           #48                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
      45: dup
      46: aload_2
      47: aload_1
      48: aload_3
      49: aload         4
      51: aconst_null
      52: invokespecial #49                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;Lio/undertow/server/handlers/sse/ServerSentEventConnection$1;)V
      55: invokeinterface #50,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_0
      62: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      65: invokeinterface #51,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      70: new           #52                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$2
      73: dup
      74: aload_0
      75: invokespecial #53                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$2."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      78: invokevirtual #54                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      81: return

  public java.lang.String getParameter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field parameters:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #55                 // Field parameters:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #57                 // class java/lang/String
      22: areturn

  public void setParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #55                 // Field parameters:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #23                 // class java/util/HashMap
      11: dup
      12: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      15: putfield      #55                 // Field parameters:Ljava/util/Map;
      18: aload_0
      19: getfield      #55                 // Field parameters:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public java.util.Map<java.lang.String, java.lang.Object> getProperties();
    Code:
       0: aload_0
       1: getfield      #25                 // Field properties:Ljava/util/Map;
       4: areturn

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #28                 // Field keepAliveTime:J
       4: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #28                 // Field keepAliveTime:J
       5: aload_0
       6: getfield      #13                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
       9: ifnull        22
      12: aload_0
      13: getfield      #13                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      16: invokeinterface #59,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      21: pop
      22: aload_0
      23: aload_0
      24: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      27: invokeinterface #51,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      32: new           #60                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$3
      35: dup
      36: aload_0
      37: invokespecial #61                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$3."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      40: lload_1
      41: getstatic     #62                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokevirtual #63                 // Method org/xnio/XnioIoThread.executeAtInterval:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      47: putfield      #13                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
      50: return

  private void fillBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/Deque;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          43
      12: aload_0
      13: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      16: ifnull        42
      19: aload_0
      20: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      23: invokeinterface #65,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      33: aload_0
      34: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      37: invokeinterface #66,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
      42: return
      43: aload_0
      44: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      47: ifnonnull     72
      50: aload_0
      51: aload_0
      52: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      55: invokevirtual #67                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      58: invokevirtual #68                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      61: invokeinterface #69,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      66: putfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      69: goto          85
      72: aload_0
      73: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      76: invokeinterface #70,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      81: invokevirtual #71                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      84: pop
      85: aload_0
      86: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      89: invokeinterface #70,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      94: astore_1
      95: aload_0
      96: getfield      #4                  // Field queue:Ljava/util/Deque;
      99: invokeinterface #64,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     104: ifne          436
     107: aload_1
     108: invokevirtual #72                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     111: ifeq          436
     114: aload_0
     115: getfield      #4                  // Field queue:Ljava/util/Deque;
     118: invokeinterface #73,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     123: checkcast     #48                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
     126: astore_2
     127: aload_0
     128: getfield      #2                  // Field buffered:Ljava/util/Queue;
     131: aload_2
     132: invokeinterface #74,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     137: pop
     138: aload_2
     139: invokestatic  #75                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1100:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)[B
     142: ifnonnull     334
     145: new           #76                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     152: astore_3
     153: aload_2
     154: getfield      #78                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     157: ifnull        183
     160: aload_3
     161: ldc           #79                 // String id:
     163: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: aload_3
     168: aload_2
     169: getfield      #78                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     172: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: pop
     176: aload_3
     177: bipush        10
     179: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     182: pop
     183: aload_2
     184: getfield      #82                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     187: ifnull        213
     190: aload_3
     191: ldc           #83                 // String event:
     193: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: pop
     197: aload_3
     198: aload_2
     199: getfield      #82                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     202: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: pop
     206: aload_3
     207: bipush        10
     209: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     212: pop
     213: aload_2
     214: getfield      #84                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     217: ifnull        243
     220: aload_3
     221: ldc           #85                 // String data:
     223: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: pop
     227: aload_3
     228: aload_2
     229: getfield      #84                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     232: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: pop
     236: aload_3
     237: bipush        10
     239: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     242: pop
     243: aload_3
     244: bipush        10
     246: invokevirtual #81                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     249: pop
     250: aload_3
     251: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: getstatic     #87                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     257: invokevirtual #88                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     260: astore        4
     262: aload         4
     264: arraylength
     265: aload_1
     266: invokevirtual #89                 // Method java/nio/ByteBuffer.remaining:()I
     269: if_icmpge     291
     272: aload_1
     273: aload         4
     275: invokevirtual #90                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     278: pop
     279: aload_2
     280: aload_1
     281: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
     284: invokestatic  #92                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1202:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;I)I
     287: pop
     288: goto          331
     291: aload_0
     292: getfield      #4                  // Field queue:Ljava/util/Deque;
     295: aload_2
     296: invokeinterface #93,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
     301: aload_1
     302: invokevirtual #89                 // Method java/nio/ByteBuffer.remaining:()I
     305: istore        5
     307: aload_1
     308: aload         4
     310: iconst_0
     311: iload         5
     313: invokevirtual #94                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     316: pop
     317: aload_2
     318: aload         4
     320: invokestatic  #95                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1102:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;[B)[B
     323: pop
     324: aload_2
     325: iload         5
     327: invokestatic  #96                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1302:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;I)I
     330: pop
     331: goto          433
     334: aload_2
     335: invokestatic  #75                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1100:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)[B
     338: arraylength
     339: aload_2
     340: invokestatic  #97                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1300:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)I
     343: isub
     344: istore_3
     345: iload_3
     346: aload_1
     347: invokevirtual #89                 // Method java/nio/ByteBuffer.remaining:()I
     350: if_icmple     404
     353: aload_0
     354: getfield      #4                  // Field queue:Ljava/util/Deque;
     357: aload_2
     358: invokeinterface #93,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
     363: aload_1
     364: invokevirtual #89                 // Method java/nio/ByteBuffer.remaining:()I
     367: istore        4
     369: aload_1
     370: aload_2
     371: invokestatic  #75                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1100:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)[B
     374: aload_2
     375: invokestatic  #97                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1300:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)I
     378: iload         4
     380: invokevirtual #94                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     383: pop
     384: aload_2
     385: astore        5
     387: aload         5
     389: aload         5
     391: invokestatic  #97                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1300:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)I
     394: iload         4
     396: iadd
     397: invokestatic  #96                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1302:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;I)I
     400: pop
     401: goto          433
     404: aload_1
     405: aload_2
     406: invokestatic  #75                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1100:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)[B
     409: aload_2
     410: invokestatic  #97                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1300:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;)I
     413: iload_3
     414: invokevirtual #94                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     417: pop
     418: aload_2
     419: aload_1
     420: invokevirtual #91                 // Method java/nio/ByteBuffer.position:()I
     423: invokestatic  #92                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1202:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;I)I
     426: pop
     427: aload_2
     428: aconst_null
     429: invokestatic  #95                 // Method io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.access$1102:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$SSEData;[B)[B
     432: pop
     433: goto          95
     436: aload_1
     437: invokevirtual #98                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     440: pop
     441: aload_0
     442: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     445: invokeinterface #99,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     450: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #6                  // Field open:I
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field shutdown:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: iconst_1
      17: putfield      #7                  // Field shutdown:Z
      20: aload_0
      21: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      24: invokeinterface #51,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      29: new           #100                // class io/undertow/server/handlers/sse/ServerSentEventConnection$4
      32: dup
      33: aload_0
      34: invokespecial #101                // Method io/undertow/server/handlers/sse/ServerSentEventConnection$4."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
      37: invokevirtual #54                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      40: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field open:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #45                 // class java/nio/channels/ClosedChannelException
       4: dup
       5: invokespecial #46                 // Method java/nio/channels/ClosedChannelException."<init>":()V
       8: invokespecial #102                // Method close:(Ljava/io/IOException;)V
      11: return

  private synchronized void close(java.io.IOException) throws java.io.IOException;
    Code:
       0: getstatic     #103                // Field openUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_1
       5: iconst_0
       6: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          271
      12: aload_0
      13: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      16: ifnull        33
      19: aload_0
      20: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      23: invokeinterface #65,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
      33: new           #105                // class java/util/ArrayList
      36: dup
      37: aload_0
      38: getfield      #2                  // Field buffered:Ljava/util/Queue;
      41: invokeinterface #106,  1          // InterfaceMethod java/util/Queue.size:()I
      46: aload_0
      47: getfield      #4                  // Field queue:Ljava/util/Deque;
      50: invokeinterface #107,  1          // InterfaceMethod java/util/Deque.size:()I
      55: iadd
      56: aload_0
      57: getfield      #3                  // Field flushingMessages:Ljava/util/Queue;
      60: invokeinterface #106,  1          // InterfaceMethod java/util/Queue.size:()I
      65: iadd
      66: invokespecial #108                // Method java/util/ArrayList."<init>":(I)V
      69: astore_2
      70: aload_2
      71: aload_0
      72: getfield      #2                  // Field buffered:Ljava/util/Queue;
      75: invokeinterface #109,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      80: pop
      81: aload_2
      82: aload_0
      83: getfield      #4                  // Field queue:Ljava/util/Deque;
      86: invokeinterface #109,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      91: pop
      92: aload_2
      93: aload_0
      94: getfield      #3                  // Field flushingMessages:Ljava/util/Queue;
      97: invokeinterface #109,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     102: pop
     103: aload_0
     104: getfield      #4                  // Field queue:Ljava/util/Deque;
     107: invokeinterface #110,  1          // InterfaceMethod java/util/Deque.clear:()V
     112: aload_0
     113: getfield      #2                  // Field buffered:Ljava/util/Queue;
     116: invokeinterface #111,  1          // InterfaceMethod java/util/Queue.clear:()V
     121: aload_0
     122: getfield      #3                  // Field flushingMessages:Ljava/util/Queue;
     125: invokeinterface #111,  1          // InterfaceMethod java/util/Queue.clear:()V
     130: aload_2
     131: invokeinterface #112,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     136: astore_3
     137: aload_3
     138: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: ifeq          215
     146: aload_3
     147: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     152: checkcast     #48                 // class io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData
     155: astore        4
     157: aload         4
     159: getfield      #115                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     162: ifnull        212
     165: aload         4
     167: getfield      #115                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     170: aload_0
     171: aload         4
     173: getfield      #84                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.data:Ljava/lang/String;
     176: aload         4
     178: getfield      #82                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.event:Ljava/lang/String;
     181: aload         4
     183: getfield      #78                 // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.id:Ljava/lang/String;
     186: aload_1
     187: invokeinterface #47,  6           // InterfaceMethod io/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback.failed:(Lio/undertow/server/handlers/sse/ServerSentEventConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/IOException;)V
     192: goto          212
     195: astore        5
     197: getstatic     #117                // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     200: aload         4
     202: getfield      #115                // Field io/undertow/server/handlers/sse/ServerSentEventConnection$SSEData.callback:Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;
     205: aload         5
     207: invokeinterface #118,  3          // InterfaceMethod io/undertow/UndertowLogger.failedToInvokeFailedCallback:(Lio/undertow/server/handlers/sse/ServerSentEventConnection$EventCallback;Ljava/lang/Exception;)V
     212: goto          137
     215: aload_0
     216: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     219: invokeinterface #119,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     224: aload_0
     225: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     228: invokeinterface #120,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     233: ifne          271
     236: aload_0
     237: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     240: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     245: aconst_null
     246: new           #121                // class io/undertow/server/handlers/sse/ServerSentEventConnection$5
     249: dup
     250: aload_0
     251: invokespecial #122                // Method io/undertow/server/handlers/sse/ServerSentEventConnection$5."<init>":(Lio/undertow/server/handlers/sse/ServerSentEventConnection;)V
     254: invokestatic  #123                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     257: invokeinterface #32,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     262: aload_0
     263: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
     266: invokeinterface #99,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     271: return
    Exception table:
       from    to  target type
         165   192   195   Class java/lang/Exception

  public <T> T getAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #124                // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public <T> java.util.List<T> getAttachmentList(io.undertow.util.AttachmentKey<? extends java.util.List<T>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #125                // Method io/undertow/server/HttpServerExchange.getAttachmentList:(Lio/undertow/util/AttachmentKey;)Ljava/util/List;
       8: areturn

  public <T> T putAttachment(io.undertow.util.AttachmentKey<T>, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: aload_2
       6: invokevirtual #126                // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public <T> T removeAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #127                // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public <T> void addToAttachmentList(io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<T>>, T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: aload_2
       6: invokevirtual #128                // Method io/undertow/server/HttpServerExchange.addToAttachmentList:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)V
       9: return

  private void handleException(java.io.IOException);
    Code:
       0: iconst_3
       1: anewarray     #129                // class java/io/Closeable
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: dup
       9: iconst_1
      10: aload_0
      11: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
      14: aastore
      15: dup
      16: iconst_2
      17: aload_0
      18: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      21: invokevirtual #67                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      24: aastore
      25: invokestatic  #130                // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      28: return

  static org.xnio.XnioExecutor$Key access$100(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #13                 // Field timerKey:Lorg/xnio/XnioExecutor$Key;
       4: areturn

  static java.util.List access$200(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #12                 // Field closeTasks:Ljava/util/List;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$400(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static void access$500(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method fillBuffer:()V
       4: return

  static org.xnio.channels.StreamSinkChannel access$600(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sink:Lorg/xnio/channels/StreamSinkChannel;
       4: areturn

  static io.undertow.server.handlers.sse.ServerSentEventConnection$SseWriteListener access$700(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeListener:Lio/undertow/server/handlers/sse/ServerSentEventConnection$SseWriteListener;
       4: areturn

  static boolean access$800(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #7                  // Field shutdown:Z
       4: ireturn

  static int access$900(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #6                  // Field open:I
       4: ireturn

  static io.undertow.connector.PooledByteBuffer access$402(io.undertow.server.handlers.sse.ServerSentEventConnection, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #11                 // Field pooled:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static io.undertow.server.HttpServerExchange access$1000(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn

  static java.util.Deque access$1400(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/Deque;
       4: areturn

  static java.util.Queue access$1500(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field flushingMessages:Ljava/util/Queue;
       4: areturn

  static java.util.Queue access$1600(io.undertow.server.handlers.sse.ServerSentEventConnection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffered:Ljava/util/Queue;
       4: areturn

  static void access$1700(io.undertow.server.handlers.sse.ServerSentEventConnection, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method handleException:(Ljava/io/IOException;)V
       5: return

  static {};
    Code:
       0: ldc           #131                // class io/undertow/server/handlers/sse/ServerSentEventConnection
       2: ldc           #132                // String open
       4: invokestatic  #133                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #103                // Field openUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
