Compiled from "AbstractFramedStreamSinkChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.StreamSinkChannel {
  private static final io.undertow.connector.PooledByteBuffer EMPTY_BYTE_BUFFER;

  private final C channel;

  private final org.xnio.ChannelListener$SimpleSetter<S> writeSetter;

  private final org.xnio.ChannelListener$SimpleSetter<S> closeSetter;

  private final java.lang.Object lock;

  private volatile int state;

  private volatile boolean readyForFlush;

  private volatile boolean fullyFlushed;

  private volatile boolean finalFrameQueued;

  private volatile boolean broken;

  private volatile int waiterCount;

  private volatile io.undertow.server.protocol.framed.SendFrameHeader header;

  private volatile io.undertow.connector.PooledByteBuffer writeBuffer;

  private volatile io.undertow.connector.PooledByteBuffer body;

  private volatile io.undertow.connector.PooledByteBuffer trailer;

  private static final int STATE_CLOSED;

  private static final int STATE_WRITES_SHUTDOWN;

  private static final int STATE_FIRST_DATA_WRITTEN;

  private static final int STATE_PRE_WRITE_CALLED;

  private volatile boolean writesResumed;

  private volatile int inListenerLoop;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel> inListenerLoopUpdater;

  protected io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel(C);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #9                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #10                 // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #8                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #9                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #11                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #12                 // class java/lang/Object
      30: dup
      31: invokespecial #7                  // Method java/lang/Object."<init>":()V
      34: putfield      #13                 // Field lock:Ljava/lang/Object;
      37: aload_0
      38: iconst_0
      39: putfield      #4                  // Field state:I
      42: aload_0
      43: iconst_0
      44: putfield      #14                 // Field waiterCount:I
      47: aload_0
      48: aload_1
      49: putfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      52: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: aload_0
       5: invokevirtual #16                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: aload_0
       5: invokestatic  #17                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public void suspendWrites();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field writesResumed:Z
       5: return

  final io.undertow.server.protocol.framed.SendFrameHeader getFrameHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: ifnonnull     35
       7: aload_0
       8: aload_0
       9: invokevirtual #19                 // Method createFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
      12: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      15: aload_0
      16: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      19: ifnonnull     35
      22: aload_0
      23: new           #20                 // class io/undertow/server/protocol/framed/SendFrameHeader
      26: dup
      27: iconst_0
      28: aconst_null
      29: invokespecial #21                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
      32: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      35: aload_0
      36: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      39: areturn

  protected io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  final java.nio.ByteBuffer getFrameFooter();
    Code:
       0: aload_0
       1: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     29
       7: aload_0
       8: aload_0
       9: invokevirtual #23                 // Method createFrameFooter:()Lio/undertow/connector/PooledByteBuffer;
      12: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
      15: aload_0
      16: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
      19: ifnonnull     29
      22: aload_0
      23: getstatic     #24                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      26: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
      29: aload_0
      30: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
      33: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      38: areturn

  protected io.undertow.connector.PooledByteBuffer createFrameFooter();
    Code:
       0: aconst_null
       1: areturn

  final void preWrite();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: bipush        8
       6: invokestatic  #27                 // Method org/xnio/Bits.allAreClear:(II)Z
       9: ifeq          35
      12: aload_0
      13: dup
      14: getfield      #4                  // Field state:I
      17: bipush        8
      19: ior
      20: putfield      #4                  // Field state:I
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      29: invokevirtual #29                 // Method preWriteTransform:(Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
      32: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      35: return

  protected io.undertow.connector.PooledByteBuffer preWriteTransform(io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_1
       1: areturn

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writesResumed:Z
       4: ireturn

  public void wakeupWrites();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #30                 // Method resumeWritesInternal:(Z)V
       5: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method resumeWritesInternal:(Z)V
       5: return

  protected void resumeWritesInternal(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writesResumed:Z
       4: istore_2
       5: iload_1
       6: ifne          14
       9: iload_2
      10: ifeq          14
      13: return
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field writesResumed:Z
      19: aload_0
      20: getfield      #2                  // Field readyForFlush:Z
      23: ifeq          31
      26: iload_1
      27: ifne          31
      30: return
      31: getstatic     #6                  // Field inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      34: aload_0
      35: iconst_0
      36: iconst_1
      37: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      40: ifeq          58
      43: aload_0
      44: invokevirtual #32                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      47: new           #33                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$1
      50: dup
      51: aload_0
      52: invokespecial #34                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
      55: invokevirtual #35                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.runInIoThread:(Ljava/lang/Runnable;)V
      58: return

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_2
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          18
      11: aload_0
      12: getfield      #3                  // Field broken:Z
      15: ifeq          19
      18: return
      19: aload_0
      20: invokespecial #37                 // Method queueFinalFrame:()V
      23: aload_0
      24: dup
      25: getfield      #4                  // Field state:I
      28: iconst_2
      29: ior
      30: putfield      #4                  // Field state:I
      33: return

  private void queueFinalFrame() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field readyForFlush:Z
       4: ifne          115
       7: aload_0
       8: getfield      #1                  // Field fullyFlushed:Z
      11: ifne          115
      14: aload_0
      15: getfield      #4                  // Field state:I
      18: iconst_1
      19: invokestatic  #27                 // Method org/xnio/Bits.allAreClear:(II)Z
      22: ifeq          115
      25: aload_0
      26: getfield      #3                  // Field broken:Z
      29: ifne          115
      32: aload_0
      33: getfield      #38                 // Field finalFrameQueued:Z
      36: ifne          115
      39: aconst_null
      40: aload_0
      41: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      44: if_acmpne     62
      47: aconst_null
      48: aload_0
      49: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      52: if_acmpeq     62
      55: aload_0
      56: invokespecial #40                 // Method sendWriteBuffer:()V
      59: goto          77
      62: aconst_null
      63: aload_0
      64: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      67: if_acmpne     77
      70: aload_0
      71: getstatic     #24                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      74: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      77: aload_0
      78: iconst_1
      79: putfield      #2                  // Field readyForFlush:Z
      82: aload_0
      83: dup
      84: getfield      #4                  // Field state:I
      87: iconst_4
      88: ior
      89: putfield      #4                  // Field state:I
      92: aload_0
      93: dup
      94: getfield      #4                  // Field state:I
      97: iconst_2
      98: ior
      99: putfield      #4                  // Field state:I
     102: aload_0
     103: iconst_1
     104: putfield      #38                 // Field finalFrameQueued:Z
     107: aload_0
     108: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     111: aload_0
     112: invokevirtual #41                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.queueFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
     115: return

  protected boolean isFinalFrameQueued();
    Code:
       0: aload_0
       1: getfield      #38                 // Field finalFrameQueued:Z
       4: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: invokestatic  #42                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #45,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #13                 // Field lock:Ljava/lang/Object;
      23: dup
      24: astore_1
      25: monitorenter
      26: aload_0
      27: getfield      #4                  // Field state:I
      30: iconst_1
      31: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      34: ifne          44
      37: aload_0
      38: getfield      #3                  // Field broken:Z
      41: ifeq          47
      44: aload_1
      45: monitorexit
      46: return
      47: aload_0
      48: getfield      #2                  // Field readyForFlush:Z
      51: ifeq          131
      54: aload_0
      55: dup
      56: getfield      #14                 // Field waiterCount:I
      59: iconst_1
      60: iadd
      61: putfield      #14                 // Field waiterCount:I
      64: aload_0
      65: getfield      #2                  // Field readyForFlush:Z
      68: ifeq          96
      71: aload_0
      72: getfield      #4                  // Field state:I
      75: iconst_1
      76: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      79: ifne          96
      82: aload_0
      83: getfield      #3                  // Field broken:Z
      86: ifne          96
      89: aload_0
      90: getfield      #13                 // Field lock:Ljava/lang/Object;
      93: invokevirtual #46                 // Method java/lang/Object.wait:()V
      96: aload_0
      97: dup
      98: getfield      #14                 // Field waiterCount:I
     101: iconst_1
     102: isub
     103: putfield      #14                 // Field waiterCount:I
     106: goto          131
     109: astore_2
     110: new           #48                 // class java/io/InterruptedIOException
     113: dup
     114: invokespecial #49                 // Method java/io/InterruptedIOException."<init>":()V
     117: athrow
     118: astore_3
     119: aload_0
     120: dup
     121: getfield      #14                 // Field waiterCount:I
     124: iconst_1
     125: isub
     126: putfield      #14                 // Field waiterCount:I
     129: aload_3
     130: athrow
     131: aload_1
     132: monitorexit
     133: goto          143
     136: astore        4
     138: aload_1
     139: monitorexit
     140: aload         4
     142: athrow
     143: return
    Exception table:
       from    to  target type
          54    96   109   Class java/lang/InterruptedException
          54    96   118   any
         109   119   118   any
          26    46   136   any
          47   133   136   any
         136   140   136   any

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #42                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #45,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #13                 // Field lock:Ljava/lang/Object;
      23: dup
      24: astore        4
      26: monitorenter
      27: aload_0
      28: getfield      #4                  // Field state:I
      31: iconst_1
      32: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      35: ifne          45
      38: aload_0
      39: getfield      #3                  // Field broken:Z
      42: ifeq          49
      45: aload         4
      47: monitorexit
      48: return
      49: aload_0
      50: getfield      #2                  // Field readyForFlush:Z
      53: ifeq          141
      56: aload_0
      57: dup
      58: getfield      #14                 // Field waiterCount:I
      61: iconst_1
      62: iadd
      63: putfield      #14                 // Field waiterCount:I
      66: aload_0
      67: getfield      #2                  // Field readyForFlush:Z
      70: ifeq          103
      73: aload_0
      74: getfield      #4                  // Field state:I
      77: iconst_1
      78: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      81: ifne          103
      84: aload_0
      85: getfield      #3                  // Field broken:Z
      88: ifne          103
      91: aload_0
      92: getfield      #13                 // Field lock:Ljava/lang/Object;
      95: aload_3
      96: lload_1
      97: invokevirtual #50                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     100: invokevirtual #51                 // Method java/lang/Object.wait:(J)V
     103: aload_0
     104: dup
     105: getfield      #14                 // Field waiterCount:I
     108: iconst_1
     109: isub
     110: putfield      #14                 // Field waiterCount:I
     113: goto          141
     116: astore        5
     118: new           #48                 // class java/io/InterruptedIOException
     121: dup
     122: invokespecial #49                 // Method java/io/InterruptedIOException."<init>":()V
     125: athrow
     126: astore        6
     128: aload_0
     129: dup
     130: getfield      #14                 // Field waiterCount:I
     133: iconst_1
     134: isub
     135: putfield      #14                 // Field waiterCount:I
     138: aload         6
     140: athrow
     141: aload         4
     143: monitorexit
     144: goto          155
     147: astore        7
     149: aload         4
     151: monitorexit
     152: aload         7
     154: athrow
     155: return
    Exception table:
       from    to  target type
          56   103   116   Class java/lang/InterruptedException
          56   103   126   any
         116   128   126   any
          27    48   147   any
          49   144   147   any
         147   152   147   any

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #52                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends S> getWriteSetter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends S> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #53                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #52                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field broken:Z
      17: ifeq          29
      20: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      23: invokeinterface #54,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      28: athrow
      29: aload_0
      30: getfield      #2                  // Field readyForFlush:Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #1                  // Field fullyFlushed:Z
      42: ifeq          57
      45: aload_0
      46: dup
      47: getfield      #4                  // Field state:I
      50: iconst_1
      51: ior
      52: putfield      #4                  // Field state:I
      55: iconst_1
      56: ireturn
      57: aload_0
      58: getfield      #4                  // Field state:I
      61: iconst_2
      62: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      65: ifeq          81
      68: aload_0
      69: getfield      #38                 // Field finalFrameQueued:Z
      72: ifne          81
      75: aload_0
      76: invokespecial #37                 // Method queueFinalFrame:()V
      79: iconst_0
      80: ireturn
      81: aload_0
      82: getfield      #4                  // Field state:I
      85: iconst_2
      86: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      89: ifeq          94
      92: iconst_0
      93: ireturn
      94: aload_0
      95: invokevirtual #55                 // Method isFlushRequiredOnEmptyBuffer:()Z
      98: ifne          123
     101: aload_0
     102: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     105: ifnull        140
     108: aload_0
     109: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     112: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     117: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
     120: ifle          140
     123: aload_0
     124: invokespecial #57                 // Method handleBufferFull:()V
     127: aload_0
     128: getfield      #2                  // Field readyForFlush:Z
     131: ifne          138
     134: iconst_1
     135: goto          139
     138: iconst_0
     139: ireturn
     140: iconst_1
     141: ireturn

  protected boolean isFlushRequiredOnEmptyBuffer();
    Code:
       0: iconst_0
       1: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method safeToSend:()Z
       4: ifne          9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      13: ifnonnull     32
      16: aload_0
      17: aload_0
      18: invokevirtual #32                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: invokevirtual #59                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      24: invokeinterface #60,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      29: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      41: astore        4
      43: aload         4
      45: aload_1
      46: iload_2
      47: iload_3
      48: invokestatic  #61                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
      51: istore        5
      53: aload         4
      55: invokevirtual #62                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      58: ifne          65
      61: aload_0
      62: invokespecial #57                 // Method handleBufferFull:()V
      65: iload         5
      67: i2l
      68: lreturn

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #63                 // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method safeToSend:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      13: ifnonnull     32
      16: aload_0
      17: aload_0
      18: invokevirtual #32                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      21: invokevirtual #59                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      24: invokeinterface #60,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      29: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      36: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      41: astore_2
      42: aload_2
      43: aload_1
      44: invokestatic  #64                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      47: istore_3
      48: aload_2
      49: invokevirtual #62                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      52: ifne          59
      55: aload_0
      56: invokespecial #57                 // Method handleBufferFull:()V
      59: iload_3
      60: ireturn

  public boolean send(io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method isWritesShutdown:()Z
       4: ifeq          16
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #54,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #66                 // Method sendInternal:(Lio/undertow/connector/PooledByteBuffer;)Z
      21: ireturn

  protected boolean sendInternal(io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method safeToSend:()Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: ireturn

  protected boolean safeToSend() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: aload_0
       6: getfield      #2                  // Field readyForFlush:Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aconst_null
      15: aload_0
      16: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: iload_1
      25: iconst_1
      26: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      29: ifne          39
      32: aload_0
      33: getfield      #3                  // Field broken:Z
      36: ifeq          48
      39: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      42: invokeinterface #54,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      47: athrow
      48: iconst_1
      49: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #67                 // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #68                 // Method writeFinal:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method org/xnio/channels/Channels.writeFinalBasic:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/ByteBuffer;)I
       5: ireturn

  private void handleBufferFull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field readyForFlush:Z
       4: ifne          34
       7: aload_0
       8: invokespecial #40                 // Method sendWriteBuffer:()V
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field readyForFlush:Z
      16: aload_0
      17: dup
      18: getfield      #4                  // Field state:I
      21: iconst_4
      22: ior
      23: putfield      #4                  // Field state:I
      26: aload_0
      27: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      30: aload_0
      31: invokevirtual #41                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.queueFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;)V
      34: return

  private void sendWriteBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnonnull     14
       7: aload_0
       8: getstatic     #24                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      11: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      14: aload_0
      15: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      18: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      23: invokevirtual #70                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: invokevirtual #66                 // Method sendInternal:(Lio/undertow/connector/PooledByteBuffer;)Z
      35: ifne          47
      38: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      41: invokeinterface #71,  1           // InterfaceMethod io/undertow/UndertowMessages.failedToSendAfterBeingSafe:()Ljava/lang/IllegalStateException;
      46: athrow
      47: aload_0
      48: aconst_null
      49: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      52: return

  protected abstract boolean isLastFrame();

  public boolean isReadyForFlush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field readyForFlush:Z
       4: ireturn

  public boolean isWritesShutdown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_2
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: invokestatic  #27                 // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field fullyFlushed:Z
       4: ifne          18
       7: aload_0
       8: getfield      #4                  // Field state:I
      11: iconst_1
      12: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifeq          19
      18: return
      19: aload_0
      20: dup
      21: getfield      #4                  // Field state:I
      24: iconst_1
      25: ior
      26: putfield      #4                  // Field state:I
      29: aload_0
      30: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      33: ifnull        50
      36: aload_0
      37: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      40: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      45: aload_0
      46: aconst_null
      47: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
      50: aload_0
      51: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      54: ifnull        71
      57: aload_0
      58: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      61: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      66: aload_0
      67: aconst_null
      68: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      71: aload_0
      72: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      75: ifnull        105
      78: aload_0
      79: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      82: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      85: ifnull        105
      88: aload_0
      89: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      92: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      95: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     100: aload_0
     101: aconst_null
     102: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     105: aload_0
     106: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     109: ifnull        126
     112: aload_0
     113: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     116: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     121: aload_0
     122: aconst_null
     123: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     126: aload_0
     127: getfield      #4                  // Field state:I
     130: iconst_4
     131: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
     134: ifeq          141
     137: aload_0
     138: invokevirtual #74                 // Method channelForciblyClosed:()V
     141: aload_0
     142: invokevirtual #75                 // Method isWriteResumed:()Z
     145: ifeq          160
     148: aload_0
     149: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     152: aload_0
     153: aload_0
     154: invokevirtual #76                 // Method getWriteListener:()Lorg/xnio/ChannelListener;
     157: invokestatic  #77                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     160: aload_0
     161: invokevirtual #78                 // Method wakeupWrites:()V
     164: aload_0
     165: invokespecial #79                 // Method wakeupWaiters:()V
     168: goto          178
     171: astore_1
     172: aload_0
     173: invokespecial #79                 // Method wakeupWaiters:()V
     176: aload_1
     177: athrow
     178: return
    Exception table:
       from    to  target type
          19   164   171   any

  protected void channelForciblyClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method isFirstDataWritten:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #32                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      11: aconst_null
      12: invokevirtual #81                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.markWritesBroken:(Ljava/lang/Throwable;)V
      15: aload_0
      16: invokespecial #79                 // Method wakeupWaiters:()V
      19: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #82                 // class java/lang/IllegalStateException
      14: dup
      15: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":()V
      18: athrow
      19: aload_0
      20: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     33
      26: aload_0
      27: getstatic     #24                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      30: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      33: aload_0
      34: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      37: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      42: areturn

  final void flushComplete() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: invokevirtual #84                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getRemainingInBuffer:()I
       7: istore_1
       8: aload_0
       9: getfield      #38                 // Field finalFrameQueued:Z
      12: istore_2
      13: iload_2
      14: ifeq          35
      17: iload_1
      18: ifne          35
      21: aload_0
      22: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      25: invokevirtual #85                 // Method io/undertow/server/protocol/framed/SendFrameHeader.isAnotherFrameRequired:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore_3
      37: iload_1
      38: ifle          80
      41: aload_0
      42: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      45: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      50: aload_0
      51: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      54: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      59: invokevirtual #86                 // Method java/nio/ByteBuffer.limit:()I
      62: iload_1
      63: iadd
      64: invokevirtual #87                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      67: pop
      68: iload_2
      69: ifeq          162
      72: aload_0
      73: iconst_0
      74: putfield      #38                 // Field finalFrameQueued:Z
      77: goto          162
      80: aload_0
      81: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      84: invokevirtual #85                 // Method io/undertow/server/protocol/framed/SendFrameHeader.isAnotherFrameRequired:()Z
      87: ifeq          130
      90: aload_0
      91: iconst_0
      92: putfield      #38                 // Field finalFrameQueued:Z
      95: aload_0
      96: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
      99: ifnull        162
     102: aload_0
     103: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     106: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     111: aload_0
     112: aconst_null
     113: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     116: aload_0
     117: dup
     118: getfield      #4                  // Field state:I
     121: bipush        -9
     123: iand
     124: putfield      #4                  // Field state:I
     127: goto          162
     130: aload_0
     131: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     134: ifnull        162
     137: aload_0
     138: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     141: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     146: aload_0
     147: aconst_null
     148: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     151: aload_0
     152: dup
     153: getfield      #4                  // Field state:I
     156: bipush        -9
     158: iand
     159: putfield      #4                  // Field state:I
     162: iload_3
     163: ifeq          206
     166: aload_0
     167: iconst_1
     168: putfield      #1                  // Field fullyFlushed:Z
     171: aload_0
     172: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     175: ifnull        250
     178: aload_0
     179: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     182: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     187: aload_0
     188: aconst_null
     189: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     192: aload_0
     193: dup
     194: getfield      #4                  // Field state:I
     197: bipush        -9
     199: iand
     200: putfield      #4                  // Field state:I
     203: goto          250
     206: aload_0
     207: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     210: ifnull        250
     213: aload_0
     214: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     217: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     222: invokevirtual #88                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     225: pop
     226: aload_0
     227: aload_0
     228: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     231: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     234: aload_0
     235: aconst_null
     236: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     239: aload_0
     240: dup
     241: getfield      #4                  // Field state:I
     244: bipush        -9
     246: iand
     247: putfield      #4                  // Field state:I
     250: aload_0
     251: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     254: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     257: ifnull        272
     260: aload_0
     261: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     264: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     267: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     272: aload_0
     273: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     276: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     281: aload_0
     282: aconst_null
     283: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     286: aload_0
     287: aconst_null
     288: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     291: aload_0
     292: iconst_0
     293: putfield      #2                  // Field readyForFlush:Z
     296: aload_0
     297: invokevirtual #75                 // Method isWriteResumed:()Z
     300: ifeq          314
     303: iload_3
     304: ifne          314
     307: aload_0
     308: invokevirtual #78                 // Method wakeupWrites:()V
     311: goto          333
     314: aload_0
     315: invokevirtual #75                 // Method isWriteResumed:()Z
     318: ifeq          333
     321: aload_0
     322: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     325: aload_0
     326: aload_0
     327: invokevirtual #76                 // Method getWriteListener:()Lorg/xnio/ChannelListener;
     330: invokestatic  #77                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     333: aload_0
     334: getfield      #11                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     337: invokevirtual #89                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
     340: astore        4
     342: iload_3
     343: ifeq          361
     346: aload         4
     348: ifnull        361
     351: aload_0
     352: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
     355: aload_0
     356: aload         4
     358: invokestatic  #77                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     361: aload_0
     362: iload_3
     363: invokevirtual #90                 // Method handleFlushComplete:(Z)V
     366: aload_0
     367: invokespecial #79                 // Method wakeupWaiters:()V
     370: goto          382
     373: astore        5
     375: aload_0
     376: invokespecial #79                 // Method wakeupWaiters:()V
     379: aload         5
     381: athrow
     382: return
    Exception table:
       from    to  target type
           0   366   373   any
         373   375   373   any

  protected void handleFlushComplete(boolean);
    Code:
       0: return

  protected boolean isFirstDataWritten();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: invokestatic  #36                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void markBroken();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field broken:Z
       5: aload_0
       6: invokevirtual #78                 // Method wakeupWrites:()V
       9: aload_0
      10: invokespecial #79                 // Method wakeupWaiters:()V
      13: aload_0
      14: invokevirtual #75                 // Method isWriteResumed:()Z
      17: ifeq          41
      20: aload_0
      21: getfield      #10                 // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      24: invokevirtual #89                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
      27: astore_1
      28: aload_1
      29: ifnull        41
      32: aload_0
      33: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      36: aload_0
      37: aload_1
      38: invokestatic  #77                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
      41: aload_0
      42: getfield      #11                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      45: invokevirtual #89                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
      48: astore_1
      49: aload_1
      50: ifnull        62
      53: aload_0
      54: invokevirtual #43                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      57: aload_0
      58: aload_1
      59: invokestatic  #77                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
      62: aload_0
      63: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      66: ifnull        96
      69: aload_0
      70: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      73: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      76: ifnull        96
      79: aload_0
      80: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      83: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
      86: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      91: aload_0
      92: aconst_null
      93: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      96: aload_0
      97: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     100: ifnull        117
     103: aload_0
     104: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     107: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     112: aload_0
     113: aconst_null
     114: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     117: aload_0
     118: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     121: ifnull        138
     124: aload_0
     125: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     128: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     133: aload_0
     134: aconst_null
     135: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     138: aload_0
     139: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     142: ifnull        262
     145: aload_0
     146: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     149: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     154: aload_0
     155: aconst_null
     156: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     159: goto          262
     162: astore_2
     163: aload_0
     164: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     167: ifnull        197
     170: aload_0
     171: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     174: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     177: ifnull        197
     180: aload_0
     181: getfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     184: invokevirtual #73                 // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     187: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     192: aload_0
     193: aconst_null
     194: putfield      #18                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
     197: aload_0
     198: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     201: ifnull        218
     204: aload_0
     205: getfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     208: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     213: aload_0
     214: aconst_null
     215: putfield      #22                 // Field trailer:Lio/undertow/connector/PooledByteBuffer;
     218: aload_0
     219: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     222: ifnull        239
     225: aload_0
     226: getfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     229: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     234: aload_0
     235: aconst_null
     236: putfield      #28                 // Field body:Lio/undertow/connector/PooledByteBuffer;
     239: aload_0
     240: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     243: ifnull        260
     246: aload_0
     247: getfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     250: invokeinterface #72,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     255: aload_0
     256: aconst_null
     257: putfield      #39                 // Field writeBuffer:Lio/undertow/connector/PooledByteBuffer;
     260: aload_2
     261: athrow
     262: return
    Exception table:
       from    to  target type
           5    62   162   any

  org.xnio.ChannelListener<? super S> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #89                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: areturn

  private void wakeupWaiters();
    Code:
       0: aload_0
       1: getfield      #14                 // Field waiterCount:I
       4: ifle          31
       7: aload_0
       8: getfield      #13                 // Field lock:Ljava/lang/Object;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #13                 // Field lock:Ljava/lang/Object;
      18: invokevirtual #91                 // Method java/lang/Object.notifyAll:()V
      21: aload_1
      22: monitorexit
      23: goto          31
      26: astore_2
      27: aload_1
      28: monitorexit
      29: aload_2
      30: athrow
      31: return
    Exception table:
       from    to  target type
          14    23    26   any
          26    29    26   any

  public C getChannel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field channel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: areturn

  public boolean isBroken();
    Code:
       0: aload_0
       1: getfield      #3                  // Field broken:Z
       4: ireturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000();
    Code:
       0: getstatic     #6                  // Field inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static boolean access$100(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writesResumed:Z
       4: ireturn

  static int access$200(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ireturn

  static boolean access$300(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field broken:Z
       4: ireturn

  static boolean access$400(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readyForFlush:Z
       4: ireturn

  static boolean access$500(io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field fullyFlushed:Z
       4: ireturn

  static {};
    Code:
       0: new           #92                 // class io/undertow/util/ImmediatePooledByteBuffer
       3: dup
       4: iconst_0
       5: invokestatic  #93                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       8: invokespecial #94                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      11: putstatic     #24                 // Field EMPTY_BYTE_BUFFER:Lio/undertow/connector/PooledByteBuffer;
      14: ldc           #26                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      16: ldc           #95                 // String inListenerLoop
      18: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: putstatic     #6                  // Field inListenerLoopUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      24: return
}
