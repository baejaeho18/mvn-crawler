Compiled from "PathResourceManager.java"
public class io.undertow.server.handlers.resource.PathResourceManager implements io.undertow.server.handlers.resource.ResourceManager {
  private static final boolean DEFAULT_CHANGE_LISTENERS_ALLOWED;

  private final java.util.List<io.undertow.server.handlers.resource.ResourceChangeListener> listeners;

  private org.xnio.FileSystemWatcher fileSystemWatcher;

  protected volatile java.lang.String base;

  private final long transferMinSize;

  private final boolean caseSensitive;

  private final boolean followLinks;

  private final java.util.TreeSet<java.lang.String> safePaths;

  private final boolean allowResourceChangeListeners;

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_1
       4: iconst_0
       5: aconst_null
       6: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
       9: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: iconst_0
       6: aconst_null
       7: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
      10: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_1
       4: iload         4
       6: aload         5
       8: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
      11: return

  protected io.undertow.server.handlers.resource.PathResourceManager(long, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: getstatic     #3                  // Field DEFAULT_CHANGE_LISTENERS_ALLOWED:Z
       8: aload         5
      10: invokespecial #4                  // Method "<init>":(JZZZ[Ljava/lang/String;)V
      13: return

  protected io.undertow.server.handlers.resource.PathResourceManager(long, boolean, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #1                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #8                  // class java/util/TreeSet
      19: dup
      20: invokespecial #9                  // Method java/util/TreeSet."<init>":()V
      23: putfield      #10                 // Field safePaths:Ljava/util/TreeSet;
      26: aload_0
      27: iload_3
      28: putfield      #11                 // Field caseSensitive:Z
      31: aload_0
      32: iload         4
      34: putfield      #12                 // Field followLinks:Z
      37: aload_0
      38: lload_1
      39: putfield      #13                 // Field transferMinSize:J
      42: aload_0
      43: iload         5
      45: putfield      #14                 // Field allowResourceChangeListeners:Z
      48: aload_0
      49: getfield      #12                 // Field followLinks:Z
      52: ifeq          132
      55: aload         6
      57: ifnonnull     71
      60: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      63: ldc           #16                 // String safePaths
      65: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      70: athrow
      71: aload         6
      73: astore        7
      75: aload         7
      77: arraylength
      78: istore        8
      80: iconst_0
      81: istore        9
      83: iload         9
      85: iload         8
      87: if_icmpge     119
      90: aload         7
      92: iload         9
      94: aaload
      95: astore        10
      97: aload         10
      99: ifnonnull     113
     102: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     105: ldc           #16                 // String safePaths
     107: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     112: athrow
     113: iinc          9, 1
     116: goto          83
     119: aload_0
     120: getfield      #10                 // Field safePaths:Ljava/util/TreeSet;
     123: aload         6
     125: invokestatic  #18                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     128: invokevirtual #19                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
     131: pop
     132: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: iload         5
       7: getstatic     #3                  // Field DEFAULT_CHANGE_LISTENERS_ALLOWED:Z
      10: aload         6
      12: invokespecial #20                 // Method "<init>":(Ljava/nio/file/Path;JZZZ[Ljava/lang/String;)V
      15: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #1                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #8                  // class java/util/TreeSet
      19: dup
      20: invokespecial #9                  // Method java/util/TreeSet."<init>":()V
      23: putfield      #10                 // Field safePaths:Ljava/util/TreeSet;
      26: aload_0
      27: iload         6
      29: putfield      #14                 // Field allowResourceChangeListeners:Z
      32: aload_1
      33: ifnonnull     47
      36: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      39: ldc           #21                 // String base
      41: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      46: athrow
      47: aload_1
      48: invokeinterface #22,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      53: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      58: astore        8
      60: aload         8
      62: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
      65: invokevirtual #25                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      68: ifne          94
      71: new           #26                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      78: aload         8
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: getstatic     #29                 // Field java/io/File.separatorChar:C
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      89: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: astore        8
      94: aload_0
      95: aload         8
      97: putfield      #32                 // Field base:Ljava/lang/String;
     100: aload_0
     101: lload_2
     102: putfield      #13                 // Field transferMinSize:J
     105: aload_0
     106: iload         4
     108: putfield      #11                 // Field caseSensitive:Z
     111: aload_0
     112: iload         5
     114: putfield      #12                 // Field followLinks:Z
     117: aload_0
     118: getfield      #12                 // Field followLinks:Z
     121: ifeq          201
     124: aload         7
     126: ifnonnull     140
     129: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     132: ldc           #16                 // String safePaths
     134: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     139: athrow
     140: aload         7
     142: astore        9
     144: aload         9
     146: arraylength
     147: istore        10
     149: iconst_0
     150: istore        11
     152: iload         11
     154: iload         10
     156: if_icmpge     188
     159: aload         9
     161: iload         11
     163: aaload
     164: astore        12
     166: aload         12
     168: ifnonnull     182
     171: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     174: ldc           #16                 // String safePaths
     176: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     181: athrow
     182: iinc          11, 1
     185: goto          152
     188: aload_0
     189: getfield      #10                 // Field safePaths:Ljava/util/TreeSet;
     192: aload         7
     194: invokestatic  #18                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     197: invokevirtual #19                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
     200: pop
     201: return

  public java.nio.file.Path getBasePath();
    Code:
       0: aload_0
       1: getfield      #32                 // Field base:Ljava/lang/String;
       4: iconst_0
       5: anewarray     #33                 // class java/lang/String
       8: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      11: areturn

  public io.undertow.server.handlers.resource.PathResourceManager setBase(java.nio.file.Path);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #21                 // String base
       9: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: invokeinterface #22,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      21: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
      31: invokevirtual #25                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      34: ifne          58
      37: new           #26                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_2
      45: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: getstatic     #29                 // Field java/io/File.separatorChar:C
      51: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore_2
      58: aload_0
      59: aload_2
      60: putfield      #32                 // Field base:Ljava/lang/String;
      63: aload_0
      64: areturn

  public io.undertow.server.handlers.resource.PathResourceManager setBase(java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #21                 // String base
       9: invokeinterface #17,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: invokevirtual #35                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
      24: invokevirtual #25                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      27: ifne          51
      30: new           #26                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_2
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: getstatic     #29                 // Field java/io/File.separatorChar:C
      44: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      47: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: astore_2
      51: aload_0
      52: aload_2
      53: putfield      #32                 // Field base:Ljava/lang/String;
      56: aload_0
      57: areturn

  public io.undertow.server.handlers.resource.Resource getResource(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #36                 // String /
       3: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          18
       9: aload_1
      10: iconst_1
      11: invokevirtual #38                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      14: astore_2
      15: goto          20
      18: aload_1
      19: astore_2
      20: aload_0
      21: getfield      #32                 // Field base:Ljava/lang/String;
      24: iconst_1
      25: anewarray     #33                 // class java/lang/String
      28: dup
      29: iconst_0
      30: aload_2
      31: aastore
      32: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      35: astore_3
      36: aload_3
      37: invokeinterface #39,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      42: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      47: astore        4
      49: aload         4
      51: aload_0
      52: getfield      #32                 // Field base:Ljava/lang/String;
      55: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      58: ifne          94
      61: aload         4
      63: invokevirtual #40                 // Method java/lang/String.length:()I
      66: aload_0
      67: getfield      #32                 // Field base:Ljava/lang/String;
      70: invokevirtual #40                 // Method java/lang/String.length:()I
      73: iconst_1
      74: isub
      75: if_icmpne     92
      78: aload_0
      79: getfield      #32                 // Field base:Ljava/lang/String;
      82: aload         4
      84: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      87: ifne          94
      90: aconst_null
      91: areturn
      92: aconst_null
      93: areturn
      94: aload_3
      95: iconst_0
      96: anewarray     #41                 // class java/nio/file/LinkOption
      99: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     102: ifeq          233
     105: aload_2
     106: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
     109: invokevirtual #25                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     112: ifeq          128
     115: aload_3
     116: iconst_0
     117: anewarray     #41                 // class java/nio/file/LinkOption
     120: invokestatic  #43                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     123: ifne          128
     126: aconst_null
     127: areturn
     128: aload_0
     129: getfield      #12                 // Field followLinks:Z
     132: ifeq          149
     135: aload_0
     136: getfield      #10                 // Field safePaths:Ljava/util/TreeSet;
     139: invokevirtual #44                 // Method java/util/TreeSet.isEmpty:()Z
     142: ifeq          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: istore        5
     152: aload_0
     153: aload_0
     154: getfield      #32                 // Field base:Ljava/lang/String;
     157: aload_3
     158: invokespecial #45                 // Method getSymlinkBase:(Ljava/lang/String;Ljava/nio/file/Path;)Lio/undertow/server/handlers/resource/PathResourceManager$SymlinkResult;
     161: astore        6
     163: iload         5
     165: ifne          210
     168: aload         6
     170: ifnull        210
     173: aload         6
     175: getfield      #46                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.requiresCheck:Z
     178: ifeq          210
     181: aload_0
     182: getfield      #12                 // Field followLinks:Z
     185: ifeq          233
     188: aload_0
     189: aload_3
     190: invokespecial #47                 // Method isSymlinkSafe:(Ljava/nio/file/Path;)Z
     193: ifeq          233
     196: aload_0
     197: aload_3
     198: aload_2
     199: aload         6
     201: getfield      #48                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.path:Ljava/nio/file/Path;
     204: aload         4
     206: invokevirtual #49                 // Method getFileResource:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;)Lio/undertow/server/handlers/resource/PathResource;
     209: areturn
     210: aload_0
     211: aload_3
     212: aload_2
     213: aload         6
     215: ifnonnull     222
     218: aconst_null
     219: goto          227
     222: aload         6
     224: getfield      #48                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.path:Ljava/nio/file/Path;
     227: aload         4
     229: invokevirtual #49                 // Method getFileResource:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;)Lio/undertow/server/handlers/resource/PathResource;
     232: areturn
     233: aconst_null
     234: areturn
     235: astore_3
     236: getstatic     #51                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     239: aload_3
     240: ldc           #52                 // String Invalid path %s
     242: iconst_0
     243: anewarray     #53                 // class java/lang/Object
     246: invokeinterface #54,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     251: aconst_null
     252: areturn
    Exception table:
       from    to  target type
          20    91   235   Class java/lang/Exception
          92    93   235   Class java/lang/Exception
          94   127   235   Class java/lang/Exception
         128   209   235   Class java/lang/Exception
         210   232   235   Class java/lang/Exception
         233   234   235   Class java/lang/Exception

  public boolean isResourceChangeListenerSupported();
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowResourceChangeListeners:Z
       4: ireturn

  public synchronized void registerResourceChangeListener(io.undertow.server.handlers.resource.ResourceChangeListener);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowResourceChangeListeners:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field listeners:Ljava/util/List;
      12: aload_1
      13: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: getfield      #56                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      23: ifnonnull     89
      26: aload_0
      27: invokestatic  #57                 // Method org/xnio/Xnio.getInstance:()Lorg/xnio/Xnio;
      30: new           #26                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #58                 // String Watcher for
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #32                 // Field base:Ljava/lang/String;
      46: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: getstatic     #59                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      55: invokevirtual #60                 // Method org/xnio/Xnio.createFileSystemWatcher:(Ljava/lang/String;Lorg/xnio/OptionMap;)Lorg/xnio/FileSystemWatcher;
      58: putfield      #56                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      61: aload_0
      62: getfield      #56                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      65: new           #61                 // class java/io/File
      68: dup
      69: aload_0
      70: getfield      #32                 // Field base:Ljava/lang/String;
      73: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      76: new           #63                 // class io/undertow/server/handlers/resource/PathResourceManager$1
      79: dup
      80: aload_0
      81: invokespecial #64                 // Method io/undertow/server/handlers/resource/PathResourceManager$1."<init>":(Lio/undertow/server/handlers/resource/PathResourceManager;)V
      84: invokeinterface #65,  3           // InterfaceMethod org/xnio/FileSystemWatcher.watchPath:(Ljava/io/File;Lorg/xnio/FileChangeCallback;)V
      89: return

  public synchronized void removeResourceChangeListener(io.undertow.server.handlers.resource.ResourceChangeListener);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowResourceChangeListeners:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field listeners:Ljava/util/List;
      12: aload_1
      13: invokeinterface #66,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: return

  public long getTransferMinSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field transferMinSize:J
       4: lreturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #56                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
       4: ifnull        16
       7: aload_0
       8: getfield      #56                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      11: invokeinterface #67,  1           // InterfaceMethod org/xnio/FileSystemWatcher.close:()V
      16: return

  private io.undertow.server.handlers.resource.PathResourceManager$SymlinkResult getSymlinkBase(java.lang.String, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #68,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
       6: istore_3
       7: aload_1
       8: iconst_0
       9: anewarray     #33                 // class java/lang/String
      12: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      15: astore        4
      17: aload         4
      19: invokeinterface #68,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
      24: istore        5
      26: aload_2
      27: astore        6
      29: iload_3
      30: iconst_1
      31: isub
      32: istore        7
      34: iload         7
      36: iflt          87
      39: aload         6
      41: invokestatic  #69                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      44: ifeq          72
      47: new           #70                 // class io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult
      50: dup
      51: iload         7
      53: iconst_1
      54: iadd
      55: iload         5
      57: if_icmple     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: aload         6
      67: aconst_null
      68: invokespecial #71                 // Method io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult."<init>":(ZLjava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager$1;)V
      71: areturn
      72: aload         6
      74: invokeinterface #72,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      79: astore        6
      81: iinc          7, -1
      84: goto          34
      87: aconst_null
      88: areturn

  private boolean isFileSameCase(java.nio.file.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #41                 // class java/nio/file/LinkOption
       5: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      10: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      15: astore_3
      16: aload_3
      17: aload_2
      18: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ireturn

  private boolean isSymlinkSafe(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #41                 // class java/nio/file/LinkOption
       5: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      10: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: getfield      #10                 // Field safePaths:Ljava/util/TreeSet;
      20: invokevirtual #75                 // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          188
      33: aload_3
      34: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #33                 // class java/lang/String
      42: astore        4
      44: aload         4
      46: invokevirtual #40                 // Method java/lang/String.length:()I
      49: ifle          185
      52: aload         4
      54: iconst_0
      55: invokevirtual #78                 // Method java/lang/String.charAt:(I)C
      58: getstatic     #29                 // Field java/io/File.separatorChar:C
      61: if_icmpne     95
      64: aload         4
      66: invokevirtual #40                 // Method java/lang/String.length:()I
      69: ifle          185
      72: aload_2
      73: invokevirtual #40                 // Method java/lang/String.length:()I
      76: aload         4
      78: invokevirtual #40                 // Method java/lang/String.length:()I
      81: if_icmplt     185
      84: aload_2
      85: aload         4
      87: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      90: ifeq          185
      93: iconst_1
      94: ireturn
      95: new           #26                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     102: aload_0
     103: getfield      #32                 // Field base:Ljava/lang/String;
     106: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: getstatic     #29                 // Field java/io/File.separatorChar:C
     112: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     115: aload         4
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: astore        5
     125: aload         5
     127: iconst_0
     128: anewarray     #33                 // class java/lang/String
     131: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
     134: astore        6
     136: aload         6
     138: iconst_0
     139: anewarray     #41                 // class java/nio/file/LinkOption
     142: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     147: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
     152: astore        7
     154: aload         7
     156: invokevirtual #40                 // Method java/lang/String.length:()I
     159: ifle          185
     162: aload_2
     163: invokevirtual #40                 // Method java/lang/String.length:()I
     166: aload         7
     168: invokevirtual #40                 // Method java/lang/String.length:()I
     171: if_icmplt     185
     174: aload_2
     175: aload         7
     177: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     180: ifeq          185
     183: iconst_1
     184: ireturn
     185: goto          24
     188: iconst_0
     189: ireturn

  protected io.undertow.server.handlers.resource.PathResource getFileResource(java.nio.file.Path, java.lang.String, java.nio.file.Path, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field caseSensitive:Z
       4: ifeq          167
       7: aload_3
       8: ifnull        144
      11: aload_3
      12: aload_1
      13: invokeinterface #79,  2           // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      18: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      23: astore        5
      25: aload_1
      26: iconst_0
      27: anewarray     #41                 // class java/nio/file/LinkOption
      30: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      35: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      40: astore        6
      42: aload_3
      43: iconst_0
      44: anewarray     #41                 // class java/nio/file/LinkOption
      47: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      52: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      57: astore        7
      59: aload         6
      61: aload         7
      63: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      66: ifne          71
      69: aconst_null
      70: areturn
      71: aload         6
      73: aload         7
      75: invokevirtual #40                 // Method java/lang/String.length:()I
      78: invokevirtual #38                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      81: astore        8
      83: aload         8
      85: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
      88: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      91: ifeq          102
      94: aload         8
      96: iconst_1
      97: invokevirtual #38                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     100: astore        8
     102: aload         5
     104: getstatic     #24                 // Field java/io/File.separator:Ljava/lang/String;
     107: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     110: ifeq          121
     113: aload         5
     115: iconst_1
     116: invokevirtual #38                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     119: astore        5
     121: aload         5
     123: aload         8
     125: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifeq          142
     131: new           #80                 // class io/undertow/server/handlers/resource/PathResource
     134: dup
     135: aload_1
     136: aload_0
     137: aload_2
     138: invokespecial #81                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     141: areturn
     142: aconst_null
     143: areturn
     144: aload_0
     145: aload_1
     146: aload         4
     148: invokespecial #82                 // Method isFileSameCase:(Ljava/nio/file/Path;Ljava/lang/String;)Z
     151: ifeq          165
     154: new           #80                 // class io/undertow/server/handlers/resource/PathResource
     157: dup
     158: aload_1
     159: aload_0
     160: aload_2
     161: invokespecial #81                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     164: areturn
     165: aconst_null
     166: areturn
     167: new           #80                 // class io/undertow/server/handlers/resource/PathResource
     170: dup
     171: aload_1
     172: aload_0
     173: aload_2
     174: invokespecial #81                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     177: areturn

  static java.util.List access$000(io.undertow.server.handlers.resource.PathResourceManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #83                 // String io.undertow.disable-file-system-watcher
       2: invokestatic  #84                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field DEFAULT_CHANGE_LISTENERS_ALLOWED:Z
      16: return
}
