Compiled from "Http2ClientProvider.java"
public class io.undertow.client.http2.Http2ClientProvider implements io.undertow.client.ClientProvider {
  private static final java.lang.String HTTP2;

  private static final java.lang.String HTTP_1_1;

  private static final org.xnio.ChannelListener<org.xnio.ssl.SslConnection> FAILED;

  public io.undertow.client.http2.Http2ClientProvider();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #4                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #5                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public java.util.Set<java.lang.String> handlesSchemes();
    Code:
       0: new           #6                  // class java/util/HashSet
       3: dup
       4: iconst_1
       5: anewarray     #7                  // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #8                  // String h2
      12: aastore
      13: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      16: invokespecial #10                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: areturn

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload         5
       2: ifnonnull     20
       5: aload_1
       6: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #12,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      14: invokeinterface #13,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      19: return
      20: invokestatic  #14                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      23: aload         7
      25: invokevirtual #15                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      28: getstatic     #16                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      31: iconst_1
      32: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      35: invokevirtual #18                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      38: astore        8
      40: aload_2
      41: ifnonnull     109
      44: aload         5
      46: aload         4
      48: new           #19                 // class java/net/InetSocketAddress
      51: dup
      52: aload_3
      53: invokevirtual #20                 // Method java/net/URI.getHost:()Ljava/lang/String;
      56: aload_3
      57: invokevirtual #21                 // Method java/net/URI.getPort:()I
      60: iconst_m1
      61: if_icmpne     70
      64: sipush        443
      67: goto          74
      70: aload_3
      71: invokevirtual #21                 // Method java/net/URI.getPort:()I
      74: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      77: aload_0
      78: aload_1
      79: aload_3
      80: aload         5
      82: aload         6
      84: aload         8
      86: invokespecial #23                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
      89: aload         8
      91: invokevirtual #24                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      94: aload_0
      95: aload_1
      96: invokespecial #25                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
      99: aconst_null
     100: invokeinterface #26,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     105: pop
     106: goto          172
     109: aload         5
     111: aload         4
     113: aload_2
     114: new           #19                 // class java/net/InetSocketAddress
     117: dup
     118: aload_3
     119: invokevirtual #20                 // Method java/net/URI.getHost:()Ljava/lang/String;
     122: aload_3
     123: invokevirtual #21                 // Method java/net/URI.getPort:()I
     126: iconst_m1
     127: if_icmpne     136
     130: sipush        443
     133: goto          140
     136: aload_3
     137: invokevirtual #21                 // Method java/net/URI.getPort:()I
     140: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     143: aload_0
     144: aload_1
     145: aload_3
     146: aload         5
     148: aload         6
     150: aload         8
     152: invokespecial #23                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     155: aload         8
     157: invokevirtual #27                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     160: aload_0
     161: aload_1
     162: invokespecial #25                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     165: aconst_null
     166: invokeinterface #26,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     171: pop
     172: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload         5
       2: ifnonnull     20
       5: aload_1
       6: getstatic     #11                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       9: invokeinterface #12,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
      14: invokeinterface #13,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      19: return
      20: aload_2
      21: ifnonnull     109
      24: invokestatic  #14                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      27: aload         7
      29: invokevirtual #15                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      32: getstatic     #16                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
      35: iconst_1
      36: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      39: invokevirtual #18                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      42: astore        8
      44: aload         5
      46: aload         4
      48: new           #19                 // class java/net/InetSocketAddress
      51: dup
      52: aload_3
      53: invokevirtual #20                 // Method java/net/URI.getHost:()Ljava/lang/String;
      56: aload_3
      57: invokevirtual #21                 // Method java/net/URI.getPort:()I
      60: iconst_m1
      61: if_icmpne     70
      64: sipush        443
      67: goto          74
      70: aload_3
      71: invokevirtual #21                 // Method java/net/URI.getPort:()I
      74: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      77: aload_0
      78: aload_1
      79: aload_3
      80: aload         5
      82: aload         6
      84: aload         8
      86: invokespecial #23                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
      89: aload         7
      91: invokevirtual #28                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      94: aload_0
      95: aload_1
      96: invokespecial #25                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
      99: aconst_null
     100: invokeinterface #26,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     105: pop
     106: goto          172
     109: aload         5
     111: aload         4
     113: aload_2
     114: new           #19                 // class java/net/InetSocketAddress
     117: dup
     118: aload_3
     119: invokevirtual #20                 // Method java/net/URI.getHost:()Ljava/lang/String;
     122: aload_3
     123: invokevirtual #21                 // Method java/net/URI.getPort:()I
     126: iconst_m1
     127: if_icmpne     136
     130: sipush        443
     133: goto          140
     136: aload_3
     137: invokevirtual #21                 // Method java/net/URI.getPort:()I
     140: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     143: aload_0
     144: aload_1
     145: aload_3
     146: aload         5
     148: aload         6
     150: aload         7
     152: invokespecial #23                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     155: aload         7
     157: invokevirtual #29                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     160: aload_0
     161: aload_1
     162: invokespecial #25                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     165: aconst_null
     166: invokeinterface #26,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     171: pop
     172: return

  private org.xnio.IoFuture$Notifier<org.xnio.StreamConnection, java.lang.Object> createNotifier(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>);
    Code:
       0: new           #30                 // class io/undertow/client/http2/Http2ClientProvider$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #31                 // Method io/undertow/client/http2/Http2ClientProvider$2."<init>":(Lio/undertow/client/http2/Http2ClientProvider;Lio/undertow/client/ClientCallback;)V
       9: areturn

  private org.xnio.ChannelListener<org.xnio.StreamConnection> createOpenListener(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #32                 // class io/undertow/client/http2/Http2ClientProvider$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload         4
       9: aload         5
      11: invokespecial #33                 // Method io/undertow/client/http2/Http2ClientProvider$3."<init>":(Lio/undertow/client/http2/Http2ClientProvider;Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: areturn

  public static io.undertow.client.ALPNClientSelector$ALPNProtocol alpnProtocol(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #34                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
       3: dup
       4: new           #35                 // class io/undertow/client/http2/Http2ClientProvider$4
       7: dup
       8: aload_0
       9: aload_2
      10: aload_3
      11: aload_1
      12: invokespecial #36                 // Method io/undertow/client/http2/Http2ClientProvider$4."<init>":(Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/net/URI;)V
      15: ldc           #8                  // String h2
      17: invokespecial #38                 // Method io/undertow/client/ALPNClientSelector$ALPNProtocol."<init>":(Lorg/xnio/ChannelListener;Ljava/lang/String;)V
      20: areturn

  private void handleConnected(org.xnio.StreamConnection, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_1
       1: checkcast     #39                 // class org/xnio/ssl/SslConnection
       4: getstatic     #40                 // Field FAILED:Lorg/xnio/ChannelListener;
       7: aload_2
       8: iconst_1
       9: anewarray     #34                 // class io/undertow/client/ALPNClientSelector$ALPNProtocol
      12: dup
      13: iconst_0
      14: aload_2
      15: aload_3
      16: aload         4
      18: aload         5
      20: invokestatic  #41                 // Method alpnProtocol:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lio/undertow/client/ALPNClientSelector$ALPNProtocol;
      23: aastore
      24: invokestatic  #42                 // Method io/undertow/client/ALPNClientSelector.runAlpn:(Lorg/xnio/ssl/SslConnection;Lorg/xnio/ChannelListener;Lio/undertow/client/ClientCallback;[Lio/undertow/client/ALPNClientSelector$ALPNProtocol;)V
      27: return

  private static io.undertow.client.http2.Http2ClientConnection createHttp2Channel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String);
    Code:
       0: aload_2
       1: getstatic     #43                 // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
       4: iconst_0
       5: invokevirtual #44                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
       8: ifeq          84
      11: new           #45                 // class io/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl
      14: dup
      15: aconst_null
      16: invokespecial #46                 // Method io/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl."<init>":(Lio/undertow/client/http2/Http2ClientProvider$1;)V
      19: astore        4
      21: aload_0
      22: invokevirtual #47                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      25: new           #48                 // class io/undertow/conduits/BytesSentStreamSinkConduit
      28: dup
      29: aload_0
      30: invokevirtual #47                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      33: invokevirtual #49                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      36: new           #50                 // class io/undertow/client/http2/Http2ClientProvider$5
      39: dup
      40: aload         4
      42: invokespecial #51                 // Method io/undertow/client/http2/Http2ClientProvider$5."<init>":(Lio/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl;)V
      45: invokespecial #52                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      48: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      51: aload_0
      52: invokevirtual #54                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      55: new           #55                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
      58: dup
      59: aload_0
      60: invokevirtual #54                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      63: invokevirtual #56                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      66: new           #57                 // class io/undertow/client/http2/Http2ClientProvider$6
      69: dup
      70: aload         4
      72: invokespecial #58                 // Method io/undertow/client/http2/Http2ClientProvider$6."<init>":(Lio/undertow/client/http2/Http2ClientProvider$ClientStatisticsImpl;)V
      75: invokespecial #59                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      78: invokevirtual #60                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      81: goto          87
      84: aconst_null
      85: astore        4
      87: new           #61                 // class io/undertow/protocols/http2/Http2Channel
      90: dup
      91: aload_0
      92: aconst_null
      93: aload_1
      94: aconst_null
      95: iconst_1
      96: iconst_0
      97: aload_2
      98: invokespecial #62                 // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
     101: astore        5
     103: new           #63                 // class io/undertow/client/http2/Http2ClientConnection
     106: dup
     107: aload         5
     109: iconst_0
     110: aload_3
     111: aload         4
     113: invokespecial #64                 // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;ZLjava/lang/String;Lio/undertow/client/ClientStatistics;)V
     116: areturn

  static void access$000(io.undertow.client.http2.Http2ClientProvider, org.xnio.StreamConnection, io.undertow.client.ClientCallback, java.net.URI, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method handleConnected:(Lorg/xnio/StreamConnection;Lio/undertow/client/ClientCallback;Ljava/net/URI;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      11: return

  static io.undertow.client.http2.Http2ClientConnection access$100(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method createHttp2Channel:(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljava/lang/String;)Lio/undertow/client/http2/Http2ClientConnection;
       7: areturn

  static {};
    Code:
       0: new           #65                 // class io/undertow/client/http2/Http2ClientProvider$1
       3: dup
       4: invokespecial #66                 // Method io/undertow/client/http2/Http2ClientProvider$1."<init>":()V
       7: putstatic     #40                 // Field FAILED:Lorg/xnio/ChannelListener;
      10: return
}
