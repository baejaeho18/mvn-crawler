Compiled from "MultiPartParserDefinition.java"
final class io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler implements io.undertow.server.handlers.form.FormDataParser,io.undertow.util.MultipartParser$PartHandler {
  private final io.undertow.server.HttpServerExchange exchange;

  private final io.undertow.server.handlers.form.FormData data;

  private final java.lang.String boundary;

  private final java.util.List<java.nio.file.Path> createdFiles;

  private final long maxIndividualFileSize;

  private java.lang.String defaultEncoding;

  private final java.io.ByteArrayOutputStream contentBytes;

  private java.lang.String currentName;

  private java.lang.String fileName;

  private java.nio.file.Path file;

  private java.nio.channels.FileChannel fileChannel;

  private io.undertow.util.HeaderMap headers;

  private io.undertow.server.HttpHandler handler;

  private long currentFileSize;

  private final io.undertow.util.MultipartParser$ParseState parser;

  final io.undertow.server.handlers.form.MultiPartParserDefinition this$0;

  private io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler(io.undertow.server.handlers.form.MultiPartParserDefinition, io.undertow.server.HttpServerExchange, java.lang.String, long, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
       5: aload_0
       6: invokespecial #7                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #8                  // class java/util/ArrayList
      13: dup
      14: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #10                 // Field createdFiles:Ljava/util/List;
      20: aload_0
      21: new           #11                 // class java/io/ByteArrayOutputStream
      24: dup
      25: invokespecial #12                 // Method java/io/ByteArrayOutputStream."<init>":()V
      28: putfield      #13                 // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      31: aload_0
      32: aload_2
      33: putfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      36: aload_0
      37: aload_3
      38: putfield      #14                 // Field boundary:Ljava/lang/String;
      41: aload_0
      42: lload         4
      44: putfield      #15                 // Field maxIndividualFileSize:J
      47: aload_0
      48: aload         6
      50: putfield      #16                 // Field defaultEncoding:Ljava/lang/String;
      53: aload_0
      54: new           #17                 // class io/undertow/server/handlers/form/FormData
      57: dup
      58: aload_2
      59: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      62: invokevirtual #19                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      65: getstatic     #20                 // Field io/undertow/UndertowOptions.MAX_PARAMETERS:Lorg/xnio/Option;
      68: sipush        1000
      71: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      74: invokespecial #22                 // Method io/undertow/server/handlers/form/FormData."<init>":(I)V
      77: putfield      #1                  // Field data:Lio/undertow/server/handlers/form/FormData;
      80: aload         6
      82: astore        7
      84: aload_2
      85: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      88: getstatic     #24                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
      91: invokevirtual #25                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      94: astore        8
      96: aload         8
      98: ifnull        119
     101: aload         8
     103: ldc           #26                 // String charset
     105: invokestatic  #27                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     108: astore        9
     110: aload         9
     112: ifnull        119
     115: aload         9
     117: astore        7
     119: aload_0
     120: aload_2
     121: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     124: invokevirtual #28                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     127: aload_0
     128: aload_3
     129: invokevirtual #29                 // Method java/lang/String.getBytes:()[B
     132: aload         7
     134: invokestatic  #30                 // Method io/undertow/util/MultipartParser.beginParse:(Lio/undertow/connector/ByteBufferPool;Lio/undertow/util/MultipartParser$PartHandler;[BLjava/lang/String;)Lio/undertow/util/MultipartParser$ParseState;
     137: putfield      #2                  // Field parser:Lio/undertow/util/MultipartParser$ParseState;
     140: return

  public void parse(io.undertow.server.HttpHandler) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #31                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: ifnull        24
      13: aload_1
      14: aload_0
      15: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      18: invokeinterface #33,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      23: return
      24: aload_0
      25: aload_1
      26: putfield      #3                  // Field handler:Lio/undertow/server/HttpHandler;
      29: aload_0
      30: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      33: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      36: astore_2
      37: aload_2
      38: ifnonnull     57
      41: new           #35                 // class java/io/IOException
      44: dup
      45: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      48: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.requestChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      53: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      56: athrow
      57: aload_0
      58: getfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      61: invokestatic  #39                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.access$100:(Lio/undertow/server/handlers/form/MultiPartParserDefinition;)Ljava/util/concurrent/Executor;
      64: ifnonnull     98
      67: aload_0
      68: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: new           #40                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask
      74: dup
      75: aload_0
      76: aload_0
      77: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      83: invokevirtual #41                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      86: aload_2
      87: aconst_null
      88: invokespecial #42                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/concurrent/Executor;Lorg/xnio/channels/StreamSourceChannel;Lio/undertow/server/handlers/form/MultiPartParserDefinition$1;)V
      91: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      94: pop
      95: goto          130
      98: aload_0
      99: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     102: aload_0
     103: getfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
     106: invokestatic  #39                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.access$100:(Lio/undertow/server/handlers/form/MultiPartParserDefinition;)Ljava/util/concurrent/Executor;
     109: new           #40                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask
     112: dup
     113: aload_0
     114: aload_0
     115: getfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
     118: invokestatic  #39                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.access$100:(Lio/undertow/server/handlers/form/MultiPartParserDefinition;)Ljava/util/concurrent/Executor;
     121: aload_2
     122: aconst_null
     123: invokespecial #42                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$NonBlockingParseTask."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/concurrent/Executor;Lorg/xnio/channels/StreamSourceChannel;Lio/undertow/server/handlers/form/MultiPartParserDefinition$1;)V
     126: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
     129: pop
     130: return

  public io.undertow.server.handlers.form.FormData parseBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #31                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #17                 // class io/undertow/server/handlers/form/FormData
      13: astore_1
      14: aload_1
      15: ifnull        20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      24: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      27: astore_2
      28: aload_2
      29: ifnonnull     48
      32: new           #35                 // class java/io/IOException
      35: dup
      36: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      39: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.requestChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      44: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
      48: sipush        1024
      51: newarray       byte
      53: astore_3
      54: aload_2
      55: aload_3
      56: invokevirtual #46                 // Method java/io/InputStream.read:([B)I
      59: istore        4
      61: iload         4
      63: iconst_m1
      64: if_icmpne     89
      67: aload_0
      68: getfield      #2                  // Field parser:Lio/undertow/util/MultipartParser$ParseState;
      71: invokevirtual #47                 // Method io/undertow/util/MultipartParser$ParseState.isComplete:()Z
      74: ifeq          80
      77: goto          111
      80: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      83: invokeinterface #48,  1           // InterfaceMethod io/undertow/UndertowMessages.connectionTerminatedReadingMultiPartData:()Ljava/io/IOException;
      88: athrow
      89: iload         4
      91: ifeq          108
      94: aload_0
      95: getfield      #2                  // Field parser:Lio/undertow/util/MultipartParser$ParseState;
      98: aload_3
      99: iconst_0
     100: iload         4
     102: invokestatic  #49                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     105: invokevirtual #50                 // Method io/undertow/util/MultipartParser$ParseState.parse:(Ljava/nio/ByteBuffer;)V
     108: goto          54
     111: aload_0
     112: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     115: getstatic     #31                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
     118: aload_0
     119: getfield      #1                  // Field data:Lio/undertow/server/handlers/form/FormData;
     122: invokevirtual #51                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: goto          141
     129: astore        4
     131: new           #35                 // class java/io/IOException
     134: dup
     135: aload         4
     137: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     140: athrow
     141: aload_0
     142: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     145: getstatic     #31                 // Field FORM_DATA:Lio/undertow/util/AttachmentKey;
     148: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     151: checkcast     #17                 // class io/undertow/server/handlers/form/FormData
     154: areturn
    Exception table:
       from    to  target type
          54   126   129   Class io/undertow/util/MalformedMessageException

  public void beginPart(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #53                 // Field currentFileSize:J
       5: aload_0
       6: aload_1
       7: putfield      #54                 // Field headers:Lio/undertow/util/HeaderMap;
      10: aload_1
      11: getstatic     #55                 // Field io/undertow/util/Headers.CONTENT_DISPOSITION:Lio/undertow/util/HttpString;
      14: invokevirtual #25                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: ifnull        162
      22: aload_2
      23: ldc           #56                 // String form-data
      25: invokevirtual #57                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ifeq          162
      31: aload_0
      32: aload_2
      33: ldc           #58                 // String name
      35: invokestatic  #27                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      38: putfield      #59                 // Field currentName:Ljava/lang/String;
      41: aload_0
      42: aload_2
      43: ldc           #60                 // String filename
      45: invokestatic  #27                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: putfield      #61                 // Field fileName:Ljava/lang/String;
      51: aload_0
      52: getfield      #61                 // Field fileName:Ljava/lang/String;
      55: ifnull        162
      58: aload_0
      59: getfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      62: invokestatic  #62                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.access$300:(Lio/undertow/server/handlers/form/MultiPartParserDefinition;)Ljava/nio/file/Path;
      65: ifnull        93
      68: aload_0
      69: aload_0
      70: getfield      #6                  // Field this$0:Lio/undertow/server/handlers/form/MultiPartParserDefinition;
      73: invokestatic  #62                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition.access$300:(Lio/undertow/server/handlers/form/MultiPartParserDefinition;)Ljava/nio/file/Path;
      76: ldc           #63                 // String undertow
      78: ldc           #64                 // String upload
      80: iconst_0
      81: anewarray     #65                 // class java/nio/file/attribute/FileAttribute
      84: invokestatic  #66                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      87: putfield      #67                 // Field file:Ljava/nio/file/Path;
      90: goto          108
      93: aload_0
      94: ldc           #63                 // String undertow
      96: ldc           #64                 // String upload
      98: iconst_0
      99: anewarray     #65                 // class java/nio/file/attribute/FileAttribute
     102: invokestatic  #68                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     105: putfield      #67                 // Field file:Ljava/nio/file/Path;
     108: aload_0
     109: getfield      #10                 // Field createdFiles:Ljava/util/List;
     112: aload_0
     113: getfield      #67                 // Field file:Ljava/nio/file/Path;
     116: invokeinterface #69,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: aload_0
     123: aload_0
     124: getfield      #67                 // Field file:Ljava/nio/file/Path;
     127: iconst_2
     128: anewarray     #70                 // class java/nio/file/OpenOption
     131: dup
     132: iconst_0
     133: getstatic     #71                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     136: aastore
     137: dup
     138: iconst_1
     139: getstatic     #72                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     142: aastore
     143: invokestatic  #73                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
     146: putfield      #74                 // Field fileChannel:Ljava/nio/channels/FileChannel;
     149: goto          162
     152: astore_3
     153: new           #75                 // class java/lang/RuntimeException
     156: dup
     157: aload_3
     158: invokespecial #76                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     161: athrow
     162: return
    Exception table:
       from    to  target type
          58   149   152   Class java/io/IOException

  public void data(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #53                 // Field currentFileSize:J
       5: aload_1
       6: invokevirtual #77                 // Method java/nio/ByteBuffer.remaining:()I
       9: i2l
      10: ladd
      11: putfield      #53                 // Field currentFileSize:J
      14: aload_0
      15: getfield      #15                 // Field maxIndividualFileSize:J
      18: lconst_0
      19: lcmp
      20: ifle          48
      23: aload_0
      24: getfield      #53                 // Field currentFileSize:J
      27: aload_0
      28: getfield      #15                 // Field maxIndividualFileSize:J
      31: lcmp
      32: ifle          48
      35: getstatic     #36                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      38: aload_0
      39: getfield      #15                 // Field maxIndividualFileSize:J
      42: invokeinterface #78,  3           // InterfaceMethod io/undertow/UndertowMessages.maxFileSizeExceeded:(J)Ljava/io/IOException;
      47: athrow
      48: aload_0
      49: getfield      #67                 // Field file:Ljava/nio/file/Path;
      52: ifnonnull     76
      55: aload_1
      56: invokevirtual #79                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      59: ifeq          85
      62: aload_0
      63: getfield      #13                 // Field contentBytes:Ljava/io/ByteArrayOutputStream;
      66: aload_1
      67: invokevirtual #80                 // Method java/nio/ByteBuffer.get:()B
      70: invokevirtual #81                 // Method java/io/ByteArrayOutputStream.write:(I)V
      73: goto          55
      76: aload_0
      77: getfield      #74                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      80: aload_1
      81: invokevirtual #82                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
      84: pop
      85: return

  public void endPart();
    Code:
       0: aload_0
       1: getfield      #67                 // Field file:Ljava/nio/file/Path;
       4: ifnull        60
       7: aload_0
       8: getfield      #1                  // Field data:Lio/undertow/server/handlers/form/FormData;
      11: aload_0
      12: getfield      #59                 // Field currentName:Ljava/lang/String;
      15: aload_0
      16: getfield      #67                 // Field file:Ljava/nio/file/Path;
      19: aload_0
      20: getfield      #61                 // Field fileName:Ljava/lang/String;
      23: aload_0
      24: getfield      #54                 // Field headers:Lio/undertow/util/HeaderMap;
      27: invokevirtual #83                 // Method io/undertow/server/handlers/form/FormData.add:(Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
      30: aload_0
      31: aconst_null
      32: putfield      #67                 // Field file:Ljava/nio/file/Path;
      35: aload_0
      36: getfield      #74                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      39: invokevirtual #84                 // Method java/nio/channels/FileChannel.close:()V
      42: aload_0
      43: aconst_null
      44: putfield      #74                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      47: goto          143
      50: astore_1
      51: new           #75                 // class java/lang/RuntimeException
      54: dup
      55: aload_1
      56: invokespecial #76                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
      60: aload_0
      61: getfield      #16                 // Field defaultEncoding:Ljava/lang/String;
      64: astore_1
      65: aload_0
      66: getfield      #54                 // Field headers:Lio/undertow/util/HeaderMap;
      69: getstatic     #24                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
      72: invokevirtual #25                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      75: astore_2
      76: aload_2
      77: ifnull        93
      80: aload_2
      81: ldc           #26                 // String charset
      83: invokestatic  #27                 // Method io/undertow/util/Headers.extractQuotedValueFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      86: astore_3
      87: aload_3
      88: ifnull        93
      91: aload_3
      92: astore_1
      93: aload_0
      94: getfield      #1                  // Field data:Lio/undertow/server/handlers/form/FormData;
      97: aload_0
      98: getfield      #59                 // Field currentName:Ljava/lang/String;
     101: new           #85                 // class java/lang/String
     104: dup
     105: aload_0
     106: getfield      #13                 // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     109: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     112: aload_1
     113: invokespecial #87                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
     116: aload_0
     117: getfield      #54                 // Field headers:Lio/undertow/util/HeaderMap;
     120: invokevirtual #88                 // Method io/undertow/server/handlers/form/FormData.add:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
     123: goto          136
     126: astore_1
     127: new           #75                 // class java/lang/RuntimeException
     130: dup
     131: aload_1
     132: invokespecial #76                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     135: athrow
     136: aload_0
     137: getfield      #13                 // Field contentBytes:Ljava/io/ByteArrayOutputStream;
     140: invokevirtual #90                 // Method java/io/ByteArrayOutputStream.reset:()V
     143: return
    Exception table:
       from    to  target type
          35    47    50   Class java/io/IOException
          60   123   126   Class java/io/UnsupportedEncodingException

  public java.util.List<java.nio.file.Path> getCreatedFiles();
    Code:
       0: aload_0
       1: getfield      #10                 // Field createdFiles:Ljava/util/List;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: new           #8                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #91                 // Method getCreatedFiles:()Ljava/util/List;
       8: invokespecial #92                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_0
      13: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      16: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      19: invokevirtual #41                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
      22: new           #93                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$1
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #94                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler$1."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;Ljava/util/List;)V
      31: invokevirtual #95                 // Method org/xnio/XnioWorker.execute:(Ljava/lang/Runnable;)V
      34: return

  public void setCharacterEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field defaultEncoding:Ljava/lang/String;
       5: return

  io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler(io.undertow.server.handlers.form.MultiPartParserDefinition, io.undertow.server.HttpServerExchange, java.lang.String, long, java.lang.String, io.undertow.server.handlers.form.MultiPartParserDefinition$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: aload         6
       8: invokespecial #5                  // Method "<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;JLjava/lang/String;)V
      11: return

  static io.undertow.server.HttpServerExchange access$400(io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn

  static io.undertow.server.HttpHandler access$500(io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field handler:Lio/undertow/server/HttpHandler;
       4: areturn

  static io.undertow.util.MultipartParser$ParseState access$700(io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parser:Lio/undertow/util/MultipartParser$ParseState;
       4: areturn

  static io.undertow.server.handlers.form.FormData access$800(io.undertow.server.handlers.form.MultiPartParserDefinition$MultiPartUploadHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field data:Lio/undertow/server/handlers/form/FormData;
       4: areturn
}
