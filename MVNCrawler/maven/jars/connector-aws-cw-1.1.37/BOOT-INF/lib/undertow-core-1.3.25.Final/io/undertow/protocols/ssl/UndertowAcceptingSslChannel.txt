Compiled from "UndertowAcceptingSslChannel.java"
class io.undertow.protocols.ssl.UndertowAcceptingSslChannel implements org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection> {
  private final io.undertow.protocols.ssl.UndertowXnioSsl ssl;

  private final org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection> tcpServer;

  private volatile org.xnio.SslClientAuthMode clientAuthMode;

  private volatile int useClientMode;

  private volatile int enableSessionCreation;

  private volatile java.lang.String[] cipherSuites;

  private volatile java.lang.String[] protocols;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel, org.xnio.SslClientAuthMode> clientAuthModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel> useClientModeUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel> enableSessionCreationUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel, java.lang.String[]> cipherSuitesUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.protocols.ssl.UndertowAcceptingSslChannel, java.lang.String[]> protocolsUpdater;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> closeSetter;

  private final org.xnio.ChannelListener$Setter<org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> acceptSetter;

  protected final boolean startTls;

  protected final io.undertow.connector.ByteBufferPool applicationBufferPool;

  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  io.undertow.protocols.ssl.UndertowAcceptingSslChannel(io.undertow.protocols.ssl.UndertowXnioSsl, org.xnio.channels.AcceptingChannel<? extends org.xnio.StreamConnection>, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field applicationBufferPool:Lio/undertow/connector/ByteBufferPool;
      20: aload_0
      21: iload         5
      23: putfield      #5                  // Field startTls:Z
      26: aload_0
      27: aload_3
      28: getstatic     #6                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      31: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      34: checkcast     #8                  // class org/xnio/SslClientAuthMode
      37: putfield      #9                  // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      40: aload_0
      41: aload_3
      42: getstatic     #10                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      45: iconst_0
      46: invokevirtual #11                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: putfield      #12                 // Field useClientMode:I
      60: aload_0
      61: aload_3
      62: getstatic     #13                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      65: iconst_1
      66: invokevirtual #11                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: putfield      #14                 // Field enableSessionCreation:I
      80: aload_3
      81: getstatic     #15                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      84: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      87: checkcast     #16                 // class org/xnio/Sequence
      90: astore        6
      92: aload_0
      93: aload         6
      95: ifnull        117
      98: aload         6
     100: aload         6
     102: invokevirtual #17                 // Method org/xnio/Sequence.size:()I
     105: anewarray     #18                 // class java/lang/String
     108: invokevirtual #19                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     111: checkcast     #20                 // class "[Ljava/lang/String;"
     114: goto          118
     117: aconst_null
     118: putfield      #21                 // Field cipherSuites:[Ljava/lang/String;
     121: aload_3
     122: getstatic     #22                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     125: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
     128: checkcast     #16                 // class org/xnio/Sequence
     131: astore        7
     133: aload_0
     134: aload         7
     136: ifnull        158
     139: aload         7
     141: aload         7
     143: invokevirtual #17                 // Method org/xnio/Sequence.size:()I
     146: anewarray     #18                 // class java/lang/String
     149: invokevirtual #19                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     152: checkcast     #20                 // class "[Ljava/lang/String;"
     155: goto          159
     158: aconst_null
     159: putfield      #23                 // Field protocols:[Ljava/lang/String;
     162: aload_0
     163: aload_2
     164: invokeinterface #24,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     169: aload_0
     170: invokestatic  #25                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     173: putfield      #26                 // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
     176: aload_0
     177: aload_2
     178: invokeinterface #27,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
     183: aload_0
     184: invokestatic  #25                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
     187: putfield      #28                 // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
     190: return

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #6                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     26
       7: aload_1
       8: getstatic     #29                 // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      11: aload_0
      12: getstatic     #6                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      15: aload_2
      16: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn
      26: aload_1
      27: getstatic     #10                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      30: if_acmpne     86
      33: getstatic     #10                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      36: aload_2
      37: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #32                 // class java/lang/Boolean
      43: astore_3
      44: aload_3
      45: ifnull        83
      48: aload_1
      49: getstatic     #33                 // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      52: aload_0
      53: aload_3
      54: invokevirtual #34                 // Method java/lang/Boolean.booleanValue:()Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      82: areturn
      83: goto          262
      86: aload_1
      87: getstatic     #13                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      90: if_acmpne     146
      93: getstatic     #13                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      96: aload_2
      97: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #32                 // class java/lang/Boolean
     103: astore_3
     104: aload_3
     105: ifnull        143
     108: aload_1
     109: getstatic     #37                 // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     112: aload_0
     113: aload_3
     114: invokevirtual #34                 // Method java/lang/Boolean.booleanValue:()Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     139: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     142: areturn
     143: goto          262
     146: aload_1
     147: getstatic     #15                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     150: if_acmpne     198
     153: getstatic     #15                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
     156: aload_2
     157: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     160: checkcast     #16                 // class org/xnio/Sequence
     163: astore_3
     164: aload_1
     165: getstatic     #38                 // Field cipherSuitesUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     168: aload_0
     169: aload_3
     170: ifnonnull     177
     173: aconst_null
     174: goto          191
     177: aload_3
     178: aload_3
     179: invokevirtual #17                 // Method org/xnio/Sequence.size:()I
     182: anewarray     #18                 // class java/lang/String
     185: invokevirtual #19                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     188: checkcast     #20                 // class "[Ljava/lang/String;"
     191: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     197: areturn
     198: aload_1
     199: getstatic     #22                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     202: if_acmpne     250
     205: getstatic     #22                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     208: aload_2
     209: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     212: checkcast     #16                 // class org/xnio/Sequence
     215: astore_3
     216: aload_1
     217: getstatic     #39                 // Field protocolsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     220: aload_0
     221: aload_3
     222: ifnonnull     229
     225: aconst_null
     226: goto          243
     229: aload_3
     230: aload_3
     231: invokevirtual #17                 // Method org/xnio/Sequence.size:()I
     234: anewarray     #18                 // class java/lang/String
     237: invokevirtual #19                 // Method org/xnio/Sequence.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     240: checkcast     #20                 // class "[Ljava/lang/String;"
     243: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     246: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     249: areturn
     250: aload_0
     251: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     254: aload_1
     255: aload_2
     256: invokeinterface #40,  3           // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     261: areturn
     262: getstatic     #41                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     265: ldc           #42                 // String value
     267: invokeinterface #43,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     272: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #44,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public io.undertow.protocols.ssl.UndertowSslConnection accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #45,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       9: checkcast     #46                 // class org/xnio/StreamConnection
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_1
      20: ldc           #47                 // class java/net/InetSocketAddress
      22: invokevirtual #48                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      25: checkcast     #47                 // class java/net/InetSocketAddress
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field ssl:Lio/undertow/protocols/ssl/UndertowXnioSsl;
      33: invokevirtual #49                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslContext:()Ljavax/net/ssl/SSLContext;
      36: aload_2
      37: invokestatic  #50                 // Method getHostNameNoResolve:(Ljava/net/InetSocketAddress;)Ljava/lang/String;
      40: aload_2
      41: invokevirtual #51                 // Method java/net/InetSocketAddress.getPort:()I
      44: invokevirtual #52                 // Method javax/net/ssl/SSLContext.createSSLEngine:(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
      47: astore_3
      48: aload_0
      49: getfield      #12                 // Field useClientMode:I
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        4
      62: aload_3
      63: iload         4
      65: invokevirtual #53                 // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
      68: iload         4
      70: ifne          157
      73: aload_0
      74: getfield      #9                  // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      77: astore        5
      79: aload         5
      81: ifnull        157
      84: getstatic     #54                 // Field io/undertow/protocols/ssl/UndertowAcceptingSslChannel$1.$SwitchMap$org$xnio$SslClientAuthMode:[I
      87: aload         5
      89: invokevirtual #55                 // Method org/xnio/SslClientAuthMode.ordinal:()I
      92: iaload
      93: tableswitch   { // 1 to 3
                     1: 120
                     2: 133
                     3: 141
               default: 149
          }
     120: aload_3
     121: iconst_0
     122: invokevirtual #56                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     125: aload_3
     126: iconst_0
     127: invokevirtual #57                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     130: goto          157
     133: aload_3
     134: iconst_1
     135: invokevirtual #57                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     138: goto          157
     141: aload_3
     142: iconst_1
     143: invokevirtual #56                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     146: goto          157
     149: new           #58                 // class java/lang/IllegalStateException
     152: dup
     153: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":()V
     156: athrow
     157: aload_3
     158: aload_0
     159: getfield      #14                 // Field enableSessionCreation:I
     162: ifeq          169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: invokevirtual #60                 // Method javax/net/ssl/SSLEngine.setEnableSessionCreation:(Z)V
     173: aload_0
     174: getfield      #21                 // Field cipherSuites:[Ljava/lang/String;
     177: astore        5
     179: aload         5
     181: ifnull        287
     184: new           #61                 // class java/util/HashSet
     187: dup
     188: aload_3
     189: invokevirtual #62                 // Method javax/net/ssl/SSLEngine.getSupportedCipherSuites:()[Ljava/lang/String;
     192: invokestatic  #63                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     195: invokespecial #64                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     198: astore        6
     200: new           #65                 // class java/util/ArrayList
     203: dup
     204: invokespecial #66                 // Method java/util/ArrayList."<init>":()V
     207: astore        7
     209: aload         5
     211: astore        8
     213: aload         8
     215: arraylength
     216: istore        9
     218: iconst_0
     219: istore        10
     221: iload         10
     223: iload         9
     225: if_icmpge     263
     228: aload         8
     230: iload         10
     232: aaload
     233: astore        11
     235: aload         6
     237: aload         11
     239: invokeinterface #67,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     244: ifeq          257
     247: aload         7
     249: aload         11
     251: invokeinterface #68,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     256: pop
     257: iinc          10, 1
     260: goto          221
     263: aload_3
     264: aload         7
     266: aload         7
     268: invokeinterface #69,  1           // InterfaceMethod java/util/List.size:()I
     273: anewarray     #18                 // class java/lang/String
     276: invokeinterface #70,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     281: checkcast     #20                 // class "[Ljava/lang/String;"
     284: invokevirtual #71                 // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     287: aload_0
     288: getfield      #23                 // Field protocols:[Ljava/lang/String;
     291: astore        6
     293: aload         6
     295: ifnull        401
     298: new           #61                 // class java/util/HashSet
     301: dup
     302: aload_3
     303: invokevirtual #72                 // Method javax/net/ssl/SSLEngine.getSupportedProtocols:()[Ljava/lang/String;
     306: invokestatic  #63                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     309: invokespecial #64                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     312: astore        7
     314: new           #65                 // class java/util/ArrayList
     317: dup
     318: invokespecial #66                 // Method java/util/ArrayList."<init>":()V
     321: astore        8
     323: aload         6
     325: astore        9
     327: aload         9
     329: arraylength
     330: istore        10
     332: iconst_0
     333: istore        11
     335: iload         11
     337: iload         10
     339: if_icmpge     377
     342: aload         9
     344: iload         11
     346: aaload
     347: astore        12
     349: aload         7
     351: aload         12
     353: invokeinterface #67,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     358: ifeq          371
     361: aload         8
     363: aload         12
     365: invokeinterface #68,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     370: pop
     371: iinc          11, 1
     374: goto          335
     377: aload_3
     378: aload         8
     380: aload         8
     382: invokeinterface #69,  1           // InterfaceMethod java/util/List.size:()I
     387: anewarray     #18                 // class java/lang/String
     390: invokeinterface #70,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     395: checkcast     #20                 // class "[Ljava/lang/String;"
     398: invokevirtual #73                 // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
     401: aload_0
     402: aload_1
     403: aload_3
     404: invokevirtual #74                 // Method accept:(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;)Lio/undertow/protocols/ssl/UndertowSslConnection;
     407: areturn

  protected io.undertow.protocols.ssl.UndertowSslConnection accept(org.xnio.StreamConnection, javax.net.ssl.SSLEngine) throws java.io.IOException;
    Code:
       0: new           #75                 // class io/undertow/protocols/ssl/UndertowSslConnection
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #4                  // Field applicationBufferPool:Lio/undertow/connector/ByteBufferPool;
      10: invokespecial #76                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;)V
      13: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #26                 // Field closeSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #77,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isOpen:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #78,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.close:()V
       9: return

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #79                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #67,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          25
      12: aload_0
      13: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
      16: aload_1
      17: invokeinterface #80,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.supportsOption:(Lorg/xnio/Option;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #6                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     16
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field clientAuthMode:Lorg/xnio/SslClientAuthMode;
      12: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: getstatic     #10                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      20: if_acmpne     43
      23: aload_1
      24: aload_0
      25: getfield      #12                 // Field useClientMode:I
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: areturn
      43: aload_1
      44: getstatic     #13                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      47: if_acmpne     70
      50: aload_1
      51: aload_0
      52: getfield      #14                 // Field enableSessionCreation:I
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      66: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn
      70: aload_1
      71: getstatic     #15                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      74: if_acmpne     99
      77: aload_0
      78: getfield      #21                 // Field cipherSuites:[Ljava/lang/String;
      81: astore_2
      82: aload_2
      83: ifnonnull     90
      86: aconst_null
      87: goto          98
      90: aload_1
      91: aload_2
      92: invokestatic  #81                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
      95: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      98: areturn
      99: aload_1
     100: getstatic     #22                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
     103: if_acmpne     128
     106: aload_0
     107: getfield      #23                 // Field protocols:[Ljava/lang/String;
     110: astore_2
     111: aload_2
     112: ifnonnull     119
     115: aconst_null
     116: goto          127
     119: aload_1
     120: aload_2
     121: invokestatic  #81                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
     124: invokevirtual #30                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_0
     129: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
     132: aload_1
     133: invokeinterface #82,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
     138: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>> getAcceptSetter();
    Code:
       0: aload_0
       1: getfield      #28                 // Field acceptSetter:Lorg/xnio/ChannelListener$Setter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #83,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
       9: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #84,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      10: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #85,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
       9: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #86,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #87,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isAcceptResumed:()Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #88,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.wakeupAccepts:()V
       9: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #89,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
       9: return

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #90,  4           // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #91,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpServer:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #92,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  private static java.lang.String getHostNameNoResolve(java.net.InetSocketAddress);
    Code:
       0: getstatic     #93                 // Field org/xnio/Xnio.NIO2:Z
       3: ifeq          11
       6: aload_0
       7: invokevirtual #94                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      10: areturn
      11: aload_0
      12: invokevirtual #95                 // Method java/net/InetSocketAddress.isUnresolved:()Z
      15: ifeq          26
      18: aload_0
      19: invokevirtual #96                 // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
      22: astore_1
      23: goto          75
      26: aload_0
      27: invokevirtual #97                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      30: astore_2
      31: aload_2
      32: invokevirtual #98                 // Method java/net/InetAddress.toString:()Ljava/lang/String;
      35: astore_3
      36: aload_3
      37: bipush        47
      39: invokevirtual #99                 // Method java/lang/String.indexOf:(I)I
      42: istore        4
      44: iload         4
      46: iconst_m1
      47: if_icmpeq     55
      50: iload         4
      52: ifne          67
      55: aload_3
      56: iload         4
      58: iconst_1
      59: iadd
      60: invokevirtual #100                // Method java/lang/String.substring:(I)Ljava/lang/String;
      63: astore_1
      64: goto          75
      67: aload_3
      68: iconst_0
      69: iload         4
      71: invokevirtual #101                // Method java/lang/String.substring:(II)Ljava/lang/String;
      74: astore_1
      75: aload_1
      76: areturn

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #102                // Method accept:()Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #102                // Method accept:()Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  static {};
    Code:
       0: ldc           #103                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
       2: ldc           #8                  // class org/xnio/SslClientAuthMode
       4: ldc           #104                // String clientAuthMode
       6: invokestatic  #105                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #29                 // Field clientAuthModeUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #103                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      14: ldc           #106                // String useClientMode
      16: invokestatic  #107                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #33                 // Field useClientModeUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: ldc           #103                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      24: ldc           #108                // String enableSessionCreation
      26: invokestatic  #107                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: putstatic     #37                 // Field enableSessionCreationUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: ldc           #103                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      34: ldc           #20                 // class "[Ljava/lang/String;"
      36: ldc           #109                // String cipherSuites
      38: invokestatic  #105                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      41: putstatic     #38                 // Field cipherSuitesUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      44: ldc           #103                // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
      46: ldc           #20                 // class "[Ljava/lang/String;"
      48: ldc           #110                // String protocols
      50: invokestatic  #105                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      53: putstatic     #39                 // Field protocolsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      56: invokestatic  #111                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      59: getstatic     #6                  // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
      62: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      65: getstatic     #10                 // Field org/xnio/Options.SSL_USE_CLIENT_MODE:Lorg/xnio/Option;
      68: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      71: getstatic     #13                 // Field org/xnio/Options.SSL_ENABLE_SESSION_CREATION:Lorg/xnio/Option;
      74: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      77: getstatic     #15                 // Field org/xnio/Options.SSL_ENABLED_CIPHER_SUITES:Lorg/xnio/Option;
      80: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      83: getstatic     #22                 // Field org/xnio/Options.SSL_ENABLED_PROTOCOLS:Lorg/xnio/Option;
      86: invokevirtual #112                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      89: invokevirtual #113                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      92: putstatic     #79                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      95: return
}
