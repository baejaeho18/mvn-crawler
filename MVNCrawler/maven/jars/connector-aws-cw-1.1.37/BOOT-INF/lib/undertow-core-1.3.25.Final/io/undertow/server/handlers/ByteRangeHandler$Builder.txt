Compiled from "ByteRangeHandler.java"
public class io.undertow.server.handlers.ByteRangeHandler$Builder implements io.undertow.server.handlers.builder.HandlerBuilder {
  public io.undertow.server.handlers.ByteRangeHandler$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name();
    Code:
       0: ldc           #2                  // String byte-range
       2: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> parameters();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #5                  // String send-accept-ranges
      11: getstatic     #6                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      14: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn

  public java.util.Set<java.lang.String> requiredParameters();
    Code:
       0: invokestatic  #8                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public java.lang.String defaultParameter();
    Code:
       0: ldc           #5                  // String send-accept-ranges
       2: areturn

  public io.undertow.server.HandlerWrapper build(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #5                  // String send-accept-ranges
       3: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class java/lang/Boolean
      11: astore_2
      12: new           #11                 // class io/undertow/server/handlers/ByteRangeHandler$Wrapper
      15: dup
      16: aload_2
      17: ifnull        31
      20: aload_2
      21: invokevirtual #12                 // Method java/lang/Boolean.booleanValue:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokespecial #13                 // Method io/undertow/server/handlers/ByteRangeHandler$Wrapper."<init>":(Z)V
      35: areturn
}
