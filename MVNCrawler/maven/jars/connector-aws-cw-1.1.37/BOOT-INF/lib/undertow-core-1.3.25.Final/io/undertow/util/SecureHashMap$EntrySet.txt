Compiled from "SecureHashMap.java"
final class io.undertow.util.SecureHashMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>> implements java.util.Set<java.util.Map$Entry<K, V>> {
  final io.undertow.util.SecureHashMap this$0;

  io.undertow.util.SecureHashMap$EntrySet(io.undertow.util.SecureHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: new           #3                  // class io/undertow/util/SecureHashMap$EntryIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       8: invokespecial #4                  // Method io/undertow/util/SecureHashMap$EntryIterator."<init>":(Lio/undertow/util/SecureHashMap;)V
      11: areturn

  public boolean add(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: iconst_1
      17: aload_0
      18: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
      21: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$300:(Lio/undertow/util/SecureHashMap;)Lio/undertow/util/SecureHashMap$Table;
      24: invokestatic  #8                  // Method io/undertow/util/SecureHashMap.access$600:(Lio/undertow/util/SecureHashMap;Ljava/lang/Object;Ljava/lang/Object;ZLio/undertow/util/SecureHashMap$Table;)Ljava/lang/Object;
      27: invokestatic  #9                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      30: if_acmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class java/util/Map$Entry
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #10                 // class java/util/Map$Entry
      12: invokevirtual #11                 // Method remove:(Ljava/util/Map$Entry;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean remove(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: aload_0
      17: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
      20: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$300:(Lio/undertow/util/SecureHashMap;)Lio/undertow/util/SecureHashMap$Table;
      23: invokestatic  #12                 // Method io/undertow/util/SecureHashMap.access$700:(Lio/undertow/util/SecureHashMap;Ljava/lang/Object;Ljava/lang/Object;Lio/undertow/util/SecureHashMap$Table;)Z
      26: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #13                 // Method io/undertow/util/SecureHashMap.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class java/util/Map$Entry
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #10                 // class java/util/Map$Entry
      12: invokevirtual #14                 // Method contains:(Ljava/util/Map$Entry;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean contains(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       8: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$300:(Lio/undertow/util/SecureHashMap;)Lio/undertow/util/SecureHashMap$Table;
      11: aload_1
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      17: invokestatic  #15                 // Method io/undertow/util/SecureHashMap.access$800:(Lio/undertow/util/SecureHashMap;Lio/undertow/util/SecureHashMap$Table;Ljava/lang/Object;)Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      27: astore_3
      28: aload_2
      29: ifnonnull     44
      32: aload_3
      33: ifnonnull     40
      36: iconst_1
      37: goto          49
      40: iconst_0
      41: goto          49
      44: aload_2
      45: aload_3
      46: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #17                 // Method io/undertow/util/SecureHashMap.size:()I
       7: ireturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class java/util/Map$Entry
       5: invokevirtual #18                 // Method add:(Ljava/util/Map$Entry;)Z
       8: ireturn
}
