Compiled from "ChunkedStreamSinkConduit.java"
public class io.undertow.conduits.ChunkedStreamSinkConduit extends org.xnio.conduits.AbstractStreamSinkConduit<org.xnio.conduits.StreamSinkConduit> {
  public static final io.undertow.util.AttachmentKey<io.undertow.util.HeaderMap> TRAILERS;

  private final io.undertow.util.HeaderMap responseHeaders;

  private final io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSinkConduit> finishListener;

  private final int config;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private static final byte[] LAST_CHUNK;

  private static final byte[] CRLF;

  private final io.undertow.util.Attachable attachable;

  private int state;

  private int chunkleft;

  private final java.nio.ByteBuffer chunkingBuffer;

  private final java.nio.ByteBuffer chunkingSepBuffer;

  private io.undertow.connector.PooledByteBuffer lastChunkBuffer;

  private static final int CONF_FLAG_CONFIGURABLE;

  private static final int CONF_FLAG_PASS_CLOSE;

  private static final int FLAG_WRITES_SHUTDOWN;

  private static final int FLAG_NEXT_SHUTDOWN;

  private static final int FLAG_WRITTEN_FIRST_CHUNK;

  private static final int FLAG_FIRST_DATA_WRITTEN;

  private static final int FLAG_FINISHED;

  private static final byte[] DIGITS;

  public io.undertow.conduits.ChunkedStreamSinkConduit(org.xnio.conduits.StreamSinkConduit, io.undertow.connector.ByteBufferPool, boolean, boolean, io.undertow.util.HeaderMap, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSinkConduit>, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/conduits/AbstractStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field chunkleft:I
      10: aload_0
      11: bipush        12
      13: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      24: aload_0
      25: aload         5
      27: putfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      30: aload_0
      31: aload         6
      33: putfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      36: aload_0
      37: aload         7
      39: putfield      #8                  // Field attachable:Lio/undertow/util/Attachable;
      42: aload_0
      43: iload_3
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: iload         4
      54: ifeq          61
      57: iconst_2
      58: goto          62
      61: iconst_0
      62: ior
      63: putfield      #10                 // Field config:I
      66: aload_0
      67: iconst_2
      68: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      71: putfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      74: aload_0
      75: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      81: pop
      82: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method doWrite:(Ljava/nio/ByteBuffer;)I
       5: ireturn

  int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: dup
      30: getfield      #14                 // Field state:I
      33: bipush        16
      35: ior
      36: putfield      #14                 // Field state:I
      39: aload_1
      40: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:()I
      43: istore_2
      44: aload_0
      45: getfield      #2                  // Field chunkleft:I
      48: ifne          148
      51: aload_0
      52: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      58: ifne          148
      61: aload_0
      62: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      65: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      68: pop
      69: aload_0
      70: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      73: aload_1
      74: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      77: invokestatic  #22                 // Method putIntAsHexString:(Ljava/nio/ByteBuffer;I)V
      80: aload_0
      81: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      84: getstatic     #23                 // Field CRLF:[B
      87: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      90: pop
      91: aload_0
      92: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
      95: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      98: pop
      99: aload_0
     100: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     103: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     106: pop
     107: aload_0
     108: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     111: getstatic     #23                 // Field CRLF:[B
     114: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     117: pop
     118: aload_0
     119: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     122: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     125: pop
     126: aload_0
     127: dup
     128: getfield      #14                 // Field state:I
     131: bipush        8
     133: ior
     134: putfield      #14                 // Field state:I
     137: aload_0
     138: aload_1
     139: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     142: putfield      #2                  // Field chunkleft:I
     145: goto          173
     148: aload_1
     149: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     152: aload_0
     153: getfield      #2                  // Field chunkleft:I
     156: if_icmple     173
     159: aload_1
     160: aload_0
     161: getfield      #2                  // Field chunkleft:I
     164: aload_1
     165: invokevirtual #25                 // Method java/nio/ByteBuffer.position:()I
     168: iadd
     169: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     172: pop
     173: aload_0
     174: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     177: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     180: istore_3
     181: aload_0
     182: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     185: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     188: istore        4
     190: iload_3
     191: ifgt          206
     194: iload         4
     196: ifgt          206
     199: aload_0
     200: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     203: ifnull        453
     206: aload_1
     207: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     210: istore        5
     212: aload_0
     213: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     216: ifnonnull     266
     219: iconst_3
     220: anewarray     #28                 // class java/nio/ByteBuffer
     223: dup
     224: iconst_0
     225: aload_0
     226: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     229: aastore
     230: dup
     231: iconst_1
     232: aload_1
     233: aastore
     234: dup
     235: iconst_2
     236: aload_0
     237: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
     240: aastore
     241: astore        8
     243: aload_0
     244: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     247: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     250: aload         8
     252: iconst_0
     253: aload         8
     255: arraylength
     256: invokeinterface #31,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     261: lstore        6
     263: goto          400
     266: iconst_3
     267: anewarray     #28                 // class java/nio/ByteBuffer
     270: dup
     271: iconst_0
     272: aload_0
     273: getfield      #4                  // Field chunkingBuffer:Ljava/nio/ByteBuffer;
     276: aastore
     277: dup
     278: iconst_1
     279: aload_1
     280: aastore
     281: dup
     282: iconst_2
     283: aload_0
     284: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     287: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     292: aastore
     293: astore        8
     295: aload_0
     296: getfield      #14                 // Field state:I
     299: iconst_2
     300: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
     303: ifeq          329
     306: aload_0
     307: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     310: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     313: aload         8
     315: iconst_0
     316: aload         8
     318: arraylength
     319: invokeinterface #33,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.writeFinal:([Ljava/nio/ByteBuffer;II)J
     324: lstore        6
     326: goto          349
     329: aload_0
     330: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     333: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     336: aload         8
     338: iconst_0
     339: aload         8
     341: arraylength
     342: invokeinterface #31,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     347: lstore        6
     349: aload_1
     350: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     353: ifne          366
     356: aload_0
     357: dup
     358: getfield      #14                 // Field state:I
     361: iconst_1
     362: ior
     363: putfield      #14                 // Field state:I
     366: aload_0
     367: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     370: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     375: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     378: ifne          400
     381: aload_0
     382: dup
     383: getfield      #14                 // Field state:I
     386: iconst_4
     387: ior
     388: putfield      #14                 // Field state:I
     391: aload_0
     392: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     395: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     400: iload         5
     402: aload_1
     403: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     406: isub
     407: istore        8
     409: aload_0
     410: dup
     411: getfield      #2                  // Field chunkleft:I
     414: iload         8
     416: isub
     417: putfield      #2                  // Field chunkleft:I
     420: lload         6
     422: iload_3
     423: i2l
     424: lcmp
     425: ifge          440
     428: iconst_0
     429: istore        9
     431: aload_1
     432: iload_2
     433: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     436: pop
     437: iload         9
     439: ireturn
     440: iload         8
     442: istore        9
     444: aload_1
     445: iload_2
     446: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     449: pop
     450: iload         9
     452: ireturn
     453: aload_0
     454: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     457: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     460: aload_1
     461: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     466: istore        5
     468: aload_0
     469: dup
     470: getfield      #2                  // Field chunkleft:I
     473: iload         5
     475: isub
     476: putfield      #2                  // Field chunkleft:I
     479: iload         5
     481: istore        6
     483: aload_1
     484: iload_2
     485: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     488: pop
     489: iload         6
     491: ireturn
     492: astore        10
     494: aload_1
     495: iload_2
     496: invokevirtual #26                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     499: pop
     500: aload         10
     502: athrow
    Exception table:
       from    to  target type
         173   431   492   any
         440   444   492   any
         453   483   492   any
         492   494   492   any

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        16
       7: aload_0
       8: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      16: aload_0
      17: getfield      #14                 // Field state:I
      20: bipush        32
      22: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
      25: ifeq          32
      28: aload_0
      29: invokespecial #37                 // Method invokeFinishListener:()V
      32: aload_0
      33: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSinkConduit.truncateWrites:()V
      36: goto          46
      39: astore_1
      40: aload_0
      41: invokespecial #38                 // Method org/xnio/conduits/AbstractStreamSinkConduit.truncateWrites:()V
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    32    39   any

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     35
       9: aload_1
      10: iload         4
      12: aaload
      13: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          29
      19: aload_0
      20: aload_1
      21: iload         4
      23: aaload
      24: invokevirtual #39                 // Method write:(Ljava/nio/ByteBuffer;)I
      27: i2l
      28: lreturn
      29: iinc          4, 1
      32: goto          3
      35: lconst_0
      36: lreturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #40                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          13
       7: aload_0
       8: invokevirtual #41                 // Method terminateWrites:()V
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      17: ifnonnull     25
      20: aload_0
      21: iconst_1
      22: invokespecial #42                 // Method createLastChunk:(Z)V
      25: aload_0
      26: aload_1
      27: invokevirtual #13                 // Method doWrite:(Ljava/nio/ByteBuffer;)I
      30: ireturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: lload_2
      21: lload         4
      23: new           #43                 // class org/xnio/conduits/ConduitWritableByteChannel
      26: dup
      27: aload_0
      28: invokespecial #44                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      31: invokevirtual #45                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      34: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          19
      11: new           #16                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #17                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: lload_2
      21: aload         4
      23: new           #43                 // class org/xnio/conduits/ConduitWritableByteChannel
      26: dup
      27: aload_0
      28: invokespecial #44                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      31: invokestatic  #46                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      34: lreturn

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field state:I
       5: bipush        16
       7: ior
       8: putfield      #14                 // Field state:I
      11: aload_0
      12: getfield      #14                 // Field state:I
      15: iconst_1
      16: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifeq          184
      22: aload_0
      23: getfield      #14                 // Field state:I
      26: iconst_4
      27: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      30: ifeq          68
      33: aload_0
      34: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      37: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      40: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      45: istore_1
      46: iload_1
      47: ifeq          66
      50: aload_0
      51: getfield      #14                 // Field state:I
      54: bipush        32
      56: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
      59: ifeq          66
      62: aload_0
      63: invokespecial #37                 // Method invokeFinishListener:()V
      66: iload_1
      67: ireturn
      68: aload_0
      69: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      72: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      75: aload_0
      76: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      79: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      84: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      89: pop
      90: aload_0
      91: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
      94: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      99: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     102: ifne          182
     105: aload_0
     106: getfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     109: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     114: aload_0
     115: getfield      #10                 // Field config:I
     118: iconst_2
     119: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
     122: ifeq          137
     125: aload_0
     126: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     129: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     132: invokeinterface #48,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     137: aload_0
     138: dup
     139: getfield      #14                 // Field state:I
     142: iconst_4
     143: ior
     144: putfield      #14                 // Field state:I
     147: aload_0
     148: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     151: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     154: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     159: istore_1
     160: iload_1
     161: ifeq          180
     164: aload_0
     165: getfield      #14                 // Field state:I
     168: bipush        32
     170: invokestatic  #36                 // Method org/xnio/Bits.allAreClear:(II)Z
     173: ifeq          180
     176: aload_0
     177: invokespecial #37                 // Method invokeFinishListener:()V
     180: iload_1
     181: ireturn
     182: iconst_0
     183: ireturn
     184: aload_0
     185: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     188: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     191: invokeinterface #47,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     196: ireturn

  private void invokeFinishListener();
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field state:I
       5: bipush        32
       7: ior
       8: putfield      #14                 // Field state:I
      11: aload_0
      12: getfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      15: ifnull        28
      18: aload_0
      19: getfield      #7                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      22: aload_0
      23: invokeinterface #49,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      28: return

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: iconst_1
       5: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #2                  // Field chunkleft:I
      16: ifeq          45
      19: getstatic     #50                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      22: ldc           #51                 // String Channel closed mid-chunk
      24: iconst_0
      25: anewarray     #52                 // class java/lang/Object
      28: invokeinterface #53,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
      37: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
      40: invokeinterface #54,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.truncateWrites:()V
      45: aload_0
      46: getfield      #14                 // Field state:I
      49: bipush        16
      51: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      54: ifne          117
      57: aload_0
      58: getfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      61: getstatic     #55                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      64: ldc           #56                 // String 0
      66: invokevirtual #57                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      69: pop
      70: aload_0
      71: getfield      #6                  // Field responseHeaders:Lio/undertow/util/HeaderMap;
      74: getstatic     #58                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      77: invokevirtual #59                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      80: pop
      81: aload_0
      82: dup
      83: getfield      #14                 // Field state:I
      86: iconst_5
      87: ior
      88: putfield      #14                 // Field state:I
      91: aload_0
      92: getfield      #14                 // Field state:I
      95: iconst_2
      96: invokestatic  #15                 // Method org/xnio/Bits.anyAreSet:(II)Z
      99: ifeq          132
     102: aload_0
     103: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
     106: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
     109: invokeinterface #48,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     114: goto          132
     117: aload_0
     118: iconst_0
     119: invokespecial #42                 // Method createLastChunk:(Z)V
     122: aload_0
     123: dup
     124: getfield      #14                 // Field state:I
     127: iconst_1
     128: ior
     129: putfield      #14                 // Field state:I
     132: return

  private void createLastChunk(boolean) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #60,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: astore_3
      17: iload_1
      18: ifeq          32
      21: aload_3
      22: getstatic     #23                 // Field CRLF:[B
      25: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      28: pop
      29: goto          51
      32: aload_0
      33: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      39: ifeq          51
      42: aload_3
      43: aload_0
      44: getfield      #11                 // Field chunkingSepBuffer:Ljava/nio/ByteBuffer;
      47: invokevirtual #61                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      50: pop
      51: aload_3
      52: getstatic     #62                 // Field LAST_CHUNK:[B
      55: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      58: pop
      59: aload_0
      60: getfield      #8                  // Field attachable:Lio/undertow/util/Attachable;
      63: getstatic     #63                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
      66: invokeinterface #64,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      71: checkcast     #65                 // class io/undertow/util/HeaderMap
      74: astore        4
      76: aload         4
      78: ifnull        208
      81: aload         4
      83: invokevirtual #66                 // Method io/undertow/util/HeaderMap.size:()I
      86: ifeq          208
      89: aload         4
      91: invokevirtual #67                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      94: astore        5
      96: aload         5
      98: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          197
     106: aload         5
     108: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #70                 // class io/undertow/util/HeaderValues
     116: astore        6
     118: aload         6
     120: invokevirtual #71                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     123: astore        7
     125: aload         7
     127: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     132: ifeq          194
     135: aload         7
     137: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     142: checkcast     #72                 // class java/lang/String
     145: astore        8
     147: aload         6
     149: invokevirtual #73                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     152: aload_3
     153: invokevirtual #74                 // Method io/undertow/util/HttpString.appendTo:(Ljava/nio/ByteBuffer;)V
     156: aload_3
     157: bipush        58
     159: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     162: pop
     163: aload_3
     164: bipush        32
     166: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     169: pop
     170: aload_3
     171: aload         8
     173: getstatic     #76                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
     176: invokevirtual #77                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     179: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     182: pop
     183: aload_3
     184: getstatic     #23                 // Field CRLF:[B
     187: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     190: pop
     191: goto          125
     194: goto          96
     197: aload_3
     198: getstatic     #23                 // Field CRLF:[B
     201: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     204: pop
     205: goto          216
     208: aload_3
     209: getstatic     #23                 // Field CRLF:[B
     212: invokevirtual #24                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     215: pop
     216: aload_3
     217: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     220: pop
     221: aload_3
     222: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     225: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     228: astore        5
     230: aload         5
     232: aload_3
     233: invokevirtual #61                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     236: pop
     237: aload         5
     239: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     242: pop
     243: aload_0
     244: new           #78                 // class io/undertow/util/ImmediatePooledByteBuffer
     247: dup
     248: aload         5
     250: invokespecial #79                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     253: putfield      #27                 // Field lastChunkBuffer:Lio/undertow/connector/PooledByteBuffer;
     256: aload_2
     257: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     262: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
       7: invokeinterface #80,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      12: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #30                 // class org/xnio/conduits/StreamSinkConduit
       7: lload_1
       8: aload_3
       9: invokeinterface #81,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      14: return

  private static void putIntAsHexString(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: bipush        24
       3: ishr
       4: i2b
       5: istore_2
       6: iload_1
       7: bipush        16
       9: ishr
      10: i2b
      11: istore_3
      12: iload_1
      13: bipush        8
      15: ishr
      16: i2b
      17: istore        4
      19: iload_1
      20: i2b
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload_2
      27: ifeq          60
      30: aload_0
      31: getstatic     #82                 // Field DIGITS:[B
      34: sipush        240
      37: iload_2
      38: iand
      39: iconst_4
      40: iushr
      41: baload
      42: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      45: getstatic     #82                 // Field DIGITS:[B
      48: bipush        15
      50: iload_2
      51: iand
      52: baload
      53: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      56: pop
      57: iconst_1
      58: istore        6
      60: iload         6
      62: ifne          69
      65: iload_3
      66: ifeq          99
      69: aload_0
      70: getstatic     #82                 // Field DIGITS:[B
      73: sipush        240
      76: iload_3
      77: iand
      78: iconst_4
      79: iushr
      80: baload
      81: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      84: getstatic     #82                 // Field DIGITS:[B
      87: bipush        15
      89: iload_3
      90: iand
      91: baload
      92: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      95: pop
      96: iconst_1
      97: istore        6
      99: iload         6
     101: ifne          109
     104: iload         4
     106: ifeq          138
     109: aload_0
     110: getstatic     #82                 // Field DIGITS:[B
     113: sipush        240
     116: iload         4
     118: iand
     119: iconst_4
     120: iushr
     121: baload
     122: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     125: getstatic     #82                 // Field DIGITS:[B
     128: bipush        15
     130: iload         4
     132: iand
     133: baload
     134: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     137: pop
     138: aload_0
     139: getstatic     #82                 // Field DIGITS:[B
     142: sipush        240
     145: iload         5
     147: iand
     148: iconst_4
     149: iushr
     150: baload
     151: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     154: getstatic     #82                 // Field DIGITS:[B
     157: bipush        15
     159: iload         5
     161: iand
     162: baload
     163: invokevirtual #75                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     166: pop
     167: return

  static {};
    Code:
       0: getstatic     #63                 // Field io/undertow/server/protocol/http/HttpAttachments.RESPONSE_TRAILERS:Lio/undertow/util/AttachmentKey;
       3: putstatic     #83                 // Field TRAILERS:Lio/undertow/util/AttachmentKey;
       6: iconst_3
       7: newarray       byte
       9: dup
      10: iconst_0
      11: bipush        48
      13: bastore
      14: dup
      15: iconst_1
      16: bipush        13
      18: bastore
      19: dup
      20: iconst_2
      21: bipush        10
      23: bastore
      24: putstatic     #62                 // Field LAST_CHUNK:[B
      27: iconst_2
      28: newarray       byte
      30: dup
      31: iconst_0
      32: bipush        13
      34: bastore
      35: dup
      36: iconst_1
      37: bipush        10
      39: bastore
      40: putstatic     #23                 // Field CRLF:[B
      43: bipush        16
      45: newarray       byte
      47: dup
      48: iconst_0
      49: bipush        48
      51: bastore
      52: dup
      53: iconst_1
      54: bipush        49
      56: bastore
      57: dup
      58: iconst_2
      59: bipush        50
      61: bastore
      62: dup
      63: iconst_3
      64: bipush        51
      66: bastore
      67: dup
      68: iconst_4
      69: bipush        52
      71: bastore
      72: dup
      73: iconst_5
      74: bipush        53
      76: bastore
      77: dup
      78: bipush        6
      80: bipush        54
      82: bastore
      83: dup
      84: bipush        7
      86: bipush        55
      88: bastore
      89: dup
      90: bipush        8
      92: bipush        56
      94: bastore
      95: dup
      96: bipush        9
      98: bipush        57
     100: bastore
     101: dup
     102: bipush        10
     104: bipush        97
     106: bastore
     107: dup
     108: bipush        11
     110: bipush        98
     112: bastore
     113: dup
     114: bipush        12
     116: bipush        99
     118: bastore
     119: dup
     120: bipush        13
     122: bipush        100
     124: bastore
     125: dup
     126: bipush        14
     128: bipush        101
     130: bastore
     131: dup
     132: bipush        15
     134: bipush        102
     136: bastore
     137: putstatic     #82                 // Field DIGITS:[B
     140: return
}
