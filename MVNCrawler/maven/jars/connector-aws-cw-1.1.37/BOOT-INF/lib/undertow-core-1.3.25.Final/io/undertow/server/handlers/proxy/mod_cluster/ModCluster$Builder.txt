Compiled from "ModCluster.java"
public class io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder {
  private final org.xnio.ssl.XnioSsl xnioSsl;

  private final io.undertow.client.UndertowClient client;

  private final org.xnio.XnioWorker xnioWorker;

  private int maxConnections;

  private int cacheConnections;

  private int requestQueueSize;

  private boolean queueNewRequests;

  private int maxRequestTime;

  private long ttl;

  private boolean useAlias;

  private io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker healthChecker;

  private long healthCheckInterval;

  private long removeBrokenNodes;

  public org.xnio.OptionMap clientOptions;

  private io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder(org.xnio.XnioWorker, io.undertow.client.UndertowClient, org.xnio.ssl.XnioSsl);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #13                 // Field maxConnections:I
      10: aload_0
      11: bipush        8
      13: putfield      #12                 // Field cacheConnections:I
      16: aload_0
      17: iconst_0
      18: putfield      #11                 // Field requestQueueSize:I
      21: aload_0
      22: iconst_0
      23: putfield      #10                 // Field queueNewRequests:Z
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field maxRequestTime:I
      31: aload_0
      32: iconst_0
      33: putfield      #4                  // Field useAlias:Z
      36: aload_0
      37: getstatic     #16                 // Field io/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker.NO_CHECK:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      40: putfield      #7                  // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      43: aload_0
      44: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      47: ldc2_w        #18                 // long 10l
      50: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      53: putfield      #9                  // Field healthCheckInterval:J
      56: aload_0
      57: getstatic     #21                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      60: lconst_1
      61: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      64: putfield      #8                  // Field removeBrokenNodes:J
      67: aload_0
      68: getstatic     #22                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      71: putfield      #23                 // Field clientOptions:Lorg/xnio/OptionMap;
      74: aload_0
      75: aload_3
      76: putfield      #3                  // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
      79: aload_0
      80: aload_2
      81: putfield      #2                  // Field client:Lio/undertow/client/UndertowClient;
      84: aload_0
      85: aload_1
      86: putfield      #14                 // Field xnioWorker:Lorg/xnio/XnioWorker;
      89: return

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster build();
    Code:
       0: new           #24                 // class io/undertow/server/handlers/proxy/mod_cluster/ModCluster
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method io/undertow/server/handlers/proxy/mod_cluster/ModCluster."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/ModCluster$Builder;)V
       8: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setMaxRequestTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxRequestTime:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setHealthCheckInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field healthCheckInterval:J
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setRemoveBrokenNodes(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field removeBrokenNodes:J
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setMaxConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field maxConnections:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setCacheConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field cacheConnections:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setRequestQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field requestQueueSize:I
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setQueueNewRequests(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field queueNewRequests:Z
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setHealthChecker(io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setUseAlias(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useAlias:Z
       5: aload_0
       6: areturn

  public long getTtl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ttl:J
       4: lreturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setTtl(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field ttl:J
       5: aload_0
       6: areturn

  public io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder setClientOptions(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field clientOptions:Lorg/xnio/OptionMap;
       5: aload_0
       6: areturn

  static org.xnio.XnioWorker access$000(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #14                 // Field xnioWorker:Lorg/xnio/XnioWorker;
       4: areturn

  static int access$100(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxConnections:I
       4: ireturn

  static int access$200(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field cacheConnections:I
       4: ireturn

  static int access$300(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field requestQueueSize:I
       4: ireturn

  static boolean access$400(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field queueNewRequests:Z
       4: ireturn

  static long access$500(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field healthCheckInterval:J
       4: lreturn

  static long access$600(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field removeBrokenNodes:J
       4: lreturn

  static io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker access$700(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
       4: areturn

  static int access$800(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxRequestTime:I
       4: ireturn

  static long access$900(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ttl:J
       4: lreturn

  static boolean access$1000(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field useAlias:Z
       4: ireturn

  static org.xnio.ssl.XnioSsl access$1100(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field xnioSsl:Lorg/xnio/ssl/XnioSsl;
       4: areturn

  static io.undertow.client.UndertowClient access$1200(io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field client:Lio/undertow/client/UndertowClient;
       4: areturn

  io.undertow.server.handlers.proxy.mod_cluster.ModCluster$Builder(org.xnio.XnioWorker, io.undertow.client.UndertowClient, org.xnio.ssl.XnioSsl, io.undertow.server.handlers.proxy.mod_cluster.ModCluster$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Lorg/xnio/XnioWorker;Lio/undertow/client/UndertowClient;Lorg/xnio/ssl/XnioSsl;)V
       7: return
}
