Compiled from "Context.java"
class io.undertow.server.handlers.proxy.mod_cluster.Context {
  private static final java.util.concurrent.atomic.AtomicInteger idGen;

  private final int id;

  private final io.undertow.server.handlers.proxy.mod_cluster.Node node;

  private final java.lang.String path;

  private final io.undertow.server.handlers.proxy.mod_cluster.Node$VHostMapping vhost;

  private static final int STOPPED;

  private static final int DISABLED;

  private static final int REQUEST_MASK;

  private volatile int state;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.proxy.mod_cluster.Context> stateUpdater;

  io.undertow.server.handlers.proxy.mod_cluster.Context(java.lang.String, io.undertow.server.handlers.proxy.mod_cluster.Node$VHostMapping, io.undertow.server.handlers.proxy.mod_cluster.Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int -2147483648
       7: putfield      #4                  // Field state:I
      10: aload_0
      11: getstatic     #5                  // Field idGen:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      17: putfield      #7                  // Field id:I
      20: aload_0
      21: aload_1
      22: putfield      #8                  // Field path:Ljava/lang/String;
      25: aload_0
      26: aload_3
      27: putfield      #9                  // Field node:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      30: aload_0
      31: aload_2
      32: putfield      #10                 // Field vhost:Lio/undertow/server/handlers/proxy/mod_cluster/Node$VHostMapping;
      35: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field id:I
       4: ireturn

  public java.lang.String getJVMRoute();
    Code:
       0: aload_0
       1: getfield      #9                  // Field node:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: invokevirtual #11                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getJvmRoute:()Ljava/lang/String;
       7: areturn

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #8                  // Field path:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getVirtualHosts();
    Code:
       0: aload_0
       1: getfield      #10                 // Field vhost:Lio/undertow/server/handlers/proxy/mod_cluster/Node$VHostMapping;
       4: invokevirtual #12                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node$VHostMapping.getAliases:()Ljava/util/List;
       7: areturn

  public int getActiveRequests();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ldc           #13                 // int 1073741823
       6: iand
       7: ireturn

  public io.undertow.server.handlers.proxy.mod_cluster.Context$Status getStatus();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #3                  // int -2147483648
       8: iand
       9: ldc           #3                  // int -2147483648
      11: if_icmpne     18
      14: getstatic     #14                 // Field io/undertow/server/handlers/proxy/mod_cluster/Context$Status.STOPPED:Lio/undertow/server/handlers/proxy/mod_cluster/Context$Status;
      17: areturn
      18: iload_1
      19: ldc           #15                 // int 1073741824
      21: iand
      22: ldc           #15                 // int 1073741824
      24: if_icmpne     31
      27: getstatic     #16                 // Field io/undertow/server/handlers/proxy/mod_cluster/Context$Status.DISABLED:Lio/undertow/server/handlers/proxy/mod_cluster/Context$Status;
      30: areturn
      31: getstatic     #17                 // Field io/undertow/server/handlers/proxy/mod_cluster/Context$Status.ENABLED:Lio/undertow/server/handlers/proxy/mod_cluster/Context$Status;
      34: areturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ldc           #18                 // int -1073741824
       6: invokestatic  #19                 // Method org/xnio/Bits.allAreClear:(II)Z
       9: ireturn

  public boolean isStopped();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ldc           #3                  // int -2147483648
       6: invokestatic  #20                 // Method org/xnio/Bits.allAreSet:(II)Z
       9: ireturn

  public boolean isDisabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ldc           #15                 // int 1073741824
       6: invokestatic  #20                 // Method org/xnio/Bits.allAreSet:(II)Z
       9: ireturn

  io.undertow.server.handlers.proxy.mod_cluster.Node getNode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field node:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: areturn

  io.undertow.server.handlers.proxy.mod_cluster.Node$VHostMapping getVhost();
    Code:
       0: aload_0
       1: getfield      #10                 // Field vhost:Lio/undertow/server/handlers/proxy/mod_cluster/Node$VHostMapping;
       4: areturn

  boolean checkAvailable(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field node:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
       4: iload_1
       5: invokevirtual #21                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.checkAvailable:(Z)Z
       8: ifeq          35
      11: iload_1
      12: ifeq          30
      15: aload_0
      16: invokevirtual #22                 // Method isStopped:()Z
      19: ifne          26
      22: iconst_1
      23: goto          34
      26: iconst_0
      27: goto          34
      30: aload_0
      31: invokevirtual #23                 // Method isEnabled:()Z
      34: ireturn
      35: iconst_0
      36: ireturn

  void enable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #13                 // int 1073741823
       8: iand
       9: istore_2
      10: getstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          0
      22: return

  void disable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #15                 // int 1073741824
       8: ior
       9: istore_2
      10: getstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          0
      22: return

  void stop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #3                  // int -2147483648
       8: ior
       9: istore_2
      10: getstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          0
      22: return

  void handleRequest(io.undertow.server.handlers.proxy.mod_cluster.ModClusterProxyTarget, io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection>, long, java.util.concurrent.TimeUnit, boolean);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method addRequest:()Z
       4: ifeq          42
       7: aload_2
       8: new           #27                 // class io/undertow/server/handlers/proxy/mod_cluster/Context$1
      11: dup
      12: aload_0
      13: invokespecial #28                 // Method io/undertow/server/handlers/proxy/mod_cluster/Context$1."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/Context;)V
      16: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      19: pop
      20: aload_0
      21: getfield      #9                  // Field node:Lio/undertow/server/handlers/proxy/mod_cluster/Node;
      24: invokevirtual #30                 // Method io/undertow/server/handlers/proxy/mod_cluster/Node.getConnectionPool:()Lio/undertow/server/handlers/proxy/ProxyConnectionPool;
      27: aload_1
      28: aload_2
      29: aload_3
      30: lload         4
      32: aload         6
      34: iload         7
      36: invokevirtual #31                 // Method io/undertow/server/handlers/proxy/ProxyConnectionPool.connect:(Lio/undertow/server/handlers/proxy/ProxyClient$ProxyTarget;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyCallback;JLjava/util/concurrent/TimeUnit;Z)V
      39: goto          49
      42: aload_3
      43: aload_2
      44: invokeinterface #32,  2           // InterfaceMethod io/undertow/server/handlers/proxy/ProxyCallback.failed:(Lio/undertow/server/HttpServerExchange;)V
      49: return

  boolean addRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #3                  // int -2147483648
       8: iand
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: iload_1
      15: iconst_1
      16: iadd
      17: istore_2
      18: iload_2
      19: ldc           #13                 // int 1073741823
      21: iand
      22: ldc           #13                 // int 1073741823
      24: if_icmpne     29
      27: iconst_0
      28: ireturn
      29: getstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: aload_0
      33: iload_1
      34: iload_2
      35: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      38: ifeq          0
      41: iconst_1
      42: ireturn

  void requestDone();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #13                 // int 1073741823
       8: iand
       9: ifne          13
      12: return
      13: iload_1
      14: iconst_1
      15: isub
      16: istore_2
      17: getstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: aload_0
      21: iload_1
      22: iload_2
      23: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      26: ifeq          0
      29: return

  static {};
    Code:
       0: new           #33                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #34                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #5                  // Field idGen:Ljava/util/concurrent/atomic/AtomicInteger;
      10: ldc           #2                  // class io/undertow/server/handlers/proxy/mod_cluster/Context
      12: ldc           #35                 // String state
      14: invokestatic  #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #24                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: return
}
