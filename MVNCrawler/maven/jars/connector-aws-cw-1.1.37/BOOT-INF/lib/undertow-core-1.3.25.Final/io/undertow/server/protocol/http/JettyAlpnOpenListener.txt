Compiled from "JettyAlpnOpenListener.java"
class io.undertow.server.protocol.http.JettyAlpnOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.protocol.http.AlpnOpenListener$AlpnDelegateListener {
  private static final java.lang.String PROTOCOL_KEY;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.util.Map<java.lang.String, io.undertow.server.protocol.http.JettyAlpnOpenListener$ListenerEntry> listeners;

  private final java.lang.String fallbackProtocol;

  private volatile io.undertow.server.HttpHandler rootHandler;

  private volatile org.xnio.OptionMap undertowOptions;

  private volatile boolean statisticsEnabled;

  io.undertow.server.protocol.http.JettyAlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/HashMap
       8: dup
       9: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      12: putfield      #3                  // Field listeners:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      20: aload_0
      21: aload_3
      22: putfield      #2                  // Field fallbackProtocol:Ljava/lang/String;
      25: aload_3
      26: ifnull        42
      29: aload         4
      31: ifnull        42
      34: aload_0
      35: aload_3
      36: aload         4
      38: iconst_0
      39: invokevirtual #8                  // Method addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)V
      42: aload_0
      43: aload_2
      44: getstatic     #9                  // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      47: iconst_0
      48: invokevirtual #10                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      51: putfield      #11                 // Field statisticsEnabled:Z
      54: aload_0
      55: aload_2
      56: putfield      #12                 // Field undertowOptions:Lorg/xnio/OptionMap;
      59: return

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #13                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       5: aload_0
       6: getfield      #3                  // Field listeners:Ljava/util/Map;
       9: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          60
      29: aload_2
      30: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #18                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #20                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry
      48: getfield      #21                 // Field io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      51: aload_1
      52: invokeinterface #22,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      57: goto          20
      60: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #12                 // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #23                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #24                 // String undertowOptions
       9: invokeinterface #25,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #12                 // Field undertowOptions:Lorg/xnio/OptionMap;
      20: aload_0
      21: getfield      #3                  // Field listeners:Ljava/util/Map;
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          78
      44: aload_2
      45: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #18                 // class java/util/Map$Entry
      53: astore_3
      54: aload_3
      55: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: checkcast     #20                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry
      63: getfield      #21                 // Field io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      66: aload_0
      67: getfield      #13                 // Field rootHandler:Lio/undertow/server/HttpHandler;
      70: invokeinterface #22,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      75: goto          35
      78: aload_0
      79: aload_1
      80: getstatic     #9                  // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      83: iconst_0
      84: invokevirtual #10                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      87: putfield      #11                 // Field statisticsEnabled:Z
      90: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #11                 // Field statisticsEnabled:Z
       4: ifeq          111
       7: new           #26                 // class java/util/ArrayList
      10: dup
      11: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #3                  // Field listeners:Ljava/util/Map;
      19: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          85
      39: aload_2
      40: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #18                 // class java/util/Map$Entry
      48: astore_3
      49: aload_3
      50: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #20                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry
      58: getfield      #21                 // Field io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      61: invokeinterface #28,  1           // InterfaceMethod io/undertow/server/DelegateOpenListener.getConnectorStatistics:()Lio/undertow/server/ConnectorStatistics;
      66: astore        4
      68: aload         4
      70: ifnull        82
      73: aload_1
      74: aload         4
      76: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          30
      85: new           #30                 // class io/undertow/server/AggregateConnectorStatistics
      88: dup
      89: aload_1
      90: aload_1
      91: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      96: anewarray     #32                 // class io/undertow/server/ConnectorStatistics
      99: invokeinterface #33,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     104: checkcast     #34                 // class "[Lio/undertow/server/ConnectorStatistics;"
     107: invokespecial #35                 // Method io/undertow/server/AggregateConnectorStatistics."<init>":([Lio/undertow/server/ConnectorStatistics;)V
     110: areturn
     111: aconst_null
     112: areturn

  public void addProtocol(java.lang.String, io.undertow.server.DelegateOpenListener, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/Map;
       4: aload_1
       5: new           #20                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry
       8: dup
       9: aload_2
      10: iload_3
      11: invokespecial #36                 // Method io/undertow/server/protocol/http/JettyAlpnOpenListener$ListenerEntry."<init>":(Lio/undertow/server/DelegateOpenListener;I)V
      14: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: getstatic     #38                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #39,  1           // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          25
      11: getstatic     #38                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      14: ldc           #40                 // String Opened connection with %s
      16: aload_1
      17: invokevirtual #41                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      20: invokeinterface #42,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: new           #43                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$AlpnConnectionListener
      28: dup
      29: aload_0
      30: aload_1
      31: aconst_null
      32: invokespecial #44                 // Method io/undertow/server/protocol/http/JettyAlpnOpenListener$AlpnConnectionListener."<init>":(Lio/undertow/server/protocol/http/JettyAlpnOpenListener;Lorg/xnio/StreamConnection;Lio/undertow/server/protocol/http/JettyAlpnOpenListener$1;)V
      35: astore_2
      36: aload_1
      37: invokevirtual #45                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      40: aload_2
      41: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
      44: aload_1
      45: checkcast     #47                 // class org/xnio/ssl/SslConnection
      48: invokestatic  #48                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslEngine:(Lorg/xnio/ssl/SslConnection;)Ljavax/net/ssl/SSLEngine;
      51: astore_3
      52: aload_3
      53: new           #49                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener$1
      56: dup
      57: aload_0
      58: aload_3
      59: aload_1
      60: aload_2
      61: invokespecial #50                 // Method io/undertow/server/protocol/http/JettyAlpnOpenListener$1."<init>":(Lio/undertow/server/protocol/http/JettyAlpnOpenListener;Ljavax/net/ssl/SSLEngine;Lorg/xnio/StreamConnection;Lio/undertow/server/protocol/http/JettyAlpnOpenListener$AlpnConnectionListener;)V
      64: invokestatic  #51                 // Method org/eclipse/jetty/alpn/ALPN.put:(Ljavax/net/ssl/SSLEngine;Lorg/eclipse/jetty/alpn/ALPN$Provider;)V
      67: aload_2
      68: aload_1
      69: invokevirtual #45                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: invokevirtual #52                 // Method io/undertow/server/protocol/http/JettyAlpnOpenListener$AlpnConnectionListener.handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
      75: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #53                 // class org/xnio/StreamConnection
       5: invokevirtual #54                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return

  static java.lang.String access$100();
    Code:
       0: getstatic     #4                  // Field PROTOCOL_KEY:Ljava/lang/String;
       3: areturn

  static java.util.Map access$200(io.undertow.server.protocol.http.JettyAlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field listeners:Ljava/util/Map;
       4: areturn

  static java.lang.String access$300(io.undertow.server.protocol.http.JettyAlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fallbackProtocol:Ljava/lang/String;
       4: areturn

  static io.undertow.connector.ByteBufferPool access$500(io.undertow.server.protocol.http.JettyAlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  static {};
    Code:
       0: new           #55                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #57                 // class io/undertow/server/protocol/http/JettyAlpnOpenListener
       9: invokevirtual #58                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #60                 // String .protocol
      17: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #4                  // Field PROTOCOL_KEY:Ljava/lang/String;
      26: return
}
