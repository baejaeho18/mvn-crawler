Compiled from "OriginHandler.java"
public class io.undertow.server.handlers.OriginHandler implements io.undertow.server.HttpHandler {
  private volatile io.undertow.server.HttpHandler originFailedHandler;

  private volatile java.util.Set<java.lang.String> allowedOrigins;

  private volatile boolean requireAllOrigins;

  private volatile boolean requireOriginHeader;

  private volatile io.undertow.server.HttpHandler next;

  public io.undertow.server.handlers.OriginHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_403:Lio/undertow/server/handlers/ResponseCodeHandler;
       8: putfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
      11: aload_0
      12: new           #4                  // class java/util/HashSet
      15: dup
      16: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      19: putfield      #6                  // Field allowedOrigins:Ljava/util/Set;
      22: aload_0
      23: iconst_1
      24: putfield      #7                  // Field requireAllOrigins:Z
      27: aload_0
      28: iconst_1
      29: putfield      #8                  // Field requireOriginHeader:Z
      32: aload_0
      33: getstatic     #9                  // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
      36: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      39: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #12                 // Field io/undertow/util/Headers.ORIGIN:Lio/undertow/util/HttpString;
       7: invokevirtual #13                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      10: astore_2
      11: aload_2
      12: ifnonnull     58
      15: aload_0
      16: getfield      #8                  // Field requireOriginHeader:Z
      19: ifeq          207
      22: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      25: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
      30: ifeq          47
      33: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      36: ldc           #16                 // String Refusing request for %s due to lack of Origin: header
      38: aload_1
      39: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      42: invokeinterface #18,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
      51: aload_1
      52: invokeinterface #19,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      57: return
      58: iconst_0
      59: istore_3
      60: aload_0
      61: getfield      #7                  // Field requireAllOrigins:Z
      64: istore        4
      66: aload_2
      67: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore        5
      74: aload         5
      76: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          166
      84: aload         5
      86: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #23                 // class java/lang/String
      94: astore        6
      96: aload_0
      97: getfield      #6                  // Field allowedOrigins:Ljava/util/Set;
     100: aload         6
     102: invokeinterface #24,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     107: ifeq          120
     110: iconst_1
     111: istore_3
     112: iload         4
     114: ifne          163
     117: goto          166
     120: iload         4
     122: ifeq          163
     125: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     128: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
     133: ifeq          152
     136: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     139: ldc           #25                 // String Refusing request for %s due to Origin %s not being in the allowed origins list
     141: aload_1
     142: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
     145: aload         6
     147: invokeinterface #26,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload_0
     153: getfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
     156: aload_1
     157: invokeinterface #19,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     162: return
     163: goto          74
     166: iload_3
     167: ifne          207
     170: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     173: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
     178: ifeq          196
     181: getstatic     #14                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     184: ldc           #27                 // String Refusing request for %s as none of the specified origins %s were in the allowed origins list
     186: aload_1
     187: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
     190: aload_2
     191: invokeinterface #26,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     196: aload_0
     197: getfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
     200: aload_1
     201: invokeinterface #19,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     206: return
     207: aload_0
     208: getfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
     211: aload_1
     212: invokeinterface #19,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     217: return

  public synchronized io.undertow.server.handlers.OriginHandler addAllowedOrigin(java.lang.String);
    Code:
       0: new           #4                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #6                  // Field allowedOrigins:Ljava/util/Set;
       8: invokespecial #28                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: aload_2
      22: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      25: putfield      #6                  // Field allowedOrigins:Ljava/util/Set;
      28: aload_0
      29: areturn

  public synchronized io.undertow.server.handlers.OriginHandler addAllowedOrigins(java.util.Collection<java.lang.String>);
    Code:
       0: new           #4                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #6                  // Field allowedOrigins:Ljava/util/Set;
       8: invokespecial #28                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokeinterface #31,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: aload_2
      22: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      25: putfield      #6                  // Field allowedOrigins:Ljava/util/Set;
      28: aload_0
      29: areturn

  public synchronized io.undertow.server.handlers.OriginHandler addAllowedOrigins(java.lang.String...);
    Code:
       0: new           #4                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #6                  // Field allowedOrigins:Ljava/util/Set;
       8: invokespecial #28                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: invokeinterface #31,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      22: pop
      23: aload_0
      24: aload_2
      25: invokestatic  #30                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      28: putfield      #6                  // Field allowedOrigins:Ljava/util/Set;
      31: aload_0
      32: areturn

  public synchronized java.util.Set<java.lang.String> getAllowedOrigins();
    Code:
       0: aload_0
       1: getfield      #6                  // Field allowedOrigins:Ljava/util/Set;
       4: areturn

  public synchronized io.undertow.server.handlers.OriginHandler clearAllowedOrigins();
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       4: putfield      #6                  // Field allowedOrigins:Ljava/util/Set;
       7: aload_0
       8: areturn

  public boolean isRequireAllOrigins();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requireAllOrigins:Z
       4: ireturn

  public io.undertow.server.handlers.OriginHandler setRequireAllOrigins(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field requireAllOrigins:Z
       5: aload_0
       6: areturn

  public boolean isRequireOriginHeader();
    Code:
       0: aload_0
       1: getfield      #8                  // Field requireOriginHeader:Z
       4: ireturn

  public io.undertow.server.handlers.OriginHandler setRequireOriginHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field requireOriginHeader:Z
       5: aload_0
       6: areturn

  public io.undertow.server.HttpHandler getNext();
    Code:
       0: aload_0
       1: getfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.server.handlers.OriginHandler setNext(io.undertow.server.HttpHandler);
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method io/undertow/Handlers.handlerNotNull:(Lio/undertow/server/HttpHandler;)V
       4: aload_0
       5: aload_1
       6: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: areturn

  public io.undertow.server.HttpHandler getOriginFailedHandler();
    Code:
       0: aload_0
       1: getfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.server.handlers.OriginHandler setOriginFailedHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method io/undertow/Handlers.handlerNotNull:(Lio/undertow/server/HttpHandler;)V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field originFailedHandler:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: areturn
}
