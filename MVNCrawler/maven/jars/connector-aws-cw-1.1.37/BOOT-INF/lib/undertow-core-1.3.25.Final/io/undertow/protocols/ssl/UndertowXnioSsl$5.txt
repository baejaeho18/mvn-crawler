Compiled from "UndertowXnioSsl.java"
class io.undertow.protocols.ssl.UndertowXnioSsl$5 implements org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel> {
  final org.xnio.channels.AcceptingChannel val$server;

  final io.undertow.protocols.ssl.UndertowXnioSsl this$0;

  io.undertow.protocols.ssl.UndertowXnioSsl$5(io.undertow.protocols.ssl.UndertowXnioSsl, org.xnio.channels.AcceptingChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/protocols/ssl/UndertowXnioSsl;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public org.xnio.channels.ConnectedSslStreamChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #4,  1            // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       9: checkcast     #5                  // class org/xnio/ssl/SslConnection
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: aconst_null
      18: goto          37
      21: new           #6                  // class org/xnio/channels/AssembledConnectedSslStreamChannel
      24: dup
      25: aload_1
      26: aload_1
      27: invokevirtual #7                  // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: aload_1
      31: invokevirtual #8                  // Method org/xnio/ssl/SslConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      34: invokespecial #9                  // Method org/xnio/channels/AssembledConnectedSslStreamChannel."<init>":(Lorg/xnio/channels/SslChannel;Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;)V
      37: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>> getAcceptSetter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #10,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
       9: aload_0
      10: invokestatic  #11                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
      13: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #12,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
       9: aload_0
      10: invokestatic  #11                 // Method org/xnio/ChannelListeners.getDelegatingSetter:(Lorg/xnio/ChannelListener$Setter;Ljava/nio/channels/Channel;)Lorg/xnio/ChannelListener$Setter;
      13: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #13,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:()Ljava/net/SocketAddress;
       9: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
      10: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #15,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.suspendAccepts:()V
       9: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #16,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #17,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isAcceptResumed:()Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.wakeupAccepts:()V
       9: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #19,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
       9: return

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #20,  4           // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #21,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #22,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #23,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #24,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.close:()V
       9: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.isOpen:()Z
       9: ireturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.supportsOption:(Lorg/xnio/Option;)Z
      10: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/xnio/channels/AcceptingChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      10: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$server:Lorg/xnio/channels/AcceptingChannel;
       4: aload_1
       5: aload_2
       6: invokeinterface #28,  3           // InterfaceMethod org/xnio/channels/AcceptingChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method accept:()Lorg/xnio/channels/ConnectedSslStreamChannel;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method accept:()Lorg/xnio/channels/ConnectedSslStreamChannel;
       4: areturn
}
