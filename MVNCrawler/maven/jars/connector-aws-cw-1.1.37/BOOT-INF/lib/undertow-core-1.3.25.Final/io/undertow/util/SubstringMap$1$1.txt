Compiled from "SubstringMap.java"
class io.undertow.util.SubstringMap$1$1 implements java.util.Iterator<java.lang.String> {
  private java.lang.Object[] map;

  private int pos;

  final java.lang.Object[] val$tMap;

  final int val$startPos;

  final io.undertow.util.SubstringMap$1 this$1;

  io.undertow.util.SubstringMap$1$1(io.undertow.util.SubstringMap$1, java.lang.Object[], int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/undertow/util/SubstringMap$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$tMap:[Ljava/lang/Object;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$startPos:I
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: aload_0
      20: aload_0
      21: getfield      #2                  // Field val$tMap:[Ljava/lang/Object;
      24: putfield      #5                  // Field map:[Ljava/lang/Object;
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field val$startPos:I
      32: putfield      #6                  // Field pos:I
      35: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pos:I
       4: aload_0
       5: getfield      #1                  // Field this$1:Lio/undertow/util/SubstringMap$1;
       8: getfield      #7                  // Field io/undertow/util/SubstringMap$1.this$0:Lio/undertow/util/SubstringMap;
      11: invokestatic  #8                  // Method io/undertow/util/SubstringMap.access$100:(Lio/undertow/util/SubstringMap;)[Ljava/lang/Object;
      14: arraylength
      15: if_icmpge     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.lang.String next();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:[Ljava/lang/Object;
       4: aload_0
       5: getfield      #6                  // Field pos:I
       8: aaload
       9: checkcast     #9                  // class java/lang/String
      12: astore_1
      13: aload_0
      14: dup
      15: getfield      #6                  // Field pos:I
      18: iconst_2
      19: iadd
      20: putfield      #6                  // Field pos:I
      23: aload_0
      24: getfield      #6                  // Field pos:I
      27: aload_0
      28: getfield      #1                  // Field this$1:Lio/undertow/util/SubstringMap$1;
      31: getfield      #7                  // Field io/undertow/util/SubstringMap$1.this$0:Lio/undertow/util/SubstringMap;
      34: invokestatic  #8                  // Method io/undertow/util/SubstringMap.access$100:(Lio/undertow/util/SubstringMap;)[Ljava/lang/Object;
      37: arraylength
      38: if_icmpge     66
      41: aload_0
      42: getfield      #2                  // Field val$tMap:[Ljava/lang/Object;
      45: aload_0
      46: getfield      #6                  // Field pos:I
      49: aaload
      50: ifnonnull     66
      53: aload_0
      54: dup
      55: getfield      #6                  // Field pos:I
      58: iconst_2
      59: iadd
      60: putfield      #6                  // Field pos:I
      63: goto          23
      66: aload_1
      67: areturn

  public void remove();
    Code:
       0: new           #10                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method next:()Ljava/lang/String;
       4: areturn
}
