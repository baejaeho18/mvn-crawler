Compiled from "QueryParameterUtils.java"
public class io.undertow.util.QueryParameterUtils {
  private io.undertow.util.QueryParameterUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String buildQueryString(java.util.Map<java.lang.String, java.util.Deque<java.lang.String>>);
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_0
      11: invokeinterface #4,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          191
      31: aload_3
      32: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #8                  // class java/util/Map$Entry
      40: astore        4
      42: aload         4
      44: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #10                 // class java/util/Deque
      52: invokeinterface #11,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      57: ifeq          101
      60: iload_2
      61: ifeq          69
      64: iconst_0
      65: istore_2
      66: goto          76
      69: aload_1
      70: bipush        38
      72: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: aload         4
      79: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      84: checkcast     #14                 // class java/lang/String
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: bipush        61
      94: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      97: pop
      98: goto          188
     101: aload         4
     103: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     108: checkcast     #10                 // class java/util/Deque
     111: invokeinterface #16,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     116: astore        5
     118: aload         5
     120: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          188
     128: aload         5
     130: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #14                 // class java/lang/String
     138: astore        6
     140: iload_2
     141: ifeq          149
     144: iconst_0
     145: istore_2
     146: goto          156
     149: aload_1
     150: bipush        38
     152: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     155: pop
     156: aload_1
     157: aload         4
     159: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     164: checkcast     #14                 // class java/lang/String
     167: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: pop
     171: aload_1
     172: bipush        61
     174: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: aload         6
     181: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: pop
     185: goto          118
     188: goto          22
     191: aload_1
     192: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: areturn

  public static java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> parseQueryString(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #18                 // Method parseQueryString:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
       5: areturn

  public static java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> parseQueryString(java.lang.String, java.lang.String);
    Code:
       0: new           #19                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iconst_m1
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: aload_0
      22: invokevirtual #21                 // Method java/lang/String.length:()I
      25: if_icmpge     117
      28: aload_0
      29: iload         6
      31: invokevirtual #22                 // Method java/lang/String.charAt:(I)C
      34: istore        7
      36: iload         7
      38: bipush        61
      40: if_icmpne     56
      43: iload         4
      45: iconst_m1
      46: if_icmpne     56
      49: iload         6
      51: istore        4
      53: goto          111
      56: iload         7
      58: bipush        38
      60: if_icmpne     90
      63: aload_0
      64: aload_2
      65: iload_3
      66: iload         4
      68: iload         6
      70: aload_1
      71: iload         5
      73: invokestatic  #23                 // Method handleQueryParameter:(Ljava/lang/String;Ljava/util/Map;IIILjava/lang/String;Z)V
      76: iconst_0
      77: istore        5
      79: iload         6
      81: iconst_1
      82: iadd
      83: istore_3
      84: iconst_m1
      85: istore        4
      87: goto          111
      90: iload         7
      92: bipush        37
      94: if_icmpeq     104
      97: iload         7
      99: bipush        43
     101: if_icmpne     111
     104: aload_1
     105: ifnull        111
     108: iconst_1
     109: istore        5
     111: iinc          6, 1
     114: goto          19
     117: iload_3
     118: aload_0
     119: invokevirtual #21                 // Method java/lang/String.length:()I
     122: if_icmpeq     140
     125: aload_0
     126: aload_2
     127: iload_3
     128: iload         4
     130: aload_0
     131: invokevirtual #21                 // Method java/lang/String.length:()I
     134: aload_1
     135: iload         5
     137: invokestatic  #23                 // Method handleQueryParameter:(Ljava/lang/String;Ljava/util/Map;IIILjava/lang/String;Z)V
     140: aload_2
     141: areturn

  private static void handleQueryParameter(java.lang.String, java.util.Map<java.lang.String, java.util.Deque<java.lang.String>>, int, int, int, java.lang.String, boolean);
    Code:
       0: ldc           #24                 // String
       2: astore        8
       4: iload_3
       5: iconst_m1
       6: if_icmpne     25
       9: aload_0
      10: iload_2
      11: iload         4
      13: aload         5
      15: iload         6
      17: invokestatic  #25                 // Method decodeParam:(Ljava/lang/String;IILjava/lang/String;Z)Ljava/lang/String;
      20: astore        7
      22: goto          52
      25: aload_0
      26: iload_2
      27: iload_3
      28: aload         5
      30: iload         6
      32: invokestatic  #25                 // Method decodeParam:(Ljava/lang/String;IILjava/lang/String;Z)Ljava/lang/String;
      35: astore        7
      37: aload_0
      38: iload_3
      39: iconst_1
      40: iadd
      41: iload         4
      43: aload         5
      45: iload         6
      47: invokestatic  #25                 // Method decodeParam:(Ljava/lang/String;IILjava/lang/String;Z)Ljava/lang/String;
      50: astore        8
      52: aload_1
      53: aload         7
      55: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #10                 // class java/util/Deque
      63: astore        9
      65: aload         9
      67: ifnonnull     90
      70: aload_1
      71: aload         7
      73: new           #27                 // class java/util/ArrayDeque
      76: dup
      77: iconst_1
      78: invokespecial #28                 // Method java/util/ArrayDeque."<init>":(I)V
      81: dup
      82: astore        9
      84: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload         8
      92: ifnull        105
      95: aload         9
      97: aload         8
      99: invokeinterface #30,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     104: pop
     105: return

  private static java.lang.String decodeParam(java.lang.String, int, int, java.lang.String, boolean);
    Code:
       0: iload         4
       2: ifeq          33
       5: aload_0
       6: iload_1
       7: iload_2
       8: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: aload_3
      12: invokestatic  #32                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: astore        5
      17: goto          41
      20: astore        6
      22: aload_0
      23: iload_1
      24: iload_2
      25: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      28: astore        5
      30: goto          41
      33: aload_0
      34: iload_1
      35: iload_2
      36: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: astore        5
      41: aload         5
      43: areturn
    Exception table:
       from    to  target type
           5    17    20   Class java/io/UnsupportedEncodingException

  public static java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> mergeQueryParametersWithNewQueryString(java.util.Map<java.lang.String, java.util.Deque<java.lang.String>>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #34                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #35                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
       8: invokestatic  #36                 // Method mergeQueryParametersWithNewQueryString:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
      11: areturn

  public static java.util.Map<java.lang.String, java.util.Deque<java.lang.String>> mergeQueryParametersWithNewQueryString(java.util.Map<java.lang.String, java.util.Deque<java.lang.String>>, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #18                 // Method parseQueryString:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
       5: astore_3
       6: aload_0
       7: invokeinterface #4,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          126
      29: aload         4
      31: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #8                  // class java/util/Map$Entry
      39: astore        5
      41: aload_3
      42: aload         5
      44: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      54: ifne          91
      57: aload_3
      58: aload         5
      60: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: new           #27                 // class java/util/ArrayDeque
      68: dup
      69: aload         5
      71: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      76: checkcast     #38                 // class java/util/Collection
      79: invokespecial #39                 // Method java/util/ArrayDeque."<init>":(Ljava/util/Collection;)V
      82: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: goto          123
      91: aload_3
      92: aload         5
      94: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      99: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #10                 // class java/util/Deque
     107: aload         5
     109: invokeinterface #9,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     114: checkcast     #38                 // class java/util/Collection
     117: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.addAll:(Ljava/util/Collection;)Z
     122: pop
     123: goto          19
     126: aload_3
     127: areturn

  public static java.lang.String getQueryParamEncoding(io.undertow.server.HttpServerExchange);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #41                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       6: invokevirtual #42                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
       9: astore_2
      10: aload_2
      11: getstatic     #43                 // Field io/undertow/UndertowOptions.DECODE_URL:Lorg/xnio/Option;
      14: iconst_1
      15: invokevirtual #44                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      18: ifeq          38
      21: aload_2
      22: getstatic     #45                 // Field io/undertow/UndertowOptions.URL_CHARSET:Lorg/xnio/Option;
      25: getstatic     #34                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      28: invokevirtual #35                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      31: invokevirtual #46                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #14                 // class java/lang/String
      37: astore_1
      38: aload_1
      39: areturn
}
