Compiled from "UndertowOutputStream.java"
public class io.undertow.io.UndertowOutputStream extends java.io.OutputStream implements io.undertow.io.BufferWritableOutputStream {
  private final io.undertow.server.HttpServerExchange exchange;

  private java.nio.ByteBuffer buffer;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private org.xnio.channels.StreamSinkChannel channel;

  private int state;

  private int written;

  private final long contentLength;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_STARTED;

  private static final int MAX_BUFFERS_TO_ALLOCATE;

  public io.undertow.io.UndertowOutputStream(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      14: putfield      #4                  // Field contentLength:J
      17: return

  public void resetBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_2
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #9,  1            // InterfaceMethod io/undertow/UndertowMessages.cannotResetBuffer:()Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      24: ifnull        41
      27: aload_0
      28: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      31: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      36: aload_0
      37: aconst_null
      38: putfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      41: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #12                 // Method write:([BII)V
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #12                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     6
       5: return
       6: invokestatic  #13                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: aload_0
      10: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      13: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      16: if_acmpne     28
      19: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      22: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowMessages.blockingIoFromIOThread:()Ljava/lang/IllegalStateException;
      27: athrow
      28: aload_0
      29: getfield      #5                  // Field state:I
      32: iconst_1
      33: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
      36: ifeq          48
      39: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      42: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      47: athrow
      48: aload_0
      49: invokespecial #17                 // Method buffer:()Ljava/nio/ByteBuffer;
      52: astore        4
      54: iload_3
      55: i2l
      56: aload_0
      57: getfield      #4                  // Field contentLength:J
      60: aload_0
      61: getfield      #18                 // Field written:I
      64: i2l
      65: lsub
      66: lcmp
      67: ifeq          79
      70: aload         4
      72: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      75: iload_3
      76: if_icmpge     586
      79: aload         4
      81: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      84: iload_3
      85: if_icmpge     561
      88: aload_0
      89: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      92: astore        5
      94: aload         5
      96: ifnonnull     113
      99: aload_0
     100: aload_0
     101: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     104: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     107: dup
     108: astore        5
     110: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     113: aload_0
     114: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     117: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     120: invokevirtual #23                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     123: astore        6
     125: bipush        11
     127: anewarray     #24                 // class java/nio/ByteBuffer
     130: astore        7
     132: bipush        10
     134: anewarray     #25                 // class io/undertow/connector/PooledByteBuffer
     137: astore        8
     139: aload         7
     141: iconst_0
     142: aload         4
     144: aastore
     145: iconst_0
     146: istore        9
     148: aload         4
     150: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     153: istore        10
     155: aload         4
     157: aload_1
     158: iload         9
     160: iload_2
     161: iadd
     162: iload         10
     164: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     167: pop
     168: aload         4
     170: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     173: pop
     174: iload         9
     176: iload         10
     178: iadd
     179: istore        9
     181: iconst_1
     182: istore        11
     184: iconst_0
     185: istore        12
     187: iload         12
     189: bipush        10
     191: if_icmpge     321
     194: aload         6
     196: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     201: astore        13
     203: aload         8
     205: iload         11
     207: iconst_1
     208: isub
     209: aload         13
     211: aastore
     212: aload         7
     214: iload         11
     216: iinc          11, 1
     219: aload         13
     221: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     226: aastore
     227: aload         13
     229: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     234: astore        14
     236: iload_3
     237: iload         9
     239: isub
     240: istore        15
     242: iload         15
     244: aload         14
     246: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     249: if_icmple     288
     252: aload         14
     254: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     257: istore        10
     259: aload         14
     261: aload_1
     262: iload         9
     264: iload_2
     265: iadd
     266: iload         10
     268: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     271: pop
     272: aload         14
     274: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     277: pop
     278: iload         9
     280: iload         10
     282: iadd
     283: istore        9
     285: goto          315
     288: aload         14
     290: aload_1
     291: iload         9
     293: iload_2
     294: iadd
     295: iload_3
     296: iload         9
     298: isub
     299: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     302: pop
     303: iload_3
     304: istore        9
     306: aload         14
     308: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     311: pop
     312: goto          321
     315: iinc          12, 1
     318: goto          187
     321: aload         5
     323: aload         7
     325: iconst_0
     326: iload         11
     328: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     331: pop2
     332: iload         9
     334: iload_3
     335: if_icmpge     466
     338: iconst_0
     339: istore        11
     341: iconst_0
     342: istore        12
     344: iload         12
     346: bipush        11
     348: if_icmpge     452
     351: aload         7
     353: iload         12
     355: aaload
     356: astore        13
     358: aload         13
     360: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     363: pop
     364: iinc          11, 1
     367: iload_3
     368: iload         9
     370: isub
     371: istore        14
     373: iload         14
     375: aload         13
     377: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     380: if_icmple     419
     383: aload         13
     385: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     388: istore        10
     390: aload         13
     392: aload_1
     393: iload         9
     395: iload_2
     396: iadd
     397: iload         10
     399: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     402: pop
     403: aload         13
     405: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     408: pop
     409: iload         9
     411: iload         10
     413: iadd
     414: istore        9
     416: goto          446
     419: aload         13
     421: aload_1
     422: iload         9
     424: iload_2
     425: iadd
     426: iload_3
     427: iload         9
     429: isub
     430: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     433: pop
     434: iload_3
     435: istore        9
     437: aload         13
     439: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     442: pop
     443: goto          452
     446: iinc          12, 1
     449: goto          344
     452: aload         5
     454: aload         7
     456: iconst_0
     457: iload         11
     459: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     462: pop2
     463: goto          332
     466: aload         4
     468: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     471: pop
     472: iconst_0
     473: istore        9
     475: iload         9
     477: aload         8
     479: arraylength
     480: if_icmpge     511
     483: aload         8
     485: iload         9
     487: aaload
     488: astore        10
     490: aload         10
     492: ifnonnull     498
     495: goto          511
     498: aload         10
     500: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     505: iinc          9, 1
     508: goto          475
     511: goto          558
     514: astore        16
     516: iconst_0
     517: istore        17
     519: iload         17
     521: aload         8
     523: arraylength
     524: if_icmpge     555
     527: aload         8
     529: iload         17
     531: aaload
     532: astore        18
     534: aload         18
     536: ifnonnull     542
     539: goto          555
     542: aload         18
     544: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     549: iinc          17, 1
     552: goto          519
     555: aload         16
     557: athrow
     558: goto          608
     561: aload         4
     563: aload_1
     564: iload_2
     565: iload_3
     566: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     569: pop
     570: aload         4
     572: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     575: ifne          608
     578: aload_0
     579: iconst_0
     580: invokespecial #32                 // Method writeBufferBlocking:(Z)V
     583: goto          608
     586: aload         4
     588: aload_1
     589: iload_2
     590: iload_3
     591: invokevirtual #26                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     594: pop
     595: aload         4
     597: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     600: ifne          608
     603: aload_0
     604: iconst_0
     605: invokespecial #32                 // Method writeBufferBlocking:(Z)V
     608: aload_0
     609: iload_3
     610: i2l
     611: invokevirtual #33                 // Method updateWritten:(J)V
     614: return
    Exception table:
       from    to  target type
         139   472   514   any
         514   516   514   any

  public void write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: iconst_0
      21: istore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     58
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: iload_2
      45: aload         6
      47: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
      50: iadd
      51: istore_2
      52: iinc          5, 1
      55: goto          31
      58: iload_2
      59: iconst_1
      60: if_icmpge     64
      63: return
      64: aload_0
      65: getfield      #18                 // Field written:I
      68: ifne          124
      71: iload_2
      72: i2l
      73: aload_0
      74: getfield      #4                  // Field contentLength:J
      77: lcmp
      78: ifne          124
      81: aload_0
      82: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      85: ifnonnull     99
      88: aload_0
      89: aload_0
      90: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      93: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      96: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      99: aload_0
     100: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     103: aload_1
     104: iconst_0
     105: aload_1
     106: arraylength
     107: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     110: pop2
     111: aload_0
     112: dup
     113: getfield      #5                  // Field state:I
     116: iconst_2
     117: ior
     118: putfield      #5                  // Field state:I
     121: goto          247
     124: aload_0
     125: invokespecial #17                 // Method buffer:()Ljava/nio/ByteBuffer;
     128: astore_3
     129: iload_2
     130: aload_3
     131: invokevirtual #19                 // Method java/nio/ByteBuffer.remaining:()I
     134: if_icmpge     149
     137: aload_3
     138: aload_1
     139: iconst_0
     140: aload_1
     141: arraylength
     142: invokestatic  #34                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     145: pop
     146: goto          247
     149: aload_0
     150: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     153: ifnonnull     167
     156: aload_0
     157: aload_0
     158: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     161: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     164: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     167: aload_3
     168: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
     171: ifne          189
     174: aload_0
     175: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     178: aload_1
     179: iconst_0
     180: aload_1
     181: arraylength
     182: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     185: pop2
     186: goto          237
     189: aload_1
     190: arraylength
     191: iconst_1
     192: iadd
     193: anewarray     #24                 // class java/nio/ByteBuffer
     196: astore        4
     198: aload_3
     199: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     202: pop
     203: aload         4
     205: iconst_0
     206: aload_3
     207: aastore
     208: aload_1
     209: iconst_0
     210: aload         4
     212: iconst_1
     213: aload_1
     214: arraylength
     215: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     218: aload_0
     219: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     222: aload         4
     224: iconst_0
     225: aload         4
     227: arraylength
     228: invokestatic  #30                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     231: pop2
     232: aload_3
     233: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     236: pop
     237: aload_0
     238: dup
     239: getfield      #5                  // Field state:I
     242: iconst_2
     243: ior
     244: putfield      #5                  // Field state:I
     247: aload_0
     248: iload_2
     249: i2l
     250: invokevirtual #33                 // Method updateWritten:(J)V
     253: return

  public void write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #24                 // class java/nio/ByteBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #37                 // Method write:([Ljava/nio/ByteBuffer;)V
      12: return

  void updateWritten(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field written:I
       5: i2l
       6: lload_1
       7: ladd
       8: l2i
       9: putfield      #18                 // Field written:I
      12: aload_0
      13: getfield      #4                  // Field contentLength:J
      16: ldc2_w        #38                 // long -1l
      19: lcmp
      20: ifeq          44
      23: aload_0
      24: getfield      #18                 // Field written:I
      27: i2l
      28: aload_0
      29: getfield      #4                  // Field contentLength:J
      32: lcmp
      33: iflt          44
      36: aload_0
      37: invokevirtual #40                 // Method flush:()V
      40: aload_0
      41: invokevirtual #41                 // Method close:()V
      44: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      24: ifnull        42
      27: aload_0
      28: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
      34: ifeq          42
      37: aload_0
      38: iconst_0
      39: invokespecial #32                 // Method writeBufferBlocking:(Z)V
      42: aload_0
      43: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      46: ifnonnull     60
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      54: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      57: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      60: aload_0
      61: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      64: invokestatic  #43                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      67: return

  private void writeBufferBlocking(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      12: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      15: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      18: aload_0
      19: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      22: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      25: pop
      26: aload_0
      27: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      33: ifeq          93
      36: iload_1
      37: ifeq          57
      40: aload_0
      41: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      44: aload_0
      45: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      48: invokeinterface #45,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      53: pop
      54: goto          71
      57: aload_0
      58: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      61: aload_0
      62: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      65: invokeinterface #46,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      70: pop
      71: aload_0
      72: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      75: invokevirtual #44                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      78: ifeq          26
      81: aload_0
      82: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      85: invokeinterface #47,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
      90: goto          26
      93: aload_0
      94: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      97: invokevirtual #31                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     100: pop
     101: aload_0
     102: dup
     103: getfield      #5                  // Field state:I
     106: iconst_2
     107: ior
     108: putfield      #5                  // Field state:I
     111: return

  public void transferFrom(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          20
      11: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #16,  1           // InterfaceMethod io/undertow/UndertowMessages.streamIsClosed:()Ljava/io/IOException;
      19: athrow
      20: aload_0
      21: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      24: ifnull        42
      27: aload_0
      28: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
      34: ifeq          42
      37: aload_0
      38: iconst_0
      39: invokespecial #32                 // Method writeBufferBlocking:(Z)V
      42: aload_0
      43: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      46: ifnonnull     60
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      54: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      57: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      60: aload_1
      61: invokevirtual #48                 // Method java/nio/channels/FileChannel.position:()J
      64: lstore_2
      65: aload_1
      66: invokevirtual #49                 // Method java/nio/channels/FileChannel.size:()J
      69: lstore        4
      71: aload_0
      72: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      75: aload_1
      76: lload_2
      77: lload         4
      79: invokestatic  #50                 // Method org/xnio/channels/Channels.transferBlocking:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/channels/FileChannel;JJ)V
      82: aload_0
      83: lload         4
      85: lload_2
      86: lsub
      87: invokevirtual #33                 // Method updateWritten:(J)V
      90: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: iconst_1
       5: invokestatic  #7                  // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: dup
      14: getfield      #5                  // Field state:I
      17: iconst_1
      18: ior
      19: putfield      #5                  // Field state:I
      22: aload_0
      23: getfield      #5                  // Field state:I
      26: iconst_2
      27: invokestatic  #51                 // Method org/xnio/Bits.anyAreClear:(II)Z
      30: ifeq          105
      33: aload_0
      34: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      37: ifnonnull     105
      40: aload_0
      41: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      44: ifnonnull     66
      47: aload_0
      48: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      51: invokevirtual #52                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      54: getstatic     #53                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      57: ldc           #54                 // String 0
      59: invokevirtual #55                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      62: pop
      63: goto          105
      66: aload_0
      67: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      70: invokevirtual #52                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      73: getstatic     #53                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      76: new           #56                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #58                 // String
      85: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      92: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
      95: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokevirtual #55                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     104: pop
     105: aload_0
     106: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     109: ifnull        117
     112: aload_0
     113: iconst_1
     114: invokespecial #32                 // Method writeBufferBlocking:(Z)V
     117: aload_0
     118: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     121: ifnonnull     135
     124: aload_0
     125: aload_0
     126: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     129: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     132: putfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     135: aload_0
     136: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     139: ifnonnull     172
     142: aload_0
     143: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     146: ifnull        166
     149: aload_0
     150: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     153: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     158: aload_0
     159: aconst_null
     160: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     163: goto          171
     166: aload_0
     167: aconst_null
     168: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     171: return
     172: aload_0
     173: getfield      #20                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     176: astore_1
     177: aload_1
     178: invokeinterface #62,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     183: aload_1
     184: invokestatic  #43                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
     187: aload_0
     188: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     191: ifnull        211
     194: aload_0
     195: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     198: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     203: aload_0
     204: aconst_null
     205: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     208: goto          251
     211: aload_0
     212: aconst_null
     213: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     216: goto          251
     219: astore_2
     220: aload_0
     221: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     224: ifnull        244
     227: aload_0
     228: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     231: invokeinterface #11,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     236: aload_0
     237: aconst_null
     238: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     241: goto          249
     244: aload_0
     245: aconst_null
     246: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
     249: aload_2
     250: athrow
     251: return
    Exception table:
       from    to  target type
          12   142   219   any
         172   187   219   any

  private java.nio.ByteBuffer buffer();
    Code:
       0: aload_0
       1: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      16: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      19: invokevirtual #23                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      22: invokeinterface #28,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      27: putfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      30: aload_0
      31: aload_0
      32: getfield      #10                 // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      35: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      40: putfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      43: aload_0
      44: getfield      #42                 // Field buffer:Ljava/nio/ByteBuffer;
      47: areturn
}
