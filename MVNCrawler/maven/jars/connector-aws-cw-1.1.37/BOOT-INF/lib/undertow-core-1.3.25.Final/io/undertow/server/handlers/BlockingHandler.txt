Compiled from "BlockingHandler.java"
public final class io.undertow.server.handlers.BlockingHandler implements io.undertow.server.HttpHandler {
  private volatile io.undertow.server.HttpHandler handler;

  public io.undertow.server.handlers.BlockingHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field handler:Lio/undertow/server/HttpHandler;
       9: return

  public io.undertow.server.handlers.BlockingHandler();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method "<init>":(Lio/undertow/server/HttpHandler;)V
       5: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.startBlocking:()Lio/undertow/server/BlockingHttpExchange;
       4: pop
       5: aload_1
       6: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
       9: ifeq          24
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field handler:Lio/undertow/server/HttpHandler;
      17: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
      20: pop
      21: goto          34
      24: aload_0
      25: getfield      #2                  // Field handler:Lio/undertow/server/HttpHandler;
      28: aload_1
      29: invokeinterface #7,  2            // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      34: return

  public io.undertow.server.HttpHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field handler:Lio/undertow/server/HttpHandler;
       4: areturn

  public io.undertow.server.handlers.BlockingHandler setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field handler:Lio/undertow/server/HttpHandler;
       5: aload_0
       6: areturn
}
