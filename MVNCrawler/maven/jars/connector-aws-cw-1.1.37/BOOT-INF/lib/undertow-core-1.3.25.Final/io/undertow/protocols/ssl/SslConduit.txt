Compiled from "SslConduit.java"
public class io.undertow.protocols.ssl.SslConduit implements org.xnio.conduits.StreamSourceConduit,org.xnio.conduits.StreamSinkConduit {
  public static final int MAX_READ_LISTENER_INVOCATIONS;

  private static final int FLAG_READ_REQUIRES_WRITE;

  private static final int FLAG_WRITE_REQUIRES_READ;

  private static final int FLAG_READS_RESUMED;

  private static final int FLAG_WRITES_RESUMED;

  private static final int FLAG_DATA_TO_UNWRAP;

  private static final int FLAG_READ_SHUTDOWN;

  private static final int FLAG_WRITE_SHUTDOWN;

  private static final int FLAG_ENGINE_INBOUND_SHUTDOWN;

  private static final int FLAG_ENGINE_OUTBOUND_SHUTDOWN;

  private static final int FLAG_DELEGATE_SINK_SHUTDOWN;

  private static final int FLAG_DELEGATE_SOURCE_SHUTDOWN;

  private static final int FLAG_IN_HANDSHAKE;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_CLOSED;

  private static final int FLAG_READ_CLOSED;

  public static final java.nio.ByteBuffer EMPTY_BUFFER;

  private final io.undertow.protocols.ssl.UndertowSslConnection connection;

  private final org.xnio.StreamConnection delegate;

  private final javax.net.ssl.SSLEngine engine;

  private final org.xnio.conduits.StreamSinkConduit sink;

  private final org.xnio.conduits.StreamSourceConduit source;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.lang.Runnable handshakeCallback;

  private volatile int state;

  private volatile int outstandingTasks;

  private io.undertow.connector.PooledByteBuffer wrappedData;

  private io.undertow.connector.PooledByteBuffer dataToUnwrap;

  private io.undertow.connector.PooledByteBuffer unwrappedData;

  private io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler writeReadyHandler;

  private io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler readReadyHandler;

  private int readListenerInvocationCount;

  private boolean invokingReadListenerHandshake;

  private final java.lang.Runnable runReadListenerCommand;

  private final java.lang.Runnable runReadListenerAndResumeCommand;

  io.undertow.protocols.ssl.SslConduit(io.undertow.protocols.ssl.UndertowSslConnection, org.xnio.StreamConnection, javax.net.ssl.SSLEngine, io.undertow.connector.ByteBufferPool, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #12                 // Field state:I
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field outstandingTasks:I
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field invokingReadListenerHandshake:Z
      19: aload_0
      20: new           #16                 // class io/undertow/protocols/ssl/SslConduit$1
      23: dup
      24: aload_0
      25: invokespecial #17                 // Method io/undertow/protocols/ssl/SslConduit$1."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      28: putfield      #10                 // Field runReadListenerCommand:Ljava/lang/Runnable;
      31: aload_0
      32: new           #18                 // class io/undertow/protocols/ssl/SslConduit$2
      35: dup
      36: aload_0
      37: invokespecial #19                 // Method io/undertow/protocols/ssl/SslConduit$2."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      40: putfield      #20                 // Field runReadListenerAndResumeCommand:Ljava/lang/Runnable;
      43: aload_0
      44: aload_1
      45: putfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      48: aload_0
      49: aload_2
      50: putfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      53: aload_0
      54: aload         5
      56: putfield      #21                 // Field handshakeCallback:Ljava/lang/Runnable;
      59: aload_0
      60: aload_2
      61: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      64: invokevirtual #23                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      67: putfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      70: aload_0
      71: aload_2
      72: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      75: invokevirtual #26                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      78: putfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      81: aload_0
      82: aload_3
      83: putfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      86: aload_0
      87: aload         4
      89: putfield      #29                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      92: aload_2
      93: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      96: invokevirtual #26                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      99: aload_0
     100: new           #30                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
     103: dup
     104: aload_0
     105: aconst_null
     106: aconst_null
     107: invokespecial #31                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
     110: dup_x1
     111: putfield      #13                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
     114: invokeinterface #32,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
     119: aload_2
     120: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     123: invokevirtual #23                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     126: aload_0
     127: new           #33                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
     130: dup
     131: aload_0
     132: aconst_null
     133: aconst_null
     134: invokespecial #34                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
     137: dup_x1
     138: putfield      #9                  // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
     141: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
     146: aload_3
     147: invokevirtual #36                 // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
     150: ifeq          163
     153: aload_0
     154: sipush        2049
     157: putfield      #12                 // Field state:I
     160: goto          170
     163: aload_0
     164: sipush        2050
     167: putfield      #12                 // Field state:I
     170: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        32
       7: ior
       8: putfield      #12                 // Field state:I
      11: aload_0
      12: invokevirtual #38                 // Method notifyReadClosed:()V
      15: return

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        32
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_4
       5: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: iconst_0
      14: invokespecial #40                 // Method resumeReads:(Z)V
      17: return

  public void suspendReads();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        -5
       7: iand
       8: putfield      #12                 // Field state:I
      11: aload_0
      12: getfield      #12                 // Field state:I
      15: bipush        10
      17: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
      20: ifne          33
      23: aload_0
      24: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      27: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      33: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #40                 // Method resumeReads:(Z)V
       5: return

  private void resumeReads(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: iconst_4
       6: ior
       7: putfield      #12                 // Field state:I
      10: aload_0
      11: getfield      #12                 // Field state:I
      14: iconst_1
      15: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      18: ifeq          34
      21: aload_0
      22: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      25: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      28: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      31: goto          68
      34: aload_0
      35: getfield      #12                 // Field state:I
      38: bipush        16
      40: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      43: ifne          50
      46: iload_1
      47: ifeq          58
      50: aload_0
      51: iconst_1
      52: invokespecial #1                  // Method runReadListener:(Z)V
      55: goto          68
      58: aload_0
      59: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      62: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      65: invokevirtual #44                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      68: return

  private void runReadListener(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field readListenerInvocationCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #14                 // Field readListenerInvocationCount:I
      11: getstatic     #45                 // Field MAX_READ_LISTENER_INVOCATIONS:I
      14: if_icmpne     52
      17: getstatic     #46                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      20: aload_0
      21: invokeinterface #47,  2           // InterfaceMethod io/undertow/UndertowLogger.sslReadLoopDetected:(Lio/undertow/protocols/ssl/SslConduit;)V
      26: iconst_2
      27: anewarray     #48                 // class java/io/Closeable
      30: dup
      31: iconst_0
      32: aload_0
      33: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      43: aastore
      44: invokestatic  #49                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      47: aload_0
      48: invokevirtual #50                 // Method close:()V
      51: return
      52: iload_1
      53: ifeq          73
      56: aload_0
      57: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      60: invokevirtual #51                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      63: aload_0
      64: getfield      #20                 // Field runReadListenerAndResumeCommand:Ljava/lang/Runnable;
      67: invokevirtual #52                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      70: goto          87
      73: aload_0
      74: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      77: invokevirtual #51                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
      80: aload_0
      81: getfield      #10                 // Field runReadListenerCommand:Ljava/lang/Runnable;
      84: invokevirtual #52                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      87: goto          127
      90: astore_2
      91: iconst_2
      92: anewarray     #48                 // class java/io/Closeable
      95: dup
      96: iconst_0
      97: aload_0
      98: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
     101: aastore
     102: dup
     103: iconst_1
     104: aload_0
     105: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
     108: aastore
     109: invokestatic  #49                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
     112: getstatic     #54                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     115: aload_2
     116: ldc           #55                 // String Failed to queue read listener invocation
     118: iconst_0
     119: anewarray     #56                 // class java/lang/Object
     122: invokeinterface #57,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     127: return
    Exception table:
       from    to  target type
           0    51    90   Class java/lang/Exception
          52    87    90   Class java/lang/Exception

  private void runWriteListener();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #51                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: new           #58                 // class io/undertow/protocols/ssl/SslConduit$3
      10: dup
      11: aload_0
      12: invokespecial #59                 // Method io/undertow/protocols/ssl/SslConduit$3."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      15: invokevirtual #52                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      18: goto          58
      21: astore_1
      22: iconst_2
      23: anewarray     #48                 // class java/io/Closeable
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      39: aastore
      40: invokestatic  #49                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      43: getstatic     #54                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      46: aload_1
      47: ldc           #55                 // String Failed to queue read listener invocation
      49: iconst_0
      50: anewarray     #56                 // class java/lang/Object
      53: invokeinterface #57,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      58: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Exception

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_4
       5: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #8                  // Field outstandingTasks:I
       8: ifle          27
      11: aload_0
      12: invokevirtual #60                 // Method java/lang/Object.wait:()V
      15: aload_1
      16: monitorexit
      17: return
      18: astore_2
      19: new           #62                 // class java/io/InterruptedIOException
      22: dup
      23: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      26: athrow
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_1
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_0
      38: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      41: ifnull        45
      44: return
      45: aload_0
      46: getfield      #12                 // Field state:I
      49: bipush        16
      51: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      54: ifeq          58
      57: return
      58: aload_0
      59: getfield      #12                 // Field state:I
      62: iconst_1
      63: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      66: ifeq          74
      69: aload_0
      70: invokevirtual #64                 // Method awaitWritable:()V
      73: return
      74: aload_0
      75: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      78: invokeinterface #65,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:()V
      83: return
    Exception table:
       from    to  target type
          11    15    18   Class java/lang/InterruptedException
           4    17    32   any
          18    29    32   any
          32    35    32   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #8                  // Field outstandingTasks:I
       9: ifle          35
      12: aload_0
      13: aload_3
      14: lload_1
      15: invokevirtual #66                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      18: invokevirtual #67                 // Method java/lang/Object.wait:(J)V
      21: aload         4
      23: monitorexit
      24: return
      25: astore        5
      27: new           #62                 // class java/io/InterruptedIOException
      30: dup
      31: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      34: athrow
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        6
      43: aload         4
      45: monitorexit
      46: aload         6
      48: athrow
      49: aload_0
      50: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      53: ifnull        57
      56: return
      57: aload_0
      58: getfield      #12                 // Field state:I
      61: bipush        16
      63: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      66: ifeq          70
      69: return
      70: aload_0
      71: getfield      #12                 // Field state:I
      74: iconst_1
      75: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      78: ifeq          88
      81: aload_0
      82: lload_1
      83: aload_3
      84: invokevirtual #68                 // Method awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      87: return
      88: aload_0
      89: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      92: lload_1
      93: aload_3
      94: invokeinterface #69,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      99: return
    Exception table:
       from    to  target type
          12    21    25   Class java/lang/InterruptedException
           5    24    41   any
          25    38    41   any
          41    46    41   any

  public org.xnio.XnioIoThread getReadThread();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #51                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setReadReadyHandler(org.xnio.conduits.ReadReadyHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: invokevirtual #26                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      10: aload_0
      11: new           #30                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokespecial #31                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
      21: dup_x1
      22: putfield      #13                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
      25: invokeinterface #32,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
      30: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: lload         4
      24: new           #72                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #73                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokevirtual #74                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: aload         4
      24: new           #72                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #73                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokestatic  #75                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: iconst_1
      22: anewarray     #76                 // class java/nio/ByteBuffer
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: iconst_0
      30: iconst_1
      31: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      34: l2i
      35: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      27: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #70                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokestatic  #78                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
      25: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #79                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        64
       7: ior
       8: putfield      #12                 // Field state:I
      11: return

  public boolean isWriteShutdown();
    Code:
       0: iconst_0
       1: ireturn

  public void resumeWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #12                 // Field state:I
      11: aload_0
      12: getfield      #12                 // Field state:I
      15: iconst_2
      16: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifeq          35
      22: aload_0
      23: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      29: invokevirtual #44                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      32: goto          45
      35: aload_0
      36: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      39: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      42: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      45: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        -9
       7: iand
       8: putfield      #12                 // Field state:I
      11: aload_0
      12: getfield      #12                 // Field state:I
      15: iconst_5
      16: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
      19: ifne          32
      22: aload_0
      23: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      29: invokevirtual #80                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      32: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #12                 // Field state:I
      11: aload_0
      12: invokevirtual #81                 // Method getWriteThread:()Lorg/xnio/XnioIoThread;
      15: new           #82                 // class io/undertow/protocols/ssl/SslConduit$4
      18: dup
      19: aload_0
      20: invokespecial #83                 // Method io/undertow/protocols/ssl/SslConduit$4."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      23: invokevirtual #52                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      26: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        8
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #8                  // Field outstandingTasks:I
      17: ifle          57
      20: aload_0
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #8                  // Field outstandingTasks:I
      28: ifle          47
      31: aload_0
      32: invokevirtual #60                 // Method java/lang/Object.wait:()V
      35: aload_1
      36: monitorexit
      37: return
      38: astore_2
      39: new           #62                 // class java/io/InterruptedIOException
      42: dup
      43: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      46: athrow
      47: aload_1
      48: monitorexit
      49: goto          57
      52: astore_3
      53: aload_1
      54: monitorexit
      55: aload_3
      56: athrow
      57: aload_0
      58: getfield      #12                 // Field state:I
      61: iconst_2
      62: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      65: ifeq          73
      68: aload_0
      69: invokevirtual #84                 // Method awaitReadable:()V
      72: return
      73: aload_0
      74: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      77: invokeinterface #85,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      82: return
    Exception table:
       from    to  target type
          31    35    38   Class java/lang/InterruptedException
          24    37    52   any
          38    49    52   any
          52    55    52   any

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        64
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #8                  // Field outstandingTasks:I
      17: ifle          69
      20: aload_0
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #8                  // Field outstandingTasks:I
      29: ifle          55
      32: aload_0
      33: aload_3
      34: lload_1
      35: invokevirtual #66                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      38: invokevirtual #67                 // Method java/lang/Object.wait:(J)V
      41: aload         4
      43: monitorexit
      44: return
      45: astore        5
      47: new           #62                 // class java/io/InterruptedIOException
      50: dup
      51: invokespecial #63                 // Method java/io/InterruptedIOException."<init>":()V
      54: athrow
      55: aload         4
      57: monitorexit
      58: goto          69
      61: astore        6
      63: aload         4
      65: monitorexit
      66: aload         6
      68: athrow
      69: aload_0
      70: getfield      #12                 // Field state:I
      73: iconst_2
      74: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          87
      80: aload_0
      81: lload_1
      82: aload_3
      83: invokevirtual #86                 // Method awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      86: return
      87: aload_0
      88: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      91: invokeinterface #85,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      96: return
    Exception table:
       from    to  target type
          32    41    45   Class java/lang/InterruptedException
          25    44    61   any
          45    58    61   any
          61    66    61   any

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #51                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #23                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      10: aload_0
      11: new           #33                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokespecial #34                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
      21: dup_x1
      22: putfield      #9                  // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
      25: invokeinterface #35,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
      30: return

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method notifyWriteClosed:()V
       4: aload_0
       5: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       8: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      11: invokevirtual #88                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      14: goto          30
      17: astore_1
      18: aload_0
      19: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      22: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      25: invokevirtual #88                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           0     4    17   any

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        512
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          23
      13: aload_0
      14: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      17: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      22: ireturn
      23: aload_0
      24: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      27: ifnull        47
      30: aload_0
      31: aconst_null
      32: iconst_0
      33: iconst_0
      34: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      37: pop2
      38: aload_0
      39: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      42: ifnull        47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #12                 // Field state:I
      51: bipush        64
      53: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
      56: ifeq          216
      59: aload_0
      60: getfield      #12                 // Field state:I
      63: sipush        256
      66: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
      69: ifeq          108
      72: aload_0
      73: dup
      74: getfield      #12                 // Field state:I
      77: sipush        256
      80: ior
      81: putfield      #12                 // Field state:I
      84: aload_0
      85: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      88: invokevirtual #91                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      91: aload_0
      92: aconst_null
      93: iconst_0
      94: iconst_0
      95: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      98: pop2
      99: aload_0
     100: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     103: ifnull        145
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     112: ifnull        145
     115: aload_0
     116: getfield      #12                 // Field state:I
     119: sipush        512
     122: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     125: ifeq          145
     128: aload_0
     129: aconst_null
     130: iconst_0
     131: iconst_0
     132: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
     135: pop2
     136: aload_0
     137: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: ifnull        145
     143: iconst_0
     144: ireturn
     145: aload_0
     146: getfield      #12                 // Field state:I
     149: sipush        512
     152: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     155: ifeq          183
     158: aload_0
     159: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     162: invokeinterface #92,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     167: aload_0
     168: dup
     169: getfield      #12                 // Field state:I
     172: sipush        512
     175: ior
     176: putfield      #12                 // Field state:I
     179: aload_0
     180: invokevirtual #87                 // Method notifyWriteClosed:()V
     183: aload_0
     184: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     187: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     192: istore_1
     193: iload_1
     194: ifeq          214
     197: aload_0
     198: getfield      #12                 // Field state:I
     201: sipush        16384
     204: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     207: ifeq          214
     210: aload_0
     211: invokespecial #93                 // Method closed:()V
     214: iload_1
     215: ireturn
     216: aload_0
     217: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     220: invokeinterface #89,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     225: ireturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        32
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #94                 // long -1l
      15: lreturn
      16: aload         5
      18: new           #96                 // class org/xnio/conduits/ConduitReadableByteChannel
      21: dup
      22: aload_0
      23: invokespecial #97                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      26: lload_1
      27: lload_3
      28: invokevirtual #98                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      31: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        32
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #94                 // long -1l
      15: lreturn
      16: new           #96                 // class org/xnio/conduits/ConduitReadableByteChannel
      19: dup
      20: aload_0
      21: invokespecial #97                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      24: lload_1
      25: aload_3
      26: aload         4
      28: invokestatic  #75                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      31: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        32
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          14
      12: iconst_m1
      13: ireturn
      14: aload_0
      15: iconst_1
      16: anewarray     #76                 // class java/nio/ByteBuffer
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: iconst_0
      24: iconst_1
      25: invokespecial #99                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      28: l2i
      29: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: bipush        32
       6: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          16
      12: ldc2_w        #94                 // long -1l
      15: lreturn
      16: aload_0
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokespecial #99                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      23: lreturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #100                // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  void notifyWriteClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        8192
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #101                // Method isWriteResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #12                 // Field state:I
      25: sipush        4096
      28: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #102                // Method io/undertow/protocols/ssl/UndertowSslConnection.writeClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #91                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      55: aload_0
      56: dup
      57: getfield      #12                 // Field state:I
      60: sipush        8448
      63: ior
      64: putfield      #12                 // Field state:I
      67: aload_0
      68: getfield      #12                 // Field state:I
      71: sipush        16384
      74: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          84
      80: aload_0
      81: invokespecial #93                 // Method closed:()V
      84: aload_0
      85: getfield      #12                 // Field state:I
      88: iconst_1
      89: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #38                 // Method notifyReadClosed:()V
      99: aload_0
     100: dup
     101: getfield      #12                 // Field state:I
     104: bipush        -3
     106: iand
     107: putfield      #12                 // Field state:I
     110: iload_1
     111: ifeq          118
     114: aload_0
     115: invokespecial #103                // Method runWriteListener:()V
     118: return

  void notifyReadClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        16384
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #104                // Method isReadResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #12                 // Field state:I
      25: sipush        4096
      28: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #105                // Method io/undertow/protocols/ssl/UndertowSslConnection.readClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #106                // Method javax/net/ssl/SSLEngine.closeInbound:()V
      55: goto          75
      58: astore_2
      59: getstatic     #54                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      62: new           #108                // class java/io/IOException
      65: dup
      66: aload_2
      67: invokespecial #109                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      70: invokeinterface #110,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      75: aload_0
      76: dup
      77: getfield      #12                 // Field state:I
      80: sipush        16544
      83: ior
      84: putfield      #12                 // Field state:I
      87: aload_0
      88: getfield      #12                 // Field state:I
      91: sipush        8192
      94: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      97: ifeq          104
     100: aload_0
     101: invokespecial #93                 // Method closed:()V
     104: aload_0
     105: getfield      #12                 // Field state:I
     108: iconst_2
     109: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     112: ifeq          119
     115: aload_0
     116: invokevirtual #87                 // Method notifyWriteClosed:()V
     119: iload_1
     120: ifeq          128
     123: aload_0
     124: iconst_0
     125: invokespecial #1                  // Method runReadListener:(Z)V
     128: return
    Exception table:
       from    to  target type
          48    55    58   Class javax/net/ssl/SSLException

  public void startHandshake() throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field state:I
       5: iconst_1
       6: ior
       7: putfield      #12                 // Field state:I
      10: aload_0
      11: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      14: invokevirtual #111                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      17: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #112                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  private void doHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: iconst_0
       4: invokespecial #99                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
       7: pop2
       8: aload_0
       9: aconst_null
      10: iconst_0
      11: iconst_0
      12: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      15: pop2
      16: return

  private long doUnwrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        4096
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #70                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #12                 // Field state:I
      34: iconst_1
      35: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokespecial #77                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #12                 // Field state:I
      53: iconst_2
      54: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: iconst_0
      63: istore        4
      65: aload_0
      66: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      69: astore        5
      71: aload         5
      73: ifnull        136
      76: aload_1
      77: ifnull        136
      80: aload_1
      81: iload_2
      82: iload_3
      83: aload         5
      85: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      90: invokestatic  #114                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      93: i2l
      94: lstore        6
      96: aload         5
      98: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     103: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     106: ifne          121
     109: aload         5
     111: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     116: aload_0
     117: aconst_null
     118: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     121: lload         6
     123: lconst_0
     124: lcmp
     125: ifle          133
     128: aload_0
     129: iconst_0
     130: putfield      #14                 // Field readListenerInvocationCount:I
     133: lload         6
     135: lreturn
     136: aload_0
     137: getfield      #12                 // Field state:I
     140: bipush        16
     142: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     145: ifeq          599
     148: aload_0
     149: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     152: ifnonnull     168
     155: aload_0
     156: aload_0
     157: getfield      #29                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     160: invokeinterface #117,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     165: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     168: aload_0
     169: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     172: aload_0
     173: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     176: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     181: invokeinterface #118,  2          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     186: istore        7
     188: goto          210
     191: astore        8
     193: aload_0
     194: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     197: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     202: aload_0
     203: aconst_null
     204: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     207: aload         8
     209: athrow
     210: aload_0
     211: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     214: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     219: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     222: pop
     223: iload         7
     225: iconst_m1
     226: if_icmpne     415
     229: aload_0
     230: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     233: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     238: aload_0
     239: aconst_null
     240: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     243: aload_0
     244: invokevirtual #38                 // Method notifyReadClosed:()V
     247: ldc2_w        #94                 // long -1l
     250: lstore        8
     252: iconst_0
     253: istore        10
     255: iload         4
     257: ifne          288
     260: aload         5
     262: ifnull        291
     265: aload         5
     267: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     272: ifeq          291
     275: aload         5
     277: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     282: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     285: ifeq          291
     288: iconst_1
     289: istore        10
     291: aload_0
     292: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     295: ifnull        372
     298: aload_0
     299: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     302: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     307: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     310: ifne          341
     313: aload_0
     314: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     317: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     322: aload_0
     323: aconst_null
     324: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     327: aload_0
     328: dup
     329: getfield      #12                 // Field state:I
     332: bipush        -17
     334: iand
     335: putfield      #12                 // Field state:I
     338: goto          372
     341: aload_0
     342: getfield      #12                 // Field state:I
     345: bipush        16
     347: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     350: ifeq          369
     353: aload_0
     354: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     357: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     362: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     365: pop
     366: goto          372
     369: iconst_1
     370: istore        10
     372: iload         10
     374: ifeq          412
     377: aload_0
     378: getfield      #12                 // Field state:I
     381: iconst_4
     382: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     385: ifne          400
     388: aload_0
     389: getfield      #12                 // Field state:I
     392: bipush        10
     394: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
     397: ifeq          412
     400: aload_0
     401: getfield      #5                  // Field invokingReadListenerHandshake:Z
     404: ifne          412
     407: aload_0
     408: iconst_0
     409: invokespecial #1                  // Method runReadListener:(Z)V
     412: lload         8
     414: lreturn
     415: iload         7
     417: ifne          599
     420: aload_0
     421: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     424: invokevirtual #122                // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     427: getstatic     #123                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     430: if_acmpne     599
     433: lconst_0
     434: lstore        8
     436: iconst_0
     437: istore        10
     439: iload         4
     441: ifne          472
     444: aload         5
     446: ifnull        475
     449: aload         5
     451: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
     456: ifeq          475
     459: aload         5
     461: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     466: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     469: ifeq          475
     472: iconst_1
     473: istore        10
     475: aload_0
     476: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     479: ifnull        556
     482: aload_0
     483: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     486: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     491: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     494: ifne          525
     497: aload_0
     498: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     501: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     506: aload_0
     507: aconst_null
     508: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     511: aload_0
     512: dup
     513: getfield      #12                 // Field state:I
     516: bipush        -17
     518: iand
     519: putfield      #12                 // Field state:I
     522: goto          556
     525: aload_0
     526: getfield      #12                 // Field state:I
     529: bipush        16
     531: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     534: ifeq          553
     537: aload_0
     538: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     541: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     546: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     549: pop
     550: goto          556
     553: iconst_1
     554: istore        10
     556: iload         10
     558: ifeq          596
     561: aload_0
     562: getfield      #12                 // Field state:I
     565: iconst_4
     566: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     569: ifne          584
     572: aload_0
     573: getfield      #12                 // Field state:I
     576: bipush        10
     578: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
     581: ifeq          596
     584: aload_0
     585: getfield      #5                  // Field invokingReadListenerHandshake:Z
     588: ifne          596
     591: aload_0
     592: iconst_0
     593: invokespecial #1                  // Method runReadListener:(Z)V
     596: lload         8
     598: lreturn
     599: aload_0
     600: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     603: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     608: invokevirtual #124                // Method java/nio/ByteBuffer.remaining:()I
     611: istore        6
     613: lconst_0
     614: lstore        7
     616: aload_1
     617: ifnull        626
     620: aload_1
     621: invokestatic  #125                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     624: lstore        7
     626: iconst_0
     627: istore        10
     629: aload_1
     630: ifnull        745
     633: aload_0
     634: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     637: aload_0
     638: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     641: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     646: aload_1
     647: iload_2
     648: iload_3
     649: invokevirtual #126                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
     652: astore        9
     654: aload         9
     656: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     659: getstatic     #128                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     662: if_acmpne     727
     665: aload_0
     666: getfield      #29                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     669: invokeinterface #117,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     674: astore        5
     676: iload_3
     677: iconst_1
     678: iadd
     679: anewarray     #76                 // class java/nio/ByteBuffer
     682: astore        11
     684: aload_1
     685: iload_2
     686: aload         11
     688: iconst_0
     689: iload_3
     690: invokestatic  #129                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     693: aload         11
     695: iload_3
     696: aload         5
     698: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     703: aastore
     704: aload_0
     705: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     708: aload_0
     709: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     712: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     717: aload         11
     719: invokevirtual #130                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     722: astore        9
     724: iconst_1
     725: istore        10
     727: aload         9
     729: invokevirtual #131                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     732: ifle          739
     735: iconst_1
     736: goto          740
     739: iconst_0
     740: istore        4
     742: goto          818
     745: iconst_1
     746: istore        10
     748: aload         5
     750: ifnonnull     767
     753: aload_0
     754: getfield      #29                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     757: invokeinterface #117,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     762: astore        5
     764: goto          778
     767: aload         5
     769: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     774: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     777: pop
     778: aload_0
     779: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     782: aload_0
     783: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     786: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     791: aload         5
     793: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     798: invokevirtual #132                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     801: astore        9
     803: aload         9
     805: invokevirtual #131                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     808: ifle          815
     811: iconst_1
     812: goto          816
     815: iconst_0
     816: istore        4
     818: iload         10
     820: ifeq          857
     823: aload         5
     825: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     830: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     833: pop
     834: aload         5
     836: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     841: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     844: ifne          857
     847: aload         5
     849: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     854: aconst_null
     855: astore        5
     857: aload_0
     858: aload         5
     860: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     863: goto          916
     866: astore        12
     868: iload         10
     870: ifeq          907
     873: aload         5
     875: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     880: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     883: pop
     884: aload         5
     886: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     891: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     894: ifne          907
     897: aload         5
     899: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     904: aconst_null
     905: astore        5
     907: aload_0
     908: aload         5
     910: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     913: aload         12
     915: athrow
     916: aload_0
     917: aload         9
     919: invokespecial #133                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
     922: ifne          1159
     925: aload_0
     926: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     929: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     934: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     937: ifeq          982
     940: aload         9
     942: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     945: getstatic     #134                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     948: if_acmpeq     982
     951: aload_0
     952: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     955: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     960: invokevirtual #124                // Method java/nio/ByteBuffer.remaining:()I
     963: iload         6
     965: if_icmpeq     982
     968: aload_0
     969: dup
     970: getfield      #12                 // Field state:I
     973: bipush        16
     975: ior
     976: putfield      #12                 // Field state:I
     979: goto          993
     982: aload_0
     983: dup
     984: getfield      #12                 // Field state:I
     987: bipush        -17
     989: iand
     990: putfield      #12                 // Field state:I
     993: lconst_0
     994: lstore        11
     996: iconst_0
     997: istore        13
     999: iload         4
    1001: ifne          1032
    1004: aload         5
    1006: ifnull        1035
    1009: aload         5
    1011: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1016: ifeq          1035
    1019: aload         5
    1021: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1026: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1029: ifeq          1035
    1032: iconst_1
    1033: istore        13
    1035: aload_0
    1036: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1039: ifnull        1116
    1042: aload_0
    1043: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1046: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1051: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1054: ifne          1085
    1057: aload_0
    1058: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1061: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1066: aload_0
    1067: aconst_null
    1068: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1071: aload_0
    1072: dup
    1073: getfield      #12                 // Field state:I
    1076: bipush        -17
    1078: iand
    1079: putfield      #12                 // Field state:I
    1082: goto          1116
    1085: aload_0
    1086: getfield      #12                 // Field state:I
    1089: bipush        16
    1091: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
    1094: ifeq          1113
    1097: aload_0
    1098: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1101: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1106: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1109: pop
    1110: goto          1116
    1113: iconst_1
    1114: istore        13
    1116: iload         13
    1118: ifeq          1156
    1121: aload_0
    1122: getfield      #12                 // Field state:I
    1125: iconst_4
    1126: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1129: ifne          1144
    1132: aload_0
    1133: getfield      #12                 // Field state:I
    1136: bipush        10
    1138: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
    1141: ifeq          1156
    1144: aload_0
    1145: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1148: ifne          1156
    1151: aload_0
    1152: iconst_0
    1153: invokespecial #1                  // Method runReadListener:(Z)V
    1156: lload         11
    1158: lreturn
    1159: aload         9
    1161: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1164: getstatic     #135                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
    1167: if_acmpne     1342
    1170: aload_0
    1171: invokevirtual #38                 // Method notifyReadClosed:()V
    1174: ldc2_w        #94                 // long -1l
    1177: lstore        11
    1179: iconst_0
    1180: istore        13
    1182: iload         4
    1184: ifne          1215
    1187: aload         5
    1189: ifnull        1218
    1192: aload         5
    1194: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1199: ifeq          1218
    1202: aload         5
    1204: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1209: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1212: ifeq          1218
    1215: iconst_1
    1216: istore        13
    1218: aload_0
    1219: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1222: ifnull        1299
    1225: aload_0
    1226: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1229: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1234: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1237: ifne          1268
    1240: aload_0
    1241: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1244: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1249: aload_0
    1250: aconst_null
    1251: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1254: aload_0
    1255: dup
    1256: getfield      #12                 // Field state:I
    1259: bipush        -17
    1261: iand
    1262: putfield      #12                 // Field state:I
    1265: goto          1299
    1268: aload_0
    1269: getfield      #12                 // Field state:I
    1272: bipush        16
    1274: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
    1277: ifeq          1296
    1280: aload_0
    1281: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1284: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1289: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1292: pop
    1293: goto          1299
    1296: iconst_1
    1297: istore        13
    1299: iload         13
    1301: ifeq          1339
    1304: aload_0
    1305: getfield      #12                 // Field state:I
    1308: iconst_4
    1309: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1312: ifne          1327
    1315: aload_0
    1316: getfield      #12                 // Field state:I
    1319: bipush        10
    1321: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
    1324: ifeq          1339
    1327: aload_0
    1328: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1331: ifne          1339
    1334: aload_0
    1335: iconst_0
    1336: invokespecial #1                  // Method runReadListener:(Z)V
    1339: lload         11
    1341: lreturn
    1342: aload         9
    1344: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1347: getstatic     #134                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1350: if_acmpne     1367
    1353: aload_0
    1354: dup
    1355: getfield      #12                 // Field state:I
    1358: bipush        -17
    1360: iand
    1361: putfield      #12                 // Field state:I
    1364: goto          1454
    1367: aload         9
    1369: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1372: getstatic     #128                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1375: if_acmpne     1397
    1378: getstatic     #46                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
    1381: aload_0
    1382: invokeinterface #136,  2          // InterfaceMethod io/undertow/UndertowLogger.sslBufferOverflow:(Lio/undertow/protocols/ssl/SslConduit;)V
    1387: aload_0
    1388: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
    1391: invokestatic  #137                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
    1394: goto          1454
    1397: aload_0
    1398: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1401: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1406: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1409: ifeq          1443
    1412: aload_0
    1413: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1416: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1421: invokevirtual #124                // Method java/nio/ByteBuffer.remaining:()I
    1424: iload         6
    1426: if_icmpeq     1443
    1429: aload_0
    1430: dup
    1431: getfield      #12                 // Field state:I
    1434: bipush        16
    1436: ior
    1437: putfield      #12                 // Field state:I
    1440: goto          1454
    1443: aload_0
    1444: dup
    1445: getfield      #12                 // Field state:I
    1448: bipush        -17
    1450: iand
    1451: putfield      #12                 // Field state:I
    1454: aload_1
    1455: ifnonnull     1624
    1458: lconst_0
    1459: lstore        11
    1461: iconst_0
    1462: istore        13
    1464: iload         4
    1466: ifne          1497
    1469: aload         5
    1471: ifnull        1500
    1474: aload         5
    1476: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1481: ifeq          1500
    1484: aload         5
    1486: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1491: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1494: ifeq          1500
    1497: iconst_1
    1498: istore        13
    1500: aload_0
    1501: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1504: ifnull        1581
    1507: aload_0
    1508: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1511: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1516: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1519: ifne          1550
    1522: aload_0
    1523: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1526: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1531: aload_0
    1532: aconst_null
    1533: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1536: aload_0
    1537: dup
    1538: getfield      #12                 // Field state:I
    1541: bipush        -17
    1543: iand
    1544: putfield      #12                 // Field state:I
    1547: goto          1581
    1550: aload_0
    1551: getfield      #12                 // Field state:I
    1554: bipush        16
    1556: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
    1559: ifeq          1578
    1562: aload_0
    1563: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1566: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1571: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1574: pop
    1575: goto          1581
    1578: iconst_1
    1579: istore        13
    1581: iload         13
    1583: ifeq          1621
    1586: aload_0
    1587: getfield      #12                 // Field state:I
    1590: iconst_4
    1591: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1594: ifne          1609
    1597: aload_0
    1598: getfield      #12                 // Field state:I
    1601: bipush        10
    1603: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
    1606: ifeq          1621
    1609: aload_0
    1610: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1613: ifne          1621
    1616: aload_0
    1617: iconst_0
    1618: invokespecial #1                  // Method runReadListener:(Z)V
    1621: lload         11
    1623: lreturn
    1624: lload         7
    1626: aload_1
    1627: invokestatic  #125                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
    1630: lsub
    1631: lstore        11
    1633: lload         11
    1635: lconst_0
    1636: lcmp
    1637: ifle          1645
    1640: aload_0
    1641: iconst_0
    1642: putfield      #14                 // Field readListenerInvocationCount:I
    1645: lload         11
    1647: lstore        13
    1649: iconst_0
    1650: istore        15
    1652: iload         4
    1654: ifne          1685
    1657: aload         5
    1659: ifnull        1688
    1662: aload         5
    1664: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1669: ifeq          1688
    1672: aload         5
    1674: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1679: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1682: ifeq          1688
    1685: iconst_1
    1686: istore        15
    1688: aload_0
    1689: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1692: ifnull        1769
    1695: aload_0
    1696: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1699: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1704: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1707: ifne          1738
    1710: aload_0
    1711: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1714: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1719: aload_0
    1720: aconst_null
    1721: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1724: aload_0
    1725: dup
    1726: getfield      #12                 // Field state:I
    1729: bipush        -17
    1731: iand
    1732: putfield      #12                 // Field state:I
    1735: goto          1769
    1738: aload_0
    1739: getfield      #12                 // Field state:I
    1742: bipush        16
    1744: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
    1747: ifeq          1766
    1750: aload_0
    1751: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1754: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1759: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1762: pop
    1763: goto          1769
    1766: iconst_1
    1767: istore        15
    1769: iload         15
    1771: ifeq          1809
    1774: aload_0
    1775: getfield      #12                 // Field state:I
    1778: iconst_4
    1779: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1782: ifne          1797
    1785: aload_0
    1786: getfield      #12                 // Field state:I
    1789: bipush        10
    1791: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
    1794: ifeq          1809
    1797: aload_0
    1798: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1801: ifne          1809
    1804: aload_0
    1805: iconst_0
    1806: invokespecial #1                  // Method runReadListener:(Z)V
    1809: lload         13
    1811: lreturn
    1812: astore        6
    1814: aload_0
    1815: invokevirtual #50                 // Method close:()V
    1818: aload         6
    1820: athrow
    1821: astore        16
    1823: iconst_0
    1824: istore        17
    1826: iload         4
    1828: ifne          1859
    1831: aload         5
    1833: ifnull        1862
    1836: aload         5
    1838: invokeinterface #120,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.isOpen:()Z
    1843: ifeq          1862
    1846: aload         5
    1848: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1853: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1856: ifeq          1862
    1859: iconst_1
    1860: istore        17
    1862: aload_0
    1863: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1866: ifnull        1943
    1869: aload_0
    1870: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1873: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1878: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1881: ifne          1912
    1884: aload_0
    1885: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1888: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1893: aload_0
    1894: aconst_null
    1895: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1898: aload_0
    1899: dup
    1900: getfield      #12                 // Field state:I
    1903: bipush        -17
    1905: iand
    1906: putfield      #12                 // Field state:I
    1909: goto          1943
    1912: aload_0
    1913: getfield      #12                 // Field state:I
    1916: bipush        16
    1918: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
    1921: ifeq          1940
    1924: aload_0
    1925: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1928: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1933: invokevirtual #121                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1936: pop
    1937: goto          1943
    1940: iconst_1
    1941: istore        17
    1943: iload         17
    1945: ifeq          1983
    1948: aload_0
    1949: getfield      #12                 // Field state:I
    1952: iconst_4
    1953: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1956: ifne          1971
    1959: aload_0
    1960: getfield      #12                 // Field state:I
    1963: bipush        10
    1965: invokestatic  #41                 // Method org/xnio/Bits.allAreSet:(II)Z
    1968: ifeq          1983
    1971: aload_0
    1972: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1975: ifne          1983
    1978: aload_0
    1979: iconst_0
    1980: invokespecial #1                  // Method runReadListener:(Z)V
    1983: aload         16
    1985: athrow
    Exception table:
       from    to  target type
         168   188   191   Class java/io/IOException
         629   818   866   any
         866   868   866   any
         136   252  1812   Class java/lang/RuntimeException
         136   252  1812   Class java/io/IOException
         415   436  1812   Class java/lang/RuntimeException
         415   436  1812   Class java/io/IOException
         599   996  1812   Class java/lang/RuntimeException
         599   996  1812   Class java/io/IOException
        1159  1179  1812   Class java/lang/RuntimeException
        1159  1179  1812   Class java/io/IOException
        1342  1461  1812   Class java/lang/RuntimeException
        1342  1461  1812   Class java/io/IOException
        1624  1649  1812   Class java/lang/RuntimeException
        1624  1649  1812   Class java/io/IOException
         136   252  1821   any
         415   436  1821   any
         599   996  1821   any
        1159  1179  1821   any
        1342  1461  1821   any
        1624  1649  1821   any
        1812  1823  1821   any

  private long doWrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        4096
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #70                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #12                 // Field state:I
      34: iconst_2
      35: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokespecial #99                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #12                 // Field state:I
      53: iconst_1
      54: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: aload_0
      63: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: ifnull        127
      69: aload_0
      70: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      73: aload_0
      74: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      77: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      82: invokeinterface #139,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      87: istore        4
      89: iload         4
      91: ifeq          109
      94: aload_0
      95: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      98: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     103: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     106: ifeq          111
     109: lconst_0
     110: lreturn
     111: aload_0
     112: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     115: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     120: invokevirtual #140                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     123: pop
     124: goto          140
     127: aload_0
     128: aload_0
     129: getfield      #29                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     132: invokeinterface #117,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     137: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: aconst_null
     141: astore        4
     143: aload         4
     145: ifnull        170
     148: aload         4
     150: invokevirtual #141                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     153: getstatic     #142                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     156: if_acmpne     222
     159: aload         4
     161: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     164: getstatic     #128                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     167: if_acmpeq     222
     170: aload_1
     171: ifnonnull     198
     174: aload_0
     175: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     178: getstatic     #143                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
     181: aload_0
     182: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     185: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     190: invokevirtual #144                // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     193: astore        4
     195: goto          143
     198: aload_0
     199: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     202: aload_1
     203: iload_2
     204: iload_3
     205: aload_0
     206: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     209: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     214: invokevirtual #145                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     217: astore        4
     219: goto          143
     222: aload_0
     223: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     226: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     231: invokevirtual #119                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     234: pop
     235: aload         4
     237: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     240: getstatic     #134                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     243: if_acmpne     256
     246: new           #108                // class java/io/IOException
     249: dup
     250: ldc           #146                // String underflow
     252: invokespecial #147                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload         4
     258: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     261: getstatic     #128                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     264: if_acmpne     292
     267: aload_0
     268: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     271: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     276: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     279: ifne          292
     282: new           #108                // class java/io/IOException
     285: dup
     286: ldc           #148                // String overflow
     288: invokespecial #147                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     291: athrow
     292: aload_0
     293: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     296: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     301: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     304: ifeq          326
     307: aload_0
     308: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     311: aload_0
     312: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     315: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     320: invokeinterface #139,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     325: pop
     326: aload_0
     327: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     330: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     335: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     338: ifeq          388
     341: aload         4
     343: invokevirtual #149                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     346: i2l
     347: lstore        5
     349: aload_0
     350: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     353: ifnull        385
     356: aload_0
     357: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     360: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     365: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     368: ifne          385
     371: aload_0
     372: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     375: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     380: aload_0
     381: aconst_null
     382: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     385: lload         5
     387: lreturn
     388: aload_0
     389: aload         4
     391: invokespecial #133                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
     394: ifne          439
     397: lconst_0
     398: lstore        5
     400: aload_0
     401: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     404: ifnull        436
     407: aload_0
     408: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     411: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     416: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     419: ifne          436
     422: aload_0
     423: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     426: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     431: aload_0
     432: aconst_null
     433: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     436: lload         5
     438: lreturn
     439: aload         4
     441: invokevirtual #127                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     444: getstatic     #135                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     447: if_acmpne     466
     450: aload_1
     451: ifnull        466
     454: aload_0
     455: invokevirtual #87                 // Method notifyWriteClosed:()V
     458: new           #70                 // class java/nio/channels/ClosedChannelException
     461: dup
     462: invokespecial #71                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     465: athrow
     466: aload         4
     468: invokevirtual #149                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     471: i2l
     472: lstore        5
     474: aload_0
     475: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     478: ifnull        510
     481: aload_0
     482: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     485: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     490: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     493: ifne          510
     496: aload_0
     497: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     500: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     505: aload_0
     506: aconst_null
     507: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     510: lload         5
     512: lreturn
     513: astore        4
     515: aload_0
     516: invokevirtual #50                 // Method close:()V
     519: aload         4
     521: athrow
     522: astore        7
     524: aload_0
     525: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     528: ifnull        560
     531: aload_0
     532: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     535: invokeinterface #113,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     540: invokevirtual #115                // Method java/nio/ByteBuffer.hasRemaining:()Z
     543: ifne          560
     546: aload_0
     547: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     550: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     555: aload_0
     556: aconst_null
     557: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     560: aload         7
     562: athrow
    Exception table:
       from    to  target type
         140   349   513   Class java/lang/RuntimeException
         140   349   513   Class java/io/IOException
         388   400   513   Class java/lang/RuntimeException
         388   400   513   Class java/io/IOException
         439   474   513   Class java/lang/RuntimeException
         439   474   513   Class java/io/IOException
         140   349   522   any
         388   400   522   any
         439   474   522   any
         513   524   522   any

  private boolean handleHandshakeResult(javax.net.ssl.SSLEngineResult) throws java.io.IOException;
    Code:
       0: getstatic     #150                // Field io/undertow/protocols/ssl/SslConduit$6.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
       3: aload_1
       4: invokevirtual #141                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
       7: invokevirtual #151                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 66
                     3: 114
                     4: 161
               default: 195
          }
      40: aload_0
      41: dup
      42: getfield      #12                 // Field state:I
      45: sipush        2048
      48: ior
      49: putfield      #12                 // Field state:I
      52: aload_0
      53: invokespecial #152                // Method clearReadRequiresWrite:()V
      56: aload_0
      57: invokespecial #153                // Method clearWriteRequiresRead:()V
      60: aload_0
      61: invokespecial #154                // Method runTasks:()V
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokespecial #152                // Method clearReadRequiresWrite:()V
      70: aload_0
      71: dup
      72: getfield      #12                 // Field state:I
      75: sipush        2050
      78: ior
      79: putfield      #12                 // Field state:I
      82: aload_0
      83: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      86: invokeinterface #155,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      91: aload_0
      92: getfield      #12                 // Field state:I
      95: bipush        8
      97: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     100: ifeq          112
     103: aload_0
     104: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     107: invokeinterface #156,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.resumeReads:()V
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokespecial #153                // Method clearWriteRequiresRead:()V
     118: aload_0
     119: dup
     120: getfield      #12                 // Field state:I
     123: sipush        2049
     126: ior
     127: putfield      #12                 // Field state:I
     130: aload_0
     131: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     134: invokeinterface #157,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
     139: aload_0
     140: getfield      #12                 // Field state:I
     143: iconst_4
     144: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     147: ifeq          159
     150: aload_0
     151: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     154: invokeinterface #158,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     159: iconst_0
     160: ireturn
     161: aload_0
     162: getfield      #12                 // Field state:I
     165: sipush        2048
     168: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
     171: ifeq          195
     174: aload_0
     175: dup
     176: getfield      #12                 // Field state:I
     179: sipush        -2049
     182: iand
     183: putfield      #12                 // Field state:I
     186: aload_0
     187: getfield      #21                 // Field handshakeCallback:Ljava/lang/Runnable;
     190: invokeinterface #159,  1          // InterfaceMethod java/lang/Runnable.run:()V
     195: aload_0
     196: invokespecial #152                // Method clearReadRequiresWrite:()V
     199: aload_0
     200: invokespecial #153                // Method clearWriteRequiresRead:()V
     203: iconst_1
     204: ireturn

  private void clearReadRequiresWrite();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_1
       5: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          59
      11: aload_0
      12: dup
      13: getfield      #12                 // Field state:I
      16: bipush        -2
      18: iand
      19: putfield      #12                 // Field state:I
      22: aload_0
      23: getfield      #12                 // Field state:I
      26: iconst_4
      27: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      30: ifeq          38
      33: aload_0
      34: iconst_0
      35: invokespecial #40                 // Method resumeReads:(Z)V
      38: aload_0
      39: getfield      #12                 // Field state:I
      42: bipush        8
      44: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
      47: ifeq          59
      50: aload_0
      51: getfield      #24                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      54: invokeinterface #155,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      59: return

  private void clearWriteRequiresRead();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: iconst_2
       5: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          58
      11: aload_0
      12: dup
      13: getfield      #12                 // Field state:I
      16: bipush        -3
      18: iand
      19: putfield      #12                 // Field state:I
      22: aload_0
      23: getfield      #12                 // Field state:I
      26: bipush        8
      28: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: aload_0
      35: invokevirtual #160                // Method wakeupWrites:()V
      38: aload_0
      39: getfield      #12                 // Field state:I
      42: iconst_4
      43: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
      46: ifeq          58
      49: aload_0
      50: getfield      #27                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      53: invokeinterface #157,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
      58: return

  private void closed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: sipush        4096
       7: invokestatic  #39                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: dup
      16: getfield      #12                 // Field state:I
      19: sipush        5728
      22: ior
      23: putfield      #12                 // Field state:I
      26: aload_0
      27: invokevirtual #38                 // Method notifyReadClosed:()V
      30: aload_0
      31: invokevirtual #87                 // Method notifyWriteClosed:()V
      34: aload_0
      35: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      38: ifnull        55
      41: aload_0
      42: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      45: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      50: aload_0
      51: aconst_null
      52: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      55: aload_0
      56: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      59: ifnull        76
      62: aload_0
      63: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      71: aload_0
      72: aconst_null
      73: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      76: aload_0
      77: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      80: ifnull        97
      83: aload_0
      84: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      87: invokeinterface #116,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      92: aload_0
      93: aconst_null
      94: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      97: aload_0
      98: getfield      #12                 // Field state:I
     101: sipush        256
     104: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     107: ifeq          117
     110: aload_0
     111: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     114: invokevirtual #91                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
     117: aload_0
     118: getfield      #12                 // Field state:I
     121: sipush        128
     124: invokestatic  #90                 // Method org/xnio/Bits.allAreClear:(II)Z
     127: ifeq          150
     130: aload_0
     131: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
     134: invokevirtual #106                // Method javax/net/ssl/SSLEngine.closeInbound:()V
     137: goto          150
     140: astore_1
     141: getstatic     #46                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     144: aload_1
     145: invokeinterface #110,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     150: aload_0
     151: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
     154: invokestatic  #137                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     157: return
    Exception table:
       from    to  target type
         130   137   140   Class javax/net/ssl/SSLException

  private void runTasks();
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #80                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: aload_0
      11: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
      14: invokevirtual #25                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      17: invokevirtual #42                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      20: new           #161                // class java/util/ArrayList
      23: dup
      24: invokespecial #162                // Method java/util/ArrayList."<init>":()V
      27: astore_1
      28: aload_0
      29: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      32: invokevirtual #163                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      35: astore_2
      36: aload_2
      37: ifnull        59
      40: aload_1
      41: aload_2
      42: invokeinterface #164,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #163                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      55: astore_2
      56: goto          36
      59: aload_0
      60: dup
      61: astore_3
      62: monitorenter
      63: aload_0
      64: dup
      65: getfield      #8                  // Field outstandingTasks:I
      68: aload_1
      69: invokeinterface #165,  1          // InterfaceMethod java/util/List.size:()I
      74: iadd
      75: putfield      #8                  // Field outstandingTasks:I
      78: aload_1
      79: invokeinterface #166,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      84: astore        4
      86: aload         4
      88: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          128
      96: aload         4
      98: invokeinterface #168,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #169                // class java/lang/Runnable
     106: astore        5
     108: aload_0
     109: invokevirtual #170                // Method getWorker:()Lorg/xnio/XnioWorker;
     112: new           #171                // class io/undertow/protocols/ssl/SslConduit$5
     115: dup
     116: aload_0
     117: aload         5
     119: invokespecial #172                // Method io/undertow/protocols/ssl/SslConduit$5."<init>":(Lio/undertow/protocols/ssl/SslConduit;Ljava/lang/Runnable;)V
     122: invokevirtual #173                // Method org/xnio/XnioWorker.execute:(Ljava/lang/Runnable;)V
     125: goto          86
     128: aload_3
     129: monitorexit
     130: goto          140
     133: astore        6
     135: aload_3
     136: monitorexit
     137: aload         6
     139: athrow
     140: return
    Exception table:
       from    to  target type
          63   130   133   any
         133   137   133   any

  public javax.net.ssl.SSLEngine getSSLEngine();
    Code:
       0: aload_0
       1: getfield      #28                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #93                 // Method closed:()V
       4: return

  public java.lang.String toString();
    Code:
       0: new           #174                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #175                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #176                // String SslConduit{state=
       9: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field state:I
      16: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #179                // String , outstandingTasks=
      21: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field outstandingTasks:I
      28: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #180                // String , wrappedData=
      33: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      40: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #182                // String , dataToUnwrap=
      45: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      52: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #183                // String , unwrappedData=
      57: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      64: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  static int access$000(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #14                 // Field readListenerInvocationCount:I
       4: ireturn

  static io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler access$100(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #13                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
       4: areturn

  static int access$002(io.undertow.protocols.ssl.SslConduit, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #14                 // Field readListenerInvocationCount:I
       6: ireturn

  static int access$200(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #12                 // Field state:I
       4: ireturn

  static org.xnio.StreamConnection access$300(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field delegate:Lorg/xnio/StreamConnection;
       4: areturn

  static java.lang.Runnable access$400(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #10                 // Field runReadListenerCommand:Ljava/lang/Runnable;
       4: areturn

  static io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler access$700(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
       4: areturn

  static int access$800(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #8                  // Field outstandingTasks:I
       4: ireturn

  static int access$806(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field outstandingTasks:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #8                  // Field outstandingTasks:I
      11: ireturn

  static void access$900(io.undertow.protocols.ssl.SslConduit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method doHandshake:()V
       4: return

  static io.undertow.protocols.ssl.UndertowSslConnection access$1000(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  static int access$810(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field outstandingTasks:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #8                  // Field outstandingTasks:I
      11: ireturn

  static boolean access$1102(io.undertow.protocols.ssl.SslConduit, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field invokingReadListenerHandshake:Z
       6: ireturn

  static io.undertow.connector.PooledByteBuffer access$1200(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$1300(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$1302(io.undertow.protocols.ssl.SslConduit, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static io.undertow.connector.PooledByteBuffer access$1202(io.undertow.protocols.ssl.SslConduit, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static io.undertow.connector.PooledByteBuffer access$1400(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static void access$1500(io.undertow.protocols.ssl.SslConduit, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method runReadListener:(Z)V
       5: return

  static {};
    Code:
       0: ldc           #186                // String io.undertow.ssl.max-read-listener-invocations
       2: bipush        100
       4: invokestatic  #187                // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #188                // Method java/lang/Integer.intValue:()I
      10: putstatic     #45                 // Field MAX_READ_LISTENER_INVOCATIONS:I
      13: iconst_0
      14: invokestatic  #189                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      17: putstatic     #143                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
      20: return
}
