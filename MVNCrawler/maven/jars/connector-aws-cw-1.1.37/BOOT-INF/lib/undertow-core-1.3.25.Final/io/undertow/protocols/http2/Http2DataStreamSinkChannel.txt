Compiled from "Http2DataStreamSinkChannel.java"
public class io.undertow.protocols.http2.Http2DataStreamSinkChannel extends io.undertow.protocols.http2.Http2StreamSinkChannel implements io.undertow.protocols.http2.Http2Stream {
  private final io.undertow.util.HeaderMap headers;

  private boolean first;

  private final io.undertow.protocols.http2.HpackEncoder encoder;

  private org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel> completionListener;

  private final int frameType;

  io.undertow.protocols.http2.Http2DataStreamSinkChannel(io.undertow.protocols.http2.Http2Channel, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: new           #1                  // class io/undertow/util/HeaderMap
       6: dup
       7: invokespecial #2                  // Method io/undertow/util/HeaderMap."<init>":()V
      10: iload_3
      11: invokespecial #3                  // Method "<init>":(Lio/undertow/protocols/http2/Http2Channel;ILio/undertow/util/HeaderMap;I)V
      14: return

  io.undertow.protocols.http2.Http2DataStreamSinkChannel(io.undertow.protocols.http2.Http2Channel, int, io.undertow.util.HeaderMap, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method io/undertow/protocols/http2/Http2StreamSinkChannel."<init>":(Lio/undertow/protocols/http2/Http2Channel;I)V
       6: aload_0
       7: iconst_1
       8: putfield      #5                  // Field first:Z
      11: aload_0
      12: aload_1
      13: invokevirtual #6                  // Method io/undertow/protocols/http2/Http2Channel.getEncoder:()Lio/undertow/protocols/http2/HpackEncoder;
      16: putfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
      19: aload_0
      20: aload_3
      21: putfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
      24: aload_0
      25: iload         4
      27: putfield      #9                  // Field frameType:I
      30: return

  protected io.undertow.server.protocol.framed.SendFrameHeader createFrameHeaderImpl();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
       5: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
       8: invokevirtual #12                 // Method grabFlowControlBytes:(I)I
      11: istore_1
      12: iload_1
      13: ifne          42
      16: aload_0
      17: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      20: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      23: ifeq          42
      26: new           #14                 // class io/undertow/server/protocol/framed/SendFrameHeader
      29: dup
      30: aload_0
      31: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      34: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      37: aconst_null
      38: invokespecial #15                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
      41: areturn
      42: aload_0
      43: invokevirtual #16                 // Method isWritesShutdown:()Z
      46: ifeq          64
      49: iload_1
      50: aload_0
      51: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      54: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      57: if_icmplt     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore_2
      66: aload_0
      67: invokevirtual #17                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      70: checkcast     #18                 // class io/undertow/protocols/http2/Http2Channel
      73: invokevirtual #19                 // Method io/undertow/protocols/http2/Http2Channel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      76: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      81: astore_3
      82: aconst_null
      83: astore        4
      85: aload_3
      86: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      91: astore        5
      93: iconst_0
      94: istore        6
      96: aload_0
      97: getfield      #5                  // Field first:Z
     100: ifeq          472
     103: iconst_1
     104: istore        6
     106: aload_0
     107: iconst_0
     108: putfield      #5                  // Field first:Z
     111: aload         5
     113: iconst_0
     114: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     117: pop
     118: aload         5
     120: iconst_0
     121: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     124: pop
     125: aload         5
     127: iconst_0
     128: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     131: pop
     132: aload         5
     134: aload_0
     135: getfield      #9                  // Field frameType:I
     138: i2b
     139: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     142: pop
     143: aload         5
     145: iconst_0
     146: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     149: pop
     150: aload         5
     152: aload_0
     153: invokevirtual #23                 // Method getStreamId:()I
     156: invokestatic  #24                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     159: aload_0
     160: aload         5
     162: invokevirtual #25                 // Method writeBeforeHeaderBlock:(Ljava/nio/ByteBuffer;)V
     165: aload_0
     166: getfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
     169: aload_0
     170: getfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
     173: aload         5
     175: invokevirtual #26                 // Method io/undertow/protocols/http2/HpackEncoder.encode:(Lio/undertow/util/HeaderMap;Ljava/nio/ByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
     178: astore        7
     180: aload_3
     181: astore        8
     183: aload         5
     185: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
     188: bipush        9
     190: isub
     191: istore        9
     193: aload         5
     195: iconst_0
     196: iload         9
     198: bipush        16
     200: ishr
     201: sipush        255
     204: iand
     205: i2b
     206: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     209: pop
     210: aload         5
     212: iconst_1
     213: iload         9
     215: bipush        8
     217: ishr
     218: sipush        255
     221: iand
     222: i2b
     223: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     226: pop
     227: aload         5
     229: iconst_2
     230: iload         9
     232: sipush        255
     235: iand
     236: i2b
     237: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     240: pop
     241: aload         5
     243: iconst_4
     244: aload_0
     245: invokevirtual #16                 // Method isWritesShutdown:()Z
     248: ifeq          273
     251: aload_0
     252: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     255: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     258: ifne          273
     261: aload_0
     262: getfield      #9                  // Field frameType:I
     265: iconst_1
     266: if_icmpne     273
     269: iconst_1
     270: goto          274
     273: iconst_0
     274: aload         7
     276: getstatic     #29                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     279: if_acmpne     286
     282: iconst_4
     283: goto          287
     286: iconst_0
     287: ior
     288: i2b
     289: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     292: pop
     293: aload         7
     295: getstatic     #29                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     298: if_acmpeq     472
     301: aload_0
     302: aload         4
     304: aload         8
     306: invokevirtual #30                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     309: astore        4
     311: aload         4
     313: aload         4
     315: arraylength
     316: iconst_1
     317: isub
     318: aaload
     319: astore        8
     321: aload         8
     323: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     328: astore        10
     330: aload         10
     332: iconst_0
     333: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     336: pop
     337: aload         10
     339: iconst_0
     340: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     343: pop
     344: aload         10
     346: iconst_0
     347: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     350: pop
     351: aload         10
     353: bipush        9
     355: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     358: pop
     359: aload         10
     361: iconst_0
     362: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     365: pop
     366: aload         10
     368: aload_0
     369: invokevirtual #23                 // Method getStreamId:()I
     372: invokestatic  #24                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     375: aload_0
     376: getfield      #7                  // Field encoder:Lio/undertow/protocols/http2/HpackEncoder;
     379: aload_0
     380: getfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
     383: aload         10
     385: invokevirtual #26                 // Method io/undertow/protocols/http2/HpackEncoder.encode:(Lio/undertow/util/HeaderMap;Ljava/nio/ByteBuffer;)Lio/undertow/protocols/http2/HpackEncoder$State;
     388: astore        7
     390: aload         10
     392: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
     395: bipush        9
     397: isub
     398: istore        11
     400: aload         10
     402: iconst_0
     403: iload         11
     405: bipush        16
     407: ishr
     408: sipush        255
     411: iand
     412: i2b
     413: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     416: pop
     417: aload         10
     419: iconst_1
     420: iload         11
     422: bipush        8
     424: ishr
     425: sipush        255
     428: iand
     429: i2b
     430: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     433: pop
     434: aload         10
     436: iconst_2
     437: iload         11
     439: sipush        255
     442: iand
     443: i2b
     444: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     447: pop
     448: aload         10
     450: iconst_4
     451: aload         7
     453: getstatic     #29                 // Field io/undertow/protocols/http2/HpackEncoder$State.COMPLETE:Lio/undertow/protocols/http2/HpackEncoder$State;
     456: if_acmpne     463
     459: iconst_4
     460: goto          464
     463: iconst_0
     464: i2b
     465: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     468: pop
     469: goto          293
     472: aload         4
     474: ifnonnull     481
     477: aload_3
     478: goto          489
     481: aload         4
     483: aload         4
     485: arraylength
     486: iconst_1
     487: isub
     488: aaload
     489: astore        7
     491: aload         7
     493: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     498: astore        8
     500: iconst_0
     501: istore        9
     503: aload_0
     504: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     507: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
     510: ifle          682
     513: iload_1
     514: ifle          670
     517: aload         8
     519: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
     522: bipush        8
     524: if_icmpge     565
     527: aload_0
     528: aload         4
     530: aload         7
     532: invokevirtual #30                 // Method allocateAll:([Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/PooledByteBuffer;)[Lio/undertow/connector/PooledByteBuffer;
     535: astore        4
     537: aload         4
     539: ifnonnull     546
     542: aload_3
     543: goto          554
     546: aload         4
     548: aload         4
     550: arraylength
     551: iconst_1
     552: isub
     553: aaload
     554: astore        7
     556: aload         7
     558: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     563: astore        8
     565: aload_0
     566: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     569: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
     572: iload_1
     573: isub
     574: istore        9
     576: aload_0
     577: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     580: aload_0
     581: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     584: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
     587: iload_1
     588: iadd
     589: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     592: pop
     593: aload         8
     595: iload_1
     596: bipush        16
     598: ishr
     599: sipush        255
     602: iand
     603: i2b
     604: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     607: pop
     608: aload         8
     610: iload_1
     611: bipush        8
     613: ishr
     614: sipush        255
     617: iand
     618: i2b
     619: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     622: pop
     623: aload         8
     625: iload_1
     626: sipush        255
     629: iand
     630: i2b
     631: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     634: pop
     635: aload         8
     637: iconst_0
     638: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     641: pop
     642: aload         8
     644: iload_2
     645: ifeq          652
     648: iconst_1
     649: goto          653
     652: iconst_0
     653: i2b
     654: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     657: pop
     658: aload         8
     660: aload_0
     661: invokevirtual #23                 // Method getStreamId:()I
     664: invokestatic  #24                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     667: goto          735
     670: aload_0
     671: invokevirtual #10                 // Method getBuffer:()Ljava/nio/ByteBuffer;
     674: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
     677: istore        9
     679: goto          735
     682: iload_2
     683: ifeq          735
     686: iload         6
     688: ifne          735
     691: aload         8
     693: iconst_0
     694: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     697: pop
     698: aload         8
     700: iconst_0
     701: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     704: pop
     705: aload         8
     707: iconst_0
     708: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     711: pop
     712: aload         8
     714: iconst_0
     715: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     718: pop
     719: aload         8
     721: iconst_1
     722: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     725: pop
     726: aload         8
     728: aload_0
     729: invokevirtual #23                 // Method getStreamId:()I
     732: invokestatic  #24                 // Method io/undertow/protocols/http2/Http2ProtocolUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     735: aload         4
     737: ifnonnull     758
     740: aload         8
     742: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     745: pop
     746: new           #14                 // class io/undertow/server/protocol/framed/SendFrameHeader
     749: dup
     750: iload         9
     752: aload         7
     754: invokespecial #15                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
     757: areturn
     758: iconst_0
     759: istore        10
     761: iconst_0
     762: istore        11
     764: iload         11
     766: aload         4
     768: arraylength
     769: if_icmpge     810
     772: iload         10
     774: aload         4
     776: iload         11
     778: aaload
     779: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     784: invokevirtual #27                 // Method java/nio/ByteBuffer.position:()I
     787: iadd
     788: istore        10
     790: aload         4
     792: iload         11
     794: aaload
     795: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     800: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     803: pop
     804: iinc          11, 1
     807: goto          764
     810: iload         10
     812: invokestatic  #33                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     815: astore        11
     817: iconst_0
     818: istore        12
     820: iload         12
     822: aload         4
     824: arraylength
     825: if_icmpge     850
     828: aload         11
     830: aload         4
     832: iload         12
     834: aaload
     835: invokeinterface #21,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     840: invokevirtual #34                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     843: pop
     844: iinc          12, 1
     847: goto          820
     850: aload         11
     852: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     855: pop
     856: new           #14                 // class io/undertow/server/protocol/framed/SendFrameHeader
     859: dup
     860: iload         9
     862: new           #35                 // class io/undertow/util/ImmediatePooledByteBuffer
     865: dup
     866: aload         11
     868: invokespecial #36                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     871: invokespecial #15                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
     874: astore        12
     876: iconst_0
     877: istore        13
     879: iload         13
     881: aload         4
     883: arraylength
     884: if_icmpge     903
     887: aload         4
     889: iload         13
     891: aaload
     892: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     897: iinc          13, 1
     900: goto          879
     903: aload         12
     905: areturn
     906: astore        14
     908: iconst_0
     909: istore        15
     911: iload         15
     913: aload         4
     915: arraylength
     916: if_icmpge     935
     919: aload         4
     921: iload         15
     923: aaload
     924: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     929: iinc          15, 1
     932: goto          911
     935: aload         14
     937: athrow
    Exception table:
       from    to  target type
         810   876   906   any
         906   908   906   any

  protected void writeBeforeHeaderBlock(java.nio.ByteBuffer);
    Code:
       0: return

  protected boolean isFlushRequiredOnEmptyBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field first:Z
       4: ireturn

  public io.undertow.util.HeaderMap getHeaders();
    Code:
       0: aload_0
       1: getfield      #8                  // Field headers:Lio/undertow/util/HeaderMap;
       4: areturn

  protected void handleFlushComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #38                 // Method io/undertow/protocols/http2/Http2StreamSinkChannel.handleFlushComplete:(Z)V
       5: iload_1
       6: ifeq          25
       9: aload_0
      10: getfield      #39                 // Field completionListener:Lorg/xnio/ChannelListener;
      13: ifnull        25
      16: aload_0
      17: aload_0
      18: getfield      #39                 // Field completionListener:Lorg/xnio/ChannelListener;
      21: invokestatic  #40                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      24: pop
      25: return

  public org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel> getCompletionListener();
    Code:
       0: aload_0
       1: getfield      #39                 // Field completionListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCompletionListener(org.xnio.ChannelListener<io.undertow.protocols.http2.Http2DataStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field completionListener:Lorg/xnio/ChannelListener;
       5: return
}
