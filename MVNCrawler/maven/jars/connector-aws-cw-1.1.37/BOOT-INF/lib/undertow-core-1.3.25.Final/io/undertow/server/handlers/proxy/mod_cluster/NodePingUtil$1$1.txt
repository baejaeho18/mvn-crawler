Compiled from "NodePingUtil.java"
class io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$1$1 implements io.undertow.server.handlers.proxy.ProxyCallback<io.undertow.server.handlers.proxy.ProxyConnection> {
  final io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$1 this$0;

  io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$1$1(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$1);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void completed(io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyConnection);
    Code:
       0: new           #3                  // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
       8: getfield      #4                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1.val$callback:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
      11: getstatic     #5                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker.NO_CHECK:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      14: iconst_0
      15: invokespecial #6                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;Z)V
      18: astore_3
      19: aload_1
      20: getstatic     #7                  // Field io/undertow/util/SameThreadExecutor.INSTANCE:Ljava/util/concurrent/Executor;
      23: new           #8                  // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$ConnectionPoolPingTask
      26: dup
      27: aload_2
      28: aload_3
      29: invokespecial #9                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$ConnectionPoolPingTask."<init>":(Lio/undertow/server/handlers/proxy/ProxyConnection;Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)V
      32: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      35: pop
      36: aload_1
      37: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
      40: aload_3
      41: aload_0
      42: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
      45: getfield      #12                 // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1.val$timeout:I
      48: i2l
      49: getstatic     #13                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokestatic  #14                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil.scheduleCancelTask:(Lorg/xnio/XnioIoThread;Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$CancellableTask;JLjava/util/concurrent/TimeUnit;)V
      55: return

  public void failed(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
       4: getfield      #4                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1.val$callback:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
       7: invokeinterface #15,  1           // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.failed:()V
      12: return

  public void queuedRequestFailed(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
       4: getfield      #4                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1.val$callback:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
       7: invokeinterface #15,  1           // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.failed:()V
      12: return

  public void couldNotResolveBackend(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1;
       4: getfield      #4                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$1.val$callback:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
       7: invokeinterface #15,  1           // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.failed:()V
      12: return

  public void completed(io.undertow.server.HttpServerExchange, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #16                 // class io/undertow/server/handlers/proxy/ProxyConnection
       6: invokevirtual #17                 // Method completed:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/handlers/proxy/ProxyConnection;)V
       9: return
}
