Compiled from "ServerSentEventHandler.java"
class io.undertow.server.handlers.sse.ServerSentEventHandler$2 implements org.xnio.ChannelExceptionHandler<org.xnio.channels.StreamSinkChannel> {
  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.server.handlers.sse.ServerSentEventHandler this$0;

  io.undertow.server.handlers.sse.ServerSentEventHandler$2(io.undertow.server.handlers.sse.ServerSentEventHandler, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/sse/ServerSentEventHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleException(org.xnio.channels.StreamSinkChannel, java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokestatic  #5                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      10: return

  public void handleException(java.nio.channels.Channel, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class org/xnio/channels/StreamSinkChannel
       5: aload_2
       6: invokevirtual #7                  // Method handleException:(Lorg/xnio/channels/StreamSinkChannel;Ljava/io/IOException;)V
       9: return
}
