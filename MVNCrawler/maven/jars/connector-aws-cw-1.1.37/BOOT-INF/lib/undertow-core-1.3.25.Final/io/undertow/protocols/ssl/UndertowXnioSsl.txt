Compiled from "UndertowXnioSsl.java"
public class io.undertow.protocols.ssl.UndertowXnioSsl extends org.xnio.ssl.XnioSsl {
  private static final io.undertow.connector.ByteBufferPool DEFAULT_BUFFER_POOL;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private volatile javax.net.ssl.SSLContext sslContext;

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #3                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
       6: aload_2
       7: invokestatic  #4                  // Method org/xnio/ssl/JsseSslUtils.createSSLContext:(Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
      10: invokespecial #5                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      13: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #3                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
       6: aload_3
       7: invokespecial #5                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      10: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokestatic  #4                  // Method org/xnio/ssl/JsseSslUtils.createSSLContext:(Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
       8: invokespecial #5                  // Method "<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Ljavax/net/ssl/SSLContext;)V
      11: return

  public io.undertow.protocols.ssl.UndertowXnioSsl(org.xnio.Xnio, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool, javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokespecial #6                  // Method org/xnio/ssl/XnioSsl."<init>":(Lorg/xnio/Xnio;Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;)V
       8: aload_0
       9: aload_3
      10: putfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      13: aload_0
      14: aload         4
      16: putfield      #2                  // Field sslContext:Ljavax/net/ssl/SSLContext;
      19: return

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  public static javax.net.ssl.SSLEngine getSslEngine(org.xnio.ssl.SslConnection);
    Code:
       0: aload_0
       1: instanceof    #7                  // class io/undertow/protocols/ssl/UndertowSslConnection
       4: ifeq          15
       7: aload_0
       8: checkcast     #7                  // class io/undertow/protocols/ssl/UndertowSslConnection
      11: invokevirtual #8                  // Method io/undertow/protocols/ssl/UndertowSslConnection.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
      14: areturn
      15: aload_0
      16: invokestatic  #9                  // Method org/xnio/ssl/JsseXnioSsl.getSslEngine:(Lorg/xnio/ssl/SslConnection;)Ljavax/net/ssl/SSLEngine;
      19: areturn

  public org.xnio.IoFuture<org.xnio.channels.ConnectedSslStreamChannel> connectSsl(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.ConnectedSslStreamChannel>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #10                 // class org/xnio/FutureResult
       3: dup
       4: invokestatic  #11                 // Method org/xnio/IoUtils.directExecutor:()Ljava/util/concurrent/Executor;
       7: invokespecial #12                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
      10: astore        7
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: new           #13                 // class io/undertow/protocols/ssl/UndertowXnioSsl$2
      19: dup
      20: aload_0
      21: aload         7
      23: aload         4
      25: invokespecial #14                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$2."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #15                 // Method openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: new           #16                 // class io/undertow/protocols/ssl/UndertowXnioSsl$1
      38: dup
      39: aload_0
      40: invokespecial #17                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$1."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
      43: aload         7
      45: invokeinterface #18,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      50: astore        8
      52: aload         7
      54: invokevirtual #19                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      57: new           #20                 // class io/undertow/protocols/ssl/UndertowXnioSsl$3
      60: dup
      61: aload_0
      62: invokespecial #21                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$3."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
      65: aload         8
      67: invokeinterface #18,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      72: pop
      73: aload         7
      75: aload         8
      77: invokevirtual #22                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      80: aload         7
      82: invokevirtual #19                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      85: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioWorker, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #10                 // class org/xnio/FutureResult
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
       8: astore        7
      10: aload_1
      11: aload_2
      12: aload_3
      13: new           #23                 // class io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener
      16: dup
      17: aload_0
      18: aload         6
      20: aload_3
      21: aload         7
      23: aload         4
      25: invokespecial #24                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #25                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: astore        8
      37: aload_0
      38: aload         7
      40: aload         8
      42: invokespecial #26                 // Method setupSslConnection:(Lorg/xnio/FutureResult;Lorg/xnio/IoFuture;)Lorg/xnio/IoFuture;
      45: areturn

  public org.xnio.IoFuture<org.xnio.ssl.SslConnection> openSslConnection(org.xnio.XnioIoThread, java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.ssl.SslConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: new           #10                 // class org/xnio/FutureResult
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
       8: astore        7
      10: aload_1
      11: aload_2
      12: aload_3
      13: new           #23                 // class io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener
      16: dup
      17: aload_0
      18: aload         6
      20: aload_3
      21: aload         7
      23: aload         4
      25: invokespecial #24                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$StreamConnectionChannelListener."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
      28: aload         5
      30: aload         6
      32: invokevirtual #27                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      35: astore        8
      37: aload_0
      38: aload         7
      40: aload         8
      42: invokespecial #26                 // Method setupSslConnection:(Lorg/xnio/FutureResult;Lorg/xnio/IoFuture;)Lorg/xnio/IoFuture;
      45: areturn

  public org.xnio.ssl.SslConnection wrapExistingConnection(org.xnio.StreamConnection, org.xnio.OptionMap);
    Code:
       0: new           #7                  // class io/undertow/protocols/ssl/UndertowSslConnection
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       9: aload_2
      10: aload_1
      11: invokevirtual #28                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      14: checkcast     #29                 // class java/net/InetSocketAddress
      17: invokestatic  #30                 // Method org/xnio/ssl/JsseSslUtils.createSSLEngine:(Ljavax/net/ssl/SSLContext;Lorg/xnio/OptionMap;Ljava/net/InetSocketAddress;)Ljavax/net/ssl/SSLEngine;
      20: aload_0
      21: getfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      24: invokespecial #31                 // Method io/undertow/protocols/ssl/UndertowSslConnection."<init>":(Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;)V
      27: areturn

  private org.xnio.IoFuture<org.xnio.ssl.SslConnection> setupSslConnection(org.xnio.FutureResult<org.xnio.ssl.SslConnection>, org.xnio.IoFuture<org.xnio.StreamConnection>);
    Code:
       0: aload_2
       1: new           #32                 // class io/undertow/protocols/ssl/UndertowXnioSsl$4
       4: dup
       5: aload_0
       6: invokespecial #33                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$4."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;)V
       9: aload_1
      10: invokeinterface #18,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      15: pop
      16: aload_1
      17: aload_2
      18: invokevirtual #22                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
      21: aload_1
      22: invokevirtual #19                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      25: areturn

  public org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel> createSslTcpServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.channels.ConnectedSslStreamChannel>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload         4
       6: invokevirtual #34                 // Method createSslConnectionServer:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
       9: astore        5
      11: new           #35                 // class io/undertow/protocols/ssl/UndertowXnioSsl$5
      14: dup
      15: aload_0
      16: aload         5
      18: invokespecial #36                 // Method io/undertow/protocols/ssl/UndertowXnioSsl$5."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;)V
      21: astore        6
      23: aload         6
      25: invokeinterface #37,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      30: aload_3
      31: invokeinterface #38,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      36: aload         6
      38: areturn

  public void updateSSLContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       5: return

  public org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection> createSslConnectionServer(org.xnio.XnioWorker, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.ssl.SslConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: new           #39                 // class io/undertow/protocols/ssl/UndertowAcceptingSslChannel
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: aload         4
      10: invokevirtual #40                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
      13: aload         4
      15: aload_0
      16: getfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      19: iconst_0
      20: invokespecial #41                 // Method io/undertow/protocols/ssl/UndertowAcceptingSslChannel."<init>":(Lio/undertow/protocols/ssl/UndertowXnioSsl;Lorg/xnio/channels/AcceptingChannel;Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;Z)V
      23: astore        5
      25: aload_3
      26: ifnull        40
      29: aload         5
      31: invokevirtual #42                 // Method io/undertow/protocols/ssl/UndertowAcceptingSslChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
      34: aload_3
      35: invokeinterface #38,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      40: aload         5
      42: areturn

  static javax.net.ssl.SSLContext access$000(io.undertow.protocols.ssl.UndertowXnioSsl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  static io.undertow.connector.ByteBufferPool access$100(io.undertow.protocols.ssl.UndertowXnioSsl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  static {};
    Code:
       0: new           #43                 // class io/undertow/server/DefaultByteBufferPool
       3: dup
       4: iconst_1
       5: sipush        17408
       8: iconst_m1
       9: bipush        12
      11: invokespecial #44                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZIII)V
      14: putstatic     #3                  // Field DEFAULT_BUFFER_POOL:Lio/undertow/connector/ByteBufferPool;
      17: return
}
