Compiled from "PeerNameResolvingHandler.java"
public class io.undertow.server.handlers.PeerNameResolvingHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final io.undertow.server.handlers.PeerNameResolvingHandler$ResolveType resolveType;

  public io.undertow.server.handlers.PeerNameResolvingHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: getstatic     #3                  // Field io/undertow/server/handlers/PeerNameResolvingHandler$ResolveType.FORWARD_AND_REVERSE:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      13: putfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      16: return

  public io.undertow.server.handlers.PeerNameResolvingHandler(io.undertow.server.HttpHandler, io.undertow.server.handlers.PeerNameResolvingHandler$ResolveType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      14: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method io/undertow/server/HttpServerExchange.getSourceAddress:()Ljava/net/InetSocketAddress;
       4: astore_2
       5: aload_2
       6: ifnull        159
       9: aload_0
      10: getfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      13: getstatic     #6                  // Field io/undertow/server/handlers/PeerNameResolvingHandler$ResolveType.FORWARD:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      16: if_acmpeq     29
      19: aload_0
      20: getfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      23: getstatic     #3                  // Field io/undertow/server/handlers/PeerNameResolvingHandler$ResolveType.FORWARD_AND_REVERSE:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
      26: if_acmpne     106
      29: aload_2
      30: invokevirtual #7                  // Method java/net/InetSocketAddress.isUnresolved:()Z
      33: ifeq          106
      36: invokestatic  #8                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      39: ifnonnull     70
      42: new           #9                  // class java/net/InetSocketAddress
      45: dup
      46: aload_2
      47: invokevirtual #10                 // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
      50: invokestatic  #11                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      53: aload_2
      54: invokevirtual #12                 // Method java/net/InetSocketAddress.getPort:()I
      57: invokespecial #13                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      60: astore_3
      61: aload_1
      62: aload_3
      63: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.setSourceAddress:(Ljava/net/InetSocketAddress;)Lio/undertow/server/HttpServerExchange;
      66: pop
      67: goto          84
      70: new           #15                 // class io/undertow/server/handlers/PeerNameResolvingHandler$1
      73: dup
      74: aload_0
      75: aload_2
      76: aload_1
      77: invokespecial #16                 // Method io/undertow/server/handlers/PeerNameResolvingHandler$1."<init>":(Lio/undertow/server/handlers/PeerNameResolvingHandler;Ljava/net/InetSocketAddress;Lio/undertow/server/HttpServerExchange;)V
      80: invokestatic  #17                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      83: pop
      84: goto          159
      87: astore_3
      88: getstatic     #19                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      91: aload_3
      92: ldc           #20                 // String Could not resolve hostname %s
      94: aload_2
      95: invokevirtual #21                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      98: invokeinterface #22,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
     103: goto          159
     106: aload_0
     107: getfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
     110: getstatic     #23                 // Field io/undertow/server/handlers/PeerNameResolvingHandler$ResolveType.REVERSE:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
     113: if_acmpeq     126
     116: aload_0
     117: getfield      #4                  // Field resolveType:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
     120: getstatic     #3                  // Field io/undertow/server/handlers/PeerNameResolvingHandler$ResolveType.FORWARD_AND_REVERSE:Lio/undertow/server/handlers/PeerNameResolvingHandler$ResolveType;
     123: if_acmpne     159
     126: invokestatic  #8                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
     129: ifnonnull     140
     132: aload_2
     133: invokevirtual #10                 // Method java/net/InetSocketAddress.getHostName:()Ljava/lang/String;
     136: pop
     137: goto          153
     140: new           #24                 // class io/undertow/server/handlers/PeerNameResolvingHandler$2
     143: dup
     144: aload_0
     145: aload_2
     146: invokespecial #25                 // Method io/undertow/server/handlers/PeerNameResolvingHandler$2."<init>":(Lio/undertow/server/handlers/PeerNameResolvingHandler;Ljava/net/InetSocketAddress;)V
     149: invokestatic  #26                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     152: pop
     153: aload_1
     154: aload_2
     155: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.setSourceAddress:(Ljava/net/InetSocketAddress;)Lio/undertow/server/HttpServerExchange;
     158: pop
     159: aload_0
     160: getfield      #2                  // Field next:Lio/undertow/server/HttpHandler;
     163: aload_1
     164: invokeinterface #27,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     169: return
    Exception table:
       from    to  target type
          36    84    87   Class java/net/UnknownHostException
}
