Compiled from "JDK9AlpnOpenListener.java"
public class io.undertow.server.protocol.http.JDK9AlpnOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection>, io.undertow.server.protocol.http.AlpnOpenListener$AlpnDelegateListener {
  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.util.Map<java.lang.String, io.undertow.server.protocol.http.JDK9AlpnOpenListener$ListenerEntry> listeners;

  private final java.lang.String fallbackProtocol;

  private volatile io.undertow.server.HttpHandler rootHandler;

  private volatile org.xnio.OptionMap undertowOptions;

  private volatile boolean statisticsEnabled;

  public io.undertow.server.protocol.http.JDK9AlpnOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, java.lang.String, io.undertow.server.DelegateOpenListener);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      12: putfield      #1                  // Field listeners:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      20: aload_0
      21: aload_3
      22: putfield      #2                  // Field fallbackProtocol:Ljava/lang/String;
      25: aload_3
      26: ifnull        42
      29: aload         4
      31: ifnull        42
      34: aload_0
      35: aload_3
      36: aload         4
      38: iconst_0
      39: invokevirtual #7                  // Method addProtocol:(Ljava/lang/String;Lio/undertow/server/DelegateOpenListener;I)V
      42: aload_0
      43: aload_2
      44: getstatic     #8                  // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      47: iconst_0
      48: invokevirtual #9                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      51: putfield      #10                 // Field statisticsEnabled:Z
      54: aload_0
      55: aload_2
      56: putfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
      59: return

  public io.undertow.server.HttpHandler getRootHandler();
    Code:
       0: aload_0
       1: getfield      #12                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field rootHandler:Lio/undertow/server/HttpHandler;
       5: aload_0
       6: getfield      #1                  // Field listeners:Ljava/util/Map;
       9: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          60
      29: aload_2
      30: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #17                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #19                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry
      48: getfield      #20                 // Field io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      51: aload_1
      52: invokeinterface #21,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      57: goto          20
      60: return

  public org.xnio.OptionMap getUndertowOptions();
    Code:
       0: aload_0
       1: getfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
       4: areturn

  public void setUndertowOptions(org.xnio.OptionMap);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #22                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #23                 // String undertowOptions
       9: invokeinterface #24,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #11                 // Field undertowOptions:Lorg/xnio/OptionMap;
      20: aload_0
      21: getfield      #1                  // Field listeners:Ljava/util/Map;
      24: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          78
      44: aload_2
      45: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #17                 // class java/util/Map$Entry
      53: astore_3
      54: aload_3
      55: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: checkcast     #19                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry
      63: getfield      #20                 // Field io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      66: aload_0
      67: getfield      #12                 // Field rootHandler:Lio/undertow/server/HttpHandler;
      70: invokeinterface #21,  2           // InterfaceMethod io/undertow/server/DelegateOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      75: goto          35
      78: aload_0
      79: aload_1
      80: getstatic     #8                  // Field io/undertow/UndertowOptions.ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
      83: iconst_0
      84: invokevirtual #9                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      87: putfield      #10                 // Field statisticsEnabled:Z
      90: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public io.undertow.server.ConnectorStatistics getConnectorStatistics();
    Code:
       0: aload_0
       1: getfield      #10                 // Field statisticsEnabled:Z
       4: ifeq          111
       7: new           #25                 // class java/util/ArrayList
      10: dup
      11: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #1                  // Field listeners:Ljava/util/Map;
      19: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          85
      39: aload_2
      40: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #17                 // class java/util/Map$Entry
      48: astore_3
      49: aload_3
      50: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      55: checkcast     #19                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry
      58: getfield      #20                 // Field io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      61: invokeinterface #27,  1           // InterfaceMethod io/undertow/server/DelegateOpenListener.getConnectorStatistics:()Lio/undertow/server/ConnectorStatistics;
      66: astore        4
      68: aload         4
      70: ifnull        82
      73: aload_1
      74: aload         4
      76: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          30
      85: new           #29                 // class io/undertow/server/AggregateConnectorStatistics
      88: dup
      89: aload_1
      90: aload_1
      91: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
      96: anewarray     #31                 // class io/undertow/server/ConnectorStatistics
      99: invokeinterface #32,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     104: checkcast     #33                 // class "[Lio/undertow/server/ConnectorStatistics;"
     107: invokespecial #34                 // Method io/undertow/server/AggregateConnectorStatistics."<init>":([Lio/undertow/server/ConnectorStatistics;)V
     110: areturn
     111: aconst_null
     112: areturn

  public void addProtocol(java.lang.String, io.undertow.server.DelegateOpenListener, int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/Map;
       4: aload_1
       5: new           #19                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry
       8: dup
       9: aload_2
      10: iload_3
      11: aload_1
      12: invokespecial #35                 // Method io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry."<init>":(Lio/undertow/server/DelegateOpenListener;ILjava/lang/String;)V
      15: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: getstatic     #37                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: invokeinterface #38,  1           // InterfaceMethod io/undertow/UndertowLogger.isTraceEnabled:()Z
       8: ifeq          25
      11: getstatic     #37                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      14: ldc           #39                 // String Opened connection with %s
      16: aload_1
      17: invokevirtual #40                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      20: invokeinterface #41,  3           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_1
      26: checkcast     #42                 // class org/xnio/ssl/SslConnection
      29: invokestatic  #43                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslEngine:(Lorg/xnio/ssl/SslConnection;)Ljavax/net/ssl/SSLEngine;
      32: astore_2
      33: new           #44                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$AlpnConnectionListener
      36: dup
      37: aload_0
      38: aload_1
      39: aload_2
      40: aconst_null
      41: invokespecial #45                 // Method io/undertow/server/protocol/http/JDK9AlpnOpenListener$AlpnConnectionListener."<init>":(Lio/undertow/server/protocol/http/JDK9AlpnOpenListener;Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/server/protocol/http/JDK9AlpnOpenListener$1;)V
      44: astore_3
      45: aload_1
      46: invokevirtual #46                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      49: aload_3
      50: invokevirtual #47                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
      53: aload_0
      54: getfield      #1                  // Field listeners:Ljava/util/Map;
      57: invokeinterface #48,  1           // InterfaceMethod java/util/Map.size:()I
      62: anewarray     #49                 // class java/lang/String
      65: astore        4
      67: new           #25                 // class java/util/ArrayList
      70: dup
      71: aload_0
      72: getfield      #1                  // Field listeners:Ljava/util/Map;
      75: invokeinterface #50,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      80: invokespecial #51                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      83: astore        5
      85: aload         5
      87: invokestatic  #52                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      90: iconst_0
      91: istore        6
      93: iload         6
      95: aload         5
      97: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
     102: if_icmpge     131
     105: aload         4
     107: iload         6
     109: aload         5
     111: iload         6
     113: invokeinterface #53,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     118: checkcast     #19                 // class io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry
     121: getfield      #54                 // Field io/undertow/server/protocol/http/JDK9AlpnOpenListener$ListenerEntry.protocol:Ljava/lang/String;
     124: aastore
     125: iinc          6, 1
     128: goto          93
     131: aload_2
     132: invokevirtual #55                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
     135: astore        6
     137: getstatic     #56                 // Field io/undertow/util/ALPN.JDK_9_ALPN_METHODS:Lio/undertow/util/ALPN$JDK9ALPNMethods;
     140: invokevirtual #57                 // Method io/undertow/util/ALPN$JDK9ALPNMethods.setApplicationProtocols:()Ljava/lang/reflect/Method;
     143: aload         6
     145: iconst_1
     146: anewarray     #58                 // class java/lang/Object
     149: dup
     150: iconst_0
     151: aload         4
     153: aastore
     154: invokevirtual #59                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: aload_2
     159: aload         6
     161: invokevirtual #60                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
     164: goto          183
     167: astore        6
     169: getstatic     #63                 // Field io/undertow/UndertowLogger.ROOT_LOGGER:Lio/undertow/UndertowLogger;
     172: aload         6
     174: invokeinterface #64,  2           // InterfaceMethod io/undertow/UndertowLogger.alpnConnectionFailed:(Ljava/lang/Exception;)V
     179: aload_1
     180: invokestatic  #65                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     183: aload_3
     184: aload_1
     185: invokevirtual #46                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     188: invokevirtual #66                 // Method io/undertow/server/protocol/http/JDK9AlpnOpenListener$AlpnConnectionListener.handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
     191: return
    Exception table:
       from    to  target type
         131   164   167   Class java/lang/IllegalAccessException
         131   164   167   Class java/lang/reflect/InvocationTargetException

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #67                 // class org/xnio/StreamConnection
       5: invokevirtual #68                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return

  static io.undertow.connector.ByteBufferPool access$100(io.undertow.server.protocol.http.JDK9AlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  static java.lang.String access$200(io.undertow.server.protocol.http.JDK9AlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fallbackProtocol:Ljava/lang/String;
       4: areturn

  static java.util.Map access$300(io.undertow.server.protocol.http.JDK9AlpnOpenListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/Map;
       4: areturn
}
