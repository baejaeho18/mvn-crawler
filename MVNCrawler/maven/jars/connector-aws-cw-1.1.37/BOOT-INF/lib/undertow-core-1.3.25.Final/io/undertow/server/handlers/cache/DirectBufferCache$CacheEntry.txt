Compiled from "DirectBufferCache.java"
public final class io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry {
  private static final io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer[] EMPTY_BUFFERS;

  private static final io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer[] INIT_BUFFERS;

  private static final java.lang.Object CLAIM_TOKEN;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry> hitsUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry> refsUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry> enabledUpdator;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry, io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer[]> bufsUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry, java.lang.Object> tokenUpdator;

  private final java.lang.Object key;

  private final int size;

  private final io.undertow.server.handlers.cache.DirectBufferCache cache;

  private final int maxAge;

  private volatile io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer[] buffers;

  private volatile int refs;

  private volatile int hits;

  private volatile java.lang.Object accessToken;

  private volatile int enabled;

  private volatile long expires;

  private io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry(java.lang.Object, int, io.undertow.server.handlers.cache.DirectBufferCache, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field INIT_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       8: putfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field refs:I
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field hits:I
      21: aload_0
      22: ldc2_w        #7                  // long -1l
      25: putfield      #9                  // Field expires:J
      28: aload_0
      29: aload_1
      30: putfield      #10                 // Field key:Ljava/lang/Object;
      33: aload_0
      34: iload_2
      35: putfield      #11                 // Field size:I
      38: aload_0
      39: aload_3
      40: putfield      #12                 // Field cache:Lio/undertow/server/handlers/cache/DirectBufferCache;
      43: aload_0
      44: iload         4
      46: putfield      #13                 // Field maxAge:I
      49: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field size:I
       4: ireturn

  public io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer[] buffers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       4: areturn

  public int hit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hits:I
       4: istore_1
       5: getstatic     #14                 // Field hitsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iload_1
      10: iinc          1, 1
      13: iload_1
      14: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.weakCompareAndSet:(Ljava/lang/Object;II)Z
      17: ifeq          22
      20: iload_1
      21: ireturn
      22: goto          0

  public java.lang.Object key();
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Ljava/lang/Object;
       4: areturn

  public boolean enabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field enabled:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void enable();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxAge:I
       4: iconst_m1
       5: if_icmpne     18
       8: aload_0
       9: ldc2_w        #7                  // long -1l
      12: putfield      #9                  // Field expires:J
      15: goto          31
      18: aload_0
      19: invokestatic  #17                 // Method java/lang/System.currentTimeMillis:()J
      22: aload_0
      23: getfield      #13                 // Field maxAge:I
      26: i2l
      27: ladd
      28: putfield      #9                  // Field expires:J
      31: aload_0
      32: iconst_2
      33: putfield      #16                 // Field enabled:I
      36: return

  public void disable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #16                 // Field enabled:I
       5: return

  public boolean claimEnable();
    Code:
       0: getstatic     #18                 // Field enabledUpdator:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ireturn

  public boolean reference();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refs:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: if_icmpge     12
      10: iconst_0
      11: ireturn
      12: getstatic     #20                 // Field refsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: iload_1
      17: iinc          1, 1
      20: iload_1
      21: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: goto          0

  public boolean dereference();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refs:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: if_icmpge     12
      10: iconst_0
      11: ireturn
      12: getstatic     #20                 // Field refsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: iload_1
      17: iinc          1, -1
      20: iload_1
      21: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifeq          37
      27: iload_1
      28: ifne          35
      31: aload_0
      32: invokespecial #21                 // Method destroy:()V
      35: iconst_1
      36: ireturn
      37: goto          0

  public boolean allocate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       4: arraylength
       5: ifle          10
       8: iconst_1
       9: ireturn
      10: getstatic     #22                 // Field bufsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      13: aload_0
      14: getstatic     #3                  // Field INIT_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      17: getstatic     #23                 // Field EMPTY_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      20: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifne          28
      26: iconst_1
      27: ireturn
      28: aload_0
      29: getfield      #11                 // Field size:I
      32: istore_1
      33: iconst_1
      34: istore_2
      35: aload_0
      36: getfield      #12                 // Field cache:Lio/undertow/server/handlers/cache/DirectBufferCache;
      39: astore_3
      40: iload_1
      41: aload_3
      42: invokestatic  #25                 // Method io/undertow/server/handlers/cache/DirectBufferCache.access$100:(Lio/undertow/server/handlers/cache/DirectBufferCache;)I
      45: isub
      46: dup
      47: istore_1
      48: ifle          57
      51: iinc          2, 1
      54: goto          40
      57: aload_3
      58: invokestatic  #26                 // Method io/undertow/server/handlers/cache/DirectBufferCache.access$200:(Lio/undertow/server/handlers/cache/DirectBufferCache;)Lio/undertow/server/handlers/cache/LimitedBufferSlicePool;
      61: astore        4
      63: aload         4
      65: iload_2
      66: invokevirtual #27                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool.canAllocate:(I)Z
      69: ifne          81
      72: aload_0
      73: getstatic     #3                  // Field INIT_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      76: putfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      79: iconst_0
      80: ireturn
      81: iload_2
      82: anewarray     #28                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
      85: astore        5
      87: iconst_0
      88: istore        6
      90: iload         6
      92: iload_2
      93: if_icmpge     149
      96: aload         4
      98: invokevirtual #29                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool.allocate:()Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
     101: astore        7
     103: aload         7
     105: ifnonnull     136
     108: iinc          6, -1
     111: iload         6
     113: iflt          127
     116: aload         5
     118: iload         6
     120: aaload
     121: invokevirtual #30                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer.free:()V
     124: goto          108
     127: aload_0
     128: getstatic     #3                  // Field INIT_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
     131: putfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
     134: iconst_0
     135: ireturn
     136: aload         5
     138: iload         6
     140: aload         7
     142: aastore
     143: iinc          6, 1
     146: goto          90
     149: aload_0
     150: aload         5
     152: putfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
     155: iconst_1
     156: ireturn

  private void destroy();
    Code:
       0: aload_0
       1: getstatic     #23                 // Field EMPTY_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       4: putfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       7: aload_0
       8: getfield      #4                  // Field buffers:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      11: astore_1
      12: aload_1
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     38
      22: aload_1
      23: iload_3
      24: aaload
      25: astore        4
      27: aload         4
      29: invokevirtual #30                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer.free:()V
      32: iinc          3, 1
      35: goto          17
      38: return

  java.lang.Object claimToken();
    Code:
       0: aload_0
       1: getfield      #31                 // Field accessToken:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: getstatic     #32                 // Field CLAIM_TOKEN:Ljava/lang/Object;
       9: if_acmpne     16
      12: getstatic     #33                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      15: areturn
      16: getstatic     #34                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: aload_0
      20: aload_1
      21: getstatic     #32                 // Field CLAIM_TOKEN:Ljava/lang/Object;
      24: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      27: ifeq          32
      30: aload_1
      31: areturn
      32: goto          0

  boolean setToken(java.lang.Object);
    Code:
       0: getstatic     #34                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: getstatic     #32                 // Field CLAIM_TOKEN:Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  java.lang.Object clearToken();
    Code:
       0: getstatic     #34                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_1
       9: aload_1
      10: getstatic     #32                 // Field CLAIM_TOKEN:Ljava/lang/Object;
      13: if_acmpne     20
      16: aconst_null
      17: goto          21
      20: aload_1
      21: areturn

  long getExpires();
    Code:
       0: aload_0
       1: getfield      #9                  // Field expires:J
       4: lreturn

  io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry(java.lang.Object, int, io.undertow.server.handlers.cache.DirectBufferCache, int, io.undertow.server.handlers.cache.DirectBufferCache$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #1                  // Method "<init>":(Ljava/lang/Object;ILio/undertow/server/handlers/cache/DirectBufferCache;I)V
       9: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #28                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
       4: putstatic     #23                 // Field EMPTY_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
       7: iconst_0
       8: anewarray     #28                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
      11: putstatic     #3                  // Field INIT_BUFFERS:[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
      14: new           #36                 // class java/lang/Object
      17: dup
      18: invokespecial #2                  // Method java/lang/Object."<init>":()V
      21: putstatic     #32                 // Field CLAIM_TOKEN:Ljava/lang/Object;
      24: ldc           #37                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      26: ldc           #38                 // String hits
      28: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      31: putstatic     #14                 // Field hitsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      34: ldc           #37                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      36: ldc           #40                 // String refs
      38: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      41: putstatic     #20                 // Field refsUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      44: ldc           #37                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      46: ldc           #41                 // String enabled
      48: invokestatic  #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      51: putstatic     #18                 // Field enabledUpdator:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      54: ldc           #37                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      56: ldc           #42                 // class "[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;"
      58: ldc           #43                 // String buffers
      60: invokestatic  #44                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      63: putstatic     #22                 // Field bufsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      66: ldc           #37                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      68: ldc           #36                 // class java/lang/Object
      70: ldc           #45                 // String accessToken
      72: invokestatic  #44                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      75: putstatic     #34                 // Field tokenUpdator:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      78: return
}
