Compiled from "HttpResponseParser.java"
abstract class io.undertow.client.http.HttpResponseParser {
  public static final io.undertow.client.http.HttpResponseParser INSTANCE;

  private static final int NORMAL;

  private static final int WHITESPACE;

  private static final int BEGIN_LINE_END;

  private static final int LINE_END;

  private static final int AWAIT_DATA_END;

  io.undertow.client.http.HttpResponseParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  abstract void handleHttpVersion(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);

  abstract void handleHeader(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);

  public void handle(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_2
       1: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
       4: ifne          22
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #3                  // Method handleHttpVersion:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
      14: aload_1
      15: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      18: ifne          22
      21: return
      22: aload_2
      23: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      26: iconst_1
      27: if_icmpne     45
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokevirtual #6                  // Method handleStatusCode:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
      37: aload_1
      38: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      41: ifne          45
      44: return
      45: aload_2
      46: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      49: iconst_2
      50: if_icmpne     68
      53: aload_0
      54: aload_1
      55: aload_2
      56: aload_3
      57: invokevirtual #7                  // Method handleReasonPhrase:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
      60: aload_1
      61: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      64: ifne          68
      67: return
      68: aload_2
      69: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      72: iconst_3
      73: if_icmpne     91
      76: aload_0
      77: aload_1
      78: aload_2
      79: aload_3
      80: invokevirtual #8                  // Method handleAfterReasonPhrase:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
      83: aload_1
      84: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      87: ifne          91
      90: return
      91: aload_2
      92: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      95: bipush        6
      97: if_icmpeq     146
     100: aload_2
     101: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
     104: iconst_4
     105: if_icmpne     123
     108: aload_0
     109: aload_1
     110: aload_2
     111: aload_3
     112: invokevirtual #9                  // Method handleHeader:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
     115: aload_1
     116: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
     119: ifne          123
     122: return
     123: aload_2
     124: getfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
     127: iconst_5
     128: if_icmpne     91
     131: aload_0
     132: aload_1
     133: aload_2
     134: aload_3
     135: invokevirtual #10                 // Method handleHeaderValue:(Ljava/nio/ByteBuffer;Lio/undertow/client/http/ResponseParseState;Lio/undertow/client/http/HttpResponseBuilder;)V
     138: aload_1
     139: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
     142: ifne          91
     145: return
     146: return

  final void handleStatusCode(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_2
       1: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
       4: astore        4
       6: aload_1
       7: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      10: ifeq          86
      13: aload_1
      14: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      17: i2c
      18: istore        5
      20: iload         5
      22: bipush        32
      24: if_icmpeq     34
      27: iload         5
      29: bipush        9
      31: if_icmpne     75
      34: aload_3
      35: aload         4
      37: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokestatic  #14                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      43: invokevirtual #15                 // Method io/undertow/client/http/HttpResponseBuilder.setStatusCode:(I)V
      46: aload_2
      47: iconst_2
      48: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      51: aload_2
      52: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
      55: iconst_0
      56: invokevirtual #16                 // Method java/lang/StringBuilder.setLength:(I)V
      59: aload_2
      60: iconst_0
      61: putfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
      64: aload_2
      65: iconst_0
      66: putfield      #18                 // Field io/undertow/client/http/ResponseParseState.pos:I
      69: aload_2
      70: aconst_null
      71: putfield      #19                 // Field io/undertow/client/http/ResponseParseState.nextHeader:Lio/undertow/util/HttpString;
      74: return
      75: aload         4
      77: iload         5
      79: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: pop
      83: goto          6
      86: return

  final void handleReasonPhrase(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_2
       1: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
       4: astore        4
       6: aload_1
       7: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      10: ifeq          90
      13: aload_1
      14: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      17: i2c
      18: istore        5
      20: iload         5
      22: bipush        10
      24: if_icmpeq     34
      27: iload         5
      29: bipush        13
      31: if_icmpne     79
      34: aload_3
      35: aload         4
      37: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #21                 // Method io/undertow/client/http/HttpResponseBuilder.setReasonPhrase:(Ljava/lang/String;)V
      43: aload_2
      44: iconst_3
      45: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      48: aload_2
      49: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
      52: iconst_0
      53: invokevirtual #16                 // Method java/lang/StringBuilder.setLength:(I)V
      56: aload_2
      57: iconst_0
      58: putfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
      61: aload_2
      62: iload         5
      64: i2b
      65: putfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
      68: aload_2
      69: iconst_0
      70: putfield      #18                 // Field io/undertow/client/http/ResponseParseState.pos:I
      73: aload_2
      74: aconst_null
      75: putfield      #19                 // Field io/undertow/client/http/ResponseParseState.nextHeader:Lio/undertow/util/HttpString;
      78: return
      79: aload         4
      81: iload         5
      83: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      86: pop
      87: goto          6
      90: return

  final void handleHeaderValue(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_2
       1: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
       4: astore        4
       6: aload         4
       8: ifnonnull     25
      11: new           #23                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      18: astore        4
      20: aload_2
      21: iconst_0
      22: putfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
      25: aload_2
      26: getfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
      29: istore        5
      31: aload_1
      32: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      35: ifeq          332
      38: aload_1
      39: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      42: istore        6
      44: iload         5
      46: tableswitch   { // 0 to 4
                     0: 80
                     1: 138
                     2: 212
                     3: 212
                     4: 322
               default: 329
          }
      80: iload         6
      82: bipush        13
      84: if_icmpne     93
      87: iconst_2
      88: istore        5
      90: goto          329
      93: iload         6
      95: bipush        10
      97: if_icmpne     106
     100: iconst_3
     101: istore        5
     103: goto          329
     106: iload         6
     108: bipush        32
     110: if_icmpeq     120
     113: iload         6
     115: bipush        9
     117: if_icmpne     126
     120: iconst_1
     121: istore        5
     123: goto          329
     126: aload         4
     128: iload         6
     130: i2c
     131: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     134: pop
     135: goto          329
     138: iload         6
     140: bipush        13
     142: if_icmpne     151
     145: iconst_2
     146: istore        5
     148: goto          329
     151: iload         6
     153: bipush        10
     155: if_icmpne     164
     158: iconst_3
     159: istore        5
     161: goto          329
     164: iload         6
     166: bipush        32
     168: if_icmpeq     329
     171: iload         6
     173: bipush        9
     175: if_icmpne     181
     178: goto          329
     181: aload         4
     183: invokevirtual #26                 // Method java/lang/StringBuilder.length:()I
     186: ifle          197
     189: aload         4
     191: bipush        32
     193: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     196: pop
     197: aload         4
     199: iload         6
     201: i2c
     202: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     205: pop
     206: iconst_0
     207: istore        5
     209: goto          329
     212: iload         6
     214: bipush        10
     216: if_icmpne     231
     219: iload         5
     221: iconst_2
     222: if_icmpne     231
     225: iconst_3
     226: istore        5
     228: goto          329
     231: iload         6
     233: bipush        9
     235: if_icmpeq     245
     238: iload         6
     240: bipush        32
     242: if_icmpne     251
     245: iconst_1
     246: istore        5
     248: goto          329
     251: aload_2
     252: getfield      #19                 // Field io/undertow/client/http/ResponseParseState.nextHeader:Lio/undertow/util/HttpString;
     255: astore        7
     257: aload         4
     259: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     262: astore        8
     264: aload_3
     265: invokevirtual #27                 // Method io/undertow/client/http/HttpResponseBuilder.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     268: aload         7
     270: aload         8
     272: invokevirtual #28                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     275: pop
     276: aload_2
     277: aconst_null
     278: putfield      #19                 // Field io/undertow/client/http/ResponseParseState.nextHeader:Lio/undertow/util/HttpString;
     281: aload_2
     282: iload         6
     284: putfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
     287: aload_2
     288: getfield      #11                 // Field io/undertow/client/http/ResponseParseState.stringBuilder:Ljava/lang/StringBuilder;
     291: iconst_0
     292: invokevirtual #16                 // Method java/lang/StringBuilder.setLength:(I)V
     295: iload         6
     297: bipush        13
     299: if_icmpne     308
     302: iconst_4
     303: istore        5
     305: goto          319
     308: aload_2
     309: iconst_4
     310: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
     313: aload_2
     314: iconst_0
     315: putfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
     318: return
     319: goto          329
     322: aload_2
     323: bipush        6
     325: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
     328: return
     329: goto          31
     332: aload_2
     333: iload         5
     335: putfield      #17                 // Field io/undertow/client/http/ResponseParseState.parseState:I
     338: return

  protected void handleAfterReasonPhrase(java.nio.ByteBuffer, io.undertow.client.http.ResponseParseState, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_2
       1: getfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
       4: bipush        10
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore        4
      16: aload_1
      17: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      20: ifeq          109
      23: aload_1
      24: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      27: istore        5
      29: iload         4
      31: ifeq          60
      34: iload         5
      36: bipush        10
      38: if_icmpne     48
      41: aload_2
      42: bipush        6
      44: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      47: return
      48: aload_2
      49: iconst_4
      50: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      53: aload_2
      54: iload         5
      56: putfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
      59: return
      60: iload         5
      62: bipush        10
      64: if_icmpne     73
      67: iconst_1
      68: istore        4
      70: goto          106
      73: iload         5
      75: bipush        13
      77: if_icmpeq     106
      80: iload         5
      82: bipush        32
      84: if_icmpeq     106
      87: iload         5
      89: bipush        9
      91: if_icmpeq     106
      94: aload_2
      95: iconst_4
      96: putfield      #2                  // Field io/undertow/client/http/ResponseParseState.state:I
      99: aload_2
     100: iload         5
     102: putfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
     105: return
     106: goto          16
     109: iload         4
     111: ifeq          120
     114: aload_2
     115: bipush        10
     117: putfield      #22                 // Field io/undertow/client/http/ResponseParseState.leftOver:B
     120: return

  protected static java.util.Map<java.lang.String, io.undertow.util.HttpString> httpStrings();
    Code:
       0: new           #29                 // class java/util/HashMap
       3: dup
       4: invokespecial #30                 // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: iconst_3
       9: anewarray     #31                 // class java/lang/Class
      12: dup
      13: iconst_0
      14: ldc           #32                 // class io/undertow/util/Headers
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #33                 // class io/undertow/util/Methods
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #34                 // class io/undertow/util/Protocols
      26: aastore
      27: astore_1
      28: aload_1
      29: astore_2
      30: aload_2
      31: arraylength
      32: istore_3
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     151
      42: aload_2
      43: iload         4
      45: aaload
      46: astore        5
      48: aload         5
      50: invokevirtual #35                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      53: astore        6
      55: aload         6
      57: arraylength
      58: istore        7
      60: iconst_0
      61: istore        8
      63: iload         8
      65: iload         7
      67: if_icmpge     145
      70: aload         6
      72: iload         8
      74: aaload
      75: astore        9
      77: aload         9
      79: invokevirtual #36                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      82: ldc           #37                 // class io/undertow/util/HttpString
      84: invokevirtual #38                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifeq          139
      90: aload         9
      92: iconst_1
      93: invokevirtual #39                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      96: aconst_null
      97: astore        10
      99: aload         9
     101: aconst_null
     102: invokevirtual #40                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #37                 // class io/undertow/util/HttpString
     108: astore        10
     110: aload_0
     111: aload         10
     113: invokevirtual #41                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     116: aload         10
     118: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: goto          139
     127: astore        11
     129: new           #44                 // class java/lang/RuntimeException
     132: dup
     133: aload         11
     135: invokespecial #45                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     138: athrow
     139: iinc          8, 1
     142: goto          63
     145: iinc          4, 1
     148: goto          36
     151: aload_0
     152: areturn
    Exception table:
       from    to  target type
          99   124   127   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // class io/undertow/client/http/HttpResponseParser
       9: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #48                 // String $$generated
      17: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: iconst_0
      24: ldc           #25                 // class io/undertow/client/http/HttpResponseParser
      26: invokevirtual #49                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      29: invokestatic  #50                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      32: astore_0
      33: aload_0
      34: invokevirtual #51                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      37: checkcast     #25                 // class io/undertow/client/http/HttpResponseParser
      40: putstatic     #52                 // Field INSTANCE:Lio/undertow/client/http/HttpResponseParser;
      43: goto          56
      46: astore_0
      47: new           #44                 // class java/lang/RuntimeException
      50: dup
      51: aload_0
      52: invokespecial #45                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    43    46   Class java/lang/Exception
}
