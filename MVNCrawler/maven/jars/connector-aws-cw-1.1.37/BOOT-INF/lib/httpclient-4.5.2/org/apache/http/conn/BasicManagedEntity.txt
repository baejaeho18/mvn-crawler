Compiled from "BasicManagedEntity.java"
public class org.apache.http.conn.BasicManagedEntity extends org.apache.http.entity.HttpEntityWrapper implements org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher {
  protected org.apache.http.conn.ManagedClientConnection managedConn;

  protected final boolean attemptReuse;

  public org.apache.http.conn.BasicManagedEntity(org.apache.http.HttpEntity, org.apache.http.conn.ManagedClientConnection, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/http/entity/HttpEntityWrapper."<init>":(Lorg/apache/http/HttpEntity;)V
       5: aload_2
       6: ldc           #2                  // String Connection
       8: invokestatic  #3                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      17: aload_0
      18: iload_3
      19: putfield      #5                  // Field attemptReuse:Z
      22: return

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public java.io.InputStream getContent() throws java.io.IOException;
    Code:
       0: new           #6                  // class org/apache/http/conn/EofSensorInputStream
       3: dup
       4: aload_0
       5: getfield      #7                  // Field wrappedEntity:Lorg/apache/http/HttpEntity;
       8: invokeinterface #8,  1            // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      13: aload_0
      14: invokespecial #9                  // Method org/apache/http/conn/EofSensorInputStream."<init>":(Ljava/io/InputStream;Lorg/apache/http/conn/EofSensorWatcher;)V
      17: areturn

  private void ensureConsumed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #5                  // Field attemptReuse:Z
      12: ifeq          34
      15: aload_0
      16: getfield      #7                  // Field wrappedEntity:Lorg/apache/http/HttpEntity;
      19: invokestatic  #10                 // Method org/apache/http/util/EntityUtils.consume:(Lorg/apache/http/HttpEntity;)V
      22: aload_0
      23: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      26: invokeinterface #11,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.markReusable:()V
      31: goto          43
      34: aload_0
      35: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      38: invokeinterface #12,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.unmarkReusable:()V
      43: aload_0
      44: invokevirtual #13                 // Method releaseManagedConnection:()V
      47: goto          57
      50: astore_1
      51: aload_0
      52: invokevirtual #13                 // Method releaseManagedConnection:()V
      55: aload_1
      56: athrow
      57: return
    Exception table:
       from    to  target type
           8    43    50   any
          50    51    50   any

  public void consumeContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method ensureConsumed:()V
       4: return

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/apache/http/entity/HttpEntityWrapper.writeTo:(Ljava/io/OutputStream;)V
       5: aload_0
       6: invokespecial #14                 // Method ensureConsumed:()V
       9: return

  public void releaseConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method ensureConsumed:()V
       4: return

  public void abortConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnull        32
       7: aload_0
       8: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      11: invokeinterface #16,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.abortConnection:()V
      16: aload_0
      17: aconst_null
      18: putfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      21: goto          32
      24: astore_1
      25: aload_0
      26: aconst_null
      27: putfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           7    16    24   any
          24    25    24   any

  public boolean eofDetected(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnull        39
       7: aload_0
       8: getfield      #5                  // Field attemptReuse:Z
      11: ifeq          30
      14: aload_1
      15: invokevirtual #17                 // Method java/io/InputStream.close:()V
      18: aload_0
      19: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      22: invokeinterface #11,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.markReusable:()V
      27: goto          39
      30: aload_0
      31: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      34: invokeinterface #12,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.unmarkReusable:()V
      39: aload_0
      40: invokevirtual #13                 // Method releaseManagedConnection:()V
      43: goto          53
      46: astore_2
      47: aload_0
      48: invokevirtual #13                 // Method releaseManagedConnection:()V
      51: aload_2
      52: athrow
      53: iconst_0
      54: ireturn
    Exception table:
       from    to  target type
           0    39    46   any
          46    47    46   any

  public boolean streamClosed(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnull        59
       7: aload_0
       8: getfield      #5                  // Field attemptReuse:Z
      11: ifeq          50
      14: aload_0
      15: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      18: invokeinterface #18,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.isOpen:()Z
      23: istore_2
      24: aload_1
      25: invokevirtual #17                 // Method java/io/InputStream.close:()V
      28: aload_0
      29: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      32: invokeinterface #11,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.markReusable:()V
      37: goto          47
      40: astore_3
      41: iload_2
      42: ifeq          47
      45: aload_3
      46: athrow
      47: goto          59
      50: aload_0
      51: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      54: invokeinterface #12,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.unmarkReusable:()V
      59: aload_0
      60: invokevirtual #13                 // Method releaseManagedConnection:()V
      63: goto          75
      66: astore        4
      68: aload_0
      69: invokevirtual #13                 // Method releaseManagedConnection:()V
      72: aload         4
      74: athrow
      75: iconst_0
      76: ireturn
    Exception table:
       from    to  target type
          24    37    40   Class java/net/SocketException
           0    59    66   any
          66    68    66   any

  public boolean streamAbort(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnull        16
       7: aload_0
       8: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      11: invokeinterface #16,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.abortConnection:()V
      16: iconst_0
      17: ireturn

  protected void releaseManagedConnection() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
       4: ifnull        32
       7: aload_0
       8: getfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      11: invokeinterface #20,  1           // InterfaceMethod org/apache/http/conn/ManagedClientConnection.releaseConnection:()V
      16: aload_0
      17: aconst_null
      18: putfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      21: goto          32
      24: astore_1
      25: aload_0
      26: aconst_null
      27: putfield      #4                  // Field managedConn:Lorg/apache/http/conn/ManagedClientConnection;
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           7    16    24   any
          24    25    24   any
}
