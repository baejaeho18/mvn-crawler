Compiled from "AWSIot.java"
public interface com.amazonaws.services.iot.AWSIot {
  public static final java.lang.String ENDPOINT_PREFIX;

  public abstract void setEndpoint(java.lang.String);

  public abstract void setRegion(com.amazonaws.regions.Region);

  public abstract com.amazonaws.services.iot.model.AcceptCertificateTransferResult acceptCertificateTransfer(com.amazonaws.services.iot.model.AcceptCertificateTransferRequest);

  public abstract com.amazonaws.services.iot.model.AttachPrincipalPolicyResult attachPrincipalPolicy(com.amazonaws.services.iot.model.AttachPrincipalPolicyRequest);

  public abstract com.amazonaws.services.iot.model.AttachThingPrincipalResult attachThingPrincipal(com.amazonaws.services.iot.model.AttachThingPrincipalRequest);

  public abstract com.amazonaws.services.iot.model.CancelCertificateTransferResult cancelCertificateTransfer(com.amazonaws.services.iot.model.CancelCertificateTransferRequest);

  public abstract com.amazonaws.services.iot.model.CreateCertificateFromCsrResult createCertificateFromCsr(com.amazonaws.services.iot.model.CreateCertificateFromCsrRequest);

  public abstract com.amazonaws.services.iot.model.CreateKeysAndCertificateResult createKeysAndCertificate(com.amazonaws.services.iot.model.CreateKeysAndCertificateRequest);

  public abstract com.amazonaws.services.iot.model.CreatePolicyResult createPolicy(com.amazonaws.services.iot.model.CreatePolicyRequest);

  public abstract com.amazonaws.services.iot.model.CreatePolicyVersionResult createPolicyVersion(com.amazonaws.services.iot.model.CreatePolicyVersionRequest);

  public abstract com.amazonaws.services.iot.model.CreateThingResult createThing(com.amazonaws.services.iot.model.CreateThingRequest);

  public abstract com.amazonaws.services.iot.model.CreateTopicRuleResult createTopicRule(com.amazonaws.services.iot.model.CreateTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.DeleteCACertificateResult deleteCACertificate(com.amazonaws.services.iot.model.DeleteCACertificateRequest);

  public abstract com.amazonaws.services.iot.model.DeleteCertificateResult deleteCertificate(com.amazonaws.services.iot.model.DeleteCertificateRequest);

  public abstract com.amazonaws.services.iot.model.DeletePolicyResult deletePolicy(com.amazonaws.services.iot.model.DeletePolicyRequest);

  public abstract com.amazonaws.services.iot.model.DeletePolicyVersionResult deletePolicyVersion(com.amazonaws.services.iot.model.DeletePolicyVersionRequest);

  public abstract com.amazonaws.services.iot.model.DeleteRegistrationCodeResult deleteRegistrationCode(com.amazonaws.services.iot.model.DeleteRegistrationCodeRequest);

  public abstract com.amazonaws.services.iot.model.DeleteThingResult deleteThing(com.amazonaws.services.iot.model.DeleteThingRequest);

  public abstract com.amazonaws.services.iot.model.DeleteTopicRuleResult deleteTopicRule(com.amazonaws.services.iot.model.DeleteTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.DescribeCACertificateResult describeCACertificate(com.amazonaws.services.iot.model.DescribeCACertificateRequest);

  public abstract com.amazonaws.services.iot.model.DescribeCertificateResult describeCertificate(com.amazonaws.services.iot.model.DescribeCertificateRequest);

  public abstract com.amazonaws.services.iot.model.DescribeEndpointResult describeEndpoint(com.amazonaws.services.iot.model.DescribeEndpointRequest);

  public abstract com.amazonaws.services.iot.model.DescribeThingResult describeThing(com.amazonaws.services.iot.model.DescribeThingRequest);

  public abstract com.amazonaws.services.iot.model.DetachPrincipalPolicyResult detachPrincipalPolicy(com.amazonaws.services.iot.model.DetachPrincipalPolicyRequest);

  public abstract com.amazonaws.services.iot.model.DetachThingPrincipalResult detachThingPrincipal(com.amazonaws.services.iot.model.DetachThingPrincipalRequest);

  public abstract com.amazonaws.services.iot.model.DisableTopicRuleResult disableTopicRule(com.amazonaws.services.iot.model.DisableTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.EnableTopicRuleResult enableTopicRule(com.amazonaws.services.iot.model.EnableTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.GetLoggingOptionsResult getLoggingOptions(com.amazonaws.services.iot.model.GetLoggingOptionsRequest);

  public abstract com.amazonaws.services.iot.model.GetPolicyResult getPolicy(com.amazonaws.services.iot.model.GetPolicyRequest);

  public abstract com.amazonaws.services.iot.model.GetPolicyVersionResult getPolicyVersion(com.amazonaws.services.iot.model.GetPolicyVersionRequest);

  public abstract com.amazonaws.services.iot.model.GetRegistrationCodeResult getRegistrationCode(com.amazonaws.services.iot.model.GetRegistrationCodeRequest);

  public abstract com.amazonaws.services.iot.model.GetTopicRuleResult getTopicRule(com.amazonaws.services.iot.model.GetTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.ListCACertificatesResult listCACertificates(com.amazonaws.services.iot.model.ListCACertificatesRequest);

  public abstract com.amazonaws.services.iot.model.ListCertificatesResult listCertificates(com.amazonaws.services.iot.model.ListCertificatesRequest);

  public abstract com.amazonaws.services.iot.model.ListCertificatesByCAResult listCertificatesByCA(com.amazonaws.services.iot.model.ListCertificatesByCARequest);

  public abstract com.amazonaws.services.iot.model.ListPoliciesResult listPolicies(com.amazonaws.services.iot.model.ListPoliciesRequest);

  public abstract com.amazonaws.services.iot.model.ListPolicyPrincipalsResult listPolicyPrincipals(com.amazonaws.services.iot.model.ListPolicyPrincipalsRequest);

  public abstract com.amazonaws.services.iot.model.ListPolicyVersionsResult listPolicyVersions(com.amazonaws.services.iot.model.ListPolicyVersionsRequest);

  public abstract com.amazonaws.services.iot.model.ListPrincipalPoliciesResult listPrincipalPolicies(com.amazonaws.services.iot.model.ListPrincipalPoliciesRequest);

  public abstract com.amazonaws.services.iot.model.ListPrincipalThingsResult listPrincipalThings(com.amazonaws.services.iot.model.ListPrincipalThingsRequest);

  public abstract com.amazonaws.services.iot.model.ListThingPrincipalsResult listThingPrincipals(com.amazonaws.services.iot.model.ListThingPrincipalsRequest);

  public abstract com.amazonaws.services.iot.model.ListThingsResult listThings(com.amazonaws.services.iot.model.ListThingsRequest);

  public abstract com.amazonaws.services.iot.model.ListTopicRulesResult listTopicRules(com.amazonaws.services.iot.model.ListTopicRulesRequest);

  public abstract com.amazonaws.services.iot.model.RegisterCACertificateResult registerCACertificate(com.amazonaws.services.iot.model.RegisterCACertificateRequest);

  public abstract com.amazonaws.services.iot.model.RegisterCertificateResult registerCertificate(com.amazonaws.services.iot.model.RegisterCertificateRequest);

  public abstract com.amazonaws.services.iot.model.RejectCertificateTransferResult rejectCertificateTransfer(com.amazonaws.services.iot.model.RejectCertificateTransferRequest);

  public abstract com.amazonaws.services.iot.model.ReplaceTopicRuleResult replaceTopicRule(com.amazonaws.services.iot.model.ReplaceTopicRuleRequest);

  public abstract com.amazonaws.services.iot.model.SetDefaultPolicyVersionResult setDefaultPolicyVersion(com.amazonaws.services.iot.model.SetDefaultPolicyVersionRequest);

  public abstract com.amazonaws.services.iot.model.SetLoggingOptionsResult setLoggingOptions(com.amazonaws.services.iot.model.SetLoggingOptionsRequest);

  public abstract com.amazonaws.services.iot.model.TransferCertificateResult transferCertificate(com.amazonaws.services.iot.model.TransferCertificateRequest);

  public abstract com.amazonaws.services.iot.model.UpdateCACertificateResult updateCACertificate(com.amazonaws.services.iot.model.UpdateCACertificateRequest);

  public abstract com.amazonaws.services.iot.model.UpdateCertificateResult updateCertificate(com.amazonaws.services.iot.model.UpdateCertificateRequest);

  public abstract com.amazonaws.services.iot.model.UpdateThingResult updateThing(com.amazonaws.services.iot.model.UpdateThingRequest);

  public abstract void shutdown();

  public abstract com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest);
}
