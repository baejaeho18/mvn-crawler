Compiled from "SqlDateSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer extends com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase<java.sql.Date> {
  public com.fasterxml.jackson.databind.ser.std.SqlDateSerializer();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/Boolean;)V
       7: return

  protected com.fasterxml.jackson.databind.ser.std.SqlDateSerializer(java.lang.Boolean);
    Code:
       0: aload_0
       1: ldc_w         #3                  // class java/sql/Date
       4: aload_1
       5: aconst_null
       6: invokespecial #4                  // Method com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase."<init>":(Ljava/lang/Class;Ljava/lang/Boolean;Ljava/text/DateFormat;)V
       9: return

  public com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean, java.text.DateFormat);
    Code:
       0: new           #5                  // class com/fasterxml/jackson/databind/ser/std/SqlDateSerializer
       3: dup
       4: aload_1
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Boolean;)V
       8: areturn

  protected long _timestamp(java.sql.Date);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: lconst_0
       5: goto          12
       8: aload_1
       9: invokevirtual #6                  // Method java/sql/Date.getTime:()J
      12: lreturn

  public void serialize(java.sql.Date, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #7                  // Method _asTimestamp:(Lcom/fasterxml/jackson/databind/SerializerProvider;)Z
       5: ifeq          20
       8: aload_2
       9: aload_0
      10: aload_1
      11: invokevirtual #8                  // Method _timestamp:(Ljava/sql/Date;)J
      14: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
      17: goto          28
      20: aload_2
      21: aload_1
      22: invokevirtual #10                 // Method java/sql/Date.toString:()Ljava/lang/String;
      25: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
      28: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ldc           #12                 // String string
       3: iconst_1
       4: invokevirtual #13                 // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #14                 // Field _useTimestamp:Ljava/lang/Boolean;
       7: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      10: invokevirtual #16                 // Method _acceptJsonFormatVisitor:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Z)V
      13: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class java/sql/Date
       5: aload_2
       6: aload_3
       7: invokevirtual #17                 // Method serialize:(Ljava/sql/Date;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  protected long _timestamp(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class java/sql/Date
       5: invokevirtual #8                  // Method _timestamp:(Ljava/sql/Date;)J
       8: lreturn

  public com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean, java.text.DateFormat);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #18                 // Method withFormat:(Ljava/lang/Boolean;Ljava/text/DateFormat;)Lcom/fasterxml/jackson/databind/ser/std/SqlDateSerializer;
       6: areturn
}
