Compiled from "FailingSerializer.java"
public class com.fasterxml.jackson.databind.ser.impl.FailingSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {
  protected final java.lang.String _msg;

  public com.fasterxml.jackson.databind.ser.impl.FailingSerializer(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field _msg:Ljava/lang/String;
      12: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: new           #4                  // class com/fasterxml/jackson/core/JsonGenerationException
       3: dup
       4: aload_0
       5: getfield      #3                  // Field _msg:Ljava/lang/String;
       8: aload_2
       9: invokespecial #5                  // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: athrow

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aconst_null
       1: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: return
}
