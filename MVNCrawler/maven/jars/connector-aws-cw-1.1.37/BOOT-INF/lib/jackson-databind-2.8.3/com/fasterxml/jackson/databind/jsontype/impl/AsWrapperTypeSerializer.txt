Compiled from "AsWrapperTypeSerializer.java"
public class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase {
  public com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase."<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;)V
       6: return

  public com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _property:Lcom/fasterxml/jackson/databind/BeanProperty;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          24
      12: new           #3                  // class com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer
      15: dup
      16: aload_0
      17: getfield      #4                  // Field _idResolver:Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;
      20: aload_1
      21: invokespecial #5                  // Method "<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;)V
      24: areturn

  public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: getstatic     #6                  // Field com/fasterxml/jackson/annotation/JsonTypeInfo$As.WRAPPER_OBJECT:Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;
       3: areturn

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_2
       7: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      10: ifeq          29
      13: aload_3
      14: ifnull        22
      17: aload_2
      18: aload_3
      19: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      22: aload_2
      23: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      26: goto          42
      29: aload_2
      30: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      33: aload_2
      34: aload_0
      35: aload_3
      36: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeObjectFieldStart:(Ljava/lang/String;)V
      42: return

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #13                 // Method idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload_2
       9: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      12: ifeq          33
      15: aload         4
      17: ifnull        26
      20: aload_2
      21: aload         4
      23: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      26: aload_2
      27: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      30: goto          47
      33: aload_2
      34: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      37: aload_2
      38: aload_0
      39: aload         4
      41: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeObjectFieldStart:(Ljava/lang/String;)V
      47: return

  public void writeTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_2
       7: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      10: ifeq          29
      13: aload_3
      14: ifnull        22
      17: aload_2
      18: aload_3
      19: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      22: aload_2
      23: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
      26: goto          42
      29: aload_2
      30: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      33: aload_2
      34: aload_0
      35: aload_3
      36: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeArrayFieldStart:(Ljava/lang/String;)V
      42: return

  public void writeTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #13                 // Method idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload_2
       9: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      12: ifeq          33
      15: aload         4
      17: ifnull        26
      20: aload_2
      21: aload         4
      23: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      26: aload_2
      27: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
      30: goto          47
      33: aload_2
      34: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      37: aload_2
      38: aload_0
      39: aload         4
      41: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      44: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeArrayFieldStart:(Ljava/lang/String;)V
      47: return

  public void writeTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_2
       7: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      10: ifeq          25
      13: aload_3
      14: ifnull        38
      17: aload_2
      18: aload_3
      19: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      22: goto          38
      25: aload_2
      26: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      29: aload_2
      30: aload_0
      31: aload_3
      32: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      38: return

  public void writeTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #13                 // Method idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload_2
       9: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      12: ifeq          29
      15: aload         4
      17: ifnull        43
      20: aload_2
      21: aload         4
      23: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      26: goto          43
      29: aload_2
      30: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      33: aload_2
      34: aload_0
      35: aload         4
      37: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      40: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      43: return

  public void writeTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       4: aload_2
       5: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       8: ifne          15
      11: aload_2
      12: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
      15: return

  public void writeTypeSuffixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
       4: aload_2
       5: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       8: ifne          15
      11: aload_2
      12: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
      15: return

  public void writeTypeSuffixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifne          11
       7: aload_2
       8: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
      11: return

  public void writeCustomTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifeq          23
       7: aload_3
       8: ifnull        16
      11: aload_2
      12: aload_3
      13: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      16: aload_2
      17: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      20: goto          36
      23: aload_2
      24: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      27: aload_2
      28: aload_0
      29: aload_3
      30: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeObjectFieldStart:(Ljava/lang/String;)V
      36: return

  public void writeCustomTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifeq          23
       7: aload_3
       8: ifnull        16
      11: aload_2
      12: aload_3
      13: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      16: aload_2
      17: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
      20: goto          36
      23: aload_2
      24: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      27: aload_2
      28: aload_0
      29: aload_3
      30: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeArrayFieldStart:(Ljava/lang/String;)V
      36: return

  public void writeCustomTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifeq          19
       7: aload_3
       8: ifnull        32
      11: aload_2
      12: aload_3
      13: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      16: goto          32
      19: aload_2
      20: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      23: aload_2
      24: aload_0
      25: aload_3
      26: invokevirtual #11                 // Method _validTypeId:(Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      32: return

  public void writeCustomTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #19                 // Method writeTypeSuffixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      13: return

  public void writeCustomTypeSuffixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #20                 // Method writeTypeSuffixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      13: return

  public void writeCustomTypeSuffixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #21                 // Method writeTypeSuffixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      13: return

  protected java.lang.String _validTypeId(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #22                 // String
       6: goto          10
       9: aload_1
      10: areturn

  public com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer;
       5: areturn
}
